[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 0, 2, 3, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [76, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 4, 0, 3], [0, 4], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.8062857389450073, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [1.9796187883953236, 1.4667248337291818, 1.0288844269894337, 0.9104498124094278, 0.8199524389770069, 0.7878842769344926, 0.7286017009878455, 0.7038951896405601, 0.6845735898186045, 0.6645822652405625, 0.6270640549595488, 0.6575778577589418, 0.5957588641052437, 0.6052587225909215, 0.5887188362785539, 0.5515187644703419, 0.5468764508704247, 0.5534155435723368, 0.5732309884241528, 0.5198660564854034, 0.5268709917251759, 0.5150786239937737, 0.5208510040150437, 0.5022015945865116, 0.4879683962178158], "accuracy": [0.340509831905365, 0.516180157661438, 0.6244881749153137, 0.6653017997741699, 0.6989829540252686, 0.7010962963104248, 0.7301545143127441, 0.7290979027748108, 0.7423061728477478, 0.7417778372764587, 0.7640998363494873, 0.7405890822410583, 0.7766477465629578, 0.7692511081695557, 0.77677983045578, 0.7980451583862305, 0.7952714562416077, 0.7911768555641174, 0.7840443849563599, 0.8078193068504333, 0.8039889335632324, 0.8083476424217224, 0.8079513907432556, 0.806630551815033, 0.8158763647079468], "val_loss": [1.5896404130118233, 0.7640420709337506, 0.7661144052233014, 0.638618963105338, 0.6011058262416294, 0.605388913835798, 0.5253879853657314, 0.5404352460588727, 0.513068675994873, 0.5155957085745675, 0.486682619367327, 0.4645746776035854, 0.4485940933227539, 0.4390393154961722, 0.441007273537772, 0.4362322347504752, 0.4649463551385062, 0.4731166533061436, 0.41731799500329153, 0.4021389143807547, 0.4490242004394531, 0.41012039354869295, 0.41279029846191406, 0.3983064889907837, 0.3986541713987078], "val_accuracy": [0.4490000009536743, 0.6800000071525574, 0.6543333530426025, 0.722000002861023, 0.7303333282470703, 0.7263333201408386, 0.7606666684150696, 0.7473333477973938, 0.7536666393280029, 0.7570000290870667, 0.784333348274231, 0.7919999957084656, 0.8033333420753479, 0.8063333630561829, 0.8086666464805603, 0.8133333325386047, 0.7696666717529297, 0.8026666641235352, 0.812666654586792, 0.8286666870117188, 0.7953333258628845, 0.8193333148956299, 0.8193333148956299, 0.82833331823349, 0.8190000057220459]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 0, 2, 3, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [76, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [2, 4, 0, 3], [0, 4], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.7997142672538757, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 3, 1, 1, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.003516903390911, 1.390384859208024, 1.0771604407071407, 0.8606300164979006, 0.818928977596352, 0.7286618547967995, 0.7504838748599214, 0.6990216867231879, 0.6819786286593397, 0.6477846791479392, 0.6237968884013853, 0.6274578470233377, 0.6190443347237602, 0.609209011393358, 0.5669675238726712, 0.5606498517270228, 0.5587463951176971, 0.53256450120122, 0.5368834237192033, 0.5337307926465681, 0.5072515639552131, 0.502195744238289], "accuracy": [0.3337736129760742, 0.5209351181983948, 0.6103553175926208, 0.6851142644882202, 0.6893408894538879, 0.720380425453186, 0.7123233675956726, 0.7362303733825684, 0.737947404384613, 0.7489103078842163, 0.7613261342048645, 0.7602694630622864, 0.7630431652069092, 0.7725531458854675, 0.7882710099220276, 0.785101056098938, 0.7891955971717834, 0.7951393723487854, 0.7984414100646973, 0.8020076751708984, 0.8059701323509216, 0.8125742673873901], "val_loss": [1.597620861870902, 0.7901287589754377, 0.6502538067953927, 0.6753548213413784, 0.5994741916656494, 0.6179043735776629, 0.6151488678795951, 0.5174249240330288, 0.5247357061931065, 0.48559084960392546, 0.4886998108455113, 0.4667583703994751, 0.46991395950317383, 0.46674498489924837, 0.4490897996085031, 0.4315076470375061, 0.42772382497787476, 0.48198372977120535, 0.4464437450681414, 0.4095462645803179, 0.402450476373945, 0.4076692206518991], "val_accuracy": [0.4156666696071625, 0.6746666431427002, 0.7243333458900452, 0.6880000233650208, 0.7163333296775818, 0.7093333601951599, 0.7193333506584167, 0.7703333497047424, 0.7459999918937683, 0.7833333611488342, 0.7706666588783264, 0.784333348274231, 0.7873333096504211, 0.7953333258628845, 0.8023333549499512, 0.8096666932106018, 0.8186666369438171, 0.7733333110809326, 0.7873333096504211, 0.8173333406448364, 0.8180000185966492, 0.8140000104904175]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 3, 2, 0, 2, 8, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 1, 1, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [76, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [2, 4, 0, 3], [4, 4], [76], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.7828571200370789, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), grad)))))), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.2457544789448423, 1.945764546050466, 1.407588855575624, 1.1260394536745058, 1.0087954680901696, 0.9207624833912283, 0.8714415908347913, 0.8117376356439159, 0.8156168470057074, 0.7594809471309114, 0.7327776790578462, 0.7273203815608968, 0.7213185001058885, 0.6881384272711419, 0.6822758827542018, 0.6780957650388819, 0.6727503960505138, 0.6536407401186679, 0.6415393372820258, 0.6372928913274792, 0.6268903540188784, 0.6291129229531989, 0.6219073436783289, 0.6071668397071828, 0.6015729539744874, 0.5895183230939086], "accuracy": [0.216880202293396, 0.42266544699668884, 0.5411438345909119, 0.6082419753074646, 0.6427156329154968, 0.6723021864891052, 0.6864351034164429, 0.7121912837028503, 0.700700044631958, 0.7243428826332092, 0.7380794882774353, 0.7314753532409668, 0.7342491149902344, 0.7440232634544373, 0.7518161535263062, 0.7494386434555054, 0.7567031979560852, 0.7580240368843079, 0.7646281719207764, 0.767401933670044, 0.765949010848999, 0.763967752456665, 0.7732135653495789, 0.7765156626701355, 0.7799497842788696, 0.7832518815994263], "val_loss": [1.812631062098912, 1.3051056861877441, 0.8913725103650775, 0.7546117305755615, 0.7305575268609183, 0.6589456626347133, 0.6123823949268886, 0.5878526823861259, 0.5814196722848075, 0.5559662750789097, 0.5506749153137207, 0.5329059703009469, 0.5227545329502651, 0.5200873613357544, 0.5122454847608294, 0.523658105305263, 0.5055034671510968, 0.48864175592150005, 0.48363264969417025, 0.4802180528640747, 0.4725121940885271, 0.49519990171704975, 0.5019443886620658, 0.47073449407305035, 0.47118193762642996, 0.4610263279506138], "val_accuracy": [0.4583333432674408, 0.5843333601951599, 0.6759999990463257, 0.687333345413208, 0.6913333535194397, 0.7310000061988831, 0.7323333621025085, 0.7509999871253967, 0.75, 0.7543333172798157, 0.7616666555404663, 0.7663333415985107, 0.7666666507720947, 0.7739999890327454, 0.7696666717529297, 0.765333354473114, 0.7763333320617676, 0.7863333225250244, 0.7789999842643738, 0.7866666913032532, 0.7973333597183228, 0.7770000100135803, 0.765333354473114, 0.7960000038146973, 0.7836666703224182, 0.7956666946411133]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 3, 5, 3, 2, 5, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [76, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [2, 4, 0, 3], [7, 4], [76], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 1, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3, 1], [36, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 25, 15, 10, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.math.subtract(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(alpha), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), sigma)), tf.math.square(alpha))))", "other_info": {"loss": [2.3028609959865998, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09192973375320435, 0.09219389408826828, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9709816660199846, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03633333370089531, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 0, 2, 3, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [76, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 1, 0, 3], [0, 4], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), beta)", "other_info": {"loss": [2.3049209913982613, 2.3270914695990665, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08889182657003403, 0.07885351777076721, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9776876313345773, 2.0363962990897044, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.01899999938905239, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 0, 2, 3, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 2, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [2, 4, 0, 3], [0, 4], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 1, 2, 2, 1, 1, 0, 3, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(alpha))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 3, 5, 0, 2, 5, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 2, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [7, 4, 0, 3], [2, 2], [76], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [49, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(alpha))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026522818242774, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 3, 0, 2, 8, 3, 1, 2, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [76, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 0, 3], [0, 4], [76], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [55, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 1, 15, 15, 8, 7, 1, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(alpha))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.multiply(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(beta, alpha), grad))))), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3026522818242774, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 0, 2, 3, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [76, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [7, 4, 0, 3], [4, 4], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(alpha)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 5, 0, 2, 5, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 2, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [76, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [7, 4, 0, 3], [7, 4], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 5, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [51, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(alpha))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 3, 5, 0, 2, 5, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 2, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [2, 4, 0, 3], [7, 2], [76], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [8, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [80, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026522818242774, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 3, 5, 0, 2, 8, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [76, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [0, 4, 0, 3], [4, 4], [76], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [35, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 2, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.795704053078408, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03486989811062813, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [39.729056222098215, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 8, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 3, 0, 9, 8, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [76, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 4, 0, 3], [4, 4], [76], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 1, 8, 8, 5, 3, 2, 6, 3, 3, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.sqrt(alpha)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.multiply(tf.math.multiply(alpha, tf.math.add(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 0, 2, 3, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 1, 0, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [7, 4, 0, 3], [2, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 5, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(alpha))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 3, 5, 0, 2, 5, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 2, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [1, 4, 0, 3], [4, 4], [76], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026522818242774, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 3, 5, 0, 2, 8, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [76, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0], [4, 4, 0, 3], [4, 4], [76], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 0, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [31773.286416510393, 597245.3765849954, 2777587.530379078, 7685059.526614714, 16320325.320565315, 30594800.833179235], "accuracy": [0.09708096832036972, 0.10011887550354004, 0.10170386731624603, 0.09628847241401672, 0.09985470771789551, 0.09747721254825592], "val_loss": [119583.30357142857, 945686.2857142857, 3180041.714285714, 7524380.857142857, 14680422.0, 25349933.14285714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 3, 0, 2, 3, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 1, 0, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [2, 4, 0, 3], [2, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 6, 3, 3, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.multiply(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.negative(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3026522818242774, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 0, 2, 3, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [76, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [7, 4, 0, 3], [3, 4], [76], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 3, 0, 2, 3, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 1, 0, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [76, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 4, 0, 3], [0, 4], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 0, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026522818242774, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 3, 5, 0, 5, 5, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [69, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [7, 4, 0, 3], [7, 4], [76], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 1, 0, 1, 1, 0, 1, 0, 3], [36, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 3, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.add(beta, grad)), tf.math.negative(tf.math.add(beta, alpha))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), alpha)", "other_info": {"loss": [2.302863519268265, 2.3021644293561256, 2.3024649852774854, 2.3031889009217483, 2.30356813217151, 2.3059421347085403], "accuracy": [0.09192973375320435, 0.09285431355237961, 0.08677849918603897, 0.08915598690509796, 0.0882314071059227, 0.08360850811004639], "val_loss": [1.9709901128496443, 1.9710724694388253, 1.9714160646711076, 1.9720542090279716, 1.9729534557887487, 1.9741230692182268], "val_accuracy": [0.03633333370089531, 0.03566666692495346, 0.03333333507180214, 0.029666665941476822, 0.02666666731238365, 0.02666666731238365]}}]