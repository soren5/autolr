[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 3, 5, 3, 2, 2, 4, 0, 4, 5, 3, 0, 0, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 2, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 2, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [44, 80, 44, 92]], "fitness": -0.8234285712242126, "mapping_values": [1, 22, 22, 13, 9, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.pow(grad, grad)))), tf.math.add(alpha, alpha))), grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9972742608730047, 1.4429060095699, 1.1675603127026082, 0.9346588745943513, 0.8129886230536266, 0.8012325725440792, 0.7395461927536, 0.7172353576439215, 0.6936333925102711, 0.6629800330126653, 0.6531300522065229, 0.6619358633046672, 0.6251641156068489, 0.5896414188094159, 0.6067803845492494, 0.6077084443777339, 0.5764785239315776, 0.5494475515369631, 0.5579694991082783, 0.5485065600828267, 0.5240936836766813, 0.5227446921623425, 0.5057058903944569, 0.4900603314290634, 0.5058058745605032, 0.4912045869404031, 0.5028828199686644, 0.47697428066842923, 0.48440124794964806, 0.47564053101278864, 0.4538377731617305, 0.4467718318831006, 0.43887288523403695, 0.4465730890480125], "accuracy": [0.33099988102912903, 0.5091797709465027, 0.5972790718078613, 0.6477347612380981, 0.6960771083831787, 0.6939638257026672, 0.7217012047767639, 0.7313432693481445, 0.7354378700256348, 0.7413815855979919, 0.7486461400985718, 0.7432307600975037, 0.7607977986335754, 0.7775723338127136, 0.7683265209197998, 0.772288978099823, 0.787082314491272, 0.7878747582435608, 0.7947431206703186, 0.800290584564209, 0.8067626357078552, 0.8021397590637207, 0.8162726163864136, 0.8141592741012573, 0.8099326491355896, 0.8232730031013489, 0.817461371421814, 0.8257825970649719, 0.8189142942428589, 0.8197067975997925, 0.8309338092803955, 0.8304054737091064, 0.8360850811004639, 0.8359529972076416], "val_loss": [1.7024000031607491, 0.9942687920161656, 0.7247966357639858, 0.6062802246638707, 0.6548280205045428, 0.6133221047265189, 0.528275557926723, 0.5249519518443516, 0.5463605608258929, 0.5200317757470267, 0.514609524181911, 0.46510757718767437, 0.4711084706442697, 0.4531529460634504, 0.5330124071666172, 0.5260243245533535, 0.4325439929962158, 0.41953666721071514, 0.4493238074438913, 0.4096733672278268, 0.41289334637778147, 0.39338473762784687, 0.39499027388436453, 0.4058000530515398, 0.39499421630586895, 0.3767597164426531, 0.38048990283693584, 0.36225467920303345, 0.3631681629589626, 0.36469896350588116, 0.36753842660358976, 0.35792581524167744, 0.3738361256463187, 0.3713203838893345], "val_accuracy": [0.4806666672229767, 0.5776666402816772, 0.684333324432373, 0.7283333539962769, 0.699999988079071, 0.7306666374206543, 0.7580000162124634, 0.7570000290870667, 0.7356666922569275, 0.7450000047683716, 0.7726666927337646, 0.7836666703224182, 0.7860000133514404, 0.7933333516120911, 0.7390000224113464, 0.7440000176429749, 0.8053333163261414, 0.812333345413208, 0.7976666688919067, 0.8289999961853027, 0.8119999766349792, 0.8320000171661377, 0.8330000042915344, 0.8216666579246521, 0.8233333230018616, 0.8413333296775818, 0.831333339214325, 0.8399999737739563, 0.8460000157356262, 0.840666651725769, 0.8403333425521851, 0.8460000157356262, 0.8393333554267883, 0.8399999737739563]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 5, 3, 2, 2, 6, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 76, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 2, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.8217142820358276, "mapping_values": [1, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1527439400410024, 1.9105845291097134, 1.5791269679819635, 1.1063408908149932, 0.9441765267866918, 0.8487565093398834, 0.7438727168988999, 0.7358577745843479, 0.6597149935317881, 0.6553099651252274, 0.6615112709441693, 0.6024869110653225, 0.6021981147443771, 0.5664733210732326, 0.5765007736660533, 0.5742652103680788, 0.5337203852079485, 0.532197064530533, 0.5139694808811449, 0.5223865431565272, 0.48160275691346943, 0.47890636982257734, 0.46957897706558327, 0.45048758162404756, 0.4711097632109796, 0.4502916565353624, 0.4405266594034947], "accuracy": [0.27578920125961304, 0.3897767663002014, 0.4691586196422577, 0.5952978730201721, 0.6493197679519653, 0.6762647032737732, 0.7189275026321411, 0.719852089881897, 0.7479857206344604, 0.7485140562057495, 0.7458723783493042, 0.7771760821342468, 0.7729493975639343, 0.7909126877784729, 0.7796856164932251, 0.78113853931427, 0.796328067779541, 0.7977809906005859, 0.8057059645652771, 0.8050455451011658, 0.8202351331710815, 0.8212917447090149, 0.8293488025665283, 0.8338396549224854, 0.8271034359931946, 0.8352925777435303, 0.8345000743865967], "val_loss": [1.6134406157902308, 1.3242679664066859, 1.0075149195534843, 0.7594626120158604, 0.6140001160757882, 0.6225912570953369, 0.5792613710675921, 0.49694974081856863, 0.4984512669699533, 0.48537654536111013, 0.49312998567308697, 0.454357385635376, 0.46884025846208843, 0.4465465886252267, 0.46622146878923687, 0.49583612169538227, 0.4130875212805612, 0.4130861077989851, 0.3991042120116098, 0.3772792731012617, 0.36953684261866976, 0.3545057603291103, 0.3711022904941014, 0.3985277073723929, 0.3705242191042219, 0.37863360132489887, 0.3641958406993321], "val_accuracy": [0.3843333423137665, 0.4933333396911621, 0.5396666526794434, 0.652999997138977, 0.7163333296775818, 0.7110000252723694, 0.749666690826416, 0.7689999938011169, 0.7680000066757202, 0.7703333497047424, 0.7523333430290222, 0.7933333516120911, 0.7816666960716248, 0.79666668176651, 0.7823333144187927, 0.7559999823570251, 0.8220000267028809, 0.8043333292007446, 0.8206666707992554, 0.8299999833106995, 0.8363333344459534, 0.8479999899864197, 0.8450000286102295, 0.8253333568572998, 0.8349999785423279, 0.8306666612625122, 0.8363333344459534]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 5, 2, 2, 6, 2, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 76, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 2, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.8148571252822876, "mapping_values": [1, 18, 18, 10, 8, 3, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, grad)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1530438501758344, 1.9658397965348706, 1.485947822362456, 1.0813246258434728, 0.9101777536175302, 0.8290375642977402, 0.7811190749298013, 0.758411173657687, 0.6827410982190784, 0.6677221661356572, 0.6517042547735981, 0.6066463016531549, 0.6874563266903166, 0.5708604596940015, 0.5749098637147807, 0.5687516350331103, 0.5496447732687595, 0.5377049338249184, 0.5223511268260882, 0.541889403419346, 0.5012740728334272, 0.4835673910184953, 0.4867429507800601, 0.47493980911744504, 0.46997515826319125, 0.4702657794971287, 0.43802765179477143], "accuracy": [0.2755250334739685, 0.38383305072784424, 0.48949941992759705, 0.6044115424156189, 0.6627922058105469, 0.6901333928108215, 0.7073041796684265, 0.7111346125602722, 0.7403249144554138, 0.7440232634544373, 0.7503632307052612, 0.776251494884491, 0.7338528633117676, 0.7866860628128052, 0.7841764688491821, 0.7886672616004944, 0.7913089394569397, 0.7976489067077637, 0.8018755912780762, 0.7984414100646973, 0.8113855719566345, 0.8207634687423706, 0.8189142942428589, 0.8202351331710815, 0.8256505131721497, 0.8274996876716614, 0.8381983637809753], "val_loss": [1.6158983707427979, 1.0422423907688685, 0.949615478515625, 0.7546514102390834, 0.5971835681370327, 0.6222469466073173, 0.7009507758276803, 0.5232833283288139, 0.5044257640838623, 0.4718524558203561, 0.4843716451099941, 0.6278836897441319, 0.47150894573756624, 0.424842894077301, 0.4447716474533081, 0.49733381611960276, 0.40423972266060965, 0.41618106194904875, 0.41559435640062603, 0.39875076498304096, 0.38184313263211933, 0.3712459462029593, 0.3902046169553484, 0.38421047585351126, 0.392086991242, 0.3608586277280535, 0.38390326499938965], "val_accuracy": [0.3816666603088379, 0.5953333377838135, 0.6769999861717224, 0.6596666574478149, 0.737666666507721, 0.7083333134651184, 0.6736666560173035, 0.7710000276565552, 0.7696666717529297, 0.777999997138977, 0.7720000147819519, 0.70333331823349, 0.7823333144187927, 0.8176666498184204, 0.8100000023841858, 0.7663333415985107, 0.82833331823349, 0.8033333420753479, 0.8176666498184204, 0.8176666498184204, 0.8376666903495789, 0.8396666646003723, 0.8246666789054871, 0.8303333520889282, 0.8243333101272583, 0.8360000252723694, 0.828000009059906]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 2, 3, 2, 4, 4, 0, 4, 5, 3, 0, 0, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 2, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.8057143092155457, "mapping_values": [1, 16, 16, 8, 8, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.pow(alpha, grad), tf.math.add(alpha, grad))))), grad)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1530744911673017, 1.9336472870163268, 1.506846720437647, 1.0747267718107913, 0.9375231784364063, 0.8583533892683806, 0.7379655683627927, 0.7559010099583707, 0.7059484984203651, 0.6727762795426764, 0.6277472101906744, 0.6192955346926879, 0.6106532939184831, 0.563602671198416, 0.5810209841634367, 0.5754013559317875, 0.5373391922139662, 0.5485442133233878, 0.5181780175337025, 0.5031827297019857, 0.48077021313853596, 0.48864810884573584, 0.48409267578615, 0.4698074928143745, 0.465024373196277, 0.46497076305384494, 0.4358226952496426, 0.44497981895828576, 0.43750991531650324, 0.43684808645565215, 0.41931358155730597, 0.40797783873494053, 0.3840282834035971, 0.3960169544506224, 0.3995466219191664, 0.3901927931126728, 0.4067195342311675, 0.36128863660398963, 0.36033522285616487, 0.374055206055308], "accuracy": [0.2755250334739685, 0.389380544424057, 0.5038964748382568, 0.6053361296653748, 0.6542068123817444, 0.6740192770957947, 0.7202483415603638, 0.7195879220962524, 0.7281733155250549, 0.7405890822410583, 0.7614582180976868, 0.7668735980987549, 0.7650244235992432, 0.7872143983840942, 0.7824593782424927, 0.7837802171707153, 0.7973847389221191, 0.7984414100646973, 0.8061022162437439, 0.8124422430992126, 0.8214238286018372, 0.8142913579940796, 0.8201030492782593, 0.8247259259223938, 0.8214238286018372, 0.8259146809577942, 0.8368775844573975, 0.837141752243042, 0.8354246616363525, 0.8341038227081299, 0.8459912538528442, 0.8473120927810669, 0.8569541573524475, 0.8482366800308228, 0.8502179384231567, 0.8578787446022034, 0.845859169960022, 0.8696341514587402, 0.8614450097084045, 0.8647470474243164], "val_loss": [1.6158850874219621, 1.0349921158381872, 0.8399988583156041, 0.77190933908735, 0.6811573335102626, 0.5670241968972343, 0.7254687036786761, 0.5209191867283413, 0.49093994072505404, 0.4714935336794172, 0.49842919622148785, 0.44846793583461214, 0.4814157656260899, 0.4392586946487427, 0.44335951123918804, 0.5046149321964809, 0.4449280159814017, 0.4236014059611729, 0.39829576866967337, 0.38239723443984985, 0.38599491119384766, 0.36516577856881277, 0.39353965861456736, 0.4036339691707066, 0.3869984064783369, 0.36653330496379305, 0.34137509550367084, 0.3589783651488168, 0.34052933965410503, 0.35464327675955637, 0.3483135529926845, 0.32553992101124357, 0.33546362604413715, 0.3416709985051836, 0.31384068727493286, 0.3550213745662144, 0.3470508371080671, 0.3146829179355076, 0.34896006754466463, 0.3301217811448233], "val_accuracy": [0.382666677236557, 0.5973333120346069, 0.6470000147819519, 0.6306666731834412, 0.703000009059906, 0.7440000176429749, 0.6783333420753479, 0.7580000162124634, 0.7760000228881836, 0.7803333401679993, 0.7573333382606506, 0.796999990940094, 0.7736666798591614, 0.7983333468437195, 0.8053333163261414, 0.7509999871253967, 0.784333348274231, 0.8019999861717224, 0.8143333196640015, 0.8286666870117188, 0.8243333101272583, 0.8433333039283752, 0.8276666402816772, 0.8130000233650208, 0.8243333101272583, 0.8353333473205566, 0.8479999899864197, 0.8423333168029785, 0.8543333411216736, 0.8500000238418579, 0.8473333120346069, 0.8633333444595337, 0.8636666536331177, 0.8533333539962769, 0.8646666407585144, 0.8379999995231628, 0.8529999852180481, 0.862666666507721, 0.8553333282470703, 0.8583333492279053]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 6, 2, 3, 2, 2, 4, 0, 5, 5, 3, 0, 2, 1, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 80, 0, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [3, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.7851428389549255, "mapping_values": [1, 42, 42, 27, 15, 8, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.sqrt(grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))))), tf.math.pow(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), grad)))))), alpha))))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0670628908240736, 1.8633332139134737, 1.3643121170629176, 0.9946184888602153, 0.8160686559602175, 0.7664173788020419, 0.697327196889345, 0.6880346130008443, 0.621715172957971, 0.6304436194315689, 0.5881919437442962, 0.5903832011408007, 0.5537870299342191], "accuracy": [0.308149516582489, 0.37643641233444214, 0.5184255838394165, 0.6248844265937805, 0.6909258961677551, 0.7084929347038269, 0.7236824631690979, 0.7292299270629883, 0.7584202885627747, 0.7532690763473511, 0.7770439982414246, 0.7692511081695557, 0.7961959838867188], "val_loss": [1.8545430728367396, 1.1533186435699463, 0.7646078382219587, 0.6155549117497036, 0.5876906769616264, 0.5880369969776699, 0.5540306738444737, 0.47512957027980257, 0.5375310352870396, 0.49145199571337017, 0.47875477586473736, 0.4804635729108538, 0.47205703599112375], "val_accuracy": [0.3503333330154419, 0.48533332347869873, 0.6983333230018616, 0.7160000205039978, 0.7426666617393494, 0.7233333587646484, 0.7366666793823242, 0.7889999747276306, 0.7506666779518127, 0.7789999842643738, 0.7753333449363708, 0.7739999890327454, 0.7713333368301392]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 6, 2, 3, 2, 2, 3, 0, 9, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [4, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [24, 94, 44, 92]], "fitness": -0.7631428837776184, "mapping_values": [1, 22, 22, 13, 9, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), grad)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(tf.math.add(alpha, grad), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.298216465111217, 2.2841203344685446, 2.273531237046606, 2.2604164227896426, 2.2473670601482643, 2.2309193654917547, 2.2153726238789355, 2.195635500900214, 2.1742901643348205, 2.1468004852852185, 2.119556297762771, 2.0850123055717176, 2.0420973206775663, 2.006170795798664, 1.9516065361918302, 1.898150468955911, 1.8419974404649806, 1.7812074480149975, 1.7201127674223458, 1.6595436500252796, 1.599653320305572, 1.5471786384994421, 1.488057450170546, 1.4318494155910493, 1.3961074147730173, 1.3478754807960844, 1.3173447348863347, 1.2894999635784838, 1.2538523418776442, 1.2176398751663573, 1.1981935767512737, 1.1802221766993228, 1.1601022232824296, 1.1433826127088207, 1.1083202985425462, 1.1006852798080242, 1.0813457554892905, 1.0644784560371714, 1.0462866471412395, 1.0344011520334853, 1.0257058863028277, 1.0147777315868347, 0.9968265409656032, 0.9835982891657034, 0.9760310394873221, 0.9646675928299374, 0.958859605426093, 0.94379739356063, 0.9387588243065037, 0.9345271696881878, 0.9238804164752826, 0.9240820901804219, 0.9177101445692468, 0.9093191578813028, 0.8906302896898184, 0.8860858566709686, 0.8783611630042467, 0.8760976938051303, 0.8762063094889719, 0.861372800456566, 0.8710858200944536, 0.8674204367152798, 0.8546635810536258, 0.8490505034440796, 0.8400846925929333, 0.8452700780697975, 0.8335227936707027, 0.8386323932627677, 0.8188105202968237, 0.8176677144356314, 0.8163849994679956, 0.8202597679022423, 0.8060118443442216, 0.798520865355028, 0.7947835984593448, 0.7959647591418563, 0.8010011164110098, 0.8034573678626454, 0.7921918721215411, 0.7850583997526661, 0.7892005145904049, 0.7761382365963636, 0.7747918604040945, 0.7883696811798463, 0.7734152089571672, 0.7664592872048885, 0.7678879233887325, 0.7579397939735038, 0.772257882771538, 0.7618046046137857, 0.74978625153223, 0.7571226206075844, 0.7582668220567004, 0.7402173716473054, 0.7453328765000744, 0.7426589354075587, 0.7411258183670648, 0.7403005202054946, 0.747430700730528, 0.7346768799537933], "accuracy": [0.09998679161071777, 0.13168670237064362, 0.16219785809516907, 0.19997358322143555, 0.23154141008853912, 0.2592788338661194, 0.2871483266353607, 0.31118741631507874, 0.3346982002258301, 0.3595297932624817, 0.3723418414592743, 0.3951921761035919, 0.40641921758651733, 0.40404173731803894, 0.4301941692829132, 0.44010037183761597, 0.4493461847305298, 0.46123364567756653, 0.46810197830200195, 0.49214106798171997, 0.5045568346977234, 0.5156518220901489, 0.5239730477333069, 0.5374455451965332, 0.5452384352684021, 0.5538238286972046, 0.5659754276275635, 0.5625412464141846, 0.579051673412323, 0.5926561951637268, 0.594241201877594, 0.605468213558197, 0.5983357429504395, 0.6052040457725525, 0.6147140264511108, 0.6190727949142456, 0.6306960582733154, 0.6276581883430481, 0.6412627100944519, 0.6454893946647644, 0.6412627100944519, 0.6424514651298523, 0.6553955674171448, 0.6505085229873657, 0.6522256135940552, 0.6650376319885254, 0.6580372452735901, 0.6634526252746582, 0.670320987701416, 0.6711134314537048, 0.6750759482383728, 0.6696605682373047, 0.6806234121322632, 0.6804913282394409, 0.685510516166687, 0.6870955228805542, 0.6884163022041321, 0.6909258961677551, 0.6894729733467102, 0.6925109028816223, 0.6903975605964661, 0.6917183995246887, 0.6985867023468018, 0.6977941989898682, 0.700171709060669, 0.6976621150970459, 0.7028133869171143, 0.7017567157745361, 0.7094175219535828, 0.7140403985977173, 0.7059833407402039, 0.7038700580596924, 0.7147008180618286, 0.7125874757766724, 0.7181349992752075, 0.7135120630264282, 0.7108704447746277, 0.7128516435623169, 0.7174745798110962, 0.7186633348464966, 0.7173424959182739, 0.7199841737747192, 0.7210407853126526, 0.7136441469192505, 0.7230220437049866, 0.7206445932388306, 0.7246070504188538, 0.7230220437049866, 0.7211728692054749, 0.7260599732398987, 0.7253995537757874, 0.7296261787414551, 0.7218332886695862, 0.7313432693481445, 0.7298903465270996, 0.7289658188819885, 0.7304186820983887, 0.7304186820983887, 0.7275128960609436, 0.7382115721702576], "val_loss": [1.9598100525992257, 1.948699951171875, 1.9372480256216866, 1.9250483512878418, 1.911691393171038, 1.8967625073024206, 1.879800796508789, 1.8601764270237513, 1.837667533329555, 1.811392171042306, 1.7816222735813685, 1.747105598449707, 1.7072972229548864, 1.663663285119193, 1.6143049853188651, 1.5603035518101283, 1.5028660637991769, 1.4425561768668038, 1.3807804584503174, 1.3193371295928955, 1.2601912021636963, 1.2041417871202742, 1.1518628597259521, 1.1030192715781075, 1.0598818574632918, 1.0207343101501465, 0.9860271726335798, 0.9551531587328229, 0.9270374093736921, 0.9004830632890973, 0.8775232860020229, 0.8572361469268799, 0.8387702703475952, 0.822485191481454, 0.8065313441412789, 0.7918718712670463, 0.7783703122820173, 0.7664366790226528, 0.7544012580599103, 0.7440654550279889, 0.7349238055092948, 0.7262062685830253, 0.7177424090249198, 0.7098578044346401, 0.7023379121507917, 0.6948313883372715, 0.6889820609773908, 0.6829378434589931, 0.6763834612710136, 0.6709362098148891, 0.6653729336602348, 0.6597172703061785, 0.6556420155933925, 0.6513337067195347, 0.6468251262392316, 0.6429409299577985, 0.6386795384543282, 0.6341522421155658, 0.6308144841875348, 0.6264152186257499, 0.62250816822052, 0.6195495128631592, 0.6169110195977348, 0.6128198248999459, 0.6100893190928868, 0.6072542156491961, 0.6047461714063372, 0.6014000007084438, 0.5991485289164952, 0.5954686062676566, 0.59275940486363, 0.5904079845973423, 0.5881707157407489, 0.5859466450554984, 0.5829312801361084, 0.5809848478862217, 0.5783608981541225, 0.5759928396769932, 0.5739196198327201, 0.5727226904460362, 0.5697963578360421, 0.5688287019729614, 0.5671509163720267, 0.5654535634177071, 0.5638366426740374, 0.561273285320827, 0.5596327611378261, 0.557126556124006, 0.5558164119720459, 0.5549665008272443, 0.5524071795599801, 0.5511518376214164, 0.5498119592666626, 0.5484853131430489, 0.545550993510655, 0.5446021386555263, 0.5438417196273804, 0.5416577884129116, 0.5413803883961269, 0.5388925245829991], "val_accuracy": [0.13466666638851166, 0.23199999332427979, 0.3016666769981384, 0.34566667675971985, 0.37066665291786194, 0.39633333683013916, 0.414000004529953, 0.43066665530204773, 0.4483333230018616, 0.46000000834465027, 0.4740000069141388, 0.4896666705608368, 0.5036666393280029, 0.518666684627533, 0.5299999713897705, 0.5450000166893005, 0.5546666383743286, 0.5643333196640015, 0.5776666402816772, 0.5956666469573975, 0.6026666760444641, 0.6169999837875366, 0.6340000033378601, 0.6496666669845581, 0.653333306312561, 0.6643333435058594, 0.6703333258628845, 0.6740000247955322, 0.6763333082199097, 0.6809999942779541, 0.6806666851043701, 0.6826666593551636, 0.6833333373069763, 0.6890000104904175, 0.6893333196640015, 0.6940000057220459, 0.6946666836738586, 0.6973333358764648, 0.7036666870117188, 0.7043333053588867, 0.703000009059906, 0.7096666693687439, 0.7099999785423279, 0.7116666436195374, 0.7139999866485596, 0.7170000076293945, 0.7173333168029785, 0.7193333506584167, 0.7196666598320007, 0.722000002861023, 0.7233333587646484, 0.7266666889190674, 0.7283333539962769, 0.7289999723434448, 0.7326666712760925, 0.731333315372467, 0.7326666712760925, 0.734666645526886, 0.734000027179718, 0.734000027179718, 0.7369999885559082, 0.7403333187103271, 0.7383333444595337, 0.7406666874885559, 0.7440000176429749, 0.7426666617393494, 0.7429999709129333, 0.7446666955947876, 0.7440000176429749, 0.7453333139419556, 0.746999979019165, 0.7453333139419556, 0.7483333349227905, 0.7483333349227905, 0.7513333559036255, 0.7513333559036255, 0.7519999742507935, 0.7526666522026062, 0.7536666393280029, 0.7549999952316284, 0.753333330154419, 0.7546666860580444, 0.7526666522026062, 0.7576666474342346, 0.7583333253860474, 0.7586666941642761, 0.7563333511352539, 0.7593333125114441, 0.7603333592414856, 0.7580000162124634, 0.7616666555404663, 0.7620000243186951, 0.7620000243186951, 0.7613333463668823, 0.7636666893959045, 0.7663333415985107, 0.765333354473114, 0.7639999985694885, 0.762666642665863, 0.765333354473114]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 6, 9, 4, 2, 2, 4, 0, 5, 2, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 0, 2, 2, 2, 0, 1, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [18, 33, 76, 80, 1, 39, 69, 32, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 2, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [3, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 2, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [24, 94, 44, 92]], "fitness": -0.7631428837776184, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.298216465111217, 2.2841203344685446, 2.273531268537635, 2.260416472262049, 2.2473671411116993, 2.2309195454000026, 2.215373190717454, 2.1956364500083314, 2.174291374503566, 2.1467993696840324, 2.1195547637402847, 2.085010870494044, 2.0420963039267193, 2.0061681799491193, 1.9516034480240902, 1.8981476755284552, 1.8419942552576354, 1.7812065641720376, 1.7201118163617846, 1.659545222246384, 1.5996567415066871, 1.5471839015006137, 1.4880629453078362, 1.4318569210683822, 1.396117104310653, 1.347887215392622, 1.3173611425783467, 1.2895167548627178, 1.2538679232765513, 1.2176555817263583, 1.198204112311144, 1.1802336928111026, 1.1601179539173223, 1.1433922959639964, 1.1083201026526015, 1.1006938335902152, 1.081357595927176, 1.0644932898154364, 1.0462896227285516, 1.0344142660473032, 1.0257103029511088, 1.0147955868899499, 0.9968132806444653, 0.9835898153864713, 0.9760311338265716, 0.9646588484482947, 0.9588683116957181, 0.9437969975058335, 0.9387800420642198, 0.9345330775469018, 0.9238876670721011, 0.9240803274543389, 0.917721331292738, 0.9093384465222125, 0.8906496399035622, 0.8860950084835421, 0.8783821580259161, 0.8761134145990764, 0.8762055370219081, 0.861400835659872, 0.8711300928594886, 0.8674617443322789, 0.8546140946889708, 0.8491051752711205, 0.8401011684079133, 0.8453282820565936, 0.8334986371544326, 0.8386512883524176, 0.8188388284564947, 0.8176998243655007, 0.8164215186772456, 0.8202784374610166, 0.8060131850511548, 0.7985071468945303, 0.7948135056468584, 0.7959852741851373, 0.8009974591610155, 0.8034758173227468, 0.7921979761693645, 0.7850859965693603, 0.7892251478021234, 0.7762023957177806, 0.7748009496754849, 0.7883608542051077, 0.7734161761332623, 0.7664715094006435, 0.7679092641346617, 0.7579159759070658, 0.7722728983475122, 0.7618247440320751, 0.7498212692413536, 0.7570691392910148, 0.7582669525082872, 0.740226916090026, 0.7453851223291108, 0.7427156852567358, 0.7411274306841216, 0.7402679843437151, 0.7474363398211837, 0.7347319761854294], "accuracy": [0.09998679161071777, 0.13168670237064362, 0.16219785809516907, 0.19997358322143555, 0.23154141008853912, 0.2592788338661194, 0.28701624274253845, 0.31105533242225647, 0.3345661163330078, 0.3595297932624817, 0.3723418414592743, 0.3951921761035919, 0.40641921758651733, 0.40404173731803894, 0.4301941692829132, 0.44010037183761597, 0.4493461847305298, 0.46123364567756653, 0.46810197830200195, 0.49227315187454224, 0.5046889185905457, 0.5155197381973267, 0.5239730477333069, 0.5374455451965332, 0.5452384352684021, 0.5538238286972046, 0.5658433437347412, 0.5625412464141846, 0.579051673412323, 0.5925241112709045, 0.594241201877594, 0.605468213558197, 0.5984678268432617, 0.604939877986908, 0.6147140264511108, 0.6190727949142456, 0.6306960582733154, 0.6276581883430481, 0.6413947939872742, 0.6454893946647644, 0.6409985423088074, 0.6420552134513855, 0.655527651309967, 0.6509047746658325, 0.6519614458084106, 0.6650376319885254, 0.6577730774879456, 0.6634526252746582, 0.6704530715942383, 0.6712455153465271, 0.6752080321311951, 0.669792652130127, 0.6804913282394409, 0.6804913282394409, 0.6856426000595093, 0.6868313550949097, 0.6885483860969543, 0.6909258961677551, 0.6894729733467102, 0.6922467350959778, 0.689869225025177, 0.6914542317390442, 0.6985867023468018, 0.6976621150970459, 0.7003037929534912, 0.6979262828826904, 0.7030775547027588, 0.7018887996673584, 0.709549605846405, 0.7136441469192505, 0.7059833407402039, 0.7038700580596924, 0.7152291536331177, 0.7124554514884949, 0.718399167060852, 0.7135120630264282, 0.71100252866745, 0.7127195596694946, 0.7172104120254517, 0.7187954187393188, 0.7174745798110962, 0.7199841737747192, 0.7210407853126526, 0.7135120630264282, 0.7231541275978088, 0.720380425453186, 0.7244749665260315, 0.7228899598121643, 0.7214370369911194, 0.7259278893470764, 0.7256637215614319, 0.7297582626342773, 0.7215691208839417, 0.7313432693481445, 0.7294940948486328, 0.7285695672035217, 0.7306828498840332, 0.7306828498840332, 0.7273808121681213, 0.7383436560630798], "val_loss": [1.9598100525992257, 1.948699951171875, 1.9372480937412806, 1.9250482150486536, 1.911691393171038, 1.8967627116612025, 1.8798014095851354, 1.860177789415632, 1.8376679420471191, 1.8113905361720495, 1.7816208430698939, 1.7471046447753906, 1.7072967461177282, 1.6636598450796944, 1.6143006597246443, 1.5602996008736747, 1.5028637477329798, 1.4425552231924874, 1.3807760306767054, 1.319340467453003, 1.2601970604487829, 1.2041522094181605, 1.1518737248011999, 1.1030264241354806, 1.0598839691707067, 1.0207372733524867, 0.9860349723270961, 0.9551639897482735, 0.9270502499171666, 0.9004950863974435, 0.8775325843266079, 0.8572426864079067, 0.838775771004813, 0.8224931274141584, 0.8065353972571236, 0.7918827193123954, 0.7783684389931815, 0.7664355720792498, 0.7544038466044835, 0.7440652506692069, 0.7349283354622977, 0.7262087038585118, 0.7177532741001674, 0.7098675114767892, 0.7023411308016095, 0.694832580430167, 0.688987169946943, 0.6829500368663243, 0.676391431263515, 0.6709494590759277, 0.6653790473937988, 0.6597216810498919, 0.6556414876665387, 0.6513374532972064, 0.6468286003385272, 0.6429286343710763, 0.638684902872358, 0.6341630731310163, 0.6308082171848842, 0.6264009305409023, 0.6225021055766514, 0.6195555584771293, 0.6169269936425346, 0.6128112248011998, 0.6100872414452689, 0.6072626284190586, 0.6047726188387189, 0.6014073916843959, 0.5991851602281842, 0.5954746348517281, 0.5927739824567523, 0.5904307195118496, 0.5882034131458828, 0.5859711681093488, 0.5829677070890155, 0.5810257026127407, 0.5783976486751011, 0.5760353122438703, 0.573940634727478, 0.5727318014417376, 0.5698002406529018, 0.56882643699646, 0.5671704837254116, 0.5654818330492292, 0.5639053412846157, 0.5613122156688145, 0.5596644026892525, 0.5571289232798985, 0.5558520385197231, 0.5549968991960798, 0.5524382420948574, 0.5511810779571533, 0.5498180219105312, 0.5484760488782611, 0.5455432619367327, 0.5446120159966605, 0.543824587549482, 0.5416561535426548, 0.5413799967084613, 0.5388667583465576], "val_accuracy": [0.13466666638851166, 0.23199999332427979, 0.3016666769981384, 0.34566667675971985, 0.37066665291786194, 0.39633333683013916, 0.414000004529953, 0.4300000071525574, 0.4483333230018616, 0.46000000834465027, 0.4740000069141388, 0.4896666705608368, 0.5040000081062317, 0.518666684627533, 0.5299999713897705, 0.5453333258628845, 0.5546666383743286, 0.5640000104904175, 0.5776666402816772, 0.5956666469573975, 0.6026666760444641, 0.6169999837875366, 0.6340000033378601, 0.6496666669845581, 0.653333306312561, 0.6643333435058594, 0.6706666946411133, 0.6740000247955322, 0.6763333082199097, 0.6809999942779541, 0.6806666851043701, 0.6826666593551636, 0.6836666464805603, 0.6890000104904175, 0.6893333196640015, 0.6940000057220459, 0.6949999928474426, 0.6976666450500488, 0.70333331823349, 0.7043333053588867, 0.70333331823349, 0.7096666693687439, 0.7096666693687439, 0.7113333344459534, 0.7139999866485596, 0.7170000076293945, 0.7173333168029785, 0.718999981880188, 0.7196666598320007, 0.722000002861023, 0.7233333587646484, 0.7266666889190674, 0.7283333539962769, 0.7289999723434448, 0.7326666712760925, 0.731333315372467, 0.7326666712760925, 0.734666645526886, 0.734000027179718, 0.734000027179718, 0.7369999885559082, 0.7403333187103271, 0.737666666507721, 0.7406666874885559, 0.7443333268165588, 0.7426666617393494, 0.7426666617393494, 0.7446666955947876, 0.7440000176429749, 0.7453333139419556, 0.746999979019165, 0.7453333139419556, 0.7483333349227905, 0.7483333349227905, 0.7516666650772095, 0.7516666650772095, 0.7516666650772095, 0.7526666522026062, 0.7536666393280029, 0.7546666860580444, 0.7526666522026062, 0.7540000081062317, 0.753000020980835, 0.7576666474342346, 0.7583333253860474, 0.7586666941642761, 0.7559999823570251, 0.7593333125114441, 0.7603333592414856, 0.7583333253860474, 0.7620000243186951, 0.7616666555404663, 0.7616666555404663, 0.7616666555404663, 0.7636666893959045, 0.7663333415985107, 0.7649999856948853, 0.7639999985694885, 0.762666642665863, 0.765666663646698]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 9, 2, 2, 2, 6, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [75, 89, 76, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [24, 94, 44, 92]], "fitness": -0.7631428837776184, "mapping_values": [1, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.298216465111217, 2.2841203344685446, 2.273531237046606, 2.2604164272613687, 2.2473670871675666, 2.2309195904006827, 2.215373271680889, 2.1956367019365617, 2.174291563449739, 2.1467998420494645, 2.1195552989933013, 2.085012242495187, 2.042097819967828, 2.006171097152064, 1.951608070261553, 1.8981536762384674, 1.8420039425594081, 1.7812142139727556, 1.720118710188865, 1.659549273079129, 1.5996581496122948, 1.5471892950793362, 1.4880647807309593, 1.4318586009415684, 1.3961186380497201, 1.3478858538150094, 1.3173520982761455, 1.2895093031405709, 1.2538562865698768, 1.2176508323281212, 1.1982008284424053, 1.1802312721901913, 1.160112292570382, 1.1433864142270909, 1.1083188656062624, 1.1006913180081064, 1.0813524642750856, 1.0645018681763752, 1.0463021909398582, 1.0344060071156151, 1.025705996175027, 1.0148135742821855, 0.9968372699748633, 0.9835852775213473, 0.976017816979037, 0.9646618960319714, 0.9588612136020794, 0.9437955214662039, 0.9387807976048558, 0.9345294221627509, 0.9239055319169981, 0.9240802015374602, 0.9177189832822663, 0.909320390093769, 0.8906486815607008, 0.8860614256710188, 0.8783545684679042, 0.8760922953689166, 0.8762021807710398, 0.8613835037612738, 0.8711228575358191, 0.8674247689361129, 0.854633136235523, 0.8490625724438521, 0.840074333390697, 0.8453338680533748, 0.8334685949491331, 0.838620910287423, 0.8188187544686903, 0.8176794716584731, 0.8164024290517652, 0.8202764833403333, 0.8060073366002667, 0.798509439102899, 0.794804550424905, 0.7959466834094121, 0.8010081674334333, 0.8034658230542979, 0.792185333662848, 0.7850779673253635, 0.7892060760871656, 0.7761962959842281, 0.7747746353939209, 0.7883452187282314, 0.7734099843593054, 0.7664702157255618, 0.767926377611484, 0.7579143635585182, 0.7722645190492392, 0.7618310200366614, 0.7498412112817473, 0.7570925793863794, 0.7582889402531487, 0.7402201376933116, 0.7454078132056635, 0.7427219129383383, 0.7411214923578372, 0.7402774000904737, 0.7474093746751638, 0.7347234005878284], "accuracy": [0.09998679161071777, 0.13168670237064362, 0.16219785809516907, 0.19997358322143555, 0.23154141008853912, 0.2592788338661194, 0.2871483266353607, 0.31118741631507874, 0.33443403244018555, 0.3595297932624817, 0.3723418414592743, 0.3951921761035919, 0.40641921758651733, 0.4041738212108612, 0.4301941692829132, 0.4399682879447937, 0.4493461847305298, 0.46123364567756653, 0.4679698944091797, 0.49214106798171997, 0.5045568346977234, 0.5155197381973267, 0.5239730477333069, 0.537709653377533, 0.5453705191612244, 0.5538238286972046, 0.5659754276275635, 0.5625412464141846, 0.579051673412323, 0.5926561951637268, 0.594241201877594, 0.6053361296653748, 0.5984678268432617, 0.6050719618797302, 0.6147140264511108, 0.6190727949142456, 0.6308281421661377, 0.6276581883430481, 0.6412627100944519, 0.6457535624504089, 0.6407343745231628, 0.6424514651298523, 0.6553955674171448, 0.6507726907730103, 0.6519614458084106, 0.6650376319885254, 0.6580372452735901, 0.663848876953125, 0.6705851554870605, 0.6711134314537048, 0.6749438643455505, 0.669792652130127, 0.6804913282394409, 0.6806234121322632, 0.685510516166687, 0.6870955228805542, 0.6885483860969543, 0.6914542317390442, 0.6896050572395325, 0.6919825673103333, 0.6902654767036438, 0.691850483417511, 0.6988508701324463, 0.6977941989898682, 0.7004358768463135, 0.6975300312042236, 0.7033417224884033, 0.7016246318817139, 0.709549605846405, 0.7136441469192505, 0.7059833407402039, 0.7038700580596924, 0.7145687341690063, 0.7125874757766724, 0.7181349992752075, 0.7136441469192505, 0.7108704447746277, 0.7125874757766724, 0.7174745798110962, 0.7186633348464966, 0.7176066637039185, 0.719852089881897, 0.7210407853126526, 0.7136441469192505, 0.7235503792762756, 0.7205125093460083, 0.7243428826332092, 0.7228899598121643, 0.7215691208839417, 0.7260599732398987, 0.7255316376686096, 0.7294940948486328, 0.7217012047767639, 0.7312111854553223, 0.7296261787414551, 0.7284374833106995, 0.7305507659912109, 0.7306828498840332, 0.7271166443824768, 0.7387399077415466], "val_loss": [1.9598101207188197, 1.948699951171875, 1.9372480256216866, 1.9250482150486536, 1.911691325051444, 1.8967628479003906, 1.8798014095851354, 1.860177993774414, 1.8376680782863073, 1.8113910811288017, 1.7816221373421806, 1.7471066883632116, 1.7072986194065638, 1.6636644772120885, 1.6143057005746024, 1.560307502746582, 1.5028726373400008, 1.442561422075544, 1.380781786782401, 1.3193396500178747, 1.2601978778839111, 1.204157727105277, 1.1518745081765311, 1.1030253682817732, 1.059882504599435, 1.020733049937657, 0.9860297611781529, 0.9551530224936349, 0.9270425864628383, 0.9004885809762138, 0.8775245121547154, 0.8572337797709874, 0.838767239025661, 0.8224835566111973, 0.8065315314701625, 0.791876997266497, 0.7783667700631278, 0.7664417198726109, 0.754409909248352, 0.7440766266414097, 0.7349327291761126, 0.726204650742667, 0.7177418300083706, 0.7098511116845267, 0.7023324966430664, 0.6948308093207223, 0.6889799152101789, 0.6829447405678886, 0.6763911417552403, 0.670946478843689, 0.6653681993484497, 0.6597188029970441, 0.6556463241577148, 0.6513388497488839, 0.6468481506620135, 0.6429380859647479, 0.6386754172188895, 0.6341497557503837, 0.6307990040097918, 0.6263843093599591, 0.6224999598094395, 0.6195555414472308, 0.6169054678508213, 0.6127985204969134, 0.6100777387619019, 0.6072510310581752, 0.6047637292316982, 0.6013965776988438, 0.5991842917033604, 0.5954916306904384, 0.5927655356270927, 0.590416499546596, 0.5881963457380023, 0.5859659569604057, 0.5829589026314872, 0.5810328040804181, 0.5783762080328805, 0.5760070426123483, 0.5739236048289708, 0.5727093730654035, 0.5697960683277675, 0.5688292298998151, 0.5671541690826416, 0.5654386622565133, 0.5638637372425624, 0.5612900597708566, 0.559660656111581, 0.557146532194955, 0.5558334759303502, 0.5549916710172381, 0.5524236134120396, 0.5511644738061088, 0.5498097794396537, 0.5484878676278251, 0.5455360582896641, 0.5445787055151803, 0.5437834433146885, 0.5416037525449481, 0.5413420370646885, 0.5388731615883964], "val_accuracy": [0.13466666638851166, 0.23199999332427979, 0.3016666769981384, 0.34566667675971985, 0.37066665291786194, 0.39633333683013916, 0.414000004529953, 0.4300000071525574, 0.4480000138282776, 0.46000000834465027, 0.4740000069141388, 0.4896666705608368, 0.5040000081062317, 0.518666684627533, 0.5299999713897705, 0.5450000166893005, 0.5546666383743286, 0.5640000104904175, 0.5776666402816772, 0.5956666469573975, 0.6026666760444641, 0.6169999837875366, 0.6336666941642761, 0.6496666669845581, 0.653333306312561, 0.6643333435058594, 0.6703333258628845, 0.6736666560173035, 0.6763333082199097, 0.6809999942779541, 0.6806666851043701, 0.6826666593551636, 0.6836666464805603, 0.6890000104904175, 0.6893333196640015, 0.6940000057220459, 0.6949999928474426, 0.6976666450500488, 0.7036666870117188, 0.7043333053588867, 0.703000009059906, 0.7099999785423279, 0.7099999785423279, 0.7110000252723694, 0.7136666774749756, 0.7170000076293945, 0.7170000076293945, 0.718999981880188, 0.7196666598320007, 0.722000002861023, 0.7233333587646484, 0.7269999980926514, 0.7283333539962769, 0.7289999723434448, 0.7326666712760925, 0.731333315372467, 0.7326666712760925, 0.734666645526886, 0.7336666584014893, 0.734000027179718, 0.7366666793823242, 0.7403333187103271, 0.7379999756813049, 0.7406666874885559, 0.7443333268165588, 0.7423333525657654, 0.7426666617393494, 0.7443333268165588, 0.7440000176429749, 0.7453333139419556, 0.746999979019165, 0.7453333139419556, 0.7486666440963745, 0.7483333349227905, 0.7516666650772095, 0.7516666650772095, 0.7523333430290222, 0.7526666522026062, 0.7540000081062317, 0.7549999952316284, 0.753000020980835, 0.753333330154419, 0.753000020980835, 0.7576666474342346, 0.7583333253860474, 0.7586666941642761, 0.7559999823570251, 0.7593333125114441, 0.7606666684150696, 0.7586666941642761, 0.7620000243186951, 0.7620000243186951, 0.7616666555404663, 0.7620000243186951, 0.7636666893959045, 0.7666666507720947, 0.7649999856948853, 0.7639999985694885, 0.7613333463668823, 0.765333354473114]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 6, 3, 2, 4, 4, 0, 4, 5, 3, 0, 2, 2, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 2, 0, 2, 2, 2, 0, 1, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 46, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 2, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 2, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [24, 80, 44, 92]], "fitness": -0.7628571391105652, "mapping_values": [1, 16, 16, 8, 8, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, grad))))), grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.298216465111217, 2.2841203344685446, 2.273531300028664, 2.260416359807585, 2.2473671140923965, 2.2309195364565504, 2.2153731322071226, 2.1956362565904324, 2.1742908031933217, 2.1467987263538046, 2.119554183581061, 2.0850096380611407, 2.0420943113318715, 2.0061661108625626, 1.9516028475531528, 1.8981457435853288, 1.8419909039351132, 1.7811995644091363, 1.7201053500411658, 1.6595389740798672, 1.5996509472990963, 1.5471860246730125, 1.4880693372308995, 1.431861264027656, 1.3961244609456382, 1.3478921743321648, 1.317362038120224, 1.2895164368190724, 1.2538671420943452, 1.217656877377502, 1.1982058309970232, 1.1802338922280424, 1.1601182689220835, 1.143393489348024, 1.108321261868863, 1.1006942628444287, 1.0813529283583772, 1.0644906220686765, 1.04629666525627, 1.0344174765419447, 1.025716603314006, 1.0147860516819736, 0.9968213647064704, 0.983574072060694, 0.9760125521435131, 0.9646443055447901, 0.9588534910177211, 0.9437952895820133, 0.9387830000480467, 0.9345444845107758, 0.9238869130823985, 0.9240756115940474, 0.9177001162668685, 0.9093245924770903, 0.8906288676966672, 0.8860933014729618, 0.8783835725242026, 0.8760879551021257, 0.8762137052121967, 0.8613895962518897, 0.8711434447014289, 0.8674561782693189, 0.8546706298401863, 0.8490843186131589, 0.840103627636826, 0.8453242210443733, 0.8334918310928496, 0.8386251338012246, 0.8188353983434185, 0.8177134013210604, 0.8164103661372661, 0.8202753089217777, 0.8060173647451898, 0.7985011598437517, 0.7948021109959768, 0.7959858301513781, 0.8010110072786656, 0.803494785196037, 0.7921996832507996, 0.7850559557890296, 0.7891990400465991, 0.776192364927611, 0.7748044320479234, 0.7883453127525707, 0.7734089145067109, 0.7664901860921358, 0.7679319462567084, 0.7579040121818027, 0.7722764567235489, 0.7618184701688789, 0.7498221897398712, 0.7571401732268036, 0.7582640553730008, 0.7402490798697385, 0.745358390539487, 0.7426966156910407, 0.7411302372433364, 0.7402793645008506, 0.7474328571259621, 0.7347086930807162], "accuracy": [0.09998679161071777, 0.13168670237064362, 0.16219785809516907, 0.19997358322143555, 0.23154141008853912, 0.2592788338661194, 0.28701624274253845, 0.31118741631507874, 0.33443403244018555, 0.3593977093696594, 0.37247392535209656, 0.3951921761035919, 0.40641921758651733, 0.4041738212108612, 0.4301941692829132, 0.44010037183761597, 0.4492141008377075, 0.46123364567756653, 0.4679698944091797, 0.49214106798171997, 0.5046889185905457, 0.5156518220901489, 0.5239730477333069, 0.5375775694847107, 0.5452384352684021, 0.5538238286972046, 0.5658433437347412, 0.5625412464141846, 0.579051673412323, 0.5926561951637268, 0.594241201877594, 0.6053361296653748, 0.598599910736084, 0.6050719618797302, 0.6148461103439331, 0.6190727949142456, 0.6306960582733154, 0.6276581883430481, 0.6413947939872742, 0.6454893946647644, 0.6409985423088074, 0.64231938123703, 0.6552634835243225, 0.6507726907730103, 0.6522256135940552, 0.6650376319885254, 0.6579051613807678, 0.663848876953125, 0.6707172393798828, 0.6712455153465271, 0.6749438643455505, 0.6696605682373047, 0.6806234121322632, 0.6803592443466187, 0.6857746839523315, 0.6870955228805542, 0.6884163022041321, 0.6910579800605774, 0.6896050572395325, 0.6923788189888, 0.6901333928108215, 0.6913221478462219, 0.6985867023468018, 0.6977941989898682, 0.7005679607391357, 0.6977941989898682, 0.7029454708099365, 0.7017567157745361, 0.709549605846405, 0.713908314704895, 0.7059833407402039, 0.7040021419525146, 0.7148329019546509, 0.7125874757766724, 0.7182670831680298, 0.713379979133606, 0.71100252866745, 0.7125874757766724, 0.7174745798110962, 0.7185312509536743, 0.7174745798110962, 0.7199841737747192, 0.7215691208839417, 0.7137762308120728, 0.7232862114906311, 0.7207766771316528, 0.7246070504188538, 0.7230220437049866, 0.7213049530982971, 0.7260599732398987, 0.7252674698829651, 0.7290979027748108, 0.7217012047767639, 0.7313432693481445, 0.7289658188819885, 0.7285695672035217, 0.7306828498840332, 0.7305507659912109, 0.7275128960609436, 0.7384757399559021], "val_loss": [1.9598100525992257, 1.948700019291469, 1.9372479575020927, 1.9250482150486536, 1.911691665649414, 1.8967625073024206, 1.8798010008675712, 1.8601773806980677, 1.8376668521336146, 1.8113901274544852, 1.7816194125584193, 1.7471034186226981, 1.7072938169751848, 1.6636583805084229, 1.614300080708095, 1.5602964673723494, 1.5028567995343889, 1.4425485815320696, 1.3807691505977087, 1.3193367208753313, 1.2601961748940604, 1.2041564668927873, 1.1518774713788713, 1.103030000414167, 1.0598893846784319, 1.0207388741629464, 0.9860343592507499, 0.9551594257354736, 0.9270467417580741, 0.9004912035805839, 0.877525976725987, 0.8572401489530291, 0.8387716327394757, 0.822481598172869, 0.8065310376031058, 0.7918770653860909, 0.7783665486744472, 0.7664273636681693, 0.7544017008372715, 0.7440685033798218, 0.734925559588841, 0.7262095723833356, 0.717759200504848, 0.7098701851708549, 0.7023369925362724, 0.6948310136795044, 0.6889926706041608, 0.6829526424407959, 0.6763835975102016, 0.6709331614630563, 0.6653621196746826, 0.6597065585000175, 0.6556315762656075, 0.6513357332774571, 0.6468232018607003, 0.6429285492215838, 0.6386771202087402, 0.6341753687177386, 0.6308190482003349, 0.626429728099278, 0.6225366762706211, 0.6195891073771885, 0.6169363941465106, 0.6128193480627877, 0.6100851978574481, 0.6072520869118827, 0.6047628607068744, 0.6013928992407662, 0.5991711786815098, 0.5954960754939488, 0.5927925961358207, 0.5904352494648525, 0.58821359702519, 0.5859795638493129, 0.5829700401851109, 0.5810232162475586, 0.5783750670296806, 0.576000452041626, 0.573918274470738, 0.5727075678961617, 0.5698048216956002, 0.5688407250813076, 0.5671713692801339, 0.5654674598148891, 0.5638618639537266, 0.561303871018546, 0.5596773113523211, 0.5571413891656058, 0.555852975164141, 0.5550073896135602, 0.552432724407741, 0.5511772802897862, 0.5498220069067818, 0.5484896387372699, 0.5455580268587384, 0.5446423973355975, 0.5438527720315116, 0.541655455316816, 0.5413903679166522, 0.5389076811926705], "val_accuracy": [0.13466666638851166, 0.23199999332427979, 0.3016666769981384, 0.34566667675971985, 0.37066665291786194, 0.39633333683013916, 0.414000004529953, 0.43033334612846375, 0.4483333230018616, 0.46000000834465027, 0.4736666679382324, 0.4896666705608368, 0.5036666393280029, 0.518666684627533, 0.5299999713897705, 0.5450000166893005, 0.5546666383743286, 0.5643333196640015, 0.5776666402816772, 0.5956666469573975, 0.6026666760444641, 0.6169999837875366, 0.6340000033378601, 0.6496666669845581, 0.653333306312561, 0.6643333435058594, 0.6703333258628845, 0.6740000247955322, 0.6759999990463257, 0.6809999942779541, 0.6806666851043701, 0.6826666593551636, 0.6833333373069763, 0.6890000104904175, 0.6893333196640015, 0.6940000057220459, 0.6946666836738586, 0.6976666450500488, 0.70333331823349, 0.7043333053588867, 0.70333331823349, 0.7096666693687439, 0.7096666693687439, 0.7116666436195374, 0.7136666774749756, 0.7170000076293945, 0.7173333168029785, 0.718999981880188, 0.7196666598320007, 0.722000002861023, 0.7233333587646484, 0.7269999980926514, 0.7283333539962769, 0.7289999723434448, 0.7326666712760925, 0.731333315372467, 0.7326666712760925, 0.734666645526886, 0.734000027179718, 0.734000027179718, 0.7366666793823242, 0.7403333187103271, 0.737666666507721, 0.7406666874885559, 0.7440000176429749, 0.7426666617393494, 0.7426666617393494, 0.7446666955947876, 0.7440000176429749, 0.7453333139419556, 0.7473333477973938, 0.7450000047683716, 0.7483333349227905, 0.7483333349227905, 0.7516666650772095, 0.7516666650772095, 0.7519999742507935, 0.7526666522026062, 0.7536666393280029, 0.7549999952316284, 0.753000020980835, 0.7540000081062317, 0.753000020980835, 0.7576666474342346, 0.7583333253860474, 0.7586666941642761, 0.7563333511352539, 0.7596666812896729, 0.7603333592414856, 0.7583333253860474, 0.7620000243186951, 0.7616666555404663, 0.7620000243186951, 0.7613333463668823, 0.7636666893959045, 0.765666663646698, 0.7649999856948853, 0.7639999985694885, 0.762666642665863, 0.765666663646698]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 8, 3, 2, 4, 4, 0, 4, 5, 3, 0, 2, 2, 3, 4, 1, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 2, 2, 2, 2, 0, 1, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 31, 76, 31, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 2, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [3, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 2, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [24, 94, 44, 92]], "fitness": -0.7628571391105652, "mapping_values": [1, 47, 47, 29, 18, 9, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 62, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.pow(grad, tf.math.negative(tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.multiply(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), grad)))))), alpha)))), grad)))), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad)))))))))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2982165145836233, 2.2841203344685446, 2.273531124592142, 2.260416359807585, 2.2473671411116993, 2.2309196713641177, 2.2153732851905406, 2.195637021318576, 2.1742926700130005, 2.146801510979518, 2.1195556455835645, 2.085011851187663, 2.042095863241262, 2.006167419787175, 1.9516037787271292, 1.8981477700960145, 1.841994378938651, 1.7812047424002755, 1.7201083820289105, 1.6595419430383176, 1.5996549083194271, 1.5471869716869764, 1.4880664264993613, 1.4318597978840824, 1.3961224731059358, 1.34789019039735, 1.3173592241921084, 1.2895166893141412, 1.2538644081691883, 1.2176607194719629, 1.198208581754135, 1.180243392252667, 1.1601231920878177, 1.1434044415656963, 1.1083273881650981, 1.1006986061343584, 1.0813586774235782, 1.064491998494309, 1.0462935466996872, 1.0344131159791856, 1.0257106840870305, 1.014794024777466, 0.9968108181719767, 0.9835829760152525, 0.9760284033890461, 0.9646550777912328, 0.9588695946717227, 0.9437988911007594, 0.9387823889016507, 0.9345427487567589, 0.9238894341124552, 0.9240759189228702, 0.9177084837874968, 0.9093207103339137, 0.8906375086853895, 0.8860892383272244, 0.8783743805212036, 0.8760939576701088, 0.8762006296961614, 0.8613844500430713, 0.8711242027695877, 0.8674347015766184, 0.8546321964644957, 0.8490911256588367, 0.8400884461818575, 0.8453228319042378, 0.833492956330291, 0.8386422049619771, 0.8188198178420056, 0.817699331625373, 0.8163907446046909, 0.8202691978986915, 0.806027275932432, 0.79849171102354, 0.7947969185032188, 0.79598591530312, 0.8009887474591879, 0.8034758169920909, 0.7921991832283715, 0.7850583253708561, 0.7892169167399957, 0.7761855259106664, 0.7747975690033237, 0.7883667271087796, 0.773400479012697, 0.7664696862983855, 0.7679353989016158, 0.7579181944106815, 0.7722745064211528, 0.7618170108588584, 0.7498322734900784, 0.7571277358056122, 0.7583020371358471, 0.7402644523807788, 0.7453576183322241, 0.7427014176399322, 0.7411488259095306, 0.740277546122247, 0.7474590389562589, 0.7347064467232854], "accuracy": [0.09998679161071777, 0.13168670237064362, 0.16219785809516907, 0.19997358322143555, 0.23154141008853912, 0.2592788338661194, 0.2871483266353607, 0.31105533242225647, 0.3345661163330078, 0.3593977093696594, 0.3723418414592743, 0.3951921761035919, 0.40641921758651733, 0.40404173731803894, 0.4301941692829132, 0.44010037183761597, 0.4493461847305298, 0.46123364567756653, 0.46810197830200195, 0.49214106798171997, 0.5046889185905457, 0.5155197381973267, 0.5239730477333069, 0.5374455451965332, 0.5451063513755798, 0.5538238286972046, 0.5658433437347412, 0.5624092221260071, 0.579051673412323, 0.5925241112709045, 0.594241201877594, 0.605468213558197, 0.5984678268432617, 0.604939877986908, 0.6147140264511108, 0.6190727949142456, 0.6306960582733154, 0.6276581883430481, 0.6412627100944519, 0.6454893946647644, 0.6411306262016296, 0.64231938123703, 0.6553955674171448, 0.650640606880188, 0.6520935297012329, 0.6651697158813477, 0.6580372452735901, 0.6637167930603027, 0.6705851554870605, 0.6711134314537048, 0.6752080321311951, 0.6700568199157715, 0.6806234121322632, 0.6802271604537964, 0.6856426000595093, 0.6870955228805542, 0.6884163022041321, 0.6911900639533997, 0.6896050572395325, 0.6925109028816223, 0.6900013089179993, 0.691850483417511, 0.6985867023468018, 0.6980583667755127, 0.7004358768463135, 0.6976621150970459, 0.7030775547027588, 0.7017567157745361, 0.7094175219535828, 0.7136441469192505, 0.7058512568473816, 0.7038700580596924, 0.7147008180618286, 0.7127195596694946, 0.7181349992752075, 0.7132478952407837, 0.7111346125602722, 0.7125874757766724, 0.7176066637039185, 0.7185312509536743, 0.7174745798110962, 0.719852089881897, 0.7213049530982971, 0.7136441469192505, 0.7232862114906311, 0.720380425453186, 0.724739134311676, 0.7228899598121643, 0.7213049530982971, 0.7260599732398987, 0.7255316376686096, 0.7294940948486328, 0.7219653725624084, 0.7309470176696777, 0.7296261787414551, 0.7284374833106995, 0.7304186820983887, 0.7305507659912109, 0.7269845604896545, 0.7383436560630798], "val_loss": [1.9598101207188197, 1.948699951171875, 1.9372480937412806, 1.9250482831682478, 1.911691461290632, 1.8967631884983607, 1.8798016139439173, 1.8601788112095423, 1.837669849395752, 1.811391966683524, 1.7816220692225866, 1.747105939047677, 1.707296405519758, 1.6636600153786796, 1.614300216947283, 1.560298068182809, 1.5028626237596785, 1.442551817212786, 1.38077255657741, 1.3193355628422327, 1.2601960727146693, 1.2041542189461845, 1.151874644415719, 1.1030278546469552, 1.0598875795091902, 1.0207389763423376, 0.9860350745064872, 0.9551594938550677, 0.9270538261958531, 0.9004957675933838, 0.8775325162070138, 0.8572438614709037, 0.838775600705828, 0.8224906921386719, 0.8065389054162162, 0.7918799945286342, 0.7783709594181606, 0.766432659966605, 0.7544019392558506, 0.7440615892410278, 0.7349175725664411, 0.7261966466903687, 0.7177509239741734, 0.7098603078297206, 0.7023273025240216, 0.6948341131210327, 0.6889902864183698, 0.6829450981957572, 0.676377705165318, 0.6709342343466622, 0.6653683696474347, 0.6597073759351458, 0.6556375707898822, 0.6513352223805019, 0.6468315635408673, 0.6429360594068255, 0.6386708702359881, 0.634154234613691, 0.6308000768933978, 0.6264017990657261, 0.6225095306124006, 0.6195676156452724, 0.616925835609436, 0.6128078699111938, 0.6100867986679077, 0.6072529043470111, 0.6047556400299072, 0.6014032534190586, 0.5991754872458321, 0.5954969269888741, 0.5927865164620536, 0.5904170445033482, 0.5881975718906948, 0.5859665189470563, 0.5829520566122872, 0.5810216494968959, 0.5783613409314837, 0.5760120834623065, 0.5739320346287319, 0.5727525097983224, 0.5698003939219883, 0.568831205368042, 0.5671627010617938, 0.5654428686414447, 0.5638724906103951, 0.5612694365637643, 0.5596573352813721, 0.557145493371146, 0.5558171612875802, 0.554972767829895, 0.5524048464638847, 0.5511481591633388, 0.5498086724962506, 0.548500623021807, 0.5455714293888637, 0.5445916141782489, 0.5437978165490287, 0.541630710874285, 0.541363171168736, 0.5388892378125872], "val_accuracy": [0.13466666638851166, 0.23199999332427979, 0.3016666769981384, 0.34566667675971985, 0.37066665291786194, 0.39633333683013916, 0.414000004529953, 0.4300000071525574, 0.4480000138282776, 0.46000000834465027, 0.4736666679382324, 0.4896666705608368, 0.5040000081062317, 0.518666684627533, 0.5299999713897705, 0.5453333258628845, 0.5546666383743286, 0.5643333196640015, 0.5776666402816772, 0.5956666469573975, 0.6026666760444641, 0.6169999837875366, 0.6340000033378601, 0.6496666669845581, 0.653333306312561, 0.6643333435058594, 0.6703333258628845, 0.6740000247955322, 0.6763333082199097, 0.6809999942779541, 0.6803333163261414, 0.6826666593551636, 0.6836666464805603, 0.6890000104904175, 0.6893333196640015, 0.6940000057220459, 0.6946666836738586, 0.6976666450500488, 0.7036666870117188, 0.7043333053588867, 0.703000009059906, 0.7096666693687439, 0.7096666693687439, 0.7113333344459534, 0.7136666774749756, 0.7170000076293945, 0.7173333168029785, 0.718999981880188, 0.7196666598320007, 0.722000002861023, 0.7233333587646484, 0.7266666889190674, 0.7283333539962769, 0.7289999723434448, 0.7326666712760925, 0.731333315372467, 0.7326666712760925, 0.734666645526886, 0.734000027179718, 0.734000027179718, 0.7366666793823242, 0.7403333187103271, 0.7379999756813049, 0.7406666874885559, 0.7440000176429749, 0.7429999709129333, 0.7429999709129333, 0.7446666955947876, 0.7440000176429749, 0.7453333139419556, 0.746999979019165, 0.7450000047683716, 0.7483333349227905, 0.7486666440963745, 0.7516666650772095, 0.7516666650772095, 0.7519999742507935, 0.7526666522026062, 0.7540000081062317, 0.7546666860580444, 0.753000020980835, 0.7536666393280029, 0.753000020980835, 0.7576666474342346, 0.7583333253860474, 0.7586666941642761, 0.7559999823570251, 0.7593333125114441, 0.7606666684150696, 0.7583333253860474, 0.7620000243186951, 0.7620000243186951, 0.7620000243186951, 0.7613333463668823, 0.7636666893959045, 0.7663333415985107, 0.7649999856948853, 0.7639999985694885, 0.762333333492279, 0.765666663646698]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 5, 9, 9, 2, 6, 6, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 2, 1, 0, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 2, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.3594285845756531, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.5016297823591414, 2.292971518722744, 2.3590846618153023, 2.3041626336064085, 2.303145479422204, 2.3029453596340086], "accuracy": [0.2425042986869812, 0.12362963706254959, 0.17633073031902313, 0.09774138033390045, 0.1002509593963623, 0.09813763201236725], "val_loss": [1.8302598680768694, 1.9538937296186174, 1.9750455447605677, 1.9738906451633997, 1.9736977985927038, 1.9736242975507463], "val_accuracy": [0.32499998807907104, 0.14933332800865173, 0.10400000214576721, 0.09966666996479034, 0.10100000351667404, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 3, 5, 2, 2, 6, 4, 0, 4, 2, 3, 0, 5, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 2, 2, 2, 2, 0, 2, 1, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [3, 2], [93], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 4, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(alpha, grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(sigma, beta), sigma))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 2, 3, 2, 4, 4, 0, 4, 5, 3, 0, 2, 2, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [15, 23, 76, 80, 1, 39, 91, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 2, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 2, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 46, 46, 30, 16, 10, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad))))), tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))))))))))), grad), grad)), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad)))))))), alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07211729139089584, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 2, 3, 2, 4, 4, 0, 4, 5, 3, 3, 2, 2, 2, 1, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 2, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 80, 99, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 2, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 2, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 0, 3, 2, 3, 0, 1, 0, 3], [24, 94, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 54, 54, 34, 20, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.subtract(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(grad, grad))))))))))), alpha))), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))))), grad))), tf.math.add(alpha, alpha)), grad), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [319.43453475635727, 4903.028369456644, 22523.177073702285, 61143.19937611445, 128217.85852677982, 236426.54595661076], "accuracy": [0.10117553919553757, 0.10051512718200684, 0.09945846349000931, 0.10711926966905594, 0.09826971590518951, 0.10249637067317963], "val_loss": [1050.7754603794642, 7681.578683035715, 25319.270647321428, 59369.79241071428, 115241.33035714286, 198341.80357142858], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 6, 3, 2, 4, 4, 0, 4, 5, 3, 0, 0, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 2, 1, 1, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 3, 6, 2, 0, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 12, 10, 3, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 12, 6, 6, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))))), alpha))), grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(sigma, tf.math.negative(beta)), tf.math.subtract(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09100515395402908, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 6, 2, 3, 2, 2, 8, 0, 5, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [71, 89, 76, 80, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [3, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad)))))), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 9, 8, 3, 2, 2, 4, 6, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 60, 23, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 2, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [15.409152370921971, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21278563141822815, 0.11306300014257431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.459801197052002, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 2, 2, 3, 2, 4, 4, 0, 4, 5, 3, 0, 0, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 2, 1, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 6, 2, 8, 2, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 0, 3, 2, 3, 0, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 14, 11, 3, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 12, 6, 6, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.negative(grad), alpha)), grad)), tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))))), tf.math.negative(grad))))), tf.math.subtract(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(tf.math.add(beta, sigma))), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 3, 8, 2, 2, 2, 5, 0, 4, 5, 3, 0, 2, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [1, 2], [93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 9, 6, 2, 8, 2, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 2, 2, 0, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.negative(tf.math.add(alpha, grad))))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [97403333.82415822, 1802870231.4917448, 8622751468.489763, 23765490780.10725, 50238946545.697, 93106800146.86778], "accuracy": [0.10117553919553757, 0.10038304328918457, 0.09945846349000931, 0.1072513535618782, 0.09866596013307571, 0.10249637067317963], "val_loss": [362784521.14285713, 2900228754.285714, 9785964836.571428, 23193660854.857143, 45296767561.14286, 78268973056.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 6, 2, 3, 2, 2, 4, 0, 5, 5, 3, 0, 9, 1, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 2, 0, 2, 2, 2, 2, 1, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [94, 33, 76, 80, 1, 39, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 0, 0, 8, 4, 2, 2, 0, 2, 2, 1, 2, 6, 8, 3, 6, 2, 0, 9, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 4, 1, 3, 0, 0, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [80, 20, 70, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0], [6, 8, 1, 3], [3, 2], [93], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 3, 6, 2, 8, 1, 3, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 0, 3, 2, 3, 0, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 21, 21, 13, 8, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, grad)))))), tf.math.square(tf.math.multiply(tf.math.negative(grad), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))))), grad))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(sigma, tf.math.add(tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(sigma, beta), sigma))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303175459070575, 2.3010256229973014, 2.3025512414097613, 2.302140708486748, 2.302407084706752, 2.3011310347759997], "accuracy": [0.0878351628780365, 0.08955223858356476, 0.09060890227556229, 0.09074098616838455, 0.09589222073554993, 0.09206181764602661], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]