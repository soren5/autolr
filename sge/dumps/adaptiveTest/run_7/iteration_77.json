[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 0, 1, 1], [5, 1], [1, 0], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8199999928474426, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0261510624908863, 1.4966660093842339, 1.0587469560910114, 0.936040677824009, 0.8291133408139584, 0.777970317135618, 0.7624808547125517, 0.7113733585358548, 0.6771437035512615, 0.6849069567231171, 0.6616340445221974, 0.6529650268868338, 0.6317961967427576, 0.6111262742286786, 0.59313545236813, 0.5977187820901771, 0.5678187599271564, 0.5680668600372997, 0.5529598870911634, 0.5606077257369125, 0.5359803239242071, 0.542167000798281, 0.5206302853190211, 0.5236838259921807, 0.5151363784894337, 0.49786136971803596, 0.5057100665969242, 0.5102581593732415, 0.4813157633082773, 0.4839027160233699, 0.46155065333114215, 0.46065960873891143, 0.45536641502392966, 0.4449462418850025, 0.45901193368105825, 0.4440813269542429, 0.43191441579454565, 0.4303034023601838, 0.452909475997171, 0.4217809901820387, 0.42408325223874865, 0.4234003130518261, 0.39594498878582796, 0.3987554417011083, 0.412784449719734, 0.40227824175960875, 0.3968163471944013, 0.39204692641395417, 0.38573175030235823], "accuracy": [0.3275656998157501, 0.4843481779098511, 0.6122044920921326, 0.663848876953125, 0.6909258961677551, 0.7078325152397156, 0.7128516435623169, 0.7317395210266113, 0.7421740889549255, 0.7409853339195251, 0.7490423917770386, 0.7466648817062378, 0.7577598690986633, 0.7683265209197998, 0.7733456492424011, 0.7700436115264893, 0.7849689722061157, 0.7828556299209595, 0.7927618622779846, 0.7889314293861389, 0.8021397590637207, 0.7964601516723633, 0.8061022162437439, 0.8031964302062988, 0.8026680946350098, 0.8112534880638123, 0.8113855719566345, 0.8025360107421875, 0.8230088353157043, 0.8202351331710815, 0.8247259259223938, 0.8289526104927063, 0.828292191028595, 0.8325188159942627, 0.8322546482086182, 0.8399154543876648, 0.8421608805656433, 0.8413683772087097, 0.828292191028595, 0.8432175517082214, 0.8448025584220886, 0.8399154543876648, 0.8613129258155823, 0.8500858545303345, 0.8488970994949341, 0.8494254350662231, 0.8485008478164673, 0.8557654023170471, 0.8519350290298462], "val_loss": [1.5185764857700892, 0.9659169401441302, 0.8442940882274083, 0.6639366149902344, 0.5765084709439959, 0.5565776143755231, 0.536138755934579, 0.514951229095459, 0.5083305665424892, 0.5382555893489293, 0.4842322383608137, 0.4973798990249634, 0.5126386710575649, 0.47266134193965365, 0.48494391781943186, 0.4481245109013149, 0.4607103722436087, 0.4422571914536612, 0.4401970590863909, 0.42931232282093595, 0.4395727940968105, 0.4113724487168448, 0.42286687237875803, 0.44038053921290804, 0.4273632679666792, 0.41448088203157696, 0.4021977867398943, 0.42615253584725515, 0.3991836224283491, 0.37234372752053396, 0.3838278480938503, 0.3926592298916408, 0.36191415786743164, 0.3974833403314863, 0.36444904123033794, 0.3520294598170689, 0.35127492461885723, 0.43443216596330914, 0.3465617299079895, 0.35403349569865633, 0.3611914430345808, 0.34848950590406147, 0.364295985017504, 0.3337273597717285, 0.33425724506378174, 0.3493287648473467, 0.3745751976966858, 0.35958909136908396, 0.3468489646911621], "val_accuracy": [0.4233333468437195, 0.6416666507720947, 0.6256666779518127, 0.6970000267028809, 0.750333309173584, 0.7423333525657654, 0.7566666603088379, 0.7716666460037231, 0.7826666831970215, 0.7459999918937683, 0.7870000004768372, 0.7683333158493042, 0.7566666603088379, 0.7866666913032532, 0.7726666927337646, 0.8033333420753479, 0.7996666431427002, 0.8086666464805603, 0.8013333082199097, 0.8146666884422302, 0.8026666641235352, 0.8193333148956299, 0.8106666803359985, 0.7926666736602783, 0.8140000104904175, 0.8196666836738586, 0.8199999928474426, 0.8226666450500488, 0.82833331823349, 0.843666672706604, 0.8323333263397217, 0.8220000267028809, 0.8496666550636292, 0.8216666579246521, 0.8443333506584167, 0.8483333587646484, 0.8503333330154419, 0.7926666736602783, 0.8556666374206543, 0.8476666808128357, 0.843999981880188, 0.8460000157356262, 0.8410000205039978, 0.8629999756813049, 0.8619999885559082, 0.8483333587646484, 0.8363333344459534, 0.8416666388511658, 0.8519999980926514]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 8, 2, 3, 2, 3, 3, 3, 2, 8, 2, 6, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 5, 3, 3, 3, 2, 5, 3, 2, 3, 0, 1, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 52, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [1, 0, 1, 1], [1, 4], [1, 0], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.805142879486084, "mapping_values": [1, 2, 2, 1, 1, 0, 30, 30, 15, 15, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, grad))))), tf.math.add(tf.math.multiply(beta, tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.026165846930582, 1.4978717928470606, 1.0579028689645584, 0.9376792835285478, 0.8320712043608909, 0.78430285592042, 0.7537839084159051, 0.7187787400355129, 0.6699175668383129, 0.6809377796409656, 0.6717881540407546, 0.6424102269348262, 0.6351591420919982, 0.6087493481668798, 0.589100064287852, 0.5931278808462369, 0.5706943674897473, 0.5774230270211912, 0.5504558525025931, 0.545090532093441, 0.5417338993964713, 0.5488595958509308, 0.5260047725147308, 0.5108791547971961], "accuracy": [0.32743361592292786, 0.4839519262313843, 0.6098269820213318, 0.6645092964172363, 0.6894729733467102, 0.7018887996673584, 0.7168141603469849, 0.7263241410255432, 0.741909921169281, 0.739400327205658, 0.7461365461349487, 0.7559106945991516, 0.7581561207771301, 0.767930269241333, 0.7730814814567566, 0.7726852297782898, 0.7876105904579163, 0.7773081660270691, 0.7955356240272522, 0.7952714562416077, 0.8016114234924316, 0.7913089394569397, 0.8057059645652771, 0.81112140417099], "val_loss": [1.5186315604618617, 0.9726171834128243, 0.8545278481074742, 0.6780722481863839, 0.5690173421587262, 0.5716880559921265, 0.5667071683066232, 0.5532375574111938, 0.5035973787307739, 0.4946835551943098, 0.48454991408756803, 0.5117772647312709, 0.48683530943734304, 0.48206640992845806, 0.47456155504499165, 0.45802342891693115, 0.47873391423906597, 0.43131118161337717, 0.4242558309010097, 0.43434964759009226, 0.43590158224105835, 0.4219263195991516, 0.4275138463292803, 0.4351833888462612], "val_accuracy": [0.42233332991600037, 0.6399999856948853, 0.6223333477973938, 0.6919999718666077, 0.7523333430290222, 0.7450000047683716, 0.7356666922569275, 0.734333336353302, 0.778333306312561, 0.7733333110809326, 0.7886666655540466, 0.753333330154419, 0.7803333401679993, 0.7763333320617676, 0.7820000052452087, 0.7979999780654907, 0.7896666526794434, 0.8130000233650208, 0.8159999847412109, 0.8116666674613953, 0.8026666641235352, 0.809333324432373, 0.8056666851043701, 0.7956666946411133]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 1, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 0, 5, 3, 3, 3, 3, 5, 2, 0, 2, 3, 1, 1, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0], [0, 0, 1, 1], [1, 4], [1, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.75342857837677, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2988807074917528, 2.286689644649658, 2.2761326615269692, 2.2678895296752573, 2.2580516955572554, 2.247715443919883, 2.2324305090528234, 2.2210899110735367, 2.2057873800587835, 2.188972373380952, 2.1695794635019943, 2.150569768645398, 2.124516529665962, 2.097876135699265, 2.0663263957734435, 2.031463802293811, 1.9975994756082895, 1.9539760133420565, 1.9143177996127676, 1.8621241123826513, 1.8274485516494623, 1.766101565217424, 1.722602380989502, 1.663724931271132, 1.612671991617074, 1.5736105862924719, 1.5237149780043175, 1.4736811390421913, 1.4479610558592837, 1.4060025242703575, 1.368543908108243, 1.3307051659575102, 1.3092961221748356, 1.2809863334413154, 1.2591976561267315, 1.2354918597255007, 1.215779495088101, 1.193842812095257, 1.1704381486727435, 1.155761711003207, 1.143999518089763, 1.1334031809275382, 1.101774999163548, 1.0940881029741718, 1.0879874652828034, 1.0712712358379755, 1.0614606374605315, 1.040965191235616, 1.0313104816069456, 1.0191785425888533, 1.0182662957285562, 0.9949162208078214, 0.9875219211035464, 0.9855457001815083, 0.9774676461214119, 0.9707099319512047, 0.9621564292038562, 0.9529181894939872, 0.9429196335573112, 0.9412647355202718, 0.926101632610115, 0.9223361276380453, 0.9239594590756809, 0.9128521337658423, 0.9092480587512117, 0.9044907684449617, 0.8971971160999268, 0.8824061816000999, 0.8843810071152877, 0.8875582800439289, 0.87862340948286, 0.8697551048316849, 0.8719489212206815, 0.8725173725680022, 0.854765167703655, 0.8565108738696933, 0.8495194251589913, 0.8513268592996589, 0.8504664552934481, 0.8469024063683992, 0.8452856631295367, 0.8335318139846125, 0.8260289990292595, 0.8327381610476724, 0.8241450710382286, 0.8149123098383868, 0.8136417063283032, 0.8124785510036593, 0.8149339354285443, 0.807242713379523, 0.7968975121177277, 0.8015567844632973, 0.7876062743604899, 0.7981808564414469, 0.792070683872758, 0.7841615540208817, 0.783807870844462, 0.7960672973326846, 0.7903700969899728, 0.7860873005787269], "accuracy": [0.09879804402589798, 0.1278562992811203, 0.16431118547916412, 0.17831197381019592, 0.2024831622838974, 0.2300885021686554, 0.2616563141345978, 0.28397834300994873, 0.3000924587249756, 0.3265090584754944, 0.33522653579711914, 0.3486989736557007, 0.36626601219177246, 0.38066306710243225, 0.40364548563957214, 0.40470215678215027, 0.41526877880096436, 0.42728832364082336, 0.4403645396232605, 0.45330867171287537, 0.44644036889076233, 0.46968695521354675, 0.47510236501693726, 0.49570730328559875, 0.49729230999946594, 0.4994056224822998, 0.5176330804824829, 0.5301809310913086, 0.5300488471984863, 0.5420684218406677, 0.5489367246627808, 0.559371292591095, 0.5612204670906067, 0.5684850215911865, 0.5739004015922546, 0.585391640663147, 0.5811649560928345, 0.5880332589149475, 0.5971469879150391, 0.6041474342346191, 0.6017699241638184, 0.6070532202720642, 0.6189407110214233, 0.6218464970588684, 0.6206578016281128, 0.6299035549163818, 0.6258090138435364, 0.6404702067375183, 0.6427156329154968, 0.6494518518447876, 0.6415268778800964, 0.6513010263442993, 0.6483951807022095, 0.655527651309967, 0.6597543358802795, 0.6584334969520569, 0.6588297486305237, 0.6670188903808594, 0.6646413803100586, 0.6688680648803711, 0.6715096831321716, 0.6754721999168396, 0.6749438643455505, 0.6818121671676636, 0.6866992712020874, 0.678642213344574, 0.6789063811302185, 0.687887966632843, 0.6864351034164429, 0.6820763349533081, 0.6903975605964661, 0.6915863156318665, 0.6877558827400208, 0.6914542317390442, 0.6919825673103333, 0.6951525807380676, 0.7000396251678467, 0.6934354901313782, 0.6919825673103333, 0.7029454708099365, 0.6968696117401123, 0.7016246318817139, 0.7003037929534912, 0.6997754573822021, 0.7066437602043152, 0.7057191729545593, 0.7071720957756042, 0.7112666964530945, 0.7029454708099365, 0.7102100253105164, 0.7147008180618286, 0.709021270275116, 0.7189275026321411, 0.7131158113479614, 0.7209087014198303, 0.7164179086685181, 0.715889573097229, 0.7137762308120728, 0.7143045663833618, 0.7185312509536743], "val_loss": [1.961672578539167, 1.9524698938642229, 1.943171569279262, 1.9334499495370048, 1.9232996531895228, 1.9124689783368791, 1.9004453250340052, 1.887105873652867, 1.872241701398577, 1.8554696355547224, 1.8364193098885673, 1.815159457070487, 1.7910782269069128, 1.7640889031546456, 1.7339038848876953, 1.700321844645909, 1.6635832786560059, 1.6230853625706263, 1.579615558896746, 1.5330100740705217, 1.4857511860983712, 1.4358868939535958, 1.3861028126307897, 1.3357456752232142, 1.2860659190586634, 1.2389592783791679, 1.1937055247170585, 1.1509379999978202, 1.1120823110852922, 1.0759419713701521, 1.0424143927437919, 1.011343138558524, 0.983224902834211, 0.9578856740679059, 0.9346465042659214, 0.9133433614458356, 0.8937176976885114, 0.8754702295575824, 0.8584801299231393, 0.8428124529974801, 0.8286303622382027, 0.8157352209091187, 0.8024882418768746, 0.7912203924996513, 0.7796837432043893, 0.7703438656670707, 0.7604510954448155, 0.7514141627720424, 0.743192195892334, 0.7346856423786708, 0.7276967082704816, 0.7198903901236398, 0.7130381039210728, 0.7066072566168649, 0.7008779389517648, 0.6955558061599731, 0.6901078394481114, 0.6849263565880912, 0.6803436960492816, 0.6760360172816685, 0.671198810849871, 0.6665305410112653, 0.6627555744988578, 0.6584810018539429, 0.6550535133906773, 0.6506887333733695, 0.646966712815421, 0.6423855168478829, 0.6392953055245536, 0.6369462013244629, 0.6338575056621006, 0.6298629726682391, 0.6270418848310199, 0.6244672196252006, 0.621362464768546, 0.618685075214931, 0.6163918631417411, 0.6129132509231567, 0.6104498420442853, 0.6080915416990008, 0.6056843655450004, 0.6029363189424787, 0.6013520615441459, 0.599124721118382, 0.5967944519860404, 0.5951805795942035, 0.5924066475459507, 0.5899863924298968, 0.5886333840233939, 0.5859803472246442, 0.5832746710096087, 0.5823926414762225, 0.5799334730420794, 0.5781012943812779, 0.5768336398260934, 0.5745314019066947, 0.5723193372998919, 0.5717915296554565, 0.5706702641078404, 0.5686689615249634], "val_accuracy": [0.1146666631102562, 0.1940000057220459, 0.27000001072883606, 0.3166666626930237, 0.35100001096725464, 0.3700000047683716, 0.3876666724681854, 0.40700000524520874, 0.4183333218097687, 0.43833333253860474, 0.4466666579246521, 0.4593333303928375, 0.4703333377838135, 0.4806666672229767, 0.4973333477973938, 0.5063333511352539, 0.5173333287239075, 0.5306666493415833, 0.5433333516120911, 0.5553333163261414, 0.5640000104904175, 0.5709999799728394, 0.5833333134651184, 0.5943333506584167, 0.6006666421890259, 0.606333315372467, 0.6196666955947876, 0.6359999775886536, 0.643666684627533, 0.6543333530426025, 0.6600000262260437, 0.6646666526794434, 0.6693333387374878, 0.671999990940094, 0.6763333082199097, 0.6779999732971191, 0.6830000281333923, 0.684333324432373, 0.684333324432373, 0.6856666803359985, 0.6909999847412109, 0.6899999976158142, 0.6930000185966492, 0.6933333277702332, 0.6966666579246521, 0.6966666579246521, 0.7023333311080933, 0.7043333053588867, 0.7046666741371155, 0.7066666483879089, 0.7073333263397217, 0.7093333601951599, 0.7126666903495789, 0.7146666646003723, 0.7136666774749756, 0.7149999737739563, 0.7166666388511658, 0.7183333039283752, 0.7196666598320007, 0.7200000286102295, 0.721666693687439, 0.7269999980926514, 0.7260000109672546, 0.7253333330154419, 0.7239999771118164, 0.7306666374206543, 0.7296666502952576, 0.7316666841506958, 0.7319999933242798, 0.731333315372467, 0.7329999804496765, 0.7329999804496765, 0.7356666922569275, 0.7369999885559082, 0.737666666507721, 0.7386666536331177, 0.7369999885559082, 0.7393333315849304, 0.7423333525657654, 0.7409999966621399, 0.7426666617393494, 0.7426666617393494, 0.7440000176429749, 0.7446666955947876, 0.7453333139419556, 0.7446666955947876, 0.7459999918937683, 0.746999979019165, 0.746666669845581, 0.7493333220481873, 0.749666690826416, 0.746999979019165, 0.7493333220481873, 0.7516666650772095, 0.7519999742507935, 0.7519999742507935, 0.7523333430290222, 0.753000020980835, 0.753000020980835, 0.7540000081062317]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 0, 1, 1], [4, 4], [5, 3], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.4734285771846771, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 5, 4, 2, 2, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9800536279838319, 1.5971680057677045, 0.9156455337143121, 0.755745390638967, 0.7303725076373605, 0.6991075722296728, 0.6485976967215145, 0.6533522536143367, 0.8034871076832137, 0.8877615300088967, 1.0148088064302054], "accuracy": [0.35345396399497986, 0.500990629196167, 0.6651697158813477, 0.7128516435623169, 0.733588695526123, 0.739928662776947, 0.7592127919197083, 0.765949010848999, 0.7289658188819885, 0.684982180595398, 0.6548672318458557], "val_loss": [1.7039251327514648, 0.7550257784979684, 0.5940089906964984, 0.5413043328693935, 0.521140490259443, 0.4664804254259382, 0.4594097648348127, 0.5120263610567365, 0.691877041544233, 0.5699666397912162, 0.6284441607339042], "val_accuracy": [0.4880000054836273, 0.687666654586792, 0.7166666388511658, 0.7643333077430725, 0.7633333206176758, 0.7996666431427002, 0.7946666479110718, 0.7860000133514404, 0.7749999761581421, 0.7599999904632568, 0.7283333539962769]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 1, 1, 1], [4, 4], [5, 3], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.39885714650154114, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9792257736639622, 1.5982091757662622, 0.9210911177609497, 0.7652209209035401, 0.7488054805868857, 0.7039669730628344, 0.697410619380121, 0.8095538680658302, 0.7796958329466277, 0.9462710964980457, 0.9729230242114986, 0.9750985431790808], "accuracy": [0.3541143834590912, 0.5016510486602783, 0.6617355942726135, 0.7154933214187622, 0.7301545143127441, 0.7440232634544373, 0.7530049085617065, 0.7136441469192505, 0.7323999404907227, 0.6905296444892883, 0.6664905548095703, 0.6977941989898682], "val_loss": [1.7018556254250663, 0.7609751054218837, 0.588537335395813, 0.5438458749226162, 0.5295988491603306, 0.4864023072378976, 0.49670372690473286, 0.5776597942624774, 0.5468072720936367, 0.7855877195085798, 0.6069498573030744, 0.6645715577261788], "val_accuracy": [0.48633334040641785, 0.6896666884422302, 0.7296666502952576, 0.7649999856948853, 0.7536666393280029, 0.7786666750907898, 0.7796666622161865, 0.7523333430290222, 0.7793333530426025, 0.6936666369438171, 0.7670000195503235, 0.737333357334137]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [7, 7, 1, 7, 6, 6, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 5, 3, 3, 3, 3, 5, 2, 0, 2, 3, 1, 1, 3, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [44, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0], [0, 0, 1, 1], [1, 4], [1, 2], [76], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.30085715651512146, "mapping_values": [1, 2, 2, 1, 1, 0, 41, 41, 22, 19, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.multiply(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad)))))), tf.math.multiply(beta, tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), tf.math.add(beta, alpha)))), tf.math.add(beta, alpha)), tf.math.add(beta, grad))), alpha))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.181591178479369, 2.1910014806280613, 2.175064908168603, 2.230137756928603, 2.6901700312451067, 2.30527650253443, 2.3026167901436794, 2.335077052386587], "accuracy": [0.23695680499076843, 0.21872936189174652, 0.19984149932861328, 0.24607053399085999, 0.1254788041114807, 0.10051512718200684, 0.1010434553027153, 0.16721701622009277], "val_loss": [1.9301506451198034, 1.8884342738560267, 1.9659903390066964, 1.9551050322396415, 1.9764624323163713, 1.9736649649483817, 1.965735980442592, 1.976548194885254], "val_accuracy": [0.1393333375453949, 0.1679999977350235, 0.17033334076404572, 0.15666666626930237, 0.1003333330154419, 0.10133333504199982, 0.11800000071525574, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 8, 0, 0, 5, 6, 6, 6, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 2, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0], [0, 0, 1, 1], [1, 4], [1, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.22171428799629211, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029079309402283, 2.3001980823123334, 2.2988707027604094, 2.3008513292222683, 2.301287936685643, 2.3013079243250463, 2.298256439445293, 2.299936004019432, 2.2976618292718722, 2.2973403977900606, 2.2975878656626914, 2.2985515163370236, 2.2975047725838222, 2.2960165039486244, 2.2938911842710983, 2.2931412602806165, 2.2940134883100143, 2.291375570010043, 2.294212787756909, 2.292375606206335, 2.2952581112017296, 2.290851870201614, 2.29292534393106, 2.2884916158604853, 2.2874868208343924, 2.289505085153445, 2.287065200801885, 2.2836699929172495, 2.2863292228654393, 2.2846235759726543, 2.286504676171644, 2.2838860635413565, 2.2827388837809544, 2.282685337380301, 2.284519728636776, 2.2826461820963933, 2.281101518004184, 2.2807363928773574, 2.2804979777307777, 2.2793732791009313, 2.282052426526512, 2.2796164889455928, 2.278106642500001, 2.2805977866256306, 2.278913549601583, 2.275660662367013, 2.2796619233202073, 2.276582719375586, 2.2749222801849904, 2.276705443284389, 2.2791460660690834, 2.2734102252420576, 2.271768546800383, 2.276097380615827, 2.2757891551488743, 2.2747228190001714, 2.273973050165989, 2.2786605052345887, 2.270064795510077, 2.2773205834357118, 2.267444243032415, 2.274303623461972, 2.272293179089666, 2.27771815502916, 2.272026034016194, 2.270532379690777, 2.2758120626049774, 2.268183624141362, 2.273246307131196, 2.2720388960860363, 2.2750243009152333, 2.2721912998486156, 2.2661857566876322, 2.277457236834269, 2.277118797614637, 2.2704310027316357, 2.274899161487066, 2.2786228382167026, 2.2702171784255953, 2.2736411527667175, 2.2769441786632405, 2.2709879140812315, 2.2778063077401365, 2.26488115995032, 2.2648147898044066, 2.271361797618954, 2.268150655899884, 2.264378835118568, 2.2718691207067985, 2.264096276477627, 2.266185452704731, 2.27008580915869, 2.2628434792391268, 2.264590672970511, 2.2596545793817753, 2.263320257824016, 2.262692335464101, 2.277223357781443, 2.272698329975419, 2.266080776461993], "accuracy": [0.09047681838274002, 0.09589222073554993, 0.09866596013307571, 0.09219389408826828, 0.09140139818191528, 0.09708096832036972, 0.1018359512090683, 0.09602430462837219, 0.10091137140989304, 0.10394927859306335, 0.09893012791872025, 0.10077928751707077, 0.10434553027153015, 0.10051512718200684, 0.10527011007070541, 0.10830801725387573, 0.11742173880338669, 0.11042134463787079, 0.11094967275857925, 0.10711926966905594, 0.11134592443704605, 0.1158367469906807, 0.10962884873151779, 0.11451591551303864, 0.12138422578573227, 0.11993131786584854, 0.1228371411561966, 0.12059172987937927, 0.12732796370983124, 0.12468630075454712, 0.11966715008020401, 0.12455421686172485, 0.1224408894777298, 0.1298375427722931, 0.12455421686172485, 0.12812046706676483, 0.12719587981700897, 0.12613920867443085, 0.12362963706254959, 0.1278562992811203, 0.12693171203136444, 0.1320829540491104, 0.13617752492427826, 0.13089419901371002, 0.13697001338005066, 0.13961167633533478, 0.1262712925672531, 0.1352529376745224, 0.13908334076404572, 0.1414608359336853, 0.13736626505851746, 0.13749834895133972, 0.13472460210323334, 0.1368379294872284, 0.13802668452262878, 0.13921542465686798, 0.1406683325767517, 0.1368379294872284, 0.13881917297840118, 0.13868708908557892, 0.14053626358509064, 0.14595165848731995, 0.14634791016578674, 0.14251750707626343, 0.14000792801380157, 0.14568749070167542, 0.1460837423801422, 0.149649977684021, 0.14317791163921356, 0.14661207795143127, 0.14780081808567047, 0.14489498734474182, 0.15255580842494965, 0.14463083446025848, 0.14172500371932983, 0.14898955821990967, 0.14238542318344116, 0.148064985871315, 0.1434420794248581, 0.14581957459449768, 0.14317791163921356, 0.15598995983600616, 0.14529123902320862, 0.14700831472873688, 0.1526878923177719, 0.14793290197849274, 0.15414080023765564, 0.1492537260055542, 0.15242372453212738, 0.14819706976413727, 0.15031039714813232, 0.15519747138023376, 0.15598995983600616, 0.15334829688072205, 0.15889579057693481, 0.1492537260055542, 0.15400871634483337, 0.15374454855918884, 0.15678246319293976, 0.15638621151447296], "val_loss": [1.9705356189182825, 1.9700713157653809, 1.9695851462227958, 1.9690636226109095, 1.9685215950012207, 1.9679689407348633, 1.9673845427376884, 1.9667833873203822, 1.966179438999721, 1.9655521937779017, 1.9648939541407995, 1.9642033576965332, 1.9634668486458915, 1.9627173287527901, 1.9619505746023995, 1.961162839617048, 1.960359845842634, 1.9595393453325545, 1.9586903708321708, 1.9578279086521693, 1.9569666045052665, 1.9560794830322266, 1.9551749910627092, 1.9542572838919503, 1.9533336503165108, 1.9524148532322474, 1.9514946256365096, 1.9505672454833984, 1.9496396609715052, 1.948695387159075, 1.9477410316467285, 1.9467759132385254, 1.9458070482526506, 1.9448375020708357, 1.9438743591308594, 1.9429165295192175, 1.941962514604841, 1.9410075460161482, 1.940059048788888, 1.9391230855669295, 1.9381952285766602, 1.9372901235307967, 1.9363879476274763, 1.9354934692382812, 1.9346094131469727, 1.9337432725088937, 1.932870592389788, 1.93200717653547, 1.93113831111363, 1.930279118674142, 1.9294301441737585, 1.9285751751491003, 1.92773471559797, 1.9268851280212402, 1.9260355404445104, 1.9251878602164132, 1.9243334361485072, 1.9234675679888045, 1.9226139613560267, 1.9217619895935059, 1.9209128788539342, 1.9200637681143624, 1.9192005566188268, 1.9183338710239954, 1.917478357042585, 1.9166155542646135, 1.9157396044049944, 1.9148857934134347, 1.9140146800449915, 1.9131411824907576, 1.9122668675013952, 1.9113901683262415, 1.910514967782157, 1.9096334321158273, 1.9087421553475517, 1.9078492437090193, 1.9069510187421526, 1.9060547011239188, 1.9051735741751534, 1.9042705808367049, 1.9033763068062919, 1.9024718829563685, 1.9015624863760812, 1.9006573132106237, 1.8997535705566406, 1.8988569804600306, 1.8979509217398507, 1.8970274244035994, 1.8961078780038017, 1.895185947418213, 1.8942629950387138, 1.8933364323207311, 1.8924188613891602, 1.89149808883667, 1.8905656678336007, 1.88963440486363, 1.8886981010437012, 1.8877696309770857, 1.88683135168893, 1.8859100341796875], "val_accuracy": [0.03533333167433739, 0.036666665226221085, 0.03866666555404663, 0.03966666758060455, 0.0416666679084301, 0.04066666588187218, 0.04233333468437195, 0.04233333468437195, 0.0430000014603138, 0.04633333161473274, 0.04600000008940697, 0.04933333396911621, 0.05400000140070915, 0.055666666477918625, 0.057999998331069946, 0.05966666713356972, 0.06533333659172058, 0.06966666877269745, 0.07466666400432587, 0.07966666668653488, 0.0820000022649765, 0.08566666394472122, 0.08900000154972076, 0.09233333170413971, 0.0949999988079071, 0.09833333641290665, 0.10133333504199982, 0.10266666859388351, 0.10533333569765091, 0.1080000028014183, 0.109333336353302, 0.11266666650772095, 0.11500000208616257, 0.11699999868869781, 0.11900000274181366, 0.12133333086967468, 0.12333333492279053, 0.12466666847467422, 0.1263333261013031, 0.1289999932050705, 0.13066667318344116, 0.13466666638851166, 0.13633333146572113, 0.140666663646698, 0.1433333307504654, 0.14433333277702332, 0.1459999978542328, 0.1469999998807907, 0.14933332800865173, 0.15000000596046448, 0.15266667306423187, 0.15399999916553497, 0.15533334016799927, 0.15700000524520874, 0.15933333337306976, 0.16066665947437286, 0.1626666635274887, 0.16466666758060455, 0.16599999368190765, 0.16766667366027832, 0.17000000178813934, 0.17166666686534882, 0.17366667091846466, 0.17633333802223206, 0.17866666615009308, 0.18000000715255737, 0.18199999630451202, 0.18466666340827942, 0.18533332645893097, 0.18833333253860474, 0.1913333386182785, 0.19333332777023315, 0.19366666674613953, 0.19433332979679108, 0.19699999690055847, 0.19766665995121002, 0.19866666197776794, 0.19966666400432587, 0.20000000298023224, 0.20033332705497742, 0.20200000703334808, 0.20233333110809326, 0.20399999618530273, 0.20533333718776703, 0.20633333921432495, 0.2070000022649765, 0.20900000631809235, 0.2096666693687439, 0.21033333241939545, 0.21033333241939545, 0.21066667139530182, 0.21299999952316284, 0.21400000154972076, 0.2150000035762787, 0.2160000056028366, 0.21699999272823334, 0.21799999475479126, 0.21899999678134918, 0.22066666185855865, 0.2213333398103714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [1, 1, 1, 1], [9, 1], [1, 0], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10500594228506088, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 4, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 5, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 5, 3, 3, 3, 3, 0, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 1], [1, 0, 1, 1], [1, 4], [5, 3], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 2, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 39, 39, 20, 19, 2, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(tf.math.multiply(grad, tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)))))), tf.math.add(grad, beta)), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, beta)), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(grad, grad)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 1], [1, 0, 1, 1], [7, 4], [5, 3], [76], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [2, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [22, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 1], [1, 0, 1], [5, 1], [1, 0], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10408136248588562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 8, 1, 7, 8, 3, 6, 6, 3, 6, 2, 3, 2, 2, 4, 3, 3, 8, 9, 8, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 0, 3, 2, 0, 1, 2, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0], [0, 0, 1, 1], [4, 4], [1, 2], [76], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [7, 9, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028767498776173, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [5, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 1, 0], [0, 0, 1, 1], [5, 7], [4, 0], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.312328264304219, 2.367744613994366, 2.544897519586392, 2.9178216932881478, 3.8910014619601796, 7.775347611025859, 824.7274784364752, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0878351628780365, 0.09681680053472519, 0.09932637959718704, 0.10051512718200684, 0.09932637959718704, 0.09668471664190292, 0.1010434553027153, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9822845458984375, 2.036581243787493, 2.167738914489746, 2.4649870736258372, 3.516908509390695, 11.197867802211217, 475917696.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.08833333104848862, 0.09666666388511658, 0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [0, 0, 1, 1], [4, 4], [5, 3], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [39, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 5, 4, 2, 2, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2742612.1231925935, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04979526996612549, 0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.402553025878958e+21, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 0, 0], [0, 1, 1, 1], [2, 1], [1, 0], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.09828571230173111, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3119139046228763, 2.3649379296341215, 2.528710806705161, 2.8156521249173294, 3.2522180490741923, 3.696176992352644, 4.074074234582682, 4.4202517762774285], "accuracy": [0.08796724677085876, 0.09787346422672272, 0.1002509593963623, 0.1014397069811821, 0.10117553919553757, 0.09787346422672272, 0.09998679161071777, 0.09972262382507324], "val_loss": [1.9812013081141882, 2.031905242374965, 2.1423851421901157, 2.3136096000671387, 2.5198772975376675, 2.7236294746398926, 2.890714236668178, 2.9944752284458707], "val_accuracy": [0.08900000154972076, 0.09666666388511658, 0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 0], [0, 0, 1, 1], [1, 4], [5, 3], [76], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.09542857110500336, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2560549243062384, 2.5133427925523026, 2.3396541367526917, 2.335922707372637, 2.3327766840625763, 2.3282368933252293], "accuracy": [0.21040813624858856, 0.12508255243301392, 0.09536388516426086, 0.10117553919553757, 0.09959053993225098, 0.10474177449941635], "val_loss": [2.1402978897094727, 1.9823265756879533, 1.987191608973912, 1.9912866183689661, 2.002045222691127, 2.0097202573503767], "val_accuracy": [0.1836666613817215, 0.09799999743700027, 0.09966666996479034, 0.09866666793823242, 0.10100000351667404, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0], [1, 0, 1], [4, 4], [5, 3], [76], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.04457142949104309, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 8, 5, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.multiply(alpha, tf.math.subtract(tf.math.square(alpha), tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(sigma)), alpha)", "other_info": {"loss": [2.303637966330592, 2.3027171734663883, 2.3030631883883474, 2.3077375137763427, 2.3123565130167005, 2.315448064499244, 2.3169566592709137, 2.3247451651223883, 2.327549659722454, 2.3380000786207544, 2.359466940924287, 2.7147364374542944, 567002.9783119055, 11.651733489383592, 21.97520633556934, 32.10812729923811], "accuracy": [0.08902391046285629, 0.09113723784685135, 0.09298639744520187, 0.08109892904758453, 0.0754193663597107, 0.07687227427959442, 0.07911768555641174, 0.07528728246688843, 0.07700435817241669, 0.07647603005170822, 0.07607977837324142, 0.08558975160121918, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.972125666482108, 1.973111833844866, 1.9742332186017717, 1.9761135237557548, 1.9788081986563546, 1.981184482574463, 1.9839962550571986, 1.9878649711608887, 1.9924877711704798, 2.0010557174682617, 2.024184226989746, 3831009.5714285714, 6.408845492771694, 15.170514242989677, 23.912562234061106, 32.667730058942524], "val_accuracy": [0.027666667476296425, 0.024666666984558105, 0.023000000044703484, 0.023000000044703484, 0.02666666731238365, 0.03133333474397659, 0.04100000113248825, 0.05766666680574417, 0.0793333351612091, 0.09133332967758179, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0], [0, 1, 0, 1], [4, 4], [5, 3], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, alpha)", "other_info": {"loss": [2.3030332766661257, 2.300846902937732, 2.29996854710053, 2.302403770338952, 2.302830435958568, 2.303101604766755], "accuracy": [0.09047681838274002, 0.09496764093637466, 0.09747721254825592, 0.09021265059709549, 0.0882314071059227, 0.09087307006120682], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [3, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 1, 0, 0], [0, 0, 1, 1], [1, 4], [1, 0], [76], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [3, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3030332766661257, 2.300846902937732, 2.29996854710053, 2.302403770338952, 2.302830435958568, 2.303101604766755], "accuracy": [0.09047681838274002, 0.09496764093637466, 0.09747721254825592, 0.09021265059709549, 0.0882314071059227, 0.09087307006120682], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 7, 1, 7, 6, 1, 6, 6, 3, 6, 2, 3, 2, 3, 3, 3, 3, 8, 2, 0, 9, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 5, 3, 3, 3, 3, 5, 2, 3, 2, 0, 1, 1, 2, 1, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [63, 15, 70, 94, 16, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0], [1, 0, 1], [1, 4], [5, 3], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [23, 9, 44]], "fitness": -0.011714286170899868, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.307007602114231, 2.3147919429937263, 2.3243698540963296, 2.3387797246000095, 2.3528077996339243, 2.3673722819251597], "accuracy": [0.0816272646188736, 0.068022720515728, 0.053229428827762604, 0.038304053246974945, 0.027077004313468933, 0.024039097130298615], "val_loss": [1.9799962043762207, 1.9893909863063268, 1.9995020457676478, 2.010699680873326, 2.023432050432478, 2.0376582826886858], "val_accuracy": [0.014000000432133675, 0.007666666526347399, 0.0063333334401249886, 0.0063333334401249886, 0.006000000052154064, 0.00566666666418314]}}]