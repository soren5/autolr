[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8325714468955994, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.151047464312028, 2.0958663289573103, 1.9943964611411709, 1.5810844139132627, 1.2019893629770426, 0.9341970484537959, 0.8014880711958944, 0.7479608526807404, 0.7237368758800811, 0.6799180089380322, 0.6545144956833997, 0.6136112280368112, 0.6119836604181077, 0.6150906484329532, 0.5878729989200835, 0.5713109894907942, 0.5681508558380007, 0.5448193833922761, 0.5155910690226623, 0.5341413515969164, 0.5286178716720764, 0.4986514808117296, 0.5044162891812061, 0.500462491254702, 0.4932513509318183, 0.4622734082160829, 0.47644621002329274], "accuracy": [0.27605336904525757, 0.30365869402885437, 0.3057720363140106, 0.5032360553741455, 0.6048077940940857, 0.6752080321311951, 0.7040021419525146, 0.7273808121681213, 0.7362303733825684, 0.748249888420105, 0.7569673657417297, 0.7798177003860474, 0.7697794437408447, 0.7688548564910889, 0.7779685854911804, 0.7907806038856506, 0.7902522683143616, 0.7998943328857422, 0.8078193068504333, 0.8024039268493652, 0.7987055778503418, 0.8189142942428589, 0.8125742673873901, 0.8127063512802124, 0.8204993009567261, 0.8252542614936829, 0.8241975903511047], "val_loss": [1.4490154130118233, 1.5574721608843123, 1.7139519963945662, 1.0409245831625802, 0.8679907151630947, 0.5796397924423218, 0.6001157420022147, 0.5775509902409145, 0.4916196210043771, 0.5279045956475394, 0.44900461605616976, 0.46195220947265625, 0.4543548141207014, 0.4577753373554775, 0.4686709131513323, 0.43941737924303326, 0.4265546713556562, 0.39553197792598177, 0.3985327993120466, 0.47482304913657053, 0.41717599970953806, 0.3763539620808193, 0.39973556995391846, 0.3886766348566328, 0.3836163026945932, 0.36885439498083933, 0.41139341252190725], "val_accuracy": [0.3140000104904175, 0.43033334612846375, 0.4519999921321869, 0.6643333435058594, 0.6520000100135803, 0.7490000128746033, 0.715666651725769, 0.7336666584014893, 0.7860000133514404, 0.765666663646698, 0.7996666431427002, 0.7963333129882812, 0.8006666898727417, 0.781333327293396, 0.7979999780654907, 0.7963333129882812, 0.8036666512489319, 0.8256666660308838, 0.8246666789054871, 0.7683333158493042, 0.8140000104904175, 0.8376666903495789, 0.8213333487510681, 0.824999988079071, 0.8273333311080933, 0.8323333263397217, 0.8083333373069763]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 5, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 4, 1, 8, 9, 1, 6, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [40, 49, 44, 92]], "fitness": -0.817714273929596, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.multiply(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.sqrt(alpha)), tf.math.add(beta, grad)), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.143970398555862, 1.9340104005277243, 1.5918062480685418, 1.166735801856122, 0.9859980650156591, 0.8503642078277976, 0.7933814295168645, 0.761795226160278, 0.7538649776844443, 0.7278763454713999, 0.6936121546061693, 0.651874007195876, 0.6657473437853179, 0.6463674802302117, 0.6383027006464707, 0.6271260393262618, 0.6074677936672739, 0.5805511568059003, 0.5963344775438466, 0.574448118781716, 0.5569610805039739, 0.5670274925458669, 0.543288691365692, 0.5381644894386783, 0.5396493578694044, 0.5303956807612302, 0.5037790725511756, 0.5058802807839665, 0.49542175238678215, 0.4707415970466739, 0.4731508128796712, 0.4693268027602878, 0.48616129252038626, 0.46593734041385804, 0.4443088371433114, 0.4483552624276758, 0.43798333562722597, 0.4279827071242344, 0.4314764954898619, 0.40596695713725434, 0.4362938562758673, 0.42219075295257846], "accuracy": [0.2930920720100403, 0.34684982895851135, 0.4492141008377075, 0.5791836977005005, 0.615770697593689, 0.6734909415245056, 0.7008321285247803, 0.709549605846405, 0.7152291536331177, 0.7265883088111877, 0.7349095344543457, 0.7524765729904175, 0.7477215528488159, 0.7547219395637512, 0.7574957013130188, 0.7648923397064209, 0.7675340175628662, 0.780610203742981, 0.7750627398490906, 0.7828556299209595, 0.7880068421363831, 0.7853652238845825, 0.7957997918128967, 0.7955356240272522, 0.7981772422790527, 0.8004226684570312, 0.8100647330284119, 0.8123101592063904, 0.8197067975997925, 0.8269713521003723, 0.8224804997444153, 0.8271034359931946, 0.8187822103500366, 0.828292191028595, 0.832650899887085, 0.8297450542449951, 0.8329150676727295, 0.8404437899589539, 0.8418967127799988, 0.8451988101005554, 0.8359529972076416, 0.8417646288871765], "val_loss": [1.6622156415666853, 1.7848059109279089, 0.9602195194789341, 0.848607965878078, 0.6176070996693203, 0.5892185994556972, 0.6139037949698312, 0.5668671131134033, 0.5355066912514823, 0.5524724721908569, 0.5092100926807949, 0.5595707552773612, 0.491585305758885, 0.47937662260872976, 0.5105021340506417, 0.4960900204522269, 0.44963482448032926, 0.4545297622680664, 0.4852042538779123, 0.44415109498160227, 0.4490915707179478, 0.40301629475184847, 0.42345342465809416, 0.4346147860799517, 0.41855938945497784, 0.40024434668677195, 0.4315735527447292, 0.3904800755637033, 0.36814945936203003, 0.36041903495788574, 0.366603468145643, 0.39931873764310566, 0.3846862571580069, 0.37033828667231966, 0.352435154574258, 0.37762962920325144, 0.34524335180010113, 0.3558473927634103, 0.3449654408863613, 0.33864396810531616, 0.33561318261282785, 0.34893777540751864], "val_accuracy": [0.3136666715145111, 0.24500000476837158, 0.5363333225250244, 0.606333315372467, 0.7116666436195374, 0.7319999933242798, 0.7200000286102295, 0.7486666440963745, 0.7546666860580444, 0.7353333234786987, 0.7596666812896729, 0.7226666808128357, 0.765999972820282, 0.7906666398048401, 0.7760000228881836, 0.7746666669845581, 0.7973333597183228, 0.7866666913032532, 0.7736666798591614, 0.8013333082199097, 0.7910000085830688, 0.8153333067893982, 0.8073333501815796, 0.8163333535194397, 0.8133333325386047, 0.8273333311080933, 0.7956666946411133, 0.8270000219345093, 0.8416666388511658, 0.8453333377838135, 0.8396666646003723, 0.8240000009536743, 0.8383333086967468, 0.8386666774749756, 0.8496666550636292, 0.8303333520889282, 0.8576666712760925, 0.8433333039283752, 0.856333315372467, 0.8556666374206543, 0.8569999933242798, 0.8519999980926514]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 8, 2, 8, 7, 3, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 0, 5, 0, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.817714273929596, "mapping_values": [1, 16, 16, 10, 6, 1, 6, 6, 5, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(alpha))))), tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.97860754351842, 1.3012716393854324, 1.1233367891343766, 0.8767091172592688, 0.8524082169682673, 0.7497342032779083, 0.7319088864635089, 0.7080623418065173, 0.6798350317855127, 0.6450236387823425, 0.656995229048106, 0.6219716927063952, 0.5957269107960061, 0.6065902466456558, 0.590813612822985, 0.563218584716942, 0.5507048711233828, 0.5416377698425698, 0.5266438291734472, 0.5243849007838658, 0.5173021748734818, 0.5135628555499961, 0.4912375412077369, 0.5133409460522101, 0.4928692178231157, 0.4792711332237653, 0.4679445128682708, 0.465144482373467, 0.45774155722129234, 0.46277098778279513, 0.43623851237122596, 0.44326384288208787, 0.4413703051162607, 0.4244180028984308, 0.4201263842754644, 0.4159062061571505, 0.42104762033653487, 0.3958564538997257, 0.4164651322555328, 0.3840072053755122, 0.404094466195839, 0.38800189479262426, 0.38025418211282946, 0.377918503543783, 0.3769955286425748], "accuracy": [0.33720776438713074, 0.5359926223754883, 0.5918636918067932, 0.6675472259521484, 0.6812838315963745, 0.7116629481315613, 0.7228899598121643, 0.7329282760620117, 0.7425703406333923, 0.7619865536689758, 0.7458723783493042, 0.7605336308479309, 0.7802139520645142, 0.7717606425285339, 0.7791573405265808, 0.7884030938148499, 0.7866860628128052, 0.7977809906005859, 0.8009510040283203, 0.8010830879211426, 0.8050455451011658, 0.8123101592063904, 0.8152159452438354, 0.8082155585289001, 0.8141592741012573, 0.8210275769233704, 0.8257825970649719, 0.8290846943855286, 0.8300092220306396, 0.830669641494751, 0.8397833704948425, 0.8339717388153076, 0.8413683772087097, 0.8436138033866882, 0.8429533839225769, 0.8449346423149109, 0.8403117060661316, 0.8539162874221802, 0.8462554216384888, 0.8578787446022034, 0.8496896028518677, 0.8555012345314026, 0.8634262084960938, 0.860652506351471, 0.8588033318519592], "val_loss": [1.1812916483197893, 0.7767127071108136, 0.6766757113592965, 0.6502798114504132, 0.5918137856892177, 0.5531816482543945, 0.5332382576806205, 0.5307599987302508, 0.507237298148019, 0.5579434973852975, 0.4773285048348563, 0.47672551018851145, 0.4661015783037458, 0.4567239625113351, 0.4706723519733974, 0.4455174718584333, 0.4199955804007394, 0.4411099297659738, 0.43689810378210886, 0.42203536203929354, 0.40075899021966116, 0.38362530299595426, 0.46587482520512175, 0.38321296657834736, 0.392692574432918, 0.3960967830249241, 0.38491698673793245, 0.3655897634369986, 0.3840899041720799, 0.36815100056784494, 0.3563226716859, 0.37223778452192036, 0.3526902709688459, 0.3577437571116856, 0.3372792601585388, 0.33993145397731234, 0.3421775017465864, 0.34236358744757517, 0.330622707094465, 0.3273301635469709, 0.3249175889151437, 0.3235189659254892, 0.3395676868302481, 0.32401834215436665, 0.37295948607581003], "val_accuracy": [0.4986666738986969, 0.6493333578109741, 0.6959999799728394, 0.7083333134651184, 0.7416666746139526, 0.7599999904632568, 0.7593333125114441, 0.7570000290870667, 0.7720000147819519, 0.7319999933242798, 0.7893333435058594, 0.7940000295639038, 0.7903333306312561, 0.796999990940094, 0.7923333048820496, 0.7986666560173035, 0.812666654586792, 0.79666668176651, 0.8036666512489319, 0.8103333115577698, 0.8330000042915344, 0.8316666483879089, 0.7866666913032532, 0.8383333086967468, 0.8270000219345093, 0.8223333358764648, 0.8373333215713501, 0.8450000286102295, 0.8240000009536743, 0.8360000252723694, 0.8483333587646484, 0.8389999866485596, 0.8526666760444641, 0.8513333201408386, 0.8546666502952576, 0.8586666584014893, 0.8566666841506958, 0.8479999899864197, 0.8613333106040955, 0.8686666488647461, 0.8663333058357239, 0.8643333315849304, 0.859666645526886, 0.8650000095367432, 0.8349999785423279]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 4, 1, 8, 2, 1, 2, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8128571510314941, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad)))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [1.978588425802942, 1.302721653230564, 1.1052607162800825, 0.942332580482892, 0.7961580582802495, 0.7648251743884119, 0.7352719695230185, 0.7061456918417266, 0.6808189517786285, 0.6447927966692255, 0.6501081043923489, 0.6215192369497715, 0.5998386718955699, 0.6095174951103652, 0.5911388157648795, 0.5688831770519271, 0.551355950017694, 0.5460841682380484, 0.5424240482261294, 0.5175242485103826, 0.5180979451845351, 0.523590055773712, 0.4970295115264179, 0.5040962371009294, 0.4840050162797937, 0.4801754383615074, 0.47631388893216875, 0.46310993368520775, 0.46171022291275426, 0.44921539363497676, 0.43939631949042945, 0.4427514836859347, 0.4437993651430888, 0.43015358194053416, 0.4175403818533389, 0.4157492752993789, 0.4225308303512744, 0.40166001935298684, 0.4013435011093627, 0.37497403789835676, 0.39989547265550607, 0.3899186354437052, 0.38432855882649064, 0.3743302572389179, 0.3771806521509239, 0.3833524819968824, 0.3725906912212311, 0.35453485207330315, 0.35168281982068167], "accuracy": [0.33720776438713074, 0.5361247062683105, 0.5955620408058167, 0.6478668451309204, 0.6955488324165344, 0.7046625018119812, 0.7189275026321411, 0.7312111854553223, 0.737947404384613, 0.7586844563484192, 0.7481178045272827, 0.7646281719207764, 0.7757231593132019, 0.7687227725982666, 0.7794214487075806, 0.7847048044204712, 0.7891955971717834, 0.7940827012062073, 0.7931581139564514, 0.8033285140991211, 0.8057059645652771, 0.8037247657775879, 0.8127063512802124, 0.8082155585289001, 0.8182538747787476, 0.8215559124946594, 0.822348415851593, 0.8304054737091064, 0.8300092220306396, 0.8370096683502197, 0.8403117060661316, 0.8345000743865967, 0.8387266993522644, 0.8405758738517761, 0.8451988101005554, 0.8413683772087097, 0.8404437899589539, 0.8488970994949341, 0.852859616279602, 0.8602562546730042, 0.8499537706375122, 0.8527275323867798, 0.8619733452796936, 0.8595958352088928, 0.8576145768165588, 0.8584070801734924, 0.8640866279602051, 0.8663320541381836, 0.8658037185668945], "val_loss": [1.1821021011897497, 0.7826084068843296, 0.8848317691258022, 0.6117616210665021, 0.6352463620049613, 0.5536549091339111, 0.5548452649797712, 0.5331529719488961, 0.5055022580283028, 0.5812619073050362, 0.4866666453225272, 0.49269354343414307, 0.486265982900347, 0.4572474956512451, 0.49117137704576763, 0.4521517413003104, 0.4232949699674334, 0.4439046893801008, 0.4197308250835964, 0.43104458706719534, 0.4257005112511771, 0.4003297431128366, 0.42233227831976755, 0.37857392004558016, 0.39801597595214844, 0.3938982571874346, 0.38162478378840853, 0.3623155100005014, 0.3802417942455837, 0.3716933471815927, 0.36021826948438374, 0.37087651661464144, 0.35078225816999165, 0.3508303335734776, 0.34265072856630596, 0.34198085750852314, 0.3383247085980007, 0.33636209794453215, 0.33226137501852854, 0.325003913470677, 0.3239202584539141, 0.32908254861831665, 0.33870454345430645, 0.3218806045395987, 0.3905099034309387, 0.3266654355185373, 0.31556068999426706, 0.3293518764632089, 0.32201628174100605], "val_accuracy": [0.49900001287460327, 0.6536666750907898, 0.6056666374206543, 0.737333357334137, 0.7163333296775818, 0.7549999952316284, 0.7459999918937683, 0.7559999823570251, 0.7720000147819519, 0.7229999899864197, 0.781000018119812, 0.7883333563804626, 0.781333327293396, 0.7986666560173035, 0.7833333611488342, 0.7903333306312561, 0.8119999766349792, 0.7956666946411133, 0.8173333406448364, 0.8009999990463257, 0.8056666851043701, 0.8130000233650208, 0.8136666417121887, 0.8413333296775818, 0.8230000138282776, 0.824999988079071, 0.8370000123977661, 0.8476666808128357, 0.828000009059906, 0.831333339214325, 0.8426666855812073, 0.8349999785423279, 0.8503333330154419, 0.8519999980926514, 0.8489999771118164, 0.8569999933242798, 0.8579999804496765, 0.8586666584014893, 0.8579999804496765, 0.8640000224113464, 0.8643333315849304, 0.8610000014305115, 0.859333336353302, 0.8679999709129333, 0.824999988079071, 0.8576666712760925, 0.862333357334137, 0.8556666374206543, 0.8650000095367432]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 4, 1, 8, 2, 1, 1, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 79, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.8128571510314941, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, alpha)), grad)), alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, grad)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [1.9782849825793694, 1.295899183081598, 1.110898712811579, 0.886602025549441, 0.8471668581952508, 0.7424413420426265, 0.7285328836189742, 0.7049309793574825, 0.6777474224260376, 0.6415739767209114, 0.6382770679252432, 0.6182170494152901, 0.5988717269525867, 0.6039234209432263, 0.5845925426202884, 0.5647815648890001, 0.5459480219277189, 0.5427637783417597, 0.5319096877306932, 0.5083091694838524, 0.5245800020908556, 0.5179550821014982, 0.4902732282534503, 0.5010536824864892, 0.48282624284557585, 0.4776714846537082, 0.46988938896647536, 0.4703997913337166, 0.4577511616150591, 0.44730046236000165, 0.4404594136298435, 0.4447586827384577, 0.44276657249429646, 0.42579633316753124, 0.414191420571742, 0.41408604089421147, 0.42183738604449733, 0.3979878686343863, 0.4096565129356676, 0.38039361099289265, 0.4024903384441902, 0.38029749666883994, 0.3789214868673701, 0.3810651509824163, 0.37335994881393886, 0.38553370035256784, 0.36895663385393757], "accuracy": [0.33747193217277527, 0.5379738211631775, 0.6012415885925293, 0.6749438643455505, 0.6790384650230408, 0.7131158113479614, 0.7253995537757874, 0.7360982894897461, 0.7375511527061462, 0.7625148296356201, 0.754589855670929, 0.7648923397064209, 0.7758552432060242, 0.7720248103141785, 0.7817989587783813, 0.7849689722061157, 0.7913089394569397, 0.7950072884559631, 0.7960638999938965, 0.8090080618858337, 0.8026680946350098, 0.8086118102073669, 0.8132346868515015, 0.8113855719566345, 0.8191784620285034, 0.8226125836372375, 0.8231409192085266, 0.8259146809577942, 0.8310658931732178, 0.8362171649932861, 0.8378021121025085, 0.8319904804229736, 0.8413683772087097, 0.8445383906364441, 0.8451988101005554, 0.8438779711723328, 0.8416325449943542, 0.8496896028518677, 0.8502179384231567, 0.8597279191017151, 0.8477083444595337, 0.8584070801734924, 0.8628978729248047, 0.8584070801734924, 0.8603883385658264, 0.8582749962806702, 0.8660678863525391], "val_loss": [1.1798482963017054, 0.8398408719471523, 0.7551372051239014, 0.6326116664069039, 0.5928751059940883, 0.5464705739702497, 0.5392736026218959, 0.5204949378967285, 0.5071031706673759, 0.5274084295545306, 0.5033990315028599, 0.490162866456168, 0.46566455704825266, 0.4630119970866612, 0.4738528217588152, 0.45450290611812044, 0.4168660981314523, 0.43635815382003784, 0.40511668579918997, 0.43923657281058176, 0.4372502565383911, 0.3872677683830261, 0.42091820921216694, 0.3821361405508859, 0.400645979813167, 0.39676962579999653, 0.3844893915312631, 0.3678331460271563, 0.3762525660651071, 0.38018966572625296, 0.3582020657403128, 0.3830235345023019, 0.3518959368978228, 0.36160428183419363, 0.34260078838893343, 0.34123616559164865, 0.3372162665639605, 0.33690567527498516, 0.3334638135773795, 0.3395713823182242, 0.32534011772700716, 0.31884030784879414, 0.3495171921593802, 0.32012860264096943, 0.4184857266289847, 0.31967324018478394, 0.31247652428490774], "val_accuracy": [0.49966666102409363, 0.6320000290870667, 0.6466666460037231, 0.7276666760444641, 0.7206666469573975, 0.7646666765213013, 0.7516666650772095, 0.762666642665863, 0.777999997138977, 0.7429999709129333, 0.7793333530426025, 0.7749999761581421, 0.7866666913032532, 0.7919999957084656, 0.7903333306312561, 0.7956666946411133, 0.8149999976158142, 0.7983333468437195, 0.8270000219345093, 0.8029999732971191, 0.796999990940094, 0.828000009059906, 0.8180000185966492, 0.8363333344459534, 0.8246666789054871, 0.8243333101272583, 0.8370000123977661, 0.843999981880188, 0.8296666741371155, 0.8273333311080933, 0.8476666808128357, 0.8309999704360962, 0.8500000238418579, 0.8450000286102295, 0.8526666760444641, 0.856333315372467, 0.859000027179718, 0.8553333282470703, 0.8603333234786987, 0.8573333621025085, 0.8613333106040955, 0.8666666746139526, 0.8539999723434448, 0.8643333315849304, 0.8096666932106018, 0.8636666536331177, 0.8659999966621399]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 5, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 5, 0, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [40, 49, 44, 92]], "fitness": -0.8025714159011841, "mapping_values": [1, 9, 9, 6, 3, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.1441202215026665, 1.9289930659734877, 1.5971575982503572, 1.1030546354973525, 0.9301787800698186, 0.8768424648477133, 0.8025573500001656, 0.7722760150697426, 0.7329813519473309, 0.6944016029790345, 0.694684493157527, 0.6487864604038475, 0.6850277282589887, 0.6576214987037204, 0.641579348279532, 0.6132927672690751, 0.6070607285599714, 0.582911516098755, 0.5949708007393165, 0.5669376874691177, 0.5499161153956962, 0.5643713016236668, 0.538034834937019, 0.5301002050041287, 0.5415473694751575, 0.5316686202758307, 0.5096003943588031, 0.4868666219586914, 0.49020567289543127, 0.5022767900932482, 0.4711903443370812, 0.47088124598998277, 0.47880615650812364, 0.4495111769570839, 0.4425985921706191, 0.44479036507920156, 0.4356535158105703, 0.42884015138705706, 0.4278760147510408, 0.41107510706736283, 0.43890504884823767, 0.4118332018855068, 0.4112492106995641, 0.3954733152194912, 0.39233328314064325, 0.3880446771856753, 0.3865540413777149, 0.37136904582560354, 0.38731207195416006, 0.39130723256759986, 0.3671959974526131, 0.36171703659595356, 0.3600867328555939, 0.34311458484576346], "accuracy": [0.292959988117218, 0.3469819128513336, 0.43785497546195984, 0.5931845307350159, 0.6452252268791199, 0.6740192770957947, 0.6925109028816223, 0.7058512568473816, 0.7272487282752991, 0.7466648817062378, 0.7368907928466797, 0.7503632307052612, 0.7460044622421265, 0.7478536367416382, 0.7544577717781067, 0.7687227725982666, 0.7681944370269775, 0.7775723338127136, 0.7736098170280457, 0.7869502305984497, 0.7895918488502502, 0.7881389260292053, 0.8000264167785645, 0.8009510040283203, 0.7942147850990295, 0.7996301651000977, 0.8053097128868103, 0.817461371421814, 0.8157442808151245, 0.8131026029586792, 0.8260467648506165, 0.8255184292793274, 0.8212917447090149, 0.833179235458374, 0.8334434032440186, 0.8325188159942627, 0.8360850811004639, 0.8405758738517761, 0.8441421389579773, 0.8469158411026001, 0.8318583965301514, 0.8491612672805786, 0.846387505531311, 0.8491612672805786, 0.8515387773513794, 0.8555012345314026, 0.8545766472816467, 0.8634262084960938, 0.8518029451370239, 0.8540483713150024, 0.8672566413879395, 0.8687095642089844, 0.8664641380310059, 0.8708229064941406], "val_loss": [1.662273985998971, 1.7612973621913366, 0.8207789489201137, 0.7979780605861119, 0.6440531185695103, 0.6046766042709351, 0.5587977170944214, 0.5496373517172677, 0.5066737277167184, 0.5143940619059971, 0.49066948890686035, 0.5449664081845965, 0.4854639938899449, 0.49614853518349783, 0.4876973458698818, 0.4822107894080026, 0.44853566374097553, 0.4564436844417027, 0.4630576712744577, 0.443301865032741, 0.4588862146650042, 0.40760975224631174, 0.4325599159513201, 0.4510915279388428, 0.41884258815220426, 0.3994290999003819, 0.42512941360473633, 0.3709841285433088, 0.38573209728513447, 0.3724695529256548, 0.3787870151656015, 0.389461738722665, 0.3742303763117109, 0.36682645763669697, 0.3523975355284555, 0.3791446089744568, 0.3504771334784372, 0.36658384118761334, 0.34654301404953003, 0.36579132080078125, 0.34053014857428415, 0.3574032868657793, 0.3485450063432966, 0.34625903197697233, 0.3416411706379482, 0.3238357560975211, 0.328012262071882, 0.34222255434308735, 0.3254584414618356, 0.3166541372026716, 0.3547761184828622, 0.33603384665080477, 0.3423914739063808, 0.33788834299360004], "val_accuracy": [0.31466665863990784, 0.2516666650772095, 0.6499999761581421, 0.6163333058357239, 0.718666672706604, 0.7059999704360962, 0.7456666827201843, 0.7546666860580444, 0.7786666750907898, 0.7673333287239075, 0.7743333578109741, 0.7490000128746033, 0.7716666460037231, 0.7820000052452087, 0.7796666622161865, 0.7839999794960022, 0.79666668176651, 0.7829999923706055, 0.7826666831970215, 0.79666668176651, 0.7853333353996277, 0.8140000104904175, 0.7973333597183228, 0.8013333082199097, 0.8196666836738586, 0.828000009059906, 0.8053333163261414, 0.843666672706604, 0.8273333311080933, 0.8339999914169312, 0.8316666483879089, 0.8236666917800903, 0.843999981880188, 0.8396666646003723, 0.846666693687439, 0.8320000171661377, 0.8503333330154419, 0.8443333506584167, 0.8519999980926514, 0.8410000205039978, 0.856333315372467, 0.8420000076293945, 0.8566666841506958, 0.8510000109672546, 0.8553333282470703, 0.862333357334137, 0.8566666841506958, 0.8560000061988831, 0.8646666407585144, 0.8633333444595337, 0.8446666598320007, 0.8526666760444641, 0.8493333458900452, 0.8629999756813049]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 0, 8, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 2, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [30, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.7977142930030823, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9877782032049216, 1.4417561999936823, 1.0202981768235744, 0.907611840570513, 0.7941382519006257, 0.7672066567612047, 0.7224267248810715, 0.6895031454682492, 0.6750018675376742, 0.6594896850694897, 0.6332585345390309, 0.6179474941129461, 0.6090044155962919, 0.5845867509634708, 0.5777626452255779, 0.578993577982976, 0.5459949042834563, 0.5731497729112759, 0.5360164447247061], "accuracy": [0.3329811096191406, 0.4909523129463196, 0.6310923099517822, 0.6621318459510803, 0.6979262828826904, 0.7096816897392273, 0.7213049530982971, 0.7276449799537659, 0.7339849472045898, 0.7416457533836365, 0.759080708026886, 0.7647602558135986, 0.7582882046699524, 0.7745344042778015, 0.780610203742981, 0.7740060687065125, 0.8026680946350098, 0.7800818681716919, 0.7985734939575195], "val_loss": [1.603788103376116, 0.8624939067023141, 0.6825024059840611, 0.6193743092673165, 0.5688323293413434, 0.5684016261781965, 0.567405240876334, 0.5085350275039673, 0.5217583690370832, 0.49678027629852295, 0.49888278756822857, 0.4688357966286795, 0.4819187266486032, 0.4492915187563215, 0.4525819846561977, 0.46146672112601145, 0.46921249798366, 0.44046173776899067, 0.43576557295663015], "val_accuracy": [0.4593333303928375, 0.6150000095367432, 0.7006666660308838, 0.7129999995231628, 0.7400000095367432, 0.7506666779518127, 0.7193333506584167, 0.7663333415985107, 0.7716666460037231, 0.7860000133514404, 0.7680000066757202, 0.7793333530426025, 0.7723333239555359, 0.8009999990463257, 0.784333348274231, 0.8009999990463257, 0.7853333353996277, 0.7870000004768372, 0.796999990940094]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 4, 1, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 0, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.7931428551673889, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, alpha))), tf.math.add(tf.math.subtract(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), alpha)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.0567072245895495, 2.0800023217478985, 1.606757110104569, 1.20421665275511, 0.8178869863432537, 0.762369191067141, 0.7154214187399618, 0.6412941085868713, 0.6342269132213192, 0.5900966944065958, 0.5956097082643933, 0.5873290785016196, 0.5542389939348097, 0.5586675519263661, 0.543074873704259, 0.5431148161536683], "accuracy": [0.29784706234931946, 0.2945449650287628, 0.45912033319473267, 0.5888257622718811, 0.6988508701324463, 0.7123233675956726, 0.7296261787414551, 0.7607977986335754, 0.7594769597053528, 0.7740060687065125, 0.7737419009208679, 0.7810064554214478, 0.785101056098938, 0.7956677079200745, 0.7968564033508301, 0.7901201844215393], "val_loss": [1.4613938331604004, 1.4243910993848528, 1.167605229786464, 0.6891478640692574, 0.5804777996880668, 0.5946004561015538, 0.527657014983041, 0.4775238037109375, 0.4589862142290388, 0.493570225579398, 0.42329797574451994, 0.4604827676500593, 0.43161349637167795, 0.4322218213762556, 0.45797732898167204, 0.4251980611256191], "val_accuracy": [0.5193333625793457, 0.515999972820282, 0.5479999780654907, 0.652999997138977, 0.7363333106040955, 0.7206666469573975, 0.7666666507720947, 0.7716666460037231, 0.7860000133514404, 0.7820000052452087, 0.8023333549499512, 0.7913333177566528, 0.8019999861717224, 0.79666668176651, 0.7753333449363708, 0.8003333210945129]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 5, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 4, 4, 8, 9, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 1, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [40, 49, 44, 92]], "fitness": -0.7891428470611572, "mapping_values": [1, 9, 9, 6, 3, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.096760445582065, 1.6579646287482759, 1.244927403398115, 1.0948985332290746, 0.9023049005805824, 0.835099516181331, 0.792262300091208, 0.7165723621349261, 0.7037134346173439, 0.6809297785499486, 0.6586908142107857, 0.621008832252194, 0.6560746074321169, 0.5950631439536239, 0.5857256266812859, 0.5458965035493206, 0.5420432542340631], "accuracy": [0.2930920720100403, 0.468630313873291, 0.5694096088409424, 0.6057323813438416, 0.6686038970947266, 0.6831330060958862, 0.7013604640960693, 0.7199841737747192, 0.7271166443824768, 0.7397965788841248, 0.7456082701683044, 0.7736098170280457, 0.7563069462776184, 0.770439863204956, 0.7757231593132019, 0.7947431206703186, 0.793422281742096], "val_loss": [1.6051143918718611, 0.9094270638057164, 0.8005454369953701, 0.7085542849131993, 0.7464989423751831, 0.565198404448373, 0.57755936895098, 0.5623549733843122, 0.621771012033735, 0.5173641102654594, 0.5327971151896885, 0.48307205949510845, 0.5150909083230155, 0.4614337682723999, 0.46254333427974154, 0.4475135292325701, 0.49072461468832834], "val_accuracy": [0.5266666412353516, 0.640999972820282, 0.6393333077430725, 0.6986666917800903, 0.6553333401679993, 0.750333309173584, 0.7353333234786987, 0.7210000157356262, 0.7160000205039978, 0.7596666812896729, 0.7393333315849304, 0.7903333306312561, 0.7516666650772095, 0.7896666526794434, 0.7836666703224182, 0.7853333353996277, 0.7683333158493042]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 0, 8, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [30, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 4, 3, 3], [5, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [58, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 3, 3, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 5, 0, 6, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 2, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [5, 2], [76], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.add(grad, tf.math.add(beta, alpha))))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302913405435149, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 6, 2, 8, 7, 5, 8, 6, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 2, 4, 9, 8, 8, 1, 1, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [71, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [5, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 0, 4, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 20, 11, 9, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(alpha, tf.math.add(tf.math.negative(alpha), tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [1, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [78, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302913405435149, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [8, 6, 2, 8, 4, 5, 3, 9, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5, 4, 3, 9], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [87, 7, 83, 31, 20, 60, 75], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 4, 1, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [5, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 0, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [17070174.650732454, 314289491.59476954, 1461887732.5711267, 4052926782.520671, 8725142500.002642, 15824185589.889843], "accuracy": [0.09351472556591034, 0.10011887550354004, 0.09721305221319199, 0.10170386731624603, 0.09589222073554993, 0.10368511080741882], "val_loss": [62485225.14285714, 499242057.14285713, 1684232228.5714285, 3991412882.285714, 7794752365.714286, 13468184868.571428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 6, 8, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 2, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [30, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 1, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))))), tf.math.add(beta, grad)), alpha)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma))", "other_info": {"loss": [2.3033685874409917, 2.3029973541252713, 2.302922787588853, 2.3029227142462467, 2.3029491081371316, 2.3028860368339408], "accuracy": [0.0948355570435524, 0.09694888442754745, 0.09747721254825592, 0.1002509593963623, 0.09509972482919693, 0.09245806187391281], "val_loss": [1.9736048153468542, 1.9736313819885254, 1.9737121037074499, 1.9736928258623396, 1.973663057599749, 1.973665646144322], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 4, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 0, 8, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 2, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [30, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, alpha), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3027194375768865, 2.303065433005899, 2.3021307011416496, 2.301521646411207, 2.303183561743778, 2.3013129528125265], "accuracy": [0.09285431355237961, 0.08875974267721176, 0.09060890227556229, 0.09509972482919693, 0.09245806187391281, 0.09509972482919693], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 5, 0, 9, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [30, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [5, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [40, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3027194375768865, 2.303065433005899, 2.3021307011416496, 2.301521646411207, 2.303183561743778, 2.3013129528125265], "accuracy": [0.09285431355237961, 0.08875974267721176, 0.09060890227556229, 0.09509972482919693, 0.09245806187391281, 0.09509972482919693], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 0, 8, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 16, 16, 10, 6, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(alpha))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.3027194375768865, 2.303065433005899, 2.3021307011416496, 2.301521646411207, 2.303183561743778, 2.3013129528125265], "accuracy": [0.09285431355237961, 0.08875974267721176, 0.09060890227556229, 0.09509972482919693, 0.09245806187391281, 0.09509972482919693], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 2, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 0, 8, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 3, 1, 2, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [32, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 4, 3, 3], [4, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 3, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3027194375768865, 2.303065433005899, 2.3021307011416496, 2.301521646411207, 2.303183561743778, 2.3013129528125265], "accuracy": [0.09285431355237961, 0.08875974267721176, 0.09060890227556229, 0.09509972482919693, 0.09245806187391281, 0.09509972482919693], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]