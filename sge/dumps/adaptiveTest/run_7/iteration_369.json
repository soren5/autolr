[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 0, 1, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [77, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [2, 2], [59], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8277142643928528, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.111495844455931, 1.8869476222469193, 1.3372919634269953, 1.0156564064832678, 0.906026475457247, 0.8012098550103706, 0.7623222968156673, 0.7093309965887562, 0.6822340534174557, 0.6591094332505936, 0.6367628405500696, 0.6059360400859816, 0.6089429345034558, 0.5850733343352889, 0.5478817192066804, 0.5630868648604127, 0.5484859098879228, 0.5211487237087031, 0.497104824494692, 0.5048816589363783, 0.48948513234154484, 0.46833486744221003, 0.49128416269179176, 0.46425308234199414, 0.44901016615149114, 0.43193816553726017, 0.4432370815184516, 0.4201295049655644, 0.43998486048053237], "accuracy": [0.31184783577919006, 0.3555673062801361, 0.5112931132316589, 0.6221106648445129, 0.6415268778800964, 0.6929071545600891, 0.7013604640960693, 0.7317395210266113, 0.7371549606323242, 0.7460044622421265, 0.7565711140632629, 0.7672698497772217, 0.7672698497772217, 0.7783648371696472, 0.7911768555641174, 0.7868181467056274, 0.7905164361000061, 0.802271842956543, 0.8140271902084351, 0.8098005652427673, 0.8171972036361694, 0.8230088353157043, 0.811649739742279, 0.8286884427070618, 0.8252542614936829, 0.8412362933158875, 0.833179235458374, 0.8450667262077332, 0.8350284099578857], "val_loss": [1.2848412990570068, 1.1373013768877303, 0.772712128502982, 0.7220172200884137, 0.6586762326104301, 0.625903708594186, 0.5500615664890834, 0.5037134545189994, 0.5555468967982701, 0.48459081990378244, 0.47616750853402273, 0.45389253752572195, 0.45417727742876324, 0.44806838035583496, 0.4470709902899606, 0.4338931952204023, 0.4333213141986302, 0.3973823956080845, 0.3827547941889082, 0.4144154020718166, 0.393017794404711, 0.40628466435841154, 0.40006472383226666, 0.35116513286318096, 0.36561293261391775, 0.3787720203399658, 0.34655860492161344, 0.4009956547192165, 0.36329554659979685], "val_accuracy": [0.3903333246707916, 0.6103333234786987, 0.6470000147819519, 0.6356666684150696, 0.6913333535194397, 0.706333339214325, 0.7543333172798157, 0.7746666669845581, 0.7366666793823242, 0.7796666622161865, 0.7733333110809326, 0.8026666641235352, 0.7923333048820496, 0.8043333292007446, 0.7900000214576721, 0.8003333210945129, 0.8026666641235352, 0.8196666836738586, 0.8336666822433472, 0.8063333630561829, 0.824999988079071, 0.8226666450500488, 0.8233333230018616, 0.8533333539962769, 0.8446666598320007, 0.8333333134651184, 0.8529999852180481, 0.8199999928474426, 0.8413333296775818]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 2, 0, 2, 8, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [5, 8, 1, 3], [0, 2], [17], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8265714049339294, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad))))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.111507306481869, 1.9092104933155116, 1.4484647774677455, 1.0713258725997559, 0.9182329370424086, 0.7942657297974832, 0.7296843868457031, 0.7461371051636921, 0.6926084066016752, 0.6597014285743102, 0.638945961318169, 0.6136441626143793, 0.613948458449684, 0.5853579923729021, 0.560468683389546, 0.5686722900007443, 0.535303418646714, 0.5242694973859018, 0.5268569903689573, 0.5212878757983687, 0.49346091624154015, 0.47064030961259135, 0.5040053624392595, 0.4594158590461883, 0.4540338513361795, 0.4471468100450483, 0.4519524697252253, 0.4542623346255928, 0.42588515078402656, 0.4345291696401273, 0.4254282212425862, 0.45042865751615024, 0.4104479471918551, 0.3895030630822069, 0.3853972460245491, 0.39121436355939365, 0.3827600773449005, 0.38664725300831454], "accuracy": [0.31184783577919006, 0.35041606426239014, 0.4674415588378906, 0.6050719618797302, 0.6429798007011414, 0.6946242451667786, 0.7213049530982971, 0.7181349992752075, 0.7326641082763672, 0.7458723783493042, 0.7524765729904175, 0.7633073329925537, 0.7638356685638428, 0.7779685854911804, 0.7832518815994263, 0.7803460359573364, 0.7987055778503418, 0.8034605979919434, 0.7997622489929199, 0.8034605979919434, 0.8124422430992126, 0.8227446675300598, 0.8125742673873901, 0.8290846943855286, 0.8269713521003723, 0.8338396549224854, 0.8260467648506165, 0.8318583965301514, 0.843481719493866, 0.837141752243042, 0.844010055065155, 0.8355567455291748, 0.8487650156021118, 0.8525954484939575, 0.8581429123878479, 0.8562937378883362, 0.8589354157447815, 0.858671247959137], "val_loss": [1.2842237608773368, 1.1233794689178467, 0.8230525255203247, 0.6924142837524414, 0.6120231662477765, 0.5792214018957955, 0.5306510754993984, 0.5252852099282401, 0.5253203426088605, 0.4970423323767526, 0.47751292160579134, 0.4706063611166818, 0.47163059030260357, 0.48842086110796246, 0.464309709412711, 0.4250859873635428, 0.41732800006866455, 0.3961497630391802, 0.3879234961100987, 0.38953300033296856, 0.418633188520159, 0.3723789368356977, 0.38589623996189665, 0.3760556834084647, 0.36985958474023, 0.3911604370389666, 0.3558866126196725, 0.3768388884408133, 0.3609397070748465, 0.35787958758217947, 0.4040229320526123, 0.34997245243617464, 0.3253318411963327, 0.35629614761897493, 0.34194901159831453, 0.3225683059011187, 0.3665033153125218, 0.33059236833027433], "val_accuracy": [0.3903333246707916, 0.47999998927116394, 0.6476666927337646, 0.6959999799728394, 0.7276666760444641, 0.7233333587646484, 0.7563333511352539, 0.7596666812896729, 0.7566666603088379, 0.7689999938011169, 0.7756666541099548, 0.7926666736602783, 0.7796666622161865, 0.7666666507720947, 0.7773333191871643, 0.8019999861717224, 0.8096666932106018, 0.8203333616256714, 0.8243333101272583, 0.8306666612625122, 0.8289999961853027, 0.8410000205039978, 0.8370000123977661, 0.8286666870117188, 0.8386666774749756, 0.8223333358764648, 0.8460000157356262, 0.8386666774749756, 0.8410000205039978, 0.8450000286102295, 0.8236666917800903, 0.8479999899864197, 0.8636666536331177, 0.8476666808128357, 0.8583333492279053, 0.862666666507721, 0.831333339214325, 0.856333315372467]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 0, 0, 8, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [2, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.819428563117981, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1115683556358813, 1.8698531629040636, 1.3436283296550569, 1.1837447584108387, 0.9361412100835389, 0.7870849185552988, 0.7804592131403192, 0.7284860089549204, 0.6673805845994613, 0.6932628970765923, 0.6472751565062059, 0.6054468796064573, 0.6109463670124325, 0.6024956689566165, 0.5713061922261933, 0.56977565150613, 0.5422300746601176, 0.5330182398708663, 0.5163694768100918, 0.5138997573972834, 0.49043130536892504, 0.47974754548532583, 0.5076110008102697, 0.4738571099310094, 0.4607256185526641, 0.4421114419051732, 0.4489906380921622, 0.44236489478560204, 0.4338982922329233, 0.4295294758996723, 0.43304688622135573, 0.4356938760790134, 0.40969274617094864, 0.3848879006733716, 0.41003208560100274, 0.3980944567801473, 0.3887283990545642, 0.369600811816005], "accuracy": [0.31184783577919006, 0.3619072735309601, 0.5136705636978149, 0.5791836977005005, 0.6396777033805847, 0.7021529674530029, 0.7034738063812256, 0.7199841737747192, 0.7440232634544373, 0.7400607466697693, 0.752212405204773, 0.7700436115264893, 0.7667415142059326, 0.7751948237419128, 0.7807422876358032, 0.7800818681716919, 0.7980451583862305, 0.7996301651000977, 0.8075551390647888, 0.8045172095298767, 0.8190463781356812, 0.8148196935653687, 0.8078193068504333, 0.8235371708869934, 0.8206313848495483, 0.8337075710296631, 0.830669641494751, 0.8389908671379089, 0.8363492488861084, 0.8392550349235535, 0.8418967127799988, 0.8374059200286865, 0.8474441766738892, 0.8555012345314026, 0.8461233377456665, 0.8545766472816467, 0.8537842035293579, 0.8671245574951172], "val_loss": [1.2852507999965124, 1.3303422587258475, 1.266418559210641, 0.6785782064710345, 0.6014030831200736, 0.576806902885437, 0.558358907699585, 0.509854895727975, 0.5597603150776455, 0.48884490558079313, 0.47515210083552767, 0.5146195888519287, 0.48539458002362934, 0.4748093570981707, 0.4541693244661604, 0.4410230943134853, 0.43881418875285555, 0.40291901997157503, 0.38476769413266865, 0.3983655401638576, 0.3953686697142465, 0.41858983039855957, 0.389156631061009, 0.3598991802760533, 0.3651877386229379, 0.3913290245192392, 0.35162648984364103, 0.37719991377421785, 0.36756048032215666, 0.35701226336615427, 0.39725068637302946, 0.3495437928608486, 0.3305225968360901, 0.3984752467700413, 0.36267977952957153, 0.3293765698160444, 0.35162811619894846, 0.3467824459075928], "val_accuracy": [0.38966667652130127, 0.48899999260902405, 0.4593333303928375, 0.6740000247955322, 0.7450000047683716, 0.737333357334137, 0.75, 0.7743333578109741, 0.718999981880188, 0.7833333611488342, 0.7760000228881836, 0.7540000081062317, 0.7703333497047424, 0.7839999794960022, 0.7950000166893005, 0.7950000166893005, 0.800000011920929, 0.8209999799728394, 0.8370000123977661, 0.824999988079071, 0.8270000219345093, 0.8216666579246521, 0.8299999833106995, 0.8433333039283752, 0.8460000157356262, 0.8273333311080933, 0.8473333120346069, 0.8356666564941406, 0.8386666774749756, 0.846666693687439, 0.8270000219345093, 0.8486666679382324, 0.859333336353302, 0.8266666531562805, 0.8483333587646484, 0.8583333492279053, 0.8399999737739563, 0.8519999980926514]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 2, 0, 9, 8, 2, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [9, 8, 1, 3], [2, 2], [59], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8191428780555725, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(beta, tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1115123342765463, 1.8808583772854799, 1.3149916656800484, 1.046855854233888, 0.8706255339832983, 0.7852723847810446, 0.7850907660273828, 0.7253015257143594, 0.6724056014689032, 0.6839439828539757, 0.6316439376184733, 0.6100494198716627, 0.5902340524956503, 0.5860429823107298, 0.5703830415105713, 0.5625918556544539, 0.5466100420572061, 0.5309610641265605, 0.5161053908066491, 0.4991098001113169, 0.49809712207769247, 0.477625347289112, 0.4843641480891271, 0.4543430976556859, 0.44517142792986275, 0.4344005216232396, 0.44465045859438634, 0.4473440199598361, 0.4197111437585549], "accuracy": [0.31184783577919006, 0.35926562547683716, 0.5159159898757935, 0.6034870147705078, 0.6633205413818359, 0.6984546184539795, 0.6942279934883118, 0.72672039270401, 0.7441553473472595, 0.7387399077415466, 0.7581561207771301, 0.7631752490997314, 0.7750627398490906, 0.7796856164932251, 0.7823272943496704, 0.7862898111343384, 0.7931581139564514, 0.8006868362426758, 0.8041210174560547, 0.813498854637146, 0.811649739742279, 0.8185180425643921, 0.8166688680648804, 0.8379341959953308, 0.8309338092803955, 0.837537944316864, 0.8333113193511963, 0.8330471515655518, 0.8450667262077332], "val_loss": [1.2846267563956124, 1.2075254576546806, 0.751095073563712, 0.6686501843588692, 0.5927808455058506, 0.6833359513963971, 0.5369648252214704, 0.5209908315113613, 0.6047370263508388, 0.4827303375516619, 0.4696727820805141, 0.45011954648154123, 0.4428868293762207, 0.4500562293188913, 0.4579684393746512, 0.42259747641427176, 0.4424143518720354, 0.41574013233184814, 0.38851079770496916, 0.42089682817459106, 0.3987987382071359, 0.4068576863833836, 0.39058090107781546, 0.35478304965155466, 0.35478327104023527, 0.3756131785256522, 0.35352459975651335, 0.35245425360543386, 0.3546248418944223], "val_accuracy": [0.3903333246707916, 0.5636666417121887, 0.6769999861717224, 0.687333345413208, 0.7369999885559082, 0.6433333158493042, 0.749666690826416, 0.7576666474342346, 0.6976666450500488, 0.7926666736602783, 0.7786666750907898, 0.7993333339691162, 0.8029999732971191, 0.7996666431427002, 0.7833333611488342, 0.8056666851043701, 0.7996666431427002, 0.8149999976158142, 0.8286666870117188, 0.8106666803359985, 0.82833331823349, 0.812666654586792, 0.8306666612625122, 0.8500000238418579, 0.8460000157356262, 0.8336666822433472, 0.8489999771118164, 0.8489999771118164, 0.8446666598320007]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 0, 1, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [2, 2], [22], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8117142915725708, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), grad))), tf.math.add(beta, grad)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.111522759775271, 1.8361503573110185, 1.368575997781508, 1.0492892987645297, 0.8817072408452183, 0.8111347337960094, 0.7686993335578515, 0.7265131985506661, 0.679225461853966, 0.6794292928441609, 0.6276273369363995, 0.6101641511920264, 0.5920847963269644, 0.5976824561649893, 0.5627541893886742, 0.5668008026272441, 0.5305705720942806, 0.5290930121172657, 0.5123873286479658, 0.5079797174102043, 0.5003460419884983, 0.4653747275780693, 0.495754780180151, 0.46317690929732286, 0.4447802112890099, 0.4403560185012029, 0.4490093325642767, 0.4422323078275309, 0.4220251413998335, 0.4234771002647411, 0.4167879175721001, 0.4291574498366655], "accuracy": [0.31184783577919006, 0.36402061581611633, 0.4967639744281769, 0.594241201877594, 0.6553955674171448, 0.6934354901313782, 0.7000396251678467, 0.7253995537757874, 0.7372870445251465, 0.7397965788841248, 0.7557786107063293, 0.7685906887054443, 0.7709681391716003, 0.7736098170280457, 0.7866860628128052, 0.7823272943496704, 0.8025360107421875, 0.8014793395996094, 0.8039889335632324, 0.8107251524925232, 0.8108572363853455, 0.8214238286018372, 0.8107251524925232, 0.8301413059234619, 0.8305375576019287, 0.8364813327789307, 0.830669641494751, 0.8389908671379089, 0.8433496356010437, 0.8388587832450867, 0.8465195894241333, 0.8393871188163757], "val_loss": [1.284564665385655, 1.283043043954032, 1.0318048681531633, 0.7183774198804583, 0.610516003199986, 0.59415944984981, 0.5454408781869071, 0.5166192735944476, 0.5475775684629168, 0.4815940856933594, 0.5557720490864345, 0.45301549775259836, 0.46897659982953754, 0.4879591975893293, 0.43539510454450336, 0.4423539638519287, 0.42793983221054077, 0.4318843824522836, 0.3872840830257961, 0.4036900656563895, 0.3952876329421997, 0.42925056389399935, 0.39365815264838083, 0.360772899218968, 0.36494117975234985, 0.3967007654053824, 0.34821613345827374, 0.3980844361441476, 0.3536860687392099, 0.34456667729786467, 0.42705837317875456, 0.37717028175081524], "val_accuracy": [0.3883333206176758, 0.445333331823349, 0.5213333368301392, 0.6513333320617676, 0.734333336353302, 0.7323333621025085, 0.7513333559036255, 0.7573333382606506, 0.7440000176429749, 0.7839999794960022, 0.737666666507721, 0.7976666688919067, 0.7846666574478149, 0.7699999809265137, 0.8036666512489319, 0.796999990940094, 0.8043333292007446, 0.8059999942779541, 0.8240000009536743, 0.8223333358764648, 0.8343333601951599, 0.8043333292007446, 0.8293333053588867, 0.8443333506584167, 0.843666672706604, 0.8213333487510681, 0.8543333411216736, 0.8240000009536743, 0.8420000076293945, 0.8510000109672546, 0.8199999928474426, 0.8320000171661377]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 0, 0, 8, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [1, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8094285726547241, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 1, 3, 2, 1, 1, 1, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad)))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.11139319566861, 1.8880902419803858, 1.3367189086895923, 1.0764570477348607, 0.8970925657819401, 0.791364312786011, 0.7369155267430901, 0.7466810122299598, 0.6707749090977569, 0.6675240659931033, 0.6367517641553978, 0.597949722943415, 0.6231866918141107, 0.6051707959934044, 0.567606305913871, 0.5687574078346744, 0.5589911065175942, 0.5292029749400832, 0.5278262683641736, 0.5178637301775412, 0.49533946489173, 0.47123163198483164, 0.4985419519903984, 0.4575950334439298, 0.45005777624257726, 0.43872309283353017, 0.45188553898388983, 0.45193078048776214, 0.4196025024528249, 0.4320722418241749], "accuracy": [0.31184783577919006, 0.35702019929885864, 0.5130101442337036, 0.5941091179847717, 0.6502443552017212, 0.6992471218109131, 0.7140403985977173, 0.7113987803459167, 0.7420420050621033, 0.7409853339195251, 0.7549861073493958, 0.7755910754203796, 0.7557786107063293, 0.7701756954193115, 0.778232753276825, 0.7848368883132935, 0.7881389260292053, 0.8006868362426758, 0.8001585006713867, 0.8006868362426758, 0.8137630224227905, 0.8249900937080383, 0.8117818236351013, 0.8347642421722412, 0.8293488025665283, 0.8339717388153076, 0.8296129703521729, 0.8317263126373291, 0.8413683772087097, 0.8387266993522644], "val_loss": [1.2828405925205775, 1.04630480493818, 1.120941502707345, 0.6972680262156895, 0.607829213142395, 0.5583388124193464, 0.5592999117715018, 0.5155204023633685, 0.5379136460168021, 0.5023698806762695, 0.469126752444676, 0.4765475477491106, 0.45838580812726704, 0.4719406877245222, 0.43770555938993183, 0.42776242324284147, 0.44267262731279644, 0.4012820976121085, 0.39244368246623446, 0.40182953221457346, 0.3959231121199472, 0.3992721949304853, 0.3802115661757333, 0.369210490158626, 0.36171085493905203, 0.4178914342607771, 0.36317867040634155, 0.3635561295918056, 0.3575345533234732, 0.35583471400397165], "val_accuracy": [0.3903333246707916, 0.6256666779518127, 0.6076666712760925, 0.6863333582878113, 0.7296666502952576, 0.7416666746139526, 0.7400000095367432, 0.765333354473114, 0.753000020980835, 0.7753333449363708, 0.7773333191871643, 0.7850000262260437, 0.7910000085830688, 0.7803333401679993, 0.7963333129882812, 0.8009999990463257, 0.79666668176651, 0.8236666917800903, 0.8273333311080933, 0.8236666917800903, 0.828000009059906, 0.8209999799728394, 0.8330000042915344, 0.8383333086967468, 0.847000002861023, 0.8186666369438171, 0.8403333425521851, 0.843666672706604, 0.8416666388511658, 0.846666693687439]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 0, 2, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [2, 2], [47], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.7674285769462585, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 2, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))), grad)))), tf.math.add(beta, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.284850790106688, 2.241677433256271, 2.1820050524745747, 2.089240385792936, 1.9435881665354124, 1.7539540856285434, 1.5604256266820795, 1.3943594944806164, 1.2790133529540144, 1.1879976941546933, 1.1181542148773995, 1.0532089076919515, 1.0168672139382302, 0.9756575587592216, 0.9481263409878332, 0.9244391555956815, 0.9039760865649968, 0.8817112803254475, 0.866119035774171, 0.8490955666969198, 0.8370058520862754, 0.8242095452667526, 0.8077510125081867, 0.8005582554433891, 0.785652663115387, 0.7784109230779024, 0.7697040706719421, 0.7594765447165751, 0.7564566397333127, 0.7415687176199038, 0.7352748770739629, 0.7401252346047635, 0.7197362463535051, 0.7176154261692844, 0.7164645503147041, 0.7182680079729455, 0.7093809217887705, 0.6875387796195522, 0.693959652889422, 0.6889021529214194, 0.6788166942629186, 0.6755558566851245, 0.6791251405449654, 0.6743348626145094], "accuracy": [0.1368379294872284, 0.23999471962451935, 0.33139610290527344, 0.38066306710243225, 0.43085458874702454, 0.47430986166000366, 0.5126138925552368, 0.540219247341156, 0.5680887699127197, 0.5978074073791504, 0.6081098914146423, 0.6404702067375183, 0.6462818384170532, 0.6593580842018127, 0.6637167930603027, 0.6765288710594177, 0.6781138777732849, 0.6868313550949097, 0.6896050572395325, 0.6956809163093567, 0.7030775547027588, 0.7051908373832703, 0.7137762308120728, 0.7144366502761841, 0.7244749665260315, 0.7205125093460083, 0.7228899598121643, 0.7310791015625, 0.7257958054542542, 0.7312111854553223, 0.7341170310974121, 0.7304186820983887, 0.7421740889549255, 0.7397965788841248, 0.737947404384613, 0.7437590956687927, 0.7401928305625916, 0.744419515132904, 0.7423061728477478, 0.7555144429206848, 0.7491744756698608, 0.7530049085617065, 0.750759482383728, 0.7524765729904175], "val_loss": [1.9330610547746931, 1.8864341463361467, 1.813826356615339, 1.700228520802089, 1.5341167790549142, 1.33256653376988, 1.1488500322614397, 1.0090199879237585, 0.9100337369101388, 0.8399887766156878, 0.7884609869548252, 0.7462156670434135, 0.7196247918265206, 0.6923211812973022, 0.6741539921079364, 0.6588662692478725, 0.6423404727663312, 0.6314234392983573, 0.6182270731244769, 0.6098380088806152, 0.6015799045562744, 0.5950277873447963, 0.5833220822470528, 0.5788078137806484, 0.5707850115639823, 0.5681129012789045, 0.5646015575953892, 0.554235543523516, 0.5495295694896153, 0.5411544867924282, 0.5383881500789097, 0.5335850204740252, 0.5284080164773124, 0.5228741339274815, 0.5215962444032941, 0.51746324130467, 0.5156034231185913, 0.5109506164278302, 0.5063588108335223, 0.5085043907165527, 0.5024396010807582, 0.5010866607938494, 0.5022993087768555, 0.49478232860565186], "val_accuracy": [0.3109999895095825, 0.39399999380111694, 0.468666672706604, 0.5203333497047424, 0.5596666932106018, 0.5846666693687439, 0.6499999761581421, 0.6629999876022339, 0.6813333630561829, 0.6836666464805603, 0.6923333406448364, 0.7036666870117188, 0.7083333134651184, 0.7139999866485596, 0.7183333039283752, 0.7233333587646484, 0.7300000190734863, 0.7300000190734863, 0.7360000014305115, 0.7400000095367432, 0.7459999918937683, 0.7396666407585144, 0.7486666440963745, 0.75, 0.750333309173584, 0.7536666393280029, 0.750333309173584, 0.7663333415985107, 0.7596666812896729, 0.7643333077430725, 0.7639999985694885, 0.7676666378974915, 0.7663333415985107, 0.7703333497047424, 0.765999972820282, 0.7699999809265137, 0.7776666879653931, 0.7739999890327454, 0.7833333611488342, 0.7689999938011169, 0.7716666460037231, 0.7796666622161865, 0.7716666460037231, 0.7803333401679993]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 0, 0, 8, 6, 4, 3, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [67, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [30, 49, 44, 92]], "fitness": -0.7671428322792053, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))))), tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.284850790106688, 2.241677401765242, 2.1820076749844715, 2.089240736665979, 1.943590680920862, 1.7539782088115592, 1.560463841580885, 1.3943929126186771, 1.2790275549671322, 1.188039392638342, 1.1181441701209587, 1.0531219199286035, 1.0167110942814879, 0.9754300869262261, 0.9480375963321153, 0.9243817991899257, 0.903971263257315, 0.8816576945610082, 0.866157314206127, 0.8490986719957795, 0.8370426659334637, 0.8243443224613047, 0.8078778118127373, 0.8005178743396941, 0.7856657358602116, 0.7782825612514845, 0.76958621381186, 0.7594664220355836, 0.7563705799790925, 0.7416051756105938, 0.7352117828610488, 0.7400359372578718, 0.7198068274797906, 0.7176453267673003, 0.7163679376333113, 0.7183101395605861, 0.70951203337246, 0.6874105887894207, 0.6939737508168168, 0.6890708688243569, 0.6788194173866527, 0.6758011282868058, 0.6791540986873439, 0.6742339271910832], "accuracy": [0.1368379294872284, 0.23999471962451935, 0.33126401901245117, 0.38053098320961, 0.43085458874702454, 0.47430986166000366, 0.5122177004814148, 0.5398229956626892, 0.5679566860198975, 0.5975432395935059, 0.6078457236289978, 0.6407343745231628, 0.6460176706314087, 0.6601505875587463, 0.6641130447387695, 0.6770572066307068, 0.6781138777732849, 0.6868313550949097, 0.6896050572395325, 0.6963412761688232, 0.7022850513458252, 0.7047945857048035, 0.713908314704895, 0.7147008180618286, 0.7236824631690979, 0.7206445932388306, 0.7231541275978088, 0.7302865982055664, 0.7257958054542542, 0.7313432693481445, 0.7342491149902344, 0.7305507659912109, 0.7421740889549255, 0.739400327205658, 0.7375511527061462, 0.7436270117759705, 0.7403249144554138, 0.744419515132904, 0.741909921169281, 0.7559106945991516, 0.7486461400985718, 0.7520803213119507, 0.7508915662765503, 0.7530049085617065], "val_loss": [1.9330610547746931, 1.8864351681300573, 1.8138271740504675, 1.700225864137922, 1.5341357844216483, 1.3325977666037423, 1.1488843304770333, 1.0090419564928328, 0.9100703852517265, 0.8400274685450962, 0.7884523357663836, 0.7461605072021484, 0.7192980221339634, 0.6922035898481097, 0.6741127967834473, 0.658899358340672, 0.6424419028418404, 0.6314585549490792, 0.6182400499071393, 0.6098071847643171, 0.6016359669821603, 0.594976578439985, 0.5832653556551252, 0.5788818768092564, 0.5710051911217826, 0.5680566515241351, 0.5647105148860386, 0.554233261517116, 0.5494090659277779, 0.5412109579358783, 0.5383757863725934, 0.5335409300667899, 0.528376851763044, 0.5227145978382656, 0.5215428045817784, 0.5175485100064959, 0.5156575441360474, 0.5109870263508388, 0.5064226048333305, 0.5086581025804792, 0.5024076359612601, 0.5010837316513062, 0.5020810535975865, 0.4949851206370762], "val_accuracy": [0.3109999895095825, 0.39399999380111694, 0.468666672706604, 0.5203333497047424, 0.559333324432373, 0.5846666693687439, 0.6503333449363708, 0.6626666784286499, 0.6813333630561829, 0.6840000152587891, 0.6923333406448364, 0.7043333053588867, 0.7083333134651184, 0.7136666774749756, 0.718666672706604, 0.7233333587646484, 0.7293333411216736, 0.7300000190734863, 0.7360000014305115, 0.7406666874885559, 0.7459999918937683, 0.7390000224113464, 0.7486666440963745, 0.7493333220481873, 0.7493333220481873, 0.753333330154419, 0.7506666779518127, 0.765333354473114, 0.7596666812896729, 0.7636666893959045, 0.7636666893959045, 0.7673333287239075, 0.7666666507720947, 0.7720000147819519, 0.765666663646698, 0.7693333625793457, 0.778333306312561, 0.7739999890327454, 0.7823333144187927, 0.7696666717529297, 0.7713333368301392, 0.7776666879653931, 0.7720000147819519, 0.7799999713897705]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 0, 1, 2, 2, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [2, 8, 1, 3], [2, 2], [59], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [55, 49, 44, 92]], "fitness": -0.6631428599357605, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.2948382951642983, 2.2540017956078815, 2.167178992156922, 1.979916481608964, 1.6428247455120275, 1.3903177682954433, 1.3744611965745526, 1.208333488059255, 0.9874575484729541, 0.9044269218562601, 0.9001807209727724, 0.8425249211099469, 0.8035127101415624, 0.8248166395468152, 0.8164776815730095, 0.7815434614098257, 0.7388957127635474, 0.7263367117876233, 0.7294278590040846, 0.730318234171834, 0.7025726293969573, 0.6942056424708146, 0.6780741943297148, 0.6679865918092094, 0.6522574576372956, 0.631289545610486, 0.6233279509173408, 0.5976098208788946, 0.6087832886387627, 0.5985337738048572, 0.5832130370941837, 0.5810798039573012, 0.5644049387660874, 0.563126142786132, 0.5509366836955345, 0.5474933279094412, 0.5460940673287991, 0.5351679476969247, 0.5284726217265111, 0.518083182615359, 0.519830596099015, 0.5028467814620964, 0.4955812402767292, 0.500205594849955, 0.49132971485466326, 0.48570741873454454, 0.484283670107954, 0.47136036416936655, 0.4717612142702057, 0.4557355126259491, 0.4681527618766067, 0.4596924072503256, 0.45400231712529876, 0.4490292394173821, 0.4502669666358556, 0.4441078777452423, 0.44402912768862896, 0.43317412412114636, 0.4377513260550707, 0.4274475866493973, 0.424937108705041, 0.4212424983524486, 0.4088701170826979, 0.41261268522147065, 0.4113184568069835, 0.39562326690162164, 0.3970355887367993, 0.3919957035473703, 0.3956502021823372, 0.3912266014731083, 0.38487772367429174, 0.3883379396036899, 0.3702706511325179], "accuracy": [0.11438383162021637, 0.21357811987400055, 0.3415665030479431, 0.4031171500682831, 0.46546030044555664, 0.5217276215553284, 0.5499933958053589, 0.6037511825561523, 0.6493197679519653, 0.6625280380249023, 0.6733588576316833, 0.6929071545600891, 0.693831741809845, 0.6929071545600891, 0.6985867023468018, 0.7169462442398071, 0.7214370369911194, 0.7276449799537659, 0.724210798740387, 0.7331924438476562, 0.743891179561615, 0.7448157668113708, 0.7479857206344604, 0.7473253011703491, 0.7477215528488159, 0.7574957013130188, 0.7697794437408447, 0.772288978099823, 0.7718927264213562, 0.7725531458854675, 0.7754589915275574, 0.7761194109916687, 0.7840443849563599, 0.7841764688491821, 0.7880068421363831, 0.7956677079200745, 0.7884030938148499, 0.7959318161010742, 0.7989697456359863, 0.7960638999938965, 0.7951393723487854, 0.806630551815033, 0.8109893202781677, 0.8087438941001892, 0.811649739742279, 0.8121780753135681, 0.8123101592063904, 0.8156121969223022, 0.8178576231002808, 0.8215559124946594, 0.819970965385437, 0.8169330358505249, 0.8187822103500366, 0.8317263126373291, 0.8271034359931946, 0.8274996876716614, 0.8273676037788391, 0.8315942287445068, 0.8323867321014404, 0.8352925777435303, 0.8408400416374207, 0.8355567455291748, 0.8352925777435303, 0.8432175517082214, 0.8418967127799988, 0.8453308939933777, 0.8488970994949341, 0.8514066934585571, 0.8477083444595337, 0.8446704745292664, 0.8558974862098694, 0.8473120927810669, 0.8541803956031799], "val_loss": [1.9484970910208566, 1.8898865154811315, 1.7690800939287459, 1.4940580981118339, 1.101818255015782, 0.8461548260280064, 0.7658565895898002, 0.7327723503112793, 0.6621444225311279, 0.6920230729239327, 0.6783951350620815, 0.6102099588939122, 0.5870581184114728, 0.5849098988941738, 0.5743160247802734, 0.5650558812277657, 0.5381142582212176, 0.5534859725407192, 0.5605415957314628, 0.5405992099217006, 0.5335899421146938, 0.5210421596254621, 0.490066613469805, 0.47387075424194336, 0.4617241110120501, 0.45300393445151194, 0.4484456011227199, 0.45828441211155485, 0.4569532700947353, 0.44813176563807894, 0.438380811895643, 0.427283661706107, 0.42486205271312166, 0.4224875909941537, 0.4194232225418091, 0.4257006730352129, 0.4282051750591823, 0.4205008063997541, 0.41172016518456594, 0.4084335906164987, 0.40461939573287964, 0.4012829576219831, 0.40213105508259367, 0.40577700308391024, 0.40496002776282175, 0.40211009979248047, 0.40019120488848003, 0.3962101084845407, 0.3906826376914978, 0.3865912641797747, 0.3831762245723179, 0.3830398406301226, 0.38613020522253855, 0.3883837802069528, 0.38749295473098755, 0.38364693948200773, 0.37878396681376864, 0.374195396900177, 0.3716362714767456, 0.37015943016324726, 0.36619084221976145, 0.3641499791826521, 0.36341199704578947, 0.3625831774302891, 0.36232195581708637, 0.35937230927603586, 0.35321466411863056, 0.3489876559802464, 0.34672053371156963, 0.34926692077091764, 0.34896085943494526, 0.3424504058701651, 0.3432919553347996], "val_accuracy": [0.23333333432674408, 0.3656666576862335, 0.42533332109451294, 0.5183333158493042, 0.6290000081062317, 0.6693333387374878, 0.6893333196640015, 0.6983333230018616, 0.7096666693687439, 0.7136666774749756, 0.7233333587646484, 0.7289999723434448, 0.734333336353302, 0.7256666421890259, 0.7379999756813049, 0.7440000176429749, 0.7573333382606506, 0.7563333511352539, 0.7599999904632568, 0.7649999856948853, 0.7596666812896729, 0.7716666460037231, 0.7799999713897705, 0.7856666445732117, 0.7983333468437195, 0.7933333516120911, 0.7893333435058594, 0.7823333144187927, 0.7916666865348816, 0.7993333339691162, 0.8036666512489319, 0.8080000281333923, 0.8006666898727417, 0.8046666383743286, 0.8113333582878113, 0.8153333067893982, 0.8166666626930237, 0.8169999718666077, 0.8100000023841858, 0.8109999895095825, 0.8130000233650208, 0.8233333230018616, 0.8240000009536743, 0.8263333439826965, 0.8299999833106995, 0.8286666870117188, 0.8306666612625122, 0.8309999704360962, 0.8366666436195374, 0.8379999995231628, 0.8416666388511658, 0.8450000286102295, 0.8433333039283752, 0.8403333425521851, 0.8420000076293945, 0.843999981880188, 0.847000002861023, 0.847000002861023, 0.8493333458900452, 0.8516666889190674, 0.8533333539962769, 0.8516666889190674, 0.8516666889190674, 0.8560000061988831, 0.8573333621025085, 0.8569999933242798, 0.8576666712760925, 0.8583333492279053, 0.856333315372467, 0.8566666841506958, 0.856333315372467, 0.8553333282470703, 0.856333315372467]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 2, 0, 2, 8, 1, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [2, 2], [59], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [94, 49, 44, 92]], "fitness": -0.20971427857875824, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(alpha), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4.39660826779281, 2.309744103111375, 2.30457272171864, 2.26919865995555, 2.312438673898135, 2.3034210838677627, 2.3033321513759306, 2.3030690698103427], "accuracy": [0.15255580842494965, 0.0956280529499054, 0.10698718577623367, 0.17051908373832703, 0.09285431355237961, 0.09893012791872025, 0.09232597798109055, 0.09694888442754745], "val_loss": [1.982480866568429, 1.973996707371303, 1.9719559124537878, 1.9895879200526647, 1.9742637361798967, 1.9737723214285714, 1.9736905779157365, 1.9736154420035226], "val_accuracy": [0.09966666996479034, 0.09866666793823242, 0.12300000339746475, 0.09799999743700027, 0.09866666793823242, 0.10133333504199982, 0.1003333330154419, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [5, 0, 1, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [5, 8, 1, 3], [3, 2], [17], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 2, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(tf.math.sqrt(beta), tf.math.add(beta, tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08942015469074249, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 0, 1, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 4, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [0, 2], [59], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 1, 1, 0, 1, 4, 3, 1, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7113304.650625993, 135554307.3052437, 634390530.6796988, 1742477630.5882974, 3780003432.550522, 6946462729.061947], "accuracy": [0.09787346422672272, 0.1018359512090683, 0.10566636174917221, 0.10302469879388809, 0.09536388516426086, 0.09509972482919693], "val_loss": [27048066.85714286, 216016790.85714287, 728647332.5714285, 1726679076.5714285, 3371853970.285714, 5825920877.714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [0, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 0, 0, 8, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 2, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [2, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3025015027783473, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 0, 0, 8, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [2, 8, 1, 3], [0, 2], [76], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 21, 12, 9, 3], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.multiply(alpha, tf.math.pow(beta, tf.math.subtract(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.pow(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha))))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 0, 0, 0, 8, 8, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [2, 8, 1, 3], [0, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 1, 1, 1, 0, 1, 1, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.add(beta, beta))))))), tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3025015027783473, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 0, 4, 8, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [9, 8, 1, 3], [0, 2], [76], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08334434032440186, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 1, 6, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0], [6, 8, 1, 3], [2, 2], [17], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 20, 12, 8, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(grad)), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.pow(beta, tf.math.subtract(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.pow(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha))))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 0, 1, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [2, 8, 1, 3], [2, 2], [59], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, grad))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 0, 1, 4, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 1, 0, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [9, 8, 1, 3], [2, 2], [17], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 2, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), alpha))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08334434032440186, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [5, 2, 1, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0], [9, 8, 1, 3], [0, 2], [17], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.09685714542865753, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 1, 1, 1, 0, 1, 1, 3, 2, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad))), grad)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(alpha))", "other_info": {"loss": [2.3009414016263614, 2.3001321840909776, 2.300086099143199, 2.3003872301222357, 2.2998869359264944, 2.3003294820310636, 2.2992491786663543, 2.299077264825823, 2.3001760167059033, 2.3002501121050396, 2.2994554198381842, 2.2993946685420683, 2.2995219634366846, 2.3003634680625926, 2.300287137871106, 2.3006845809496657, 2.3008687707175195, 2.300648984907798, 2.3005525710292702, 2.3009480913915747, 2.301558563344278, 2.300667269953238, 2.3017741225225863, 2.30171125613152, 2.3009476227735752, 2.3008927261320795, 2.300853013330998, 2.301127088824126, 2.301264138600263, 2.3014366634612258, 2.300965876233513, 2.301184651433138, 2.301253657315181, 2.301531761518606, 2.301376834316906, 2.301724646274424, 2.301314316468547, 2.300990588786879, 2.3015707287380898, 2.3012168866579388], "accuracy": [0.09668471664190292, 0.09457138925790787, 0.09813763201236725, 0.09945846349000931, 0.1002509593963623, 0.09338264167308807, 0.09959053993225098, 0.09774138033390045, 0.09589222073554993, 0.09377889335155487, 0.09906221181154251, 0.1010434553027153, 0.09879804402589798, 0.09694888442754745, 0.1010434553027153, 0.09589222073554993, 0.09576013684272766, 0.09840179979801178, 0.09311848133802414, 0.0948355570435524, 0.09074098616838455, 0.09113723784685135, 0.08902391046285629, 0.09153348207473755, 0.09615638852119446, 0.0956280529499054, 0.09602430462837219, 0.10170386731624603, 0.09430722147226334, 0.09536388516426086, 0.09787346422672272, 0.09140139818191528, 0.09655263274908066, 0.09879804402589798, 0.09470347315073013, 0.09126931428909302, 0.09298639744520187, 0.0866464152932167, 0.08968432247638702, 0.09642054885625839], "val_loss": [1.9703337124415807, 1.969897747039795, 1.969775608607701, 1.9697391646248954, 1.9698412758963448, 1.9700070789882116, 1.9700626645769392, 1.9700378009251185, 1.9700548308236259, 1.9702181134905135, 1.9704572813851493, 1.9706117766244071, 1.9707815987723214, 1.9709172248840332, 1.9710941314697266, 1.971233299800328, 1.971370083945138, 1.9715472630092077, 1.9716738973345076, 1.9717373166765486, 1.971803937639509, 1.9718764168875558, 1.9719174930027552, 1.9719792093549455, 1.9720100675310408, 1.9720495768955775, 1.9720937183925085, 1.9721109526497977, 1.972137451171875, 1.9721639496939523, 1.972172737121582, 1.9721965789794922, 1.9722225325448173, 1.9722294126238142, 1.9722248486110143, 1.9722344534737724, 1.9722426959446497, 1.9722652435302734, 1.9722699437822615, 1.9722919464111328], "val_accuracy": [0.0430000014603138, 0.04833333194255829, 0.056333333253860474, 0.06133333221077919, 0.06266666948795319, 0.06800000369548798, 0.06933332979679108, 0.07333333045244217, 0.07433333247900009, 0.0716666653752327, 0.0689999982714653, 0.06933332979679108, 0.07100000232458115, 0.07500000298023224, 0.07266666740179062, 0.070333331823349, 0.07199999690055847, 0.07000000029802322, 0.07599999755620956, 0.07733333110809326, 0.08100000023841858, 0.08233333379030228, 0.08399999886751175, 0.08566666394472122, 0.0846666693687439, 0.08399999886751175, 0.09133332967758179, 0.09333333373069763, 0.09600000083446503, 0.09300000220537186, 0.0963333323597908, 0.0963333323597908, 0.09433333575725555, 0.09866666793823242, 0.10000000149011612, 0.09799999743700027, 0.09600000083446503, 0.09566666930913925, 0.09533333033323288, 0.0949999988079071]}}]