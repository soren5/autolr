[{"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 9, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8317142724990845, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [1.9890760206322802, 1.4518028956835123, 1.2206390615168374, 0.8733098406313653, 0.7728157064162383, 0.7295951600387159, 0.6970559927246055, 0.659419190330969, 0.6302912678574968, 0.6135847077645551, 0.5947311462318073, 0.5721034027282761, 0.5646349083730148, 0.54450881116662, 0.5420753293112364, 0.5030240304851733, 0.5046183835435081, 0.48314376293691774, 0.4748777166695847, 0.45913560242700757, 0.45278527397033075, 0.4514558660891141, 0.4512557841688808, 0.4048667817642629, 0.41769445306195746, 0.39240982585721057, 0.4278588006013357, 0.38143148878152583, 0.40174002035135575, 0.39460257054351466, 0.3747554188942346, 0.37707912823102413, 0.37172588797734163, 0.36740578612426583, 0.3678669966624445, 0.34967547812560734, 0.3480761426078676, 0.342468582679252, 0.32538240106429217, 0.3401168359544661], "accuracy": [0.34605732560157776, 0.49465063214302063, 0.5688812732696533, 0.6785101294517517, 0.7062475085258484, 0.7246070504188538, 0.7322678565979004, 0.7479857206344604, 0.7510236501693726, 0.7631752490997314, 0.7696473598480225, 0.7852331399917603, 0.7836481332778931, 0.7911768555641174, 0.7909126877784729, 0.813498854637146, 0.8175934553146362, 0.8161405324935913, 0.819970965385437, 0.8256505131721497, 0.8327829837799072, 0.8308017253875732, 0.826310932636261, 0.8481045961380005, 0.8405758738517761, 0.848368763923645, 0.8400475382804871, 0.858671247959137, 0.8491612672805786, 0.8549728989601135, 0.8618412613868713, 0.8623695969581604, 0.8609166741371155, 0.8640866279602051, 0.8541803956031799, 0.8704266548156738, 0.8706908226013184, 0.8733324408531189, 0.8766345381736755, 0.8717474341392517], "val_loss": [1.6029882431030273, 1.3715994358062744, 0.7062197072165353, 0.6450374296733311, 0.6325886419841221, 0.5948147092546735, 0.5186791590281895, 0.5088105201721191, 0.4557396173477173, 0.4758075305393764, 0.4297310539654323, 0.4363196236746652, 0.41177925041743685, 0.40088701248168945, 0.42572760581970215, 0.4317955034119742, 0.37936181681496756, 0.3732044611658369, 0.37362236636025564, 0.3925979222570147, 0.39982699496405466, 0.368924617767334, 0.34732156140463694, 0.34604995591299875, 0.33314147165843416, 0.351407059601375, 0.3330091578619821, 0.4004734584263393, 0.3611240301813398, 0.3532210758754185, 0.31840888942990986, 0.34782229151044575, 0.3714310441698347, 0.3204509275300162, 0.30528372526168823, 0.31824598142078947, 0.33002629450389315, 0.3006071703774588, 0.3110287530081613, 0.3309086731501988], "val_accuracy": [0.4073333442211151, 0.4309999942779541, 0.6880000233650208, 0.7103333473205566, 0.7163333296775818, 0.7070000171661377, 0.7559999823570251, 0.7683333158493042, 0.7960000038146973, 0.7749999761581421, 0.8066666722297668, 0.7990000247955322, 0.8140000104904175, 0.8166666626930237, 0.8069999814033508, 0.8069999814033508, 0.8389999866485596, 0.8360000252723694, 0.8443333506584167, 0.8259999752044678, 0.8320000171661377, 0.8450000286102295, 0.8536666631698608, 0.8519999980926514, 0.8579999804496765, 0.8496666550636292, 0.8610000014305115, 0.8213333487510681, 0.8330000042915344, 0.8456666469573975, 0.8676666617393494, 0.8513333201408386, 0.8363333344459534, 0.8616666793823242, 0.8743333220481873, 0.8676666617393494, 0.856333315372467, 0.8713333606719971, 0.8709999918937683, 0.8603333234786987]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 2, 0, 0, 4, 2, 5, 5, 2, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 2, 2, 2, 2, 1, 2, 3, 0, 0, 2, 1, 2], [99, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [5, 2, 1, 3], [2, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [37, 49, 44, 92]], "fitness": -0.8125714063644409, "mapping_values": [1, 19, 19, 12, 7, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, grad))))))), tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.23111650238672, 1.8043266121485544, 1.2977718686887443, 1.0862058172955285, 0.9466499801104677, 0.9065873867579581, 0.834076598997145, 0.8107053332750146, 0.780196513647511, 0.7561431458093676, 0.7289503554563481, 0.714523698352725, 0.7127978202846654, 0.7061176385074606, 0.6843525272917202, 0.6735403101599495, 0.652794669411674, 0.654054597360646, 0.6528846637022698, 0.6343830033158582, 0.6286837639447768, 0.6328224285860355, 0.6019021664328973, 0.6011820031179177, 0.596741363734869, 0.592681070958713, 0.5871565879816235, 0.5914112146835065, 0.5916441963994665, 0.5769612613985206, 0.5725596706156465, 0.5640144484815597, 0.5680646568934332, 0.562851509358574, 0.5573522949798185, 0.5595831214838402, 0.5617497452592428, 0.5502824552535318, 0.563253640837248, 0.5372911413363682, 0.5432445965879519, 0.537827916298686, 0.5321610309838021, 0.5103404287019063, 0.5171107350166022, 0.5283608516729141, 0.5093944728130426, 0.5142460448426058, 0.5176798930619734, 0.5097729983252305, 0.5081936881652739, 0.5127817395262163, 0.5038995595065563, 0.5048036292764126, 0.49210936482146966], "accuracy": [0.2378813922405243, 0.43930789828300476, 0.5532954931259155, 0.613789439201355, 0.666358470916748, 0.6720380187034607, 0.6930392384529114, 0.7038700580596924, 0.7057191729545593, 0.7257958054542542, 0.7359662055969238, 0.7359662055969238, 0.7338528633117676, 0.7383436560630798, 0.7448157668113708, 0.754589855670929, 0.7592127919197083, 0.754589855670929, 0.7576277852058411, 0.7606657147407532, 0.7688548564910889, 0.7604015469551086, 0.7786290049552917, 0.7716285586357117, 0.7769119143486023, 0.7755910754203796, 0.7827235460281372, 0.7784969210624695, 0.7712323069572449, 0.7843085527420044, 0.7884030938148499, 0.7913089394569397, 0.789459764957428, 0.7907806038856506, 0.7943468689918518, 0.7890635132789612, 0.7872143983840942, 0.7942147850990295, 0.7893276810646057, 0.7991018295288086, 0.7988376617431641, 0.8020076751708984, 0.7992339134216309, 0.8115176558494568, 0.8080834746360779, 0.8059701323509216, 0.8045172095298767, 0.8095363974571228, 0.8103289008140564, 0.811649739742279, 0.8138951063156128, 0.8055738806724548, 0.8138951063156128, 0.8149517774581909, 0.8140271902084351], "val_loss": [1.7507726805550712, 1.1007816450936454, 0.8954956190926688, 0.7143486397606986, 0.7554123061043876, 0.6550956623894828, 0.5880205631256104, 0.5838268143790108, 0.5593424694878715, 0.5357652902603149, 0.537457891872951, 0.5188511610031128, 0.5078845024108887, 0.5022416625704084, 0.5054296084812709, 0.5185038532529559, 0.4921294961656843, 0.4739630733217512, 0.4828986440386091, 0.48080573763166157, 0.4672117403575352, 0.4614926746913365, 0.4509033135005406, 0.4449022667748587, 0.44904189450400217, 0.45804405212402344, 0.4423361761229379, 0.44034082548958914, 0.4426158496311733, 0.4366813046591623, 0.43023702927998136, 0.43718351636614117, 0.43150098834718975, 0.4200474279267447, 0.42572507687977384, 0.4217322894505092, 0.4167248010635376, 0.41562202998570036, 0.41406755787985666, 0.415985643863678, 0.41502004861831665, 0.414826716695513, 0.40487256220408846, 0.3971747245107378, 0.39835359369005474, 0.4035941277231489, 0.41244802304676603, 0.40048771245138987, 0.39269648279462543, 0.38790380103247507, 0.39778617450169157, 0.38273867538997103, 0.38936190945761545, 0.39569136074611116, 0.38347136974334717], "val_accuracy": [0.4543333351612091, 0.6140000224113464, 0.6493333578109741, 0.7020000219345093, 0.6826666593551636, 0.7143333554267883, 0.7526666522026062, 0.7476666569709778, 0.7613333463668823, 0.768666684627533, 0.7613333463668823, 0.7739999890327454, 0.7803333401679993, 0.781333327293396, 0.7799999713897705, 0.7726666927337646, 0.7730000019073486, 0.7990000247955322, 0.7960000038146973, 0.7860000133514404, 0.8029999732971191, 0.796999990940094, 0.8046666383743286, 0.8083333373069763, 0.812666654586792, 0.7900000214576721, 0.8106666803359985, 0.8063333630561829, 0.8140000104904175, 0.8119999766349792, 0.8096666932106018, 0.8069999814033508, 0.8103333115577698, 0.8190000057220459, 0.8143333196640015, 0.8103333115577698, 0.8166666626930237, 0.8199999928474426, 0.8243333101272583, 0.8090000152587891, 0.8243333101272583, 0.8206666707992554, 0.8299999833106995, 0.8309999704360962, 0.8299999833106995, 0.8273333311080933, 0.8230000138282776, 0.8346666693687439, 0.8276666402816772, 0.8413333296775818, 0.8309999704360962, 0.8360000252723694, 0.8323333263397217, 0.82833331823349, 0.8330000042915344]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 2, 2, 2, 0, 3, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8077142834663391, "mapping_values": [1, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.multiply(grad, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), alpha))), tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [1.989021650300349, 1.4527197767478632, 1.2833293251877274, 0.8717337868957157, 0.7740473890380144, 0.7327165754715906, 0.6920909722247192, 0.6683293928276232, 0.6459146509191316, 0.6026329749752549, 0.591063472297544, 0.562424107089003, 0.5712291921654146, 0.552594704855356, 0.5238461075772572, 0.5241213696995872, 0.48362239091907433, 0.4951481772428018, 0.48737246229538056, 0.4647920545475468, 0.45132014099097667, 0.45456444268858964, 0.44789278755618156, 0.4035818567798437, 0.4311181688785805, 0.3897171990707046, 0.4271794173459587, 0.3938921923729344, 0.39004590202001393, 0.384319762512205, 0.3878349994490443, 0.3664744689503618], "accuracy": [0.3459252417087555, 0.4931977391242981, 0.5540879964828491, 0.6724342703819275, 0.7058512568473816, 0.7220974564552307, 0.7306828498840332, 0.7425703406333923, 0.7470611333847046, 0.7718927264213562, 0.7720248103141785, 0.7901201844215393, 0.7861577272415161, 0.7909126877784729, 0.8018755912780762, 0.8053097128868103, 0.8215559124946594, 0.8112534880638123, 0.8127063512802124, 0.8230088353157043, 0.8310658931732178, 0.8313300609588623, 0.8280280232429504, 0.8516708612442017, 0.8334434032440186, 0.8512746095657349, 0.8374059200286865, 0.8520671129226685, 0.8549728989601135, 0.8599920868873596, 0.8515387773513794, 0.8639545440673828], "val_loss": [1.6031311239515031, 1.3866968495505196, 0.7346124308449882, 0.66159759249006, 0.5704869883401054, 0.6086479255131313, 0.5191970041819981, 0.4852218287331717, 0.4594341346195766, 0.4539914131164551, 0.4255209650312151, 0.42386566741125925, 0.40704667568206787, 0.3995528221130371, 0.39489963224955965, 0.4002845968518938, 0.3787909064974104, 0.3652987224715097, 0.3793632132666452, 0.39413016183035715, 0.39005874735968454, 0.36430069378444124, 0.34412303992680143, 0.35034630979810444, 0.33427261454718454, 0.361138505595071, 0.32802036830357145, 0.34500093119485037, 0.35392514296940397, 0.34912203890936716, 0.33609259128570557, 0.3353398527417864], "val_accuracy": [0.40799999237060547, 0.42133334279060364, 0.6809999942779541, 0.7163333296775818, 0.7336666584014893, 0.7286666631698608, 0.7666666507720947, 0.7773333191871643, 0.8009999990463257, 0.7870000004768372, 0.8066666722297668, 0.812666654586792, 0.8149999976158142, 0.8180000185966492, 0.8236666917800903, 0.8173333406448364, 0.8326666951179504, 0.8429999947547913, 0.8420000076293945, 0.8253333568572998, 0.8349999785423279, 0.8456666469573975, 0.8506666421890259, 0.8569999933242798, 0.8546666502952576, 0.8393333554267883, 0.8650000095367432, 0.8500000238418579, 0.8483333587646484, 0.8503333330154419, 0.8576666712760925, 0.859666645526886]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 2, 5, 4, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 2, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0], [7, 2, 1, 3], [1, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.8022857308387756, "mapping_values": [1, 25, 25, 16, 9, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.pow(grad, tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [1.988949946408668, 1.4477876807247974, 1.2239012492410006, 0.9221869520365743, 0.7612353460884145, 0.7534940097514964, 0.6707296285174542, 0.6492026441557973, 0.6149970931053288, 0.6388535471309555, 0.5936584765286635, 0.5624551019412242, 0.5701970991095091, 0.548934279478867, 0.5267350500474879, 0.5160766218938627, 0.49110923629348086, 0.4926100867401733, 0.48207156785868727, 0.45992620117502786, 0.45227968716397815, 0.45727596528116643, 0.44212155399336994, 0.4059280998411432, 0.4244363421989769, 0.38873057648994197, 0.4266675372858089, 0.3888736195520812, 0.3844351284043538, 0.37982684520288873, 0.3961814595503247, 0.363838615666732], "accuracy": [0.34566107392311096, 0.4970281422138214, 0.5571258664131165, 0.6530181169509888, 0.709021270275116, 0.7108704447746277, 0.7408532500267029, 0.7495707273483276, 0.7578919529914856, 0.7498348951339722, 0.7740060687065125, 0.7897239327430725, 0.7858935594558716, 0.7902522683143616, 0.8025360107421875, 0.8112534880638123, 0.8182538747787476, 0.8158763647079468, 0.8162726163864136, 0.82683926820755, 0.8313300609588623, 0.8325188159942627, 0.8335754871368408, 0.8515387773513794, 0.8405758738517761, 0.8544445633888245, 0.8425571322441101, 0.8548408150672913, 0.8589354157447815, 0.8588033318519592, 0.8500858545303345, 0.8644828796386719], "val_loss": [1.6014951297215052, 1.3487261363438197, 0.7597984075546265, 0.5821257659367153, 0.6665582486561367, 0.539333871432713, 0.5241171973092216, 0.4648368869509016, 0.4971411568777902, 0.47560650961739676, 0.41817705971854074, 0.4271537576402937, 0.39793642929622103, 0.40887790066855295, 0.39835578203201294, 0.4172295757702419, 0.40445683683667866, 0.3675865020070757, 0.376143889767783, 0.38181971652167185, 0.3894684229578291, 0.37870802198137554, 0.3542324049132211, 0.3369848813329424, 0.34218740463256836, 0.34236810888562885, 0.32889844690050396, 0.3413797446659633, 0.3560223664556231, 0.3314130646841867, 0.3445376924106053, 0.3346383401325771], "val_accuracy": [0.41333332657814026, 0.4346666634082794, 0.6633333563804626, 0.734000027179718, 0.706333339214325, 0.7383333444595337, 0.781000018119812, 0.7916666865348816, 0.7680000066757202, 0.7773333191871643, 0.8196666836738586, 0.8119999766349792, 0.8266666531562805, 0.8146666884422302, 0.8240000009536743, 0.809333324432373, 0.8243333101272583, 0.8389999866485596, 0.8423333168029785, 0.8343333601951599, 0.8320000171661377, 0.8353333473205566, 0.8456666469573975, 0.8640000224113464, 0.8586666584014893, 0.8493333458900452, 0.8676666617393494, 0.8519999980926514, 0.8473333120346069, 0.859666645526886, 0.8450000286102295, 0.8576666712760925]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 2, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [2, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.7988571524620056, "mapping_values": [1, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.square(grad)))), tf.math.add(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.1702618041861688, 1.9287409145031245, 1.4926483407705184, 1.2237340370110705, 0.9477546794019938, 0.8525342430027327, 0.8009378618142861, 0.7240222266730915, 0.6818598682901501, 0.6500265831330733, 0.6441177244687738, 0.5992990877445363, 0.6238771915797938, 0.5654719321246885, 0.5882721980565008, 0.5557545112769964], "accuracy": [0.26059964299201965, 0.38541802763938904, 0.4934619069099426, 0.5735041499137878, 0.6495839357376099, 0.6877558827400208, 0.6977941989898682, 0.7290979027748108, 0.7405890822410583, 0.7512878179550171, 0.7514199018478394, 0.7798177003860474, 0.7623828053474426, 0.7973847389221191, 0.7911768555641174, 0.7877426743507385], "val_loss": [1.7088372026171004, 1.2964050088609969, 0.9056964261191232, 0.6969100407191685, 0.7332705770220075, 0.576533385685512, 0.6357154164995465, 0.5181153672082084, 0.5039302791867938, 0.5027173416955131, 0.43993003027779715, 0.43612509965896606, 0.45168479851314, 0.49412052971976145, 0.4331660440989903, 0.44541026864733013], "val_accuracy": [0.4713333249092102, 0.4426666796207428, 0.6010000109672546, 0.6800000071525574, 0.6489999890327454, 0.7360000014305115, 0.7363333106040955, 0.7710000276565552, 0.7483333349227905, 0.7583333253860474, 0.8009999990463257, 0.796999990940094, 0.7976666688919067, 0.7630000114440918, 0.7996666431427002, 0.7910000085830688]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.7971428632736206, "mapping_values": [1, 13, 13, 8, 5, 1, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.square(grad)))), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.1763708735690095, 1.8518078036044394, 1.3774455469896323, 1.0070461527137016, 0.8481661070685864, 0.7550508017946842, 0.6966199539970839, 0.6623902164508858, 0.6442401818768727, 0.6444971829026902, 0.5962920886823735, 0.5994626898193057, 0.5784811649214181, 0.5263049128607925, 0.5470350091373286, 0.5153303788779292, 0.5241640767700337, 0.4965669694766865], "accuracy": [0.24105137586593628, 0.3829084634780884, 0.5285959839820862, 0.6238277554512024, 0.681547999382019, 0.7038700580596924, 0.7346453666687012, 0.7396644949913025, 0.7528728246688843, 0.7483819723129272, 0.7712323069572449, 0.7676661014556885, 0.7840443849563599, 0.8016114234924316, 0.789988100528717, 0.8087438941001892, 0.8026680946350098, 0.816008448600769], "val_loss": [1.864649977002825, 1.6620477948869978, 0.6875862053462437, 0.7506473234721592, 0.5964470250265939, 0.5604940141950335, 0.5182679550988334, 0.4983189276286534, 0.5499175957271031, 0.4773897784096854, 0.48797336646488737, 0.446890013558524, 0.41927839176995413, 0.4390515514782497, 0.4273664014680045, 0.40214622020721436, 0.41134183747427805, 0.43531074694224764], "val_accuracy": [0.2759999930858612, 0.4073333442211151, 0.6963333487510681, 0.6386666893959045, 0.7129999995231628, 0.7546666860580444, 0.746999979019165, 0.7583333253860474, 0.7363333106040955, 0.796999990940094, 0.7733333110809326, 0.7986666560173035, 0.8159999847412109, 0.7929999828338623, 0.8026666641235352, 0.8116666674613953, 0.8080000281333923, 0.7960000038146973]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 2, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [2, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.7882857322692871, "mapping_values": [1, 13, 13, 7, 6, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.negative(tf.math.add(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.1763717726378817, 1.8543063156703334, 1.4228523690167387, 1.0121616029925178, 0.8100698902748359, 0.7438897771322653, 0.7055739786536419, 0.6651306147856278, 0.6692854796717463, 0.6288598023936607, 0.6092284497347459, 0.6195034750023413, 0.5730777810341363, 0.5339225887102835, 0.5341965797838361, 0.5292470569127838, 0.5249781241002509, 0.49852261729385905, 0.48903088353297747], "accuracy": [0.24105137586593628, 0.38066306710243225, 0.5143309831619263, 0.6310923099517822, 0.6876237988471985, 0.7123233675956726, 0.7279091477394104, 0.7469290494918823, 0.739400327205658, 0.7555144429206848, 0.7606657147407532, 0.7626469135284424, 0.789459764957428, 0.7965922355651855, 0.7956677079200745, 0.8039889335632324, 0.7992339134216309, 0.8137630224227905, 0.8150838613510132], "val_loss": [1.864694595336914, 1.5805886813572474, 0.7370781217302594, 0.638248222214835, 0.5717862503869193, 0.5479098728724888, 0.5055682488850185, 0.5423406873430524, 0.5155022825513568, 0.47422919954572407, 0.5573216847011021, 0.434230523450034, 0.4396970272064209, 0.41283187695911955, 0.4087686538696289, 0.4088568942887442, 0.413850520338331, 0.4356825692313058, 0.4124332581247602], "val_accuracy": [0.2773333191871643, 0.45100000500679016, 0.6646666526794434, 0.6936666369438171, 0.7239999771118164, 0.762333333492279, 0.7663333415985107, 0.734666645526886, 0.7456666827201843, 0.7903333306312561, 0.7386666536331177, 0.8149999976158142, 0.7983333468437195, 0.8186666369438171, 0.8103333115577698, 0.8046666383743286, 0.8153333067893982, 0.8053333163261414, 0.8076666593551636]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 2, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 40, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.4608571529388428, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 3, 3, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.216113524870897, 11.295391260625003, 186.30241525851818, 14486146.135252014, NaN, NaN], "accuracy": [0.2945449650287628, 0.2740721106529236, 0.10791176557540894, 0.10949676483869553, 0.10276053100824356, 0.09998679161071777], "val_loss": [1.9371062687465124, 105.14569963727679, 2.1605454172406877, 1.798636295843023e+23, NaN, NaN], "val_accuracy": [0.4436666667461395, 0.1003333330154419, 0.09799999743700027, 0.09866666793823242, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 2, 2, 0, 2, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [0, 0, 0, 1, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [35, 80, 62, 19, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [5, 2, 1, 3], [6, 2], [76], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [0, 49, 44, 92]], "fitness": -0.11028571426868439, "mapping_values": [1, 14, 14, 8, 6, 4, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, alpha)), alpha))), tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3014339061067437, 2.301431013844694, 2.302509603971472, 2.3025834109442753, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0956280529499054, 0.10196803510189056, 0.1002509593963623, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.972480024610247, 1.9735969815935408, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10966666787862778, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 8, 0, 4, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [0, 0, 0, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 2, 0, 1, 1, 0, 1, 0, 3], [44, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 20, 9, 6, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.negative(alpha))))))))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))), tf.math.pow(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.negative(grad))))), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 3, 0, 4, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06617355346679688, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 2, 2, 3, 6, 5, 2, 6, 3, 3, 1, 9, 0, 0, 6, 5, 1, 3, 9, 5, 3, 7, 9], [2, 0, 2, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 9, 62, 57, 8, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [37, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 16, 11, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.math.negative(grad)))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [55727.478250307795, 1068798.3654404967, 4854467.014595166, 13544141.269317131, 28404494.85404834, 53137657.93897768], "accuracy": [0.10038304328918457, 0.10408136248588562, 0.10157178342342377, 0.09721305221319199, 0.1006472036242485, 0.09840179979801178], "val_loss": [209571.91517857142, 1660924.857142857, 5588851.857142857, 13228170.57142857, 25813717.14285714, 44580297.14285714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 2, 2, 0, 2, 5, 2, 3, 4, 4, 1, 9, 0, 6, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 2, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [65, 92, 16, 10, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [2, 2], [76], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 20, 11, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), alpha)))), tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030451638996796, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 9, 6, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [0, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 80, 62, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [4, 2], [76], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 6, 6, 5, 1, 0, 7, 3, 3, 0, 0, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.negative(tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030451638996796, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 2, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [2, 2], [76], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.304486118838646, 2.305052606641593, 2.304867266160055, 2.306058190266029, 2.3065592116526075, 2.311055057352056, 2.307748503578558, 2.3096352077635793, 2.3141273961579243], "accuracy": [0.09391097724437714, 0.09734513610601425, 0.09668471664190292, 0.09959053993225098, 0.09866596013307571, 0.09800554811954498, 0.09998679161071777, 0.09760929644107819, 0.09985470771789551], "val_loss": [1.9737505912780762, 1.975153582436698, 1.9762494904654366, 1.9768363407679967, 1.9761219705854143, 1.9778761182512556, 1.9853005409240723, 1.9811790330069405, 1.9759909766060966], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.1003333330154419, 0.10100000351667404, 0.1003333330154419, 0.09866666793823242, 0.09866666793823242, 0.1003333330154419, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 4, 2, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 36, 40, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [62, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 14, 9, 3, 6, 6, 5, 1, 1, 5, 2, 2, 0, 0, 4, 3, 1, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), alpha), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(alpha, grad), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.negative(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.negative(tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [105833000.43680727, 2062108858.9195614, 9406161099.149914, 26293792858.889977, 55200700527.17792, 103334594091.75432], "accuracy": [0.10038304328918457, 0.10408136248588562, 0.10157178342342377, 0.09708096832036972, 0.1006472036242485, 0.09840179979801178], "val_loss": [401931465.14285713, 3213255680.0, 10842301001.142857, 25697349046.857143, 50186529060.57143, 86718616137.14285], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 9, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 0, 2, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [2, 2], [76], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 6, 6, 5, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.negative(tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [10247600.634064911, 199387677.68379343, 909116709.1776515, 2540840252.9652624, 5333638099.839915, 9983806201.203539], "accuracy": [0.10038304328918457, 0.10408136248588562, 0.10157178342342377, 0.09708096832036972, 0.1006472036242485, 0.09840179979801178], "val_loss": [38884898.28571428, 310612114.28571427, 1047796041.1428572, 2483043108.571429, 4848978944.0, 8378198308.571428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 2, 0, 0, 5, 2, 0, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 2, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 92, 16, 57, 57, 39], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0], [7, 2, 1, 3], [1, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 8, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 1, 0, 1, 1, 0, 1, 0, 3], [48, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(grad))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 2, 2, 2, 0, 4, 2, 1, 4, 3, 5, 6, 0, 0, 4, 2, 0, 3, 9, 5, 3, 7, 9, 4, 6, 1, 3, 0, 5, 7, 9, 7, 9, 4, 9, 9, 5, 1, 8, 4, 1, 2, 3, 3], [0, 0, 0, 2, 1, 2, 0, 2, 3, 0, 0, 2, 1, 2, 2, 0, 0, 2, 2, 1, 2, 1, 2], [53, 92, 16, 57, 49, 39, 98, 45, 30, 18, 40, 55, 72, 59], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [2, 2], [76], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 1, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [37, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 67, 67, 44, 23, 14, 1, 1, 0, 1, 0, 7, 3, 3, 0, 0, 5, 2, 3, 2], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), grad)))))), tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), grad)), grad)))), alpha)), tf.math.multiply(grad, alpha))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 4, 4, 0, 5, 2, 3, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [90, 92, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 0, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0], [7, 2, 1, 3], [6, 2], [76], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [15, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 19, 10, 5, 1, 1, 0, 1, 0, 7, 3, 3, 0, 0, 4, 3, 1, 2], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.square(grad)), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(grad))))))))))), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.139483651118492, 11.43852469615964, 30.502871048181223, 62.83735006158819, 108.36580704011465, 177.48200244472767], "accuracy": [0.09576013684272766, 0.10394927859306335, 0.10302469879388809, 0.09642054885625839, 0.10051512718200684, 0.09840179979801178], "val_loss": [4.1801508494785855, 13.028965813773018, 29.319727216448104, 54.69827815464565, 91.11305454799107, 140.76122174944197], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]