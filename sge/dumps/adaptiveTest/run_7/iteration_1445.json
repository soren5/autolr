[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [2, 3, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [0, 2], [11], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.8217142820358276, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0096378648884152, 1.5195201239203575, 1.0736885314856255, 0.899879692701726, 0.7824884183796373, 0.7549398605692199, 0.7325902687182216, 0.6737172325383938, 0.6313310641622688, 0.6240066022700353, 0.6262708407398764, 0.5847810348105894, 0.5562895356215317, 0.5492453697713107, 0.5392472552994947, 0.5194622927794698, 0.5367646865313473, 0.4995822676137265, 0.5145994074954616, 0.4809851165830876, 0.44878339398223743, 0.46940567297092156, 0.4455014505776526, 0.44332587977977334, 0.43857470866853154, 0.4414861997782106, 0.420448584421798, 0.41935534018488324, 0.4167886801785356, 0.4036389300733777, 0.4119015703064623, 0.35916336798916687, 0.40006432043893575, 0.37685837235984204, 0.3704533092318399, 0.342759923880772, 0.3810675680133503, 0.3609716584614444, 0.3652800827364266, 0.355716461408502, 0.33849882348543303, 0.3386041385630543, 0.32085832358666255, 0.31754355035154436, 0.3155505416250311, 0.3192977246599206, 0.28936337304389265], "accuracy": [0.3131686747074127, 0.47391360998153687, 0.6118082404136658, 0.6675472259521484, 0.700700044631958, 0.7176066637039185, 0.7236824631690979, 0.7425703406333923, 0.7547219395637512, 0.7614582180976868, 0.7593448758125305, 0.7761194109916687, 0.7897239327430725, 0.7918372750282288, 0.7913089394569397, 0.8068947196006775, 0.7944789528846741, 0.8120459914207458, 0.809140145778656, 0.8189142942428589, 0.8341038227081299, 0.8290846943855286, 0.8354246616363525, 0.8313300609588623, 0.8401796221733093, 0.8356888294219971, 0.8426892161369324, 0.8433496356010437, 0.8412362933158875, 0.8500858545303345, 0.8470479249954224, 0.8684453964233398, 0.8499537706375122, 0.8588033318519592, 0.8613129258155823, 0.8745211958885193, 0.8602562546730042, 0.8672566413879395, 0.8622375130653381, 0.8668603897094727, 0.8761062026023865, 0.8742570281028748, 0.8831065893173218, 0.880729079246521, 0.8817857503890991, 0.878879964351654, 0.8951261639595032], "val_loss": [1.4054546356201172, 0.877718482698713, 0.7176451001848493, 0.6395512648991176, 0.5916463647569928, 0.6518373148781913, 0.5015849215643746, 0.4925974948065622, 0.502253498349871, 0.47829718249184744, 0.4787330627441406, 0.4545797279902867, 0.44275814294815063, 0.46087697574070524, 0.4718734196254185, 0.45220400605882916, 0.38620273556028095, 0.4129283257893154, 0.41930701051439556, 0.37810923371996197, 0.39833409445626394, 0.3767379011426653, 0.37344310113361906, 0.4388541749545506, 0.37032604217529297, 0.36056433405194965, 0.354288535458701, 0.32856532505580355, 0.3491372551236834, 0.3708679420607431, 0.34564738614218576, 0.39858188799449373, 0.3219178744724819, 0.3304754155022757, 0.32387243849890573, 0.34142192772456575, 0.3326150519507272, 0.36025739567620413, 0.30781236716679167, 0.3157942976270403, 0.31885374443871634, 0.302111770425524, 0.3528816785131182, 0.31010228395462036, 0.34787080117634367, 0.30120023659297396, 0.3115331786019461], "val_accuracy": [0.4116666615009308, 0.6076666712760925, 0.6700000166893005, 0.6916666626930237, 0.7250000238418579, 0.7059999704360962, 0.7680000066757202, 0.7743333578109741, 0.7806666493415833, 0.7789999842643738, 0.7829999923706055, 0.7916666865348816, 0.7929999828338623, 0.7806666493415833, 0.7910000085830688, 0.7923333048820496, 0.831333339214325, 0.8029999732971191, 0.8019999861717224, 0.8323333263397217, 0.8196666836738586, 0.8276666402816772, 0.8336666822433472, 0.7986666560173035, 0.8346666693687439, 0.8429999947547913, 0.8423333168029785, 0.8613333106040955, 0.8493333458900452, 0.8423333168029785, 0.8536666631698608, 0.8223333358764648, 0.8656666874885559, 0.862333357334137, 0.8686666488647461, 0.8569999933242798, 0.8600000143051147, 0.8336666822433472, 0.8723333477973938, 0.8706666827201843, 0.8636666536331177, 0.8733333349227905, 0.8576666712760925, 0.8733333349227905, 0.8479999899864197, 0.8730000257492065, 0.8633333444595337]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 3, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [0, 2], [11], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.817714273929596, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.00962576276008, 1.5128557326503638, 1.0825638600218297, 0.8649780191702535, 0.789775748743184, 0.762704257581842, 0.7339002481226152, 0.6805019741911127, 0.6284411818029196, 0.6316086616750407, 0.6280402469361038, 0.5863566435228926, 0.5617966318426508, 0.5455143932243773, 0.5414425378005738, 0.5128218499487732, 0.5261529074518546, 0.5234096541916139, 0.5086156746195197, 0.4818558954898125, 0.45403831471714756, 0.46862896841121243, 0.45362999419636335, 0.4377217532589829, 0.43130022481825875, 0.43854257278218167], "accuracy": [0.3129045069217682, 0.4752344489097595, 0.6111478209495544, 0.6684718132019043, 0.6996433734893799, 0.7140403985977173, 0.7238145470619202, 0.7391361594200134, 0.7565711140632629, 0.7560427784919739, 0.7552502751350403, 0.7773081660270691, 0.7881389260292053, 0.7924976944923401, 0.791969358921051, 0.8088759779930115, 0.7980451583862305, 0.8018755912780762, 0.8099326491355896, 0.817989706993103, 0.8297450542449951, 0.8274996876716614, 0.82683926820755, 0.8370096683502197, 0.8362171649932861, 0.8354246616363525], "val_loss": [1.404902560370309, 0.8998367445809501, 0.7089734247752598, 0.5905293226242065, 0.6277378456933158, 0.5709549869809832, 0.5019665105002267, 0.49348773275102886, 0.5063614164079938, 0.47393294743129183, 0.5225843191146851, 0.4755642924989973, 0.4467936243329729, 0.42045858928135466, 0.43848253999437603, 0.4349526677812849, 0.40016920225960867, 0.4238170215061733, 0.38654087271009174, 0.37383289848055157, 0.36357620784214567, 0.3691117082323347, 0.36635117871420725, 0.35548814705439974, 0.3710497532572065, 0.3534625768661499], "val_accuracy": [0.41200000047683716, 0.5806666612625122, 0.6729999780654907, 0.7179999947547913, 0.7053333520889282, 0.737333357334137, 0.7776666879653931, 0.7680000066757202, 0.7789999842643738, 0.7836666703224182, 0.7603333592414856, 0.7756666541099548, 0.793666660785675, 0.8176666498184204, 0.8033333420753479, 0.7973333597183228, 0.8213333487510681, 0.8009999990463257, 0.8323333263397217, 0.8410000205039978, 0.8486666679382324, 0.8330000042915344, 0.8370000123977661, 0.8446666598320007, 0.8323333263397217, 0.8483333587646484]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 1, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 5, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.7071641832058693, 466.3928423946906, 73641.09121720628, 628347.6957634394, 839008.936872606, 983516.831231013, 1674979.4114053627], "accuracy": [0.09232597798109055, 0.10117553919553757, 0.09998679161071777, 0.10077928751707077, 0.09932637959718704, 0.09813763201236725, 0.09998679161071777], "val_loss": [4.500713620867048, 2544.3497488839284, 470184.96428571426, 642063.5535714285, 725832.7321428572, 919748.3214285715, 1593862.5714285714], "val_accuracy": [0.08799999952316284, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 6, 1, 9, 2, 3, 2, 2, 2, 4, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 2, 1, 2, 0, 2, 2, 2, 2, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [32, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [19, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, alpha))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [3, 3, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [17], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 5, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.subtract(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 3, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [0, 2], [11], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 5, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 3, 1, 2, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), grad)))))))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1651559573.993367, 19789564518.092983, 2.609927451779042, 2.73957422280025, 2.9409636982900276, 3.207444053457681], "accuracy": [0.09800554811954498, 0.1022322028875351, 0.10540219396352768, 0.09813763201236725, 0.1006472036242485, 0.09470347315073013], "val_loss": [4772913737.142858, 2.1059658186776296, 2.186112676348005, 2.330944197518485, 2.525223595755441, 2.773838996887207], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 6, 1, 1, 2, 3, 2, 6, 2, 2, 6, 6, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 2, 1, 2, 0, 2, 2, 2, 2, 0, 1, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 9, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [19, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), grad), tf.math.divide_no_nan(tf.math.subtract(grad, alpha), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, 1.1685569175214754e+29, 1.1726667242021366e+29, 3.237903168051155e+30, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.10091137140989304, 0.09721305221319199, 0.09959053993225098, 0.10434553027153015, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.7870468315896695e+26, 1.868248484462873e+17, 7.591318589848055e+24, 3.528859717647233e+32, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09799999743700027, 0.10400000214576721, 0.10400000214576721, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 3, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [51.711965847355486, 2056091543.2876415, 8.875100252151026e+16, 4.052774030011267e+24, 1.703812682061908e+32, NaN, NaN], "accuracy": [0.09179764986038208, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10355303436517715, 0.09998679161071777], "val_loss": [4130.177176339285, 177810309120.0, 7.654150298277586e+18, 3.294860660097088e+26, 1.4183295139053745e+34, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 1, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 9, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 33, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), grad))), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [1.3493547507946746e+24, 416.71875748126075, 498.9957107425035, 581.3241137463135, 663.4568581732902, 745.9360642186907], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [330.027099609375, 400.6759469168527, 471.47640555245533, 542.1462925502232, 613.0447474888393, 683.7879115513393], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [3, 3, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 1, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [1, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [0, 2], [11], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 5, 11, 11, 7, 4, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.subtract(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, grad)))), beta)), grad)), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3027047444926656, 2.3053334885741963, 2.317339355415593, 2.3278620995393187, 2.318731579908432, 2.3270268308928994, 2.335779571104925, 2.3225549168952657, 2.3435293276863263, 2.3248343666420794, 2.339582249724933, 2.333346773368524, 2.3369890581646677], "accuracy": [0.09140139818191528, 0.09998679161071777, 0.09840179979801178, 0.09893012791872025, 0.10553427785634995, 0.09787346422672272, 0.09576013684272766, 0.10368511080741882, 0.09747721254825592, 0.10011887550354004, 0.09853387624025345, 0.09747721254825592, 0.09840179979801178], "val_loss": [1.973642008645194, 1.990797860281808, 1.986739158630371, 1.9879813875470842, 2.0028489657810757, 1.988182885306222, 2.0074308259146556, 1.9942161696297782, 1.999342918395996, 2.0034286635262624, 1.9859247888837541, 2.0116659573146274, 1.9966848237173898], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09799999743700027, 0.09966666996479034, 0.09866666793823242, 0.09799999743700027, 0.09966666996479034, 0.10100000351667404, 0.1003333330154419, 0.09799999743700027, 0.09966666996479034, 0.09866666793823242, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 3, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [17], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.07599999755620956, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4061372547479682, 3.0074525378903285, 5.25484371714352, 180115.7807693693, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15057456493377686, 0.10962884873151779, 0.09800554811954498, 0.09840179979801178, 0.10949676483869553, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2017219407217845, 2.9157044546944753, 10.572885513305664, 160448755419.42856, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10166666656732559, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 3, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [0, 2], [11], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.07457143068313599, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.343377250800626, 7374.575428388941, 485006674.39994717, 33568393902516.867, 2.1309562021330775e+18, 1.344605089400472e+23], "accuracy": [0.10276053100824356, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.562803949628558, 218640.36160714287, 14330177828.571428, 939142745086829.8, 6.1547658942010474e+19, 4.0335873764235985e+24], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 1, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [4, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [7, 2], [11], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3030648426435816, 2.303085733036308, 2.3021044143517537, 2.30203622660664, 2.303028831203553, 2.301758765575987], "accuracy": [0.0870426595211029, 0.09206181764602661, 0.0878351628780365, 0.09272222965955734, 0.0882314071059227, 0.08955223858356476], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 3, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3030648426435816, 2.303085733036308, 2.3021044143517537, 2.30203622660664, 2.303028831203553, 2.301758765575987], "accuracy": [0.0870426595211029, 0.09206181764602661, 0.0878351628780365, 0.09272222965955734, 0.0882314071059227, 0.08955223858356476], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 3, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [17], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3030648426435816, 2.303085733036308, 2.3021044143517537, 2.30203622660664, 2.303028831203553, 2.301758765575987], "accuracy": [0.0870426595211029, 0.09206181764602661, 0.0878351628780365, 0.09272222965955734, 0.0882314071059227, 0.08955223858356476], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [9, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 3, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [58], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3030648426435816, 2.303085733036308, 2.3021044143517537, 2.30203622660664, 2.303028831203553, 2.301758765575987], "accuracy": [0.0870426595211029, 0.09206181764602661, 0.0878351628780365, 0.09272222965955734, 0.0882314071059227, 0.08955223858356476], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 3, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [53, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [1, 2], [11], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 1, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.math.add(tf.math.negative(tf.math.add(beta, beta)), grad)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3030648426435816, 2.303085733036308, 2.3021044143517537, 2.30203622660664, 2.303028831203553, 2.301758765575987], "accuracy": [0.0870426595211029, 0.09206181764602661, 0.0878351628780365, 0.09272222965955734, 0.0882314071059227, 0.08955223858356476], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 6, 1, 9, 2, 2, 9, 6, 2, 2, 6, 1, 8, 8, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 2, 2, 1, 2, 0, 2, 2, 1, 2, 0, 1, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [7, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [3, 2], [11], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [3, 0, 3, 2, 3, 3, 1, 0, 3], [19, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))))), grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3030648426435816, 2.303085733036308, 2.3021044143517537, 2.30203622660664, 2.303028831203553, 2.301758765575987], "accuracy": [0.0870426595211029, 0.09206181764602661, 0.0878351628780365, 0.09272222965955734, 0.0882314071059227, 0.08955223858356476], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 1, 2, 6, 2, 2, 0, 6, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [0, 3, 1, 1, 2, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [12, 89, 55, 88, 1, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 3, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [10, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [0, 2], [11], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [2, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 25, 25, 15, 10, 6, 10, 10, 5, 5, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(grad, tf.math.add(tf.math.negative(tf.math.add(beta, beta)), grad)), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3030648426435816, 2.303085733036308, 2.3021044143517537, 2.30203622660664, 2.3030288941856103, 2.301758765575987], "accuracy": [0.0870426595211029, 0.09206181764602661, 0.0878351628780365, 0.09272222965955734, 0.0882314071059227, 0.08955223858356476], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709815979003906, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 6, 9, 2, 8, 2, 6, 2, 2, 0, 3, 8, 9, 4, 9, 6, 0, 4, 4, 5, 2, 1, 9, 6, 9, 2, 9, 2, 8, 0, 1, 5, 0, 9, 9, 6, 8, 1, 4, 5, 3, 9, 1, 6, 8, 4, 3, 1, 6, 5, 9, 5], [1, 3, 1, 1, 0, 0, 2, 0, 2, 0, 0, 2, 2, 1, 2, 1, 2, 0, 3, 1, 0, 3, 0, 2, 1, 2, 2, 2, 3, 0, 1, 0, 3, 0], [49, 89, 53, 80, 47, 17, 33, 75, 29, 39, 88, 45, 77, 73, 79, 8], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 2, 2, 0, 5, 9, 0, 2, 5, 1, 9, 6, 4, 3, 1, 4, 0, 6, 8, 8, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 2, 3, 0, 0, 3, 0, 1, 0, 2, 3, 2, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [92, 89, 99, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0], [9, 0, 1, 3, 1, 0, 9], [0, 2], [11], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 4, 3, 2, 8, 1, 3, 9, 2, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 0, 3, 2, 3, 3, 1, 0, 3], [48, 80, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3030648426435816, 2.303085733036308, 2.3021044143517537, 2.30203622660664, 2.303028831203553, 2.301758765575987], "accuracy": [0.0870426595211029, 0.09206181764602661, 0.0878351628780365, 0.09272222965955734, 0.0882314071059227, 0.08955223858356476], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]