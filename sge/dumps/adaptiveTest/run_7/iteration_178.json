[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 4, 1, 7, 3, 0, 5, 2, 2, 0, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 0, 3, 1, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.8088571429252625, "mapping_values": [1, 2, 2, 1, 1, 0, 17, 17, 10, 7, 1, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, alpha)), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.999577957326395, 1.3485299396854995, 1.0772873192982289, 0.8643028762330783, 0.8446993524718672, 0.7686428175295632, 0.766875610367623, 0.6892019888240238, 0.6827794897274461, 0.6606223322160807, 0.6539716760023568, 0.6214460179302214, 0.6081480874345759, 0.5987632608038953, 0.6007678682903934, 0.5734111999145919, 0.5707516178179726, 0.5580436611975409, 0.5537343891840633, 0.5460604417908225, 0.5330522433877889, 0.5212027675140929, 0.512316034989917, 0.5041279164500256, 0.5122684750417126, 0.49267799704538723, 0.48122573211413205, 0.46418072849516034, 0.4674823703688401, 0.46446957265097844, 0.4475522297539684, 0.45524528197892006, 0.44821379802261974, 0.45914087750498866, 0.4404808327726889, 0.4381942772169344, 0.4131410696668364, 0.43046102472158426, 0.41834788361182695, 0.40734091912042103, 0.42104333511212594, 0.3992363284757156, 0.3915443666040181, 0.39886474262580046, 0.38353433607512966, 0.3826576890789239, 0.38566734649958373, 0.36982267240428685, 0.3889810713904802, 0.3571262389574982, 0.3603196116588718, 0.3764943546386616, 0.3636503756959535, 0.37510501009488006, 0.3426371881864515, 0.34671625071008993, 0.34025588696186554, 0.34424977234215737, 0.3506618855950886, 0.34442404451434483, 0.3287547424272256, 0.3303771299370181, 0.3282820754527668, 0.324748475880529, 0.3299308547829089, 0.3219398066801024, 0.32229136043315426, 0.3120386978977187], "accuracy": [0.33641526103019714, 0.5452384352684021, 0.6127327680587769, 0.6741513609886169, 0.677189290523529, 0.7063795924186707, 0.7185312509536743, 0.7407211661338806, 0.743891179561615, 0.7544577717781067, 0.7544577717781067, 0.7655527591705322, 0.7671377658843994, 0.7717606425285339, 0.7736098170280457, 0.7833839654922485, 0.7876105904579163, 0.7951393723487854, 0.7902522683143616, 0.7874785661697388, 0.805177628993988, 0.8004226684570312, 0.81112140417099, 0.8095363974571228, 0.8055738806724548, 0.8157442808151245, 0.8204993009567261, 0.8280280232429504, 0.8276317715644836, 0.8310658931732178, 0.8342359066009521, 0.8286884427070618, 0.8325188159942627, 0.8278959393501282, 0.8356888294219971, 0.8399154543876648, 0.8449346423149109, 0.8418967127799988, 0.8473120927810669, 0.8486329317092896, 0.8467837572097778, 0.8533879518508911, 0.8585391640663147, 0.8518029451370239, 0.8560295701026917, 0.8597279191017151, 0.8569541573524475, 0.8668603897094727, 0.8555012345314026, 0.8659358024597168, 0.867520809173584, 0.8607845902442932, 0.8696341514587402, 0.8618412613868713, 0.8733324408531189, 0.8722757697105408, 0.8766345381736755, 0.872407853603363, 0.8728041052818298, 0.8746532797813416, 0.8804649114608765, 0.8800686597824097, 0.8787478804588318, 0.8796724081039429, 0.8767666220664978, 0.8794082403182983, 0.8803328275680542, 0.8849557638168335], "val_loss": [1.3566250801086426, 0.864073497908456, 0.6869798047201974, 0.6836440733500889, 0.6022322859082904, 0.6970334393637521, 0.5546112060546875, 0.52418623651777, 0.5059564454214913, 0.550313915525164, 0.48328040327344624, 0.4706279379980905, 0.4657231398991176, 0.4626512016568865, 0.4489032030105591, 0.46182732922690256, 0.46803615774427143, 0.42524962765829905, 0.46192160674503874, 0.47862844807761057, 0.4515526805605207, 0.40727585554122925, 0.4450965438570295, 0.3903145449502127, 0.4496318783078875, 0.39811272280556814, 0.3895438994680132, 0.3733131544930594, 0.3878815599850246, 0.3607523611613682, 0.41798289333071026, 0.3677227667399815, 0.3662452357155936, 0.3491214854376657, 0.3459998794964382, 0.34905323811939787, 0.3786165543964931, 0.34712445735931396, 0.3417955126081194, 0.35116855587278095, 0.34909495285579134, 0.32971344675336567, 0.33148842198508127, 0.3293374180793762, 0.33958531277520315, 0.40717579637254986, 0.3287921633039202, 0.3252541082245963, 0.31415620871952604, 0.31918872254235403, 0.30906318766730173, 0.31428256205150057, 0.3172748259135655, 0.3191151874405997, 0.3199829374040876, 0.3112268192427499, 0.3138481548854283, 0.3112200839178903, 0.3162950703075954, 0.31197153670447214, 0.31300186259405954, 0.31796189716884066, 0.3076065863881792, 0.31262710264750887, 0.32933143207005094, 0.3084631987980434, 0.3271076764379229, 0.3294147849082947], "val_accuracy": [0.5063333511352539, 0.612666666507721, 0.6936666369438171, 0.6650000214576721, 0.7276666760444641, 0.687666654586792, 0.746666669845581, 0.7680000066757202, 0.778333306312561, 0.7363333106040955, 0.7739999890327454, 0.7963333129882812, 0.7916666865348816, 0.7900000214576721, 0.8026666641235352, 0.8069999814033508, 0.7886666655540466, 0.8143333196640015, 0.7896666526794434, 0.7976666688919067, 0.7940000295639038, 0.8220000267028809, 0.8109999895095825, 0.8346666693687439, 0.793666660785675, 0.8230000138282776, 0.8336666822433472, 0.8376666903495789, 0.8303333520889282, 0.8433333039283752, 0.8106666803359985, 0.8403333425521851, 0.8379999995231628, 0.8519999980926514, 0.8506666421890259, 0.8510000109672546, 0.8296666741371155, 0.8506666421890259, 0.8569999933242798, 0.8526666760444641, 0.8516666889190674, 0.856333315372467, 0.859000027179718, 0.859333336353302, 0.8496666550636292, 0.8146666884422302, 0.8656666874885559, 0.8579999804496765, 0.8683333396911621, 0.8640000224113464, 0.8679999709129333, 0.8683333396911621, 0.8693333268165588, 0.8676666617393494, 0.8673333525657654, 0.8709999918937683, 0.8696666955947876, 0.8733333349227905, 0.8633333444595337, 0.8706666827201843, 0.8703333139419556, 0.8706666827201843, 0.8759999871253967, 0.8693333268165588, 0.8663333058357239, 0.8693333268165588, 0.8616666793823242, 0.8656666874885559]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 4, 1, 7, 3, 0, 5, 2, 2, 0, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 0, 0, 1, 1, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.7942857146263123, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0002899773919807, 1.3428205627854064, 1.069074556867224, 0.8671960212834491, 0.8457261659308289, 0.7672706042865264, 0.7607737818587458, 0.6895519579012696, 0.6765528025644142, 0.6805250486126507, 0.6488369861062901, 0.6185014755450944, 0.6075989976692603, 0.6160787232658095, 0.5801803756856081, 0.5669160327340129, 0.5771532976915493, 0.5583014336276001, 0.5491345735935251, 0.5429787934416903, 0.5324989011447978, 0.5039374843060679, 0.5100513994811847], "accuracy": [0.33562275767326355, 0.5481442213058472, 0.6120724081993103, 0.6754721999168396, 0.6782459616661072, 0.7071720957756042, 0.7172104120254517, 0.7433628439903259, 0.7478536367416382, 0.7449478507041931, 0.7523444890975952, 0.7651565074920654, 0.7672698497772217, 0.7670056819915771, 0.780610203742981, 0.7865539789199829, 0.7819310426712036, 0.7964601516723633, 0.7893276810646057, 0.791441023349762, 0.8009510040283203, 0.8161405324935913, 0.8096684813499451], "val_loss": [1.3638685090201241, 0.8368410553250994, 0.6744651453835624, 0.6709797212055751, 0.6025059734072004, 0.6720802102770124, 0.5606227942875454, 0.5317797660827637, 0.504947134426662, 0.5067949295043945, 0.4856735978807722, 0.4934214694159372, 0.4568408046449934, 0.47809088230133057, 0.43668289695467266, 0.4518076011112758, 0.5034376042229789, 0.4243409974234445, 0.4550166300364903, 0.46978279522487093, 0.43763153893607004, 0.4136207699775696, 0.46042770998818533], "val_accuracy": [0.503333330154419, 0.6003333330154419, 0.6949999928474426, 0.6693333387374878, 0.7260000109672546, 0.6940000057220459, 0.7429999709129333, 0.7713333368301392, 0.7746666669845581, 0.7703333497047424, 0.7896666526794434, 0.7760000228881836, 0.7963333129882812, 0.7739999890327454, 0.8096666932106018, 0.8023333549499512, 0.7609999775886536, 0.8133333325386047, 0.7896666526794434, 0.7919999957084656, 0.8036666512489319, 0.8063333630561829, 0.8083333373069763]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 4, 1, 7, 3, 0, 5, 2, 2, 0, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 1, 0, 3, 1, 1, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [19, 9, 44]], "fitness": -0.6985714435577393, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 6, 5, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.math.negative(alpha)), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2981928774488916, 2.2957644141062046, 2.2899939597889007, 2.2865893160898483, 2.2830035970542, 2.2774421999624863, 2.273467654958928, 2.2703536400122966, 2.2620812730231163, 2.2584567008914727, 2.2539587189665937, 2.2480664987605654, 2.2438790228829455, 2.237737698813849, 2.235036183216033, 2.2250761304942768, 2.2219396682384542, 2.2123752964517585, 2.2082293342526844, 2.200749868572569, 2.1929247171147277, 2.182785597932085, 2.177031760202533, 2.1678800400867595, 2.1605605556350485, 2.149778648909797, 2.1382347582322163, 2.1253927337211658, 2.1156451632522746, 2.1008959981696385, 2.086912326620019, 2.0736205107374373, 2.063677776034608, 2.0466674247422256, 2.0290860319181663, 2.018033581103757, 2.001939692832318, 1.980984971161453, 1.9653077062724713, 1.9448564605879164, 1.9248053444500974, 1.90325841554451, 1.8871896624202977, 1.8618139863848733, 1.8403899711845195, 1.8164706351404034, 1.7945264358845496, 1.7726595758872183, 1.74946252447251, 1.733162808049829, 1.710445522443257, 1.6909082688833068, 1.654949181162686, 1.6400564312383783, 1.6195328141468044, 1.5901048768229566, 1.5777911485509, 1.5527558314754601, 1.527178266123695, 1.5136010421344301, 1.4896105597787892, 1.4755334757448517, 1.4663158261371312, 1.4446996420665172, 1.4249225532877887, 1.4161270974791202, 1.3953510919157004, 1.38272227906847, 1.3551258186480908, 1.352545425057679, 1.324336861039921, 1.328612137747762, 1.3049060031013906, 1.3017838579583965, 1.2939847759236245, 1.262979652966333, 1.2548733350072065, 1.2548040122781778, 1.23847962198886, 1.2309003470674906, 1.220734191891886, 1.2193578574415274, 1.2069615481977118, 1.1866235196740007, 1.1814216605865282, 1.1725102596909, 1.1657987877110512, 1.1590250513383882, 1.1533785652191633, 1.1490112790940477, 1.1373800553382427, 1.1320342190151342, 1.1263036510302264, 1.115904722782473, 1.0994218493244825, 1.095272300927048, 1.1059435779046012, 1.0879293404014718, 1.0756264551047086, 1.084049386937841], "accuracy": [0.10315678268671036, 0.10460969805717468, 0.120459645986557, 0.12719587981700897, 0.13961167633533478, 0.1534803807735443, 0.16682076454162598, 0.17778365314006805, 0.19455818831920624, 0.20314356684684753, 0.2211068570613861, 0.23339056968688965, 0.24395720660686493, 0.24897634983062744, 0.254920095205307, 0.27618545293807983, 0.27420419454574585, 0.29282790422439575, 0.2989037036895752, 0.3077532649040222, 0.3066965937614441, 0.32267865538597107, 0.3311319649219513, 0.3343019485473633, 0.34103816747665405, 0.3481706380844116, 0.3541143834590912, 0.3689076602458954, 0.37300223112106323, 0.3819838762283325, 0.38964468240737915, 0.39730551838874817, 0.39624884724617004, 0.3941355049610138, 0.40285298228263855, 0.41170254349708557, 0.4099854826927185, 0.42147669196128845, 0.42689210176467896, 0.4325716495513916, 0.43785497546195984, 0.4410249590873718, 0.44366663694381714, 0.4447232782840729, 0.454629510641098, 0.4551578462123871, 0.4695548713207245, 0.46572446823120117, 0.472989022731781, 0.47166821360588074, 0.47668737173080444, 0.483819842338562, 0.48910316824913025, 0.4979526996612549, 0.49729230999946594, 0.5054814219474792, 0.49953770637512207, 0.5155197381973267, 0.5202747583389282, 0.5209351181983948, 0.5221238732337952, 0.5256901383399963, 0.5280676484107971, 0.5312376022338867, 0.5378417372703552, 0.531369686126709, 0.5418042540550232, 0.5468233823776245, 0.5585787892341614, 0.5514463186264038, 0.5688812732696533, 0.5511821508407593, 0.5602958798408508, 0.5654470920562744, 0.5672962665557861, 0.5818253755569458, 0.5803724527359009, 0.574560821056366, 0.5753533244132996, 0.5857878923416138, 0.5851274728775024, 0.5869766473770142, 0.5885615944862366, 0.591731607913971, 0.6021661758422852, 0.5984678268432617, 0.5956941246986389, 0.5975432395935059, 0.6033549308776855, 0.6000528335571289, 0.6110157370567322, 0.6172236204147339, 0.611940324306488, 0.6186765432357788, 0.6225069165229797, 0.6194690465927124, 0.6170915365219116, 0.6280544400215149, 0.6269977688789368, 0.6240919232368469], "val_loss": [1.9667880194527763, 1.9626430783952986, 1.958533423287528, 1.9543960435049874, 1.9502846172877721, 1.9461452620370048, 1.9419589042663574, 1.9377470016479492, 1.9333675248282296, 1.9288483347211565, 1.9242213794163294, 1.9194282123020716, 1.9144148145403181, 1.909195831843785, 1.9037951741899763, 1.8980228560311454, 1.892042977469308, 1.8856962748936243, 1.8790952137538366, 1.8721823692321777, 1.8648380552019392, 1.8570184707641602, 1.8488782473972865, 1.8403185435703822, 1.8312979425702776, 1.8217900821140833, 1.8117177145821708, 1.8010841778346471, 1.7899481909615653, 1.7781338010515486, 1.7656688008989607, 1.7525267601013184, 1.7389309065682548, 1.7246510641915458, 1.7096827370779855, 1.694249085017613, 1.6779955114637102, 1.6610065187726701, 1.6435855797358923, 1.6252294608524867, 1.6063082899366106, 1.5866383825029646, 1.5665457589285714, 1.5458108016422816, 1.5245419910975866, 1.5028484548841203, 1.4808239255632674, 1.4586962631770544, 1.436260666166033, 1.4140931878771101, 1.3916301727294922, 1.369274411882673, 1.346351112638201, 1.3241947378431047, 1.302332775933402, 1.2804113115583147, 1.2590312276567732, 1.2380863257816859, 1.2173668997628349, 1.1975577558789934, 1.1780510289328439, 1.1593893936702184, 1.1414488043103899, 1.1238694872174944, 1.1069201060703822, 1.0906834261757987, 1.074946403503418, 1.059854234967913, 1.0450408118111747, 1.0310074261256628, 1.0169988359723772, 1.0040993009294783, 0.9913201332092285, 0.9794171537671771, 0.9679628099714007, 0.9563216481889997, 0.9453127724783761, 0.9352659157344273, 0.9252472945622036, 0.9158483913966587, 0.9065492493765694, 0.897683961050851, 0.8892343384878976, 0.8808923448835101, 0.8728392124176025, 0.8649356365203857, 0.857367890221732, 0.8501473324639457, 0.8433079378945487, 0.8368828807558332, 0.8306750229426793, 0.8246635028294155, 0.8185639722006661, 0.8127008846827916, 0.8069058316094535, 0.8014626843588692, 0.7965483495167324, 0.7913004841123309, 0.7860903569630214, 0.7814335312162127], "val_accuracy": [0.06433333456516266, 0.10333333164453506, 0.14166666567325592, 0.1823333352804184, 0.21766667068004608, 0.24966666102409363, 0.2783333361148834, 0.29899999499320984, 0.31833332777023315, 0.3330000042915344, 0.34566667675971985, 0.3566666543483734, 0.3656666576862335, 0.3720000088214874, 0.3799999952316284, 0.3869999945163727, 0.3956666588783264, 0.4036666750907898, 0.41200000047683716, 0.4180000126361847, 0.4246666729450226, 0.43033334612846375, 0.43533334136009216, 0.44333332777023315, 0.4493333399295807, 0.45366665720939636, 0.4580000042915344, 0.46433332562446594, 0.47066667675971985, 0.4736666679382324, 0.4779999852180481, 0.48533332347869873, 0.4909999966621399, 0.49933332204818726, 0.5023333430290222, 0.5086666941642761, 0.5173333287239075, 0.5199999809265137, 0.5239999890327454, 0.5306666493415833, 0.5356666445732117, 0.5416666865348816, 0.5446666479110718, 0.5479999780654907, 0.5533333420753479, 0.5556666851043701, 0.5590000152587891, 0.5643333196640015, 0.5676666498184204, 0.5743333101272583, 0.5793333053588867, 0.5873333215713501, 0.5926666855812073, 0.5960000157356262, 0.5986666679382324, 0.6029999852180481, 0.6056666374206543, 0.609666645526886, 0.6143333315849304, 0.6196666955947876, 0.6266666650772095, 0.6343333125114441, 0.637666642665863, 0.6430000066757202, 0.6446666717529297, 0.6470000147819519, 0.6520000100135803, 0.6536666750907898, 0.6586666703224182, 0.6613333225250244, 0.6636666655540466, 0.6639999747276306, 0.6679999828338623, 0.67166668176651, 0.6713333129882812, 0.6723333597183228, 0.6740000247955322, 0.6746666431427002, 0.6753333210945129, 0.6763333082199097, 0.6803333163261414, 0.6803333163261414, 0.6816666722297668, 0.6819999814033508, 0.684333324432373, 0.684333324432373, 0.684333324432373, 0.6850000023841858, 0.6859999895095825, 0.6859999895095825, 0.6859999895095825, 0.6886666417121887, 0.6903333067893982, 0.6916666626930237, 0.6923333406448364, 0.6946666836738586, 0.6940000057220459, 0.6936666369438171, 0.6959999799728394, 0.6959999799728394]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 0, 4, 7, 3, 0, 3, 2, 2, 8, 3, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 0, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [3, 48, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [0, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [25, 0, 44]], "fitness": -0.6748571395874023, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2824631911605153, 2.163617710726467, 1.767594180653801, 1.387692748122542, 1.2267352752303875, 0.9396996379150548, 0.902930401138673, 0.806756531297885, 0.8039720802101807, 0.7843965836614272, 0.7414763563061277, 0.7251857807607605, 0.7167915938678686, 0.7019419223247282, 0.6762807800895455, 0.6502393839649315, 0.6176285916126761, 0.6242356029924794, 0.590940601798002, 0.6000612074783087, 0.5667086772757467, 0.5710610940692258, 0.5485960068782685, 0.5372954088746281, 0.5254215700137318, 0.5099728225858661, 0.5087883734329895, 0.5036519175042817, 0.5060575922970538, 0.4822290387797302, 0.48204077118344674, 0.475762958638247, 0.4735947113034905, 0.4555618635588759, 0.4551180093484611, 0.4388623350347746, 0.4397074081177851, 0.4371079477761888, 0.43504935487654106, 0.43544806446523365, 0.42556557617860147, 0.41582076063938367, 0.40151720161309506, 0.4001680508131963, 0.40198635058695253, 0.3941918309724342, 0.3847236808745175, 0.37739499905058704, 0.3727566939082994, 0.3728287370252792], "accuracy": [0.14291374385356903, 0.3319244384765625, 0.4497424364089966, 0.5328226089477539, 0.6042794585227966, 0.6532822847366333, 0.6869634389877319, 0.703209638595581, 0.7003037929534912, 0.7083608508110046, 0.7199841737747192, 0.724210798740387, 0.7347774505615234, 0.743891179561615, 0.7428345084190369, 0.7479857206344604, 0.7664773464202881, 0.7695152759552002, 0.7736098170280457, 0.7771760821342468, 0.7882710099220276, 0.7839123010635376, 0.7952714562416077, 0.7940827012062073, 0.7950072884559631, 0.8038568496704102, 0.8072909712791443, 0.8161405324935913, 0.8092722296714783, 0.8169330358505249, 0.8173292875289917, 0.8166688680648804, 0.8173292875289917, 0.8280280232429504, 0.8333113193511963, 0.8318583965301514, 0.8273676037788391, 0.8315942287445068, 0.8335754871368408, 0.8325188159942627, 0.8400475382804871, 0.8437458872795105, 0.845859169960022, 0.848368763923645, 0.845859169960022, 0.8518029451370239, 0.8506141901016235, 0.854708731174469, 0.852859616279602, 0.856689989566803], "val_loss": [1.9112659863063268, 1.6920312132154192, 1.0941475800105505, 0.800819856779916, 0.6760858127049038, 0.6885818072727748, 0.6402875695909772, 0.5775653464453561, 0.5740376881190709, 0.5483947651726859, 0.544728296143668, 0.5528349024908883, 0.5400476285389492, 0.49619812624795095, 0.46961586815970285, 0.4632383755275181, 0.46526358808789936, 0.4590497187205723, 0.4439496908869062, 0.4277178304536002, 0.4362877437046596, 0.42637466532843454, 0.41416016646793913, 0.4031230892453875, 0.3966267023767744, 0.4063338211604527, 0.40894397667476107, 0.4000127060072763, 0.3871252281325204, 0.3963744044303894, 0.38945346219199045, 0.397923333304269, 0.3849291375705174, 0.39133812699999126, 0.37541925055640085, 0.3763452342578343, 0.37241704974855694, 0.3692149349621364, 0.3588050263268607, 0.3572100060326712, 0.3632145438875471, 0.36227627311434063, 0.36422846146992277, 0.3686981626919338, 0.3495444825717381, 0.3476972154208592, 0.35727999040058683, 0.3624214955738613, 0.3664242795535496, 0.3678082994052342], "val_accuracy": [0.35466668009757996, 0.4490000009536743, 0.6153333187103271, 0.6679999828338623, 0.7103333473205566, 0.721666693687439, 0.7213333249092102, 0.7413333058357239, 0.7336666584014893, 0.7576666474342346, 0.7546666860580444, 0.7596666812896729, 0.762333333492279, 0.7680000066757202, 0.7903333306312561, 0.7900000214576721, 0.784333348274231, 0.7923333048820496, 0.7993333339691162, 0.8140000104904175, 0.8096666932106018, 0.8096666932106018, 0.8090000152587891, 0.8216666579246521, 0.82833331823349, 0.8266666531562805, 0.8316666483879089, 0.828000009059906, 0.8356666564941406, 0.831333339214325, 0.8413333296775818, 0.8306666612625122, 0.8349999785423279, 0.8446666598320007, 0.8493333458900452, 0.8383333086967468, 0.8426666855812073, 0.8503333330154419, 0.843666672706604, 0.8416666388511658, 0.8473333120346069, 0.8546666502952576, 0.8610000014305115, 0.8583333492279053, 0.862333357334137, 0.8546666502952576, 0.8523333072662354, 0.8510000109672546, 0.8486666679382324, 0.8496666550636292]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 4, 1, 7, 3, 0, 5, 2, 2, 0, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 0, 1, 1, 1, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [3, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.5274285674095154, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0582062004579607, 1.5522868237270577, 0.9274296287957468, 0.8606634128520423, 0.8044818623458642, 0.7434382295769125, 0.7685595327648016, 0.7677440880831632, 0.7629938950360396, 0.8647412109400193, 0.90284665374708], "accuracy": [0.36824727058410645, 0.5408796668052673, 0.6713775992393494, 0.6868313550949097, 0.7046625018119812, 0.7250033020973206, 0.7230220437049866, 0.7214370369911194, 0.7214370369911194, 0.6997754573822021, 0.6964733600616455], "val_loss": [1.7253071240016393, 0.7198956864220756, 0.5823301076889038, 0.5717475754874093, 0.5014776161738804, 0.5338477577481952, 0.5290035860879081, 0.5507025037493024, 0.5936329705374581, 0.6090433767863682, 0.5944561277117048], "val_accuracy": [0.5483333468437195, 0.6946666836738586, 0.7276666760444641, 0.7409999966621399, 0.765333354473114, 0.7733333110809326, 0.7590000033378601, 0.7673333287239075, 0.7513333559036255, 0.7509999871253967, 0.7269999980926514]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 4, 1, 3, 3, 0, 5, 2, 2, 0, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 0, 2, 3, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 62, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [2, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.3774285614490509, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, grad)), tf.math.add(beta, tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), beta)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0573044449441293, 1.5475993992362465, 0.9392159635900049, 0.8906973779335344, 0.8469916256411578, 0.7688410890856596, 0.7662748390531433, 0.7910958850829357, 0.7947049959775653, 0.8618214976486828, 0.8976505415519278, 1.168294051855216, 1.1659932804145454], "accuracy": [0.368511438369751, 0.5408796668052673, 0.6659622192382812, 0.6736230254173279, 0.6910579800605774, 0.7102100253105164, 0.7217012047767639, 0.7230220437049866, 0.7153612375259399, 0.6989829540252686, 0.6761326193809509, 0.6273940205574036, 0.6173557043075562], "val_loss": [1.712165219443185, 0.7213821240833828, 0.6057802779333932, 0.5476996387754168, 0.5465371097837176, 0.5246695450374058, 0.5170793533325195, 0.5281757456915719, 0.5590398481913975, 0.5588797330856323, 0.6266418695449829, 0.8046857629503522, 0.7416195528847831], "val_accuracy": [0.5483333468437195, 0.6943333148956299, 0.7316666841506958, 0.7586666941642761, 0.7676666378974915, 0.768666684627533, 0.7646666765213013, 0.7839999794960022, 0.7599999904632568, 0.7573333382606506, 0.7016666531562805, 0.624666690826416, 0.6746666431427002]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 9, 1, 7, 3, 0, 3, 2, 2, 8, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 0, 0, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [2, 3, 0, 3, 1, 1], [43, 0, 44]], "fitness": -0.2182857096195221, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, sigma)", "other_info": {"loss": [2.0488392406088756, 2.2371512799923683, 4.516439220956005, 6.565103551210953e+31, 2.4141564387151546, 2.308116871714513], "accuracy": [0.30563995242118835, 0.19455818831920624, 0.19191652536392212, 0.09972262382507324, 0.09774138033390045, 0.0952318087220192], "val_loss": [1.9170043127877372, 1.9535054479326521, 463.66282435825894, 2.178384440285819, 1.9865283284868513, 1.9740159170968192], "val_accuracy": [0.21400000154972076, 0.15700000524520874, 0.10100000351667404, 0.09799999743700027, 0.09866666793823242, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 4, 1, 7, 3, 0, 5, 1, 2, 0, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 0, 1, 2, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [1, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.13742856681346893, "mapping_values": [1, 2, 2, 1, 1, 0, 17, 17, 10, 7, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.negative(alpha), tf.math.add(beta, beta))), alpha)))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.2316764310177497, 3.1406788877319145, 2.3047547217892963, 2.3031955631952936, 2.302917870831543, 2.3031031446465726, 2.303026177171136], "accuracy": [0.22216351330280304, 0.09972262382507324, 0.09998679161071777, 0.09721305221319199, 0.09998679161071777, 0.0944393053650856, 0.09879804402589798], "val_loss": [2.6966419219970703, 1.9761335509163993, 1.9738897596086775, 1.9736332212175642, 1.973684651511056, 1.9736761365618025, 1.9737439155578613], "val_accuracy": [0.10133333504199982, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.10400000214576721, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [4, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 9, 1, 7, 3, 0, 3, 2, 8, 3, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [5, 3, 0, 0, 1, 3, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [25, 0, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(alpha)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 9, 1, 7, 3, 0, 3, 2, 2, 8, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 0, 0, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [2, 0, 0, 3, 1, 1], [43, 0, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 18, 18, 11, 7, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha)))))), tf.math.add(beta, alpha)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 4, 1, 7, 9, 0, 5, 2, 2, 0, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 0, 3, 3, 1, 1, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08149518072605133, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 9, 1, 4, 3, 0, 3, 2, 8, 3, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 0, 0, 3, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 9, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [0, 0, 0, 3, 1, 1], [43, 9, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2999753115309733, 2.3023933923759357, 2.3025848910226294, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10513802617788315, 0.10447761416435242, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973043509892055, 1.9736442565917969, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09233333170413971, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [9, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 9, 1, 7, 3, 0, 3, 2, 8, 3, 9, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 0, 0, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [66, 0, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 17, 17, 11, 6, 4, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), alpha))))), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [43409082685.703804, 6478111827723.733, 108981122337277.9, 783976830391973.5, 3417559584243526.0, 1.1370066533396704e+16], "accuracy": [0.10117553919553757, 0.09826971590518951, 0.1006472036242485, 0.09628847241401672, 0.10038304328918457, 0.10038304328918457], "val_loss": [361183828845.7143, 19471247418514.285, 208988123393462.84, 1139381118922166.8, 4267746560236397.5, 1.2584750246002688e+16], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 6, 1, 2, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 1, 2, 1, 3, 3, 0, 3, 0, 0], [68, 53, 10, 46, 53], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 9, 1, 7, 3, 0, 3, 2, 2, 8, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 0, 0, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [97, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [2, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [59, 0, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 20, 11, 5, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.negative(tf.math.negative(grad))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [977.4030306383667, 4672.230081272289, 9338.938623736956, 14987.524442052734, 21578.601373920636, 29124.417916639148], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2552.1954520089284, 6233.0537109375, 10725.595703125, 16037.98716517857, 22172.710379464286, 29129.9921875], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 0, 1, 7, 3, 0, 3, 2, 2, 8, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 0, 0, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [43, 0, 44]], "fitness": -0.09857142716646194, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.300687490972656, 2.3050685310880223, 2.3065038481566096, 2.31343174198001, 2.3191898509952544, 2.3255508634093385, 2.3356373208687997, 2.3514614134826175, 2.356495645587565, 2.3690680416111207, 2.4033825877414734, 2.4268937105862314, 2.448685270274682, 2.481766144676042, 2.5301574811077607, 2.5450515258329545, 2.6025236142923993, 2.624543540371628, 2.6973963176821516, 2.7407061821906447, 2.8014397247356273, 2.8479423365494076, 2.8910973731789054, 2.978326547509565], "accuracy": [0.09734513610601425, 0.08572183549404144, 0.08638224750757217, 0.08400475233793259, 0.0952318087220192, 0.09113723784685135, 0.0944393053650856, 0.08915598690509796, 0.10130762308835983, 0.09998679161071777, 0.09959053993225098, 0.09919429570436478, 0.1018359512090683, 0.09457138925790787, 0.09919429570436478, 0.1002509593963623, 0.10011887550354004, 0.09985470771789551, 0.0948355570435524, 0.0952318087220192, 0.0956280529499054, 0.10302469879388809, 0.09813763201236725, 0.10196803510189056], "val_loss": [1.9719685826982771, 1.9732164655412947, 1.974466323852539, 1.975839069911412, 1.9776852471487862, 1.9805663653782435, 1.9848803792681013, 1.9906511306762695, 1.9977880886622839, 2.0063158443995883, 2.016268730163574, 2.027730873652867, 2.040756498064314, 2.055387496948242, 2.071660723005022, 2.089630195072719, 2.109257084982736, 2.130623068128313, 2.1535724912370955, 2.1781512669154575, 2.204230717250279, 2.2317770549229214, 2.2607346943446567, 2.2907662391662598], "val_accuracy": [0.02666666731238365, 0.028333334252238274, 0.03700000047683716, 0.055666666477918625, 0.07800000160932541, 0.08866667002439499, 0.09066666662693024, 0.09066666662693024, 0.09233333170413971, 0.09333333373069763, 0.0949999988079071, 0.09566666930913925, 0.09700000286102295, 0.09833333641290665, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.09866666793823242, 0.0989999994635582, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [7, 9, 1, 7, 3, 0, 3, 2, 2, 8, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 0, 0, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [0, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [4, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 2, 0, 3, 1, 1], [53, 0, 44]], "fitness": -0.07999999821186066, "mapping_values": [1, 2, 2, 1, 1, 0, 18, 18, 11, 7, 3, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha)))), tf.math.add(beta, alpha)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.2230644049094637, 2.678308073933634, 2.3039046734268354, 2.303045147902237, 2.3029249041953723, 2.3030679758434927, 2.303022908906202], "accuracy": [0.22216351330280304, 0.1002509593963623, 0.09998679161071777, 0.09509972482919693, 0.09655263274908066, 0.0952318087220192, 0.09708096832036972], "val_loss": [2.6328553472246443, 1.9748103278023856, 1.973691463470459, 1.9736264092581612, 1.9736896923610143, 1.9736751828874861, 1.973745550428118], "val_accuracy": [0.10133333504199982, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.09966666996479034, 0.09966666996479034, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 9, 1, 7, 3, 0, 3, 2, 2, 8, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 0, 0, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [71, 9, 44]], "fitness": -0.07114285975694656, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.2997327679420083, 2.300910590488866, 2.2993161761450525, 2.3001623704149705, 2.3003997069623225, 2.2998328126731753, 2.299902910317696, 2.300461201919084, 2.298259001366451, 2.298745709797017, 2.2993316237543238, 2.298582933802788, 2.2995752339759257, 2.2991848463993882, 2.3010760631543645], "accuracy": [0.09879804402589798, 0.09113723784685135, 0.09655263274908066, 0.09126931428909302, 0.09893012791872025, 0.09391097724437714, 0.09747721254825592, 0.09826971590518951, 0.09760929644107819, 0.10276053100824356, 0.10170386731624603, 0.10421344637870789, 0.10157178342342377, 0.09760929644107819, 0.09694888442754745], "val_loss": [1.9703594616481237, 1.9698991775512695, 1.9698668888636999, 1.9698035376412528, 1.9698047637939453, 1.9699478830610002, 1.9699739047459193, 1.969909395490374, 1.9699177742004395, 1.9699603489467077, 1.9700804437909807, 1.9703069414411272, 1.9705371175493513, 1.9707585062299455, 1.9709204265049525], "val_accuracy": [0.043666668236255646, 0.047333333641290665, 0.05433333292603493, 0.06066666543483734, 0.06333333253860474, 0.06433333456516266, 0.06700000166893005, 0.07100000232458115, 0.07233333587646484, 0.07433333247900009, 0.0729999989271164, 0.07000000029802322, 0.07100000232458115, 0.06966666877269745, 0.06866666674613953]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 9, 1, 7, 3, 0, 3, 2, 2, 8, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 0, 0, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [2, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [5, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [40, 0, 44]], "fitness": -0.07114285975694656, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.2997327364509794, 2.300910446543373, 2.299316738511845, 2.300163337315519, 2.300403674548533, 2.2998347606452354, 2.299906041250253, 2.3004631362870196, 2.2982569499778522, 2.298742898246474, 2.2993282904604153, 2.2985774143071867, 2.299567312218683, 2.299179290846559, 2.3010701296147165], "accuracy": [0.09879804402589798, 0.09113723784685135, 0.09655263274908066, 0.09126931428909302, 0.09879804402589798, 0.09377889335155487, 0.09734513610601425, 0.09813763201236725, 0.09760929644107819, 0.10236428678035736, 0.1018359512090683, 0.10434553027153015, 0.10157178342342377, 0.09760929644107819, 0.09721305221319199], "val_loss": [1.9703594616481237, 1.9698991775512695, 1.9698669569832938, 1.969808782849993, 1.9698081016540527, 1.9699481555393763, 1.9699764251708984, 1.9699070794241769, 1.9699157306126185, 1.9699556486947196, 1.970076084136963, 1.970299312046596, 1.9705299649919783, 1.9707508087158203, 1.9709138870239258], "val_accuracy": [0.043666668236255646, 0.047333333641290665, 0.05433333292603493, 0.060333333909511566, 0.06333333253860474, 0.06433333456516266, 0.06733333319425583, 0.07100000232458115, 0.07233333587646484, 0.07400000095367432, 0.07333333045244217, 0.070333331823349, 0.07066666334867477, 0.06966666877269745, 0.06866666674613953]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 9, 1, 7, 3, 0, 3, 2, 2, 8, 5, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 0, 0, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [21, 0, 44]], "fitness": -0.05228571593761444, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.300037344732399, 2.3020837564887846, 2.3006657227989926, 2.3017106371438576, 2.302284714820095, 2.3011583350731666, 2.30151976280681, 2.3025883573031525, 2.299164991557653, 2.3001425444505093, 2.3005922322795374, 2.2995497080092857, 2.30074655044474, 2.2997144669621075, 2.3024778845382325, 2.2992263646441335, 2.3014367948732892, 2.299544287993845, 2.3013529282172973, 2.3001114609471056, 2.300691811730754, 2.29900259162929, 2.300883097183183, 2.300461184473054, 2.301816307904777, 2.3008857627728077, 2.300048267395741, 2.298269378038335, 2.3001968916680253, 2.29861880636738, 2.2979728455682706, 2.2987379322686863, 2.300445154468696, 2.299876359286577, 2.2980734601296047, 2.2990066637972073, 2.3006290732247563, 2.298811402161517, 2.2990347796805293, 2.29914627543152, 2.297463951644928, 2.2975413420133903, 2.300086131075102, 2.298130959756559, 2.2983160110874703, 2.298428120157738, 2.2975423340437797, 2.29736856012265, 2.2971509194503197, 2.2984079510985174, 2.299127983867437, 2.2977613659267804, 2.296453614292238, 2.2967001936454907, 2.2975713647729794, 2.295778153390145, 2.298342185107992, 2.2973009953015766, 2.2953357023255005, 2.2962499296565997, 2.295661963397454], "accuracy": [0.09774138033390045, 0.08809932321310043, 0.09377889335155487, 0.08955223858356476, 0.08889182657003403, 0.08994849026203156, 0.09179764986038208, 0.08928807079792023, 0.09496764093637466, 0.09787346422672272, 0.09721305221319199, 0.09457138925790787, 0.09351472556591034, 0.09021265059709549, 0.09060890227556229, 0.09813763201236725, 0.09377889335155487, 0.09721305221319199, 0.09060890227556229, 0.09708096832036972, 0.09655263274908066, 0.09655263274908066, 0.09734513610601425, 0.0948355570435524, 0.09140139818191528, 0.09509972482919693, 0.08955223858356476, 0.09391097724437714, 0.09576013684272766, 0.09615638852119446, 0.1022322028875351, 0.09879804402589798, 0.09549596905708313, 0.09642054885625839, 0.09919429570436478, 0.10011887550354004, 0.09760929644107819, 0.10117553919553757, 0.0944393053650856, 0.09615638852119446, 0.09932637959718704, 0.09470347315073013, 0.09879804402589798, 0.09774138033390045, 0.09985470771789551, 0.10077928751707077, 0.10447761416435242, 0.10527011007070541, 0.09985470771789551, 0.1002509593963623, 0.09932637959718704, 0.10500594228506088, 0.10896842926740646, 0.09893012791872025, 0.09734513610601425, 0.1014397069811821, 0.09945846349000931, 0.1026284471154213, 0.10342095047235489, 0.10249637067317963, 0.11108175665140152], "val_loss": [1.9709041459219796, 1.9708263533455985, 1.9707489013671875, 1.9706694058009557, 1.9705912726266044, 1.9705117770603724, 1.9704323496137346, 1.970353058406285, 1.9702723366873605, 1.970191410609654, 1.9701100076947893, 1.970029626573835, 1.969947338104248, 1.969864981515067, 1.9697819437299455, 1.9696972710745675, 1.9696147782461983, 1.9695295606340681, 1.9694455010550362, 1.9693610327584403, 1.9692755426679338, 1.9691895757402693, 1.9691034044538225, 1.9690161432538713, 1.96892854145595, 1.9688401903424944, 1.968752179827009, 1.9686630793980189, 1.9685726165771484, 1.9684820856366838, 1.968391282217843, 1.968299729483468, 1.968207563672747, 1.9681157384599959, 1.9680234364100866, 1.9679317474365234, 1.9678384235927038, 1.9677454403468542, 1.967651639665876, 1.967557430267334, 1.9674624034336634, 1.9673664229256767, 1.9672695568629675, 1.9671735082353865, 1.9670764378138952, 1.9669783455984933, 1.9668805258614677, 1.9667820249285017, 1.9666845457894462, 1.9665867260524206, 1.9664886338370187, 1.9663900647844588, 1.9662891796657018, 1.9661897250584193, 1.9660882949829102, 1.9659878185817175, 1.9658875465393066, 1.9657859802246094, 1.9656850951058524, 1.9655837331499373, 1.9654805319649833], "val_accuracy": [0.036666665226221085, 0.036666665226221085, 0.036666665226221085, 0.03700000047683716, 0.03700000047683716, 0.036666665226221085, 0.035999998450279236, 0.03700000047683716, 0.03733333200216293, 0.03700000047683716, 0.03733333200216293, 0.03799999877810478, 0.038333334028720856, 0.038333334028720856, 0.03866666555404663, 0.039000000804662704, 0.03933333232998848, 0.03999999910593033, 0.03999999910593033, 0.04066666588187218, 0.04100000113248825, 0.04066666588187218, 0.04100000113248825, 0.04066666588187218, 0.04233333468437195, 0.04333333298563957, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.044333335012197495, 0.04500000178813934, 0.045666664838790894, 0.045666664838790894, 0.04633333161473274, 0.04699999839067459, 0.04633333161473274, 0.04633333161473274, 0.046666666865348816, 0.04699999839067459, 0.047333333641290665, 0.047333333641290665, 0.047333333641290665, 0.04766666516661644, 0.047333333641290665, 0.04800000041723251, 0.04833333194255829, 0.04899999871850014, 0.04899999871850014, 0.050333332270383835, 0.050333332270383835, 0.050333332270383835, 0.050333332270383835, 0.050999999046325684, 0.050999999046325684, 0.05166666582226753, 0.052666667848825455, 0.052000001072883606, 0.05166666582226753, 0.05133333429694176, 0.05166666582226753, 0.052000001072883606]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 0, 4, 7, 3, 0, 3, 2, 2, 8, 3, 8, 4, 1, 3, 8, 6, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 1, 0, 0, 1, 1, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [24, 16, 27, 94, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 1, 0, 3, 1, 5, 5, 0, 7, 5], [2, 0, 0, 3, 1, 1], [36, 9, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.300070590346859, 2.3021947629951516, 2.300854702352328, 2.3019725825131263, 2.3026022896900815, 2.301583694696836], "accuracy": [0.09774138033390045, 0.08809932321310043, 0.09325055778026581, 0.08915598690509796, 0.08849557489156723, 0.08915598690509796], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]