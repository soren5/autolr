[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.8414285778999329, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 3, 2, 1, 1, 1, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.4203439118477648, 1.9134291812271695, 1.4380218101105182, 1.2513228192415693, 1.0822863887565923, 0.9543377652915871, 0.8868190853776178, 0.8401316330889826, 0.7803117021310126, 0.8201200862554999, 0.7645107038410631, 0.6903969307443989, 0.7001623329453701, 0.707083399183069, 0.6701167823379979, 0.628830841243889, 0.6294423581634011, 0.5932861100948719, 0.5825269005128878, 0.5713960780301949, 0.5699100706240662, 0.5547505693822379, 0.5400324099650551, 0.542807049613351, 0.548037740509067, 0.5337060307939968, 0.49663281906802087, 0.5080076522594744, 0.4726596478938175, 0.4919901018475875, 0.5045781828204261, 0.455474115731993, 0.47075434198563426, 0.4600952051027875, 0.4698526187422348, 0.4373642622778964, 0.4488805191013964, 0.44095609256494095, 0.4150848031602972, 0.42430987386513913, 0.42142474418696696, 0.41413700834493344, 0.41667994680091014, 0.38910027098079414, 0.41817057571233524, 0.4250521442484248, 0.38814477500284444, 0.3800061664380071, 0.3803057798722385, 0.3753265518797954, 0.3632366292709058, 0.3731110173130804, 0.34791114363829695, 0.36794305761744395, 0.36940109696307627, 0.3553601684012606, 0.33972828468280053, 0.33556337006072234, 0.33466066736759936, 0.32958830831435376, 0.3154340843640424, 0.3462989724283882, 0.32569398882839073, 0.33043105380488835, 0.3188799363691982, 0.3170802556426061, 0.30842206946075584, 0.3099958899982885, 0.2967935597159686, 0.2982447088756707, 0.3113843266832641, 0.2891069004887115, 0.29301737589197485, 0.28377450452882536, 0.276472753687085, 0.29377057524074446, 0.2736157001603974, 0.27526672800707386, 0.2716186310888801, 0.2884050666136497, 0.2861886931810365, 0.26161945719193663, 0.272439794281549, 0.2593723150126891], "accuracy": [0.2417117953300476, 0.4065513014793396, 0.5182934999465942, 0.5609562993049622, 0.6071853041648865, 0.6584334969520569, 0.6676793098449707, 0.6836613416671753, 0.7102100253105164, 0.6979262828826904, 0.7084929347038269, 0.7423061728477478, 0.7364945411682129, 0.733588695526123, 0.7506273984909058, 0.7619865536689758, 0.7572315335273743, 0.7753269076347351, 0.7796856164932251, 0.7836481332778931, 0.7800818681716919, 0.7897239327430725, 0.7960638999938965, 0.7969884872436523, 0.791969358921051, 0.798309326171875, 0.8131026029586792, 0.8152159452438354, 0.8235371708869934, 0.8168009519577026, 0.8129705190658569, 0.8338396549224854, 0.8248580098152161, 0.8272355198860168, 0.8224804997444153, 0.8333113193511963, 0.8308017253875732, 0.8347642421722412, 0.8479725122451782, 0.8424250483512878, 0.8417646288871765, 0.8438779711723328, 0.8459912538528442, 0.8569541573524475, 0.8444063067436218, 0.842028796672821, 0.8529917001724243, 0.854708731174469, 0.8569541573524475, 0.8599920868873596, 0.8605204224586487, 0.8625016212463379, 0.871879518032074, 0.8626337051391602, 0.863029956817627, 0.8625016212463379, 0.8726720213890076, 0.8708229064941406, 0.871879518032074, 0.8722757697105408, 0.8813894987106323, 0.8702945709228516, 0.8778232932090759, 0.8734645247459412, 0.8799365758895874, 0.8766345381736755, 0.8817857503890991, 0.8782195448875427, 0.8902390599250793, 0.8894465565681458, 0.8820499181747437, 0.8924844861030579, 0.8891823887825012, 0.8972394466400146, 0.900409460067749, 0.8878615498542786, 0.8934090733528137, 0.8963148593902588, 0.8993527889251709, 0.8893144726753235, 0.8889182209968567, 0.9017302989959717, 0.8953903317451477, 0.9010698795318604], "val_loss": [1.8717122077941895, 1.3145644324166434, 0.9438677174704415, 0.7206758090427944, 0.8019731725965228, 0.6459278379167829, 0.6490931170327323, 0.5975333622523716, 0.7156174864087786, 0.5754185914993286, 0.5104729107448033, 0.4944766248975481, 0.5892389331545148, 0.5290007080350604, 0.4656270572117397, 0.4821662902832031, 0.44769578320639475, 0.44039519344057354, 0.43758058547973633, 0.4796253613063267, 0.4163535407611302, 0.4101690224238804, 0.45229130131857737, 0.4850872755050659, 0.4082157441547939, 0.41282487767083303, 0.400208796773638, 0.40217621837343487, 0.37343751532690866, 0.42786324875695364, 0.38662855114255634, 0.3587396911212376, 0.3951953053474426, 0.3599997077669416, 0.35100622688020977, 0.3424649919782366, 0.36571567399161203, 0.348698581968035, 0.40486899444035124, 0.35305817638124737, 0.34268432004111155, 0.3400980234146118, 0.334583512374333, 0.34309329305376324, 0.33786026920591083, 0.3574158549308777, 0.3269739491598947, 0.35928633383342196, 0.3671229141099112, 0.3231335367475237, 0.3392207452229091, 0.34005716017314364, 0.32468840905598234, 0.33171106236321585, 0.30695668288639616, 0.3280150294303894, 0.31803561959947857, 0.33028789928981234, 0.3314953531537737, 0.30792440686907085, 0.33271985394614084, 0.29913944005966187, 0.33983681883130756, 0.327952470098223, 0.32415114981787546, 0.32145598956516813, 0.3447604179382324, 0.3075615848813738, 0.3124928133828299, 0.35274491139820646, 0.3104026573044913, 0.31005698442459106, 0.38106493438993183, 0.3295073168618338, 0.30797931126185824, 0.3076628531728472, 0.31218278408050537, 0.3083503416606358, 0.29444452694484163, 0.38432949781417847, 0.3114216923713684, 0.3620694024222238, 0.2986451642853873, 0.3070704426084246], "val_accuracy": [0.2916666567325592, 0.4690000116825104, 0.5720000267028809, 0.6823333501815796, 0.6553333401679993, 0.7163333296775818, 0.7076666951179504, 0.7416666746139526, 0.70333331823349, 0.734333336353302, 0.7603333592414856, 0.7743333578109741, 0.7386666536331177, 0.765333354473114, 0.7799999713897705, 0.7773333191871643, 0.7993333339691162, 0.8106666803359985, 0.7933333516120911, 0.7473333477973938, 0.8080000281333923, 0.8143333196640015, 0.7863333225250244, 0.8013333082199097, 0.8199999928474426, 0.8159999847412109, 0.831333339214325, 0.8103333115577698, 0.8410000205039978, 0.8046666383743286, 0.8353333473205566, 0.843999981880188, 0.8240000009536743, 0.8396666646003723, 0.8463333249092102, 0.8510000109672546, 0.8420000076293945, 0.8476666808128357, 0.8256666660308838, 0.8533333539962769, 0.8553333282470703, 0.8546666502952576, 0.8569999933242798, 0.8503333330154419, 0.856333315372467, 0.8473333120346069, 0.859666645526886, 0.8393333554267883, 0.8450000286102295, 0.8629999756813049, 0.8550000190734863, 0.856333315372467, 0.8560000061988831, 0.8576666712760925, 0.8653333187103271, 0.8566666841506958, 0.8676666617393494, 0.8650000095367432, 0.862666666507721, 0.8643333315849304, 0.862333357334137, 0.8690000176429749, 0.8523333072662354, 0.8603333234786987, 0.8653333187103271, 0.8709999918937683, 0.8569999933242798, 0.8723333477973938, 0.871999979019165, 0.8553333282470703, 0.871999979019165, 0.8743333220481873, 0.8536666631698608, 0.8690000176429749, 0.875333309173584, 0.8723333477973938, 0.8723333477973938, 0.875, 0.8766666650772095, 0.8389999866485596, 0.8726666569709778, 0.8606666922569275, 0.8766666650772095, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.831428587436676, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 9, 4, 3, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.4205585083768133, 1.919905854175277, 1.4054084606237416, 1.2169851154903804, 1.0734872649673615, 0.910806305664185, 0.8609051570806049, 0.8369676523425277, 0.7821572697583034, 0.7542202250517559, 0.7271466726529962, 0.6885416154312877, 0.6646641380656838, 0.6560850347730667, 0.6447948883427227, 0.6297598710984066, 0.6243964459256505, 0.5979487911789818, 0.5948621280409673, 0.5856783369182359, 0.5455166877788277, 0.5860775573819526, 0.5431174326881426, 0.552736616421212, 0.5346423111744781, 0.5264294278021769, 0.5082561292936143, 0.5137596406311233, 0.47880361722507936, 0.4762728377387445, 0.4851826888821176, 0.45616512623099037, 0.4733829341386965, 0.45343308392658743, 0.4564013807780833, 0.4534685753080209, 0.4385628841926614, 0.4466451746778812, 0.4200232629652556, 0.43750039294505744, 0.4251537339530837, 0.4126941345198091, 0.41251206579870947, 0.4059527337496008, 0.4085657946256646, 0.40937141801907545, 0.3954513353198322, 0.3843278154099008, 0.39570334455309103, 0.37525391268487684, 0.3719487205283548, 0.363040930366535, 0.36971048175257276, 0.3583383394380397, 0.366340195179269, 0.3544942943049365, 0.3426389189530767, 0.3412102302421967, 0.3561771481682076, 0.3371570140670524], "accuracy": [0.2417117953300476, 0.4033813178539276, 0.5300488471984863, 0.5845991373062134, 0.6152423620223999, 0.6639809608459473, 0.6851142644882202, 0.6831330060958862, 0.7094175219535828, 0.719852089881897, 0.7180029153823853, 0.7341170310974121, 0.7453441023826599, 0.752212405204773, 0.7623828053474426, 0.7625148296356201, 0.7601373791694641, 0.7688548564910889, 0.7737419009208679, 0.7741381525993347, 0.7938185334205627, 0.78113853931427, 0.7946110367774963, 0.7943468689918518, 0.7991018295288086, 0.8021397590637207, 0.8049134612083435, 0.8109893202781677, 0.8186501264572144, 0.819970965385437, 0.8164047002792358, 0.8323867321014404, 0.8183859586715698, 0.828292191028595, 0.8280280232429504, 0.8269713521003723, 0.8389908671379089, 0.8379341959953308, 0.8441421389579773, 0.8370096683502197, 0.8417646288871765, 0.8486329317092896, 0.8455950617790222, 0.8437458872795105, 0.8470479249954224, 0.8466516733169556, 0.8508783578872681, 0.8553691506385803, 0.8525954484939575, 0.8605204224586487, 0.8597279191017151, 0.8661999702453613, 0.8595958352088928, 0.8683133125305176, 0.8642187118530273, 0.8660678863525391, 0.8687095642089844, 0.8717474341392517, 0.8679170608520508, 0.871879518032074], "val_loss": [1.8718269893101283, 1.256772552217756, 0.9563724313463483, 0.6868605273110526, 0.7634496177945819, 0.6184099742344448, 0.7385311807904925, 0.6028282472065517, 0.678233129637582, 0.5634690693446568, 0.5011595487594604, 0.5258674791881016, 0.5455612965992519, 0.4863522733960833, 0.49262237548828125, 0.4799324614661081, 0.4418701103755406, 0.44037026166915894, 0.5180584532873971, 0.4265568086079189, 0.4337137256349836, 0.4144431012017386, 0.5236006123679025, 0.42146044969558716, 0.435843825340271, 0.4391319325992039, 0.3953368663787842, 0.40703660249710083, 0.4023066248212542, 0.3812087433678763, 0.37766043628965107, 0.370760304587228, 0.38873874289648874, 0.36783210720334736, 0.3696338449205671, 0.35244581529072355, 0.4071186525481088, 0.33775973320007324, 0.4223761558532715, 0.34663606541497366, 0.3367678352764675, 0.34210377080099924, 0.3398454019001552, 0.3861779144832066, 0.33578385625566753, 0.34252950123378206, 0.33842852285930086, 0.3959515520504543, 0.3582180993897574, 0.33159152950559345, 0.33230461393083843, 0.33564363207135883, 0.32824028389794485, 0.33000798736299786, 0.3166442598615374, 0.3230523552213396, 0.3283526045935495, 0.3295061077390398, 0.3226873108318874, 0.3281643050057547], "val_accuracy": [0.2930000126361847, 0.4806666672229767, 0.5820000171661377, 0.7120000123977661, 0.6570000052452087, 0.7106666564941406, 0.6819999814033508, 0.7353333234786987, 0.7053333520889282, 0.7400000095367432, 0.7633333206176758, 0.7663333415985107, 0.7509999871253967, 0.7763333320617676, 0.784333348274231, 0.7879999876022339, 0.8043333292007446, 0.8046666383743286, 0.7506666779518127, 0.800000011920929, 0.8009999990463257, 0.8159999847412109, 0.7580000162124634, 0.8196666836738586, 0.7886666655540466, 0.7979999780654907, 0.8343333601951599, 0.8243333101272583, 0.8176666498184204, 0.8296666741371155, 0.8410000205039978, 0.8383333086967468, 0.8240000009536743, 0.8423333168029785, 0.8383333086967468, 0.8403333425521851, 0.8220000267028809, 0.8553333282470703, 0.8116666674613953, 0.8533333539962769, 0.8569999933242798, 0.8576666712760925, 0.8560000061988831, 0.8286666870117188, 0.8569999933242798, 0.8543333411216736, 0.8583333492279053, 0.8236666917800903, 0.847000002861023, 0.8619999885559082, 0.8550000190734863, 0.8579999804496765, 0.8606666922569275, 0.8579999804496765, 0.8669999837875366, 0.8583333492279053, 0.8619999885559082, 0.862333357334137, 0.8616666793823242, 0.859333336353302]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 5, 2, 8, 4, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.771142840385437, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.square(beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3897814475754706, 1.930715448584586, 1.551754043921346, 1.1894967262188456, 1.0104684763659482, 1.003413569177729, 0.8592037409839219, 0.8120678788981717, 0.7611078660895307, 0.7506705144802341, 0.7063499959767565, 0.6908539543456059, 0.6797554680164606, 0.7086441563876581, 0.6583593295014467], "accuracy": [0.2930920720100403, 0.40866464376449585, 0.48474442958831787, 0.5720512270927429, 0.6342623233795166, 0.632941484451294, 0.6740192770957947, 0.6889446377754211, 0.7156254053115845, 0.7181349992752075, 0.7321357727050781, 0.7384757399559021, 0.7397965788841248, 0.7376832365989685, 0.7436270117759705], "val_loss": [1.4515583515167236, 1.4873970917293005, 0.98768264906747, 0.8438908883503505, 0.7187238080160958, 0.6487502200262887, 0.5727496487753732, 0.5679646049227033, 0.5719653197697231, 0.5267756836754935, 0.6149785007749285, 0.5416415759495327, 0.5932230268205915, 0.5778519936970302, 0.5384484188897269], "val_accuracy": [0.5910000205039978, 0.5483333468437195, 0.590666651725769, 0.6386666893959045, 0.6736666560173035, 0.7003333568572998, 0.7450000047683716, 0.750333309173584, 0.7279999852180481, 0.7723333239555359, 0.7236666679382324, 0.7236666679382324, 0.734000027179718, 0.7226666808128357, 0.7393333315849304]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.7680000066757202, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.sqrt(beta), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.38954151478174, 1.9360632082065334, 1.553917400179727, 1.456443470372437, 1.0882914823044119, 0.952736709017433, 0.8376838368211267, 0.8161855708370277, 0.7323487436750924, 0.7447072661800029, 0.6780589433425548, 0.6919527964159923, 0.6640031919849705, 0.6581272189611803, 0.6324039772674471], "accuracy": [0.29322415590286255, 0.4057588279247284, 0.48329150676727295, 0.5151234865188599, 0.5993924140930176, 0.6567164063453674, 0.6824725866317749, 0.6880200505256653, 0.7238145470619202, 0.7147008180618286, 0.7432307600975037, 0.7387399077415466, 0.7442874312400818, 0.7491744756698608, 0.7569673657417297], "val_loss": [1.4506908825465612, 1.5411408628736223, 1.0259313242776054, 0.8408608266285488, 0.6702537877219064, 0.6680140495300293, 0.7032021965299334, 0.550119297845023, 0.5232810463224139, 0.5037133863994053, 0.5524480513163975, 0.49277094432285856, 0.5186258043561663, 0.5042390142168317, 0.4897033827645438], "val_accuracy": [0.5903333425521851, 0.5266666412353516, 0.5903333425521851, 0.6576666831970215, 0.7096666693687439, 0.6840000152587891, 0.6666666865348816, 0.737333357334137, 0.7593333125114441, 0.7726666927337646, 0.7636666893959045, 0.7720000147819519, 0.7490000128746033, 0.7649999856948853, 0.7636666893959045]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 3, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.7577142715454102, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.sqrt(beta), tf.math.pow(grad, grad)))))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3898637339014184, 1.9290206053820362, 1.5533739092831504, 1.206491928310946, 1.0150499120600676, 0.9080977817064169, 0.8597695380154067, 0.8278704743737385, 0.7665663409337014, 0.776691629248619, 0.6932820937951889, 0.6916495873124734, 0.6959889974529244, 0.6762378243580628, 0.6569762786208457], "accuracy": [0.2930920720100403, 0.40985339879989624, 0.4858010709285736, 0.5666358470916748, 0.6264694333076477, 0.6610751748085022, 0.6745476126670837, 0.685510516166687, 0.7137762308120728, 0.7113987803459167, 0.7360982894897461, 0.7375511527061462, 0.7318716049194336, 0.7448157668113708, 0.7466648817062378], "val_loss": [1.4521020480564661, 1.4784743445260184, 0.967672484261649, 0.7584133148193359, 0.7784788608551025, 0.6982833828244891, 0.6475447075707572, 0.555227449962071, 0.6094090597970145, 0.5370251962116787, 0.5475627524512154, 0.5129213162830898, 0.5156561817441668, 0.560390795980181, 0.5462351015635899], "val_accuracy": [0.5903333425521851, 0.5509999990463257, 0.5756666660308838, 0.6996666789054871, 0.6433333158493042, 0.6866666674613953, 0.6946666836738586, 0.7506666779518127, 0.718666672706604, 0.7666666507720947, 0.7536666393280029, 0.7390000224113464, 0.7516666650772095, 0.737666666507721, 0.7406666874885559]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 96, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.7368571162223816, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3897954400787738, 1.9035441411437455, 1.5201385365721571, 1.334524605016289, 1.031135471285043, 0.9236183240586552, 0.8925828782243972, 0.818873208212484, 0.7641760357587313, 0.7715966535313664, 0.7305649429374698, 0.6806608849607202, 0.6869522269533264], "accuracy": [0.2930920720100403, 0.42187294363975525, 0.4795931875705719, 0.5365209579467773, 0.6345264911651611, 0.6509047746658325, 0.6741513609886169, 0.6848500967025757, 0.7129837274551392, 0.7211728692054749, 0.719852089881897, 0.7403249144554138, 0.7353057861328125], "val_loss": [1.4512118271418981, 1.3013460976736886, 1.0955946104867118, 0.7212907757077899, 0.6648075410297939, 0.6557454211371285, 0.5753992795944214, 0.5609680243900844, 0.5982568093708583, 0.5534908430916923, 0.581110988344465, 0.5467027085168021, 0.5057308844157627], "val_accuracy": [0.5910000205039978, 0.5606666803359985, 0.5716666579246521, 0.6866666674613953, 0.7099999785423279, 0.687333345413208, 0.7363333106040955, 0.7563333511352539, 0.7196666598320007, 0.7163333296775818, 0.7283333539962769, 0.7293333411216736, 0.7443333268165588]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 5, 0, 8, 8, 0, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [13, 49, 44, 92]], "fitness": -0.501714289188385, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.sqrt(grad)))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3018905697654914, 2.3008644362608233, 2.3006718232725842, 2.2981166977530316, 2.2951718753496766, 2.2953686484917672, 2.2931569818933295, 2.2929583105664952, 2.29093179758183, 2.2897484637585297, 2.2880762748242116, 2.287088855351156, 2.2858933084566266, 2.282770359599595, 2.2828514898741297, 2.281173109740566, 2.2794122931160836, 2.2802829473183346, 2.278519703837717, 2.276681281131225, 2.2734221692539367, 2.2729714121785163, 2.272799438221611, 2.2699943108408127, 2.2705302086362686, 2.2687181187910475, 2.268030080781432, 2.266781028676515, 2.2649314072563222, 2.262288673757609, 2.260941025697796, 2.2595178624973036, 2.257814218245005, 2.256718857350398, 2.2557369731814396, 2.253689326850761, 2.2518456364824253, 2.251526446280116, 2.249062529896323, 2.247080899468975, 2.2454557431734563, 2.2416817412290118, 2.2434214110923025, 2.2399305860521674, 2.240388259470754, 2.2372178781333303, 2.2363908170252396, 2.23360839492814, 2.232177658891004, 2.232453127610228, 2.2300499755598375, 2.229457087410345, 2.2254151799470647, 2.224516134692882, 2.223746872250556, 2.2208684605850504, 2.2167375196382086, 2.2179022466092455, 2.2142294944946586, 2.214274576610625, 2.21024429500536, 2.20991466089782, 2.2070578629424813, 2.206568624018804, 2.202937382906026, 2.2011714488948892, 2.199090357580048, 2.1964665060707165, 2.1958163698131163, 2.1896261950651446, 2.1866095751000434, 2.1878693893900194, 2.184381591362047, 2.1828980377526284, 2.179857047163752, 2.1777688743038075, 2.1745148444802394, 2.171411883105156, 2.170859830695341, 2.1648880416974414, 2.1634562682828347, 2.1614236497545223, 2.158916961153217, 2.1551951221770396, 2.152304107109002, 2.147620705156247, 2.14703172384677, 2.1448532058704233, 2.1385420196643046, 2.135202263828439, 2.1333916678231515, 2.130433058993786, 2.1242431040217045, 2.121693315601714, 2.1206921222360773, 2.1124646428427787, 2.1133065886894915, 2.1084955560847707, 2.103240753413664, 2.1013264938541423], "accuracy": [0.09192973375320435, 0.09219389408826828, 0.09694888442754745, 0.09985470771789551, 0.1072513535618782, 0.10632677376270294, 0.11213842034339905, 0.11755382269620895, 0.11438383162021637, 0.11966715008020401, 0.1306300312280655, 0.13300752639770508, 0.12970545887947083, 0.1450270712375641, 0.14449875056743622, 0.14370624721050262, 0.15295206010341644, 0.14634791016578674, 0.15361246466636658, 0.1558578759431839, 0.1670849323272705, 0.16721701622009277, 0.16563200950622559, 0.17751948535442352, 0.17197199165821075, 0.17963281273841858, 0.18570862710475922, 0.18544445931911469, 0.18319904804229736, 0.19772817194461823, 0.1990489959716797, 0.21120063960552216, 0.2078985571861267, 0.20618148148059845, 0.21437062323093414, 0.22097477316856384, 0.2262580841779709, 0.2230881005525589, 0.22916391491889954, 0.23642848432064056, 0.2312772423028946, 0.2429005354642868, 0.2405230551958084, 0.24461762607097626, 0.2440892904996872, 0.24395720660686493, 0.25359925627708435, 0.25782591104507446, 0.26376965641975403, 0.2611279785633087, 0.26284506916999817, 0.2641659080982208, 0.27024170756340027, 0.26363757252693176, 0.27565711736679077, 0.27460044622421265, 0.2903183102607727, 0.282129168510437, 0.2891295850276947, 0.2864879071712494, 0.28886541724205017, 0.2945449650287628, 0.2995641231536865, 0.2945449650287628, 0.29837536811828613, 0.3039228618144989, 0.30379077792167664, 0.3093382716178894, 0.3090741038322449, 0.322150319814682, 0.3213578164577484, 0.31845200061798096, 0.3245278000831604, 0.32518821954727173, 0.3218861520290375, 0.325320303440094, 0.3295469582080841, 0.3358869254589081, 0.3269053101539612, 0.3413023352622986, 0.3387927711009979, 0.3427552580833435, 0.3369435966014862, 0.33826443552970886, 0.3553031384944916, 0.352529376745224, 0.35041606426239014, 0.35305771231651306, 0.3607185184955597, 0.36481308937072754, 0.36507725715637207, 0.35847312211990356, 0.37102100253105164, 0.36600184440612793, 0.3645489513874054, 0.38224804401397705, 0.3737947344779968, 0.38105931878089905, 0.37643641233444214, 0.3770968019962311], "val_loss": [1.9697399820600237, 1.9684955733163017, 1.96726165499006, 1.966036115373884, 1.9647969518389021, 1.9635745457240514, 1.962350572858538, 1.9611312321254186, 1.9599133219037737, 1.9586966378348214, 1.957484449659075, 1.956261157989502, 1.9550482204982214, 1.9538170269557409, 1.9526036807468958, 1.9513743264334542, 1.9501408168247767, 1.948904173714774, 1.9476672581263952, 1.946416241782052, 1.945169244493757, 1.9439115524291992, 1.9426477296011788, 1.941396985735212, 1.9401367051260812, 1.9388645035879952, 1.9375858306884766, 1.9362993921552385, 1.9350034849984306, 1.9336795125688826, 1.932354245867048, 1.9310273442949568, 1.9296767371041434, 1.9283271517072404, 1.9269720486232214, 1.9255926949637276, 1.9241912024361747, 1.9227922984531947, 1.9213635580880302, 1.9199208532060896, 1.9184650012425013, 1.9169724328177316, 1.9154867444719588, 1.9139680862426758, 1.912454060145787, 1.9109068598066057, 1.9093467167445592, 1.9077488354274206, 1.9061410767691476, 1.9045145852225167, 1.9028635025024414, 1.9011964797973633, 1.8995018005371094, 1.8977933611188615, 1.8960441180637904, 1.8942734173366003, 1.892453398023333, 1.89063903263637, 1.8887617928641183, 1.8868895939418249, 1.8849731854030065, 1.8830540520804269, 1.8810832841055733, 1.8791028431483678, 1.8770865031651087, 1.87506069455828, 1.8729891095842635, 1.870868750980922, 1.8687104497637068, 1.8664933613368444, 1.864246027810233, 1.8619822774614607, 1.859684671674456, 1.8573288917541504, 1.8549417768205916, 1.8525337491716658, 1.8500922748020716, 1.847581454685756, 1.8450794219970703, 1.842501095363072, 1.839888368334089, 1.837247439793178, 1.834540707724435, 1.8317996433803014, 1.8290259497506278, 1.8261867931910925, 1.8233248165675573, 1.8204020772661482, 1.817408902304513, 1.8143892288208008, 1.8113513674054826, 1.8082376888820104, 1.8050532341003418, 1.801835196358817, 1.7985941341945104, 1.7952427864074707, 1.7919107845851354, 1.7885102544512068, 1.7850217138017928, 1.7814991814749581], "val_accuracy": [0.04100000113248825, 0.05166666582226753, 0.060333333909511566, 0.07000000029802322, 0.07966666668653488, 0.09333333373069763, 0.10466666519641876, 0.12066666781902313, 0.13099999725818634, 0.13899999856948853, 0.15000000596046448, 0.16200000047683716, 0.17299999296665192, 0.1860000044107437, 0.1979999989271164, 0.2083333283662796, 0.2199999988079071, 0.22733333706855774, 0.2396666705608368, 0.24933333694934845, 0.25733333826065063, 0.2680000066757202, 0.2750000059604645, 0.2849999964237213, 0.28733333945274353, 0.2933333218097687, 0.3009999990463257, 0.30566665530204773, 0.31200000643730164, 0.3190000057220459, 0.3240000009536743, 0.32866665720939636, 0.3330000042915344, 0.33899998664855957, 0.3409999907016754, 0.3453333377838135, 0.3479999899864197, 0.3513333201408386, 0.35600000619888306, 0.3569999933242798, 0.3596666753292084, 0.3616666793823242, 0.36533331871032715, 0.36633333563804626, 0.367000013589859, 0.37066665291786194, 0.3723333477973938, 0.37566667795181274, 0.3763333261013031, 0.3779999911785126, 0.3799999952316284, 0.38199999928474426, 0.3843333423137665, 0.3866666555404663, 0.38966667652130127, 0.3933333456516266, 0.3946666717529297, 0.3986666798591614, 0.40166667103767395, 0.40400001406669617, 0.40433332324028015, 0.40700000524520874, 0.40966665744781494, 0.41066667437553406, 0.41100001335144043, 0.4129999876022339, 0.41499999165534973, 0.41733333468437195, 0.4193333387374878, 0.4203333258628845, 0.42266666889190674, 0.42633333802223206, 0.4286666810512543, 0.4309999942779541, 0.4323333203792572, 0.4350000023841858, 0.43533334136009216, 0.43833333253860474, 0.4403333365917206, 0.4426666796207428, 0.4449999928474426, 0.44733333587646484, 0.4476666748523712, 0.44966667890548706, 0.4506666660308838, 0.45133334398269653, 0.453000009059906, 0.4569999873638153, 0.4580000042915344, 0.46000000834465027, 0.4620000123977661, 0.46433332562446594, 0.4659999907016754, 0.46666666865348816, 0.4690000116825104, 0.46966665983200073, 0.47066667675971985, 0.47200000286102295, 0.4726666808128357, 0.4740000069141388]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 3, 5, 2, 8, 5, 9, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [84, 49, 44, 92]], "fitness": -0.3094285726547241, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.sqrt(beta), tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301084128006842, 2.486968784410373, 2.2068044614672204, 2.257306215580759, 2.337711757625398, 2.2554219325834874], "accuracy": [0.240919291973114, 0.12508255243301392, 0.19957733154296875, 0.1640470176935196, 0.10091137140989304, 0.15295206010341644], "val_loss": [2.3662874358040944, 1.9474834033421107, 1.9758737427847726, 2.167241641453334, 1.9623525483267648, 1.9732975278581892], "val_accuracy": [0.3173333406448364, 0.18966667354106903, 0.1733333319425583, 0.09866666793823242, 0.23999999463558197, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 2, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 45, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 1, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 8, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 2, 8, 4, 2, 5, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 6, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.negative(tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05838066339492798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 3, 5, 2, 9, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 2, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 9, 4, 3, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.pow(tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.3030933354745184, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08955223858356476, 0.08598599582910538, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9776036398751395, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.01600000075995922, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 3, 5, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 0, 1, 3], [0, 2], [76], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 3, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 6, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 1, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 21, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 3, 2, 1, 1, 1, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), alpha))), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [8, 5, 0, 2, 8, 6, 2, 1, 2, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 91, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 0, 0, 0, 0, 20, 12, 8, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.add(tf.math.sqrt(beta), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.pow(beta, tf.math.subtract(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.pow(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha))))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [3, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 0, 1, 3], [0, 2], [76], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [0, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.302413359388715, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 3, 5, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 0, 4, 3, 2, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [54, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 8, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.sqrt(beta), tf.math.pow(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 3, 5, 2, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [0, 2], [76], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.sqrt(grad), tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 3, 5, 2, 8, 4, 2, 9, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [0, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [47, 49, 44, 92]], "fitness": -0.06485714018344879, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 3, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.288627771007985, 2.3587366840260264, 2.019545299769739, 1.7792916916238948, 1.9516127218801458, 2.1692640366980647, 2.381621372273034, 2.3432809956998653, 2.3408466144055895], "accuracy": [0.31726324558258057, 0.137630432844162, 0.29322415590286255, 0.389380544424057, 0.3564918637275696, 0.27961960434913635, 0.15493330359458923, 0.13380002975463867, 0.11279883980751038], "val_loss": [2.369823455810547, 1.7585973739624023, 1.2999675614493233, 1.2669685227530343, 1.534203256879534, 1.933859143938337, 1.9990686007908411, 1.9353739874703544, 2.002130917140416], "val_accuracy": [0.09799999743700027, 0.33266666531562805, 0.46533334255218506, 0.4873333275318146, 0.36033332347869873, 0.1613333374261856, 0.10899999737739563, 0.13899999856948853, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 9, 2, 4, 1, 5, 2, 5, 4, 3, 1, 9, 0, 0, 4, 5, 0, 3, 9, 5, 3, 7, 9], [2, 2, 2, 0, 1, 0, 1, 2, 3, 0, 0, 2, 1, 2], [87, 72, 16, 57, 57, 39], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 0, 8, 8, 4, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 4, 3, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [20, 86, 31, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0], [6, 8, 1, 3], [5, 2], [76], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 1, 9, 3, 4, 1, 2, 0, 7, 5, 6, 4, 0, 5, 5, 3, 9, 9, 2, 6, 5], [1, 2, 0, 1, 1, 0, 1, 0, 3], [20, 49, 44, 92]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.302485900138741, 2.3029064355572344, 2.3041471744084387, 2.3029760860921273, 2.3015293770493956, 2.3031207549967205], "accuracy": [0.09100515395402908, 0.08836349099874496, 0.09008057415485382, 0.08915598690509796, 0.09192973375320435, 0.08796724677085876], "val_loss": [1.97106899533953, 1.971153940473284, 1.9712344578334264, 1.9713166100638253, 1.9714135442461287, 1.9715041433061873], "val_accuracy": [0.035999998450279236, 0.03466666489839554, 0.03433333337306976, 0.033666666597127914, 0.033666666597127914, 0.033666666597127914]}}]