[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.8402857184410095, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.0132348460921867, 1.8466610179490983, 1.3240649334081585, 0.9933123226730091, 0.8275305247341463, 0.8397300180789266, 0.7013346615909601, 0.6824253449161621, 0.6747662579740877, 0.609857629877843, 0.5914949045567355, 0.573866737210094, 0.5827840928939418, 0.5469852495879985, 0.5445082067041948, 0.5412841743607925, 0.5045910082347106, 0.49222418189190476, 0.4836834653131462, 0.49725819781881203, 0.451404412330307, 0.48484098768394857, 0.4489954720634936, 0.4348745223018141, 0.43868857197411354, 0.43323383220607864, 0.41315123360894845, 0.3946316217025195, 0.4090031343145047, 0.3938523963607455, 0.40269364197933444, 0.38322885886962466, 0.3697776615052821, 0.3690575253670604, 0.3507641385519871, 0.3550943797172541, 0.36274980024938114, 0.36033713213362323, 0.3543401466439728, 0.3527074463733388, 0.3347924637276467, 0.340235134338454, 0.3292921484028422, 0.31499043978547, 0.298762578033516, 0.30155120498515897, 0.30136755356431527, 0.30308532747515693, 0.3014169549031926, 0.27522776536559856, 0.28049861128304093, 0.2769566638799407, 0.2898488300524651, 0.2791779419536903, 0.28380613584229347], "accuracy": [0.3185840845108032, 0.4127592146396637, 0.5305771827697754, 0.6357152462005615, 0.6844538450241089, 0.683000922203064, 0.7322678565979004, 0.7401928305625916, 0.7392682433128357, 0.7594769597053528, 0.7817989587783813, 0.7817989587783813, 0.7802139520645142, 0.7946110367774963, 0.7952714562416077, 0.7977809906005859, 0.8138951063156128, 0.8186501264572144, 0.8248580098152161, 0.8144234418869019, 0.8347642421722412, 0.8119139075279236, 0.8355567455291748, 0.8396512866020203, 0.8408400416374207, 0.833179235458374, 0.8401796221733093, 0.8540483713150024, 0.8473120927810669, 0.854708731174469, 0.8500858545303345, 0.8549728989601135, 0.8615770936012268, 0.8658037185668945, 0.8679170608520508, 0.8691058158874512, 0.8615770936012268, 0.8671245574951172, 0.8683133125305176, 0.8651432991027832, 0.8772949576377869, 0.868049144744873, 0.8768987059593201, 0.8820499181747437, 0.8877294659614563, 0.8874653577804565, 0.8873332738876343, 0.8854840993881226, 0.8856161832809448, 0.8989565372467041, 0.8943336606025696, 0.8956544995307922, 0.8891823887825012, 0.8926165699958801, 0.8907673954963684], "val_loss": [1.7669405937194824, 1.1889574527740479, 1.049833127430507, 0.6265990223203387, 0.6905357837677002, 0.5436285223279681, 0.5558268512998309, 0.5889638832637242, 0.4858309030532837, 0.48640637738364084, 0.5010759489876884, 0.4886190891265869, 0.4122980237007141, 0.43584909609385897, 0.41500616925103323, 0.47284010478428434, 0.39779044900621685, 0.40239895241601126, 0.39974229676382883, 0.38550916739872526, 0.36372346537453787, 0.3573762944766453, 0.35464715106146677, 0.3467462829181126, 0.36725285223552157, 0.35634485312870573, 0.3429065006119864, 0.37190299374716623, 0.38791412115097046, 0.39622093949999126, 0.3380881292479379, 0.337062554700034, 0.3416684695652553, 0.34088851724352154, 0.32959749017442974, 0.35567863498415264, 0.35437752519335064, 0.3401192341532026, 0.3229437896183559, 0.33934158086776733, 0.31861344405582975, 0.30510840245655607, 0.3157090885298593, 0.29587024450302124, 0.3504752942493984, 0.2980308532714844, 0.31335973739624023, 0.32874096291405813, 0.31961064679282053, 0.29494240454265047, 0.3341999820300511, 0.3349308541842869, 0.3262442009789603, 0.29580648456301006, 0.3040153980255127], "val_accuracy": [0.3356666564941406, 0.5323333144187927, 0.5979999899864197, 0.6966666579246521, 0.6949999928474426, 0.7480000257492065, 0.7283333539962769, 0.7170000076293945, 0.7639999985694885, 0.7733333110809326, 0.7616666555404663, 0.7573333382606506, 0.8226666450500488, 0.8003333210945129, 0.8136666417121887, 0.777999997138977, 0.8246666789054871, 0.8216666579246521, 0.8289999961853027, 0.8373333215713501, 0.8383333086967468, 0.8519999980926514, 0.8473333120346069, 0.8506666421890259, 0.8339999914169312, 0.8370000123977661, 0.8583333492279053, 0.8259999752044678, 0.8246666789054871, 0.8296666741371155, 0.8586666584014893, 0.8539999723434448, 0.8536666631698608, 0.859666645526886, 0.859000027179718, 0.843999981880188, 0.8546666502952576, 0.8543333411216736, 0.8650000095367432, 0.8553333282470703, 0.8673333525657654, 0.8706666827201843, 0.8616666793823242, 0.8706666827201843, 0.859333336353302, 0.875333309173584, 0.8700000047683716, 0.8683333396911621, 0.8693333268165588, 0.8756666779518127, 0.8576666712760925, 0.8600000143051147, 0.8616666793823242, 0.874666690826416, 0.875]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 8, 2, 4, 5, 2, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 0, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [40, 49, 44]], "fitness": -0.8125714063644409, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 13, 6, 3, 2, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.add(beta, grad)))))), tf.math.add(beta, grad))))))), tf.math.negative(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.138078901415346, 1.6501654982330651, 1.2425968101106188, 1.0398932708457571, 0.9136220076773476, 0.8603600548746847, 0.8341090271281151, 0.7539349223849103, 0.7190555013276331, 0.693909214165201, 0.6962806813595018, 0.6346010519938304, 0.643193607254114, 0.6191727111305244, 0.6012534240469595, 0.5792123263601173, 0.5546949778675734, 0.576269770476324, 0.5500237888128466, 0.5415688858308088, 0.5142483674713082, 0.5304798805883705, 0.5162947503779747, 0.48790960721824117, 0.49574574460883764, 0.4842881652200699, 0.4760112905735353, 0.46301474460694514, 0.44552261395823484, 0.45744647978240505, 0.44371852455059174, 0.42245362068620795, 0.4238906414588177, 0.4165747194336768, 0.4122367026885865, 0.40806744520958027, 0.40109937794613815, 0.4115446133699242], "accuracy": [0.2925637364387512, 0.4647998809814453, 0.5781270861625671, 0.6170915365219116, 0.6593580842018127, 0.6782459616661072, 0.6865671873092651, 0.7096816897392273, 0.7280412316322327, 0.7346453666687012, 0.735041618347168, 0.7582882046699524, 0.7499669790267944, 0.7717606425285339, 0.7691190242767334, 0.7828556299209595, 0.7906485199928284, 0.7804781198501587, 0.7923656105995178, 0.7979130744934082, 0.8109893202781677, 0.7960638999938965, 0.8088759779930115, 0.819442629814148, 0.8161405324935913, 0.8146876096725464, 0.8206313848495483, 0.8290846943855286, 0.8358209133148193, 0.8322546482086182, 0.8309338092803955, 0.8449346423149109, 0.8461233377456665, 0.8490291833877563, 0.8482366800308228, 0.8477083444595337, 0.8498216867446899, 0.8454629778862], "val_loss": [1.4135851178850447, 1.1613408497401647, 0.8331765277045113, 0.6846028906958443, 0.674371497971671, 0.6305178914751325, 0.5668104376111712, 0.630051987511771, 0.5357497419629779, 0.5569322960717338, 0.4709977763039725, 0.4811170441763742, 0.4752402646200998, 0.49147789818899973, 0.43998117106301443, 0.4293708801269531, 0.42877923590796335, 0.4365977474621364, 0.41027605533599854, 0.39970769201006207, 0.39594997678484234, 0.39248132705688477, 0.3890999044690813, 0.3853555406842913, 0.40041015829358784, 0.38354397671563284, 0.3695802858897618, 0.3725981371743338, 0.3885056972503662, 0.3585553765296936, 0.36309880018234253, 0.34987443685531616, 0.34747532435825895, 0.35201604877199444, 0.35252403361456736, 0.3434098107474191, 0.3518562742641994, 0.37277824538094656], "val_accuracy": [0.4463333189487457, 0.562666654586792, 0.6523333191871643, 0.7110000252723694, 0.6976666450500488, 0.7273333072662354, 0.7406666874885559, 0.7203333377838135, 0.7409999966621399, 0.7250000238418579, 0.7806666493415833, 0.781333327293396, 0.7696666717529297, 0.765666663646698, 0.8066666722297668, 0.8159999847412109, 0.8130000233650208, 0.8136666417121887, 0.8266666531562805, 0.8306666612625122, 0.824999988079071, 0.82833331823349, 0.8360000252723694, 0.8306666612625122, 0.8206666707992554, 0.8199999928474426, 0.8379999995231628, 0.8309999704360962, 0.8190000057220459, 0.8463333249092102, 0.8473333120346069, 0.8460000157356262, 0.8526666760444641, 0.8486666679382324, 0.8460000157356262, 0.847000002861023, 0.8519999980926514, 0.828000009059906]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.8108571171760559, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(alpha)), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.012808091164013, 1.8433162016938502, 1.3314879450107122, 1.0247136215256063, 0.8810901581146745, 0.7975737492106988, 0.7290169833405867, 0.6786567624754295, 0.6602626924485798, 0.6050031074695363, 0.5983179876707044, 0.588850932791406, 0.5749714487358847, 0.5526451618443737, 0.5187603776181898, 0.5386250079772444, 0.5080180144139946, 0.5006265588141137, 0.5043829108478056], "accuracy": [0.31884822249412537, 0.4139479696750641, 0.533879280090332, 0.6328094005584717, 0.6672830581665039, 0.6999075412750244, 0.7181349992752075, 0.7511557340621948, 0.7471932172775269, 0.7660810947418213, 0.7755910754203796, 0.778232753276825, 0.7881389260292053, 0.7891955971717834, 0.8068947196006775, 0.7948752045631409, 0.8107251524925232, 0.8127063512802124, 0.8137630224227905], "val_loss": [1.7654084478105818, 1.1884509835924422, 0.9354638372148786, 0.7677063771656581, 0.6877931186131069, 0.5474716254643032, 0.5507581915174212, 0.5287290641239711, 0.4722153288977487, 0.4837562697274344, 0.5186058453151158, 0.5170651503971645, 0.41480753251484465, 0.4211833732468741, 0.4669372183935983, 0.4447099651609148, 0.41311490535736084, 0.4265680398259844, 0.4235794799668448], "val_accuracy": [0.33633333444595337, 0.5180000066757202, 0.6523333191871643, 0.6553333401679993, 0.6800000071525574, 0.7490000128746033, 0.737333357334137, 0.7506666779518127, 0.7886666655540466, 0.7773333191871643, 0.7630000114440918, 0.7523333430290222, 0.8053333163261414, 0.8193333148956299, 0.7760000228881836, 0.7973333597183228, 0.8143333196640015, 0.8063333630561829, 0.8159999847412109]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.800000011920929, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [1.9694975229254992, 1.4874575616283314, 1.0606209875774926, 0.8775531281065774, 0.8190047899651064, 0.7768773878208005, 0.7194978640284505, 0.7585407167440864, 0.6744539394134291, 0.666371050047569, 0.6549780141754614, 0.6213689600204227, 0.6096048887537109, 0.6204852584078799, 0.6022005021816168, 0.5991477598493378, 0.5670895861077223, 0.5711983871135603, 0.5525699806424369, 0.5708024791754185, 0.529614008889301, 0.5427850127346118, 0.5151971213931908, 0.5217976558831988, 0.49520527208800863, 0.5057103265435579, 0.4949760207599574, 0.48265845213331926, 0.49043300658515604], "accuracy": [0.3420948386192322, 0.5020473003387451, 0.6120724081993103, 0.6760005354881287, 0.6907938122749329, 0.7087571024894714, 0.7195879220962524, 0.7137762308120728, 0.7467969655990601, 0.741909921169281, 0.7535332441329956, 0.7647602558135986, 0.7701756954193115, 0.7644960880279541, 0.7671377658843994, 0.7724210619926453, 0.7829877138137817, 0.7872143983840942, 0.796328067779541, 0.7803460359573364, 0.8014793395996094, 0.7880068421363831, 0.8042530417442322, 0.8050455451011658, 0.8164047002792358, 0.8054417967796326, 0.8169330358505249, 0.8168009519577026, 0.8177255392074585], "val_loss": [1.5807528836386544, 1.0175803388868059, 0.6758379765919277, 0.6392020838601249, 0.5929781539099557, 0.5904149838856289, 0.5339750732694354, 0.518012455531529, 0.5206933873040336, 0.4904123204095023, 0.46976523739951, 0.49134417942592074, 0.5113720723560878, 0.5150477375302996, 0.4804907866886684, 0.4504908834184919, 0.44066825083323885, 0.45400539466312956, 0.4259172763143267, 0.41364955050604685, 0.4184685008866446, 0.40199750661849976, 0.4194413849285671, 0.38987012420381817, 0.3948984912463597, 0.3963016527039664, 0.3921174832752773, 0.3878076161657061, 0.37807018416268484], "val_accuracy": [0.37400001287460327, 0.6113333106040955, 0.7113333344459534, 0.7049999833106995, 0.7153333425521851, 0.7206666469573975, 0.7596666812896729, 0.7776666879653931, 0.7566666603088379, 0.7726666927337646, 0.7913333177566528, 0.7736666798591614, 0.7519999742507935, 0.762333333492279, 0.781333327293396, 0.7993333339691162, 0.8019999861717224, 0.8029999732971191, 0.8159999847412109, 0.828000009059906, 0.8096666932106018, 0.8256666660308838, 0.815666675567627, 0.8363333344459534, 0.8276666402816772, 0.8289999961853027, 0.8209999799728394, 0.8289999961853027, 0.8343333601951599]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 2, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 0, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [0, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [29, 49, 44]], "fitness": -0.7714285850524902, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(alpha)), tf.math.add(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(grad, grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.2889791472146164, 2.255855508499992, 2.211295369152915, 2.15527448158506, 2.066512973663467, 1.9417031395783309, 1.7883300280542642, 1.6290789231364722, 1.4701104947305421, 1.3649551082580096, 1.2629017382092589, 1.1926136677370032, 1.138716744063411, 1.0851977689784862, 1.0439563596158876, 1.0103044370067527, 0.9684743800923462, 0.9563318516411061, 0.9247865718211858, 0.9114619462150924, 0.9026699223538526, 0.8819912712902457, 0.850675848811735, 0.8478508362318499, 0.8338324147885612, 0.8207425955594917, 0.815042788822417, 0.8132746690504618, 0.8028099310790165, 0.7886428628473581, 0.7785423092554904, 0.7636114485495913, 0.7743195153781688, 0.7615766535581867, 0.7475601114443878, 0.752385412098914, 0.74543858702629, 0.7321192503227392, 0.7307758535754333, 0.7276820281650632, 0.7210185043233308, 0.7099403243621641, 0.7060892776003163, 0.7116450445841899, 0.7024031646137366, 0.6884840782119173, 0.7017273031615027, 0.6960482521457695, 0.6882689946583627, 0.6860868488288968], "accuracy": [0.1278562992811203, 0.216880202293396, 0.2938845455646515, 0.3413023352622986, 0.39122968912124634, 0.4340245723724365, 0.46651697158813477, 0.49253731966018677, 0.5287280678749084, 0.5464271306991577, 0.5695416927337646, 0.5962224006652832, 0.6077136397361755, 0.6211860775947571, 0.6337339878082275, 0.6490556001663208, 0.6581693291664124, 0.658961832523346, 0.6758684515953064, 0.6740192770957947, 0.6822084188461304, 0.6890767216682434, 0.6983225345611572, 0.6973979473114014, 0.6968696117401123, 0.7024171352386475, 0.7103421092033386, 0.71100252866745, 0.7073041796684265, 0.7150970697402954, 0.7194558382034302, 0.7220974564552307, 0.7185312509536743, 0.7226257920265198, 0.7302865982055664, 0.7264562249183655, 0.7316074371337891, 0.7326641082763672, 0.7320036888122559, 0.7333245277404785, 0.7384757399559021, 0.7408532500267029, 0.7424382567405701, 0.7412495017051697, 0.7433628439903259, 0.7471932172775269, 0.744419515132904, 0.748778223991394, 0.7469290494918823, 0.748778223991394], "val_loss": [1.9405518940516882, 1.906710488455636, 1.8589324951171875, 1.7891021456037248, 1.6886917863573347, 1.5511691910879952, 1.3874682358333044, 1.2277865409851074, 1.089158194405692, 0.9882988589150565, 0.9108326094491142, 0.8516338212149483, 0.8059978825705392, 0.7710313967296055, 0.7404854638235909, 0.7164463996887207, 0.6936206987925938, 0.6790050779070173, 0.6636633191789899, 0.652016248021807, 0.637716429574149, 0.6321426970618111, 0.6192146369389125, 0.6095124653407505, 0.6017291716166905, 0.595707893371582, 0.5902745383126395, 0.585752010345459, 0.5770103079932076, 0.5713250296456474, 0.5706821339471, 0.5619570698056903, 0.5571764196668353, 0.5517377512795585, 0.5487683500562396, 0.5444549322128296, 0.54055084500994, 0.5358953816550118, 0.5321350608553205, 0.5293933323451451, 0.5264614990779332, 0.5255711930138725, 0.5225081784384591, 0.5179395845958165, 0.5135341712406704, 0.5122282675334385, 0.5108122995921544, 0.5085513080869403, 0.5031140191214425, 0.5019145011901855], "val_accuracy": [0.28566667437553406, 0.38333332538604736, 0.42399999499320984, 0.4636666774749756, 0.5136666893959045, 0.54666668176651, 0.5823333263397217, 0.609333336353302, 0.640666663646698, 0.6733333468437195, 0.6833333373069763, 0.6863333582878113, 0.6936666369438171, 0.6996666789054871, 0.70333331823349, 0.7093333601951599, 0.7153333425521851, 0.7149999737739563, 0.7283333539962769, 0.7279999852180481, 0.7293333411216736, 0.7363333106040955, 0.7350000143051147, 0.7396666407585144, 0.7403333187103271, 0.7433333396911621, 0.7459999918937683, 0.7450000047683716, 0.7543333172798157, 0.753000020980835, 0.7490000128746033, 0.7573333382606506, 0.7630000114440918, 0.7613333463668823, 0.7609999775886536, 0.7606666684150696, 0.7639999985694885, 0.7636666893959045, 0.7683333158493042, 0.7680000066757202, 0.7736666798591614, 0.7673333287239075, 0.7743333578109741, 0.778333306312561, 0.7839999794960022, 0.7726666927337646, 0.7706666588783264, 0.7786666750907898, 0.7763333320617676, 0.7739999890327454]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 2, 2, 4, 0, 5, 9, 2, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 2, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [9, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [21, 49, 44]], "fitness": -0.7279999852180481, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 19, 10, 2, 1, 1, 1, 0, 1, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad)))), tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, grad)))))), tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2996400885216044, 2.2932688094023086, 2.284492624623192, 2.2801341005619316, 2.2734333795563355, 2.265347023051822, 2.2602795596608334, 2.252239331341281, 2.243788332467412, 2.236215057909654, 2.2253827696321444, 2.2175771511462323, 2.2097948624111203, 2.1965535857878686, 2.184149835119473, 2.171544661123235, 2.155453245795052, 2.1454349684283844, 2.1246221180148583, 2.110916613713704, 2.0911770531089156, 2.0729195307967307, 2.047991575833876, 2.024683715046641, 1.9957011423374227, 1.97461051473906, 1.9506585439277158, 1.917806257440776, 1.8874502996679752, 1.8541099247663502, 1.8226714196726002, 1.783154675658542, 1.7580880564059942, 1.7223653536053256, 1.6829505503500426, 1.6583340755621865, 1.6245608831110128, 1.5892250743981098, 1.5561865444716179, 1.5310210788002765, 1.4972364958235458, 1.4734154195361024, 1.438219261821298, 1.4305309264919053, 1.400537026210342, 1.364137859030202, 1.3567122757285262, 1.3314448487347679, 1.3104030888676723, 1.2949869383784365, 1.2712139116223493, 1.2581689541035357, 1.2456074403718227, 1.2263703068344112, 1.2129020957332073, 1.1952110437779395, 1.1890644581562586, 1.1839290771187099, 1.1543301333368352, 1.1518946369452294, 1.1356444275531912, 1.1283907463616385, 1.118080929207087, 1.0935009026870657, 1.1041697707898612, 1.0898113919129508, 1.0789547734618927, 1.0761533994810724, 1.0687629929969433, 1.0540690488189266, 1.041838321994718, 1.0419578367393754, 1.0337675850168746, 1.027144612810631, 1.0139747595097395, 1.0090212286612958, 1.006144031809463, 0.9849653529642186, 0.9887428417055913, 0.9858428201639515, 0.9858189794003546, 0.971451638129409, 0.9659714572040113, 0.9647250395362182, 0.9621297275275287, 0.9494037648328086, 0.9495366049275784, 0.9408829251709961, 0.9377734113630759, 0.9343119960230544, 0.918422701871784, 0.9181374534875993, 0.921627896077062, 0.9166249697785636, 0.9104171480721235, 0.9154305601825394, 0.90798894845893, 0.901315556242009, 0.8947702335045401, 0.8963673438819297], "accuracy": [0.09998679161071777, 0.11345925182104111, 0.13498876988887787, 0.14317791163921356, 0.16457535326480865, 0.18623696267604828, 0.2044644057750702, 0.22005018591880798, 0.23378682136535645, 0.2569013237953186, 0.2763175368309021, 0.28239333629608154, 0.29401662945747375, 0.31105533242225647, 0.3217540681362152, 0.32782986760139465, 0.35028398036956787, 0.3467177450656891, 0.37564390897750854, 0.3625676929950714, 0.39228636026382446, 0.3907013535499573, 0.39783385396003723, 0.40707963705062866, 0.42425042390823364, 0.4239862561225891, 0.42742040753364563, 0.43851539492607117, 0.4485536813735962, 0.454629510641098, 0.4563465714454651, 0.47193238139152527, 0.47404569387435913, 0.4777440130710602, 0.4908202290534973, 0.4799894392490387, 0.48949941992759705, 0.5012547969818115, 0.5044247508049011, 0.5155197381973267, 0.5223880410194397, 0.5219917893409729, 0.5357284545898438, 0.5386342406272888, 0.5440496802330017, 0.5551446080207825, 0.5563333630561829, 0.5519746541976929, 0.5665037631988525, 0.5704662799835205, 0.5691454410552979, 0.5733720660209656, 0.574560821056366, 0.5840708017349243, 0.5871087312698364, 0.5964865684509277, 0.5975432395935059, 0.5935807824134827, 0.6013736724853516, 0.6089023947715759, 0.6129969358444214, 0.6057323813438416, 0.6129969358444214, 0.6223748326301575, 0.614317774772644, 0.6203936338424683, 0.622639000415802, 0.6231673359870911, 0.6326773166656494, 0.6304318904876709, 0.6383568644523621, 0.643772304058075, 0.6440364718437195, 0.6388852000236511, 0.650640606880188, 0.6420552134513855, 0.6510368585586548, 0.6571126580238342, 0.652621865272522, 0.6513010263442993, 0.6556597352027893, 0.6568484902381897, 0.6581693291664124, 0.6613393425941467, 0.6631884574890137, 0.6675472259521484, 0.6675472259521484, 0.6705851554870605, 0.670320987701416, 0.6655659675598145, 0.6779817938804626, 0.6738871932029724, 0.6769251227378845, 0.6798309087753296, 0.6824725866317749, 0.6794346570968628, 0.6765288710594177, 0.6822084188461304, 0.6839255094528198, 0.6791704893112183], "val_loss": [1.9648032869611467, 1.9587230682373047, 1.952584879738944, 1.946474620274135, 1.9402611596243722, 1.933769771030971, 1.9270497049604143, 1.9200572967529297, 1.9126009259905135, 1.9046822956630163, 1.8961180278233118, 1.8869740622384208, 1.8771822111947196, 1.866475990840367, 1.8548541069030762, 1.8423020499093192, 1.8285910061427526, 1.814131259918213, 1.7983125277927943, 1.781317983354841, 1.7628647259303503, 1.7432051386151994, 1.721877098083496, 1.6991840430668421, 1.674804755619594, 1.6491388933999198, 1.6221075057983398, 1.5934362070901054, 1.5633318083626884, 1.532113722392491, 1.4999104567936488, 1.466576201575143, 1.4331858839307512, 1.399489232472011, 1.3653950350625175, 1.3321424211774553, 1.2993834359305245, 1.2664742810385567, 1.235070024217878, 1.2048369816371374, 1.1759812150682722, 1.1480048043387276, 1.1208714076450892, 1.0961242403302873, 1.0724803039005824, 1.049274001802717, 1.0284950051988875, 1.0086453982761927, 0.9895664964403424, 0.9718352045331683, 0.9547667503356934, 0.938857010432652, 0.923783540725708, 0.9098997116088867, 0.8964764731270927, 0.8840274810791016, 0.8721059390476772, 0.8611599377223423, 0.8503525597708566, 0.8403168405805316, 0.8304422242300851, 0.8213505404336112, 0.8124981437410627, 0.8038548231124878, 0.7960425104413714, 0.7883892059326172, 0.7811595031193325, 0.7743927580969674, 0.7679801327841622, 0.7613333463668823, 0.7549321140561785, 0.7492531197411674, 0.7433364902223859, 0.7378556047167096, 0.7322475739887783, 0.7279050690787179, 0.7230623619897025, 0.7179039887019566, 0.7133335726601737, 0.7090011835098267, 0.7049064465931484, 0.7009738683700562, 0.6969516277313232, 0.6927702937807355, 0.6897557633263725, 0.6862833840506417, 0.6828623499189105, 0.6795709303447178, 0.676165052822658, 0.6726539134979248, 0.6692653383527484, 0.6663626602717808, 0.6639280319213867, 0.6614545413425991, 0.6579640933445522, 0.6555907385689872, 0.6529842785426548, 0.6510437556675502, 0.6486080544335502, 0.6462904385157994], "val_accuracy": [0.08033332973718643, 0.14100000262260437, 0.19566667079925537, 0.2460000067949295, 0.2866666615009308, 0.3176666796207428, 0.33766666054725647, 0.35333332419395447, 0.36533331871032715, 0.37566667795181274, 0.3889999985694885, 0.40033334493637085, 0.4116666615009308, 0.41966667771339417, 0.4286666810512543, 0.4386666715145111, 0.44733333587646484, 0.4566666781902313, 0.4650000035762787, 0.4716666638851166, 0.47866666316986084, 0.49000000953674316, 0.5009999871253967, 0.5040000081062317, 0.512333333492279, 0.5193333625793457, 0.5320000052452087, 0.5396666526794434, 0.5429999828338623, 0.5513333082199097, 0.5573333501815796, 0.5630000233650208, 0.5676666498184204, 0.5763333439826965, 0.5836666822433472, 0.5926666855812073, 0.596666693687439, 0.6029999852180481, 0.6103333234786987, 0.6186666488647461, 0.6290000081062317, 0.6346666812896729, 0.6470000147819519, 0.6470000147819519, 0.6506666541099548, 0.6573333144187927, 0.6610000133514404, 0.6660000085830688, 0.668666660785675, 0.6703333258628845, 0.6736666560173035, 0.6756666898727417, 0.6766666769981384, 0.6769999861717224, 0.6809999942779541, 0.6823333501815796, 0.684333324432373, 0.6853333115577698, 0.6850000023841858, 0.6850000023841858, 0.6863333582878113, 0.6880000233650208, 0.6916666626930237, 0.6923333406448364, 0.6933333277702332, 0.6966666579246521, 0.6959999799728394, 0.6990000009536743, 0.6986666917800903, 0.6986666917800903, 0.7003333568572998, 0.7009999752044678, 0.7016666531562805, 0.7039999961853027, 0.706333339214325, 0.7043333053588867, 0.7076666951179504, 0.7116666436195374, 0.7120000123977661, 0.7129999995231628, 0.7133333086967468, 0.7120000123977661, 0.7129999995231628, 0.715666651725769, 0.7183333039283752, 0.718999981880188, 0.7196666598320007, 0.721666693687439, 0.7200000286102295, 0.7210000157356262, 0.7239999771118164, 0.7236666679382324, 0.7253333330154419, 0.7260000109672546, 0.7256666421890259, 0.7256666421890259, 0.7273333072662354, 0.7269999980926514, 0.7286666631698608, 0.7286666631698608]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [73, 49, 44]], "fitness": -0.2582857012748718, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 2, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [3.863142286954917, 2.638136204286353, 2.3051996230134373, 2.3032509071038714, 2.3026800007316903, 2.3002272249921405], "accuracy": [0.19363360106945038, 0.14555540680885315, 0.09840179979801178, 0.09694888442754745, 0.09694888442754745, 0.10830801725387573], "val_loss": [1.8577419008527483, 1.9763005120413644, 1.9739058358328683, 1.9735095841544015, 1.9729723930358887, 1.962857927594866], "val_accuracy": [0.2446666657924652, 0.10400000214576721, 0.09866666793823242, 0.09866666793823242, 0.10133333504199982, 0.20133332908153534]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.2142857164144516, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(alpha), tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, grad)), tf.math.add(beta, alpha)))), tf.math.add(beta, grad)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.397840576842004, 2.336384982323335, 2.454489874912212, 2.1761493627437116, 1.7944514764345647, 1.4606353755419863, 1.8671814562732423, 3.739159201208973, 2.4567079156412817, 2.6014579505716346, 6.0992660637088285], "accuracy": [0.2553163468837738, 0.13908334076404572, 0.14080041646957397, 0.22665433585643768, 0.37722888588905334, 0.4905560612678528, 0.46308282017707825, 0.15017831325531006, 0.14819706976413727, 0.10210011899471283, 0.11187426000833511], "val_loss": [1.991194248199463, 2.317579678126744, 1.9053830419267928, 1.393998384475708, 1.036043643951416, 0.9312148434775216, 3.873718806675502, 1.9433066504342216, 2.2352142333984375, 2.115517956869943, 2.1162996973310197], "val_accuracy": [0.140666663646698, 0.18766666948795319, 0.20499999821186066, 0.42366665601730347, 0.5653333067893982, 0.6256666779518127, 0.4416666626930237, 0.13899999856948853, 0.0989999994635582, 0.10633333027362823, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 8, 2, 4, 3, 4, 9, 2, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [2, 5, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 2, 2, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)), tf.math.square(alpha))), alpha)", "other_info": {"loss": [30272228565331.273, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.040285300463438034, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [4, 0, 9, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [21, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 7, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 12, 7, 5, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)), tf.math.square(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [4, 1, 1, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 0, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [1, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 7, 8, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(alpha, grad)), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), beta), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 2, 2, 5, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 1, 3, 1, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023704686074793, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [9, 3, 5, 2, 8, 3, 5, 9, 2, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 89, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [8, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [21, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.negative(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 8, 8, 2, 4, 3, 5, 9, 2, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 2, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [4, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [21, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.pow(grad, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), tf.math.add(beta, grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3023704686074793, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 8, 2, 0, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 2, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 93, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 2, 8, 3, 2, 5, 5, 0, 7, 5], [1, 0, 0, 3, 1, 1], [2, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, grad))), beta)), tf.math.add(beta, grad))))), grad), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 9, 8, 2, 4, 3, 4, 1, 9, 5, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [4, 2], [76], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [2, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [21, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(grad, tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3026107989124664, 2.3028946928675023, 2.303038659648117, 2.3030513226946567, 2.303152932781884, 2.3030857041905253, 2.3029887123571458], "accuracy": [0.0956280529499054, 0.09668471664190292, 0.09589222073554993, 0.09272222965955734, 0.09377889335155487, 0.09602430462837219, 0.0956280529499054], "val_loss": [1.9737042018345423, 1.9737011364528112, 1.9737436430794852, 1.9738144193376814, 1.9738014084952218, 1.9736764771597726, 1.973674978528704], "val_accuracy": [0.09799999743700027, 0.1003333330154419, 0.1003333330154419, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [4, 0, 6, 3, 2, 5, 5, 0, 7, 5], [2, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(alpha, tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.pow(grad, grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.math.divide_no_nan(beta, alpha)), tf.math.multiply(tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)), tf.math.square(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [2, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [1, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [43, 49, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(alpha)), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 1, 8, 7, 5, 3, 0, 2, 0, 2, 0, 0, 6, 6, 5, 2, 3, 9, 5], [0, 0, 2, 2, 1, 3, 3, 0, 3, 0, 0], [68], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 8, 2, 4, 3, 4, 1, 9, 8, 5, 2, 0, 1, 2, 8, 0, 8, 2, 8, 2, 4, 5, 8, 5, 5, 1, 2, 3, 7, 2, 9, 8, 6, 3, 5, 5, 5, 8, 3, 2, 1, 0, 0, 2, 8, 0], [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 0, 0], [51, 86, 27, 57, 25, 77, 46, 37, 45, 26, 35, 4, 28], [1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0], [8, 4, 0, 3], [6, 2], [76], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [3, 0, 8, 3, 2, 5, 5, 0, 7, 5], [0, 1, 0, 3, 1, 1], [10, 49, 44]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 10, 7, 1, 1, 0, 0, 0, 0, 12, 8, 4, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad))))), grad), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, grad)))))), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(alpha), tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(sigma))", "other_info": {"loss": [2.3023686101959053, 2.3026169202016282, 2.3004510523290085, 2.302475325986615, 2.302431284838097, 2.3015393824420505], "accuracy": [0.09245806187391281, 0.09060890227556229, 0.09192973375320435, 0.08558975160121918, 0.09100515395402908, 0.08902391046285629], "val_loss": [1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846, 1.9709816660199846], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]