[{"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 1, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [73, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2, 0], [30, 23, 13, 96, 41, 62]], "fitness": -0.8382856845855713, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1.9493844705628776, 1.022348683177362, 0.7605602064971612, 0.6773103286860689, 0.6257667560004886, 0.585645436705253, 0.5520956115936165, 0.5249254450806222, 0.5052465840518718, 0.48683609695262, 0.4557876683630885, 0.452385342525784, 0.4466146114613827, 0.4256283171999456, 0.39680792936685455, 0.38248901529130114, 0.37123792670768535, 0.3594720709506531, 0.36119029706873207, 0.3451434252418311, 0.3356050782593533, 0.32418557314620183, 0.3153814280061453, 0.29074416885979343, 0.30266488081019205, 0.2900061622397806, 0.28264180536299116, 0.27206681320192067, 0.26818022478714815, 0.2653885015076524, 0.2609642954975496, 0.24026799952239095, 0.24134754090654914, 0.2392479171369999, 0.2239486484648986, 0.21363482200836445, 0.20384826163857636, 0.20656715830823197, 0.2147657698872319, 0.19561400212836602, 0.19721433342983222, 0.18199456266920092], "accuracy": [0.3358869254589081, 0.6326773166656494, 0.7121912837028503, 0.7433628439903259, 0.7576277852058411, 0.7746664881706238, 0.7873464822769165, 0.7979130744934082, 0.8086118102073669, 0.8157442808151245, 0.8314621448516846, 0.8302733898162842, 0.8355567455291748, 0.8385946154594421, 0.8506141901016235, 0.8541803956031799, 0.8613129258155823, 0.8659358024597168, 0.8623695969581604, 0.8688416481018066, 0.8721436858177185, 0.8772949576377869, 0.8813894987106323, 0.8869370222091675, 0.8850878477096558, 0.8897107243537903, 0.8948619961738586, 0.8949940800666809, 0.895918607711792, 0.9026548862457275, 0.9000132083892822, 0.9079381823539734, 0.9056927561759949, 0.9122969508171082, 0.9111081957817078, 0.9211464524269104, 0.9227314591407776, 0.920089840888977, 0.9170519113540649, 0.9232597947120667, 0.9243164658546448, 0.9274864792823792], "val_loss": [0.8208405801228115, 0.6230550152914864, 0.5427291733877999, 0.5190259899411883, 0.4670156921659197, 0.4627489873341152, 0.43335228306906565, 0.41602654116494314, 0.41025130237851826, 0.383482779775347, 0.38621437549591064, 0.37249191318239483, 0.36746002095086233, 0.3625715374946594, 0.3474606190408979, 0.34071487188339233, 0.33792610679353985, 0.3482918313571385, 0.336620032787323, 0.3254308785711016, 0.334693900176457, 0.3255565251622881, 0.3378544790404184, 0.3206284557070051, 0.3244256547519139, 0.3239461268697466, 0.31502303906849455, 0.32004936252321514, 0.32486328056880404, 0.3379801596914019, 0.31930811064583914, 0.32885042258671354, 0.32037155968802317, 0.3309698190007891, 0.3337173802512033, 0.3330264006342207, 0.33261719771793913, 0.3327609215463911, 0.33470250027520315, 0.3490971837724958, 0.34388664790562223, 0.3495222159794399], "val_accuracy": [0.6346666812896729, 0.7093333601951599, 0.7506666779518127, 0.7736666798591614, 0.7793333530426025, 0.7846666574478149, 0.8006666898727417, 0.8113333582878113, 0.8059999942779541, 0.8339999914169312, 0.8276666402816772, 0.8346666693687439, 0.8393333554267883, 0.8416666388511658, 0.8526666760444641, 0.8543333411216736, 0.8573333621025085, 0.8516666889190674, 0.8573333621025085, 0.8579999804496765, 0.8616666793823242, 0.8613333106040955, 0.8600000143051147, 0.8669999837875366, 0.8629999756813049, 0.8650000095367432, 0.8679999709129333, 0.8679999709129333, 0.8643333315849304, 0.8610000014305115, 0.8669999837875366, 0.8706666827201843, 0.8696666955947876, 0.8706666827201843, 0.8723333477973938, 0.8686666488647461, 0.8730000257492065, 0.8690000176429749, 0.8686666488647461, 0.8676666617393494, 0.8690000176429749, 0.8730000257492065]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 8, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 4, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [31, 37, 21, 97, 70, 57, 60, 9, 54, 64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2, 0], [30, 23, 13, 96, 41, 62]], "fitness": -0.7868571281433105, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.1539264547196613, 1.5068478537210463, 1.1764069615164925, 1.0176157225644222, 0.8975894921696055, 0.8441847695130965, 0.7899817339952958, 0.7861668502712892, 0.7523028308516087, 0.7472290008248529, 0.7074046261621394, 0.7004742236216748, 0.6806675994070277, 0.6894387706726486, 0.6603796825180941, 0.6687048677015046, 0.6309128358946374, 0.6333731832348077, 0.6355610251773098, 0.6063821955269448, 0.6138662129833462, 0.6183258145791728], "accuracy": [0.2938845455646515, 0.47589486837387085, 0.5768062472343445, 0.6399418711662292, 0.6752080321311951, 0.6831330060958862, 0.7113987803459167, 0.7120591998100281, 0.7169462442398071, 0.7217012047767639, 0.7354378700256348, 0.7405890822410583, 0.7442874312400818, 0.7382115721702576, 0.7508915662765503, 0.748778223991394, 0.7664773464202881, 0.7594769597053528, 0.7614582180976868, 0.7688548564910889, 0.7774402499198914, 0.7646281719207764], "val_loss": [1.4294086865016393, 0.901294299534389, 0.8474251202174595, 0.6855141946247646, 0.6679254259381976, 0.603472283908299, 0.6199477910995483, 0.5747042724064418, 0.5718557834625244, 0.5716597012111119, 0.5459449631827218, 0.5178093229021344, 0.5465723446437291, 0.5423146145684379, 0.5194022314889091, 0.505855883870806, 0.4848162276404245, 0.4887018884931292, 0.4901601927621024, 0.5259322438921247, 0.500359126499721, 0.48324460642678396], "val_accuracy": [0.5093333125114441, 0.6003333330154419, 0.6363333463668823, 0.6996666789054871, 0.6773333549499512, 0.7283333539962769, 0.7239999771118164, 0.7429999709129333, 0.7483333349227905, 0.7210000157356262, 0.746666669845581, 0.7599999904632568, 0.7456666827201843, 0.7480000257492065, 0.7576666474342346, 0.7583333253860474, 0.7833333611488342, 0.7829999923706055, 0.7736666798591614, 0.7480000257492065, 0.7666666507720947, 0.7639999985694885]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 8, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [3, 0, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [61, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2, 0], [30, 23, 13, 96, 41, 62]], "fitness": -0.6880000233650208, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1.9411243693924, 1.0912186484043356, 0.918110526870853, 0.7699685311509539, 0.6818454613097985, 0.6364667402235209, 0.6063929328813277, 0.5959225480409425, 0.5956155657059702, 0.5869895915990776, 0.547781123248672, 0.5465772272164025, 0.540296961846778, 0.5433773237047195, 0.5576665383351399, 0.5899322524345971, 0.6019476628684569, 0.6163131516953785, 0.6279901320420047], "accuracy": [0.33060362935066223, 0.6297714710235596, 0.6547351479530334, 0.7067758440971375, 0.739400327205658, 0.7516840696334839, 0.7646281719207764, 0.78113853931427, 0.7781006693840027, 0.789459764957428, 0.7991018295288086, 0.7980451583862305, 0.7988376617431641, 0.7996301651000977, 0.7984414100646973, 0.7921014428138733, 0.774270236492157, 0.7755910754203796, 0.774798572063446], "val_loss": [0.8607959747314453, 0.6840786763599941, 0.6245360204151699, 0.5525321449552264, 0.5027463776724679, 0.471509541784014, 0.45771498339516775, 0.44455707924706594, 0.4605180876595633, 0.4427386351994106, 0.4465939147131784, 0.4275774359703064, 0.4352960501398359, 0.44195696285792757, 0.44583538600376676, 0.4535342114312308, 0.49193899972098215, 0.5288645880562919, 0.4734051823616028], "val_accuracy": [0.6183333396911621, 0.6983333230018616, 0.7166666388511658, 0.753000020980835, 0.7739999890327454, 0.7876666784286499, 0.8009999990463257, 0.8076666593551636, 0.7923333048820496, 0.8166666626930237, 0.8183333277702332, 0.8119999766349792, 0.8163333535194397, 0.824999988079071, 0.8059999942779541, 0.8036666512489319, 0.8056666851043701, 0.7726666927337646, 0.8149999976158142]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 4, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [61, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2, 0], [30, 23, 13, 96, 41, 62]], "fitness": -0.5128571391105652, "mapping_values": [1, 5, 5, 3, 2, 1, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1.9555951174397306, 1.1998648246234325, 1.1783015169975797, 2.5367597583231123, 2953.307460670285, NaN, NaN, NaN], "accuracy": [0.32782986760139465, 0.5798441171646118, 0.589750349521637, 0.5522388219833374, 0.21965394914150238, 0.10342095047235489, 0.09998679161071777, 0.09998679161071777], "val_loss": [0.9886630603245327, 0.856702412877764, 0.855271748134068, 2.1343116079057967, 68601348.57142857, NaN, NaN, NaN], "val_accuracy": [0.6330000162124634, 0.6583333611488342, 0.6726666688919067, 0.22233332693576813, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [12, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 1, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [31, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2, 0], [30, 23, 13, 96, 41, 62]], "fitness": -0.45914286375045776, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303340021739814, 2.3000174114780028, 2.2981573239514037, 2.2989018337207936, 2.2955691750810727, 2.296414359150278, 2.2963829197352665, 2.2935828354222947, 2.294650668780471, 2.2932070448823403, 2.291753802206916, 2.2896346235634266, 2.2901229722357193, 2.288698912611601, 2.286143210585784, 2.2856016313993477, 2.2860523540235826, 2.2830979322414073, 2.28393012934735, 2.2816359579224614, 2.2811622901788526, 2.279213146337696, 2.2802787759536765, 2.2775808789269987, 2.276683102320403, 2.275710013123425, 2.272983801977399, 2.271999382024837, 2.2722214523512436, 2.2704546005025814, 2.2704453120661796, 2.2682315082660898, 2.267331074257537, 2.2663610348092442, 2.2655861269701836, 2.264039490657822, 2.261450860825008, 2.2625642646620254, 2.2615971744430534, 2.2603306401249847, 2.2583624648065332, 2.255802593966832, 2.2556499162323016, 2.2550721672689438, 2.2539723534168994, 2.253016067077109, 2.251370342699544, 2.249818502211253, 2.2488645882796083, 2.246686064697858, 2.2458832781659046, 2.2446180014105805, 2.243388810729023, 2.241761981944965, 2.241856993905872, 2.2387357206864835, 2.237657851609792, 2.2366868954891417, 2.2347213564736577, 2.2353492665835626, 2.231828711996808, 2.231028415491993, 2.2290907032406957, 2.2293590629861306, 2.227831789594143, 2.2267472741153846, 2.223620552822048, 2.220398309003754, 2.2218286039775403, 2.219137041843673, 2.2168159270094465, 2.215070891011865, 2.213316836896873, 2.211884285968765, 2.2081028122108974, 2.2095526803706567, 2.2063231952217794, 2.2062105247294506, 2.2030096058485893, 2.202573509138211, 2.2011178488020318, 2.199729844421963, 2.1964409700899297, 2.1959673433161493, 2.1945058915278444, 2.19055121663917, 2.1884756850024822, 2.1885323880323724, 2.184517246715428, 2.1843533606939247, 2.183597918121082, 2.1807429698228114, 2.178656269640829, 2.177027731996092, 2.1755716617097, 2.1719926224881, 2.168699267549506, 2.1665520119456065, 2.1640319815716174, 2.164990464032775], "accuracy": [0.09008057415485382, 0.09496764093637466, 0.10500594228506088, 0.09338264167308807, 0.10593052208423615, 0.10751552134752274, 0.1018359512090683, 0.11319508403539658, 0.10857218503952026, 0.11715757846832275, 0.11240258812904358, 0.12376172095537186, 0.12495046854019165, 0.12429005652666092, 0.1270637959241867, 0.12970545887947083, 0.13195087015628815, 0.13908334076404572, 0.13657376170158386, 0.14278165996074677, 0.14291374385356903, 0.15097081661224365, 0.14634791016578674, 0.15321621298789978, 0.1608770340681076, 0.1550653874874115, 0.1682736724615097, 0.16616034507751465, 0.16655659675598145, 0.17633073031902313, 0.17051908373832703, 0.17897239327430725, 0.17963281273841858, 0.18333113193511963, 0.1884823739528656, 0.1880861222743988, 0.2020869106054306, 0.19402985274791718, 0.19799233973026276, 0.19680359959602356, 0.20842689275741577, 0.2090873122215271, 0.20816272497177124, 0.2133139669895172, 0.2164839506149292, 0.21555937826633453, 0.2242768406867981, 0.2277110069990158, 0.23418307304382324, 0.23497556149959564, 0.22942808270454407, 0.228899747133255, 0.2362964004278183, 0.23418307304382324, 0.2483159452676773, 0.2413155436515808, 0.252938836812973, 0.24620261788368225, 0.24884428083896637, 0.2382776439189911, 0.25901466608047485, 0.2616563141345978, 0.2611279785633087, 0.2587504982948303, 0.26958128809928894, 0.2665433883666992, 0.2763175368309021, 0.27618545293807983, 0.2712983787059784, 0.2782987654209137, 0.2864879071712494, 0.28120461106300354, 0.29163914918899536, 0.28860124945640564, 0.30365869402885437, 0.2879408299922943, 0.28939375281333923, 0.29705455899238586, 0.30299827456474304, 0.29943203926086426, 0.3015453815460205, 0.3047153651714325, 0.3078853487968445, 0.31079116463661194, 0.3031303584575653, 0.3066965937614441, 0.3131686747074127, 0.31422534584999084, 0.3185840845108032, 0.31422534584999084, 0.32333904504776, 0.3167349100112915, 0.3210936486721039, 0.3275656998157501, 0.3255844712257385, 0.3288865387439728, 0.32981112599372864, 0.3431515097618103, 0.3365473449230194, 0.33179235458374023], "val_loss": [1.9704269000462122, 1.969407626560756, 1.9683929170880998, 1.9673899241856165, 1.9663897923060827, 1.9653844152178084, 1.9643960680280412, 1.9633979797363281, 1.9624052047729492, 1.961414405277797, 1.9604296003069197, 1.9594505173819405, 1.9584617614746094, 1.9574693952287947, 1.9564743723188127, 1.9554837771824427, 1.9544858932495117, 1.9534962517874581, 1.9525171688624792, 1.9515160833086287, 1.95051452091762, 1.949512004852295, 1.948511736733573, 1.9475107192993164, 1.9465125628880091, 1.9454913139343262, 1.9444730622427804, 1.9434565135410853, 1.9424358095441545, 1.9414081573486328, 1.9403704915727888, 1.9393325533185686, 1.9382895742143904, 1.9372344017028809, 1.9361777986798967, 1.935117244720459, 1.9340417725699288, 1.9329734529767717, 1.9319067001342773, 1.9308291162763322, 1.9297294616699219, 1.9286248343331474, 1.9275036539350237, 1.92639194216047, 1.9252660615103585, 1.9241257395063127, 1.9229740415300642, 1.921816076551165, 1.9206549099513464, 1.9194867270333427, 1.9183018548148019, 1.9171075139726912, 1.9158905574253626, 1.9146676744733537, 1.9134277616228377, 1.9121736798967635, 1.910919257572719, 1.9096520968845911, 1.9083585739135742, 1.9070661408560616, 1.9057472773960658, 1.904420988900321, 1.9030640465872628, 1.9017083304268974, 1.9003302710396903, 1.8989609309605189, 1.8975517409188407, 1.8961100578308105, 1.8946800913129533, 1.893228190285819, 1.891744545527867, 1.890251295907157, 1.8887288911002023, 1.8871934073311942, 1.8856203215462821, 1.884044987814767, 1.88243682043893, 1.880831241607666, 1.879199777330671, 1.8775455611092704, 1.8758581706455775, 1.8741623333522253, 1.8724363190787179, 1.8707043784005302, 1.8689570426940918, 1.8671582085745675, 1.865335532597133, 1.8635067258562361, 1.861640521458217, 1.859764507838658, 1.8578735079084123, 1.855933461870466, 1.8539742742265974, 1.8519970348903112, 1.849998610360282, 1.8479509353637695, 1.8458749907357352, 1.8437869889395577, 1.8416587284633092, 1.839517593383789], "val_accuracy": [0.04066666588187218, 0.04800000041723251, 0.0560000017285347, 0.06366666406393051, 0.07066666334867477, 0.07633333653211594, 0.08399999886751175, 0.09166666865348816, 0.09933333098888397, 0.10766666382551193, 0.11800000071525574, 0.12700000405311584, 0.14033333957195282, 0.1496666669845581, 0.16033333539962769, 0.17166666686534882, 0.1809999942779541, 0.18933333456516266, 0.20266667008399963, 0.21533332765102386, 0.22366666793823242, 0.23266667127609253, 0.24033333361148834, 0.24699999392032623, 0.25566667318344116, 0.26233333349227905, 0.27000001072883606, 0.27433332800865173, 0.2823333442211151, 0.2903333306312561, 0.29633334279060364, 0.30133333802223206, 0.3076666593551636, 0.312333345413208, 0.3179999887943268, 0.3213333189487457, 0.3233333230018616, 0.3310000002384186, 0.3343333303928375, 0.3370000123977661, 0.3413333296775818, 0.34333333373069763, 0.34933334589004517, 0.35366666316986084, 0.35733333230018616, 0.36033332347869873, 0.3619999885559082, 0.3643333315849304, 0.36666667461395264, 0.36800000071525574, 0.3696666657924652, 0.37166666984558105, 0.37533333897590637, 0.3786666691303253, 0.3799999952316284, 0.3803333342075348, 0.38100001215934753, 0.38333332538604736, 0.3876666724681854, 0.3883333206176758, 0.3893333375453949, 0.39100000262260437, 0.3930000066757202, 0.39366665482521057, 0.3973333239555359, 0.398333340883255, 0.40066665410995483, 0.4020000100135803, 0.4036666750907898, 0.40666666626930237, 0.40833333134651184, 0.41100001335144043, 0.4126666784286499, 0.41466665267944336, 0.4166666567325592, 0.4193333387374878, 0.42233332991600037, 0.42399999499320984, 0.42766666412353516, 0.4286666810512543, 0.4300000071525574, 0.4309999942779541, 0.43299999833106995, 0.43566668033599854, 0.43833333253860474, 0.4399999976158142, 0.44200000166893005, 0.4436666667461395, 0.445333331823349, 0.44733333587646484, 0.44999998807907104, 0.45133334398269653, 0.453000009059906, 0.45399999618530273, 0.45633333921432495, 0.45766666531562805, 0.45899999141693115, 0.46133333444595337, 0.4623333215713501, 0.46399998664855957]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 8, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 4, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [61, 37, 21, 97, 70, 57, 60, 9, 54, 64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [85.10375508026377, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03724738955497742, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [346302729.14285713, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 1, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [73, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [7, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2, 0, 3, 1, 0, 3, 0, 2, 0, 1, 3, 1, 0, 0, 2, 2, 3, 3, 2, 3, 0, 0, 2, 1, 2], [30, 23, 13, 96, 41, 62, 87, 50, 32, 43, 40]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 74, 43, 31, 11], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.add(tf.math.subtract(tf.math.pow(alpha, tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.multiply(tf.math.multiply(beta, beta), tf.math.subtract(tf.math.negative(tf.math.negative(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), alpha)))), tf.math.add(tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma), tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), beta), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.square(tf.math.pow(alpha, tf.math.multiply(sigma, tf.math.subtract(alpha, tf.math.negative(tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.negative(beta))))), sigma), sigma)))))))), tf.math.negative(beta))))))), sigma)), tf.math.divide_no_nan(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), beta), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 8, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [3, 1, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [73, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2, 1, 0, 0, 1, 3, 0, 1, 3, 3, 0, 1, 2, 2, 3, 0, 0, 2, 2, 2, 3, 1], [79, 34, 39, 96, 41, 89, 58, 81, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 67, 39, 28, 9], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(grad), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.math.pow(alpha, tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), beta), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.multiply(tf.math.multiply(beta, beta), tf.math.subtract(tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha))))), sigma), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), alpha)))), sigma), tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(tf.math.pow(tf.math.multiply(alpha, tf.math.subtract(beta, tf.math.negative(tf.math.pow(beta, sigma)))), tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.square(beta)), beta)))))))), beta), tf.math.sqrt(sigma)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [9, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 1, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [31, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 3, 1, 2, 3, 2, 0, 3, 2, 0, 1, 0, 3, 3, 1, 0, 1, 2], [30, 23, 13, 96, 41, 62, 49, 37]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 67, 39, 28, 8], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.math.pow(alpha, tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.multiply(tf.math.multiply(beta, beta), beta))), tf.math.subtract(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta))), tf.math.add(tf.math.add(beta, sigma), alpha))), tf.math.subtract(beta, tf.math.negative(sigma))), tf.math.square(beta)), tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.square(sigma)), tf.math.pow(tf.math.multiply(tf.math.subtract(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.sqrt(sigma))), sigma))), alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), alpha), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [3, 3, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [73, 37, 21, 97, 70, 57, 60, 9, 54, 64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [9, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2, 0], [79, 34, 39, 96, 41, 89, 58, 81, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304426751195353, 2.304023855224718, 2.3052170274752384, 2.3096748086770353, 2.3093256937782005, 2.3156337432259217, 2.320827268543276, 2.3232720460968563, 2.336808075758098, 2.351913591590713, 2.408838636855313, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08796724677085876, 0.08875974267721176, 0.0874389111995697, 0.08347642421722412, 0.08030643314123154, 0.07806102186441422, 0.07132479548454285, 0.080042265355587, 0.07687227427959442, 0.07898560166358948, 0.08109892904758453, 0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9726924896240234, 1.9743172781808036, 1.975900377546038, 1.978001526423863, 1.980046204158238, 1.9827658108302526, 1.9860309873308455, 1.9899101257324219, 1.9978279386247908, 2.015711239406041, 2.32298789705549, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02666666731238365, 0.02133333310484886, 0.023000000044703484, 0.024000000208616257, 0.023666666820645332, 0.03200000151991844, 0.050333332270383835, 0.06800000369548798, 0.08766666799783707, 0.09733333438634872, 0.09733333438634872, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 2, 4, 2, 9, 2, 6, 0, 4, 0, 2, 8, 0, 0, 5, 2, 2, 2, 0, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 1, 2, 2, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [73, 17, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), alpha)))), tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302420003995793, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [51, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [9, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 1, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [73, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [10190483189.783033, 1498602890496.0337, 25176696290791.316, 178081555534304.97, 784789698424736.2, 2620837712774966.0], "accuracy": [0.09774138033390045, 0.10447761416435242, 0.10579843819141388, 0.10355303436517715, 0.09919429570436478, 0.09668471664190292], "val_loss": [81198371401.14285, 4377084578084.5713, 46982248192877.71, 256136280276992.0, 959447739849581.8, 2830286734603995.5], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [3, 4, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [73, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2, 0], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.negative(grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3057647875633536, 2.3258040285759187, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08625016361474991, 0.07898560166358948, 0.08809932321310043, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9775731904166085, 2.0156384876796176, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.019999999552965164, 0.09533333033323288, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 1, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 8, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 1, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [73, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [8, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2, 0], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [82, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 1, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [31, 37, 21, 97, 70, 57, 60, 9, 54, 64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2, 0], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302420003995793, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [30, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 2, 4, 2, 9, 2, 6, 5, 4, 0, 2, 8, 5, 0, 5, 2, 2, 2, 0, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 0, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [73, 37, 21, 97, 70, 57, 60, 9, 54, 64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 0, 0, 2, 0, 2, 2, 0], [30, 23, 13, 96, 41, 62]], "fitness": -0.07571428269147873, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 2, 2, 2, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302781708756017, 2.299300918426685, 2.3001346534600016, 2.3020986389915437, 2.302387791759444, 2.302733706004584, 2.3032811900423407, 2.30393623660159, 2.3055979613819457, 2.3098620669937184], "accuracy": [0.09245806187391281, 0.10513802617788315, 0.09985470771789551, 0.08360850811004639, 0.08638224750757217, 0.11227050423622131, 0.10434553027153015, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9700623920985632, 1.9711993762425013, 1.9729767526899065, 1.9733340399605888, 1.9734928267342704, 1.9736796106610979, 1.9739845139639718, 1.9746894155229842, 1.9766644069126673, 1.983232021331787], "val_accuracy": [0.06533333659172058, 0.09166666865348816, 0.08533333241939545, 0.06733333319425583, 0.11100000143051147, 0.10266666859388351, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 1, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [73, 17, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [3, 7, 5, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 3, 0, 2, 3, 1, 1, 0, 0, 2, 2], [30, 87, 13, 96, 41, 62]], "fitness": -0.040571428835392, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(tf.math.square(sigma), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3037928099236105, 2.301577861802516, 2.300812659309588, 2.3026323581116626, 2.300375485259623, 2.3023382015452487], "accuracy": [0.08955223858356476, 0.09166556596755981, 0.09774138033390045, 0.08598599582910538, 0.09430722147226334, 0.09206181764602661], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [56, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 1, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [73, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [3, 0, 0, 2, 0, 2, 2, 0], [79, 34, 39, 96, 41, 89, 58, 81, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3037928099236105, 2.301577861802516, 2.300812659309588, 2.3026323581116626, 2.300375485259623, 2.3023382015452487], "accuracy": [0.08955223858356476, 0.09166556596755981, 0.09774138033390045, 0.08598599582910538, 0.09430722147226334, 0.09206181764602661], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 8, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [3, 1, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [73, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [2, 0, 0, 2, 0, 2, 2, 0], [30, 23, 13, 96, 41, 62]], "fitness": -0.04028571397066116, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3038518630659985, 2.3017945594759888, 2.301192367050106, 2.3032232949195555, 2.3010434570282268, 2.303282615861652], "accuracy": [0.08902391046285629, 0.09140139818191528, 0.09681680053472519, 0.08532558381557465, 0.09272222965955734, 0.09034473448991776], "val_loss": [1.9715534618922643, 1.9716932432992118, 1.9718373162405831, 1.9719794137137276, 1.9720982824053084, 1.9722446714128767], "val_accuracy": [0.03333333507180214, 0.03133333474397659, 0.030666666105389595, 0.030666666105389595, 0.029999999329447746, 0.03033333271741867]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 1, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [73, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [2, 0, 0, 2, 0, 2, 2, 0], [30, 23, 13, 96, 41, 62]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.negative(alpha), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3038487457690566, 2.302187452762197, 2.302537038798314, 2.3059890273382257, 2.304952730639358, 2.3093428767006143], "accuracy": [0.08915598690509796, 0.09113723784685135, 0.09377889335155487, 0.08426892012357712, 0.08638224750757217, 0.08149518072605133], "val_loss": [1.9716614995683943, 1.9724440574645996, 1.9735539300101144, 1.9749181611197335, 1.9762860706874303, 1.9778800691877092], "val_accuracy": [0.03166666626930237, 0.028999999165534973, 0.023666666820645332, 0.020666666328907013, 0.019333332777023315, 0.019333332777023315]}}]