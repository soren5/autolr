[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.6017143130302429, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.3023813206049524, 2.299093402970374, 2.2991017212311604, 2.2947375377281674, 2.2932682823369595, 2.2886165573675368, 2.2871998034731553, 2.284189324573582, 2.2837171372862195, 2.280543184204817, 2.2786774911176355, 2.2773533510478448, 2.273658794544912, 2.271078168912854, 2.2670791389730867, 2.265792252569938, 2.2627418016036427, 2.2613169921781284, 2.259486978930442, 2.257395629916823, 2.2530739162229922, 2.2508686081986182, 2.248381816511062, 2.2447035278642278, 2.2399022240034734, 2.239186045862444, 2.2368749176522194, 2.23324126908178, 2.23033749047933, 2.2257724928109557, 2.222226945085769, 2.2191652898003698, 2.215797597863466, 2.2126770058580125, 2.2081739661589967, 2.202885419779828, 2.200899976891077, 2.1968828840750776, 2.1944270187821826, 2.188093771724779, 2.1837564326233285, 2.1797254875335774, 2.1753079408447364, 2.169980204824947, 2.165999420409378, 2.1610789762874085, 2.1538534914230105, 2.1500419106985427, 2.1437209845061598, 2.1381897836896044, 2.1330817467847347, 2.123007642626054, 2.1186543852189246, 2.115932279274905, 2.10637752676936, 2.099584613761504, 2.092706553987335, 2.085690642706927, 2.077363640357317, 2.071802853624724, 2.0655221458848723, 2.052697055013251, 2.0483970722077056, 2.0390721807201477, 2.029982828272017, 2.018013040481888, 2.0124282030743723, 2.0038564464970667, 1.9903759451716128, 1.9860689639257891, 1.9766820442281332, 1.9692247007280812, 1.9541514609326398, 1.9466911730056489, 1.9369968662581911, 1.9187332169097318, 1.9141063608308873, 1.9016488434820915, 1.8979969879324725, 1.8824316332479116, 1.8684338232498159, 1.8568145744300806, 1.8488920448384092, 1.8316485527688802, 1.8152509884134558, 1.805877013339374, 1.8044373120110284, 1.7883943150528765, 1.7764238871760956, 1.7643934189761556, 1.7505747758953278, 1.7369428343855395, 1.7274817342314785, 1.7139417493285094, 1.7044332208193809, 1.6907836477344913, 1.6776117221192126, 1.6651147814821086, 1.6556433246844575, 1.6519863888603616], "accuracy": [0.08836349099874496, 0.09602430462837219, 0.0956280529499054, 0.10830801725387573, 0.11147800832986832, 0.13129045069217682, 0.12455421686172485, 0.137630432844162, 0.13512085378170013, 0.1418570876121521, 0.15453705191612244, 0.1628582775592804, 0.16880200803279877, 0.1694624274969101, 0.18676528334617615, 0.18716153502464294, 0.19601109623908997, 0.1946902722120285, 0.20604939758777618, 0.20974771678447723, 0.21621978282928467, 0.22652225196361542, 0.22572976350784302, 0.23035265505313873, 0.24620261788368225, 0.24686303734779358, 0.2541275918483734, 0.25624093413352966, 0.260071337223053, 0.2727513015270233, 0.27684587240219116, 0.27724209427833557, 0.28080835938453674, 0.2802800238132477, 0.29824328422546387, 0.3053757846355438, 0.30722492933273315, 0.3078853487968445, 0.308149516582489, 0.3163386583328247, 0.3237352967262268, 0.3255844712257385, 0.32664114236831665, 0.33403778076171875, 0.33681151270866394, 0.34064191579818726, 0.34500065445899963, 0.34341567754745483, 0.3537181317806244, 0.3547748029232025, 0.3590014576911926, 0.37326639890670776, 0.37181350588798523, 0.3687755763530731, 0.3755118250846863, 0.37828555703163147, 0.3829084634780884, 0.3827763795852661, 0.38502180576324463, 0.3932109475135803, 0.37802138924598694, 0.3953242599964142, 0.3963809311389923, 0.4091929793357849, 0.39783385396003723, 0.41368380188941956, 0.4103817343711853, 0.41606128215789795, 0.41262713074684143, 0.4169858694076538, 0.4093250632286072, 0.41804254055023193, 0.433760404586792, 0.42570334672927856, 0.4275524914264679, 0.4423457980155945, 0.43059042096138, 0.43785497546195984, 0.43864747881889343, 0.4383833110332489, 0.44327038526535034, 0.4485536813735962, 0.4447232782840729, 0.44749704003334045, 0.46070531010627747, 0.45383700728416443, 0.4585919976234436, 0.4600449204444885, 0.4613657295703888, 0.4571390748023987, 0.4663848876953125, 0.4663848876953125, 0.4702152907848358, 0.47153612971305847, 0.47549861669540405, 0.47946110367774963, 0.4876502454280853, 0.481838583946228, 0.48170650005340576, 0.48289525508880615], "val_loss": [1.9683756147112166, 1.9661414963858468, 1.963925838470459, 1.9617340905325753, 1.9595631871904646, 1.9573611531938826, 1.9551769665309362, 1.9529941422598702, 1.9508097512381417, 1.9486402784075056, 1.946409021105085, 1.944169248853411, 1.9419129916599818, 1.9396371841430664, 1.9373508862086706, 1.935011386871338, 1.9326534952436174, 1.930248601096017, 1.9278221130371094, 1.925360815865653, 1.9228358949933733, 1.9202568190438407, 1.9176515170506068, 1.9149834087916784, 1.912229333605085, 1.909428255898612, 1.9065476145063127, 1.903639316558838, 1.9006517274039132, 1.8975738797869002, 1.8943884713309151, 1.8911152567182268, 1.8877949714660645, 1.8843676022120885, 1.88083096912929, 1.8771937915257044, 1.8734923090253557, 1.8696873528616769, 1.8657642773219518, 1.861685139792306, 1.8574792998177665, 1.8531974383762904, 1.8487935066223145, 1.8442649160112654, 1.8395683424813407, 1.8347738810947962, 1.8297763551984514, 1.8246699741908483, 1.819375719342913, 1.813908236367362, 1.8083220209394182, 1.802483354296003, 1.7965328352791923, 1.7904932839529855, 1.7842164720807756, 1.777768271309989, 1.7711546080453056, 1.7643593379429408, 1.7573719024658203, 1.7502155303955078, 1.7429865428379603, 1.7353756768362862, 1.727698734828404, 1.719804286956787, 1.7116882801055908, 1.703332049506051, 1.6948215961456299, 1.6861398560660226, 1.677140542439052, 1.6680529458182198, 1.6588613305773054, 1.6494577612195696, 1.6397689070020403, 1.6300089699881417, 1.62003265108381, 1.6097093309674944, 1.5993034158434187, 1.5887691634041923, 1.5782735347747803, 1.5675018174307687, 1.5565563951219832, 1.5454046385628837, 1.534292425428118, 1.5228475502559118, 1.5112457956586565, 1.4996381827763148, 1.4880393573216029, 1.4764011587415422, 1.4647560800824846, 1.4531703335898263, 1.441336018698556, 1.4294720717838831, 1.4175783225468226, 1.4056693485804967, 1.3938193661825997, 1.3818931238991874, 1.3700145312717982, 1.3582655702318465, 1.3464653491973877, 1.3349696908678328], "val_accuracy": [0.052000001072883606, 0.06733333319425583, 0.08533333241939545, 0.0989999994635582, 0.1223333328962326, 0.1446666717529297, 0.16466666758060455, 0.1899999976158142, 0.2133333384990692, 0.23133333027362823, 0.25066667795181274, 0.2683333456516266, 0.28566667437553406, 0.30266666412353516, 0.31433331966400146, 0.3293333351612091, 0.3383333384990692, 0.3466666638851166, 0.3529999852180481, 0.3580000102519989, 0.36533331871032715, 0.37400001287460327, 0.38100001215934753, 0.38499999046325684, 0.3883333206176758, 0.390666663646698, 0.39366665482521057, 0.40066665410995483, 0.40299999713897705, 0.406333327293396, 0.4090000092983246, 0.4153333306312561, 0.4180000126361847, 0.42399999499320984, 0.4273333251476288, 0.4320000112056732, 0.43566668033599854, 0.43799999356269836, 0.4413333237171173, 0.4440000057220459, 0.44699999690055847, 0.4490000009536743, 0.45233333110809326, 0.45766666531562805, 0.4596666693687439, 0.4620000123977661, 0.46666666865348816, 0.4699999988079071, 0.4749999940395355, 0.47866666316986084, 0.48100000619888306, 0.4833333194255829, 0.4866666793823242, 0.4883333444595337, 0.49033331871032715, 0.492333322763443, 0.4946666657924652, 0.49566665291786194, 0.4970000088214874, 0.4986666738986969, 0.5006666779518127, 0.503333330154419, 0.5066666603088379, 0.5080000162124634, 0.5106666684150696, 0.5149999856948853, 0.5180000066757202, 0.5196666717529297, 0.5220000147819519, 0.5230000019073486, 0.5239999890327454, 0.5243333578109741, 0.5256666541099548, 0.5270000100135803, 0.5289999842643738, 0.5306666493415833, 0.5336666703224182, 0.5353333353996277, 0.5356666445732117, 0.5383333563804626, 0.5423333048820496, 0.543666660785675, 0.5460000038146973, 0.5479999780654907, 0.5490000247955322, 0.5503333210945129, 0.5516666769981384, 0.5553333163261414, 0.5590000152587891, 0.5613333582878113, 0.562666654586792, 0.5633333325386047, 0.5649999976158142, 0.5673333406448364, 0.5686666369438171, 0.5696666836738586, 0.5726666450500488, 0.5743333101272583, 0.574999988079071, 0.5786666870117188]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.6017143130302429, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(beta, grad))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.3023813206049524, 2.2990933399883167, 2.299101739212538, 2.2947375242185157, 2.2932682508459306, 2.288616525876508, 2.287199834964184, 2.284189324573582, 2.2837171057951906, 2.280543184204817, 2.2786774911176355, 2.2773533825388736, 2.273658794544912, 2.2710781059307963, 2.2670791074820578, 2.265792252569938, 2.2627418016036427, 2.2613169921781284, 2.259486992440093, 2.257395566934765, 2.2530739162229922, 2.2508685767075893, 2.2483819109841487, 2.244703590846285, 2.2399022734758796, 2.239186203317588, 2.236874980634277, 2.23324126908178, 2.2303375219703585, 2.2257725917557685, 2.2222269810485233, 2.2191654022548333, 2.2157976113731173, 2.212677100331099, 2.208174015631403, 2.2028854827618853, 2.2009000263634833, 2.1968829155661065, 2.1944271942187044, 2.188093839178563, 2.1837565270964148, 2.1797256944611276, 2.17530800829852, 2.16998039377112, 2.1659996588279573, 2.1610791967246104, 2.1538537478229673, 2.150042248061934, 2.1437213173978256, 2.1381900041268063, 2.1330819357309077, 2.1230078315722265, 2.1186546686381837, 2.115932553656239, 2.1063780665885754, 2.0995850591076333, 2.092706877841075, 2.08569099357997, 2.077364184648259, 2.0718030965150294, 2.0655223033400163, 2.052697311413208, 2.0483975086103827, 2.03907227966496, 2.0299830666905962, 2.0180132653908154, 2.0124284414929514, 2.003856450968793, 1.9903760081536703, 1.9860691663816132, 1.9766826132552782, 1.9692251055924932, 1.954151901807043, 1.946691458660771, 1.9369969719578293, 1.9187334215541825, 1.9141065655225744, 1.90164901668275, 1.8979971678407201, 1.8824317884671926, 1.8684340886876978, 1.8568145406559522, 1.848892508165916, 1.8316486495250661, 1.81525100644207, 1.805876752514928, 1.8044373457851568, 1.7883946771524712, 1.776424080641231, 1.7643936844140373, 1.7505751492214745, 1.7369432617502913, 1.7274824742706554, 1.7139422869590988, 1.7044340102837274, 1.690784160581641, 1.677612497979435, 1.6651153190654613, 1.6556442873494626, 1.651987376356043], "accuracy": [0.08836349099874496, 0.09602430462837219, 0.0956280529499054, 0.10830801725387573, 0.11147800832986832, 0.13129045069217682, 0.12455421686172485, 0.137630432844162, 0.13512085378170013, 0.1418570876121521, 0.15453705191612244, 0.1628582775592804, 0.16880200803279877, 0.1694624274969101, 0.18676528334617615, 0.18716153502464294, 0.19601109623908997, 0.1946902722120285, 0.20604939758777618, 0.20974771678447723, 0.21621978282928467, 0.22652225196361542, 0.22572976350784302, 0.23035265505313873, 0.24620261788368225, 0.24686303734779358, 0.2541275918483734, 0.25624093413352966, 0.260071337223053, 0.2727513015270233, 0.27684587240219116, 0.27724209427833557, 0.28080835938453674, 0.2802800238132477, 0.29824328422546387, 0.3053757846355438, 0.30722492933273315, 0.3078853487968445, 0.308149516582489, 0.3163386583328247, 0.3237352967262268, 0.3255844712257385, 0.32664114236831665, 0.33403778076171875, 0.33681151270866394, 0.34064191579818726, 0.34500065445899963, 0.34341567754745483, 0.3537181317806244, 0.3547748029232025, 0.3590014576911926, 0.37326639890670776, 0.37181350588798523, 0.3687755763530731, 0.3755118250846863, 0.37828555703163147, 0.3829084634780884, 0.3827763795852661, 0.38502180576324463, 0.3932109475135803, 0.37802138924598694, 0.3953242599964142, 0.3963809311389923, 0.40906089544296265, 0.39783385396003723, 0.41368380188941956, 0.4103817343711853, 0.41606128215789795, 0.41262713074684143, 0.4169858694076538, 0.4093250632286072, 0.41804254055023193, 0.433760404586792, 0.42570334672927856, 0.4275524914264679, 0.4423457980155945, 0.43059042096138, 0.43811914324760437, 0.43864747881889343, 0.4383833110332489, 0.44327038526535034, 0.44868576526641846, 0.4447232782840729, 0.44749704003334045, 0.46070531010627747, 0.45383700728416443, 0.4585919976234436, 0.45991283655166626, 0.4613657295703888, 0.4571390748023987, 0.4663848876953125, 0.4663848876953125, 0.4702152907848358, 0.47153612971305847, 0.47549861669540405, 0.47946110367774963, 0.4876502454280853, 0.481838583946228, 0.48170650005340576, 0.4826310873031616], "val_loss": [1.9683756828308105, 1.9661414963858468, 1.963925838470459, 1.9617340905325753, 1.9595631871904646, 1.9573611531938826, 1.955176898411342, 1.9529941422598702, 1.9508096831185477, 1.9486402784075056, 1.946409021105085, 1.944169248853411, 1.941913059779576, 1.9396371160234724, 1.9373508862086706, 1.935011386871338, 1.9326534952436174, 1.930248601096017, 1.9278219767979212, 1.9253606796264648, 1.9228358949933733, 1.9202567509242467, 1.9176513808114188, 1.9149833406720842, 1.9122294698442732, 1.9094284602573939, 1.906547682625907, 1.903639316558838, 1.9006518636431013, 1.8975738797869002, 1.8943886756896973, 1.891115324837821, 1.8877951077052526, 1.8843677384512765, 1.8808311053684779, 1.8771937915257044, 1.8734923771449499, 1.8696873528616769, 1.8657644135611398, 1.8616852079119002, 1.8574793679373605, 1.8531975746154785, 1.8487937791006905, 1.8442653247288294, 1.8395684787205286, 1.8347740854535783, 1.8297765595572335, 1.8246702466692244, 1.8193761961800712, 1.8139087813241142, 1.8083222252982003, 1.8024835586547852, 1.7965329715183802, 1.7904937607901437, 1.784217017037528, 1.777768543788365, 1.7711550167628698, 1.764359814780099, 1.7573722430637904, 1.750215666634696, 1.7429868153163366, 1.7353760174342565, 1.7276989391871862, 1.7198045594351632, 1.711688416344779, 1.7033321516854423, 1.6948215961456299, 1.6861399241856165, 1.677140542439052, 1.668053320475987, 1.6588617052350725, 1.6494580336979456, 1.6397691454206194, 1.6300090721675329, 1.6200329235621862, 1.6097093990870885, 1.5993033477238245, 1.5887690952845983, 1.5782735347747803, 1.5675017833709717, 1.5565564632415771, 1.5454044342041016, 1.534292221069336, 1.5228473799569267, 1.5112452507019043, 1.4996375356401717, 1.4880387442452567, 1.476400579724993, 1.4647554329463415, 1.4531701632908411, 1.44133574622018, 1.4294722761426653, 1.4175783566066198, 1.4056692123413086, 1.393819740840367, 1.3818931579589844, 1.3700146675109863, 1.3582660470690047, 1.3464662347521101, 1.334970542362758], "val_accuracy": [0.052000001072883606, 0.06733333319425583, 0.08533333241939545, 0.0989999994635582, 0.1223333328962326, 0.1446666717529297, 0.16466666758060455, 0.1899999976158142, 0.2133333384990692, 0.23133333027362823, 0.25066667795181274, 0.2683333456516266, 0.28566667437553406, 0.30266666412353516, 0.31433331966400146, 0.3293333351612091, 0.3383333384990692, 0.3466666638851166, 0.3529999852180481, 0.3580000102519989, 0.36533331871032715, 0.37400001287460327, 0.38100001215934753, 0.38499999046325684, 0.3883333206176758, 0.390666663646698, 0.39366665482521057, 0.40066665410995483, 0.40299999713897705, 0.406333327293396, 0.4090000092983246, 0.4153333306312561, 0.4180000126361847, 0.42399999499320984, 0.4273333251476288, 0.4320000112056732, 0.43566668033599854, 0.43799999356269836, 0.4413333237171173, 0.4440000057220459, 0.44699999690055847, 0.4490000009536743, 0.45233333110809326, 0.45766666531562805, 0.4596666693687439, 0.4620000123977661, 0.46666666865348816, 0.4699999988079071, 0.4749999940395355, 0.47866666316986084, 0.48100000619888306, 0.4833333194255829, 0.4866666793823242, 0.4883333444595337, 0.49033331871032715, 0.492333322763443, 0.4946666657924652, 0.49566665291786194, 0.4970000088214874, 0.4986666738986969, 0.5006666779518127, 0.503333330154419, 0.5066666603088379, 0.5080000162124634, 0.5106666684150696, 0.5149999856948853, 0.5180000066757202, 0.5196666717529297, 0.5220000147819519, 0.5230000019073486, 0.5239999890327454, 0.5243333578109741, 0.5256666541099548, 0.5270000100135803, 0.5289999842643738, 0.5306666493415833, 0.5336666703224182, 0.5353333353996277, 0.5353333353996277, 0.5383333563804626, 0.5423333048820496, 0.543666660785675, 0.5460000038146973, 0.5479999780654907, 0.5490000247955322, 0.5503333210945129, 0.5516666769981384, 0.5553333163261414, 0.5590000152587891, 0.5613333582878113, 0.562666654586792, 0.5633333325386047, 0.5649999976158142, 0.5673333406448364, 0.5686666369438171, 0.5696666836738586, 0.5726666450500488, 0.5743333101272583, 0.574999988079071, 0.5786666870117188]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1], [6, 8, 6, 6, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.11428571492433548, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.301911413960878, 2.3008775126271166, 2.3020401888708664, 2.3024372878784454, 2.30256585759289, 2.302587284340819, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.08638224750757217, 0.09972262382507324, 0.1010434553027153, 0.1022322028875351, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.971045970916748, 1.9728281157357352, 1.9735138075692313, 1.97364228112357, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09666666388511658, 0.0949999988079071, 0.11666666716337204, 0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1], [6, 8, 6, 6, 5, 7, 3, 9], [2, 1, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [1, 3, 9, 0, 0, 0, 9, 1, 6, 5, 2, 5, 1, 6, 6, 3, 3, 6, 1, 9], [0, 2, 2, 2, 2, 2, 1, 1, 0, 3, 3], [16, 19, 2, 99]], "fitness": -0.10457143187522888, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 8, 7, 1, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.301846166596106, 2.3023628606268476, 2.302584954004687, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09219389408826828, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9733219827924455, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10499999672174454, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1], [3, 8, 2, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [1, 3, 9, 8, 0, 0, 1, 6, 6, 5, 2, 5, 1, 6, 3, 3, 3, 6, 1, 9], [3, 1, 2, 0, 3, 1, 2, 3, 2, 1, 2, 1], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 32, 20, 12, 3], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(sigma), tf.math.add(tf.math.square(alpha), tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, alpha))), beta), sigma), tf.math.subtract(beta, alpha)))), beta), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 3, 3, 1, 0, 0, 0], [31], [0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1], [6, 2, 6, 6, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 3, 0, 6, 0], [0, 1, 3, 3], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030792371928497, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 3, 9, 6, 0], [3, 0, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [4.808159271424646, 27.726211555913267, 84.44826820060136, 183.883039749341, 341.04969110616116, 584.6094311336406], "accuracy": [0.09694888442754745, 0.10487385839223862, 0.09628847241401672, 0.09985470771789551, 0.10302469879388809, 0.09998679161071777], "val_loss": [8.697461536952428, 33.7200677054269, 83.1597159249442, 165.5571550641741, 290.6010219029018, 469.24928501674106], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 3, 9, 6, 0, 6, 2, 2, 1, 1, 3, 9, 8, 9, 7, 1, 1, 6, 8, 0, 9, 0, 3, 9, 5, 1, 2, 1, 3, 3, 7, 8, 3, 9, 7, 0, 5, 8, 7, 8, 8, 4, 1, 8, 7, 3, 2], [3, 1, 2, 3, 2, 0, 3, 0, 1, 3, 2, 0, 0, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2], [16, 52, 25, 5, 52, 84, 96, 20, 66, 69, 69, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 70, 47, 23, 12], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.subtract(tf.math.subtract(sigma, tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.sqrt(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.subtract(beta, tf.math.subtract(sigma, tf.math.divide_no_nan(beta, tf.math.sqrt(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), sigma)), tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), alpha)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(sigma, tf.math.add(beta, tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(alpha)))), tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), sigma)), tf.math.pow(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(alpha, beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, beta)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 3, 6], [2, 0, 1, 0, 3, 1, 0, 0, 2, 2, 3, 1, 1], [31, 77, 37, 57], [1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1], [9, 8, 5, 0, 5, 7, 3, 9], [3, 3, 5, 4, 1], [86], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 1, 1], [1, 0, 9, 6, 0], [0, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [1.7224756691701434e+25, 2.0222486542671362e+25, 2.0277381143853313e+25, 1.9672215780642867e+25, 2.0332919974303465e+25, 2.0301434845350315e+25], "accuracy": [0.09126931428909302, 0.1002509593963623, 0.09853387624025345, 0.09866596013307571, 0.09694888442754745, 0.09694888442754745], "val_loss": [1.5806856552406367e+25, 1.5807111842168102e+25, 1.5807368778960556e+25, 1.5807623409910003e+25, 1.580788199373318e+25, 1.580813695408877e+25], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 6, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [1, 1, 0, 0, 0], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(beta, tf.math.add(grad, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.9634987219182013e+24, 7.7580992040255, 14.941461947300903, 22.136817378642583, 29.33177835234971, 36.54062458200068], "accuracy": [0.08241976052522659, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.178267342703683, 10.268117359706334, 16.440406799316406, 22.610759735107422, 28.794645036969865, 34.97339085170201], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [0, 8, 6, 0, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 3, 9, 6, 0], [2, 2, 3, 1, 3, 3, 3], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.8619919982581986e+25, 45.3798607425793, 144.46512741917206, 301.2118856127488, 515.9504278684573, 787.3886001983954], "accuracy": [0.08189142495393753, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16.274782998221262, 80.97487313406808, 195.14021519252233, 358.64278738839283, 571.3733607700893, 833.5809849330357], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1], [4, 8, 6, 6, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [89, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 8, 6, 5, 0, 7, 3, 9, 3], [2, 3, 5, 4, 1], [25], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [1, 3, 9, 0, 9, 0, 9, 4, 6, 3, 2, 5, 1, 6, 2, 3, 1, 6, 1, 9], [3, 0, 2, 0, 2, 3, 3, 2, 0, 0, 1], [9, 52, 13, 93, 98, 12, 51]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 1, 3, 1, 1, 0, 0, 6, 5, 1, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))))))), tf.math.multiply(tf.math.add(beta, grad), grad)))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), sigma), tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3030792371928497, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1], [3, 8, 2, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 3, 9, 6, 0], [1, 2, 2, 2, 0, 2, 1, 1, 0, 3, 3], [9, 52, 13, 93, 98, 12, 51]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 1, 1], [6, 8, 6, 6, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 3, 9, 6, 0], [2, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [1.9635224777965157e+24, 7.7580992040255, 14.941462073265019, 22.136817126714355, 29.33177860427794, 36.54062458200068], "accuracy": [0.08241976052522659, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.178267342703683, 10.268117359706334, 16.440406799316406, 22.610759735107422, 28.794645036969865, 34.97339085170201], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 3, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1], [6, 8, 0, 5, 5, 7, 3, 9], [3, 1, 5, 4, 1], [25], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 1, 1, 1], [1, 6, 9, 6, 0, 0, 9, 1, 6, 2, 2, 5, 1, 6, 2, 5, 9, 1, 1, 9], [0, 1, 2], [16, 52, 13, 93, 33, 12, 51]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3030792371928497, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [1, 3, 9, 6, 0, 5, 3, 4, 1, 3, 6, 5, 4, 1, 5, 4, 3, 8, 9, 3], [3, 1, 2, 3, 0, 1, 3, 3, 1, 0, 1, 0], [16, 52, 13, 68, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 32, 20, 12, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(grad))))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.math.negative(tf.math.square(alpha)))), tf.math.multiply(tf.math.pow(tf.math.subtract(beta, sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.square(alpha), sigma), tf.math.pow(tf.math.subtract(tf.math.square(tf.math.pow(sigma, tf.math.multiply(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1], [3, 8, 2, 5, 5, 7, 3, 9], [3, 1, 5, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 3, 9, 0, 0, 0, 8, 3, 6, 5, 2, 5, 1, 6, 2, 3, 3, 6, 1, 9, 8], [1, 2, 2, 2, 0, 2, 1, 2, 0, 3, 3], [9, 52, 13, 93, 98, 12, 51]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 32, 21, 11, 4], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, beta)), tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, alpha))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), beta), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), sigma))))))))), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1], [9, 8, 2, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [43], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [1, 1, 0, 0, 1], [1, 2, 6, 6, 0, 3, 5, 9], [3, 1, 2], [16, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303364152087039, 2.3025063183234904, 2.3049088774922817, 2.302880531918686, 2.3036357490787447, 2.301555490386705], "accuracy": [0.08625016361474991, 0.08849557489156723, 0.08387266844511032, 0.08796724677085876, 0.0866464152932167, 0.09734513610601425], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [1, 1, 0, 1, 1], [1, 6, 9, 6, 0, 0, 9, 1, 6, 2, 2, 5, 1, 6, 2, 5, 9, 1, 1, 9], [3, 3, 2, 1, 0, 2, 2, 3, 3, 1, 1], [16, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303364152087039, 2.3025063183234904, 2.3049088774922817, 2.302880531918686, 2.3036357490787447, 2.301555490386705], "accuracy": [0.08625016361474991, 0.08849557489156723, 0.08387266844511032, 0.08796724677085876, 0.0866464152932167, 0.09734513610601425], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]