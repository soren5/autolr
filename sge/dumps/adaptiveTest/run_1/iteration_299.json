[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8251428604125977, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0903889779102345, 1.1602297849690422, 0.8558250968844553, 0.7483700012974909, 0.6770369199446211, 0.6256374097487647, 0.5921650032372979, 0.5526684541169128, 0.5302763339188656, 0.5157173139276505, 0.4881791374340443, 0.4807364772992946, 0.46801377437873964, 0.44774596356696866, 0.43127324183257093, 0.4206646505072605, 0.4026318098048272, 0.38702255820066006, 0.3890477867253059, 0.36928635769122786, 0.36128648336553115, 0.34935773728608993, 0.33904983256597243, 0.342237452501949, 0.32186107015282234, 0.3129539441131818, 0.3107543521159833, 0.3120902531206206, 0.294447396846574, 0.2938783566248872, 0.28315131572715957, 0.2720516441032446, 0.2752744610700719, 0.2660971119096487, 0.2591699790275958, 0.25451157805453895, 0.2463059218005261, 0.24267662970098003, 0.23856212076312908, 0.2366726120284142, 0.22797779537163643, 0.22273133684497357, 0.21562774335120916], "accuracy": [0.30141329765319824, 0.5884295105934143, 0.6826046705245972, 0.7195879220962524, 0.7453441023826599, 0.7671377658843994, 0.7770439982414246, 0.7943468689918518, 0.8010830879211426, 0.8087438941001892, 0.8187822103500366, 0.8215559124946594, 0.8222163319587708, 0.8370096683502197, 0.8383304476737976, 0.8416325449943542, 0.8486329317092896, 0.8568220734596252, 0.8569541573524475, 0.860652506351471, 0.863029956817627, 0.8693699836730957, 0.8713511824607849, 0.8710870146751404, 0.8771628737449646, 0.8798044919967651, 0.8844274282455444, 0.882710337638855, 0.8868049383163452, 0.8897107243537903, 0.8932769894599915, 0.89552241563797, 0.898428201675415, 0.8975036144256592, 0.902390718460083, 0.9022586345672607, 0.904768168926239, 0.9062210917472839, 0.9085986018180847, 0.9100515246391296, 0.9105798602104187, 0.91124027967453, 0.9163914918899536], "val_loss": [1.0536178861345564, 0.7032108988080706, 0.5821347747530256, 0.5337543487548828, 0.49540259156908306, 0.4756793635232108, 0.4482339790889195, 0.4343045439038958, 0.4246167114802769, 0.4071001410484314, 0.39484815086637226, 0.3850601315498352, 0.37991561208452496, 0.36053469351359774, 0.35475121225629536, 0.3456492934908186, 0.3439382995877947, 0.3395972422191075, 0.3390645129340036, 0.3349704997880118, 0.33648307834352764, 0.3338469352040972, 0.32423276560647146, 0.3242001874106271, 0.3220553398132324, 0.32575258186885286, 0.32275980710983276, 0.32259499175207956, 0.31538822821208407, 0.3162539175578526, 0.3079126136643546, 0.31986341306141447, 0.3099733165332249, 0.313326358795166, 0.31871533393859863, 0.3158244490623474, 0.3162371175629752, 0.3121864710535322, 0.31239705426352365, 0.31455564498901367, 0.3178043024880545, 0.3262400882584708, 0.31229668855667114], "val_accuracy": [0.6169999837875366, 0.7073333263397217, 0.7356666922569275, 0.7710000276565552, 0.7839999794960022, 0.7919999957084656, 0.8029999732971191, 0.8050000071525574, 0.8173333406448364, 0.8199999928474426, 0.8360000252723694, 0.8396666646003723, 0.8420000076293945, 0.8503333330154419, 0.856333315372467, 0.8583333492279053, 0.8583333492279053, 0.8583333492279053, 0.856333315372467, 0.8600000143051147, 0.859000027179718, 0.8643333315849304, 0.8700000047683716, 0.8663333058357239, 0.8706666827201843, 0.8669999837875366, 0.8706666827201843, 0.8743333220481873, 0.8683333396911621, 0.8736666440963745, 0.8773333430290222, 0.8676666617393494, 0.8740000128746033, 0.8733333349227905, 0.8793333172798157, 0.8740000128746033, 0.875, 0.8820000290870667, 0.8743333220481873, 0.8790000081062317, 0.8786666393280029, 0.8799999952316284, 0.8786666393280029]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 3, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [61, 6, 5, 96, 41]], "fitness": -0.7151428461074829, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.024379219345649, 1.2498089294580972, 0.9402974099688416, 0.8553822499854516, 0.7318309768945818, 0.6514651028314177, 0.6015707102071938, 0.5957257747256509, 0.5701300474662413, 0.5645490523342601, 0.532423842899583, 0.5167844758341105, 0.5285820829129853, 0.5173363558502245, 0.5135257849840047, 0.5230505050937057, 0.5466138942366688, 0.5683687580275797], "accuracy": [0.31686699390411377, 0.5889578461647034, 0.6601505875587463, 0.6848500967025757, 0.713908314704895, 0.7519482374191284, 0.7754589915275574, 0.7720248103141785, 0.791969358921051, 0.7893276810646057, 0.8000264167785645, 0.8112534880638123, 0.8070268034934998, 0.8050455451011658, 0.8049134612083435, 0.8104609847068787, 0.8014793395996094, 0.7936864495277405], "val_loss": [0.8580231325966972, 0.7593516111373901, 0.6881386893136161, 0.5784907000405448, 0.5073781524385724, 0.4924108641488211, 0.4761497804096767, 0.4538320643561227, 0.4610624313354492, 0.4420305575643267, 0.4498995201928275, 0.45664707251957487, 0.41598782369068693, 0.44452413490840365, 0.4392728464944022, 0.43849658966064453, 0.47600403853825163, 0.4694720676967076], "val_accuracy": [0.6606666445732117, 0.640999972820282, 0.6633333563804626, 0.7360000014305115, 0.7736666798591614, 0.7833333611488342, 0.7940000295639038, 0.809333324432373, 0.8163333535194397, 0.8169999718666077, 0.8136666417121887, 0.8136666417121887, 0.8289999961853027, 0.8240000009536743, 0.8213333487510681, 0.8233333230018616, 0.8286666870117188, 0.8163333535194397]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 3, 2, 2, 2, 4, 0, 3, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 65, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [35], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 1, 0, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302855137804984, 2.3025859354540907, 2.3025981227026766, 2.3026263655578267, 2.3027030044243775, 2.302801334154116], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736604009355818, 1.9736730711800712, 1.9736832891191756, 1.9736944607325964, 1.9737354687282018, 1.9738044057573592], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [39, 32, 57, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [24, 65], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 8, 9, 6, 9, 9, 1, 0, 2, 2, 5, 6, 0, 3, 8, 3, 3, 0, 1, 4, 3, 2, 4, 9, 6, 0], [1, 0, 2, 0, 0, 2, 2], [9, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [64080473.87667903, 9476576044.396778, 161738250958.1931, 1131900031231.8987, 5099664186644.321, 16529287992599.297], "accuracy": [0.0940430611371994, 0.09840179979801178, 0.1026284471154213, 0.10038304328918457, 0.09615638852119446, 0.09734513610601425], "val_loss": [516389193.14285713, 27792814080.0, 298175561728.0, 1625243816521.1428, 6087084043702.857, 17953533722624.0], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 3, 3, 8, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 1, 1, 1, 0, 2, 2, 2, 0, 2, 3, 3, 0], [39, 32, 57, 49, 25], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 65], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 6, 8, 9, 6, 9, 1, 3, 2, 2, 5, 1, 0, 3, 5, 3, 3, 3, 9], [1, 0, 2, 0, 0, 2, 2], [3, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.math.negative(grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3044510995549707, 2.382468486521868, 3.1042769976484776, 6.107604966612698, 14.027743742749706, 30.079245687617508, 60.05996798020407, 113.49702204305105], "accuracy": [0.08836349099874496, 0.0882314071059227, 0.10328886657953262, 0.10210011899471283, 0.09813763201236725, 0.09628847241401672, 0.09430722147226334, 0.09760929644107819], "val_loss": [1.9759291921343123, 2.0859169960021973, 2.982217993055071, 6.16905403137207, 13.37152590070452, 27.480315617152623, 53.128082275390625, 97.50059073311942], "val_accuracy": [0.06400000303983688, 0.10133333504199982, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 2, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 0, 2, 0, 2, 3, 3, 0], [38, 86, 95, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 8, 2, 0, 0, 0, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98, 73], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [3, 2, 6, 9, 1, 0, 1, 3, 2, 2, 5, 0, 3, 0, 2, 3, 5, 3, 4, 7, 1, 5, 8, 9, 1, 4], [2, 3, 1, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 0, 1], [70, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(beta, sigma), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [39, 32, 57, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 1, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 11], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [2, 6, 2, 9, 3, 2, 1, 3, 2, 2, 5, 0, 4, 5, 4, 5, 1, 2, 4, 0, 4, 3, 5, 9, 4, 4, 1, 0, 8, 8], [1, 0, 2, 0, 0, 1, 2, 1, 2, 3, 2, 1, 3, 3, 3, 0, 0], [14, 90, 13, 96, 63, 90, 27, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 8, 8, 6, 2, 1, 1, 1, 0, 1, 0, 43, 26, 17, 7], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.negative(beta)), tf.math.pow(tf.math.square(tf.math.pow(tf.math.square(alpha), beta)), tf.math.subtract(sigma, tf.math.add(tf.math.pow(beta, alpha), tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.square(sigma), sigma), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))), tf.math.pow(tf.math.pow(sigma, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3028598706861763, 2.3025851429508597, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [39, 44, 57, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [61, 6, 5, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 4, 1, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301760585568506, 2.3025850169867446, 2.3025850799688024, 2.3025850619874246, 2.3025851924232663, 2.3025849360233095, 2.3025850619874246, 2.302585030496396, 2.3025850934784535, 2.302585030496396], "accuracy": [0.09774138033390045, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.10011887550354004, 0.10632677376270294, 0.10091137140989304, 0.10342095047235489, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644529070173, 1.973644460950579, 1.973644392830985, 1.973644392830985, 1.9736441203526087, 1.9736442565917969, 1.9736442565917969, 1.973644188472203], "val_accuracy": [0.10233332961797714, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10366666316986084, 0.10366666316986084, 0.10066666454076767, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [23, 32, 5, 49, 25], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [3, 8, 5, 0, 0, 9, 3, 9], [4, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [80], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3031635239706567, 2.3029475457412283, 2.3029433876342935, 2.3028852462201717, 2.3028483888366362, 2.303087106265601], "accuracy": [0.09008057415485382, 0.0956280529499054, 0.09008057415485382, 0.09509972482919693, 0.09826971590518951, 0.09668471664190292], "val_loss": [1.9736165319170271, 1.973648956843785, 1.973672526223319, 1.9735890797206335, 1.9737111500331335, 1.973743098122733], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.0949999988079071, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 4, 5, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [39, 32, 57, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 3, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 11], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 1, 1, 8, 3, 0, 1, 3, 2, 2, 5, 5, 9, 7, 8, 5, 3, 3, 1, 6, 7, 4, 4, 4, 7], [2, 3, 2, 1, 0, 2, 1, 1, 2, 2, 1, 0, 2, 0, 3, 2, 1], [14, 90, 13, 96, 63, 90, 27, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 41, 24, 17, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(sigma, tf.math.subtract(tf.math.sqrt(tf.math.multiply(tf.math.negative(beta), tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.square(beta)), alpha), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.sqrt(tf.math.square(tf.math.multiply(alpha, tf.math.multiply(beta, tf.math.subtract(beta, alpha))))), tf.math.divide_no_nan(tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, beta))), alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 98, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 4, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 33, 13, 96, 40, 33, 52, 53]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 4, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [31022391.248856794, 4590607497.957997, 78371997301.33192, 548562349754.8519, 2471765993487.419, 8012188401575.274], "accuracy": [0.09391097724437714, 0.09840179979801178, 0.1026284471154213, 0.10038304328918457, 0.09615638852119446, 0.09734513610601425], "val_loss": [250043062.85714287, 13465301284.571428, 144497939017.14285, 787704746569.1428, 2950420009545.143, 8702873717028.571], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 3, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [39, 32, 57, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [35, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 0, 2, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 5, 4, 1, 3], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028598706861763, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 4, 5, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 0, 1, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 68, 5, 49, 25], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 8, 2, 0, 0, 0, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [20, 73], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 0, 2, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 12, 8, 5, 9, 9, 6, 3, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.negative(grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 3, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.09542857110500336, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300874231860244, 2.2999819787486104, 2.300138138855579, 2.301069932417894, 2.302234303193904, 2.3023449121890147, 2.302702142137027, 2.302968878488436], "accuracy": [0.08875974267721176, 0.09602430462837219, 0.10632677376270294, 0.09774138033390045, 0.09391097724437714, 0.08611807972192764, 0.09536388516426086, 0.09959053993225098], "val_loss": [1.96954345703125, 1.9699814660208566, 1.9721287999834334, 1.9730432374136788, 1.9736341067722865, 1.973832402910505, 1.9741810389927454, 1.9744994980948312], "val_accuracy": [0.059333331882953644, 0.09333333373069763, 0.1120000034570694, 0.10433333367109299, 0.09000000357627869, 0.10133333504199982, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 3, 2, 4, 3, 4, 2, 5, 4, 2, 6, 3, 6, 5, 8], [2, 2, 0, 1, 2, 0, 1, 2, 0, 2, 3, 3, 0], [76, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.09542857110500336, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300874263351273, 2.299982244092019, 2.3001391646443516, 2.3010718217851496, 2.3022351493578483, 2.302342433341191, 2.302702682050716, 2.302969265418707], "accuracy": [0.08875974267721176, 0.09602430462837219, 0.10619468986988068, 0.09800554811954498, 0.09391097724437714, 0.08638224750757217, 0.09536388516426086, 0.09959053993225098], "val_loss": [1.96954345703125, 1.969982487814767, 1.9721292087009974, 1.9730464390345983, 1.973630700792585, 1.9738339696611678, 1.9741803577968053, 1.974499089377267], "val_accuracy": [0.059333331882953644, 0.09300000220537186, 0.1120000034570694, 0.10433333367109299, 0.09000000357627869, 0.10133333504199982, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [39, 40, 81, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 11], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [3, 6, 9, 3, 9, 4, 1, 3, 2, 1, 5, 1, 0, 3, 2, 4, 3, 3, 5, 3, 3, 4, 1, 0, 2, 0, 5, 0, 9], [1, 3, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 1, 2, 2], [42, 67, 13, 20, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 17, 17, 10, 7, 4, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 7, 5, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3016562025072456, 2.3028012765255337, 2.302456047903073, 2.302144567271454, 2.3020589488010206, 2.301095144702396], "accuracy": [0.08651433140039444, 0.08809932321310043, 0.09140139818191528, 0.09153348207473755, 0.09311848133802414, 0.09813763201236725], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 0, 0, 2, 2, 0, 2, 3, 3, 0], [39, 44, 57, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [12], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 9, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 2, 2, 2, 2, 2, 3, 2, 3, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 9, 9, 4, 5, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3016562025072456, 2.3028012765255337, 2.302456047903073, 2.302144567271454, 2.3020589488010206, 2.301095144702396], "accuracy": [0.08651433140039444, 0.08809932321310043, 0.09140139818191528, 0.09153348207473755, 0.09311848133802414, 0.09813763201236725], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 3, 2, 4, 3, 4, 2, 5, 4, 2, 6, 3, 6, 5, 8], [2, 1, 0, 1, 2, 0, 1, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 5, 3, 4, 1, 3, 2, 2, 6, 6, 0, 5, 7, 6, 5, 3, 9, 2, 6, 8, 6, 6, 1, 7, 8, 2, 0, 5], [1, 0, 2, 0, 0, 2, 2], [4, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3016562025072456, 2.3028012765255337, 2.302456047903073, 2.302144567271454, 2.3020589488010206, 2.301095144702396], "accuracy": [0.08651433140039444, 0.08809932321310043, 0.09140139818191528, 0.09153348207473755, 0.09311848133802414, 0.09813763201236725], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 2, 3, 0, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 1, 1, 1, 0, 2, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [3, 1, 9, 5, 3, 2, 1, 2, 2, 1, 6, 6, 0, 5, 7, 6, 5, 3, 9, 2, 6, 8, 6, 6, 1, 7, 8, 2, 0, 5], [3, 3, 2, 2, 2, 2, 2, 0, 2, 3, 2, 2, 2, 0, 0, 1, 1], [63, 74, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 31, 19, 12, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), alpha), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.add(tf.math.add(tf.math.subtract(sigma, tf.math.divide_no_nan(beta, tf.math.divide_no_nan(beta, beta))), tf.math.negative(beta)), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), sigma), beta), beta))))", "other_info": {"loss": [2.3016562025072456, 2.3028012765255337, 2.302456047903073, 2.302144567271454, 2.3020589488010206, 2.301095144702396], "accuracy": [0.08651433140039444, 0.08809932321310043, 0.09140139818191528, 0.09153348207473755, 0.09311848133802414, 0.09813763201236725], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]