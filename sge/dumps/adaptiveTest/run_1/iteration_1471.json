[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [2, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [3, 3, 3, 0, 2, 1, 3, 0, 3, 3, 3, 3, 1, 3, 3, 2, 3, 3, 0, 3, 3, 2, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4, 3, 3, 3, 5], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.8431428670883179, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.980923218891495, 1.6358300412823858, 0.9144504542647415, 0.7327691318257893, 0.6526343431518126, 0.6142047658619738, 0.5805129133919683, 0.5569632541250008, 0.5180105205618899, 0.4831224202227992, 0.4760221545375995, 0.45726654307087417, 0.4426367561996038, 0.42519800632448085, 0.4427069527417, 0.4159976788137756, 0.4008455410759132, 0.38383590058328737, 0.37041330317448884, 0.3661630515645382, 0.3676782488240353, 0.3556337661872907, 0.3460072962922222, 0.3437128095397891, 0.33747034683172117, 0.3244231659557369, 0.3154970246488077, 0.30852959895209553, 0.3001788569605188, 0.2887506989668452, 0.28768627716565665, 0.286200033120192, 0.2748838064535466, 0.2668798128454173, 0.26578021659441375, 0.2613743175002704, 0.26715156461946593, 0.25027105317509735, 0.24735331691613585, 0.24083125644419187, 0.2387774664361983, 0.23671851992378806, 0.23381038335855722], "accuracy": [0.3535860478878021, 0.46030908823013306, 0.6649055480957031, 0.7205125093460083, 0.750231146812439, 0.7647602558135986, 0.7763835787773132, 0.793950617313385, 0.7996301651000977, 0.8198388814926147, 0.8222163319587708, 0.8343679904937744, 0.8339717388153076, 0.8392550349235535, 0.8345000743865967, 0.848368763923645, 0.8470479249954224, 0.8599920868873596, 0.8593316674232483, 0.8597279191017151, 0.8631620407104492, 0.8697662353515625, 0.8735966086387634, 0.872407853603363, 0.8704266548156738, 0.8772949576377869, 0.8817857503890991, 0.8815215826034546, 0.8862766027450562, 0.8942015767097473, 0.8889182209968567, 0.8910315632820129, 0.8932769894599915, 0.8989565372467041, 0.9009377956390381, 0.9001452922821045, 0.8975036144256592, 0.9010698795318604, 0.904768168926239, 0.9074098467826843, 0.9059569239616394, 0.9063531756401062, 0.9089948534965515], "val_loss": [1.7857725960867745, 0.7615106446402413, 0.5986841406141009, 0.5272590092250279, 0.4928563152040754, 0.45978874819619314, 0.4698995862688337, 0.4351765087672642, 0.4061586175646101, 0.39003340687070576, 0.39162297759737286, 0.3757267934935434, 0.3671978201184954, 0.40447813272476196, 0.36491953475134714, 0.35246843099594116, 0.3430751051221575, 0.33606451749801636, 0.3420587182044983, 0.34042857374463764, 0.34245823110852924, 0.33367020743233816, 0.34383961984089445, 0.34718542439596994, 0.35868912083762033, 0.3265915513038635, 0.33066483054842266, 0.329338048185621, 0.32606772014072966, 0.3194747907774789, 0.3419010468891689, 0.325181816305433, 0.32889149870191303, 0.32239644868033274, 0.3194025925227574, 0.33683994838169645, 0.32311373949050903, 0.3303850548607962, 0.33615232365471975, 0.3297910179410662, 0.3452682409967695, 0.3634945494788034, 0.3362535153116499], "val_accuracy": [0.4776666760444641, 0.6756666898727417, 0.7283333539962769, 0.7553333044052124, 0.7796666622161865, 0.7919999957084656, 0.7826666831970215, 0.8016666769981384, 0.8216666579246521, 0.8296666741371155, 0.831333339214325, 0.8339999914169312, 0.8370000123977661, 0.8186666369438171, 0.8403333425521851, 0.8429999947547913, 0.8550000190734863, 0.8529999852180481, 0.8523333072662354, 0.8556666374206543, 0.8503333330154419, 0.8616666793823242, 0.8536666631698608, 0.8479999899864197, 0.8463333249092102, 0.8633333444595337, 0.859000027179718, 0.8633333444595337, 0.8676666617393494, 0.8653333187103271, 0.8569999933242798, 0.8666666746139526, 0.8679999709129333, 0.8659999966621399, 0.8713333606719971, 0.8676666617393494, 0.8723333477973938, 0.8726666569709778, 0.8663333058357239, 0.8686666488647461, 0.8723333477973938, 0.862666666507721, 0.8633333444595337]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.8342857360839844, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9809258221918644, 1.635382856942911, 0.9131009539734686, 0.7340113978108175, 0.6530897685754348, 0.6139412779991322, 0.5792872901007546, 0.5476580979667871, 0.5187350910581602, 0.4885991017076207, 0.47226602975104415, 0.4567144213060047, 0.4408474106357838, 0.4231845657933484, 0.4312201325667611, 0.40736036834589573, 0.40182413269641803, 0.38043307772701157, 0.3740224338809119, 0.36334741717442354, 0.3614558775773563, 0.3470641457448782, 0.34121632797213247, 0.34056271697473156, 0.33371800101979565, 0.3122421481141388, 0.31245424637720803, 0.30980348768503185, 0.287860586694077, 0.2870152864623394, 0.28907785517522894, 0.28975998628070215, 0.2693884427781118, 0.2658803743764063, 0.2607678626750706, 0.25610899001757514, 0.26668292496969925, 0.25404646246739665, 0.25005738292907476, 0.24011563510391548], "accuracy": [0.3535860478878021, 0.46083739399909973, 0.6655659675598145, 0.720380425453186, 0.748778223991394, 0.7650244235992432, 0.7791573405265808, 0.7926297783851624, 0.7985734939575195, 0.8170651197433472, 0.8265751004219055, 0.8334434032440186, 0.835160493850708, 0.8449346423149109, 0.8381983637809753, 0.8515387773513794, 0.8454629778862, 0.8605204224586487, 0.8595958352088928, 0.8607845902442932, 0.8672566413879395, 0.8716153502464294, 0.8770307898521423, 0.8737286925315857, 0.8725399374961853, 0.8848236799240112, 0.8813894987106323, 0.8812574148178101, 0.889050304889679, 0.8907673954963684, 0.8906353116035461, 0.8856161832809448, 0.8969752788543701, 0.8975036144256592, 0.9006736278533936, 0.900409460067749, 0.8968431949615479, 0.9002773761749268, 0.9001452922821045, 0.9064852595329285], "val_loss": [1.785539013998849, 0.762381740978786, 0.5998652832848685, 0.525191068649292, 0.488156931740897, 0.46068147250584196, 0.4696676220212664, 0.4286132114274161, 0.4122979811259678, 0.3825096828596933, 0.3895816547530038, 0.37179018769945416, 0.37038828645433697, 0.37456864970070974, 0.3563700403485979, 0.35405456168310984, 0.34511115721293856, 0.33289692231587004, 0.3390525238854544, 0.3478691748210362, 0.33544386284691946, 0.33573453766959055, 0.34629628487995695, 0.33810898235866, 0.3448450820786612, 0.32932900530951364, 0.346993659223829, 0.3281676769256592, 0.31877011912209646, 0.31936207839420866, 0.33138453108923777, 0.3257396136011396, 0.3214013235909598, 0.32029594693865093, 0.32515918357031687, 0.33473680700574604, 0.32737127372196745, 0.32716640404292513, 0.3334419812474932, 0.32099571398326326], "val_accuracy": [0.4779999852180481, 0.6759999990463257, 0.7283333539962769, 0.7559999823570251, 0.7839999794960022, 0.7940000295639038, 0.7763333320617676, 0.8113333582878113, 0.8186666369438171, 0.8339999914169312, 0.8353333473205566, 0.8376666903495789, 0.831333339214325, 0.8320000171661377, 0.8500000238418579, 0.846666693687439, 0.8503333330154419, 0.8569999933242798, 0.8529999852180481, 0.8533333539962769, 0.8600000143051147, 0.8579999804496765, 0.8476666808128357, 0.8539999723434448, 0.8516666889190674, 0.8633333444595337, 0.8523333072662354, 0.8629999756813049, 0.8650000095367432, 0.8676666617393494, 0.8650000095367432, 0.8683333396911621, 0.8700000047683716, 0.8703333139419556, 0.8726666569709778, 0.8666666746139526, 0.8679999709129333, 0.8690000176429749, 0.8683333396911621, 0.8713333606719971]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.8320000171661377, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9809261121297668, 1.6354466338655842, 0.9142409747365822, 0.7334988556911507, 0.6525787747830543, 0.6117030856726177, 0.5804154341089538, 0.5491649297132091, 0.5188537986365764, 0.4852287039513034, 0.4730121028374498, 0.46020905576865784, 0.44287646238782763, 0.4236021179682732, 0.4365495237392788, 0.4121097838244087, 0.4056497705240984, 0.3805827877981599, 0.3736320363768277, 0.35931466552307734, 0.36472798249961175, 0.3480289659960206, 0.34309231403198037, 0.34498475979914706, 0.33711641970217393], "accuracy": [0.3535860478878021, 0.4605732262134552, 0.6651697158813477, 0.7214370369911194, 0.748778223991394, 0.7647602558135986, 0.778761088848114, 0.793422281742096, 0.7996301651000977, 0.819442629814148, 0.8255184292793274, 0.833179235458374, 0.8319904804229736, 0.8451988101005554, 0.8376700282096863, 0.8473120927810669, 0.8465195894241333, 0.8610487580299377, 0.859199583530426, 0.8627657890319824, 0.8651432991027832, 0.8683133125305176, 0.8739928603172302, 0.8717474341392517, 0.8677849769592285], "val_loss": [1.7855354717799596, 0.7627708741596767, 0.5992047786712646, 0.5257233892168317, 0.48887576375688824, 0.45856887953622, 0.4696469306945801, 0.4289212482316153, 0.4104586328778948, 0.3849842207772391, 0.3883934106145586, 0.3708970291273935, 0.36752378940582275, 0.386542728969029, 0.35837427207401823, 0.35755673476627897, 0.3457233820642744, 0.3384160484586443, 0.333308960710253, 0.33673677274159025, 0.33889031410217285, 0.33020652191979544, 0.34088174785886494, 0.33848945583615986, 0.3574985521180289], "val_accuracy": [0.4776666760444641, 0.6753333210945129, 0.7310000061988831, 0.7563333511352539, 0.7786666750907898, 0.79666668176651, 0.7773333191871643, 0.8090000152587891, 0.8236666917800903, 0.8320000171661377, 0.8339999914169312, 0.8383333086967468, 0.8343333601951599, 0.8289999961853027, 0.8456666469573975, 0.8396666646003723, 0.8510000109672546, 0.8510000109672546, 0.856333315372467, 0.8586666584014893, 0.8579999804496765, 0.8579999804496765, 0.8496666550636292, 0.8569999933242798, 0.8456666469573975]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 2, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [3, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.8291428685188293, "mapping_values": [1, 4, 4, 2, 2, 1, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(alpha, tf.math.add(beta, tf.math.negative(grad))), tf.math.divide_no_nan(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9758495825030753, 1.6585754494956142, 0.9069508797126344, 0.7262334963192384, 0.6519650675758882, 0.6069658488535122, 0.5771168750337936, 0.5574717420581278, 0.5212967845671181, 0.4904546244600115, 0.4785429631100197, 0.4639093760352298, 0.4344494409643664, 0.4247953400494101, 0.4311026446988727, 0.40341949426282303, 0.39602524546773255, 0.38152798776849545, 0.3722234499602506, 0.35899939438717604, 0.3620192769606352, 0.3543449787061606, 0.3403824389358758], "accuracy": [0.3535860478878021, 0.4637432396411896, 0.6687359809875488, 0.7280412316322327, 0.7503632307052612, 0.7684586048126221, 0.7795535326004028, 0.7877426743507385, 0.7964601516723633, 0.8187822103500366, 0.8219521641731262, 0.8298771381378174, 0.8363492488861084, 0.8407079577445984, 0.8383304476737976, 0.8491612672805786, 0.8500858545303345, 0.8597279191017151, 0.8594637513160706, 0.8677849769592285, 0.8658037185668945, 0.8639545440673828, 0.873860776424408], "val_loss": [1.7654447555541992, 0.7569350855691093, 0.594719682421003, 0.5221340485981533, 0.4744917665209089, 0.45556860310690744, 0.46268597670963835, 0.4337368607521057, 0.412844181060791, 0.38683236496789114, 0.39007337604250225, 0.3733816998345511, 0.36470922401973177, 0.37554826055254253, 0.35403225251606535, 0.35375953572137014, 0.3419873373849051, 0.33402648993900846, 0.337456864970071, 0.33401005608694895, 0.3359817181314741, 0.3322240710258484, 0.35253766604832243], "val_accuracy": [0.4556666612625122, 0.687666654586792, 0.7243333458900452, 0.7536666393280029, 0.7929999828338623, 0.7976666688919067, 0.7850000262260437, 0.8040000200271606, 0.8253333568572998, 0.8296666741371155, 0.8273333311080933, 0.8389999866485596, 0.8423333168029785, 0.8346666693687439, 0.8463333249092102, 0.8433333039283752, 0.8553333282470703, 0.8566666841506958, 0.8546666502952576, 0.8560000061988831, 0.8560000061988831, 0.856333315372467, 0.8429999947547913]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.8208571672439575, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9921684248131564, 1.3083389217921881, 0.9370173921816227, 0.8351154432808797, 0.8000764920175855, 0.7213549662055183, 0.7021931054380828, 0.6597742774325622, 0.6608686587829726, 0.6464047629552007, 0.6112569322313347, 0.5956556313561568, 0.5831636835035788, 0.5687971157389011, 0.5561331144775523, 0.5401403918447055, 0.5430517722398, 0.5319533248886755, 0.5181911524221362, 0.5102860421166681, 0.500250576005683, 0.5007460985547753, 0.4969629187782947, 0.48353960425972453, 0.4833126621727521, 0.45254285623919865, 0.46426272455648643, 0.44472555162537886, 0.44144226787207136, 0.4387885986176212, 0.4420510267128073, 0.43873646734113847, 0.42719943694482, 0.41149519033372806, 0.4076222111725017, 0.39790957480011646, 0.40276195235051465], "accuracy": [0.33958524465560913, 0.5443138480186462, 0.656980574131012, 0.6894729733467102, 0.7049266695976257, 0.7321357727050781, 0.7285695672035217, 0.7547219395637512, 0.7485140562057495, 0.7495707273483276, 0.765949010848999, 0.7718927264213562, 0.7736098170280457, 0.7878747582435608, 0.7898560166358948, 0.7973847389221191, 0.7950072884559631, 0.7968564033508301, 0.802800178527832, 0.806630551815033, 0.8128384351730347, 0.8166688680648804, 0.8142913579940796, 0.8222163319587708, 0.8128384351730347, 0.8358209133148193, 0.8265751004219055, 0.8345000743865967, 0.8363492488861084, 0.8363492488861084, 0.832650899887085, 0.8342359066009521, 0.8422929644584656, 0.8451988101005554, 0.846387505531311, 0.8544445633888245, 0.8485008478164673], "val_loss": [1.4997871262686593, 0.7346146617616925, 0.6514098473957607, 0.6706607341766357, 0.617770859173366, 0.5805639028549194, 0.5172287736620221, 0.539583512714931, 0.5401381935392108, 0.4898181302206857, 0.49392121178763254, 0.47450860909053255, 0.47275710105895996, 0.459635283265795, 0.4356752208300999, 0.4444341574396406, 0.4675413540431431, 0.42392351797648836, 0.4238082596233913, 0.4279837693486895, 0.41557044642312185, 0.4198948400361197, 0.41020262241363525, 0.40499248674937655, 0.3882846747125898, 0.39341345003673006, 0.3788417662893023, 0.3776476042611258, 0.37709598881857737, 0.3932878204754421, 0.375149735382625, 0.36051011085510254, 0.37085130384990145, 0.36086556741169523, 0.35506105422973633, 0.3701812965529306, 0.3592877302850996], "val_accuracy": [0.4273333251476288, 0.6803333163261414, 0.7080000042915344, 0.6893333196640015, 0.7353333234786987, 0.7206666469573975, 0.7616666555404663, 0.7459999918937683, 0.7419999837875366, 0.7826666831970215, 0.7803333401679993, 0.7763333320617676, 0.7916666865348816, 0.7956666946411133, 0.8059999942779541, 0.7963333129882812, 0.7680000066757202, 0.812666654586792, 0.8196666836738586, 0.8096666932106018, 0.8193333148956299, 0.8236666917800903, 0.8146666884422302, 0.8199999928474426, 0.8289999961853027, 0.8286666870117188, 0.8403333425521851, 0.8336666822433472, 0.8379999995231628, 0.8270000219345093, 0.8363333344459534, 0.8476666808128357, 0.8383333086967468, 0.846666693687439, 0.8423333168029785, 0.8389999866485596, 0.8456666469573975]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [2, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [32, 23, 13, 96, 52, 15, 96]], "fitness": -0.17971429228782654, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(beta)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2634339973423003, 2.4727834333848833, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.33522653579711914, 0.25280675292015076, 0.11187426000833511, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9652092797415597, 13.88247653416225, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.15600000321865082, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 6, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [23, 67, 89, 50, 85, 46], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 4, 3, 0, 2, 1, 3, 0, 3, 3, 3, 3, 1, 3, 3, 2, 3, 3, 0, 3, 3, 2, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4, 3, 3, 3, 5], [59, 88, 21, 97, 75, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 49, 29, 20, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.add(tf.math.add(tf.math.subtract(beta, tf.math.pow(tf.math.subtract(tf.math.pow(beta, tf.math.subtract(sigma, tf.math.sqrt(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), sigma)))), beta), tf.math.add(tf.math.pow(tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), alpha), sigma))), tf.math.multiply(tf.math.multiply(tf.math.subtract(sigma, tf.math.negative(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), alpha), beta)), tf.math.add(tf.math.negative(beta), tf.math.subtract(tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.negative(beta))))), tf.math.square(tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [4, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 7, 7, 5, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, alpha)), alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0754193663597107, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [3, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 0, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.316139731786947, 2.462259314520295, 2.8912525320915954, 3.661960378976121, 4.850818100764121, 6.418232077542014, 8.31407409582817, 10.544408516436048], "accuracy": [0.09206181764602661, 0.09840179979801178, 0.1006472036242485, 0.09642054885625839, 0.09893012791872025, 0.10659094154834747, 0.09998679161071777, 0.10342095047235489], "val_loss": [1.9971833229064941, 2.1281979424612865, 2.441795825958252, 2.9962099620274136, 3.8068904876708984, 4.860291753496442, 6.142838750566755, 7.651606151035854], "val_accuracy": [0.09300000220537186, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [4, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 3, 3, 0, 2, 1, 3, 0, 3, 3, 3, 3, 1, 3, 3, 2, 3, 3, 0, 3, 3, 2, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4, 3, 3, 3, 5], [59, 88, 21, 97, 75, 12, 60, 9, 54, 64], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [4, 2, 2, 2, 6, 5, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 1, 1, 0, 1, 1, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3022763734134024, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 0, 3, 0, 2, 1, 1, 0, 2, 3, 3, 3, 1, 3, 3, 2, 4, 3, 3, 3, 3, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4, 3, 3, 3, 5], [74, 88, 21, 97, 70, 97, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [2, 1, 0, 6, 1, 6, 2, 2, 5, 5, 5, 2, 6, 2, 5, 4, 6, 8, 1, 8, 2, 2, 9, 0, 9, 2, 4, 5, 6, 2, 9, 8, 1, 1, 2, 0, 7, 9, 6, 2, 4, 1, 6, 0, 2, 4, 6, 1, 0], [3, 3, 3, 0, 2, 1, 3, 0, 3, 3, 3, 3, 1, 3, 3, 2, 3, 3, 0, 3, 3, 2, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4, 3, 3, 3, 5], [62, 88, 21, 97, 70, 12, 60, 9, 54, 64], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [494635221.71925735, 73576396562.76634, 1262627627978.5752, 8768737542719.637, 39161586703530.28, 130793333130228.78], "accuracy": [0.10130762308835983, 0.10077928751707077, 0.1022322028875351, 0.09721305221319199, 0.09919429570436478, 0.10672302544116974], "val_loss": [4065186669.714286, 219072144530.2857, 2351262260077.7144, 12818016820077.715, 48012739552402.29, 141625146886436.56], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06353189796209335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 3, 0, 6, 1, 6, 2, 4, 5, 3, 5, 2, 4, 2, 5, 4, 6, 8, 3, 8, 2, 8, 9, 0, 9, 8, 4, 5, 6, 2, 9, 8, 4, 1, 2, 0, 7, 2, 6, 0, 6, 1, 6, 0, 2, 4, 6, 1, 0], [0, 3, 0, 0, 2, 1, 1, 0, 2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 0, 3, 2, 2, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4, 3, 3, 3, 5], [39, 88, 90, 97, 98, 97, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 3, 8, 4, 1, 4, 1, 8, 0, 2, 0, 6, 3, 3, 1, 0, 2, 2, 0, 1, 0, 5, 6, 2, 3, 0, 0, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 3, 0, 3, 2, 0, 1, 2, 2, 0, 1, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [32, 99, 13, 96, 52, 15, 96]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 39, 39, 25, 14, 6, 1, 0, 0, 0, 0, 46, 27, 19, 4], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.pow(beta, alpha)), tf.math.add(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, grad))))), grad)))), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.pow(alpha, tf.math.subtract(tf.math.pow(tf.math.subtract(beta, tf.math.sqrt(beta)), tf.math.negative(tf.math.add(tf.math.negative(sigma), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, beta), sigma), tf.math.subtract(tf.math.negative(tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, beta))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha), tf.math.negative(tf.math.subtract(beta, tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), alpha), alpha)))))), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [7, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [0, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022763734134024, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 1, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [38, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [2, 0, 1, 3, 3, 3, 1, 0, 2, 3, 2, 0, 3, 3, 3, 0, 3, 3, 0, 0, 3, 3, 0, 3, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [3, 4, 2], [65, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 6, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 0, 0, 3, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 57, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 32, 17, 15, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.add(tf.math.add(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.sqrt(beta), tf.math.add(tf.math.add(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), sigma)), beta), tf.math.pow(tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), alpha)), sigma)), tf.math.multiply(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.negative(sigma), beta))), beta))", "other_info": {"loss": [2.3022763734134024, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [1, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 75, 12, 60, 9, 54, 64], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 7, 7, 5, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301917722086314, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [65, 66, 89, 50, 85, 46], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 0, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 5, 2, 2, 15, 9, 7, 2, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))))), sigma)), sigma)), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.309850718540176, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19957733154296875, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.9872841153826033, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 1, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [55, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [7, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 3, 3, 0, 2, 1, 3, 0, 3, 3, 3, 3, 1, 3, 3, 2, 3, 3, 0, 3, 3, 2, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4, 3, 3, 3, 5], [59, 88, 21, 97, 75, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.040571428835392, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3020275947266975, 2.302152364355714, 2.3029076233358587, 2.3018992474963715, 2.3025931421760335, 2.3030301950170284], "accuracy": [0.09509972482919693, 0.09457138925790787, 0.09021265059709549, 0.09470347315073013, 0.09060890227556229, 0.09391097724437714], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}]