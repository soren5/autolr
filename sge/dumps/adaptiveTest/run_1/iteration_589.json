[{"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 57, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8362857103347778, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.279827254590987, 2.0786029479727532, 2.17558404453332, 2.0121293291518434, 1.409773308256787, 0.964448859080379, 0.823511298802456, 0.7171109471779615, 0.6760732249624111, 0.653827221362724, 0.6166211140784038, 0.5867870851294271, 0.5781110397671286, 0.5593672633611956, 0.5705923517272142, 0.5341588753388621, 0.526782245967272, 0.5408654847299071, 0.49964295294401023, 0.489063999057997, 0.4872520061815262, 0.4677809603839991, 0.458758527635662, 0.4674631339006924, 0.4631821445981982, 0.45458486183381525, 0.4462038193081569, 0.43455276548618404, 0.42784769418784074, 0.4235747005323519, 0.40627006929170467, 0.41783001811481374, 0.4139200414625283, 0.3982612644920669, 0.3831711139984103, 0.3826101205336687, 0.39130097635906164, 0.3810112539724572, 0.38256925550339765, 0.3932700025729846, 0.37974119458798766, 0.3598264219415753, 0.36502538296477577, 0.36111484809070454, 0.3491922201119583, 0.34882307664719175, 0.3370634063777198, 0.3538790056734132], "accuracy": [0.2620525658130646, 0.3171311616897583, 0.22282393276691437, 0.32003697752952576, 0.4896314740180969, 0.64231938123703, 0.6954167485237122, 0.7333245277404785, 0.7460044622421265, 0.7547219395637512, 0.76542067527771, 0.78113853931427, 0.7833839654922485, 0.7893276810646057, 0.7877426743507385, 0.8016114234924316, 0.7988376617431641, 0.7946110367774963, 0.8158763647079468, 0.8145555257797241, 0.8166688680648804, 0.8245938420295715, 0.8300092220306396, 0.8216879963874817, 0.8269713521003723, 0.8259146809577942, 0.832650899887085, 0.8428213000297546, 0.839519202709198, 0.8370096683502197, 0.8479725122451782, 0.8396512866020203, 0.8348963260650635, 0.8506141901016235, 0.852331280708313, 0.8544445633888245, 0.8541803956031799, 0.859199583530426, 0.852331280708313, 0.8553691506385803, 0.8584070801734924, 0.8652753829956055, 0.8590674996376038, 0.8673887252807617, 0.8667283058166504, 0.8647470474243164, 0.8762382864952087, 0.8667283058166504], "val_loss": [1.7346088545663017, 1.8096583230154855, 1.549572535923549, 1.4183030128479004, 0.7197691372462681, 0.7488957813807896, 0.5601503338132586, 0.514177748135158, 0.517257571220398, 0.502818260874067, 0.46369978359767366, 0.44555866718292236, 0.43125705208097187, 0.48507813044956755, 0.4319099954196385, 0.4111991098948887, 0.49125358036586214, 0.40056698662894114, 0.40059891768864225, 0.3987455793789455, 0.4092707804271153, 0.38292125293186735, 0.39480321747916086, 0.3889851825577872, 0.3895425370761326, 0.3984360098838806, 0.3776595081601824, 0.36995852845055716, 0.3766275474003383, 0.3760860392025539, 0.3838305813925607, 0.3549063631466457, 0.3599910991532462, 0.35120329686573576, 0.35799704279218403, 0.3587188294955662, 0.35334770168576923, 0.36191741057804655, 0.40378897530691965, 0.347416307244982, 0.35100414071764263, 0.3528477208954947, 0.33423785652433124, 0.34545726435525076, 0.34694076435906546, 0.34413743019104004, 0.3943910428455898, 0.35763953413282124], "val_accuracy": [0.3296666741371155, 0.25600001215934753, 0.4893333315849304, 0.36133334040641785, 0.6880000233650208, 0.6729999780654907, 0.7379999756813049, 0.7799999713897705, 0.7673333287239075, 0.7583333253860474, 0.79666668176651, 0.8143333196640015, 0.8153333067893982, 0.7803333401679993, 0.812333345413208, 0.8276666402816772, 0.7793333530426025, 0.8326666951179504, 0.8320000171661377, 0.8296666741371155, 0.8199999928474426, 0.8370000123977661, 0.8349999785423279, 0.8306666612625122, 0.8306666612625122, 0.8273333311080933, 0.8399999737739563, 0.8429999947547913, 0.840666651725769, 0.8429999947547913, 0.8349999785423279, 0.8500000238418579, 0.8423333168029785, 0.8479999899864197, 0.843999981880188, 0.843999981880188, 0.8519999980926514, 0.8429999947547913, 0.8230000138282776, 0.8543333411216736, 0.859000027179718, 0.8506666421890259, 0.8613333106040955, 0.8543333411216736, 0.8600000143051147, 0.8586666584014893, 0.8336666822433472, 0.8506666421890259]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 57, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 4, 2, 0, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 3, 3, 0, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.831428587436676, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 9, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.pow(grad, tf.math.add(tf.math.negative(beta), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2798294111911126, 2.06457014018361, 1.9607763688294422, 1.9157430017156656, 1.2434905347507927, 0.9008561343155391, 0.7805419310744349, 0.7383143913004266, 0.6584209885500867, 0.6491741739826558, 0.606167416326311, 0.5829776733968047, 0.5749702914012123, 0.5749018575379625, 0.562895248956873, 0.5285678759321576, 0.5121833914385306, 0.51178309524127, 0.4934173926047803, 0.479209555862854, 0.46986388624021486, 0.46543326995171547, 0.45183494348945463, 0.4588196935111726, 0.4509001883730172, 0.44594349757303353, 0.4269709537931799, 0.429970300393633, 0.4072602717608131, 0.412774544220559, 0.4049315716076867, 0.42581807026742174, 0.40726363333760157, 0.3954852630811486, 0.38552798323107906], "accuracy": [0.2619204819202423, 0.3179236650466919, 0.2965262234210968, 0.32981112599372864, 0.5379738211631775, 0.6598864197731018, 0.7094175219535828, 0.7220974564552307, 0.7498348951339722, 0.7578919529914856, 0.7676661014556885, 0.7800818681716919, 0.7783648371696472, 0.7866860628128052, 0.7928939461708069, 0.8021397590637207, 0.8063663840293884, 0.8053097128868103, 0.8152159452438354, 0.8212917447090149, 0.8238013386726379, 0.8256505131721497, 0.83119797706604, 0.8267071843147278, 0.828292191028595, 0.8296129703521729, 0.8413683772087097, 0.8385946154594421, 0.8453308939933777, 0.8422929644584656, 0.8511425256729126, 0.834632158279419, 0.8451988101005554, 0.8527275323867798, 0.8536521196365356], "val_loss": [1.7344910757882255, 1.7557917322431291, 1.2291954926082067, 1.1306756905147008, 0.7830689804894584, 0.6624828917639596, 0.5699003764561245, 0.5225672381264823, 0.4815009662083217, 0.4951087066105434, 0.4891255923679897, 0.4490633692060198, 0.4606494562966483, 0.4358964477266584, 0.43380318369184223, 0.4036738702229091, 0.4754030704498291, 0.4039741924830845, 0.38624949966158184, 0.3955193758010864, 0.4071078300476074, 0.3787562336240496, 0.38011406149183, 0.3895678605352129, 0.3870077814374651, 0.3866626279694693, 0.39022334132875713, 0.3546857237815857, 0.38008599621909006, 0.3583363805498396, 0.38818239314215525, 0.35349076986312866, 0.37270302431924, 0.34083140747887747, 0.34817807163511005], "val_accuracy": [0.3283333480358124, 0.31566667556762695, 0.4973333477973938, 0.46433332562446594, 0.6573333144187927, 0.7229999899864197, 0.7256666421890259, 0.7676666378974915, 0.7863333225250244, 0.7609999775886536, 0.7733333110809326, 0.8056666851043701, 0.8009999990463257, 0.8040000200271606, 0.8163333535194397, 0.8326666951179504, 0.7943333387374878, 0.8259999752044678, 0.8363333344459534, 0.8320000171661377, 0.8226666450500488, 0.8383333086967468, 0.8453333377838135, 0.8263333439826965, 0.8273333311080933, 0.8346666693687439, 0.8383333086967468, 0.8523333072662354, 0.8386666774749756, 0.8579999804496765, 0.8336666822433472, 0.8526666760444641, 0.8326666951179504, 0.8523333072662354, 0.856333315372467]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 8, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8291428685188293, "mapping_values": [1, 4, 4, 2, 2, 1, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), beta)), tf.math.sqrt(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3817407166590985, 2.2929500774889418, 1.988642500187223, 1.4237454790622488, 1.052541407107866, 0.9765840813846258, 0.853014948148895, 0.8620570081021288, 0.7486186655536697, 0.7271926079711516, 0.698788788820601, 0.6746909818345719, 0.6832579991773702, 0.6263151672364793, 0.655923971985278, 0.6334272044257024, 0.5856693637227779, 0.5998860765772568, 0.5897623117432036, 0.583418901223926, 0.5333604293649915, 0.5260866622505345, 0.5315326083337847, 0.5332599015614423, 0.5384936903634989, 0.5013030379825595, 0.47902342416921767, 0.5249676819034084, 0.5057435722052539, 0.47689787406002476, 0.4860011035220467, 0.4921812735741023, 0.48034159716141456, 0.45836156019760144, 0.43159362089994513, 0.4273956903274805, 0.43411547370700787], "accuracy": [0.23352265357971191, 0.11847840249538422, 0.32399946451187134, 0.5027077198028564, 0.6165632009506226, 0.6415268778800964, 0.6873596906661987, 0.6866992712020874, 0.7197200059890747, 0.7199841737747192, 0.735041618347168, 0.743891179561615, 0.7421740889549255, 0.7711002230644226, 0.7498348951339722, 0.7606657147407532, 0.7791573405265808, 0.7763835787773132, 0.774270236492157, 0.7775723338127136, 0.8009510040283203, 0.8035926818847656, 0.7971205711364746, 0.8070268034934998, 0.7972526550292969, 0.8127063512802124, 0.8216879963874817, 0.8039889335632324, 0.8067626357078552, 0.821820080280304, 0.817989706993103, 0.8127063512802124, 0.8219521641731262, 0.83119797706604, 0.8399154543876648, 0.8391229510307312, 0.8407079577445984], "val_loss": [1.9729108810424805, 1.9157898766653878, 1.1960455008915492, 0.8160003253391811, 0.7332861764090401, 0.6088077340807233, 0.7315212147576469, 0.6350183316639492, 0.5698142051696777, 0.5319320133754185, 0.5673572506223407, 0.5706515312194824, 0.48903264318193707, 0.5484107221875872, 0.527103134563991, 0.48433215277535574, 0.48515190396990093, 0.4630468913487026, 0.4380910226276943, 0.4359892095838274, 0.4253094792366028, 0.46525001525878906, 0.4165083425385611, 0.41554105281829834, 0.3988907252039228, 0.40662699937820435, 0.4367443152836391, 0.4661723034722464, 0.3971930912562779, 0.38227624552590506, 0.4711390052522932, 0.37990955795560566, 0.4276365893227713, 0.3674654109137399, 0.36227160692214966, 0.38155537843704224, 0.4604909249714443], "val_accuracy": [0.10366666316986084, 0.3100000023841858, 0.43933331966400146, 0.6679999828338623, 0.6733333468437195, 0.746999979019165, 0.6966666579246521, 0.7080000042915344, 0.731333315372467, 0.7546666860580444, 0.7416666746139526, 0.7236666679382324, 0.7806666493415833, 0.750333309173584, 0.762333333492279, 0.7829999923706055, 0.793666660785675, 0.7950000166893005, 0.8019999861717224, 0.8163333535194397, 0.8180000185966492, 0.7803333401679993, 0.8103333115577698, 0.8149999976158142, 0.828000009059906, 0.8220000267028809, 0.8053333163261414, 0.7796666622161865, 0.8299999833106995, 0.8366666436195374, 0.7833333611488342, 0.8453333377838135, 0.8029999732971191, 0.8443333506584167, 0.8446666598320007, 0.8393333554267883, 0.7820000052452087]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 5, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.828000009059906, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 7, 7, 2, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.279827835505995, 2.0630344760384873, 2.092340029304715, 2.1374506022022888, 1.3810269249554685, 0.9791435661364414, 0.7793608054335658, 0.6741595311313494, 0.6795539305257665, 0.6155307512824341, 0.6186947138506927, 0.5728146876751582, 0.5848353720533219, 0.5546302760218932, 0.57321282121027, 0.53142467506841, 0.5332348594072236, 0.5611426118043404, 0.5223606446392075, 0.5189807949962397, 0.4880314484571249, 0.49709604741748864, 0.47531261974400724, 0.4817580955926973, 0.4847866687138854, 0.4697988546716539, 0.4506266315804339, 0.45659971140347705, 0.452522186563157, 0.44315964854656353, 0.4331927567094529, 0.43099354325803896, 0.4287935926331316, 0.4043959883446266, 0.3935185291936857, 0.3816151982206537, 0.4106283988053253], "accuracy": [0.2620525658130646, 0.31581032276153564, 0.2996962070465088, 0.26337340474128723, 0.5124818682670593, 0.6593580842018127, 0.722229540348053, 0.754589855670929, 0.7493065595626831, 0.7729493975639343, 0.7707040309906006, 0.7876105904579163, 0.7803460359573364, 0.7961959838867188, 0.7823272943496704, 0.8084797263145447, 0.8001585006713867, 0.789988100528717, 0.8045172095298767, 0.8035926818847656, 0.8149517774581909, 0.8133667707443237, 0.8212917447090149, 0.8201030492782593, 0.8181217908859253, 0.8212917447090149, 0.8322546482086182, 0.8315942287445068, 0.8322546482086182, 0.8314621448516846, 0.841500461101532, 0.8347642421722412, 0.8384625315666199, 0.8500858545303345, 0.8552370667457581, 0.8562937378883362, 0.8457271456718445], "val_loss": [1.7345404624938965, 1.733137743813651, 1.9791903495788574, 1.6119203908102853, 0.8812717369624546, 0.6609080348696027, 0.5630793401173183, 0.5065045867647443, 0.5063329764774868, 0.5074370588575091, 0.4666001115526472, 0.46808968271527973, 0.45066024575914654, 0.4629285676138742, 0.4331403374671936, 0.4385174512863159, 0.5073295661381313, 0.43651963983263287, 0.42389694281986784, 0.41514027970177786, 0.4254590017454965, 0.39750270332608906, 0.44848482949393137, 0.41219269377844675, 0.4191766807011196, 0.4000473533357893, 0.4079410263470241, 0.3806828686169216, 0.39265899998801096, 0.38616758584976196, 0.40259867906570435, 0.36486402579716276, 0.3649641105106899, 0.37283805438450407, 0.36972146374838694, 0.35794088670185636, 0.3808443716594151], "val_accuracy": [0.3283333480358124, 0.3296666741371155, 0.19433332979679108, 0.40966665744781494, 0.6426666378974915, 0.7310000061988831, 0.7433333396911621, 0.7863333225250244, 0.7776666879653931, 0.7649999856948853, 0.7919999957084656, 0.7960000038146973, 0.8076666593551636, 0.7929999828338623, 0.8169999718666077, 0.8033333420753479, 0.7730000019073486, 0.8076666593551636, 0.812333345413208, 0.8226666450500488, 0.8153333067893982, 0.8286666870117188, 0.8240000009536743, 0.8230000138282776, 0.8206666707992554, 0.8336666822433472, 0.8230000138282776, 0.8333333134651184, 0.8299999833106995, 0.843999981880188, 0.8316666483879089, 0.8516666889190674, 0.843666672706604, 0.8443333506584167, 0.8453333377838135, 0.8479999899864197, 0.8429999947547913]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [37, 30, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [5, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8240000009536743, "mapping_values": [1, 4, 4, 2, 2, 1, 22, 22, 14, 8, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, beta))), tf.math.add(tf.math.subtract(tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), grad))), beta))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.381740653582568, 2.292961038665812, 1.9953817248643586, 1.522935689983587, 1.3003427015713194, 0.95186612139509, 0.87737176805959, 0.8284479289668316, 0.7421657136402677, 0.7209057959394212, 0.6791981467560156, 0.6532332356564042, 0.6581938633388453, 0.621649803179697, 0.6334141372390443, 0.6222902978683712, 0.5898162578358673, 0.5844363756640208, 0.5641081385199326, 0.5542113359467922, 0.536696849356175, 0.5240806709616301, 0.5187146150991823, 0.5239059734086255, 0.48840782783601766, 0.4997337211305754, 0.48596928956848423, 0.49395923552464627, 0.4862366571929933], "accuracy": [0.23352265357971191, 0.11874257028102875, 0.3171311616897583, 0.469819039106369, 0.5484083890914917, 0.6465460062026978, 0.6782459616661072, 0.6960771083831787, 0.7210407853126526, 0.7312111854553223, 0.7458723783493042, 0.7539294958114624, 0.7461365461349487, 0.7667415142059326, 0.7573636174201965, 0.7668735980987549, 0.778761088848114, 0.7795535326004028, 0.7814027070999146, 0.7915731072425842, 0.7948752045631409, 0.8012151718139648, 0.8031964302062988, 0.8006868362426758, 0.8140271902084351, 0.8076872229576111, 0.8161405324935913, 0.8140271902084351, 0.8183859586715698], "val_loss": [1.9729046821594238, 1.9152308872767858, 1.2578452314649309, 1.4088498183659144, 0.7350238902228219, 0.6804933377674648, 0.673599192074367, 0.6262689488274711, 0.592212472643171, 0.5279394047600883, 0.5615300110408238, 0.5499189581189837, 0.5682306800569806, 0.48441210814884733, 0.5286044222967965, 0.4974000794546945, 0.4875455243246896, 0.45745735509055, 0.45061092717306955, 0.424517171723502, 0.4237526910645621, 0.45148721763065885, 0.4007772462708609, 0.39053279161453247, 0.4038275309971401, 0.40499780007771086, 0.456707239151001, 0.41207908732550486, 0.39253189734050203], "val_accuracy": [0.10366666316986084, 0.3086666762828827, 0.41866666078567505, 0.5213333368301392, 0.6973333358764648, 0.6899999976158142, 0.7056666612625122, 0.7196666598320007, 0.7213333249092102, 0.7620000243186951, 0.7526666522026062, 0.7400000095367432, 0.7379999756813049, 0.7820000052452087, 0.7710000276565552, 0.7823333144187927, 0.7960000038146973, 0.7950000166893005, 0.8036666512489319, 0.812666654586792, 0.8119999766349792, 0.7973333597183228, 0.8213333487510681, 0.8339999914169312, 0.8223333358764648, 0.8293333053588867, 0.7823333144187927, 0.8153333067893982, 0.8316666483879089]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 57, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.7954285740852356, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 8, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.square(sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1588209713643742, 2.036122893203818, 1.8598168896110916, 1.2184529663029757, 0.8035941332039375, 0.7125197368889374, 0.6702058881249615, 0.6113872794726458, 0.602853164657421, 0.562426423360454, 0.5497549375081973, 0.5348989981127107, 0.498812711021573, 0.49110190674471677, 0.48182612296187444, 0.4770502875415231, 0.4691441922911469, 0.4507515260280793, 0.44351469709132846, 0.4395711418226993, 0.41239159058160973, 0.4133199269879275, 0.40194891289854723, 0.3963468651005684, 0.39690733042926585, 0.39504578073483576], "accuracy": [0.2933562397956848, 0.2810725271701813, 0.3761722445487976, 0.5680887699127197, 0.6914542317390442, 0.7271166443824768, 0.7449478507041931, 0.7683265209197998, 0.7672698497772217, 0.7881389260292053, 0.7946110367774963, 0.7918372750282288, 0.8092722296714783, 0.811649739742279, 0.8207634687423706, 0.8178576231002808, 0.8220842480659485, 0.8293488025665283, 0.8338396549224854, 0.837537944316864, 0.8401796221733093, 0.8407079577445984, 0.8453308939933777, 0.8462554216384888, 0.8486329317092896, 0.848368763923645], "val_loss": [1.9598142760140556, 1.7319207872663225, 1.291407755443028, 0.5999183484486171, 0.5356641156332833, 0.528333033834185, 0.4780182157244001, 0.4511770350592477, 0.4524635076522827, 0.4349574191229684, 0.40436478172029766, 0.4082037125314985, 0.41334910903658184, 0.39697641134262085, 0.3873807873044695, 0.3898440769740513, 0.39200988837650846, 0.3774239165442331, 0.38676078830446514, 0.3631800924028669, 0.3511732220649719, 0.378335211958204, 0.3681890794209072, 0.36635914019175936, 0.34967667715890066, 0.3627900055476597], "val_accuracy": [0.10266666859388351, 0.3503333330154419, 0.5363333225250244, 0.731333315372467, 0.7553333044052124, 0.7603333592414856, 0.7789999842643738, 0.7993333339691162, 0.8056666851043701, 0.8016666769981384, 0.8289999961853027, 0.8233333230018616, 0.8199999928474426, 0.8316666483879089, 0.8370000123977661, 0.8353333473205566, 0.8233333230018616, 0.8429999947547913, 0.8346666693687439, 0.8483333587646484, 0.8560000061988831, 0.8456666469573975, 0.8513333201408386, 0.8456666469573975, 0.8543333411216736, 0.8519999980926514]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [26, 66, 89, 57, 85, 46], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 5, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [5, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.7828571200370789, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), grad)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2946106359990455, 2.2769456152524836, 2.2582006018946843, 2.2360011128040274, 2.21167332133156, 2.1818465983721214, 2.1450700473004423, 2.0955961193028787, 2.037689661415986, 1.9705821724615675, 1.888230293308188, 1.7935466366893722, 1.7077490381671139, 1.6175340488838434, 1.5308550855250895, 1.4601619827937866, 1.395240795343087, 1.3357753581091272, 1.279305772317824, 1.2478106409378213, 1.2022427710181829, 1.158266766385285, 1.133634970991477, 1.116306890743504, 1.079361235634085, 1.0619424101446975, 1.048743327390469, 1.0255799944358903, 0.9950534142302863, 0.9840671713829923, 0.9655419216258666, 0.9524958032375125, 0.9538836904473356, 0.9399000780851047, 0.9228952490752793, 0.9195391544182823, 0.9082455457067761, 0.8919204034431815, 0.8858309547898949, 0.8754328369007859, 0.8701172546939827, 0.8646896336891428, 0.8507461416140335, 0.8565669552509291, 0.8467288946494482, 0.8329150883072262, 0.8398502784524187, 0.8273149921342665, 0.8103445703248621, 0.8102976732706869, 0.810195771348223, 0.7959213282028761, 0.7894517071904319, 0.7951586801598589, 0.7842655116619608, 0.7917001216859708, 0.7762858054231989, 0.7803262745101203, 0.7822850941745692, 0.7786402977484407, 0.7663732412279936, 0.7595094132732013, 0.758751313377129, 0.7521922809730321, 0.7485394345896828, 0.7477540437886429, 0.7474894018976869, 0.7340622573260381, 0.7425343614323043, 0.7470628186586022, 0.7321545359102994, 0.7417711699722214, 0.731974038016826, 0.722696334056693, 0.7228924523113489, 0.7230973326141147, 0.7192067632176353, 0.7130763959639014, 0.7236663073738253, 0.7155141606858031, 0.7039985939134082, 0.7147372028831132, 0.7051385860433038, 0.7078931550418444, 0.7067537036207862, 0.7026803487831371, 0.6933682620045122, 0.7036626057586398, 0.6950340363973356, 0.6866181796221543, 0.6807563115403857, 0.6807488261228382, 0.6702907390802954, 0.6809413965745703, 0.6821107555689073, 0.6808108999398186, 0.6774582016375149, 0.675311487025872, 0.6749527476341213, 0.6731694482021864], "accuracy": [0.11015717685222626, 0.1562541276216507, 0.2075023055076599, 0.2561088502407074, 0.2871483266353607, 0.3280940353870392, 0.34381189942359924, 0.38343679904937744, 0.4017963409423828, 0.4263637661933899, 0.43983620405197144, 0.46730947494506836, 0.4791969358921051, 0.4846123456954956, 0.5169726610183716, 0.5259543061256409, 0.5410117506980896, 0.5511821508407593, 0.5746929049491882, 0.5760137438774109, 0.585391640663147, 0.6026945114135742, 0.6061286330223083, 0.6067890524864197, 0.6230352520942688, 0.6203936338424683, 0.6297714710235596, 0.6376964449882507, 0.6454893946647644, 0.6515651941299438, 0.6567164063453674, 0.6618676781654358, 0.6635847091674805, 0.6717738509178162, 0.6715096831321716, 0.6676793098449707, 0.6725663542747498, 0.6844538450241089, 0.6822084188461304, 0.6851142644882202, 0.6892088055610657, 0.6856426000595093, 0.6948884129524231, 0.6955488324165344, 0.6975300312042236, 0.6988508701324463, 0.6930392384529114, 0.702681303024292, 0.7047945857048035, 0.7111346125602722, 0.6993792057037354, 0.7120591998100281, 0.7119271159172058, 0.7092854380607605, 0.7131158113479614, 0.7121912837028503, 0.7202483415603638, 0.7120591998100281, 0.7153612375259399, 0.717870831489563, 0.7181349992752075, 0.7214370369911194, 0.7226257920265198, 0.724739134311676, 0.7194558382034302, 0.7220974564552307, 0.7226257920265198, 0.7341170310974121, 0.7276449799537659, 0.7252674698829651, 0.7308149337768555, 0.7273808121681213, 0.7296261787414551, 0.7368907928466797, 0.7357020378112793, 0.7329282760620117, 0.7397965788841248, 0.739400327205658, 0.733588695526123, 0.7376832365989685, 0.7351737022399902, 0.737947404384613, 0.7407211661338806, 0.7345132827758789, 0.7351737022399902, 0.7423061728477478, 0.7477215528488159, 0.7404569983482361, 0.743891179561615, 0.7448157668113708, 0.7445515990257263, 0.7526086568832397, 0.7508915662765503, 0.7495707273483276, 0.7475894689559937, 0.7490423917770386, 0.7478536367416382, 0.748778223991394, 0.752740740776062, 0.7479857206344604], "val_loss": [1.9544287409101213, 1.9376731600080217, 1.9190867968967982, 1.8976433617728097, 1.871537140437535, 1.839294501713344, 1.7992395673479353, 1.7494535446166992, 1.6886625630514962, 1.6168561662946428, 1.5347180025918143, 1.444028070994786, 1.3520569120134627, 1.2627812453678675, 1.1795097078595842, 1.1071674483163017, 1.0450303895132882, 0.9913415908813477, 0.9443230969565255, 0.9063689368111747, 0.871166433606829, 0.8399660417011806, 0.8146215677261353, 0.7935377529689244, 0.7727847610201154, 0.7549406460353306, 0.7401239190782819, 0.7256207977022443, 0.7125973190580096, 0.7013648748397827, 0.6902802842003959, 0.6806341409683228, 0.673407895224435, 0.6663668325969151, 0.6578641108104161, 0.6522305692945208, 0.6443716287612915, 0.6378999607903617, 0.6326158898217338, 0.628062265259879, 0.6212811980928693, 0.616935236113412, 0.6106471504483905, 0.6071817874908447, 0.6036667483193534, 0.5989678076335362, 0.5954821280070713, 0.5925257546561105, 0.5897327831813267, 0.5849952868052891, 0.5822771617344448, 0.5787161758967808, 0.5758178574698312, 0.5730806078229632, 0.5705574410302299, 0.5661210332598005, 0.5652997664042881, 0.5618768760136196, 0.5604736634663173, 0.5568572793688092, 0.555127705846514, 0.5524100235530308, 0.5507173708506993, 0.5493566989898682, 0.5473449059895107, 0.5455152988433838, 0.5432784046445575, 0.5406132766178676, 0.5387913840157645, 0.5375917468752179, 0.5356918232781547, 0.5341835873467582, 0.5325970138822284, 0.5317163467407227, 0.5290242944444928, 0.5298483031136649, 0.5272944825036185, 0.5249951737267631, 0.5236392021179199, 0.5211014917918614, 0.5204125813075474, 0.5198019572666713, 0.5183186871664864, 0.5176411867141724, 0.5169798306056431, 0.5151338917868478, 0.5149040733064923, 0.5142968211855207, 0.5114197390420097, 0.5101303373064313, 0.5079706055777413, 0.508955683026995, 0.5068716491971698, 0.5057077407836914, 0.5037305355072021, 0.504021338054112, 0.5030948093959263, 0.5013647420065743, 0.5004363059997559, 0.4994724818638393], "val_accuracy": [0.18400000035762787, 0.3176666796207428, 0.3803333342075348, 0.41100001335144043, 0.43433332443237305, 0.45633333921432495, 0.47999998927116394, 0.5026666522026062, 0.5203333497047424, 0.5406666398048401, 0.5556666851043701, 0.5663333535194397, 0.5870000123977661, 0.6060000061988831, 0.6159999966621399, 0.6306666731834412, 0.6516666412353516, 0.668666660785675, 0.6733333468437195, 0.6756666898727417, 0.6846666932106018, 0.6909999847412109, 0.6959999799728394, 0.699999988079071, 0.7016666531562805, 0.7066666483879089, 0.7120000123977661, 0.7129999995231628, 0.7183333039283752, 0.7210000157356262, 0.7266666889190674, 0.7279999852180481, 0.7286666631698608, 0.7296666502952576, 0.7326666712760925, 0.734333336353302, 0.7383333444595337, 0.7369999885559082, 0.7413333058357239, 0.7393333315849304, 0.7406666874885559, 0.7473333477973938, 0.7523333430290222, 0.7506666779518127, 0.7490000128746033, 0.7490000128746033, 0.7556666731834412, 0.7536666393280029, 0.7516666650772095, 0.7523333430290222, 0.7566666603088379, 0.7549999952316284, 0.7543333172798157, 0.7570000290870667, 0.7540000081062317, 0.7559999823570251, 0.7559999823570251, 0.7576666474342346, 0.7586666941642761, 0.7616666555404663, 0.7620000243186951, 0.762666642665863, 0.7643333077430725, 0.7649999856948853, 0.7696666717529297, 0.762666642665863, 0.7670000195503235, 0.765333354473114, 0.7696666717529297, 0.7730000019073486, 0.7723333239555359, 0.7739999890327454, 0.7726666927337646, 0.7706666588783264, 0.7766666412353516, 0.7736666798591614, 0.7726666927337646, 0.7773333191871643, 0.7763333320617676, 0.7770000100135803, 0.7776666879653931, 0.7803333401679993, 0.7803333401679993, 0.781333327293396, 0.7773333191871643, 0.7789999842643738, 0.7789999842643738, 0.7770000100135803, 0.7833333611488342, 0.7826666831970215, 0.7836666703224182, 0.7766666412353516, 0.7820000052452087, 0.7836666703224182, 0.7883333563804626, 0.7863333225250244, 0.7889999747276306, 0.7913333177566528, 0.7870000004768372, 0.7860000133514404]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 9, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 5, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06960771232843399, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 8, 9, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 4, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [8.054061203328537e+22, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09166556596755981, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 0, 3, 3, 3, 2, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 4, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07185312360525131, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [93, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 2, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [37, 30, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 9, 7, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09232597798109055, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 0, 3, 3, 3, 2, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07185312360525131, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 2, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 1, 3, 3, 3, 2, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 16, 16, 9, 7, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(beta, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [91, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [46, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 4, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), alpha)))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1868165482.4640734, 282134215868.67786, 4728486309259.886, 33252528740914.383, 146714994189258.56, 489287946000470.3], "accuracy": [0.09840179979801178, 0.10011887550354004, 0.10315678268671036, 0.09840179979801178, 0.10777968913316727, 0.10342095047235489], "val_loss": [15121138249.142857, 815017717174.8572, 8747461265700.571, 47688413198043.43, 178632919538541.72, 526896598239524.56], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 0, 3, 3, 3, 2, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [3, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09259014576673508, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 9, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [37, 30, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 5, 2, 2, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0614185705780983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 0, 3, 2, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [37, 30, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 1, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.061814818531274796, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [53, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [37, 30, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [3, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 0, 24, 24, 14, 10, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, beta), tf.math.subtract(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, alpha))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301995087986247, 2.302281843058705, 2.302607057683771, 2.3011979921036363, 2.3022682532941694, 2.3017312755138803], "accuracy": [0.09219389408826828, 0.08955223858356476, 0.09179764986038208, 0.0956280529499054, 0.0882314071059227, 0.08902391046285629], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [68, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [71, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [3, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301995087986247, 2.302281843058705, 2.302607057683771, 2.3011979921036363, 2.3022682532941694, 2.3017312755138803], "accuracy": [0.09219389408826828, 0.08955223858356476, 0.09179764986038208, 0.0956280529499054, 0.0882314071059227, 0.08902391046285629], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 5, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [37, 75, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 1, 6, 6, 4, 2, 0, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301995087986247, 2.302281843058705, 2.302607057683771, 2.3011979921036363, 2.3022682532941694, 2.3017312755138803], "accuracy": [0.09219389408826828, 0.08955223858356476, 0.09179764986038208, 0.0956280529499054, 0.0882314071059227, 0.08902391046285629], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]