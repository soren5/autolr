[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 0, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8254285454750061, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 7, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), grad)))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.5988741093591345, 2.2998187842071176, 1.994475368526964, 1.4466665005875994, 0.9984016994506676, 0.7926474020481424, 0.6996451796179733, 0.660608070149571, 0.6401987952909544, 0.5961441035677555, 0.5969215878453379, 0.573282478169333, 0.5517510848117149, 0.550920389316117, 0.5072669585178462, 0.4998753610272622, 0.5236937235752983, 0.48027714558281304, 0.4896246725266494, 0.47577974782439114, 0.4636515819629611, 0.4488898537351376, 0.45113517026135386], "accuracy": [0.27037379145622253, 0.12349755316972733, 0.2879408299922943, 0.47893276810646057, 0.6268656849861145, 0.7066437602043152, 0.7288337349891663, 0.7541936039924622, 0.7613261342048645, 0.7741381525993347, 0.774798572063446, 0.7794214487075806, 0.7897239327430725, 0.7935543656349182, 0.8061022162437439, 0.8129705190658569, 0.8034605979919434, 0.8183859586715698, 0.8173292875289917, 0.8195747137069702, 0.8260467648506165, 0.8334434032440186, 0.830669641494751], "val_loss": [1.980459553854806, 1.932321412222726, 1.6078439780644007, 0.7681628806250436, 0.6131684950419835, 0.5479998077665057, 0.5289636850357056, 0.5100470781326294, 0.4651588201522827, 0.4510247196469988, 0.43212680305753437, 0.44055029324122835, 0.45202856404440744, 0.40338183300835745, 0.3963908042226519, 0.49348693234579905, 0.3833956037248884, 0.38651961939675467, 0.4230503099305289, 0.4113441620554243, 0.3796514357839312, 0.4045459202357701, 0.4421359726360866], "val_accuracy": [0.09566666930913925, 0.23333333432674408, 0.34299999475479126, 0.6166666746139526, 0.7166666388511658, 0.7429999709129333, 0.7636666893959045, 0.7639999985694885, 0.7963333129882812, 0.8046666383743286, 0.8176666498184204, 0.8069999814033508, 0.7913333177566528, 0.8240000009536743, 0.8309999704360962, 0.7746666669845581, 0.8370000123977661, 0.8399999737739563, 0.8193333148956299, 0.8130000233650208, 0.8389999866485596, 0.8206666707992554, 0.8113333582878113]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 8, 2, 2, 9, 1, 3, 2, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 1, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 52, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8222857117652893, "mapping_values": [1, 4, 4, 2, 2, 1, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.599200366179799, 2.299704712017605, 2.0209623965226964, 1.6858478236144891, 1.1489334472371067, 0.8130021132120383, 0.7004864067134446, 0.6575298822393759, 0.636709875151025, 0.5976114847152745, 0.5760620545559965, 0.5784281055610162, 0.5698372315516514, 0.550957457642309, 0.5209210200308809, 0.5078428641341508, 0.4975938473111839, 0.4964949788749336, 0.4768929179901019, 0.4778253112518241, 0.4476811003376385, 0.44829722317438775, 0.4538587340510611, 0.4468384423016274, 0.42468352595167297, 0.41475657729613796, 0.40499948081071463, 0.4087173845262229, 0.42579224984785347, 0.39729377470311233, 0.39027157693554176, 0.3887028507962124, 0.3774787526419764, 0.37247723799576266, 0.3866641980671785, 0.3630288518918992, 0.37008510664422295, 0.3719217754854203, 0.3518277741402777], "accuracy": [0.27024170756340027, 0.12376172095537186, 0.2845066785812378, 0.40364548563957214, 0.583938717842102, 0.6964733600616455, 0.7383436560630798, 0.7504953145980835, 0.7561748623847961, 0.7765156626701355, 0.7816668748855591, 0.7781006693840027, 0.7844406366348267, 0.7948752045631409, 0.8067626357078552, 0.8034605979919434, 0.8132346868515015, 0.8121780753135681, 0.8245938420295715, 0.8201030492782593, 0.8334434032440186, 0.8302733898162842, 0.8251221776008606, 0.8329150676727295, 0.8391229510307312, 0.8473120927810669, 0.841500461101532, 0.8473120927810669, 0.8372738361358643, 0.8504821062088013, 0.8485008478164673, 0.854708731174469, 0.8494254350662231, 0.8595958352088928, 0.852331280708313, 0.8650112152099609, 0.8581429123878479, 0.8594637513160706, 0.8644828796386719], "val_loss": [1.9804776055472237, 1.9301985331944056, 1.6805084432874406, 0.7718168667384556, 0.6488182885306222, 0.5472266674041748, 0.5315196514129639, 0.49214071886880056, 0.4740769692829677, 0.454822301864624, 0.46951905318668913, 0.46296671458653044, 0.4389388476099287, 0.423919141292572, 0.41834861040115356, 0.42377655846732004, 0.44238572461264475, 0.37929593665259226, 0.40848714113235474, 0.3746080313410078, 0.37439135142735075, 0.38248041697910856, 0.3984253406524658, 0.37804614646094187, 0.3589354838643755, 0.36571961641311646, 0.36194630180086407, 0.3751205801963806, 0.37388587849480764, 0.35189419984817505, 0.3608718855040414, 0.3554385559899466, 0.36235105991363525, 0.34986511298588346, 0.34885649170194355, 0.37939453976494925, 0.36272816147123066, 0.3527946557317461, 0.35089021921157837], "val_accuracy": [0.09566666930913925, 0.22866666316986084, 0.33033332228660583, 0.6633333563804626, 0.7139999866485596, 0.7490000128746033, 0.7580000162124634, 0.7743333578109741, 0.7860000133514404, 0.8003333210945129, 0.7950000166893005, 0.7990000247955322, 0.8119999766349792, 0.8073333501815796, 0.8146666884422302, 0.8113333582878113, 0.8026666641235352, 0.8423333168029785, 0.8223333358764648, 0.847000002861023, 0.8433333039283752, 0.8353333473205566, 0.8306666612625122, 0.8423333168029785, 0.8519999980926514, 0.8426666855812073, 0.8516666889190674, 0.8453333377838135, 0.847000002861023, 0.8553333282470703, 0.8460000157356262, 0.8510000109672546, 0.8510000109672546, 0.8586666584014893, 0.8573333621025085, 0.8453333377838135, 0.8426666855812073, 0.8560000061988831, 0.8496666550636292]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 1, 3, 0, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8197143077850342, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 7, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(beta, alpha)), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.599227676333658, 2.2999414576987833, 1.98119380728853, 1.6833051917197415, 1.002075283707818, 0.7670150371102326, 0.6815445885729434, 0.6675599038152175, 0.6230888982585014, 0.5925055034502922, 0.5781670545290931, 0.5766455946093333, 0.5482846341112964, 0.536273980263501, 0.5155445136461496, 0.5073478990116959, 0.4890742363033514, 0.4804555523066457, 0.483340334678134, 0.4675851232379482, 0.4496568394115084, 0.4378659674724835, 0.4443366402104987, 0.43703910830061526, 0.42061381834593464, 0.4304996152965542, 0.4165100417888522, 0.39919364966846743, 0.4029182290687632, 0.38911062582545924, 0.3817697474079802, 0.37651352618805345, 0.3823424069959537], "accuracy": [0.270109623670578, 0.12349755316972733, 0.29045039415359497, 0.3871351182460785, 0.6396777033805847, 0.7092854380607605, 0.7359662055969238, 0.7420420050621033, 0.7647602558135986, 0.7786290049552917, 0.7799497842788696, 0.7821952104568481, 0.7905164361000061, 0.7979130744934082, 0.7993659973144531, 0.8043851256370544, 0.8120459914207458, 0.8150838613510132, 0.819442629814148, 0.8183859586715698, 0.82683926820755, 0.8359529972076416, 0.8318583965301514, 0.8348963260650635, 0.8413683772087097, 0.8385946154594421, 0.8388587832450867, 0.8496896028518677, 0.848368763923645, 0.8527275323867798, 0.852859616279602, 0.8577466607093811, 0.8543124794960022], "val_loss": [1.9804692949567522, 1.9333168438502721, 1.4078130040849959, 0.8839954648699079, 0.6069874082292829, 0.5272344861711774, 0.5069513661520821, 0.4915945019040789, 0.4872643266405378, 0.4618828977857317, 0.4591391086578369, 0.43643735136304584, 0.4330114722251892, 0.43082964420318604, 0.43959881578172955, 0.41412282841546194, 0.40340936183929443, 0.4139136757169451, 0.4099203944206238, 0.3840444087982178, 0.37862918206623625, 0.38879014764513287, 0.3964545215879168, 0.38008001020976473, 0.3757872155734471, 0.37643100534166607, 0.3565777284758432, 0.35552585976464407, 0.3529339092118399, 0.3535674810409546, 0.35015489373888287, 0.3518714649336679, 0.3708158050264631], "val_accuracy": [0.09566666930913925, 0.2280000001192093, 0.4193333387374878, 0.5950000286102295, 0.7160000205039978, 0.749666690826416, 0.7763333320617676, 0.7746666669845581, 0.7803333401679993, 0.7870000004768372, 0.7983333468437195, 0.8109999895095825, 0.8119999766349792, 0.796999990940094, 0.7889999747276306, 0.8119999766349792, 0.8199999928474426, 0.8276666402816772, 0.8183333277702332, 0.8396666646003723, 0.8389999866485596, 0.8316666483879089, 0.8330000042915344, 0.8463333249092102, 0.8363333344459534, 0.8289999961853027, 0.8463333249092102, 0.8550000190734863, 0.8526666760444641, 0.8479999899864197, 0.8523333072662354, 0.8550000190734863, 0.8386666774749756]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 2, 2, 2, 1, 1, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 3, 1, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 52, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8168571591377258, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 8, 7, 2, 8, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))))))), tf.math.add(beta, alpha))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.square(sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.273306092975351, 2.1977270699416516, 1.703415158056013, 1.2311776382985165, 0.9355182319568558, 0.8679816375208915, 0.781155637824981, 0.6950943844272098, 0.6806872595869681, 0.6424645156577562, 0.6326731129045956, 0.6139341271580202, 0.5966875593675803, 0.5698367071000576, 0.5696115985821739, 0.5445061917428438, 0.5425015086700037, 0.5194271659932951, 0.5438059536048119, 0.5041927743298172, 0.4962494374108809, 0.46907990038780695, 0.4921612396232047, 0.4713156820721299, 0.46979622748140265, 0.4456569564348797, 0.47253584322077863, 0.4500910616498881, 0.4353368131672906, 0.4148629773971569], "accuracy": [0.2526746690273285, 0.18821820616722107, 0.4080042243003845, 0.5580504536628723, 0.648659348487854, 0.6778497099876404, 0.6984546184539795, 0.735041618347168, 0.735041618347168, 0.7552502751350403, 0.7543256878852844, 0.7677981853485107, 0.7774402499198914, 0.7835160493850708, 0.7895918488502502, 0.7909126877784729, 0.7932901978492737, 0.8016114234924316, 0.7987055778503418, 0.8058380484580994, 0.8123101592063904, 0.8227446675300598, 0.805177628993988, 0.8277638554573059, 0.8251221776008606, 0.832650899887085, 0.8248580098152161, 0.8334434032440186, 0.8411042094230652, 0.8474441766738892], "val_loss": [1.9688692774091447, 1.2814173357827323, 0.7788050174713135, 0.7230270079204014, 0.7842694520950317, 0.5713286570140294, 0.5421280690601894, 0.5074066093989781, 0.4942015068871634, 0.5384548902511597, 0.4878133365086147, 0.4817350591932024, 0.46202945709228516, 0.4309223209108625, 0.4666522911616734, 0.458987968308585, 0.416053192956107, 0.4309730529785156, 0.41645075593675884, 0.3966641766684396, 0.4141546743256705, 0.41092335326331003, 0.4664182833262852, 0.43382389204842703, 0.3674594759941101, 0.39421169246946064, 0.4232008286884853, 0.4220219680241176, 0.3909983975546701, 0.4043406503541129], "val_accuracy": [0.09566666930913925, 0.5196666717529297, 0.6636666655540466, 0.7099999785423279, 0.6460000276565552, 0.7276666760444641, 0.7603333592414856, 0.7736666798591614, 0.7793333530426025, 0.7443333268165588, 0.7793333530426025, 0.7823333144187927, 0.7910000085830688, 0.8096666932106018, 0.7889999747276306, 0.7846666574478149, 0.8243333101272583, 0.8196666836738586, 0.8159999847412109, 0.8299999833106995, 0.8149999976158142, 0.8216666579246521, 0.8116666674613953, 0.8153333067893982, 0.8496666550636292, 0.8333333134651184, 0.8086666464805603, 0.8009999990463257, 0.8270000219345093, 0.8306666612625122]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [24, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 8, 3, 2, 3, 3, 4, 8, 5, 7, 2, 7, 3, 2, 5, 8, 2, 2, 6, 5, 8, 9, 9], [0, 2, 0, 3, 0, 3, 3, 2, 0, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.7459999918937683, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 8, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.square(sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2969766254863404, 2.284377508002218, 2.272110934648626, 2.2584185239078662, 2.2466364544868593, 2.232817288261316, 2.215707171185299, 2.1972789518144453, 2.171319024973164, 2.151499096050774, 2.1168346641841835, 2.085158481322039, 2.047350354623549, 2.0009387024263616, 1.9539252849318616, 1.8978801983033566, 1.8414253148703827, 1.7830924796642424, 1.7250897583314662, 1.6667394371804876, 1.6052949489336035, 1.5393175432915387, 1.4984394914958108, 1.4440156750124145, 1.3952181338949006, 1.3651039053373144, 1.325393710075321, 1.2899270805905068, 1.26235868617166, 1.238390071217914, 1.2103484243906375, 1.179189828503102, 1.1669854298243827, 1.1476306261529445, 1.1387100939768937, 1.1084737183631703, 1.0958210783013578, 1.0791253197572612, 1.0630318415305082, 1.0481638356663405, 1.0350269443874487, 1.0126213116211866, 1.0132962062358541, 0.9938944549750123, 0.9909660628742278, 0.9861370341306381, 0.9659052594321169, 0.9587792834239219, 0.9572715831864165, 0.9397784348618101, 0.9347302694252029, 0.9289584843127672, 0.9178994062428367, 0.9189484154842691, 0.904689638409333, 0.8908081122708122, 0.8926019470028165, 0.8912379237733513, 0.8820553514636534, 0.8757396976016595, 0.8623071125375281, 0.8610883357502513, 0.8523961243029866, 0.8546283296889412, 0.8490214211719384, 0.8568392078543635, 0.8435931124345202, 0.8396600994530323, 0.8366655184608236, 0.8232543590739261, 0.8310413373270842, 0.8171528366106124, 0.8158895857755172, 0.8112984929401578], "accuracy": [0.09576013684272766, 0.1356491893529892, 0.1690661758184433, 0.20499274134635925, 0.22440892457962036, 0.2588825821876526, 0.28543123602867126, 0.3097345232963562, 0.33958524465560913, 0.34367984533309937, 0.3615110218524933, 0.38660678267478943, 0.4023246467113495, 0.4208162724971771, 0.4241183400154114, 0.44168537855148315, 0.452119916677475, 0.4651961326599121, 0.47272488474845886, 0.4877823293209076, 0.49993395805358887, 0.5114251971244812, 0.5151234865188599, 0.5328226089477539, 0.5406154990196228, 0.5497292280197144, 0.5555408596992493, 0.5632016658782959, 0.5679566860198975, 0.5758816599845886, 0.5864483118057251, 0.5919957756996155, 0.5958262085914612, 0.5972790718078613, 0.6070532202720642, 0.6075815558433533, 0.6082419753074646, 0.6264694333076477, 0.6262052655220032, 0.6317527294158936, 0.6330735683441162, 0.6428477168083191, 0.6476026773452759, 0.6448289752006531, 0.6454893946647644, 0.6453573107719421, 0.6606789231300354, 0.659490168094635, 0.6610751748085022, 0.6671509742736816, 0.6581693291664124, 0.6715096831321716, 0.6738871932029724, 0.6741513609886169, 0.6701889038085938, 0.6793025732040405, 0.6787742972373962, 0.6740192770957947, 0.6832650899887085, 0.6832650899887085, 0.6925109028816223, 0.6852463483810425, 0.6911900639533997, 0.6956809163093567, 0.6911900639533997, 0.6903975605964661, 0.6939638257026672, 0.6968696117401123, 0.693831741809845, 0.7013604640960693, 0.6979262828826904, 0.7040021419525146, 0.7058512568473816, 0.7073041796684265], "val_loss": [1.959824766431536, 1.9488865988595145, 1.937511716570173, 1.925264835357666, 1.9119225229535783, 1.8972184317452567, 1.8803507941109794, 1.8611322130475725, 1.8383009093148368, 1.812293461390904, 1.7820167541503906, 1.7475790977478027, 1.708763803754534, 1.6645521436418806, 1.6158583845411028, 1.5620174748556954, 1.504948513848441, 1.4454922676086426, 1.3852173600878035, 1.3251375130244665, 1.26609240259443, 1.209693363734654, 1.1580348014831543, 1.1099433898925781, 1.0665552275521415, 1.027559450694493, 0.9924375329698835, 0.9605497973305839, 0.9323945386069161, 0.9068240778786796, 0.8840785367148263, 0.8625808954238892, 0.8433879443577358, 0.82562598160335, 0.8109980991908482, 0.7963357993534633, 0.782976644379752, 0.770737750189645, 0.7600353104727608, 0.7487986939293998, 0.7389395918164935, 0.7287651981626239, 0.7192764793123517, 0.7114112036568778, 0.7044830662863595, 0.6977463790348598, 0.6903893096106393, 0.6833349806921822, 0.6776563950947353, 0.672304596219744, 0.6664186716079712, 0.6612030778612409, 0.6570005587169102, 0.6516293116978237, 0.6476446560450962, 0.6417702095849174, 0.6380513736179897, 0.634562577520098, 0.6304523604256767, 0.6257944617952619, 0.6219991956438337, 0.6187551873070853, 0.6146595307758876, 0.6114233391625541, 0.6097924539021083, 0.6065551042556763, 0.6033886671066284, 0.6010904482432774, 0.5986542361123222, 0.5965463944843837, 0.5937943628856114, 0.5909695795604161, 0.5884886469159808, 0.5864285400935582], "val_accuracy": [0.12700000405311584, 0.23499999940395355, 0.3153333365917206, 0.37166666984558105, 0.3970000147819519, 0.4129999876022339, 0.429666668176651, 0.4466666579246521, 0.4566666781902313, 0.4776666760444641, 0.4933333396911621, 0.5053333044052124, 0.5166666507720947, 0.5360000133514404, 0.5410000085830688, 0.5513333082199097, 0.559333324432373, 0.5696666836738586, 0.5823333263397217, 0.5893333554267883, 0.6039999723434448, 0.6156666874885559, 0.628000020980835, 0.640999972820282, 0.6503333449363708, 0.6636666655540466, 0.6679999828338623, 0.6736666560173035, 0.6729999780654907, 0.6779999732971191, 0.6793333292007446, 0.6853333115577698, 0.6916666626930237, 0.6940000057220459, 0.6970000267028809, 0.6973333358764648, 0.7013333439826965, 0.7020000219345093, 0.7039999961853027, 0.7086666822433472, 0.7089999914169312, 0.7120000123977661, 0.7166666388511658, 0.7196666598320007, 0.7210000157356262, 0.7206666469573975, 0.7253333330154419, 0.7260000109672546, 0.7283333539962769, 0.7276666760444641, 0.7303333282470703, 0.7356666922569275, 0.7310000061988831, 0.7356666922569275, 0.7369999885559082, 0.7409999966621399, 0.7406666874885559, 0.7390000224113464, 0.7390000224113464, 0.7429999709129333, 0.7450000047683716, 0.7443333268165588, 0.7480000257492065, 0.7490000128746033, 0.7476666569709778, 0.750333309173584, 0.753000020980835, 0.7509999871253967, 0.7553333044052124, 0.7490000128746033, 0.7519999742507935, 0.750333309173584, 0.7536666393280029, 0.753000020980835]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [10, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 5, 2, 2, 9, 1, 3, 2, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 2, 3, 3, 3, 3, 1, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 52, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.404285728931427, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 8, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.square(sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3017073324438035, 2.300243527740299, 2.2994024915434443, 2.2977976957411106, 2.299227129498241, 2.2986484801748786, 2.2975435659413357, 2.2970310538247465, 2.29429963081898, 2.296799504667178, 2.2936892122120796, 2.2942754541799424, 2.2933961148779107, 2.2916875631266644, 2.2915544247252515, 2.289615128916079, 2.2905916406840316, 2.2893922417123855, 2.288735490543747, 2.288759841674575, 2.288013589191651, 2.2850295375319614, 2.28627745010251, 2.2847796964009266, 2.2833946317398883, 2.284857880374806, 2.282943292174908, 2.2831008946654694, 2.281666866619164, 2.2817892119743095, 2.281156495829552, 2.279781181893218, 2.2800497977237, 2.2786655659059005, 2.2791575749379267, 2.2771346608425067, 2.2768600595436705, 2.274862629185421, 2.2758291992985606, 2.274252926999426, 2.2725126347159508, 2.2724877239265586, 2.271420797856414, 2.2711306249996173, 2.2708071030803314, 2.269719270242125, 2.2691219966519607, 2.268384642148172, 2.2671477751189597, 2.2661862729200677, 2.2669484954799217, 2.2655310419808448, 2.2638215160861135, 2.2641657591023545, 2.2629221523001743, 2.2630445892312316, 2.260324156374082, 2.2608867565780315, 2.2610199693612545, 2.2591351928680705, 2.2577269783959713, 2.25697874160034, 2.254915191481347, 2.2557699280707215, 2.254936644051919, 2.2559499202733813, 2.2546745692545223, 2.25376773302534, 2.2530559768230844, 2.2490841602337532, 2.2496318615910997, 2.248900765992269, 2.2476693125228366, 2.248386139725461, 2.2459242545130262, 2.2461404290890195, 2.245591506100192, 2.2459421754277, 2.2436432862688034, 2.241104515929972, 2.2412989983831366, 2.2413377252630884, 2.240143766618597, 2.2374494775505807, 2.2379392046481863, 2.238244884033969, 2.2346930894648884, 2.236036619757775, 2.2342489977806252, 2.2338882577165777, 2.23225257705625, 2.2305220013297133, 2.231012181835152, 2.2289442423076173, 2.2301925345025184, 2.2267401686685906, 2.226148280170316, 2.2250008561654946, 2.225325004819236, 2.223652877512861], "accuracy": [0.0870426595211029, 0.09232597798109055, 0.09655263274908066, 0.10540219396352768, 0.09919429570436478, 0.10394927859306335, 0.10355303436517715, 0.10196803510189056, 0.10936468094587326, 0.10011887550354004, 0.11610091477632523, 0.10817593336105347, 0.11187426000833511, 0.11676132678985596, 0.11438383162021637, 0.1220446452498436, 0.12429005652666092, 0.12732796370983124, 0.1254788041114807, 0.1270637959241867, 0.13115836679935455, 0.13089419901371002, 0.1302337795495987, 0.13129045069217682, 0.14080041646957397, 0.137630432844162, 0.13895125687122345, 0.14436666667461395, 0.14872540533542633, 0.14581957459449768, 0.14634791016578674, 0.15097081661224365, 0.1488574892282486, 0.15361246466636658, 0.15572579205036163, 0.15915995836257935, 0.1566503793001175, 0.15849953889846802, 0.15731078386306763, 0.16417910158634186, 0.16919825971126556, 0.1670849323272705, 0.16378284990787506, 0.17117950320243835, 0.16972659528255463, 0.17831197381019592, 0.1834632158279419, 0.17897239327430725, 0.17831197381019592, 0.18557654321193695, 0.18518029153347015, 0.1826707124710083, 0.19191652536392212, 0.19191652536392212, 0.19402985274791718, 0.19402985274791718, 0.19561484456062317, 0.1982565075159073, 0.19482234120368958, 0.201294407248497, 0.20314356684684753, 0.20935148000717163, 0.21740853786468506, 0.2145027071237564, 0.21093647181987762, 0.20499274134635925, 0.2086910605430603, 0.22242768108844757, 0.21635186672210693, 0.2296922504901886, 0.22374852001667023, 0.22586184740066528, 0.2351076453924179, 0.23035265505313873, 0.23312640190124512, 0.2359001487493515, 0.23735305666923523, 0.23365473747253418, 0.23444722592830658, 0.24118345975875854, 0.24237221479415894, 0.24659886956214905, 0.2448817789554596, 0.2550521790981293, 0.24580636620521545, 0.2467309534549713, 0.26244881749153137, 0.25782591104507446, 0.2553163468837738, 0.2565050721168518, 0.25861841440200806, 0.26760005950927734, 0.2639017403125763, 0.2639017403125763, 0.25756174325942993, 0.2685246467590332, 0.26760005950927734, 0.2635054886341095, 0.2678642272949219, 0.26878878474235535], "val_loss": [1.970268862588065, 1.9696073532104492, 1.968945026397705, 1.968282903943743, 1.9676130839756556, 1.966961111341204, 1.9663119316101074, 1.9656600952148438, 1.9650037629263741, 1.9643610545567103, 1.9637063571384974, 1.9630518640790666, 1.9624005726405553, 1.9617461477007185, 1.9610977854047502, 1.9604484694344657, 1.959794521331787, 1.9591506549290247, 1.9584967068263464, 1.9578489576067244, 1.957198006766183, 1.9565470559256417, 1.9558955601283483, 1.9552483558654785, 1.954587187085833, 1.9539388247898646, 1.9532818794250488, 1.9526248659406389, 1.9519714627947127, 1.9513191495622908, 1.9506598200116838, 1.9499959264482771, 1.9493436813354492, 1.9486860547746931, 1.9480292456490653, 1.947364670889718, 1.9467003004891532, 1.9460338183811732, 1.9453631128583635, 1.944694655282157, 1.9440298761640276, 1.9433627809797014, 1.9426870346069336, 1.9420102664402552, 1.941328661782401, 1.9406448772975378, 1.939962659563337, 1.9392756734575545, 1.93858460017613, 1.9378918239048548, 1.937208584376744, 1.9365131514413017, 1.9358100891113281, 1.935107912336077, 1.9343945639474052, 1.9336814199175154, 1.932964529309954, 1.9322463444301061, 1.9315250941685267, 1.930797781263079, 1.9300663811819894, 1.9293364797319685, 1.9285979270935059, 1.9278530393327986, 1.9271149635314941, 1.9263735498700822, 1.925626618521554, 1.9248746463230677, 1.9241162027631487, 1.9233452251979284, 1.922576563698905, 1.9218054498944963, 1.9210224832807268, 1.9202331134251185, 1.919438430241176, 1.9186434064592635, 1.9178527423313685, 1.9170503616333008, 1.916240964617048, 1.915412221636091, 1.914588451385498, 1.9137652942112513, 1.912940570286342, 1.9121007919311523, 1.9112589018685477, 1.9104146276201521, 1.9095590455191476, 1.9086980819702148, 1.9078268323625838, 1.9069585800170898, 1.906071322304862, 1.9051825659615653, 1.9042953082493372, 1.9033897944859095, 1.9024977002825056, 1.9015800612313407, 1.9006544521876745, 1.8997270039149694, 1.898798601967948, 1.8978565761021204], "val_accuracy": [0.04266666620969772, 0.045666664838790894, 0.049666665494441986, 0.0560000017285347, 0.059333331882953644, 0.06433333456516266, 0.07000000029802322, 0.07333333045244217, 0.07866666465997696, 0.0833333358168602, 0.08833333104848862, 0.09466666728258133, 0.10466666519641876, 0.10966666787862778, 0.11599999666213989, 0.12099999934434891, 0.12866666913032532, 0.13600000739097595, 0.14433333277702332, 0.15299999713897705, 0.15933333337306976, 0.16500000655651093, 0.17100000381469727, 0.17599999904632568, 0.18199999630451202, 0.18933333456516266, 0.19466666877269745, 0.20033332705497742, 0.2083333283662796, 0.2150000035762787, 0.22100000083446503, 0.22766666114330292, 0.23233333230018616, 0.2396666705608368, 0.24633333086967468, 0.25333333015441895, 0.25966668128967285, 0.2643333375453949, 0.27033331990242004, 0.2736666798591614, 0.2783333361148834, 0.2826666533946991, 0.28866666555404663, 0.2916666567325592, 0.2943333387374878, 0.2980000078678131, 0.30399999022483826, 0.3096666634082794, 0.3136666715145111, 0.3179999887943268, 0.32100000977516174, 0.3243333399295807, 0.33133333921432495, 0.33399999141693115, 0.33633333444595337, 0.3396666646003723, 0.3440000116825104, 0.34833332896232605, 0.35233333706855774, 0.35366666316986084, 0.3553333282470703, 0.35766667127609253, 0.3616666793823242, 0.36399999260902405, 0.36800000071525574, 0.36899998784065247, 0.3726666569709778, 0.37533333897590637, 0.3763333261013031, 0.3776666522026062, 0.3790000081062317, 0.3803333342075348, 0.38233333826065063, 0.38333332538604736, 0.3843333423137665, 0.3856666684150696, 0.3880000114440918, 0.3893333375453949, 0.3903333246707916, 0.3916666805744171, 0.39366665482521057, 0.3943333327770233, 0.39633333683013916, 0.39766666293144226, 0.39766666293144226, 0.3996666669845581, 0.40033334493637085, 0.4020000100135803, 0.4036666750907898, 0.40433332324028015, 0.40533334016799927, 0.40533334016799927, 0.406333327293396, 0.4073333442211151, 0.40966665744781494, 0.40966665744781494, 0.4103333353996277, 0.41100001335144043, 0.4116666615009308, 0.41333332657814026]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 1, 3, 3, 1, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 52, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.28057143092155457, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 7, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)))))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.078854606718734, 5314982.096133453, NaN, NaN, NaN, NaN], "accuracy": [0.32082948088645935, 0.14700831472873688, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.161886760166713, 176428521.14285713, NaN, NaN, NaN, NaN], "val_accuracy": [0.25033333897590637, 0.09666666388511658, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 8, 2, 2, 1, 5, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 2, 3, 2, 3, 2, 3, 4, 2, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.20485714077949524, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, grad))))))))), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.3221580897182474, 8.362557426939363, NaN, NaN, NaN, NaN], "accuracy": [0.24633470177650452, 0.11200633645057678, 0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0269101006644115, 1733.3672572544642, NaN, NaN, NaN, NaN], "val_accuracy": [0.17266666889190674, 0.10899999737739563, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [95, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 8, 2, 2, 9, 1, 3, 2, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 5, 3, 3, 3, 1, 2, 1, 4, 4, 3, 1, 4, 1, 3], [79, 52, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 3, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07198520749807358, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 0, 2, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06564522534608841, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [41, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 8, 2, 2, 4, 3, 0, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 2, 0, 3, 0, 2, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [24, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 3, 6, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 0, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 13, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 12, 8, 3, 9, 9, 4, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, beta), tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 4, 8, 2, 2, 1, 3, 0, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 2, 3, 3, 0, 2, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [37, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(alpha, tf.math.sqrt(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302748518408313, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 4, 9, 1, 3, 2, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 0, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), beta), tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0874389111995697, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 8, 2, 2, 9, 1, 3, 2, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 1, 2, 1, 4, 4, 3, 1, 4, 1, 3], [65, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 3, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07158895581960678, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 8, 2, 2, 9, 1, 3, 2, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 1, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 52, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07224937528371811, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [90, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 2, 9, 1, 3, 2, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 1, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 52, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.06942857056856155, "mapping_values": [1, 4, 4, 2, 2, 0, 8, 8, 5, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301600060741962, 2.3001516670551534, 2.299598214743144, 2.2989052298707953, 2.3004086865032227, 2.300425266718836, 2.3001474296852993, 2.3000833813729398, 2.298464574676542, 2.3005859639587625, 2.299105926102273, 2.2997357538268868, 2.299975897012181, 2.299252459622173], "accuracy": [0.08598599582910538, 0.09272222965955734, 0.09457138925790787, 0.10302469879388809, 0.09509972482919693, 0.09866596013307571, 0.0940430611371994, 0.10170386731624603, 0.10566636174917221, 0.09496764093637466, 0.10342095047235489, 0.09800554811954498, 0.09945846349000931, 0.10368511080741882], "val_loss": [1.9702420234680176, 1.9698633466448103, 1.969682080405099, 1.969789709363665, 1.9697424343654089, 1.9698099408830916, 1.9698553766523088, 1.969709805079869, 1.9697072165352958, 1.9697115080697196, 1.9698206356593542, 1.970055035182408, 1.9702917507716589, 1.9705781936645508], "val_accuracy": [0.04466666653752327, 0.049666665494441986, 0.05533333495259285, 0.06199999898672104, 0.06566666811704636, 0.06933332979679108, 0.07066666334867477, 0.07733333110809326, 0.07900000363588333, 0.07866666465997696, 0.07599999755620956, 0.07266666740179062, 0.07333333045244217, 0.07266666740179062]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 3, 9, 1, 0, 1, 5, 1, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [87, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 9, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 0, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.06857142597436905, "mapping_values": [1, 8, 8, 4, 4, 2, 3, 3, 2, 1, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3017819279834595, 2.300633785983181, 2.300190524591384, 2.299270192063039, 2.3009201132185217, 2.3008130759358987, 2.300353075582212, 2.3004297961679825, 2.2986400363908515, 2.3013341677517953, 2.2994709753042293, 2.300307604205638, 2.300210952569843, 2.2990904037647906, 2.299681334715352, 2.2989427700113265, 2.3002283880817984, 2.299388599213104, 2.2995306831765974, 2.300142867516974, 2.3000356645285573, 2.299373544454417, 2.3001883631731306], "accuracy": [0.08598599582910538, 0.09126931428909302, 0.09377889335155487, 0.09998679161071777, 0.0936468094587326, 0.09734513610601425, 0.09219389408826828, 0.10117553919553757, 0.10091137140989304, 0.09219389408826828, 0.10500594228506088, 0.09615638852119446, 0.0936468094587326, 0.10077928751707077, 0.09602430462837219, 0.10342095047235489, 0.10196803510189056, 0.10328886657953262, 0.09945846349000931, 0.10011887550354004, 0.09813763201236725, 0.09721305221319199, 0.09694888442754745], "val_loss": [1.9705168860299247, 1.9702157293047224, 1.9700051035199846, 1.9698404584612166, 1.9696807861328125, 1.9695981570652552, 1.9695217950003487, 1.9694037437438965, 1.9693961824689592, 1.969395433153425, 1.9694014276776994, 1.9694016320364816, 1.969372340611049, 1.9694146428789412, 1.9694098745073592, 1.969499111175537, 1.9695549692426408, 1.9696367127554757, 1.9696779251098633, 1.9697529929024833, 1.9698899132864816, 1.970099857875279, 1.970217227935791], "val_accuracy": [0.04233333468437195, 0.04466666653752327, 0.04766666516661644, 0.052000001072883606, 0.05433333292603493, 0.05966666713356972, 0.061666667461395264, 0.06466666609048843, 0.06466666609048843, 0.06700000166893005, 0.06733333319425583, 0.06866666674613953, 0.07133333384990692, 0.07100000232458115, 0.07266666740179062, 0.07466666400432587, 0.07366666942834854, 0.07500000298023224, 0.07333333045244217, 0.07199999690055847, 0.07333333045244217, 0.07333333045244217, 0.07199999690055847]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 8, 2, 2, 9, 1, 3, 2, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 1, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 52, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 0, 8, 8, 4, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3020090208455413, 2.301267541678291, 2.301153200240482, 2.3002811184869136, 2.3024829581208657, 2.302564169894183], "accuracy": [0.0866464152932167, 0.08968432247638702, 0.09245806187391281, 0.09774138033390045, 0.09285431355237961, 0.09126931428909302], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 7, 7, 2, 2, 1, 3, 0, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [5, 1, 3, 3, 0, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [77, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.036571428179740906, "mapping_values": [1, 3, 3, 1, 2, 0, 25, 25, 14, 11, 2, 9, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.math.sqrt(grad)))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(beta, tf.math.add(alpha, grad))), tf.math.add(tf.math.add(beta, grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.pow(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302458212722357, 2.3028272926815276, 2.3041895033582294, 2.304782138540288, 2.3101647015434166, 2.3134619207146647], "accuracy": [0.08598599582910538, 0.08836349099874496, 0.08796724677085876, 0.0882314071059227, 0.07911768555641174, 0.08268392831087112], "val_loss": [1.9718246459960938, 1.9728114264351981, 1.9739988871983118, 1.9754012652805872, 1.977576392037528, 1.9797427994864327], "val_accuracy": [0.03433333337306976, 0.028999999165534973, 0.02199999988079071, 0.019999999552965164, 0.01666666753590107, 0.01966666616499424]}}]