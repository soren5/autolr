[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8479999899864197, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9553891263381602, 1.2767757037926375, 0.7942210119618652, 0.6708347782356833, 0.6054136966670178, 0.5651703762293271, 0.5520261040043758, 0.5136907440780601, 0.48748518350401165, 0.4800494668852494, 0.4460078130395358, 0.45447769368628566, 0.42243484458934677, 0.41249727566701044, 0.4049809826969738, 0.3858091642890923, 0.3834914446010912, 0.36290552048572317, 0.343899870454958, 0.3419948872510925, 0.33284523887893136, 0.3209530785256656, 0.32947994301174577, 0.306954960844473, 0.3057236931721107, 0.2925901226615704, 0.2787001678704617, 0.2806511212924153, 0.27444201777907506, 0.2602246187153966, 0.25189211874070533, 0.254550756590635, 0.2397663599826625, 0.22735828797752045, 0.23706667285632496, 0.22365828398715992, 0.2145182697638513, 0.20911677350591376, 0.2091539211658801, 0.21451021726372976, 0.2177060758472355, 0.19206657276106642], "accuracy": [0.3625676929950714, 0.5581825375556946, 0.700171709060669, 0.741909921169281, 0.7677981853485107, 0.7862898111343384, 0.7980451583862305, 0.8117818236351013, 0.811649739742279, 0.8231409192085266, 0.8321225643157959, 0.8309338092803955, 0.8425571322441101, 0.8391229510307312, 0.850350022315979, 0.8580108284950256, 0.8588033318519592, 0.8650112152099609, 0.8661999702453613, 0.8698983192443848, 0.8732003569602966, 0.8787478804588318, 0.8725399374961853, 0.884691596031189, 0.8798044919967651, 0.8883898854255676, 0.8910315632820129, 0.8903711438179016, 0.89552241563797, 0.8990886211395264, 0.902390718460083, 0.9014661312103271, 0.9051644206047058, 0.9104477763175964, 0.9056927561759949, 0.9126931428909302, 0.9165235757827759, 0.9162594079971313, 0.9166556596755981, 0.920089840888977, 0.915070652961731, 0.9204860925674438], "val_loss": [1.3492591721670968, 0.6712820700236729, 0.5449501276016235, 0.5054370335170201, 0.46300762040274485, 0.4448221070425851, 0.43210246733256746, 0.4062643051147461, 0.4355733905519758, 0.3823988948549543, 0.39115711620875765, 0.36498830148151945, 0.3735810262816293, 0.3606644187654768, 0.3415490303720747, 0.3348362701279776, 0.3393629193305969, 0.3509626303400312, 0.334343535559518, 0.3275546942438398, 0.3365686961582729, 0.3261458533150809, 0.31963014602661133, 0.33774123021534513, 0.32583086831229074, 0.33042554344449726, 0.3285673260688782, 0.31919481073107037, 0.32971794264657156, 0.31153867074421476, 0.3613511494227818, 0.32445397547313143, 0.3298336608069284, 0.3317683594567435, 0.3278377652168274, 0.32100326674325125, 0.3315227116857256, 0.3443936450140817, 0.3258796419416155, 0.3533927713121687, 0.335729718208313, 0.3403488908495222], "val_accuracy": [0.4753333330154419, 0.6740000247955322, 0.7493333220481873, 0.768666684627533, 0.777999997138977, 0.7896666526794434, 0.7990000247955322, 0.8153333067893982, 0.7986666560173035, 0.8346666693687439, 0.8236666917800903, 0.8386666774749756, 0.8370000123977661, 0.8450000286102295, 0.8493333458900452, 0.8533333539962769, 0.8493333458900452, 0.846666693687439, 0.8616666793823242, 0.856333315372467, 0.8576666712760925, 0.8663333058357239, 0.8653333187103271, 0.8579999804496765, 0.8673333525657654, 0.8566666841506958, 0.8566666841506958, 0.8629999756813049, 0.8610000014305115, 0.871999979019165, 0.8510000109672546, 0.8696666955947876, 0.8669999837875366, 0.8686666488647461, 0.8733333349227905, 0.871999979019165, 0.8759999871253967, 0.8709999918937683, 0.871999979019165, 0.8613333106040955, 0.8736666440963745, 0.8726666569709778]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8408571481704712, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9554103085582504, 1.2762044878793888, 0.795554357709634, 0.6742209329691388, 0.6052482217814015, 0.5652499565862787, 0.5518532155322486, 0.512135468823893, 0.48999791014007116, 0.4806757324352209, 0.44555581811081857, 0.45987023904638175, 0.4217818065279148, 0.4126823733212248, 0.4113607008018514, 0.3829295281657863, 0.39447904657757027, 0.36741933445054403, 0.3460255598174803, 0.33957152568731863, 0.33668161532063573, 0.32311425934441257, 0.31828990084242276, 0.31452654924658485, 0.3100147264044062, 0.29432313746669747, 0.28164230807267476, 0.28526434401526757, 0.27722732608407447, 0.2647516957528839, 0.25017860436152944, 0.2531774207121031, 0.24822800554036936, 0.23417109327388083, 0.23144718585800358, 0.2257692561295558, 0.2144889894741527, 0.2149527608608258, 0.2123222544724364, 0.20570913768282278, 0.2116383739674899, 0.1949950969371939], "accuracy": [0.3625676929950714, 0.55791836977005, 0.6991150379180908, 0.7409853339195251, 0.7696473598480225, 0.7862898111343384, 0.7947431206703186, 0.8092722296714783, 0.8133667707443237, 0.8190463781356812, 0.8348963260650635, 0.8248580098152161, 0.8461233377456665, 0.8437458872795105, 0.8450667262077332, 0.8574824929237366, 0.8539162874221802, 0.8625016212463379, 0.8685774803161621, 0.8708229064941406, 0.8693699836730957, 0.8759741187095642, 0.8790120482444763, 0.8796724081039429, 0.8791441321372986, 0.8878615498542786, 0.8897107243537903, 0.8907673954963684, 0.8926165699958801, 0.902390718460083, 0.9029190540313721, 0.9041078090667725, 0.9041078090667725, 0.9072777628898621, 0.9125610589981079, 0.9141460657119751, 0.9133535623550415, 0.915070652961731, 0.91559898853302, 0.9215427041053772, 0.9146744012832642, 0.9224672913551331], "val_loss": [1.3493759972708566, 0.6699708870479039, 0.5486826726368496, 0.5076253925051007, 0.4614138092313494, 0.4444155863353184, 0.43004127059664043, 0.4022454449108669, 0.44546126467841013, 0.38053910221372333, 0.3928581305912563, 0.363546575818743, 0.37431074040276663, 0.3653114012309483, 0.34906463963644846, 0.336893481867654, 0.34466170413153513, 0.3551252399172102, 0.3354213663509914, 0.3285349522318159, 0.34485879114695955, 0.3283219848360334, 0.3250082731246948, 0.3391126309122358, 0.3297903197152274, 0.3295263648033142, 0.33620383058275494, 0.32608585698263987, 0.3325889451163156, 0.3179137706756592, 0.34455978870391846, 0.3240966967173985, 0.33885687589645386, 0.3302990027836391, 0.32337342841284616, 0.3240544285093035, 0.32766478402273996, 0.36264415298189434, 0.3272396922111511, 0.3413333126476833, 0.32677669184548513, 0.33836565698896137], "val_accuracy": [0.47566667199134827, 0.675000011920929, 0.7473333477973938, 0.7636666893959045, 0.7839999794960022, 0.7919999957084656, 0.8023333549499512, 0.8213333487510681, 0.7923333048820496, 0.8373333215713501, 0.8236666917800903, 0.8393333554267883, 0.8343333601951599, 0.843999981880188, 0.8463333249092102, 0.8539999723434448, 0.8476666808128357, 0.8453333377838135, 0.8619999885559082, 0.8613333106040955, 0.8560000061988831, 0.862666666507721, 0.8643333315849304, 0.8619999885559082, 0.8696666955947876, 0.8583333492279053, 0.8536666631698608, 0.8679999709129333, 0.8613333106040955, 0.8740000128746033, 0.856333315372467, 0.8736666440963745, 0.862333357334137, 0.8723333477973938, 0.8743333220481873, 0.8709999918937683, 0.8763333559036255, 0.8673333525657654, 0.875333309173584, 0.8656666874885559, 0.875333309173584, 0.8763333559036255]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 9, 4, 2, 4, 8, 4, 5, 8, 4, 5, 0, 4, 5, 0, 0, 3, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 3, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8379999995231628, "mapping_values": [1, 4, 4, 2, 2, 1, 22, 22, 15, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.square(grad)), tf.math.sqrt(tf.math.pow(tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, grad)))))), grad)))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9554331734699737, 1.276140750241774, 0.7957905093991541, 0.6726935720084728, 0.6072605345715558, 0.5667508862210996, 0.5505391814413954, 0.5143664329397742, 0.49051460358429233, 0.48205949586333063, 0.44622550084212703, 0.4594082602373188, 0.4238340716950252, 0.41578780286473654, 0.41290975823898074, 0.3830347679522941, 0.383866905441783, 0.3718867176527896, 0.3445456828132297, 0.34583555181438047, 0.3328189875361249, 0.33122822631698134, 0.32794953917531194, 0.3058451050741168, 0.3047272908791512, 0.2939676202212689, 0.28578622542934773, 0.28366657433776243, 0.28852346039970933, 0.26246825271137103], "accuracy": [0.3625676929950714, 0.5572579503059387, 0.7003037929534912, 0.741909921169281, 0.7676661014556885, 0.787082314491272, 0.7950072884559631, 0.809140145778656, 0.8145555257797241, 0.8203672170639038, 0.8323867321014404, 0.8278959393501282, 0.8444063067436218, 0.8392550349235535, 0.8448025584220886, 0.8565579056739807, 0.8564258217811584, 0.8634262084960938, 0.8712190985679626, 0.8691058158874512, 0.8735966086387634, 0.8701624870300293, 0.8751816153526306, 0.8861445188522339, 0.8838990926742554, 0.8865407705307007, 0.8901069760322571, 0.8903711438179016, 0.8858803510665894, 0.9005415439605713], "val_loss": [1.3489201409476144, 0.6692365067345756, 0.5490338121141706, 0.5049633468900409, 0.4592801673071725, 0.44929202113832745, 0.4318804570606777, 0.4130455085209438, 0.4380624975476946, 0.3783878002847944, 0.38885772228240967, 0.3643856304032462, 0.37443212951932636, 0.3745919040271214, 0.34591030223029, 0.3367506521088736, 0.33883302552359446, 0.3564598134585789, 0.3299954618726458, 0.327640243938991, 0.3470818315233503, 0.3298207265990121, 0.32585748604365755, 0.34094040734427317, 0.32493280512945993, 0.3296311412538801, 0.3261980840138027, 0.3273501140730722, 0.3315804515566145, 0.3187982865742275], "val_accuracy": [0.4753333330154419, 0.6779999732971191, 0.75, 0.7663333415985107, 0.7833333611488342, 0.7889999747276306, 0.8006666898727417, 0.8133333325386047, 0.796999990940094, 0.8346666693687439, 0.824999988079071, 0.8393333554267883, 0.8360000252723694, 0.8356666564941406, 0.8496666550636292, 0.8529999852180481, 0.8500000238418579, 0.8429999947547913, 0.8600000143051147, 0.8576666712760925, 0.8479999899864197, 0.859333336353302, 0.8643333315849304, 0.8583333492279053, 0.8690000176429749, 0.8576666712760925, 0.8633333444595337, 0.862666666507721, 0.8600000143051147, 0.8669999837875366]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8257142901420593, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9552556719400187, 1.2721555872348322, 0.795228073987758, 0.6728059750002577, 0.6057287252117788, 0.5654384389907425, 0.5493814199434658, 0.5098287702126353, 0.4885441162063146, 0.4798545244859273, 0.4426302117418698, 0.45773197700476304, 0.42417180314591185, 0.4166728462785258, 0.4174059947263516, 0.38453227213077446, 0.3840277183640036, 0.3650302268085447, 0.34502745059266804, 0.3392836253569977, 0.3331833651092279, 0.3229534499098234, 0.3294311982411372, 0.31055379489377943, 0.31404355754075725, 0.28670440456571517, 0.2841597442747564, 0.28452771867837856, 0.27967799752616074, 0.26176806669492825, 0.2530007022183884, 0.25004284703232404, 0.2478895838120358, 0.23306297001790188, 0.22885868521319908, 0.21768077164435698, 0.21557966700524167, 0.2153595579460139, 0.20837321697390232, 0.20719699340765077, 0.21282904384441978, 0.18769982049548944, 0.1854286793791119, 0.1867861126030063], "accuracy": [0.3625676929950714, 0.557390034198761, 0.6997754573822021, 0.7425703406333923, 0.7693831920623779, 0.7877426743507385, 0.7938185334205627, 0.809140145778656, 0.8149517774581909, 0.8197067975997925, 0.8356888294219971, 0.8259146809577942, 0.8421608805656433, 0.8397833704948425, 0.8469158411026001, 0.8584070801734924, 0.854708731174469, 0.8652753829956055, 0.8698983192443848, 0.8704266548156738, 0.8775591254234314, 0.8726720213890076, 0.8709549307823181, 0.8816536664962769, 0.8733324408531189, 0.8910315632820129, 0.8906353116035461, 0.8889182209968567, 0.8905032277107239, 0.8986923694610596, 0.9013340473175049, 0.90423983335495, 0.901862382888794, 0.910711944103241, 0.9104477763175964, 0.9181085824966431, 0.9170519113540649, 0.9161273241043091, 0.9194294214248657, 0.9214106202125549, 0.9182406663894653, 0.9273543953895569, 0.9270902276039124, 0.9233918786048889], "val_loss": [1.3488260337284632, 0.673755577632359, 0.5463715621403286, 0.5083552769252232, 0.4648857627596174, 0.44536514793123516, 0.43437651225498747, 0.403066771371024, 0.4309352721486773, 0.37740429810115267, 0.39217595543180195, 0.36084539549691336, 0.3752653513635908, 0.36945038182394846, 0.3516841530799866, 0.33874264785221647, 0.33906710147857666, 0.34970706701278687, 0.3345263515199934, 0.33130693435668945, 0.34210431575775146, 0.3298731531415667, 0.32656953164509367, 0.35146316460200716, 0.32805371284484863, 0.3292785882949829, 0.3394548126629421, 0.32353327104023527, 0.3293538008417402, 0.31912880284445627, 0.34515791279929026, 0.3322862982749939, 0.3341411352157593, 0.3339774012565613, 0.31748359543936594, 0.32139086723327637, 0.3256207023348127, 0.35684336934770855, 0.32451512132372173, 0.3475595031465803, 0.32988966362816946, 0.3338431886264256, 0.342952949660165, 0.37243192536490305], "val_accuracy": [0.4753333330154419, 0.671999990940094, 0.7493333220481873, 0.7676666378974915, 0.7799999713897705, 0.7906666398048401, 0.7996666431427002, 0.8220000267028809, 0.8019999861717224, 0.8353333473205566, 0.8246666789054871, 0.8426666855812073, 0.8353333473205566, 0.840666651725769, 0.8446666598320007, 0.8539999723434448, 0.8513333201408386, 0.8493333458900452, 0.8643333315849304, 0.8579999804496765, 0.8519999980926514, 0.8616666793823242, 0.8646666407585144, 0.8513333201408386, 0.8659999966621399, 0.8516666889190674, 0.8533333539962769, 0.8666666746139526, 0.8610000014305115, 0.8700000047683716, 0.856333315372467, 0.8666666746139526, 0.8663333058357239, 0.871999979019165, 0.8743333220481873, 0.8726666569709778, 0.8740000128746033, 0.8676666617393494, 0.878333330154419, 0.8656666874885559, 0.878333330154419, 0.8769999742507935, 0.8763333559036255, 0.862333357334137]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [34, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 9, 4, 0, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 3, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 3, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8159999847412109, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1955408041172686, 1.4338437918233613, 0.9331515732537077, 0.7971134717595765, 0.7263563452159346, 0.6796583428264468, 0.6551443141260325, 0.6170461944160114, 0.5697406575963513, 0.5479085708511598, 0.5306991747995141, 0.5101241288624735, 0.5047080396913093, 0.46954029372591527, 0.4539706793010605, 0.44492476658971636, 0.439592830993244, 0.4180921740173553, 0.3988222673804989, 0.38647707533905645, 0.37404505514654546, 0.3655846192891556, 0.3596772072912286, 0.35364721382629477, 0.3456056572899386, 0.3277540591887007, 0.31144889561712086, 0.31494947701098186, 0.30396524115387225, 0.29025925405588227, 0.2939593524524108, 0.28150853022033545, 0.2777665019736015, 0.271779623281655, 0.2623404617110232, 0.2567758811990803, 0.24627305520224832, 0.2514409620244474, 0.23959449833654348, 0.2366217704217479, 0.23267337183682454, 0.21581483982368593, 0.21204946574014114, 0.21449298108801818, 0.2123471634392851, 0.2061739004976194], "accuracy": [0.2538634240627289, 0.5097081065177917, 0.6618676781654358, 0.700171709060669, 0.7199841737747192, 0.7395324110984802, 0.7445515990257263, 0.7622507214546204, 0.7798177003860474, 0.7907806038856506, 0.7984414100646973, 0.8090080618858337, 0.8068947196006775, 0.8202351331710815, 0.8271034359931946, 0.8354246616363525, 0.8374059200286865, 0.8433496356010437, 0.845859169960022, 0.8568220734596252, 0.8580108284950256, 0.8576145768165588, 0.8651432991027832, 0.8617091774940491, 0.8702945709228516, 0.8734645247459412, 0.8803328275680542, 0.8808611631393433, 0.8796724081039429, 0.8885219693183899, 0.8848236799240112, 0.8932769894599915, 0.8910315632820129, 0.89552241563797, 0.9002773761749268, 0.902390718460083, 0.9039757251739502, 0.8985602855682373, 0.9105798602104187, 0.9062210917472839, 0.9055606722831726, 0.9137498140335083, 0.9146744012832642, 0.9145423173904419, 0.9161273241043091, 0.9207502603530884], "val_loss": [1.4787530899047852, 0.7017730133874076, 0.6023937974657331, 0.5693075486591884, 0.5430907181331089, 0.5089659009660993, 0.4982734067099435, 0.47194438321249826, 0.4400835462978908, 0.4299946427345276, 0.4187492217336382, 0.40862241813114714, 0.39589797598975046, 0.38492655754089355, 0.3811280471937997, 0.3676935774939401, 0.3596950854573931, 0.3552103212901524, 0.348270697253091, 0.3423076697758266, 0.33272374527794973, 0.3306328058242798, 0.3316074184009007, 0.3263827477182661, 0.3235074962888445, 0.3236425689288548, 0.3235932929175241, 0.31603626693998066, 0.3240680694580078, 0.3286833848272051, 0.3171885779925755, 0.3210463268416269, 0.3210979274341038, 0.3235749772616795, 0.32931201798575266, 0.3248694453920637, 0.32564752442496164, 0.3291434815951756, 0.3251962235995701, 0.32275079829352243, 0.32646816968917847, 0.3221825531550816, 0.3320995143481663, 0.3441707832472665, 0.3299698063305446, 0.3446681499481201], "val_accuracy": [0.5036666393280029, 0.6983333230018616, 0.7246666550636292, 0.7363333106040955, 0.7463333606719971, 0.7636666893959045, 0.7820000052452087, 0.7766666412353516, 0.8040000200271606, 0.8166666626930237, 0.8103333115577698, 0.8140000104904175, 0.8263333439826965, 0.8286666870117188, 0.8343333601951599, 0.8386666774749756, 0.8463333249092102, 0.8476666808128357, 0.8526666760444641, 0.8519999980926514, 0.8556666374206543, 0.8573333621025085, 0.8543333411216736, 0.8610000014305115, 0.8576666712760925, 0.8616666793823242, 0.8640000224113464, 0.862666666507721, 0.8633333444595337, 0.859000027179718, 0.8676666617393494, 0.8643333315849304, 0.8659999966621399, 0.8633333444595337, 0.8683333396911621, 0.8653333187103271, 0.8676666617393494, 0.8679999709129333, 0.8700000047683716, 0.8713333606719971, 0.8763333559036255, 0.8743333220481873, 0.8730000257492065, 0.8653333187103271, 0.8700000047683716, 0.8736666440963745]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.808571457862854, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9973509168391845, 1.346443427804124, 1.0387623417237337, 0.8513343370727592, 0.8034119941633706, 0.7686382941424398, 0.7242812307960148, 0.70651827420163, 0.6512979848698822, 0.6844666181711583, 0.6559251801622165, 0.6225969104514287, 0.6171215837815214, 0.5886404032578731, 0.5713770592595293, 0.5767787315936499, 0.5611795103466506, 0.5482250830878702, 0.5355572641494173, 0.529443498096131, 0.5279324207134597, 0.5114468102993006, 0.5057905234712352, 0.4984075367734133, 0.5010526802293881, 0.4615816809419061], "accuracy": [0.3362831771373749, 0.5280676484107971, 0.6145819425582886, 0.681547999382019, 0.6968696117401123, 0.7067758440971375, 0.7263241410255432, 0.7354378700256348, 0.7491744756698608, 0.7436270117759705, 0.7467969655990601, 0.761590301990509, 0.7574957013130188, 0.7691190242767334, 0.7833839654922485, 0.7817989587783813, 0.7858935594558716, 0.7921014428138733, 0.7907806038856506, 0.7987055778503418, 0.7988376617431641, 0.8005547523498535, 0.8068947196006775, 0.8100647330284119, 0.8112534880638123, 0.8232730031013489], "val_loss": [1.4262454169137138, 0.8960887363978794, 0.7038742474147252, 0.6461173125675747, 0.5895859343664986, 0.5676526512418475, 0.5860999482018607, 0.5519353832517352, 0.630446331841605, 0.6343257597514561, 0.5219822951725551, 0.49262276717594694, 0.48305392265319824, 0.4823715516499111, 0.4575012581689017, 0.4518465995788574, 0.4361432875905718, 0.4722377913338797, 0.4227272612707956, 0.41741291114262175, 0.42035973923546927, 0.4387840373175485, 0.4246190701212202, 0.408675023487636, 0.4168193595749991, 0.4013428347451346], "val_accuracy": [0.46000000834465027, 0.6413333415985107, 0.6596666574478149, 0.6980000138282776, 0.7226666808128357, 0.7350000143051147, 0.7336666584014893, 0.7336666584014893, 0.7139999866485596, 0.7016666531562805, 0.7670000195503235, 0.7870000004768372, 0.7720000147819519, 0.7826666831970215, 0.7993333339691162, 0.7900000214576721, 0.7983333468437195, 0.7670000195503235, 0.8063333630561829, 0.8180000185966492, 0.8240000009536743, 0.8016666769981384, 0.8053333163261414, 0.8116666674613953, 0.8146666884422302, 0.8240000009536743]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [34, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 2, 8, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 3, 3, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [92, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7885714173316956, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.263092217743279, 2.113991335477213, 1.7742100238894523, 1.391280500030064, 1.1738761441425136, 1.051626471323092, 0.9837544991544619, 0.9189473508355671, 0.8804646598318108, 0.850493190775395, 0.8126234469900608, 0.8079352584796543, 0.794528652742759, 0.7712275730289756, 0.7446551709725573, 0.7346935541150182, 0.7238079194048881, 0.7211775425764957, 0.7100555589249137, 0.697767504241567, 0.6918934890780198, 0.6880259055581783, 0.6720102403331127, 0.6606787765944055, 0.6624906929004398, 0.6536874156728192, 0.6488483244905761, 0.6442163350827438, 0.6268947518355243, 0.636520292308305, 0.6267017516572131, 0.6288000836647607, 0.6145253115877451], "accuracy": [0.18451987206935883, 0.3630960285663605, 0.4620261490345001, 0.5354642868041992, 0.5970149040222168, 0.6281865239143372, 0.6573768258094788, 0.6738871932029724, 0.6812838315963745, 0.6964733600616455, 0.7084929347038269, 0.7036058902740479, 0.7165499925613403, 0.7224937081336975, 0.7272487282752991, 0.7316074371337891, 0.7337207794189453, 0.7346453666687012, 0.7401928305625916, 0.7457403540611267, 0.7470611333847046, 0.7483819723129272, 0.7536653280258179, 0.7561748623847961, 0.7572315335273743, 0.7607977986335754, 0.7576277852058411, 0.759080708026886, 0.770439863204956, 0.7650244235992432, 0.7677981853485107, 0.7721568942070007, 0.7757231593132019], "val_loss": [1.8749881471906389, 1.6394622325897217, 1.2178965296064104, 0.9280894824436733, 0.8036737782614571, 0.7309815032141549, 0.6852776833942958, 0.6520893744059971, 0.6275655542101178, 0.6044164725712368, 0.5929168122155326, 0.5864666359765189, 0.5660189730780465, 0.5606924636023385, 0.5420878955296108, 0.562315821647644, 0.5310633182525635, 0.5322983946119036, 0.5263477393559047, 0.5267362764903477, 0.5180163213184902, 0.5056630373001099, 0.5032194171633039, 0.4937948499407087, 0.4909683976854597, 0.4909221615110125, 0.4912416764668056, 0.48341662543160574, 0.4792543819972447, 0.4786222832543509, 0.47631776332855225, 0.4821512017931257, 0.48971441813877653], "val_accuracy": [0.4573333263397217, 0.5389999747276306, 0.6060000061988831, 0.6583333611488342, 0.6826666593551636, 0.6959999799728394, 0.7106666564941406, 0.7103333473205566, 0.7303333282470703, 0.7390000224113464, 0.7303333282470703, 0.7426666617393494, 0.7463333606719971, 0.7443333268165588, 0.762333333492279, 0.7363333106040955, 0.7670000195503235, 0.7570000290870667, 0.768666684627533, 0.7749999761581421, 0.7666666507720947, 0.7733333110809326, 0.7820000052452087, 0.7833333611488342, 0.7836666703224182, 0.7816666960716248, 0.7860000133514404, 0.7873333096504211, 0.781333327293396, 0.7866666913032532, 0.7850000262260437, 0.7736666798591614, 0.7726666927337646]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [3, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 2, 8, 2, 4, 8, 4, 9, 8, 8, 8, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 3, 3, 1, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [92, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.11800000071525574, "mapping_values": [1, 4, 4, 2, 2, 2, 22, 22, 16, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.pow(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.add(beta, grad), alpha)))))))), tf.math.square(tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301237040286555, 2.3025272939309405, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735719817025321, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11166666448116302, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [34, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 3, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3458525824304335, 3.011476268763272, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.044908203184604645, 0.01888786070048809, 0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0941781997680664, 20.22050748552595, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004333333112299442, 0.09733333438634872, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 3, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [7, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 2, 0, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30252017695843, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07409853488206863, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 7, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06207898631691933, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [34, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [4, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4747934833320535, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0338132344186306, 0.08915598690509796, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.3520370210920065, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.014999999664723873, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [16, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [68, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07409853488206863, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [34, 66, 89, 50, 85, 46], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 9, 4, 2, 4, 8, 1, 3, 8, 8, 5, 2, 4, 3, 0, 0, 3, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 3, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 23, 23, 14, 9, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.sqrt(tf.math.subtract(tf.math.multiply(grad, tf.math.sqrt(tf.math.sqrt(grad))), tf.math.square(tf.math.add(beta, grad)))))), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad))))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3730467.0958897592, 573052077.584467, 9769169541.968037, 69016192446.46996, 302291080311.15784, 1003407004821.4545], "accuracy": [0.09919429570436478, 0.10289261490106583, 0.09694888442754745, 0.0948355570435524, 0.1026284471154213, 0.09853387624025345], "val_loss": [31333217.14285714, 1685333138.2857144, 18081374793.142857, 98559330596.57143, 369152145115.4286, 1088842366976.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 4, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.078823892088817e+27, 4.253982949675728, 10.253348313491452, 17.373059992399103, 24.56328578203771, 31.76423963557586], "accuracy": [0.06260731816291809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3644393512180875, 6.364925384521484, 12.386875970023018, 18.5671877179827, 24.759076254708425, 30.934141976492747], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.09628571569919586, "mapping_values": [1, 5, 5, 3, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.2978463883971647e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05864482745528221, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 3, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 3, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [98, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.negative(grad))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3014560434812283, 2.3019354604474938, 2.302132439635386, 2.3028211553319413, 2.303018174261512, 2.303928838823576], "accuracy": [0.09285431355237961, 0.09325055778026581, 0.09034473448991776, 0.09219389408826828, 0.08928807079792023, 0.09179764986038208], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [34, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 1, 3, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3014560434812283, 2.3019354604474938, 2.302132439635386, 2.3028211553319413, 2.303018174261512, 2.303928838823576], "accuracy": [0.09285431355237961, 0.09325055778026581, 0.09034473448991776, 0.09219389408826828, 0.08928807079792023, 0.09179764986038208], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.03771428391337395, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 8, 5, 5, 0, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3017029683540495, 2.303355209800026, 2.3053616585276147, 2.308439300737644, 2.3111064797772896, 2.3159823413569742], "accuracy": [0.09153348207473755, 0.08889182657003403, 0.08387266844511032, 0.08691058307886124, 0.08030643314123154, 0.07911768555641174], "val_loss": [1.9721230098179408, 1.9733178274972099, 1.9748598507472448, 1.9767428125653947, 1.9790817669459753, 1.9816467421395438], "val_accuracy": [0.03133333474397659, 0.024666666984558105, 0.02266666665673256, 0.023333333432674408, 0.024000000208616257, 0.026333333924412727]}}]