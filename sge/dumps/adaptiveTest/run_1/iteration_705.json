[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8385714292526245, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.241774008998687, 2.180987036853277, 2.0892150524254283, 1.4076498132796886, 0.961518383328437, 0.8340253453087167, 0.6915719249559951, 0.6541637485258143, 0.632076959899073, 0.574466824799229, 0.5998808728736925, 0.5652603568134527, 0.5487691139532449, 0.5455036445174786, 0.515543041141388, 0.5029096254630411, 0.4921831865556929, 0.492840948917012, 0.47863581904157626, 0.4587231993108393, 0.4604242488440742, 0.42854775256720734, 0.4455964222300432, 0.41107704160456265, 0.4144093452222973, 0.42560416652526145, 0.4164033423774136, 0.4141237968388266, 0.3853311897142924], "accuracy": [0.26878878474235535, 0.24184387922286987, 0.3117157518863678, 0.5317659378051758, 0.6642451286315918, 0.6951525807380676, 0.7446836829185486, 0.7560427784919739, 0.7652885913848877, 0.7837802171707153, 0.7725531458854675, 0.7921014428138733, 0.7930260300636292, 0.7973847389221191, 0.8038568496704102, 0.8150838613510132, 0.8204993009567261, 0.8187822103500366, 0.8255184292793274, 0.828820526599884, 0.8264430165290833, 0.844010055065155, 0.8352925777435303, 0.845859169960022, 0.8492933511734009, 0.8449346423149109, 0.8428213000297546, 0.8453308939933777, 0.8553691506385803], "val_loss": [1.9254082952226912, 1.960442406790597, 1.2854793412344796, 0.9545161042894635, 0.5970260415758405, 0.5583917243140084, 0.49682532038007465, 0.4878901754106794, 0.4698859964098249, 0.4561351537704468, 0.4312819072178432, 0.4547593252999442, 0.426920405455998, 0.40554033858435495, 0.4142499395779201, 0.40503400564193726, 0.39915252583367483, 0.3789582167352949, 0.37644754137311665, 0.3845418265887669, 0.37987154722213745, 0.3833039828709194, 0.36143912587847027, 0.3621796028954642, 0.3602956363133022, 0.36539396217891146, 0.365047207900456, 0.36246964761189054, 0.34593260288238525], "val_accuracy": [0.18933333456516266, 0.13699999451637268, 0.5479999780654907, 0.6629999876022339, 0.7276666760444641, 0.7689999938011169, 0.7836666703224182, 0.7796666622161865, 0.8096666932106018, 0.7883333563804626, 0.8113333582878113, 0.7896666526794434, 0.8136666417121887, 0.8273333311080933, 0.8213333487510681, 0.8183333277702332, 0.8289999961853027, 0.8363333344459534, 0.8356666564941406, 0.8360000252723694, 0.8363333344459534, 0.8293333053588867, 0.8473333120346069, 0.8536666631698608, 0.8450000286102295, 0.8420000076293945, 0.8473333120346069, 0.8483333587646484, 0.8529999852180481]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [1, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.7457143068313599, "mapping_values": [1, 4, 4, 2, 2, 1, 17, 17, 9, 8, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, grad))), alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.294260072134993, 2.2439652242523223, 2.127601077480717, 1.840881892750213, 1.4925799714008956, 1.408303315487394, 1.1819652039629043, 0.9663687090454258, 0.9434119854715317, 0.8891775473674779, 0.8750553770686311, 0.8796769938039396, 0.8575260663911132, 0.8074818426245444, 0.8124441426065793, 0.7917146057799791, 0.7643762524684407, 0.7478742217973491, 0.7268129190701409, NaN, NaN, NaN, NaN], "accuracy": [0.10738343745470047, 0.23986263573169708, 0.3603222966194153, 0.41843879222869873, 0.49148064851760864, 0.5329546928405762, 0.6106194853782654, 0.640338122844696, 0.646149754524231, 0.6667547225952148, 0.667811393737793, 0.6753401160240173, 0.6742834448814392, 0.6931713223457336, 0.6877558827400208, 0.7018887996673584, 0.71100252866745, 0.720380425453186, 0.7083608508110046, 0.17963281273841858, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9440546035766602, 1.8708480426243372, 1.6908831596374512, 1.2610111917768205, 0.8684230872562954, 0.7561804907662528, 0.6964877162660871, 0.7064867189952305, 0.7027071033205304, 0.6313989673342023, 0.6191845621381488, 0.6176327296665737, 0.5980626685278756, 0.5896939039230347, 0.6294790506362915, 0.5651858023234776, 0.5742136410304478, 0.5291893822806222, 0.5382697752543858, NaN, NaN, NaN, NaN], "val_accuracy": [0.2796666622161865, 0.4206666648387909, 0.4883333444595337, 0.5646666884422302, 0.675000011920929, 0.6919999718666077, 0.7170000076293945, 0.7036666870117188, 0.7096666693687439, 0.7229999899864197, 0.7279999852180481, 0.718666672706604, 0.7300000190734863, 0.7433333396911621, 0.7453333139419556, 0.7476666569709778, 0.7523333430290222, 0.7676666378974915, 0.7633333206176758, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.7302857041358948, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.29938291586968, 2.2925300643491613, 2.2875144544011174, 2.2803534767993328, 2.272989432352913, 2.2668189130454817, 2.2594874659077115, 2.252497849951268, 2.2431398859239446, 2.2357681354968113, 2.228052780439573, 2.217950970410765, 2.2097686540023953, 2.2000330232626033, 2.1879580082941867, 2.173390127365159, 2.1587544216566146, 2.1488952422894663, 2.1290129277495473, 2.11299286432207, 2.0942111730796, 2.073640067012728, 2.0482584402592994, 2.0298773242560957, 2.0048867418561014, 1.9825747883504077, 1.9489399580325055, 1.9230405567753914, 1.8978910724390232, 1.8674300102872021, 1.834679099342307, 1.798384383370013, 1.7674050063914344, 1.7326743194628953, 1.7007467767361244, 1.6702132528610139, 1.6425892914826323, 1.604086580923315, 1.5678996915090448, 1.5496904507856075, 1.5223380173076146, 1.4990597438535134, 1.457423906143016, 1.4381198638843713, 1.4031242256891363, 1.3890952735198503, 1.3754886135275906, 1.3483133927123454, 1.3282104654555245, 1.3063393950918962, 1.2887340659053492, 1.2690284050624163, 1.25960362782615, 1.2422012946924057, 1.2328760714783502, 1.2209221026554493, 1.2034364956213484, 1.1885122447013226, 1.1783396967051603, 1.1697403873513639, 1.1655779261362944, 1.140975605605411, 1.134624371958793, 1.1227448646654747, 1.1234899016104323, 1.1088873125448393, 1.0980100363410301, 1.0810599082087198, 1.071636521411594, 1.0654742460303759, 1.0589028132857743, 1.0405696408466152, 1.0458783347923775, 1.0394146594042635, 1.0372788268561535, 1.021636389391754, 1.0207642861455581, 1.0169521334022973, 1.0110873920948058, 1.0025801489838457, 0.9861974124627547, 0.9841908257572233, 0.981376383093921, 0.9722237284582493, 0.9662413660561356, 0.964092166991266, 0.9520142311669454, 0.9471847896232045, 0.9614710259305299, 0.9410690415914835, 0.9550837797180789, 0.9480896850838999, 0.9360030419979869, 0.9314978558389565, 0.9380587399785293, 0.9209831655930849, 0.9193802546232982, 0.9160586480514296, 0.9046078842266628, 0.9097959351514419], "accuracy": [0.09576013684272766, 0.1158367469906807, 0.12812046706676483, 0.1476687341928482, 0.1674811840057373, 0.1888786107301712, 0.20512482523918152, 0.22665433585643768, 0.2491084337234497, 0.254920095205307, 0.2681283950805664, 0.28741249442100525, 0.29824328422546387, 0.30022454261779785, 0.31303659081459045, 0.33099988102912903, 0.3465856611728668, 0.3481706380844116, 0.3607185184955597, 0.3695680797100067, 0.3825122117996216, 0.38964468240737915, 0.40681546926498413, 0.40404173731803894, 0.4130233824253082, 0.4208162724971771, 0.4309866726398468, 0.4356095492839813, 0.43243956565856934, 0.4414212107658386, 0.4476291239261627, 0.4624224007129669, 0.4600449204444885, 0.468630313873291, 0.48289525508880615, 0.47946110367774963, 0.49068814516067505, 0.5025756359100342, 0.5115572810173035, 0.5049530863761902, 0.5105006098747253, 0.5159159898757935, 0.5288601517677307, 0.5301809310913086, 0.5396909117698669, 0.5411438345909119, 0.5349359512329102, 0.5474838018417358, 0.5571258664131165, 0.5606921315193176, 0.5672962665557861, 0.564258337020874, 0.5675604343414307, 0.5810328722000122, 0.575089156627655, 0.5849953889846802, 0.5852595567703247, 0.5879011750221252, 0.5906749367713928, 0.5925241112709045, 0.5984678268432617, 0.603090763092041, 0.6082419753074646, 0.6070532202720642, 0.6073173880577087, 0.613789439201355, 0.6135252714157104, 0.6170915365219116, 0.6152423620223999, 0.6247523427009583, 0.6243560910224915, 0.6330735683441162, 0.6343944072723389, 0.6288469433784485, 0.6324131488800049, 0.6415268778800964, 0.6432439684867859, 0.644300639629364, 0.6371681690216064, 0.64231938123703, 0.6518293619155884, 0.651168942451477, 0.6547351479530334, 0.6557918190956116, 0.6568484902381897, 0.6592260003089905, 0.6612072587013245, 0.6593580842018127, 0.6581693291664124, 0.6700568199157715, 0.6598864197731018, 0.6593580842018127, 0.6635847091674805, 0.6656980514526367, 0.6675472259521484, 0.6704530715942383, 0.6725663542747498, 0.6717738509178162, 0.6778497099876404, 0.6763967871665955], "val_loss": [1.9648182051522392, 1.9587814467293876, 1.95280579158238, 1.9467411722455705, 1.9405832290649414, 1.9342066219874792, 1.9275738852364677, 1.9205872671944755, 1.913151468549456, 1.9053499358040946, 1.8970138004847936, 1.88804258619036, 1.87839903150286, 1.8679451261247908, 1.8567346164158411, 1.844510759626116, 1.8312573432922363, 1.81706326348441, 1.8014717102050781, 1.7847802979605538, 1.766740322113037, 1.747213363647461, 1.7261033739362444, 1.703883341380528, 1.6802191393715995, 1.6552157061440604, 1.6284423896244593, 1.6002065113612585, 1.5712117467607771, 1.5409283297402518, 1.5098692689623152, 1.4776358263833183, 1.4453503744942802, 1.4126097134181432, 1.379474401473999, 1.3466872828347343, 1.3145273753574915, 1.2826087134225028, 1.2512343951633997, 1.2212109565734863, 1.192460264478411, 1.1648358617510115, 1.1382415294647217, 1.1130426611219133, 1.0885648727416992, 1.0658226013183594, 1.0444433689117432, 1.0244648797171456, 1.0049778052738734, 0.9867243426186698, 0.9695226124354771, 0.9529345376150948, 0.9379039491925921, 0.9231109959738595, 0.9091605799538749, 0.8964648927961077, 0.8839868477412632, 0.8718471527099609, 0.8608422960553851, 0.8502386467797416, 0.8408909354891095, 0.8308649233409336, 0.8218932151794434, 0.8132264614105225, 0.8054451431546893, 0.797909004347665, 0.7898582560675484, 0.7822622912270683, 0.7753456490380424, 0.7687105962208339, 0.7623118162155151, 0.7555666310446603, 0.7496316262653896, 0.7440188782555717, 0.7387544087001255, 0.7334046363830566, 0.7289425304957798, 0.7241226775305611, 0.7196294580187116, 0.7154156310217721, 0.7106239965983799, 0.7066874504089355, 0.7026048728397915, 0.698333774294172, 0.6942169325692313, 0.6901842696326119, 0.6865715299333844, 0.6835265159606934, 0.6805561440331596, 0.676620534488133, 0.6737356526511056, 0.67119072164808, 0.6683546815599714, 0.6652327265058245, 0.6626474346433368, 0.6601252044950213, 0.6574672971452985, 0.6548654351915631, 0.6523312330245972, 0.6498533487319946], "val_accuracy": [0.08133333176374435, 0.14233332872390747, 0.20033332705497742, 0.2606666684150696, 0.2996666729450226, 0.3400000035762787, 0.3683333396911621, 0.38466668128967285, 0.39766666293144226, 0.4086666703224182, 0.4176666736602783, 0.4286666810512543, 0.43933331966400146, 0.4463333189487457, 0.45100000500679016, 0.4620000123977661, 0.4716666638851166, 0.4819999933242798, 0.4860000014305115, 0.4933333396911621, 0.5009999871253967, 0.5096666812896729, 0.5183333158493042, 0.5246666669845581, 0.5299999713897705, 0.5373333096504211, 0.5393333435058594, 0.5446666479110718, 0.5506666898727417, 0.5540000200271606, 0.5583333373069763, 0.5630000233650208, 0.5683333277702332, 0.5756666660308838, 0.5826666951179504, 0.5873333215713501, 0.5910000205039978, 0.5956666469573975, 0.6019999980926514, 0.609333336353302, 0.6176666617393494, 0.6226666569709778, 0.6296666860580444, 0.6353333592414856, 0.6433333158493042, 0.6470000147819519, 0.6549999713897705, 0.6600000262260437, 0.6653333306312561, 0.6703333258628845, 0.6713333129882812, 0.6733333468437195, 0.6753333210945129, 0.6773333549499512, 0.6800000071525574, 0.6783333420753479, 0.6830000281333923, 0.6863333582878113, 0.6883333325386047, 0.6890000104904175, 0.6916666626930237, 0.6946666836738586, 0.6949999928474426, 0.6963333487510681, 0.6973333358764648, 0.6980000138282776, 0.6996666789054871, 0.699999988079071, 0.7016666531562805, 0.70333331823349, 0.7026666402816772, 0.7049999833106995, 0.7076666951179504, 0.7083333134651184, 0.7076666951179504, 0.7096666693687439, 0.7126666903495789, 0.7126666903495789, 0.715666651725769, 0.718666672706604, 0.7193333506584167, 0.718999981880188, 0.7213333249092102, 0.7226666808128357, 0.7236666679382324, 0.7246666550636292, 0.7266666889190674, 0.7256666421890259, 0.7260000109672546, 0.7279999852180481, 0.7283333539962769, 0.7303333282470703, 0.7319999933242798, 0.7316666841506958, 0.7336666584014893, 0.7350000143051147, 0.7350000143051147, 0.7356666922569275, 0.7360000014305115, 0.7369999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.7294285893440247, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2993834421792445, 2.2925307796048986, 2.2875141846804556, 2.2803473228224833, 2.2729764233144394, 2.2667957824439484, 2.2594482843917767, 2.2524422180257404, 2.2430599570006677, 2.235657878413948, 2.2279088346004925, 2.217762941099224, 2.209528981670964, 2.1997295269609016, 2.187575362346207, 2.1729032542365116, 2.1581459440307658, 2.148148915330259, 2.1280814742903433, 2.111871983412628, 2.092859027345088, 2.0719891407265876, 2.0462706883853343, 2.02758124016059, 2.002181213860341, 1.9795007590903677, 1.945349879189883, 1.9189833403106031, 1.89337338583738, 1.8624010558739912, 1.8291644796231137, 1.7923422103954139, 1.7609240972858773, 1.7257168625544532, 1.6933920026187648, 1.6625122551306475, 1.6347364975775962, 1.5958761718247656, 1.5594942373543557, 1.5412946309647808, 1.5140429370360147, 1.4907465935887094, 1.4491307401008389, 1.4299622001649208, 1.3950126084669185, 1.3813577267818478, 1.3678798879284066, 1.340887468095154, 1.3207609232437845, 1.299230949596218, 1.281740753925582, 1.2622778390172198, 1.2530915603472683, 1.2357470498282155, 1.2267432160082117, 1.215013326119753, 1.1974351630943358, 1.1826889864316061, 1.1727214356958906, 1.1642518508168196, 1.1602935279758773, 1.1356806308365675, 1.1295186607608738, 1.1177237600525058, 1.1186205638067488, 1.104109808973837, 1.0932201047252907, 1.0764102002711833, 1.0670836479940025, 1.0609699569090467, 1.0546651040211865, 1.036382510142162, 1.0418233982938203, 1.035431268869878, 1.0333156583961354, 1.0179427451917982, 1.0171160437821114, 1.0133712418311465, 1.0074747775634203, 0.9991280957456152, 0.9826360013679885, 0.9809169659777057, 0.9781112081780016, 0.9688876137489719, 0.9631664673209175, 0.9609316388739728, 0.9492723369847168, 0.9442252816462388, 0.9585452837919468, 0.9382811329462714, 0.9521916435615435, 0.9453332756709083, 0.9332662556212671, 0.9288257325660787, 0.9356574704382224, 0.9185558983032903, 0.9168809703816323, 0.9136896090043959, 0.902247379736547, 0.9074046402842912], "accuracy": [0.09576013684272766, 0.1158367469906807, 0.12812046706676483, 0.14780081808567047, 0.16734910011291504, 0.189274862408638, 0.20512482523918152, 0.22665433585643768, 0.24924051761627197, 0.2550521790981293, 0.2677321434020996, 0.28780874609947205, 0.29837536811828613, 0.30022454261779785, 0.3129045069217682, 0.33218860626220703, 0.3463214933872223, 0.3485668897628784, 0.3609826862812042, 0.3695680797100067, 0.38224804401397705, 0.3895126283168793, 0.40787214040756226, 0.40404173731803894, 0.41368380188941956, 0.42187294363975525, 0.4319112300872803, 0.43666622042655945, 0.4333641529083252, 0.44247788190841675, 0.448949933052063, 0.4636111557483673, 0.46123364567756653, 0.4707436263561249, 0.4858010709285736, 0.4810461103916168, 0.4924052357673645, 0.5044247508049011, 0.5130101442337036, 0.5060097575187683, 0.5116893649101257, 0.5178972482681274, 0.5305771827697754, 0.5307092666625977, 0.5407475829124451, 0.5411438345909119, 0.5373134613037109, 0.5488046407699585, 0.55791836977005, 0.5622771382331848, 0.5686171054840088, 0.5654470920562744, 0.5688812732696533, 0.5818253755569458, 0.5752212405204773, 0.5868445634841919, 0.585919976234436, 0.5890899300575256, 0.591731607913971, 0.5945053696632385, 0.5995244979858398, 0.604939877986908, 0.6091665625572205, 0.6083740592002869, 0.6095628142356873, 0.613789439201355, 0.614317774772644, 0.6186765432357788, 0.6169594526290894, 0.6269977688789368, 0.6258090138435364, 0.6347906589508057, 0.6355831623077393, 0.63096022605896, 0.6321489810943604, 0.6427156329154968, 0.644300639629364, 0.6446968913078308, 0.6392814517021179, 0.6435081362724304, 0.6522256135940552, 0.6532822847366333, 0.6551313996315002, 0.6564522385597229, 0.6581693291664124, 0.6601505875587463, 0.6616035103797913, 0.6605468392372131, 0.6592260003089905, 0.6692643165588379, 0.6612072587013245, 0.6597543358802795, 0.663848876953125, 0.667811393737793, 0.668339729309082, 0.6729626059532166, 0.6720380187034607, 0.6716417670249939, 0.6799629926681519, 0.6765288710594177], "val_loss": [1.9648178645542689, 1.9587809017726354, 1.9528017044067383, 1.9467293194362096, 1.9405625888279505, 1.9341729027884347, 1.9275256565638952, 1.9205212593078613, 1.9130584853036063, 1.9052222796848841, 1.8968475205557687, 1.8878271239144462, 1.878119741167341, 1.867596217564174, 1.8562981060573034, 1.8439647129603796, 1.8305754661560059, 1.8162288665771484, 1.800454889025007, 1.783550807407924, 1.765249456678118, 1.7454229082380022, 1.7239623069763184, 1.7013659477233887, 1.677283832005092, 1.6518274715968542, 1.624553646360125, 1.5957953589303153, 1.5662630966731481, 1.5354324749537878, 1.5038082599639893, 1.471031597682408, 1.4382311276027135, 1.4049903665270125, 1.3713585989815849, 1.3381295885358537, 1.3056193079267229, 1.2734083788735526, 1.2418362753731864, 1.2117191042218889, 1.1829498154776437, 1.155374254499163, 1.1288450786045618, 1.1037651130131312, 1.0794062273842948, 1.0568411009652274, 1.035661084311349, 1.0159081731523787, 0.9966557707105365, 0.9786577224731445, 0.9616823877607074, 0.9453385898045131, 0.9305779593331474, 0.9160307134900775, 0.9022894246237618, 0.8898700645991734, 0.8775961399078369, 0.8656484058925084, 0.8548354080745152, 0.8444303614752633, 0.8352886097771781, 0.8254419054303851, 0.8166777747017997, 0.8081906523023333, 0.8005954027175903, 0.7932223762784686, 0.7852869204112461, 0.7778366122926984, 0.7710494654519218, 0.764570815222604, 0.7582785912922451, 0.7516264234270368, 0.7458275726863316, 0.7403487818581718, 0.7352113042558942, 0.7299846751349313, 0.7256411824907575, 0.7209185702460152, 0.7165083374295916, 0.7123983076640538, 0.7076888425009591, 0.7038424355643136, 0.6998399496078491, 0.6956840583256313, 0.691625850541251, 0.6876563344682965, 0.6841209275381905, 0.6811684199741909, 0.6782625573022025, 0.6743378639221191, 0.6715520790645054, 0.6690510851996285, 0.6662608555385044, 0.6631614140101841, 0.6606343984603882, 0.6581648928778512, 0.655550650187901, 0.6529781307492938, 0.6504863841193063, 0.6480482986995152], "val_accuracy": [0.08133333176374435, 0.14233332872390747, 0.20033332705497742, 0.2606666684150696, 0.30033332109451294, 0.3400000035762787, 0.3686666786670685, 0.3840000033378601, 0.3973333239555359, 0.4086666703224182, 0.4176666736602783, 0.42933332920074463, 0.43933331966400146, 0.4466666579246521, 0.4506666660308838, 0.4620000123977661, 0.4726666808128357, 0.4819999933242798, 0.4866666793823242, 0.4959999918937683, 0.500333309173584, 0.5109999775886536, 0.5193333625793457, 0.5256666541099548, 0.5320000052452087, 0.5383333563804626, 0.5413333177566528, 0.5456666946411133, 0.5523333549499512, 0.5550000071525574, 0.5606666803359985, 0.565666675567627, 0.5703333616256714, 0.57833331823349, 0.5843333601951599, 0.5876666903495789, 0.5926666855812073, 0.5986666679382324, 0.6043333411216736, 0.6119999885559082, 0.6213333606719971, 0.6259999871253967, 0.6323333382606506, 0.6386666893959045, 0.6470000147819519, 0.6513333320617676, 0.656000018119812, 0.6616666913032532, 0.6679999828338623, 0.6713333129882812, 0.6710000038146973, 0.6746666431427002, 0.6766666769981384, 0.6779999732971191, 0.6809999942779541, 0.6793333292007446, 0.6836666464805603, 0.687333345413208, 0.6890000104904175, 0.6913333535194397, 0.6933333277702332, 0.6949999928474426, 0.6956666707992554, 0.6973333358764648, 0.6973333358764648, 0.6986666917800903, 0.699999988079071, 0.7023333311080933, 0.70333331823349, 0.7039999961853027, 0.7039999961853027, 0.706333339214325, 0.7076666951179504, 0.7083333134651184, 0.7086666822433472, 0.7116666436195374, 0.7129999995231628, 0.7139999866485596, 0.7166666388511658, 0.718666672706604, 0.7196666598320007, 0.7200000286102295, 0.7223333120346069, 0.7236666679382324, 0.7250000238418579, 0.7253333330154419, 0.7273333072662354, 0.7276666760444641, 0.7260000109672546, 0.7283333539962769, 0.7286666631698608, 0.7300000190734863, 0.7316666841506958, 0.7316666841506958, 0.7336666584014893, 0.7350000143051147, 0.734333336353302, 0.7353333234786987, 0.7369999885559082, 0.7369999885559082]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 8, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.3919999897480011, "mapping_values": [1, 5, 5, 3, 2, 1, 17, 17, 9, 8, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.243456922549267, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.23022057116031647, 0.15097081661224365, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9502316883632116, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.34700000286102295, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [74, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 4, 2, 1, 9, 9, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [56, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.22685714066028595, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.0424900501159517, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18372738361358643, 0.12032756209373474, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0719450541904996, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.2709999978542328, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 1, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [6, 35, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [95074173.93356808, 1805904152.5822217, 8329660864.228239, 23396807857.58711, 50689099834.699776, 93646422782.07265], "accuracy": [0.09932637959718704, 0.1026284471154213, 0.09800554811954498, 0.10196803510189056, 0.09972262382507324, 0.1006472036242485], "val_loss": [353571172.5714286, 2826568411.428571, 9537417508.571428, 22604607488.0, 44146286592.0, 76281317668.57143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 4, 2, 1, 8, 9, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 2, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [6, 35, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 8, 6, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.pow(beta, tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, grad)))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1689481.83613486, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05005943775177002, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.843680506682448e+24, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [93, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [66, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.multiply(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [93, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302513658315467, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [87, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [6, 35, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 1, 3, 3, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [56, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3102465562690693, 2.369292703239815, 2.5710612817793757, 5.345259979337733, 2.877053320620372e+25, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.025624092668294907, 0.008057059720158577, 0.01783119887113571, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9992090633937292, 2.092538220541818, 2.4756313051496233, 23.009316035679408, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.00566666666418314, 0.004999999888241291, 0.007000000216066837, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [31, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [1, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [80, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06432439386844635, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [92, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 4, 2, 1, 9, 9, 2, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 1, 3, 2, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [56, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3021487333771105, 2.3019794716795343, 2.303377561533944, 2.3028052302871824, 2.3019088664311207, 2.302645066095901], "accuracy": [0.08994849026203156, 0.09285431355237961, 0.0866464152932167, 0.09694888442754745, 0.09259014576673508, 0.08928807079792023], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [56, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3021487333771105, 2.3019794716795343, 2.303377561533944, 2.3028052302871824, 2.3019088664311207, 2.302645066095901], "accuracy": [0.08994849026203156, 0.09285431355237961, 0.0866464152932167, 0.09694888442754745, 0.09259014576673508, 0.08928807079792023], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]