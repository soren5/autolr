[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1, 1], [1, 3, 8, 6, 0], [3, 0, 2], [16, 52, 13]], "fitness": -0.6857143044471741, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.217790602441036, 1.54815966620689, 1.0248970567841555, 0.859166161054476, 0.7997602762846568, 0.7591494122878546, 0.7303740962495452, 0.6655001994121533, 0.6401410628508236, 0.6003960109956827, 0.5737276150172239, 0.554981978735384, 0.5530431991665198, 0.5318150742966281, 0.5159522926078386, 0.49951573090782536, 0.4985936983008631, 0.4792074707473636, 0.47299619660858055, 0.46041723788217576, 0.4558498903492958, 0.44726991616440426, 0.44543361430784745, 0.42401756097249793, 0.4194265603625527, 0.4252887364069012, 0.39934542561802394], "accuracy": [0.23986263573169708, 0.49253731966018677, 0.6296393871307373, 0.6790384650230408, 0.6992471218109131, 0.7144366502761841, 0.7232862114906311, 0.7475894689559937, 0.7597411274909973, 0.7737419009208679, 0.7795535326004028, 0.7812706232070923, 0.7906485199928284, 0.793950617313385, 0.8037247657775879, 0.8103289008140564, 0.8112534880638123, 0.8185180425643921, 0.8251221776008606, 0.8251221776008606, 0.8253863453865051, 0.837141752243042, 0.8300092220306396, 0.8404437899589539, 0.8399154543876648, 0.8450667262077332, 0.8473120927810669], "val_loss": [1.5945852484021867, 0.7619699239730835, 0.6960240432194301, 0.5956771884645734, 0.5742729221071515, 0.5333303383418492, 0.4987762825829642, 0.4727386065891811, 0.46034278188432964, 0.4468109522547041, 0.4269480620111738, 0.4183967709541321, 0.4164571932383946, 0.4119824171066284, 0.4097627231052944, 0.41914041553224834, 0.4028429899896894, 0.4012218117713928, 0.3893170441899981, 0.39004009110586985, 0.36577881234032766, 0.37821256262915476, 0.3793408104351589, 0.36036271708352224, 0.37670927388327463, 0.37847729240145, 0.4046404021126883], "val_accuracy": [0.5046666860580444, 0.6786666512489319, 0.7213333249092102, 0.722000002861023, 0.7509999871253967, 0.7566666603088379, 0.7710000276565552, 0.7876666784286499, 0.784333348274231, 0.8013333082199097, 0.8063333630561829, 0.8196666836738586, 0.8226666450500488, 0.8183333277702332, 0.8273333311080933, 0.8206666707992554, 0.8256666660308838, 0.8346666693687439, 0.8339999914169312, 0.8389999866485596, 0.8453333377838135, 0.8456666469573975, 0.8353333473205566, 0.8446666598320007, 0.8423333168029785, 0.843666672706604, 0.8356666564941406]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.6011428833007812, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.302174600580538, 2.299949901829212, 2.2986646622809057, 2.2935921815187705, 2.2924819852004923, 2.290227229395846, 2.287012769844963, 2.2849747859381444, 2.2818759581069936, 2.280806057110848, 2.2778559692500213, 2.2765921021591105, 2.2726202194386187, 2.2709206392925334, 2.268828600278982, 2.2660626317720687, 2.2644795427673827, 2.2596219412922434, 2.2582450047806506, 2.2542988570327567, 2.254067088036316, 2.250405590028149, 2.248545793856549, 2.2455911751609703, 2.2429062802762307, 2.2377148962543627, 2.2373843179513058, 2.2337486101510016, 2.230583673990351, 2.2264746258901553, 2.2220051680038226, 2.219138460042155, 2.2163926674909975, 2.2130251138941834, 2.2069530803860298, 2.204455070932701, 2.19913128007751, 2.193544531133055, 2.193335339503754, 2.1892108206168897, 2.1836563895296948, 2.1792814243486953, 2.1740326679551196, 2.170911473400321, 2.16615179731011, 2.159112701200617, 2.15659767368041, 2.1493154428953414, 2.143785300397791, 2.1417095874357597, 2.1317291585067952, 2.1255843360363262, 2.121138085180254, 2.1173129259965298, 2.1068640343501444, 2.1026920387065013, 2.0937171130998498, 2.0857426372611716, 2.079862989029628, 2.069537949773063, 2.0664944864141312, 2.0594266216437798, 2.0456518191608533, 2.0419755724868, 2.0288003002726533, 2.022956230542474, 2.0125424144857234, 2.001972852901398, 1.9950285479377179, 1.9874400246365354, 1.9770138204184349, 1.962660514525828, 1.9560255206665735, 1.9459403954665768, 1.9367265255380977, 1.9279699187630817, 1.9140948699906581, 1.905492959651083, 1.8966019142258201, 1.8851284282775271, 1.8688074373660417, 1.8588695222077163, 1.8481239178051267, 1.838439799350219, 1.821189927088035, 1.814931108132487, 1.80103312038144, 1.7887925242294394, 1.7728639736214586, 1.761299747344352, 1.7496659139427353, 1.7363261860028831, 1.7307251967679649, 1.7191322404380016, 1.7082362935811048, 1.6938930642036414, 1.6799033397318839, 1.6655041953875263, 1.6597103314109372, 1.6482160528180716], "accuracy": [0.09008057415485382, 0.09774138033390045, 0.10130762308835983, 0.11253467202186584, 0.11887465417385101, 0.11887465417385101, 0.13181878626346588, 0.13432836532592773, 0.14212125539779663, 0.15281997621059418, 0.1570466309785843, 0.15519747138023376, 0.1686699241399765, 0.17157575488090515, 0.18359529972076416, 0.18755778670310974, 0.18412363529205322, 0.2067098170518875, 0.2067098170518875, 0.2176727056503296, 0.21701228618621826, 0.22493726015090942, 0.2296922504901886, 0.23325848579406738, 0.24686303734779358, 0.2557125985622406, 0.24157971143722534, 0.25782591104507446, 0.26720380783081055, 0.26324132084846497, 0.27499669790267944, 0.2763175368309021, 0.28278958797454834, 0.2884691655635834, 0.29520538449287415, 0.29480913281440735, 0.30524370074272156, 0.3148857355117798, 0.31184783577919006, 0.31937655806541443, 0.3129045069217682, 0.3273015320301056, 0.33047154545783997, 0.3299432098865509, 0.3343019485473633, 0.3415665030479431, 0.34143441915512085, 0.3547748029232025, 0.349359393119812, 0.3471139967441559, 0.35266146063804626, 0.3619072735309601, 0.37062475085258484, 0.3691718280315399, 0.37604016065597534, 0.37207767367362976, 0.37828555703163147, 0.37921014428138733, 0.3789459764957428, 0.39506009221076965, 0.3875313699245453, 0.3932109475135803, 0.4027208983898163, 0.39941883087158203, 0.41011756658554077, 0.4041738212108612, 0.414608359336853, 0.4138158857822418, 0.4169858694076538, 0.41751420497894287, 0.4135517179965973, 0.43243956565856934, 0.4225333631038666, 0.42491084337234497, 0.4295337498188019, 0.43006208539009094, 0.43164706230163574, 0.4279487431049347, 0.4333641529083252, 0.43666622042655945, 0.4434024691581726, 0.4481574296951294, 0.44749704003334045, 0.44644036889076233, 0.45304450392723083, 0.45383700728416443, 0.4562145173549652, 0.4633469879627228, 0.46268656849861145, 0.46347907185554504, 0.4691586196422577, 0.4711398780345917, 0.46651697158813477, 0.4675736427307129, 0.472989022731781, 0.4710077941417694, 0.47972527146339417, 0.48487651348114014, 0.48474442958831787, 0.4807819426059723], "val_loss": [1.9683406012398856, 1.9661367280142648, 1.963942527770996, 1.9617248943873815, 1.9595109394618444, 1.9573256628853934, 1.9551421574183874, 1.952964918954032, 1.9507743971688407, 1.9485445022583008, 1.9463397434779577, 1.9441234724862235, 1.9418742997305733, 1.9396112305777413, 1.9373228209359306, 1.9349758965628487, 1.9326206615992956, 1.9302114759172713, 1.9277750423976354, 1.9252758026123047, 1.9227715219770158, 1.9201763698032923, 1.9175722258431571, 1.9148948533194405, 1.9121885299682617, 1.9094112941196986, 1.906588077545166, 1.903700283595494, 1.9007148061479842, 1.8976208141871862, 1.8944595881870814, 1.8912053108215332, 1.8878809383937292, 1.8845178059169225, 1.8809813090733118, 1.8773688588823592, 1.873645305633545, 1.8697852407182967, 1.8658594403948103, 1.861825738634382, 1.857672895703997, 1.8533588818141393, 1.848893506186349, 1.844348362513951, 1.839660372052874, 1.8348017420087541, 1.829831804547991, 1.8247111865452357, 1.819441522870745, 1.8140852791922433, 1.808446271078927, 1.8026635987418038, 1.7967935289655412, 1.7907682827540807, 1.784498827798026, 1.778135027204241, 1.7715882573808943, 1.7648353576660156, 1.757956096104213, 1.7507969311305456, 1.7435528210231237, 1.736128466469901, 1.728407314845494, 1.7206097330365862, 1.712512697492327, 1.7042480536869593, 1.695784534726824, 1.687101227896554, 1.6782761641911097, 1.6692372730800085, 1.6600361551557268, 1.6505250930786133, 1.640894855771746, 1.6311141082218714, 1.6211578845977783, 1.611039672579084, 1.6007053852081299, 1.5902620724269323, 1.5796816008431571, 1.5690176146371024, 1.5580485888889857, 1.5469856602805, 1.5357935088021415, 1.5245491436549596, 1.5130585602351598, 1.5015508787972587, 1.4900068214961462, 1.4783971309661865, 1.4665421417781286, 1.4547503675733293, 1.442854710987636, 1.4308558872767858, 1.4190960611615862, 1.4072202614375524, 1.3953887394496374, 1.3835272789001465, 1.3716036251613073, 1.3596924032483781, 1.3479250839778356, 1.3361915520259313], "val_accuracy": [0.05133333429694176, 0.06733333319425583, 0.08566666394472122, 0.09866666793823242, 0.1223333328962326, 0.1456666737794876, 0.16599999368190765, 0.1913333386182785, 0.2150000035762787, 0.23333333432674408, 0.25033333897590637, 0.2709999978542328, 0.2863333225250244, 0.3023333251476288, 0.3163333237171173, 0.32899999618530273, 0.33933332562446594, 0.3490000069141388, 0.35899999737739563, 0.3630000054836273, 0.3720000088214874, 0.3776666522026062, 0.38233333826065063, 0.3866666555404663, 0.38866665959358215, 0.3919999897480011, 0.39800000190734863, 0.40400001406669617, 0.40700000524520874, 0.4090000092983246, 0.41100001335144043, 0.4183333218097687, 0.41999998688697815, 0.4256666600704193, 0.4286666810512543, 0.4346666634082794, 0.4359999895095825, 0.4390000104904175, 0.4440000057220459, 0.44466665387153625, 0.4476666748523712, 0.44866666197776794, 0.4516666531562805, 0.45766666531562805, 0.4596666693687439, 0.46166667342185974, 0.4663333296775818, 0.4699999988079071, 0.4740000069141388, 0.47999998927116394, 0.48133334517478943, 0.48399999737739563, 0.4856666624546051, 0.4880000054836273, 0.49133333563804626, 0.49266666173934937, 0.49433332681655884, 0.49566665291786194, 0.4973333477973938, 0.4976666569709778, 0.5009999871253967, 0.503000020980835, 0.5063333511352539, 0.5083333253860474, 0.5113333463668823, 0.515333354473114, 0.5173333287239075, 0.5196666717529297, 0.5199999809265137, 0.5216666460037231, 0.5216666460037231, 0.5239999890327454, 0.5263333320617676, 0.5270000100135803, 0.5293333530426025, 0.531333327293396, 0.5329999923706055, 0.5360000133514404, 0.5383333563804626, 0.5396666526794434, 0.5440000295639038, 0.5456666946411133, 0.54666668176651, 0.5473333597183228, 0.5490000247955322, 0.5506666898727417, 0.5513333082199097, 0.5553333163261414, 0.559333324432373, 0.5619999766349792, 0.5619999766349792, 0.5643333196640015, 0.5653333067893982, 0.5659999847412109, 0.5680000185966492, 0.5699999928474426, 0.5716666579246521, 0.5730000138282776, 0.5743333101272583, 0.5773333311080933]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1], [4, 7, 8, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.6011428833007812, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.302174600580538, 2.2999499333202404, 2.2986646307898773, 2.2935921500277416, 2.2924819852004923, 2.290227197904817, 2.287012769844963, 2.2849747859381444, 2.2818760210890514, 2.280806007638442, 2.2778559197776147, 2.2765920391770527, 2.2726202509296476, 2.270920652802185, 2.2688285417686505, 2.266062568790011, 2.2644794123315415, 2.2596218783101856, 2.2582447528524203, 2.2542987940506993, 2.25406699356323, 2.250405464064034, 2.24854555543797, 2.245591112178913, 2.2429061858031445, 2.2377148152909276, 2.237384322423032, 2.2337486056792755, 2.2305837054813793, 2.2264745449267203, 2.22200502405833, 2.2191383160966622, 2.216392541526882, 2.2130251633665896, 2.206953098367407, 2.2044552148781937, 2.199131392531974, 2.193544724550954, 2.193335613885088, 2.1892109780720337, 2.183656641457925, 2.1792817752217384, 2.1740330638288428, 2.170911698309249, 2.166152134673502, 2.1591131645281236, 2.15659832595409, 2.1493160636779924, 2.143785858198384, 2.141710266728742, 2.131729851309429, 2.1255851457651502, 2.1211389443814843, 2.11731399212531, 2.10686543337059, 2.10269383360067, 2.093718970976076, 2.0857449045207725, 2.0798650762865085, 2.069539996595462, 2.066496857090271, 2.0594292217950465, 2.04565453623831, 2.041978352546314, 2.02880334120385, 2.0229592984929736, 2.0125452890183237, 2.001975776906405, 1.9950317014178516, 1.9874433332887136, 1.9770173562154039, 1.962664210013804, 1.956028921461502, 1.9459441178793826, 1.9367302480453765, 1.927973387106267, 1.9140986103848412, 1.9054967832918006, 1.8966060978247425, 1.8851332911221956, 1.8688120753017825, 1.8588742477200082, 1.8481289830111463, 1.8384448375841724, 1.8211945110324068, 1.8149357325585762, 1.801038023707826, 1.788797335413075, 1.7728699993038568, 1.7613060789935862, 1.7496714965148672, 1.7363315256847098, 1.7307307434245784, 1.7191380524380238, 1.7082420786090609, 1.693899166330512, 1.6799096037856245, 1.6655100432558303, 1.6597163795936756, 1.6482213608671599], "accuracy": [0.09008057415485382, 0.09774138033390045, 0.10130762308835983, 0.11253467202186584, 0.11887465417385101, 0.11887465417385101, 0.13181878626346588, 0.13432836532592773, 0.14212125539779663, 0.15281997621059418, 0.1570466309785843, 0.15519747138023376, 0.16853784024715424, 0.17157575488090515, 0.18359529972076416, 0.18755778670310974, 0.18412363529205322, 0.2067098170518875, 0.2067098170518875, 0.2176727056503296, 0.21701228618621826, 0.22493726015090942, 0.2296922504901886, 0.23325848579406738, 0.24686303734779358, 0.2557125985622406, 0.24157971143722534, 0.25782591104507446, 0.26720380783081055, 0.26324132084846497, 0.2748646140098572, 0.2763175368309021, 0.28278958797454834, 0.2884691655635834, 0.29520538449287415, 0.29480913281440735, 0.30524370074272156, 0.3147536516189575, 0.31184783577919006, 0.31937655806541443, 0.3129045069217682, 0.3273015320301056, 0.33047154545783997, 0.3299432098865509, 0.334169864654541, 0.3415665030479431, 0.34143441915512085, 0.3547748029232025, 0.349359393119812, 0.34724608063697815, 0.35266146063804626, 0.3619072735309601, 0.37062475085258484, 0.3691718280315399, 0.37604016065597534, 0.37207767367362976, 0.3781534731388092, 0.37921014428138733, 0.3789459764957428, 0.39506009221076965, 0.3875313699245453, 0.3932109475135803, 0.402588814496994, 0.39941883087158203, 0.41011756658554077, 0.4041738212108612, 0.414608359336853, 0.4138158857822418, 0.4169858694076538, 0.4173821210861206, 0.41368380188941956, 0.43243956565856934, 0.4225333631038666, 0.42491084337234497, 0.4294016659259796, 0.43006208539009094, 0.43164706230163574, 0.4279487431049347, 0.43349623680114746, 0.43666622042655945, 0.4434024691581726, 0.4481574296951294, 0.44749704003334045, 0.44644036889076233, 0.45304450392723083, 0.45383700728416443, 0.4562145173549652, 0.4633469879627228, 0.46268656849861145, 0.46347907185554504, 0.4691586196422577, 0.4711398780345917, 0.46651697158813477, 0.4675736427307129, 0.472989022731781, 0.4710077941417694, 0.47972527146339417, 0.48487651348114014, 0.48474442958831787, 0.4807819426059723], "val_loss": [1.9683406693594796, 1.9661367280142648, 1.9639424596514021, 1.9617248943873815, 1.9595109394618444, 1.9573256628853934, 1.9551421574183874, 1.952964918954032, 1.9507743971688407, 1.9485445022583008, 1.9463396753583635, 1.9441234724862235, 1.9418741634913854, 1.9396111624581474, 1.9373228890555245, 1.9349756922040666, 1.9326203891209193, 1.930211407797677, 1.9277748380388533, 1.9252755982535226, 1.9227712494986398, 1.9201763016836983, 1.917571953364781, 1.9148947851998466, 1.9121884618486678, 1.9094112941196986, 1.906588077545166, 1.9037002154758997, 1.9007148742675781, 1.897620746067592, 1.8944594519478934, 1.8912052427019392, 1.8878809383937292, 1.8845180783952986, 1.880981513432094, 1.877368995121547, 1.8736453737531389, 1.8697854450770788, 1.8658596447535925, 1.8618262154715401, 1.8576733044215612, 1.8533592905317033, 1.8488938467843192, 1.844348975590297, 1.8396610532488142, 1.8348022869655065, 1.8298324176243372, 1.824712140219552, 1.8194426127842493, 1.8140863691057478, 1.8084472247532435, 1.8026646886553084, 1.7967944826398576, 1.7907695770263672, 1.7845005307878767, 1.7781373432704382, 1.7715907096862793, 1.7648378780909948, 1.7579583440508162, 1.7507993834359306, 1.7435556139264787, 1.7361314637320382, 1.728410312107631, 1.7206128665379115, 1.7125157969338554, 1.7042511531284876, 1.6957877022879464, 1.6871044976370675, 1.6782794679914201, 1.66924101965768, 1.6600398676736015, 1.6505284649985177, 1.6408986023494176, 1.6311179910387312, 1.6211620739528112, 1.6110433510371618, 1.6007095064435686, 1.590266500200544, 1.5796865395137243, 1.5690229960850306, 1.558053663798741, 1.5469908033098494, 1.5357989243098669, 1.5245545251028878, 1.513063601085118, 1.501556055886405, 1.4900120667048864, 1.478403091430664, 1.4665477957044328, 1.4547558852604456, 1.4428603308541434, 1.43086154120309, 1.4191017150878906, 1.4072263581412179, 1.3953948020935059, 1.383532966886248, 1.3716091769082206, 1.3596982955932617, 1.3479305335453577, 1.3361968994140625], "val_accuracy": [0.05133333429694176, 0.06733333319425583, 0.08566666394472122, 0.09866666793823242, 0.1223333328962326, 0.1456666737794876, 0.16599999368190765, 0.1913333386182785, 0.2150000035762787, 0.23333333432674408, 0.25033333897590637, 0.2709999978542328, 0.2863333225250244, 0.3023333251476288, 0.3163333237171173, 0.32899999618530273, 0.33933332562446594, 0.3490000069141388, 0.35899999737739563, 0.3630000054836273, 0.3720000088214874, 0.3776666522026062, 0.38233333826065063, 0.3866666555404663, 0.38866665959358215, 0.3919999897480011, 0.39800000190734863, 0.40400001406669617, 0.40700000524520874, 0.4090000092983246, 0.41100001335144043, 0.4183333218097687, 0.41999998688697815, 0.4256666600704193, 0.4286666810512543, 0.4346666634082794, 0.4359999895095825, 0.4390000104904175, 0.4440000057220459, 0.44466665387153625, 0.4476666748523712, 0.44866666197776794, 0.4516666531562805, 0.45766666531562805, 0.4596666693687439, 0.46166667342185974, 0.4663333296775818, 0.4699999988079071, 0.4740000069141388, 0.47999998927116394, 0.48133334517478943, 0.48399999737739563, 0.4856666624546051, 0.4880000054836273, 0.49133333563804626, 0.49266666173934937, 0.49433332681655884, 0.49566665291786194, 0.4973333477973938, 0.4976666569709778, 0.5009999871253967, 0.5026666522026062, 0.5063333511352539, 0.5080000162124634, 0.5113333463668823, 0.515333354473114, 0.5173333287239075, 0.5196666717529297, 0.5199999809265137, 0.5216666460037231, 0.5216666460037231, 0.5239999890327454, 0.5263333320617676, 0.5270000100135803, 0.5293333530426025, 0.531333327293396, 0.5329999923706055, 0.5360000133514404, 0.5383333563804626, 0.5396666526794434, 0.5440000295639038, 0.5456666946411133, 0.54666668176651, 0.5473333597183228, 0.5490000247955322, 0.5506666898727417, 0.5513333082199097, 0.5553333163261414, 0.559333324432373, 0.5619999766349792, 0.5619999766349792, 0.5643333196640015, 0.5653333067893982, 0.5659999847412109, 0.5680000185966492, 0.5699999928474426, 0.5716666579246521, 0.5730000138282776, 0.5740000009536743, 0.5770000219345093]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1], [6, 8, 6, 7, 5, 7, 3, 9], [3, 2, 5, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 1, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.15628571808338165, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, alpha)", "other_info": {"loss": [17.427065722206407, 1.2599271905931008e+33, NaN, NaN, NaN, NaN], "accuracy": [0.21582353115081787, 0.1146479994058609, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.956420762198312, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1809999942779541, 0.09799999743700027, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [82], [1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1], [6, 8, 1, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [1, 3, 9, 2, 0, 1, 6, 5, 1, 4, 5, 0, 8, 3, 9, 4, 2, 2, 2], [0, 2, 2, 2, 2, 2, 1, 1, 0, 3, 3], [16, 52, 13, 97]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1], [4, 8, 9, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [52, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [1121372.6377665857, 20704002.091665566, 96736010.62158236, 264552046.60309073, 567458646.4942544, 1049954129.1686699], "accuracy": [0.09549596905708313, 0.09787346422672272, 0.09694888442754745, 0.10460969805717468, 0.10196803510189056, 0.1002509593963623], "val_loss": [4061939.5714285714, 32389893.714285713, 109199442.28571428, 258706203.42857143, 505125723.4285714, 872675291.4285715], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 3, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1], [6, 8, 0, 5, 5, 7, 3, 9], [3, 1, 5, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1, 1], [1, 1, 5, 6, 0], [3, 1, 2], [16, 52, 13, 93, 33, 12, 51]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.subtract(tf.math.square(alpha), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08796724677085876, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1, 1], [6, 8, 6, 6, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 3, 1, 6, 0, 4, 3, 3, 7, 7, 8, 0], [2, 1, 2, 1, 3, 2, 2, 2, 0, 1], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 22, 12, 10, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.pow(tf.math.multiply(beta, tf.math.multiply(alpha, sigma)), tf.math.add(tf.math.add(tf.math.sqrt(tf.math.negative(beta)), beta), beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1], [6, 8, 6, 6, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [1, 3, 9, 6, 0, 7, 3, 6, 0], [3, 1, 2, 3, 3, 3], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 15, 9, 6, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, beta)), tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.negative(sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07092854380607605, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1], [6, 8, 6, 6, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 0, 9, 6, 0], [0, 3, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302192040438256, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 1, 1, 1], [6, 8, 6, 6, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 3, 9, 6, 0, 4, 2, 8, 8, 1, 0], [3, 3, 2, 0, 0, 0], [16, 52, 13, 77]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 17, 11, 6, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.math.negative(tf.math.pow(sigma, tf.math.add(tf.math.sqrt(tf.math.sqrt(beta)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1], [6, 8, 6, 6, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [1, 1, 1, 0, 1], [1, 3, 9, 6, 0], [2, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0], [3, 8, 6, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 1, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, alpha)", "other_info": {"loss": [5538033189.625097, 133437821190.3907, 676965167285.2389, 1918864180626.107, 4199462157870.73, 7870407893341.493], "accuracy": [0.0956280529499054, 0.09787346422672272, 0.09694888442754745, 0.10474177449941635, 0.10196803510189056, 0.1002509593963623], "val_loss": [23392795501.714287, 219798414482.2857, 781231437531.4286, 1899756819017.1428, 3767401372525.7144, 6576225723538.286], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [0, 8, 6, 0, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 3, 9, 6, 0], [2, 2, 3, 1, 3, 3, 3], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07092854380607605, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 8, 6, 6, 5, 7, 3, 9, 9, 7, 2, 8, 7], [3, 3, 0, 4, 1, 0, 4], [25, 84, 69, 92], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [1, 1, 0, 0, 1], [1, 3, 9, 6, 0], [2, 1, 2], [89, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 20, 20, 13, 7, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0], [6, 8, 6, 5, 5, 7, 3, 9], [3, 3, 4, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [1, 1, 0, 0, 1], [1, 3, 9, 6, 0], [2, 3, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1], [6, 8, 6, 0, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [1, 1, 0, 0, 1], [8, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.add(beta, grad))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031812284474893, 2.303329751570589, 2.3044576111124524, 2.3018090469867736, 2.3031184118122487, 2.303166697605049], "accuracy": [0.0874389111995697, 0.08942015469074249, 0.08638224750757217, 0.08928807079792023, 0.09206181764602661, 0.08757099509239197], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 8, 6, 6, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [0, 1, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3031812284474893, 2.303329751570589, 2.3044576111124524, 2.3018090469867736, 2.3031184118122487, 2.303166697605049], "accuracy": [0.0874389111995697, 0.08942015469074249, 0.08638224750757217, 0.08928807079792023, 0.09206181764602661, 0.08757099509239197], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1], [6, 8, 6, 6, 5, 7, 3, 9], [2, 1, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 3, 9, 6, 0, 6, 2, 2, 1, 1, 3, 9, 8, 9, 7, 1, 1, 6, 8, 0, 9, 0, 3, 9, 5, 1, 2, 1, 3, 3, 7, 8, 3, 9, 7, 0, 5, 8, 7, 8, 8, 4, 1, 8, 7, 3, 2], [3, 1, 2, 3, 2, 0, 3, 0, 1, 2, 2, 0, 0, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2], [16, 19, 2, 99, 20, 30, 43]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 34, 24, 10, 7], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma), tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.subtract(alpha, tf.math.subtract(tf.math.multiply(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(beta, tf.math.sqrt(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha)), tf.math.negative(tf.math.multiply(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3031812284474893, 2.303329751570589, 2.3044576111124524, 2.3018090469867736, 2.3031184118122487, 2.303166697605049], "accuracy": [0.0874389111995697, 0.08942015469074249, 0.08638224750757217, 0.08928807079792023, 0.09206181764602661, 0.08757099509239197], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1], [6, 8, 6, 6, 5, 7, 3, 9], [5, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [1, 1, 0, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031812284474893, 2.303329751570589, 2.3044576111124524, 2.3018090469867736, 2.3031184118122487, 2.303166697605049], "accuracy": [0.0874389111995697, 0.08942015469074249, 0.08638224750757217, 0.08928807079792023, 0.09206181764602661, 0.08757099509239197], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]