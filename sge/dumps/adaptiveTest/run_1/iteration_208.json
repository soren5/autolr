[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 1], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.8448571562767029, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 5, 3, 0, 5, 4, 2, 2, 0, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.negative(grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1609534736102236, 1.2905185486756736, 0.8792789635436568, 0.7513935961160898, 0.7057306830436798, 0.6569248011729122, 0.6244916602715274, 0.5980182218986212, 0.5717504793516539, 0.5510278852734473, 0.5329079853151578, 0.5136442467158954, 0.503148624728841, 0.48777462626492357, 0.46911421382762597, 0.44812384097016544, 0.4372755654019419, 0.4194759963258162, 0.4192348911486376, 0.4066548519217343, 0.39762886895353705, 0.39475072588288884, 0.3822154911667238, 0.37188324652264826, 0.36555538611987703, 0.3561126145476033, 0.3530687381641472, 0.3469953302024866, 0.33331370306855823, 0.3252681672037742, 0.32513859733031836, 0.3168657452297122], "accuracy": [0.28305375576019287, 0.5460308790206909, 0.6820763349533081, 0.7084929347038269, 0.7272487282752991, 0.7534011602401733, 0.765949010848999, 0.7759873270988464, 0.7869502305984497, 0.7955356240272522, 0.7976489067077637, 0.8057059645652771, 0.8099326491355896, 0.8166688680648804, 0.8208954930305481, 0.8323867321014404, 0.8381983637809753, 0.8438779711723328, 0.8430854678153992, 0.8498216867446899, 0.8510104417800903, 0.8525954484939575, 0.8558974862098694, 0.8639545440673828, 0.8659358024597168, 0.8623695969581604, 0.86553955078125, 0.8726720213890076, 0.870030403137207, 0.876370370388031, 0.8776912093162537, 0.8817857503890991], "val_loss": [1.2881457805633545, 0.7004878010068621, 0.5768746307918003, 0.560470700263977, 0.5236121075493949, 0.4953486919403076, 0.4772869859422956, 0.46901748861585346, 0.4431382587977818, 0.43474016870771137, 0.42220282554626465, 0.410402740750994, 0.39621024472372873, 0.3894132205418178, 0.390137995992388, 0.3770169956343515, 0.3641431076186044, 0.35188513142721994, 0.3466205256325858, 0.34757816791534424, 0.3409609113420759, 0.337451560156686, 0.3397705980709621, 0.3333268846784319, 0.3273199881826128, 0.3311120697430202, 0.32188689708709717, 0.32837269987378803, 0.31949382168906076, 0.3234957882336208, 0.32083483253206524, 0.3202094691140311], "val_accuracy": [0.5699999928474426, 0.7003333568572998, 0.7419999837875366, 0.7509999871253967, 0.7676666378974915, 0.7833333611488342, 0.7913333177566528, 0.7946666479110718, 0.8109999895095825, 0.8173333406448364, 0.8186666369438171, 0.8296666741371155, 0.8339999914169312, 0.8393333554267883, 0.8373333215713501, 0.8413333296775818, 0.8506666421890259, 0.8566666841506958, 0.8573333621025085, 0.8573333621025085, 0.8613333106040955, 0.8600000143051147, 0.859000027179718, 0.8629999756813049, 0.8659999966621399, 0.8653333187103271, 0.8723333477973938, 0.8650000095367432, 0.8696666955947876, 0.862333357334137, 0.8646666407585144, 0.8666666746139526]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [49, 32, 5, 49, 25], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 7, 8, 4], [2, 4], [64], [0, 0, 1, 0, 1, 1, 1], [3, 1, 4, 1, 2, 1, 4, 7, 6, 4, 4, 2, 6, 5, 4, 9], [1, 0, 2, 1], [15, 52, 13]], "fitness": -0.39971429109573364, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta)), alpha)", "other_info": {"loss": [2.2960200673002436, 2.5008251589239863, 1.7161115910201678e+20, 2.313368559230068, 2.304642423930311, 2.3031261737840114], "accuracy": [0.266939640045166, 0.2421080470085144, 0.11847840249538422, 0.09998679161071777, 0.09998679161071777, 0.0952318087220192], "val_loss": [1.5581323078700475, 52.43482644217355, 1.9876953533717565, 1.9758586883544922, 1.9738475254603796, 1.9736736842564173], "val_accuracy": [0.3763333261013031, 0.2316666692495346, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.0949999988079071]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 0, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 2, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 54, 5, 49, 25], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [4, 8, 2, 9, 0, 9, 3, 9], [3, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0], [7, 2, 8, 4], [4, 5], [64], [0, 1, 0, 1, 1, 1], [3, 1, 9, 1, 2, 9], [1, 0, 2, 3], [12, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 4, 4, 4, 2, 2, 0, 8, 6, 4, 2, 0, 5, 2, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), alpha)))), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.pow(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [3, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [3], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 1], [64], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [7, 1, 2, 1, 2, 6, 7, 5, 3], [3, 1, 2, 2, 2, 1, 2, 3, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 18, 9, 9, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.sqrt(tf.math.add(tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(sigma, alpha), tf.math.add(beta, beta)), beta), alpha), beta), tf.math.square(tf.math.multiply(sigma, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [24, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 2, 2, 0, 9, 3, 9], [3, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 55], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 7, 8, 4], [2, 4], [64], [1, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [90, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 5, 4, 1, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(tf.math.add(tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09311848133802414, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [49, 32, 5, 49, 25], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 55], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 7, 8, 4], [2, 4], [64], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 1, 4, 9, 2, 1, 4, 7, 6, 4, 4, 2, 6, 5, 4, 9, 7, 8], [1, 0, 2, 0, 3, 3, 2, 3, 2, 0, 3, 1, 3, 0, 1], [15, 52, 13, 60, 99]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 8, 8, 5, 3, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.negative(grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [107112.03879266547, 13619285.494650641, 188539940.9789988, 1086865691.2365606, 3972058784.342359, 10779816022.697134], "accuracy": [0.09747721254825592, 0.10051512718200684, 0.10289261490106583, 0.1010434553027153, 0.1014397069811821, 0.09866596013307571], "val_loss": [847730.625, 36517563.428571425, 317787904.0, 1417210880.0, 4376943762.285714, 10724509696.0], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [60, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [1, 1, 0, 0, 1, 1, 1], [4, 7, 8, 1, 2], [1, 1, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(tf.math.negative(grad), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 2, 0, 0, 9, 3, 9], [1, 3, 4, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], [3, 1, 9, 1, 2, 3, 0, 5, 9], [1, 0, 2, 1], [56, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 13, 9, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.negative(grad), tf.math.negative(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.negative(beta), tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0], [7, 8, 8, 4], [2, 1], [64], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 1, 9, 1, 4, 4, 1, 6], [1, 0, 0, 0, 1, 0, 0], [15, 52, 13, 36, 20, 36]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 15, 8, 7, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.pow(tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [7, 5, 8, 4], [2, 0], [64], [1, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 1, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 16, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 8, 2, 9, 0, 9, 3, 9], [5, 4, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1], [7, 2, 8, 4, 8], [2], [64], [1, 1, 0, 0, 1, 1, 1], [4, 7, 8, 1, 2], [1, 1, 2], [98, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [4, 5, 2, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 7, 8, 4], [4, 0], [64], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [3, 1, 4, 2, 2, 2, 4, 7, 6, 4, 4, 2, 6, 2, 4, 9, 8, 5, 9, 7, 6, 1, 4, 4, 3], [1, 0, 2, 0, 2, 3, 3, 2, 2, 1, 3, 1, 2, 3, 0, 1, 3, 0, 2, 3], [15, 52, 13, 20, 43, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 45, 25, 20, 6], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.math.add(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.pow(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(beta)), alpha))), tf.math.square(sigma)), alpha), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.math.divide_no_nan(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(alpha, tf.math.pow(sigma, tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), beta))), sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [4, 2, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 1], [64], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [3, 1, 1, 1, 2], [1, 0, 2, 1, 2, 0], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 6, 3, 1, 5, 4, 2, 2, 0, 11, 5, 6, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 3, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 16, 25], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 8, 2, 9, 0, 9, 3, 9], [1, 5, 0, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [6, 0], [64], [0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 1, 9, 1, 2], [2, 0, 2, 3], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 9, 5, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 3, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 16, 25], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 8, 2, 9, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [6, 0], [64], [0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 2, 9, 1, 2], [2, 1, 0, 0], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 1, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [357.7225697433881, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.6867196539889164e+25, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [50, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 5, 1, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 55], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 0], [64], [0, 1, 1, 0, 1, 1], [3, 1, 9, 1, 2], [1, 2, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 4, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))))), tf.math.pow(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 3, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 6], [64], [0, 1, 0, 1, 0, 1], [0, 1, 9, 1, 4, 2, 1, 9], [2, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 7, 7, 4, 3, 0, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(tf.math.negative(grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3019888603203897, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 2, 2, 0, 9, 3, 9], [1, 5, 1, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [5, 4, 9, 1, 2], [1, 0, 2, 1], [15, 52, 13]], "fitness": -0.07942856848239899, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.300659416940911, 2.301364999830825, 2.300774855337217, 2.300887157132581, 2.3003205641181066, 2.299803551429645, 2.3008445584306374, 2.2999602820280916, 2.298580766747641, 2.30020128882336, 2.2989840954994842, 2.2998915685402515, 2.298933272128092, 2.3006668170492617, 2.298142022303051, 2.2981714190839697, 2.297995260032318, 2.2983187433436028, 2.299513775044901, 2.300173183017167], "accuracy": [0.09113723784685135, 0.09259014576673508, 0.09192973375320435, 0.0940430611371994, 0.0936468094587326, 0.09853387624025345, 0.09628847241401672, 0.09826971590518951, 0.09945846349000931, 0.09602430462837219, 0.10210011899471283, 0.09959053993225098, 0.10368511080741882, 0.0940430611371994, 0.10672302544116974, 0.11227050423622131, 0.10157178342342377, 0.1022322028875351, 0.10460969805717468, 0.09853387624025345], "val_loss": [1.9708593232291085, 1.9705920900617326, 1.9701174327305384, 1.9697075571332658, 1.969414506639753, 1.9692078999110632, 1.9690913472856795, 1.9691145760672433, 1.9691243852887834, 1.9690454346793038, 1.9689574241638184, 1.9688634191240584, 1.968799114227295, 1.9687623977661133, 1.9688223430088587, 1.9689688001360213, 1.969154221670968, 1.9693903923034668, 1.969639710017613, 1.9698810577392578], "val_accuracy": [0.03933333232998848, 0.04233333468437195, 0.04600000008940697, 0.05166666582226753, 0.05766666680574417, 0.06333333253860474, 0.06833333522081375, 0.06833333522081375, 0.0689999982714653, 0.07066666334867477, 0.07500000298023224, 0.07733333110809326, 0.0806666687130928, 0.08033332973718643, 0.08166666328907013, 0.0806666687130928, 0.07900000363588333, 0.07766667008399963, 0.07400000095367432, 0.070333331823349]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [9, 8, 7, 9, 5, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1], [7, 2, 8, 4], [2, 1], [64], [0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 5, 1, 2], [1, 1, 0, 1], [15, 52, 13]], "fitness": -0.04228571429848671, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 8, 6, 4, 2, 0, 8, 4, 4, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, alpha), sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.math.square(tf.math.subtract(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), alpha)", "other_info": {"loss": [2.3006739424928586, 2.3015805349499874, 2.301510764875149, 2.3020995726690567, 2.3020210728716495, 2.3018095136208383, 2.3034875921963103, 2.302427847025464, 2.300795429150631], "accuracy": [0.09074098616838455, 0.09192973375320435, 0.09087307006120682, 0.09166556596755981, 0.08928807079792023, 0.08968432247638702, 0.0870426595211029, 0.09272222965955734, 0.09206181764602661], "val_loss": [1.970935480935233, 1.9709306444440569, 1.9709244455610002, 1.9709197453090124, 1.9709145001002721, 1.9709104129246302, 1.9709046227591378, 1.9708993094308036, 1.9708944048200334], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03799999877810478, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 3, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0], [7, 2, 8, 4], [3, 1], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [83, 36, 13]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 7, 7, 5, 2, 0, 5, 3, 2, 1, 0, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3010145362342085, 2.303084645525119, 2.30504694965616, 2.307176812386957, 2.3092313216835074, 2.3112919188572385], "accuracy": [0.08955223858356476, 0.08968432247638702, 0.0870426595211029, 0.08796724677085876, 0.07674019038677216, 0.07951393723487854], "val_loss": [1.971604347229004, 1.9727260725838798, 1.974240439278739, 1.9756385258265905, 1.9774888583592005, 1.9792571067810059], "val_accuracy": [0.03400000184774399, 0.027000000700354576, 0.02266666665673256, 0.023666666820645332, 0.024666666984558105, 0.03133333474397659]}}]