[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 3, 3, 0, 8, 0, 2, 9, 5, 8, 2, 3, 5, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [2, 2, 3, 0, 2, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [78, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8185714483261108, "mapping_values": [1, 4, 4, 3, 1, 1, 12, 12, 8, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.multiply(tf.math.negative(grad), tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2196267502670985, 1.532667913488535, 1.322939101353203, 1.039135551282585, 0.8649384709491611, 0.8118326341502812, 0.7154136322760516, 0.6759780208826096, 0.6829760253799433, 0.6121350727643728, 0.6132515984960221, 0.5787051921554639, 0.5710682977916479, 0.5472252384908699, 0.5427006919819208, 0.4997477324615774, 0.49179912851061786, 0.48186942540958433, 0.4719572968848897, 0.4541419423597994, 0.4446530044472465, 0.4278621782739763, 0.4323449350933845, 0.43792911287800135, 0.4061105244620412, 0.39563080964071434, 0.39549895041670075, 0.3746709672097186, 0.3733086980423671, 0.3636656452943116, 0.36509933234394787, 0.35806165513361227, 0.3359835584874418, 0.336756763401883], "accuracy": [0.27843084931373596, 0.469819039106369, 0.5326905250549316, 0.6108836531639099, 0.6745476126670837, 0.6970016956329346, 0.7322678565979004, 0.739928662776947, 0.7417778372764587, 0.7627789974212646, 0.7643640041351318, 0.7790252566337585, 0.7840443849563599, 0.7950072884559631, 0.7927618622779846, 0.811649739742279, 0.8119139075279236, 0.8202351331710815, 0.8249900937080383, 0.8309338092803955, 0.8330471515655518, 0.8432175517082214, 0.8405758738517761, 0.8360850811004639, 0.8475762605667114, 0.8510104417800903, 0.8507462739944458, 0.8602562546730042, 0.8573504090309143, 0.8597279191017151, 0.8607845902442932, 0.8636903762817383, 0.8728041052818298, 0.8708229064941406], "val_loss": [1.4157922608511788, 0.9543679441724505, 0.8165639809199742, 0.6555706262588501, 0.6336063998086112, 0.5639110803604126, 0.5205561774117606, 0.5834886176245553, 0.4798728568213327, 0.48620258058820454, 0.47252815110342844, 0.4410957949502127, 0.5007083245686123, 0.4638082470212664, 0.4145795362336295, 0.42847710847854614, 0.4167930228369577, 0.3829305257116045, 0.38842289788382395, 0.3921720215252468, 0.37849107810429167, 0.3835480213165283, 0.41345772572926115, 0.37483116558619906, 0.3649864877973284, 0.36270497526441303, 0.36516943999699186, 0.3462687815938677, 0.3496120997837612, 0.369444021156856, 0.3647839001246861, 0.3701374190194266, 0.34788415261677336, 0.3338547008378165], "val_accuracy": [0.5170000195503235, 0.609000027179718, 0.6086666584014893, 0.7073333263397217, 0.7279999852180481, 0.750333309173584, 0.7670000195503235, 0.7206666469573975, 0.7863333225250244, 0.7776666879653931, 0.7973333597183228, 0.809333324432373, 0.777999997138977, 0.7929999828338623, 0.8326666951179504, 0.8159999847412109, 0.8163333535194397, 0.8379999995231628, 0.8349999785423279, 0.8383333086967468, 0.8456666469573975, 0.8346666693687439, 0.8166666626930237, 0.8486666679382324, 0.8529999852180481, 0.847000002861023, 0.8453333377838135, 0.8523333072662354, 0.8619999885559082, 0.843999981880188, 0.8550000190734863, 0.8456666469573975, 0.8583333492279053, 0.8619999885559082]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 3, 3, 0, 6, 1, 2, 8, 5, 8, 2, 3, 5, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [2, 2, 3, 0, 2, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [78, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8182857036590576, "mapping_values": [1, 4, 4, 3, 1, 1, 16, 16, 9, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.negative(grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2208514663568812, 1.9675242885732696, 1.4723835344469511, 1.1203709081998197, 0.9691506263492067, 0.85202546349417, 0.7352942648013947, 0.727496411829986, 0.6898714693750546, 0.6733889596148285, 0.6380710619835255, 0.6258208686334582, 0.6229057084961401, 0.5881183857080754, 0.5924057321006186, 0.5752040974971971, 0.5384430627324688, 0.559603233457698, 0.5194584894583383, 0.5375733405229611, 0.5054527853127594, 0.49868536310393685, 0.4986121845031222], "accuracy": [0.24065512418746948, 0.3547748029232025, 0.47629112005233765, 0.5963544845581055, 0.6457535624504089, 0.6787742972373962, 0.7232862114906311, 0.7301545143127441, 0.7411174178123474, 0.748778223991394, 0.7552502751350403, 0.7609298825263977, 0.7656848430633545, 0.7848368883132935, 0.7800818681716919, 0.7802139520645142, 0.7947431206703186, 0.7885351777076721, 0.8082155585289001, 0.7994980812072754, 0.8098005652427673, 0.8133667707443237, 0.8150838613510132], "val_loss": [1.8804122379847936, 1.4899940831320626, 0.8379133258547101, 0.8965257235935756, 0.6318936518260411, 0.5545893056052071, 0.539141024862017, 0.6089845214571271, 0.5730343375887189, 0.5017298460006714, 0.5207747220993042, 0.5112595217568534, 0.4918421847479684, 0.5347257001059396, 0.48227597985948834, 0.4750839982713972, 0.494515061378479, 0.41171596731458393, 0.4662867103304182, 0.44979229995182585, 0.41598765339170185, 0.43386748858860563, 0.4754654679979597], "val_accuracy": [0.34566667675971985, 0.44566667079925537, 0.6639999747276306, 0.5973333120346069, 0.7123333215713501, 0.75, 0.7573333382606506, 0.715666651725769, 0.7406666874885559, 0.7693333625793457, 0.7573333382606506, 0.7636666893959045, 0.7876666784286499, 0.7483333349227905, 0.7903333306312561, 0.7833333611488342, 0.7663333415985107, 0.8273333311080933, 0.7923333048820496, 0.7990000247955322, 0.8169999718666077, 0.8053333163261414, 0.7886666655540466]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 3, 3, 0, 8, 1, 2, 9, 5, 8, 2, 3, 5, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [2, 2, 3, 0, 2, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [78, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7965714335441589, "mapping_values": [1, 4, 4, 3, 1, 1, 15, 15, 10, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.negative(grad), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.367220350307575, 2.2536043278403555, 1.8576472846823378, 1.520841332631986, 1.269770671899025, 1.032612216116777, 0.9227800201572967, 0.8656918927977948, 0.8344611874534911, 0.8079551222097321, 0.765976469412204, 0.7181328332671368, 0.7121826821094049, 0.7140593737926717, 0.6677233339174785, 0.6264538601751356, 0.6260984647921158, 0.6228974995643329, 0.6042654625318621, 0.6003170426590032, 0.576068055423464], "accuracy": [0.23933430016040802, 0.218465194106102, 0.3907013535499573, 0.46427157521247864, 0.5431250929832458, 0.6151102781295776, 0.6485272645950317, 0.6744155287742615, 0.6828688383102417, 0.6917183995246887, 0.7079645991325378, 0.7231541275978088, 0.7248712182044983, 0.728701651096344, 0.7437590956687927, 0.761590301990509, 0.7655527591705322, 0.7613261342048645, 0.7737419009208679, 0.7691190242767334, 0.77677983045578], "val_loss": [1.971428530556815, 1.5221996988568987, 1.336320127759661, 0.8771854639053345, 0.8229097298213414, 0.6929759638650077, 0.703306862286159, 0.631269029208592, 0.6001800979886737, 0.5541308096476963, 0.6068756580352783, 0.5465255294527326, 0.5786320992878505, 0.5034594024930682, 0.49213194847106934, 0.46991011074611116, 0.5414990016392299, 0.4595238140651158, 0.4850392852510725, 0.4581198862620762, 0.4594051497323172], "val_accuracy": [0.14666666090488434, 0.4230000078678131, 0.4866666793823242, 0.6320000290870667, 0.6370000243186951, 0.7039999961853027, 0.6840000152587891, 0.6996666789054871, 0.7136666774749756, 0.737333357334137, 0.7066666483879089, 0.7393333315849304, 0.7266666889190674, 0.7636666893959045, 0.7803333401679993, 0.800000011920929, 0.7596666812896729, 0.7990000247955322, 0.7863333225250244, 0.7960000038146973, 0.7986666560173035]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 2, 2, 0, 8, 1, 2, 9, 8, 5, 2, 3, 4, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [2, 2, 3, 0, 2, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [78, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.47028571367263794, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3436770645729097, 2.2970046529743446, 1.9036367944580863, 2.167742157624839, 2.4210569311551855, 2.300972094987409, 2.153223623736282, 2.077666489423904], "accuracy": [0.24897634983062744, 0.14172500371932983, 0.37141725420951843, 0.2425042986869812, 0.11979923397302628, 0.11121384054422379, 0.23444722592830658, 0.2829216718673706], "val_loss": [1.9777046612330846, 1.9168205942426408, 1.8537228448050362, 2.3406398636954173, 1.975196157182966, 1.9600727217538017, 1.9429262025015694, 1.9735890797206335], "val_accuracy": [0.10066666454076767, 0.30000001192092896, 0.4300000071525574, 0.26499998569488525, 0.0949999988079071, 0.13099999725818634, 0.11133333295583725, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 3, 2, 0, 8, 1, 5, 9, 5, 3, 2, 3, 5, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [2, 2, 3, 0, 2, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [78, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.1662857085466385, "mapping_values": [1, 2, 2, 1, 1, 0, 12, 12, 8, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.square(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.5317019139613457, 2.4510716035019344, 2.307748893185566, 2.303708491056445, 2.3031443748113865, 2.3027066662956805], "accuracy": [0.18993528187274933, 0.1868973672389984, 0.09628847241401672, 0.10038304328918457, 0.09813763201236725, 0.10011887550354004], "val_loss": [1.975471087864467, 1.981330122266497, 1.9751063074384416, 1.9737769535609655, 1.9736754553658622, 1.973308495112828], "val_accuracy": [0.10966666787862778, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [4, 9, 3, 0, 8, 1, 2, 9, 2, 8, 8, 3, 5, 1, 6, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [4, 2, 3, 0, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [28, 48, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [462.8598817260494, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19772817194461823, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4058866102.857143, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [58, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 2, 3, 1, 4, 1, 2, 0, 8, 5, 9, 4, 8, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [2, 2, 3, 0, 2, 0, 3, 2, 3, 0, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [78, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [0, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.3025059249060673, 2.302281787319584, 2.3026655548205546, 2.3046424035241246, 2.3135506897050755, 2.3615981780810364], "accuracy": [0.10474177449941635, 0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735390118190221, 1.973508630480085, 1.973966189793178, 1.9770885876246862, 1.9930077280317033, 2.105351039341518], "val_accuracy": [0.10366666316986084, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 9, 3, 0, 8, 2, 2, 9, 2, 8, 8, 3, 0, 1, 6, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [0, 2, 3, 0, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [28, 48, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 2, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.302840976068892, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 5, 3, 1, 8, 1, 2, 9, 8, 5, 2, 3, 5, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [4, 2, 3, 0, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [78, 10, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.subtract(tf.math.add(beta, grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06366398185491562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [58, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 2, 3, 1, 5, 1, 2, 0, 8, 5, 8, 6, 8, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [1, 0, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [28, 48, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 14, 14, 7, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 2, 3, 2, 8, 1, 2, 1, 8, 3, 2, 3, 5, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [1, 3, 3, 0, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 95, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 28, 28, 15, 13, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(grad, tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), tf.math.add(beta, grad)))))))), tf.math.add(beta, grad)))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.275501330924497, 3.3217474581338413, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2572975754737854, 0.2759212851524353, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9786147390093123, 774.3952287946429, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.10366666316986084, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 0, 5, 0, 8, 1, 0, 9, 8, 5, 2, 3, 5, 1, 4, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [4, 2, 3, 0, 0, 3, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [78, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.negative(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 9, 3, 0, 8, 2, 2, 9, 2, 8, 8, 3, 0, 1, 6, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [4, 2, 3, 0, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [28, 48, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 8, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 2, 3, 1, 4, 1, 2, 0, 8, 5, 8, 6, 8, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [0, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [28, 48, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 16, 16, 8, 8, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06366398185491562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [8, 3, 3, 0, 8, 1, 1, 1, 5, 8, 2, 3, 5, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [3, 3, 2, 0, 3, 3, 3, 2, 3, 2, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [78, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [4, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 3, 3, 0, 0, 1, 2, 9, 5, 8, 2, 3, 5, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [1, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [78, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 15, 15, 10, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.negative(grad), tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.negative(grad), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 3, 3, 0, 8, 1, 8, 1, 5, 8, 2, 3, 5, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [3, 3, 0, 0, 3, 3, 3, 2, 3, 2, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [43, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 14, 14, 8, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(grad)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [577.3949487012501, 5.535283085743849e+31, 41652.88739709397, 10525090.835358605, 2728762772.862766, 692350145237.4967, 177903207583300.9], "accuracy": [0.18742570281028748, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [31250109.714285713, 1353.2548130580358, 345076.28571428574, 88336598.85714285, 22614165211.42857, 5789226294125.714, 1482041931296182.8], "val_accuracy": [0.0949999988079071, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 9, 3, 0, 8, 2, 2, 9, 2, 8, 8, 3, 0, 1, 6, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [3, 0, 1, 0, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [78, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3031199451419324, 2.4527167389342783, 9.257118556131351, 57.658576300241506, 163.39975871442726, 327.1253487815348], "accuracy": [0.10830801725387573, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9822184017726354, 2.784614767347063, 24.380933489118302, 94.52364894321987, 214.03201293945312, 382.7203281947545], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [28, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 2, 3, 0, 8, 1, 2, 9, 8, 5, 2, 3, 5, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [2, 0, 1, 0, 3, 3, 2, 0, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [78, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 2, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 1, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 19, 19, 12, 7, 3, 1, 1, 0, 1, 0, 7, 3, 4, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, beta), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))))))))), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(beta, alpha), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 3, 3, 0, 8, 1, 8, 1, 5, 8, 2, 3, 5, 1, 2, 0, 1, 2, 2, 6, 6, 3, 9, 5, 1, 2, 2, 8, 2, 4, 8], [3, 3, 3, 1, 3, 3, 3, 2, 3, 2, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [43, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 15, 15, 9, 6, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(grad, tf.math.add(beta, tf.math.multiply(grad, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, alpha))))))), tf.math.sqrt(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]