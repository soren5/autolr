[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 9, 4, 0, 2, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.824571430683136, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.077909270203298, 2.274245079655484, 1.7429205938778092, 1.2864191294692653, 0.9587007400193124, 0.8217492445569233, 0.7351402430455005, 0.6789268475907149, 0.6744964465473338, 0.6310225919394871, 0.6118231170433481, 0.5856847094743165, 0.5853756876622271, 0.5500711621294688, 0.5476081663307938, 0.5413318087695345, 0.5347855635732314, 0.5246654562804646, 0.5021802285178588, 0.4944208860161156, 0.49356380376235104, 0.4592376267275459, 0.4814644463703759, 0.4621738791150849, 0.44608986033676573, 0.46170195751359605, 0.4360427502997878, 0.4407999563832813], "accuracy": [0.30141329765319824, 0.2452780306339264, 0.38805970549583435, 0.5453705191612244, 0.6439043879508972, 0.6929071545600891, 0.7166820764541626, 0.7457403540611267, 0.7416457533836365, 0.7658169269561768, 0.767930269241333, 0.7828556299209595, 0.7795535326004028, 0.7931581139564514, 0.793422281742096, 0.7964601516723633, 0.7989697456359863, 0.8063663840293884, 0.8109893202781677, 0.8128384351730347, 0.8202351331710815, 0.8341038227081299, 0.8189142942428589, 0.8298771381378174, 0.8343679904937744, 0.8269713521003723, 0.8359529972076416, 0.8313300609588623], "val_loss": [2.0530046054295132, 1.5086651188986642, 1.1745057787214006, 0.7035808903830392, 0.667290210723877, 0.5737837893622262, 0.5611716338566372, 0.49623542172568186, 0.5060443196977887, 0.4910219056265695, 0.49074884823390413, 0.47507946831839426, 0.46019937310900005, 0.5073511941092355, 0.5257518632071358, 0.5212481532778058, 0.41577443054744173, 0.409281815801348, 0.40389479058129446, 0.40805511815207346, 0.41794053997312275, 0.3797374793461391, 0.36514581952776226, 0.3747995155198233, 0.4382008739880153, 0.38410134826387676, 0.39691767522266935, 0.38676450082233976], "val_accuracy": [0.2356666624546051, 0.4283333420753479, 0.5630000233650208, 0.6940000057220459, 0.7086666822433472, 0.7459999918937683, 0.7353333234786987, 0.7763333320617676, 0.7699999809265137, 0.7793333530426025, 0.7710000276565552, 0.7996666431427002, 0.7929999828338623, 0.7746666669845581, 0.7696666717529297, 0.7680000066757202, 0.8216666579246521, 0.8256666660308838, 0.8240000009536743, 0.8213333487510681, 0.824999988079071, 0.831333339214325, 0.8429999947547913, 0.8429999947547913, 0.8246666789054871, 0.8363333344459534, 0.8206666707992554, 0.8259999752044678]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 9, 4, 2, 2, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 2, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8240000009536743, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(grad, tf.math.add(beta, grad)))), tf.math.negative(beta)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0344852828834634, 1.4780694518217148, 0.9647000848168411, 0.8786450394581432, 0.7028135512294298, 0.6853824829885186, 0.6685582522813119, 0.5917235216318483, 0.6030868690767466, 0.557096670403252, 0.5373595393431453, 0.517504823812483, 0.5080323382816484, 0.4848216939651105, 0.46649515697307686, 0.48184508685548594, 0.4478826054909824, 0.4260913845712105, 0.4496677270725718, 0.4394088538410074, 0.4058349119272246, 0.3960757189344311, 0.4085535780943585, 0.38754798453229844, 0.3600774271266808, 0.3698492761198965, 0.3669783965180248, 0.3451262831750909, 0.33541714658968325, 0.32641888740607194, 0.3289528187625617, 0.3260261739218287, 0.3131161317880742, 0.3266353601233803, 0.297387225040434, 0.3043851761093009, 0.28162898841850226], "accuracy": [0.32901862263679504, 0.5144630670547485, 0.6432439684867859, 0.6794346570968628, 0.7358341217041016, 0.7364945411682129, 0.7460044622421265, 0.77677983045578, 0.772288978099823, 0.793950617313385, 0.8021397590637207, 0.8064984679222107, 0.8109893202781677, 0.8202351331710815, 0.8238013386726379, 0.8193105459213257, 0.8327829837799072, 0.844010055065155, 0.8310658931732178, 0.8356888294219971, 0.8529917001724243, 0.8499537706375122, 0.8507462739944458, 0.852859616279602, 0.8651432991027832, 0.8619733452796936, 0.870030403137207, 0.8705587387084961, 0.8729361891746521, 0.8746532797813416, 0.8741249442100525, 0.8753136992454529, 0.8835028409957886, 0.8742570281028748, 0.8883898854255676, 0.8820499181747437, 0.8919561505317688], "val_loss": [1.651395627430507, 0.8719522101538522, 0.5959007058824811, 0.5487094436373029, 0.5807275772094727, 0.5298037528991699, 0.48222480501447407, 0.5109363453728812, 0.4447497640337263, 0.44074569429670063, 0.4108994347708566, 0.4027683905192784, 0.3939508540289743, 0.4291302561759949, 0.45170864037105013, 0.41095398153577534, 0.35594161067690167, 0.35222684485571726, 0.37839908259255545, 0.35488208702632357, 0.36527895075934275, 0.34581765958241056, 0.346433733190809, 0.3473866411617824, 0.4082956143787929, 0.3428935408592224, 0.33593928813934326, 0.33259986128125874, 0.32937190362385343, 0.3372390695980617, 0.3367009162902832, 0.3219704287392752, 0.34198525122233797, 0.34295493364334106, 0.33231209005628315, 0.32894071510859896, 0.32646964277539936], "val_accuracy": [0.40666666626930237, 0.628000020980835, 0.7269999980926514, 0.7639999985694885, 0.7269999980926514, 0.7506666779518127, 0.7923333048820496, 0.7586666941642761, 0.8053333163261414, 0.8019999861717224, 0.8233333230018616, 0.8220000267028809, 0.8336666822433472, 0.8066666722297668, 0.7986666560173035, 0.8216666579246521, 0.8519999980926514, 0.8516666889190674, 0.8393333554267883, 0.8493333458900452, 0.8446666598320007, 0.8539999723434448, 0.8556666374206543, 0.8513333201408386, 0.8420000076293945, 0.8506666421890259, 0.8539999723434448, 0.8610000014305115, 0.8650000095367432, 0.8640000224113464, 0.8569999933242798, 0.8676666617393494, 0.8636666536331177, 0.8616666793823242, 0.859333336353302, 0.8676666617393494, 0.8650000095367432]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 0, 4, 6, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8188571333885193, "mapping_values": [1, 4, 4, 2, 2, 1, 18, 18, 11, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))))), grad), tf.math.add(beta, tf.math.add(grad, alpha)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.034484464541843, 1.475846026095228, 0.990849056484488, 0.9940420115912012, 0.7342852065906769, 0.6995614546637383, 0.6449446175879712, 0.618853053302183, 0.6555064175390627, 0.5645091238668676, 0.5519627606186963, 0.521261422696477, 0.5152743101167232, 0.49239765010206316, 0.4766100085705908, 0.4996460940993426, 0.47720965975704854, 0.44994909249087683, 0.45032318423153656, 0.44636978884304457, 0.4233415421359748, 0.4068445230219988, 0.41036319854300113, 0.3985222906382045, 0.3704943213921339, 0.3782277704584222, 0.3634610442028164, 0.3624155645231293], "accuracy": [0.32901862263679504, 0.5144630670547485, 0.6293752193450928, 0.6388852000236511, 0.7238145470619202, 0.7347774505615234, 0.759080708026886, 0.7716285586357117, 0.7585523724555969, 0.7889314293861389, 0.7957997918128967, 0.8014793395996094, 0.8045172095298767, 0.8164047002792358, 0.8185180425643921, 0.8090080618858337, 0.8175934553146362, 0.8341038227081299, 0.8313300609588623, 0.8323867321014404, 0.8408400416374207, 0.8467837572097778, 0.8508783578872681, 0.850350022315979, 0.8640866279602051, 0.8555012345314026, 0.8659358024597168, 0.8643507957458496], "val_loss": [1.651374203818185, 0.8848190648215157, 1.0558087144579207, 0.5661968673978534, 0.559510486466544, 0.511960506439209, 0.48543739318847656, 0.6043343373707363, 0.46619975566864014, 0.44413418429238455, 0.41910468680518015, 0.4285266399383545, 0.410645740372794, 0.3995028649057661, 0.5147288867405483, 0.42792571442467825, 0.3677962252071926, 0.3885796751294817, 0.39293248312813894, 0.3650623304503305, 0.36837554829461233, 0.3447073442595346, 0.33653741223471506, 0.3471469623701913, 0.4216567192758833, 0.33471977710723877, 0.34346613713673185, 0.3362011057989938], "val_accuracy": [0.40666666626930237, 0.6259999871253967, 0.6186666488647461, 0.7379999756813049, 0.7383333444595337, 0.7706666588783264, 0.7713333368301392, 0.746999979019165, 0.7983333468437195, 0.8026666641235352, 0.8173333406448364, 0.8103333115577698, 0.8323333263397217, 0.8230000138282776, 0.7826666831970215, 0.809333324432373, 0.8460000157356262, 0.8363333344459534, 0.8216666579246521, 0.8429999947547913, 0.8453333377838135, 0.8566666841506958, 0.8600000143051147, 0.8560000061988831, 0.8346666693687439, 0.8583333492279053, 0.8553333282470703, 0.8600000143051147]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 1, 4, 0, 4, 1, 8, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.817714273929596, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 7, 6, 0, 2, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(alpha), grad)), grad)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0778459170711447, 2.2782614135691803, 1.7613904362798067, 1.3845603605224284, 0.9363804257084524, 0.7930053651466692, 0.7107583852161301, 0.7137139243787353, 0.6752463255292626, 0.6236707991880432, 0.6050070983827264, 0.5727280893534906, 0.5819947237052686, 0.5516411074951514, 0.5463157193756154, 0.5172194924258191, 0.5267503369580391, 0.5220043375672855, 0.4920494127125552, 0.4864464126179924, 0.48155001021961985, 0.4780796113235918, 0.44864708088754646, 0.4567784654182481, 0.449601799041021, 0.45150730954248197, 0.4388943183510263, 0.44296476651948, 0.4094107223736407, 0.41131978832640903, 0.43307875688632463, 0.4043132701940099, 0.37124132223573925, 0.39590966918795667], "accuracy": [0.3015453815460205, 0.24237221479415894, 0.3777572214603424, 0.514198899269104, 0.6650376319885254, 0.6973979473114014, 0.7288337349891663, 0.7277770638465881, 0.7434949278831482, 0.7642319202423096, 0.7730814814567566, 0.7868181467056274, 0.7751948237419128, 0.7917051911354065, 0.7927618622779846, 0.8075551390647888, 0.8047813773155212, 0.8034605979919434, 0.8112534880638123, 0.8161405324935913, 0.821820080280304, 0.8216879963874817, 0.832650899887085, 0.8339717388153076, 0.8294808864593506, 0.829216718673706, 0.828820526599884, 0.8313300609588623, 0.8475762605667114, 0.8482366800308228, 0.8347642421722412, 0.8473120927810669, 0.8603883385658264, 0.8500858545303345], "val_loss": [2.064387730189732, 1.5329338482448034, 0.9330192974635533, 0.8284728867667062, 0.6473398378917149, 0.6374859980174473, 0.5935988766806466, 0.4940844774246216, 0.5205312967300415, 0.46774567876543316, 0.47590913091387066, 0.46128312179020475, 0.4548922436577933, 0.45815370764051166, 0.48956280095236643, 0.47073541368756977, 0.4392455645969936, 0.40517998593194143, 0.4022919876234872, 0.4179294194493975, 0.4205642853464399, 0.4094295161111014, 0.4156510829925537, 0.40987428597041536, 0.45422511441367014, 0.3864138126373291, 0.3821085180555071, 0.4020879864692688, 0.3519249303000314, 0.3894465480531965, 0.3748633180345808, 0.3477234159197126, 0.40785037619727, 0.3527687021664211], "val_accuracy": [0.23066666722297668, 0.42766666412353516, 0.5759999752044678, 0.6266666650772095, 0.6933333277702332, 0.7070000171661377, 0.7086666822433472, 0.7736666798591614, 0.7596666812896729, 0.7846666574478149, 0.7876666784286499, 0.7963333129882812, 0.7996666431427002, 0.8053333163261414, 0.7829999923706055, 0.7893333435058594, 0.7976666688919067, 0.8213333487510681, 0.8213333487510681, 0.8149999976158142, 0.8236666917800903, 0.8169999718666077, 0.8236666917800903, 0.8193333148956299, 0.8159999847412109, 0.8343333601951599, 0.8356666564941406, 0.8256666660308838, 0.8569999933242798, 0.8303333520889282, 0.8366666436195374, 0.8479999899864197, 0.8339999914169312, 0.8529999852180481]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 2, 4, 6, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 0, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8168571591377258, "mapping_values": [1, 4, 4, 2, 2, 1, 17, 17, 10, 7, 2, 2, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.add(beta, alpha), grad), tf.math.add(beta, tf.math.pow(grad, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), beta))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.07792997590114, 2.2744818116065737, 1.7144702948347421, 1.2532016561645731, 0.9872560172253565, 0.7825965959524135, 0.7224979478968699, 0.6801479495889585, 0.7178976242615641, 0.634573212452159, 0.6011821312942777, 0.5875599995942369, 0.5987509080935715, 0.5441406120115252, 0.550435297107495, 0.5424132754679574, 0.5187035558907395, 0.5317553081343659, 0.5026270417158771, 0.4900849336063731, 0.48501880234101225, 0.47087940674463613, 0.497277641151528, 0.4538641010080551, 0.4527899930741982, 0.4617634454163672, 0.4581138179711914, 0.43072838899229876, 0.4106389223316862], "accuracy": [0.30141329765319824, 0.24541011452674866, 0.39823007583618164, 0.5591071248054504, 0.6404702067375183, 0.7103421092033386, 0.722229540348053, 0.7433628439903259, 0.728701651096344, 0.76106196641922, 0.7729493975639343, 0.7771760821342468, 0.7717606425285339, 0.793422281742096, 0.7921014428138733, 0.7928939461708069, 0.8054417967796326, 0.8031964302062988, 0.8121780753135681, 0.8162726163864136, 0.8177255392074585, 0.8226125836372375, 0.8195747137069702, 0.8343679904937744, 0.828292191028595, 0.8257825970649719, 0.8274996876716614, 0.8391229510307312, 0.8469158411026001], "val_loss": [2.051499434879848, 1.5142967360360282, 1.1412078993661063, 0.8011124134063721, 0.6113552706582206, 0.5881507226399013, 0.533601028578622, 0.49105325766972135, 0.5265571900776455, 0.4582058702196394, 0.5126583576202393, 0.4727755103792463, 0.46624326705932617, 0.42962375708988737, 0.437915427344186, 0.4826436723981585, 0.4532149008342198, 0.4137753333364214, 0.39735481568745207, 0.3915390372276306, 0.4140743102346148, 0.3797206197466169, 0.3829828415598188, 0.3770387939044407, 0.42964667081832886, 0.40167328289576937, 0.4005019835063389, 0.3953600014959063, 0.4143709284918649], "val_accuracy": [0.23733332753181458, 0.43033334612846375, 0.6453333497047424, 0.6150000095367432, 0.7223333120346069, 0.7196666598320007, 0.7456666827201843, 0.7763333320617676, 0.7549999952316284, 0.7896666526794434, 0.7713333368301392, 0.796999990940094, 0.7883333563804626, 0.8209999799728394, 0.7986666560173035, 0.7716666460037231, 0.7923333048820496, 0.8169999718666077, 0.8266666531562805, 0.8316666483879089, 0.8206666707992554, 0.8323333263397217, 0.8316666483879089, 0.8349999785423279, 0.828000009059906, 0.8183333277702332, 0.8119999766349792, 0.8306666612625122, 0.8116666674613953]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 9, 4, 0, 2, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [3, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7577142715454102, "mapping_values": [1, 4, 4, 3, 1, 1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(grad, beta)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.09675783935303, 2.0530426897125285, 1.5095845002854709, 1.2671454300450264, 1.0166181410859525, 0.8500128463353495, 0.8228460482681244, 0.773676732693051, 0.7472185204608833, 0.6735956108077265, 0.673225912561569, 0.6621334961675902, 0.6241162237458462], "accuracy": [0.3203011453151703, 0.3185840845108032, 0.4761590361595154, 0.5315017700195312, 0.6190727949142456, 0.6804913282394409, 0.6848500967025757, 0.6996433734893799, 0.7205125093460083, 0.7423061728477478, 0.7411174178123474, 0.7500990629196167, 0.7648923397064209], "val_loss": [1.8677490098135812, 1.1931744643620081, 1.3975535120282854, 0.7813026223863874, 0.6720481770379203, 0.6422513553074428, 0.6444551944732666, 0.5309317111968994, 0.5170346328190395, 0.5863333599908012, 0.5325551373617989, 0.5235564197812762, 0.5462967838559832], "val_accuracy": [0.2773333191871643, 0.5323333144187927, 0.40033334493637085, 0.6613333225250244, 0.6740000247955322, 0.6916666626930237, 0.6943333148956299, 0.7720000147819519, 0.7693333625793457, 0.7286666631698608, 0.7566666603088379, 0.7509999871253967, 0.746666669845581]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [15, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 9, 4, 0, 1, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 1, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.5451428294181824, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301242326181704, 2.2992504850716844, 2.296369937936533, 2.295202536873294, 2.292951184304131, 2.2926170880752643, 2.2888006619206664, 2.287212603316725, 2.286614610188043, 2.2839700509339527, 2.28171879570356, 2.2781051589576338, 2.2796205290871336, 2.27537373053541, 2.273435887344415, 2.2713194898626257, 2.268538775649982, 2.2674553448797106, 2.2662179339059576, 2.262502318659258, 2.2629053000650545, 2.2604166662467864, 2.257747338511263, 2.255654773754986, 2.2529559118116946, 2.250038621007113, 2.249056802748878, 2.2462377027041245, 2.24289364015516, 2.24210341026156, 2.239842703502727, 2.2364655237282274, 2.2338213170476955, 2.231977135072909, 2.228676727372012, 2.223711372161853, 2.2231116943890945, 2.2197377175356436, 2.2183305975342504, 2.214984506679611, 2.211504705735422, 2.210822984101892, 2.207204004273108, 2.2025689470328675, 2.1993267126779954, 2.197343887260577, 2.1938466577009677, 2.1911248051022745, 2.1852389519728876, 2.1843426321727755, 2.180671385392348, 2.1750529742338527, 2.168618677409097, 2.167004145367932, 2.1601606723796487, 2.157476597332353, 2.154236152518175, 2.150355429051653, 2.146209622607208, 2.140161482696725, 2.135582612253939, 2.1284964732080796, 2.1267441710649844, 2.1209660942811754, 2.1161604491616632, 2.1088198858749094, 2.106619431436841, 2.100685740285593, 2.094756881968063, 2.0855170778547376, 2.084399353480059, 2.078557675115625, 2.0694400686960117, 2.0648567904224326, 2.056836001263035, 2.051608367256595, 2.047438017554555, 2.0380119175218776, 2.0282575218763492, 2.0223645736607168, 2.0127003054183628, 2.011655505338696, 2.002877833868109, 1.9912419484480732, 1.9865048414271158, 1.9753623715229258, 1.968000957695343, 1.9629139087738976, 1.95186323364413, 1.9468079401344245, 1.939324454687464, 1.930204181985423, 1.9193097246699344, 1.9079002258626776, 1.90723265680135, 1.8861053530975591, 1.8805667834117539, 1.8737851587410663, 1.8654826509954119, 1.8582300463561698], "accuracy": [0.09153348207473755, 0.1002509593963623, 0.10368511080741882, 0.10777968913316727, 0.11187426000833511, 0.1162329912185669, 0.12402588874101639, 0.12838461995124817, 0.13353586196899414, 0.1298375427722931, 0.1414608359336853, 0.15361246466636658, 0.14793290197849274, 0.16272619366645813, 0.1690661758184433, 0.1686699241399765, 0.1752740740776062, 0.17831197381019592, 0.18544445931911469, 0.19310526549816132, 0.19138818979263306, 0.19984149932861328, 0.21080438792705536, 0.2118610441684723, 0.22084268927574158, 0.22097477316856384, 0.22652225196361542, 0.2355038970708847, 0.2366926372051239, 0.2401268035173416, 0.2495046854019165, 0.24699510633945465, 0.2599392533302307, 0.2561088502407074, 0.2705058753490448, 0.2767137885093689, 0.2735437750816345, 0.2826575040817261, 0.28160083293914795, 0.28978997468948364, 0.29401662945747375, 0.2937524616718292, 0.2989037036895752, 0.2981112003326416, 0.3097345232963562, 0.3023378551006317, 0.3059041202068329, 0.31197991967201233, 0.32584863901138306, 0.32862237095832825, 0.31924447417259216, 0.33099988102912903, 0.3362831771373749, 0.3353586196899414, 0.3494914770126343, 0.3489631414413452, 0.3459252417087555, 0.35081231594085693, 0.35068023204803467, 0.35543522238731384, 0.3595297932624817, 0.36824727058410645, 0.3653414249420166, 0.366530179977417, 0.3621714413166046, 0.3778893053531647, 0.37485140562057495, 0.37907806038856506, 0.3757759928703308, 0.38766345381736755, 0.3796063959598541, 0.3797384798526764, 0.3961167633533478, 0.39122968912124634, 0.3895126283168793, 0.3933430314064026, 0.38660678267478943, 0.39981508255004883, 0.3991546630859375, 0.40628713369369507, 0.41791045665740967, 0.4076079726219177, 0.40681546926498413, 0.4237220883369446, 0.4138158857822418, 0.41870296001434326, 0.4278166592121124, 0.4270241856575012, 0.4239862561225891, 0.4309866726398468, 0.4239862561225891, 0.43111875653266907, 0.4379870593547821, 0.44366663694381714, 0.4299300014972687, 0.44802534580230713, 0.44987452030181885, 0.445779949426651, 0.44604411721229553, 0.44128912687301636], "val_loss": [1.9690967968532018, 1.9672831807817732, 1.9654979024614607, 1.963719708578927, 1.9619186946323939, 1.9601475851876395, 1.9583757264273507, 1.956599303654262, 1.9548323495047433, 1.9530367170061385, 1.9512361117771693, 1.949432713644845, 1.9476351737976074, 1.9458006450108118, 1.9439546721322196, 1.9420999799455916, 1.94023711340768, 1.9383557864597865, 1.9364594050816126, 1.9345277377537318, 1.9325767244611467, 1.9306067739214217, 1.9285967009408134, 1.926577023097447, 1.9244984899248396, 1.9223943437848772, 1.9202795709882463, 1.9181344168526786, 1.9158916473388672, 1.9136396135602678, 1.9113582883562361, 1.9090300287519182, 1.9066568102155412, 1.9042468752179826, 1.9017948423113142, 1.8992712838309151, 1.896683829171317, 1.8940489632742745, 1.8913836479187012, 1.8886617251804896, 1.885847840990339, 1.883007185799735, 1.8801142828805106, 1.8771205629621233, 1.8740490504673548, 1.8709255627223425, 1.867732048034668, 1.8644565854753767, 1.8610363687787737, 1.8576051848275321, 1.85409791128976, 1.85047333581107, 1.8467300959995814, 1.8429173060825892, 1.8389953885759627, 1.8349695886884416, 1.8309002603803362, 1.8267295701163155, 1.8224793842860632, 1.8181022916521346, 1.8136489731924874, 1.8090241977146693, 1.8043508529663086, 1.7995709691728865, 1.7946811403547014, 1.7896558897835868, 1.7845418793814523, 1.7793217386518205, 1.7739875657217843, 1.7684328215462821, 1.7628683362688338, 1.7571908405848913, 1.7513692719595773, 1.7454272678920202, 1.7393227985927038, 1.7331389699663435, 1.7268809591020857, 1.7203967571258545, 1.7137423242841447, 1.7069695336478097, 1.7000401360648019, 1.6930889061519079, 1.6860216685703822, 1.6787616184779577, 1.671381609780448, 1.663848638534546, 1.6561246599469865, 1.648380892617362, 1.64045626776559, 1.6324256147657121, 1.6243346759251185, 1.6161151954105921, 1.6077028683253698, 1.5991248403276717, 1.5906188488006592, 1.5818275042942591, 1.5729359558650426, 1.5640205315181188, 1.5550286429268974, 1.5459275245666504], "val_accuracy": [0.04766666516661644, 0.061666667461395264, 0.07500000298023224, 0.08833333104848862, 0.10833333432674408, 0.12466666847467422, 0.14399999380111694, 0.16433332860469818, 0.179666668176651, 0.19733333587646484, 0.21533332765102386, 0.23266667127609253, 0.25200000405311584, 0.26766666769981384, 0.2786666750907898, 0.29100000858306885, 0.3023333251476288, 0.3163333237171173, 0.32866665720939636, 0.33633333444595337, 0.3449999988079071, 0.3553333282470703, 0.3630000054836273, 0.37033334374427795, 0.37566667795181274, 0.37966665625572205, 0.3843333423137665, 0.38866665959358215, 0.3903333246707916, 0.39266666769981384, 0.39666667580604553, 0.3986666798591614, 0.4020000100135803, 0.40433332324028015, 0.40833333134651184, 0.40933331847190857, 0.4126666784286499, 0.4156666696071625, 0.4176666736602783, 0.42266666889190674, 0.42500001192092896, 0.42766666412353516, 0.4309999942779541, 0.4336666762828827, 0.437666654586792, 0.4416666626930237, 0.4436666667461395, 0.44433334469795227, 0.44566667079925537, 0.4476666748523712, 0.44966667890548706, 0.45233333110809326, 0.45500001311302185, 0.46000000834465027, 0.4620000123977661, 0.4650000035762787, 0.46833333373069763, 0.4713333249092102, 0.47433334589004517, 0.47733333706855774, 0.4793333411216736, 0.48266667127609253, 0.4833333194255829, 0.484333336353302, 0.4860000014305115, 0.48766666650772095, 0.492000013589859, 0.49566665291786194, 0.49666666984558105, 0.49799999594688416, 0.49966666102409363, 0.5036666393280029, 0.5056666731834412, 0.5086666941642761, 0.5099999904632568, 0.5130000114440918, 0.5176666378974915, 0.5193333625793457, 0.5239999890327454, 0.5263333320617676, 0.5273333191871643, 0.528333306312561, 0.531333327293396, 0.5333333611488342, 0.5356666445732117, 0.5363333225250244, 0.5386666655540466, 0.5379999876022339, 0.5416666865348816, 0.5410000085830688, 0.5419999957084656, 0.5433333516120911, 0.5453333258628845, 0.54666668176651, 0.5479999780654907, 0.5503333210945129, 0.5506666898727417, 0.5523333549499512, 0.5533333420753479, 0.5536666512489319]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 9, 4, 0, 2, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [0, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.5171428322792053, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.46578484371338, 2.102103530140349, 1.9528324149776333, 1.6190619839023463, 2.0499682816311573, 2.2882576846585154, 2.304280667461818, 2.304108191600896], "accuracy": [0.2401268035173416, 0.27024170756340027, 0.27684587240219116, 0.4501386880874634, 0.28199708461761475, 0.12508255243301392, 0.10038304328918457, 0.1006472036242485], "val_loss": [1.9449269430977958, 1.9619263240269251, 1.3611721651894706, 1.807952948978969, 1.611569915499006, 1.973949909210205, 1.9736720493861608, 1.9737671443394251], "val_accuracy": [0.2669999897480011, 0.10199999809265137, 0.49033331871032715, 0.3409999907016754, 0.34833332896232605, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 0, 4, 6, 0, 2, 9, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.20885714888572693, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 10, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(grad)), tf.math.pow(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3366334756698275, 2.210269078224594, 2.309142417974476, 2.304248837778487, 2.3029396772353152, 2.3032025000706104], "accuracy": [0.2491084337234497, 0.2281072586774826, 0.09840179979801178, 0.09721305221319199, 0.10289261490106583, 0.09642054885625839], "val_loss": [1.9681252070835658, 1.982557909829276, 1.9759505135672433, 1.9741900988987513, 1.973740918295724, 1.9737050873892648], "val_accuracy": [0.15700000524520874, 0.09666666388511658, 0.10199999809265137, 0.10066666454076767, 0.10066666454076767, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [99, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 0, 4, 2, 8, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [2, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(grad, grad), tf.math.add(beta, tf.math.sqrt(grad))))), grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0812310129404068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 0, 4, 5, 8, 2, 3, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 19, 19, 12, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.pow(alpha, tf.math.square(tf.math.sqrt(grad))))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha))), tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08136309683322906, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 2, 5, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 7, 6, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.negative(alpha)), grad))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 4, 0, 4, 6, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 16, 16, 9, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), grad)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.add(beta, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [15, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 8, 2, 0, 1, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 2, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.add(beta, grad)))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0812310129404068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 0, 4, 1, 8, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 2, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [75, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 13, 13, 7, 6, 0, 2, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.sqrt(alpha), grad), tf.math.add(beta, grad)))), beta), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 9, 4, 0, 2, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [5, 3, 3, 0, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [7, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021985905722477, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 0, 4, 1, 8, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 3, 3, 0, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [1, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 7, 6, 1, 3, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(alpha), grad)), beta)))), grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 0, 4, 2, 8, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 2, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [2, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad))))))))), tf.math.add(beta, beta))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0812310129404068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 9, 4, 0, 2, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [6, 0], [53, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 8, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 0, 4, 2, 8, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [5, 3, 3, 0, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30207416983234, 2.302081697636812, 2.3011298507133167, 2.3019286463242072, 2.3016983059497793, 2.303228815202432], "accuracy": [0.09021265059709549, 0.09206181764602661, 0.09430722147226334, 0.09100515395402908, 0.08796724677085876, 0.09219389408826828], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]