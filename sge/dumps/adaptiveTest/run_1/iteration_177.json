[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.8505714535713196, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 5, 2, 0, 5, 3, 2, 1, 0, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1603694248035707, 1.2862310025670258, 0.8718400353044488, 0.7412376042921404, 0.6894781007238934, 0.6526106717154775, 0.6144990217432197, 0.5947522287749186, 0.5614422069186658, 0.5489911377516562, 0.5261975852859931, 0.5108123296255984, 0.48846992775512454, 0.4846187082256198, 0.47977317408910125, 0.4493195966502159, 0.44477220636396014, 0.42672931693721644, 0.4154053399741075, 0.4147129160908188, 0.4086801734511973, 0.3971300327688113, 0.38156172439107616, 0.36829896829210457, 0.362291120409005, 0.35727507399530173, 0.34696610487053786, 0.3508658438798947, 0.3390104851277434, 0.32722936555095683, 0.3173905402292051, 0.31680946638004387, 0.3114749962005633, 0.2993049575880676, 0.29003878410749623, 0.2951210608233267, 0.289685568061125, 0.28207975340210734, 0.2737504896856554, 0.27436529780737934, 0.25908346540105026], "accuracy": [0.27539294958114624, 0.5528992414474487, 0.6756042838096619, 0.7182670831680298, 0.7442874312400818, 0.759609043598175, 0.7718927264213562, 0.7757231593132019, 0.7878747582435608, 0.7932901978492737, 0.8029322624206543, 0.813498854637146, 0.8210275769233704, 0.8175934553146362, 0.8239334225654602, 0.83119797706604, 0.835160493850708, 0.8374059200286865, 0.845859169960022, 0.8470479249954224, 0.8487650156021118, 0.8521991968154907, 0.8531237840652466, 0.8623695969581604, 0.8640866279602051, 0.8713511824607849, 0.8726720213890076, 0.8681812286376953, 0.8742570281028748, 0.8775591254234314, 0.8798044919967651, 0.8800686597824097, 0.8848236799240112, 0.8856161832809448, 0.8910315632820129, 0.8894465565681458, 0.8854840993881226, 0.8932769894599915, 0.8992207050323486, 0.8968431949615479, 0.9025228023529053], "val_loss": [1.2810184614998954, 0.6928592579705375, 0.5853446211133685, 0.543154273714338, 0.507027098110744, 0.4907540764127459, 0.47008161885397776, 0.46518453529902865, 0.4356686217444284, 0.4223578998020717, 0.41017418248312815, 0.4054459163120815, 0.39819404908588957, 0.39514212948935373, 0.37645513670785086, 0.368816750390189, 0.3680515033858163, 0.3599955439567566, 0.3579387494495937, 0.35059634276798796, 0.35287972007478985, 0.34714967012405396, 0.33829316071101595, 0.33303255694253103, 0.33513855934143066, 0.3286936708859035, 0.33269093717847553, 0.32290748187473844, 0.32470768690109253, 0.3199430618967329, 0.32526525429316927, 0.32454804863248554, 0.31434247323444914, 0.3195682764053345, 0.31251335995537893, 0.3180473617144993, 0.32222288846969604, 0.3146996242659433, 0.3150052087647574, 0.3130256874220712, 0.31079043660845074], "val_accuracy": [0.5693333148956299, 0.7363333106040955, 0.7319999933242798, 0.7609999775886536, 0.7749999761581421, 0.7929999828338623, 0.7940000295639038, 0.8006666898727417, 0.8106666803359985, 0.8259999752044678, 0.824999988079071, 0.8296666741371155, 0.8336666822433472, 0.8259999752044678, 0.8446666598320007, 0.8529999852180481, 0.8453333377838135, 0.8506666421890259, 0.8560000061988831, 0.8553333282470703, 0.8560000061988831, 0.8579999804496765, 0.859000027179718, 0.8619999885559082, 0.8646666407585144, 0.8686666488647461, 0.8633333444595337, 0.8650000095367432, 0.8669999837875366, 0.8736666440963745, 0.8700000047683716, 0.8659999966621399, 0.8743333220481873, 0.8696666955947876, 0.8733333349227905, 0.8759999871253967, 0.871666669845581, 0.8733333349227905, 0.875333309173584, 0.875, 0.8736666440963745]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [15, 97, 31, 49, 25], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 3, 0, 0, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 7], [64], [0, 1, 0, 0, 1, 1, 1], [0, 1, 5, 1, 2], [1, 0, 2], [15, 93, 13]], "fitness": -0.7631428837776184, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 6, 3, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.negative(alpha))), tf.math.add(beta, grad)))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2981603462084204, 2.2846030973881115, 2.2550143392535404, 2.210460482303729, 2.1429618739842455, 2.0315164121512677, 1.8588900964305133, 1.6438722855473837, 1.4517341827152743, 1.3726807079295031, 1.3594981146022518, 1.329930063661347, 1.1928037714255941, 1.0520618082179276, 0.9161927687446313, 0.9022496587344291, 0.9038917792550388, 0.8966500360054693, 0.8680143269408003, 0.8146143965811824, 0.787655817149196, 0.7945545584282241, 0.8015829402347676, 0.811553858550249, 0.7945721389563675, 0.7708407630616206, 0.7547995058489734, 0.7379463957978152, 0.7150852540779769, 0.7027625760397875, 0.7079963340829817, 0.7099974348229849, 0.7039300180886007, 0.6950613728147126, 0.6839118367330415, 0.6787140048600427, 0.6715045201622531, 0.6625598066313833, 0.6582074367044278, 0.6566830859633327, 0.645784538939424, 0.6334975783488911, 0.6362730839138789, 0.6089665873207201, 0.6045588511423019, 0.5973794876056938, 0.5911487113404441], "accuracy": [0.10077928751707077, 0.13617752492427826, 0.2188614457845688, 0.2973187267780304, 0.35543522238731384, 0.3917580246925354, 0.43111875653266907, 0.46546030044555664, 0.5020473003387451, 0.5255580544471741, 0.5378417372703552, 0.5625412464141846, 0.6087703108787537, 0.6392814517021179, 0.6634526252746582, 0.6585655808448792, 0.6635847091674805, 0.6745476126670837, 0.6863030195236206, 0.6909258961677551, 0.6951525807380676, 0.6989829540252686, 0.6956809163093567, 0.6927750706672668, 0.7012283802032471, 0.7129837274551392, 0.718399167060852, 0.7166820764541626, 0.7235503792762756, 0.7275128960609436, 0.7345132827758789, 0.7331924438476562, 0.7327961921691895, 0.7362303733825684, 0.7383436560630798, 0.744419515132904, 0.7415136694908142, 0.7506273984909058, 0.748778223991394, 0.7453441023826599, 0.7470611333847046, 0.7581561207771301, 0.7555144429206848, 0.7693831920623779, 0.7709681391716003, 0.7716285586357117, 0.7771760821342468], "val_loss": [1.9628040449959892, 1.9410038675580705, 1.9066863741193498, 1.856795310974121, 1.7750023433140345, 1.6379114559718542, 1.4285806247166224, 1.1804414136069161, 0.9797043119158063, 0.8421119962419782, 0.7857508318764823, 0.7299268415996006, 0.7364103283200946, 0.673589995929173, 0.6573457036699567, 0.675822377204895, 0.6933065141950335, 0.6798632485525948, 0.6377022096088955, 0.609163727079119, 0.5982319286891392, 0.5886982679367065, 0.5930239473070417, 0.5997726576668876, 0.5854617527553013, 0.5772164208548409, 0.5725563594273159, 0.5592760699135917, 0.5505612407411847, 0.5508763449532645, 0.5521599735532489, 0.549649545124599, 0.5424600839614868, 0.5344943829945156, 0.5289568730763027, 0.5249201570238385, 0.5194453171321324, 0.5139460393360683, 0.5072622639792306, 0.499220609664917, 0.49202729974474224, 0.4861574343272618, 0.47976442745753695, 0.47397572653634207, 0.4691929136003767, 0.46575275489262175, 0.4634406736918858], "val_accuracy": [0.0963333323597908, 0.3019999861717224, 0.39399999380111694, 0.4230000078678131, 0.44999998807907104, 0.49166667461395264, 0.5403333306312561, 0.5839999914169312, 0.6416666507720947, 0.6783333420753479, 0.67166668176651, 0.70333331823349, 0.7146666646003723, 0.7163333296775818, 0.7160000205039978, 0.7020000219345093, 0.7239999771118164, 0.7319999933242798, 0.7369999885559082, 0.7390000224113464, 0.7403333187103271, 0.7423333525657654, 0.731333315372467, 0.737333357334137, 0.7413333058357239, 0.7509999871253967, 0.7546666860580444, 0.7553333044052124, 0.7586666941642761, 0.7566666603088379, 0.7620000243186951, 0.7723333239555359, 0.7720000147819519, 0.7699999809265137, 0.7689999938011169, 0.7676666378974915, 0.7753333449363708, 0.7796666622161865, 0.7826666831970215, 0.7889999747276306, 0.7943333387374878, 0.7963333129882812, 0.7906666398048401, 0.7903333306312561, 0.7886666655540466, 0.7919999957084656, 0.7946666479110718]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [30, 97, 31, 49, 25], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [4, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 0, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 1, 0, 0, 1], [0, 5, 6, 1, 2], [1, 0, 2], [15, 52, 13, 20, 37]], "fitness": -0.41600000858306885, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2908478472856655, 2.2651171638603147, 2.2890567364174346, 2.30239688227473, 2.302744204609732, 2.302889005808137, 2.303233621678159], "accuracy": [0.12323339283466339, 0.24659886956214905, 0.2110685557126999, 0.11081759631633759, 0.10091137140989304, 0.1010434553027153, 0.09998679161071777], "val_loss": [1.9446562358311243, 1.9469289779663086, 1.972799437386649, 1.9735329491751534, 1.9735843113490514, 1.9736855370657784, 1.9739274297441756], "val_accuracy": [0.3266666531562805, 0.437666654586792, 0.13566666841506958, 0.10199999809265137, 0.10199999809265137, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [30, 97, 31, 49, 25], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [5, 1, 0, 0, 0, 9, 3, 9], [4, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 0, 1, 0, 1], [0, 0, 1], [3, 6, 8, 4], [2], [64], [0, 0, 0, 0, 1, 1, 1], [0, 1, 5, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 7, 4, 3, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.subtract(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 2, 3, 4, 2, 2, 3, 1, 8, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [13, 73, 29, 49, 25], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [0, 4, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 49], [1, 0, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [1, 1, 0, 1, 1, 1], [0, 1, 5, 6, 2], [0, 3, 2], [81, 15, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021576207437695, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 3, 4, 2, 2, 3, 1, 6, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [41, 32, 5, 49, 25], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [5, 1, 0, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 0, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 5, 1, 2], [1, 3, 2, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 10, 9, 5, 2, 2, 1, 1, 0, 5, 3, 2, 1, 0, 9, 5, 4, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(alpha), tf.math.subtract(tf.math.add(sigma, beta), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 3, 6, 3, 2, 4, 1, 6, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 0, 2, 2, 2, 3, 3, 0], [30, 97, 31, 49, 25], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [9, 8, 0, 2, 0, 9, 3, 9], [4, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [0, 1, 5, 1, 2], [1, 0, 2, 0, 3, 1, 3, 0, 2, 0, 1, 0, 1, 3], [15, 52, 13, 20, 37]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 12, 11, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 1, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 0, 2, 2, 2, 3, 3, 0, 0], [31, 32, 49, 89, 25, 93], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [9, 8, 0, 2, 0, 9, 3, 9], [3, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1, 0], [2, 1, 5, 1, 2], [1, 0, 2], [15, 52, 13, 20, 37]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 16, 14, 6, 1, 1, 1, 0, 1, 3, 1, 1, 0, 0, 6, 3, 3, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))))), tf.math.pow(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.3017118864559527, 2.302282258803267, 2.303056209755926, 2.3070257224930812, 2.32579066614512, 2.443608376895117], "accuracy": [0.10989301651716232, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736576080322266, 1.9739247049604143, 1.9753106662205286, 1.982557773590088, 2.020887851715088, 2.3499326024736678], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 8, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 0, 1, 0, 0], [1, 0, 1], [7, 2, 8, 4], [2], [64], [0, 0, 0, 0, 1, 1, 1], [3, 1, 9, 1, 2], [1, 3, 2], [58, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, sigma)), beta)", "other_info": {"loss": [2.303627177756051, 14063430.50648108, 128.87468384417875, 948.9198166858944, 3058.6609074072735, 6257.212342042209, 6378.6194849564745], "accuracy": [0.09351472556591034, 0.09008057415485382, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09959053993225098], "val_loss": [1.985842296055385, 14.424115862165179, 377.572021484375, 1673.929443359375, 4190.251116071428, 6610.594168526785, 3007.586983816964], "val_accuracy": [0.08433333039283752, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 0, 2, 2, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 8, 0, 2, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [86], [1, 1, 1, 1, 1], [1, 0, 1], [6, 3, 8, 4], [1], [64], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [3, 1, 9, 1, 2, 0, 0, 6, 3, 0, 4], [1, 0, 2, 2, 1, 2, 1], [63, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 18, 11, 7, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta))), tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.negative(tf.math.pow(alpha, beta)), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 2, 0, 2, 2, 2, 3, 3, 0], [31, 32, 49, 61, 25], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [5, 1, 0, 0, 0, 9, 3, 9], [3, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1, 0], [0, 1, 5, 1, 2], [1, 0, 2, 0, 3, 1, 3, 0, 2, 0, 1, 0, 1, 3], [15, 52, 13, 20, 37]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10896842926740646, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [30, 97, 31, 49, 25], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [9, 8, 0, 2, 0, 9, 3, 9], [3, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1, 0], [0, 1, 5, 1, 2], [1, 0, 2, 0, 3, 1, 3, 0, 2, 0, 1, 0, 1, 3], [15, 52, 13, 20, 37]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))), tf.math.pow(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 4, 1, 2, 2, 0, 3, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [30, 97, 31, 49, 25], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [5, 1, 0, 0, 0, 9, 3, 9], [4, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 0, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 0, 0, 0, 1, 1, 1], [0, 1, 5, 1, 2], [1, 0, 2, 0, 3, 1, 3, 0, 2, 0, 1, 0, 1, 3], [15, 52, 13, 20, 37]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.multiply(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.subtract(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [81, 32, 5, 49, 25], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [5, 1, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 0], [0, 1, 1], [7, 2, 8, 4], [3], [64], [0, 1, 0, 0, 1, 1, 1], [7, 1, 9, 1, 2], [1, 0, 2], [58, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 3, 1, 1, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301704283891778, 2.302271584572652, 2.302930303143315, 2.3064308654614853, 2.3226374360816258, 2.424253630993971], "accuracy": [0.10989301651716232, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973635196685791, 1.9738505227225167, 1.97501802444458, 1.9812442915780204, 2.0135304587227956, 2.316685131617955], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [30, 97, 31, 49, 25], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [5, 1, 0, 0, 0, 9, 3, 9], [4, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 0, 0, 1], [0, 0, 1], [3, 2, 8, 4], [2], [64], [1, 1, 0, 0, 1, 1], [0, 1, 5, 1, 2], [1, 0, 2, 0, 3, 1, 3, 0, 2, 0, 1, 0, 1, 3], [15, 52, 13, 20, 37]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 8, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 1], [1, 0, 1], [7, 0, 8, 4], [2], [64], [0, 0, 0, 0, 1, 1, 1], [5, 8, 9, 1, 2], [1, 0, 2], [58, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3021576207437695, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 5, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [5, 1, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 0, 1, 0, 1], [0, 0, 1], [9, 2, 8, 4], [1], [64], [1, 0, 0, 0, 1, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 2, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [64, 97, 77, 49, 25], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 3, 0, 3, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 0], [64], [0, 1, 0, 0, 1, 1, 1], [0, 1, 5, 1, 2], [1, 0, 2], [15, 93, 13]], "fitness": -0.09285714477300644, "mapping_values": [1, 17, 17, 10, 7, 4, 9, 9, 5, 4, 0, 5, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, alpha)), grad))), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [15667.775702636476, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20433232188224792, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2359334.1428571427, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [30, 97, 31, 49, 25], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [9, 8, 0, 2, 0, 9, 3, 9], [3, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1, 0], [0, 1, 5, 1, 2], [1, 0, 2, 0, 3, 1, 3, 0, 2, 0, 1, 0, 1, 3], [15, 52, 13, 20, 37]], "fitness": -0.08171428740024567, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.9659226027304677, 2.3947703094845196, 2.3678869617896985, 2.330835985517017, 2.329174808176706, 2.329904856541374, 2.3254343171901297], "accuracy": [0.1872936189174652, 0.10421344637870789, 0.11847840249538422, 0.09879804402589798, 0.10130762308835983, 0.10077928751707077, 0.09985470771789551], "val_loss": [2.073101656777518, 1.9888410568237305, 1.9940208026341029, 1.9822119304112025, 1.990421976361956, 1.9783226421901159, 1.9888832228524345], "val_accuracy": [0.10199999809265137, 0.10366666316986084, 0.09799999743700027, 0.10199999809265137, 0.0949999988079071, 0.10366666316986084, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 4, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 1], [0, 1, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 9, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3005127050873155, 2.3022009042496254, 2.3019235801104747, 2.302349052629482, 2.302510367786376, 2.3015528934790144], "accuracy": [0.09496764093637466, 0.09047681838274002, 0.09113723784685135, 0.08928807079792023, 0.09496764093637466, 0.08994849026203156], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]