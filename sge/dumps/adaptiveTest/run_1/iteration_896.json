[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8377143144607544, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0167198033616875, 1.4101183310538834, 0.947252115883989, 0.821220800821823, 0.6915946148169622, 0.7545627353135007, 0.6242927717195762, 0.6175415079433999, 0.584034667227955, 0.5474060538847685, 0.5310180574722452, 0.5315660566796149, 0.4985667802575494, 0.4900880806859553, 0.48874753640784785, 0.470913278074029, 0.4529696555618502, 0.4712909802532687, 0.4250706468614463, 0.40717923223948704, 0.39608625150265364, 0.3879112087582805, 0.39765314326987306, 0.3809300071338794, 0.3624513754400957, 0.3613456730451472, 0.3696664375218701, 0.3641400349107102, 0.34939545680739387, 0.34075621931292455, 0.3277282701656882, 0.3195842034143464, 0.3122939126303545, 0.32006442556685427, 0.2969991448981777, 0.2883277829249836, 0.2840162257374459, 0.2744414753106764, 0.29045016933520396, 0.27562678834120075, 0.2657890694331279, 0.2545242398375014, 0.25199126961870183, 0.25418637744298056, 0.24404838930590592, 0.23846327279537047, 0.24851793760298235, 0.22837629952269806], "accuracy": [0.34381189942359924, 0.5329546928405762, 0.6404702067375183, 0.6909258961677551, 0.7454761862754822, 0.7153612375259399, 0.7666094303131104, 0.7662131786346436, 0.7795535326004028, 0.7913089394569397, 0.8041210174560547, 0.7991018295288086, 0.8121780753135681, 0.8161405324935913, 0.81548011302948, 0.8252542614936829, 0.8267071843147278, 0.8241975903511047, 0.8397833704948425, 0.8477083444595337, 0.8543124794960022, 0.8540483713150024, 0.8494254350662231, 0.858671247959137, 0.8661999702453613, 0.8632941246032715, 0.8565579056739807, 0.8654074668884277, 0.8676528930664062, 0.8696341514587402, 0.8741249442100525, 0.8800686597824097, 0.8821820020675659, 0.8796724081039429, 0.8905032277107239, 0.8873332738876343, 0.8910315632820129, 0.8948619961738586, 0.8916919827461243, 0.8912957310676575, 0.8976356983184814, 0.9031832218170166, 0.9058248400688171, 0.9038436412811279, 0.904768168926239, 0.9105798602104187, 0.90423983335495, 0.9173160791397095], "val_loss": [1.6252783026014055, 0.684577226638794, 0.649701646396092, 0.5539512634277344, 0.5672707898276192, 0.4992002248764038, 0.46889071805136545, 0.4548393998827253, 0.48245787620544434, 0.4248159868376596, 0.4053681918552944, 0.45629950932094027, 0.40395454849515644, 0.43719991615840365, 0.40333460909979685, 0.3908749393054417, 0.4330653633390154, 0.37257881675447735, 0.35636429275785175, 0.3489395720618112, 0.3503714459283011, 0.36071932315826416, 0.35512072699410574, 0.3328380158969334, 0.3472076484135219, 0.3353234444345747, 0.35616861070905415, 0.32445607015064787, 0.3745191182409014, 0.3221210922513689, 0.31869012117385864, 0.32969049896512714, 0.3404868415423802, 0.31897406918661936, 0.3251383304595947, 0.3371273875236511, 0.31289719683783396, 0.3536115969930376, 0.34048924275806974, 0.3177871363503592, 0.3141866070883615, 0.3294948509761265, 0.3141056299209595, 0.3175971933773586, 0.33787420817783903, 0.3281130535261972, 0.3215036817959377, 0.32197061606815885], "val_accuracy": [0.5086666941642761, 0.7256666421890259, 0.7246666550636292, 0.7536666393280029, 0.7440000176429749, 0.7776666879653931, 0.7923333048820496, 0.7929999828338623, 0.7763333320617676, 0.8209999799728394, 0.82833331823349, 0.79666668176651, 0.8243333101272583, 0.8100000023841858, 0.8220000267028809, 0.8320000171661377, 0.8013333082199097, 0.8450000286102295, 0.8450000286102295, 0.8543333411216736, 0.8523333072662354, 0.843999981880188, 0.8516666889190674, 0.8579999804496765, 0.8556666374206543, 0.8619999885559082, 0.8450000286102295, 0.8676666617393494, 0.8429999947547913, 0.8669999837875366, 0.8683333396911621, 0.8613333106040955, 0.8606666922569275, 0.8659999966621399, 0.8669999837875366, 0.8700000047683716, 0.8743333220481873, 0.859333336353302, 0.8550000190734863, 0.875333309173584, 0.8759999871253967, 0.862666666507721, 0.8813333511352539, 0.875333309173584, 0.8533333539962769, 0.871666669845581, 0.874666690826416, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 0, 2, 6, 1, 0, 1, 2, 9, 3, 8, 2, 5, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 2, 3, 0, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [0, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8248571157455444, "mapping_values": [1, 4, 4, 2, 2, 1, 24, 24, 14, 10, 2, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.subtract(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), grad))))))))), tf.math.add(beta, tf.math.add(grad, grad)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0780020761231643, 1.9852271716608236, 1.6919126224839032, 1.2894333247589853, 0.8911472642898811, 0.772641774669945, 0.7115252950424217, 0.6663888175458231, 0.6112675458417199, 0.6242001104852417, 0.5948719709241679, 0.5815210664639179, 0.5401054122594086, 0.5398548934256884, 0.5128504171457745, 0.5226548898646766, 0.5088312648716006, 0.4851569205132836, 0.49496419750436454, 0.47511697512229734, 0.46026938346713653, 0.44558859537888856, 0.44990955731887955, 0.4273366333746781, 0.4168191018310505, 0.4488205016446608, 0.4435038856543003, 0.4086068021134772, 0.3909019368546057, 0.39909390419654683, 0.3815346519472482], "accuracy": [0.308149516582489, 0.37564390897750854, 0.3949280083179474, 0.5588429570198059, 0.6808875799179077, 0.7112666964530945, 0.7313432693481445, 0.7515519857406616, 0.7718927264213562, 0.7640998363494873, 0.7744023203849792, 0.7753269076347351, 0.7973847389221191, 0.7952714562416077, 0.8068947196006775, 0.8088759779930115, 0.8105930685997009, 0.8208954930305481, 0.8168009519577026, 0.8227446675300598, 0.8253863453865051, 0.8341038227081299, 0.8305375576019287, 0.8422929644584656, 0.8474441766738892, 0.8342359066009521, 0.8337075710296631, 0.8449346423149109, 0.8541803956031799, 0.8500858545303345, 0.8539162874221802], "val_loss": [1.89394930430821, 1.5188124861036028, 0.9947870799473354, 0.6666676146643502, 0.6247117178780692, 0.6368237393242973, 0.5073374509811401, 0.5223447595323835, 0.4661487511226109, 0.47519619124276297, 0.445688213620867, 0.46744929041181293, 0.43084917749677387, 0.4678020306995937, 0.45944624287741526, 0.41106219802583965, 0.4239186389105661, 0.4365235311644418, 0.3961896300315857, 0.38672127042497906, 0.40048434904643465, 0.4053892322949001, 0.40066005502428326, 0.3696453997067043, 0.3746404903275626, 0.35256279366356985, 0.3699730464390346, 0.3521460124424526, 0.3854756099837167, 0.3525920425142561, 0.3548896908760071], "val_accuracy": [0.3266666531562805, 0.3616666793823242, 0.5590000152587891, 0.7363333106040955, 0.7206666469573975, 0.6890000104904175, 0.7760000228881836, 0.762666642665863, 0.7960000038146973, 0.7873333096504211, 0.8066666722297668, 0.7986666560173035, 0.8109999895095825, 0.8066666722297668, 0.7900000214576721, 0.8243333101272583, 0.8183333277702332, 0.7990000247955322, 0.8289999961853027, 0.8373333215713501, 0.8246666789054871, 0.8159999847412109, 0.8266666531562805, 0.8389999866485596, 0.840666651725769, 0.8579999804496765, 0.8376666903495789, 0.8566666841506958, 0.8320000171661377, 0.8500000238418579, 0.8476666808128357]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [4, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 4, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.822857141494751, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.square(tf.math.subtract(grad, tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.016690072035824, 1.4058261371449299, 0.9812584126693162, 0.8094351644592199, 0.7061475841297749, 0.7657818157186975, 0.6374522650152102, 0.6161027442132004, 0.5807966189676698, 0.5577153515239449, 0.5339716574409147, 0.5225420193019686, 0.4984171876361294, 0.48439923753875075, 0.48823692376319805, 0.47799967662958404, 0.4595263819526987, 0.47730556093407284, 0.4316865122037998, 0.4143273249601156, 0.4054063546729992, 0.39395276940557006, 0.40539303916383335, 0.3759574170566711, 0.37084455210471967, 0.3596405237106174, 0.3766896484542469, 0.35195070609456247, 0.35323434574508616, 0.3471236721541289, 0.33389532867990795, 0.3207917754140906, 0.32583325489983506, 0.309071583018689, 0.2942125732045935, 0.29152579205052853, 0.28443737492789967, 0.27216362762271673, 0.27758907998604876, 0.26641422719956076, 0.2693499928696312, 0.25433129165678325, 0.2606343615442424, 0.25650492521120244, 0.2415122760088531, 0.23208539155039412, 0.23679777577749694, 0.23347303557271545, 0.23501851607378307, 0.2212952062922572, 0.21320279589528815, 0.22489605039621877, 0.21374848701690624, 0.200346735761843, 0.19942474330003787, 0.2018059500771239, 0.19659097464943387, 0.19371668800166444, 0.19107943934661176], "accuracy": [0.34381189942359924, 0.5373134613037109, 0.6322810649871826, 0.6922467350959778, 0.7354378700256348, 0.7180029153823853, 0.7584202885627747, 0.7725531458854675, 0.7833839654922485, 0.7865539789199829, 0.8024039268493652, 0.806630551815033, 0.8146876096725464, 0.8238013386726379, 0.817461371421814, 0.8206313848495483, 0.8265751004219055, 0.8215559124946594, 0.8384625315666199, 0.8473120927810669, 0.847840428352356, 0.8512746095657349, 0.8477083444595337, 0.8590674996376038, 0.8585391640663147, 0.8644828796386719, 0.86118084192276, 0.8683133125305176, 0.86553955078125, 0.8656716346740723, 0.8735966086387634, 0.8790120482444763, 0.8816536664962769, 0.880729079246521, 0.8908994793891907, 0.8882578015327454, 0.889578640460968, 0.8973715305328369, 0.8949940800666809, 0.8972394466400146, 0.8939374089241028, 0.8996169567108154, 0.8988244533538818, 0.9005415439605713, 0.904768168926239, 0.9129573106765747, 0.9037115573883057, 0.9101836085319519, 0.9100515246391296, 0.9157310724258423, 0.9165235757827759, 0.9128252267837524, 0.9187690019607544, 0.9207502603530884, 0.9236560463905334, 0.9218068718910217, 0.9237881302833557, 0.9231277108192444, 0.9255052208900452], "val_loss": [1.6220155443464006, 0.6795029810496739, 0.597416843686785, 0.5565815993717739, 0.6325600317546299, 0.5054829290934971, 0.470051714352199, 0.44041822637830463, 0.506177272115435, 0.4277083533150809, 0.41271706989833284, 0.46131535938807894, 0.405344409602029, 0.4205438920429775, 0.4008289064679827, 0.3979617783001491, 0.46340433188847135, 0.3729326128959656, 0.3580055151666914, 0.35220552342278616, 0.3535388878413609, 0.3392616765839713, 0.35191066776003155, 0.34117393834250315, 0.3382323043687003, 0.34184690032686504, 0.34945114169801983, 0.3255138652665274, 0.3667322652680533, 0.3233170509338379, 0.3199159247534616, 0.3387434056827, 0.32440567868096487, 0.3340166211128235, 0.3256024547985622, 0.33595470019749235, 0.3228118760245187, 0.3255548732621329, 0.3359900116920471, 0.3244985512324742, 0.32291520493371145, 0.3354047451700483, 0.3192837578909738, 0.31569503034864155, 0.3382724864142282, 0.3439809765134539, 0.3181935293333871, 0.33757923330579487, 0.3297628675188337, 0.325157710484096, 0.3337137017931257, 0.32659551075526644, 0.33223319905144827, 0.33529105356761385, 0.33462867566517424, 0.3276162488119943, 0.3288260357720511, 0.3380904027393886, 0.3275235039847238], "val_accuracy": [0.5073333382606506, 0.7146666646003723, 0.7416666746139526, 0.7559999823570251, 0.7316666841506958, 0.7706666588783264, 0.7886666655540466, 0.8086666464805603, 0.7603333592414856, 0.8233333230018616, 0.8216666579246521, 0.7963333129882812, 0.8209999799728394, 0.8266666531562805, 0.8240000009536743, 0.8336666822433472, 0.7993333339691162, 0.8396666646003723, 0.8423333168029785, 0.8510000109672546, 0.8516666889190674, 0.8556666374206543, 0.8533333539962769, 0.8546666502952576, 0.8586666584014893, 0.8586666584014893, 0.8473333120346069, 0.8663333058357239, 0.8356666564941406, 0.8633333444595337, 0.8663333058357239, 0.8653333187103271, 0.8679999709129333, 0.8629999756813049, 0.8676666617393494, 0.8706666827201843, 0.875, 0.8703333139419556, 0.8640000224113464, 0.875333309173584, 0.8743333220481873, 0.8619999885559082, 0.874666690826416, 0.8756666779518127, 0.8693333268165588, 0.8683333396911621, 0.8766666650772095, 0.8769999742507935, 0.8693333268165588, 0.8769999742507935, 0.8773333430290222, 0.8759999871253967, 0.8733333349227905, 0.8813333511352539, 0.8786666393280029, 0.8776666522026062, 0.8756666779518127, 0.878333330154419, 0.8806666731834412]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8154285550117493, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0167024766512363, 1.4091585346138031, 0.8961020992920462, 0.8498612449405657, 0.6912259907376702, 0.7856799942658893, 0.6304107760756386, 0.6188862837930759, 0.5805035842927755, 0.5490042092919492, 0.5350928658885474, 0.5317828138002771, 0.4990611012428192, 0.502358627085515, 0.485038230180142, 0.48012122037530086, 0.46057946047274634, 0.46052710324025914, 0.43415607888118196, 0.4129262631949716, 0.39541806940940455, 0.3989574141931288, 0.39536539235009244, 0.3810163921392542, 0.36636081756759453, 0.3615106990143387, 0.3695643564941798, 0.3493773113105118, 0.3568460558738061, 0.34128772916023553, 0.32716747385446876, 0.3231036265126907, 0.3093814014672068], "accuracy": [0.34381189942359924, 0.5374455451965332, 0.6651697158813477, 0.6828688383102417, 0.7387399077415466, 0.7057191729545593, 0.7629110813140869, 0.7700436115264893, 0.7835160493850708, 0.791969358921051, 0.7967243194580078, 0.800818920135498, 0.811649739742279, 0.81112140417099, 0.8211596608161926, 0.8208954930305481, 0.8248580098152161, 0.8304054737091064, 0.8396512866020203, 0.8473120927810669, 0.8539162874221802, 0.8495575189590454, 0.8518029451370239, 0.854708731174469, 0.8585391640663147, 0.8639545440673828, 0.8597279191017151, 0.8705587387084961, 0.8668603897094727, 0.8687095642089844, 0.8702945709228516, 0.8798044919967651, 0.8836349248886108], "val_loss": [1.6221278394971574, 0.6714252574103219, 0.6624143123626709, 0.5506754091807774, 0.5943597725459507, 0.5088457209723336, 0.4669909988130842, 0.44558892931256977, 0.47536444664001465, 0.43186073643820627, 0.4037609100341797, 0.4659472533634731, 0.446581380707877, 0.41009797368730816, 0.4159323828560965, 0.39574773822511944, 0.4443996974400112, 0.37643206119537354, 0.3576125502586365, 0.3550459827695574, 0.3563242554664612, 0.35470621074948994, 0.36215783868517193, 0.3438856772014073, 0.3432533826146807, 0.34260196345193045, 0.3421700767108372, 0.3213768260819571, 0.3662248935018267, 0.33198788336345125, 0.3125395349093846, 0.3282565304211208, 0.31669938564300537], "val_accuracy": [0.5080000162124634, 0.7143333554267883, 0.6970000267028809, 0.7360000014305115, 0.7406666874885559, 0.7696666717529297, 0.7919999957084656, 0.8016666769981384, 0.7816666960716248, 0.8223333358764648, 0.8243333101272583, 0.7919999957084656, 0.8046666383743286, 0.8306666612625122, 0.8163333535194397, 0.8263333439826965, 0.8016666769981384, 0.8423333168029785, 0.843666672706604, 0.8503333330154419, 0.8443333506584167, 0.8476666808128357, 0.8493333458900452, 0.8453333377838135, 0.8569999933242798, 0.8586666584014893, 0.8510000109672546, 0.8733333349227905, 0.8460000157356262, 0.8646666407585144, 0.8700000047683716, 0.8673333525657654, 0.8703333139419556]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 1, 3, 2, 3, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.3117142915725708, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 4, 3, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(beta, alpha)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1985691412801143, 2.292912168588463, 2.3353825400549866, 8.155255133074357e+25, NaN, NaN], "accuracy": [0.28199708461761475, 0.22374852001667023, 0.19257694482803345, 0.13710209727287292, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8439353534153529, 1.7894743510654993, 6.836417879377093, NaN, NaN, NaN], "val_accuracy": [0.3009999990463257, 0.28200000524520874, 0.2606666684150696, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [5, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 2, 2, 6, 1, 9, 8, 2, 9, 3, 8, 3, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 0, 3, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 71, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.25628572702407837, "mapping_values": [1, 4, 4, 2, 2, 1, 24, 24, 15, 9, 5, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), grad))), tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3026253587266536, 2.301939087962084, 2.3021101017890118, 2.3008651381958556, 2.3011266633173446, 2.2993672276374575, 2.300762632566751, 2.302059857506148, 2.3004815275202084, 2.298524861291037, 2.299199702229246, 2.2990103337617045, 2.3003709177063314, 2.2995193866517614, 2.2986186419527184, 2.2981283658090255, 2.2983714834164637, 2.2967513266366786, 2.296167576364979, 2.2976628723492194, 2.2971066768221995, 2.2981744031738596, 2.2954282333916676, 2.296051107393264, 2.294995527572289, 2.2953443467073815, 2.296225753175017, 2.2949814196228746, 2.2948018754430812, 2.29436786712326, 2.293899208909532, 2.29375765727039, 2.2928990489849874, 2.292562290221126, 2.2921661962497315, 2.2932748100178477, 2.2931446399608104, 2.291080245661808, 2.2924892689494913, 2.2916750333501583, 2.290878144489571, 2.2904547326490157, 2.2909008289262083, 2.2909523528470275, 2.2894195810269373, 2.290334923203438, 2.290934950306179, 2.2915624104407737, 2.289344454107661, 2.290078027955986, 2.2895874843274946, 2.288882247775915, 2.288037759060117, 2.2891142241092894, 2.286603857135382, 2.2888120014622477, 2.2867348566346273, 2.2881556014500717, 2.2861678128890577, 2.287974310053527, 2.2847408892503425, 2.2867325489720365, 2.2872721212352065, 2.2865726118310725, 2.2849479825694123, 2.2869798991941837, 2.2850076976532256, 2.2838821132122296, 2.2848422022197132, 2.2840609352712415, 2.283865003506458, 2.283741006068959, 2.2838975470914122, 2.283136477984961, 2.283027679629534, 2.2824939657054353, 2.282022760717734, 2.2824577515576543, 2.28166458213397, 2.2830480055455693, 2.281722026368205, 2.281549511993755, 2.2807070944114307, 2.2807389551449164, 2.2790058440441596, 2.2800947998524532, 2.2788333292288345, 2.2781663697708425, 2.2798405602434606, 2.2780776479225024, 2.2778369556281386, 2.2790580705298313, 2.278824145626068, 2.277615660044023, 2.2766851809487414, 2.2776291118148704, 2.2771583492446332, 2.277266224755461, 2.276671285563771, 2.2759101752040722], "accuracy": [0.09377889335155487, 0.09060890227556229, 0.09509972482919693, 0.09642054885625839, 0.09272222965955734, 0.09879804402589798, 0.09126931428909302, 0.0956280529499054, 0.09430722147226334, 0.09681680053472519, 0.0940430611371994, 0.09932637959718704, 0.10117553919553757, 0.09602430462837219, 0.10355303436517715, 0.10249637067317963, 0.10170386731624603, 0.10434553027153015, 0.10619468986988068, 0.10170386731624603, 0.10342095047235489, 0.10276053100824356, 0.108440101146698, 0.1088363528251648, 0.10962884873151779, 0.10513802617788315, 0.11411966383457184, 0.11094967275857925, 0.10777968913316727, 0.10830801725387573, 0.1088363528251648, 0.11662924289703369, 0.11028926074504852, 0.11161009222269058, 0.11728965491056442, 0.10751552134752274, 0.10857218503952026, 0.11108175665140152, 0.11755382269620895, 0.11808215826749802, 0.12178047746419907, 0.1154404953122139, 0.12178047746419907, 0.11993131786584854, 0.1216483935713768, 0.12323339283466339, 0.11927089840173721, 0.11240258812904358, 0.12415797263383865, 0.12719587981700897, 0.12296922504901886, 0.12508255243301392, 0.12349755316972733, 0.12296922504901886, 0.13472460210323334, 0.12415797263383865, 0.12957337498664856, 0.1290450394153595, 0.13498876988887787, 0.12732796370983124, 0.13459251821041107, 0.13195087015628815, 0.13168670237064362, 0.13115836679935455, 0.13776251673698425, 0.12679962813854218, 0.13538502156734467, 0.1372341811656952, 0.13630960881710052, 0.13551710546016693, 0.13670584559440613, 0.14119666814804077, 0.14080041646957397, 0.1394795924425125, 0.14317791163921356, 0.13789460062980652, 0.14198917150497437, 0.13961167633533478, 0.14132875204086304, 0.14238542318344116, 0.14410249888896942, 0.137630432844162, 0.14568749070167542, 0.14859332144260406, 0.1516312211751938, 0.14872540533542633, 0.1504424810409546, 0.15532954037189484, 0.1492537260055542, 0.1534803807735443, 0.14819706976413727, 0.149649977684021, 0.14991414546966553, 0.1558578759431839, 0.15717871487140656, 0.1554616242647171, 0.15638621151447296, 0.15480121970176697, 0.1570466309785843, 0.15651829540729523], "val_loss": [1.970693792615618, 1.970451831817627, 1.9702068737574987, 1.9699668884277344, 1.9697240420750208, 1.9694822175162179, 1.96923794065203, 1.9689952986580985, 1.9687543596540178, 1.9685139656066895, 1.9682727541242326, 1.9680351529802596, 1.967796734401158, 1.9675563403538294, 1.9673163550240653, 1.9670746667044503, 1.9668328421456474, 1.9665938786097936, 1.9663542338779993, 1.9661177226475306, 1.9658827100481306, 1.9656455857413155, 1.9654043061392648, 1.9651658875601632, 1.964926038469587, 1.9646891866411482, 1.9644532203674316, 1.9642138481140137, 1.9639780861990792, 1.9637413706098283, 1.9635050637381417, 1.96327120917184, 1.9630331993103027, 1.9627959387642997, 1.962559495653425, 1.962324891771589, 1.9620897429330009, 1.9618512562343053, 1.9616146768842424, 1.9613780975341797, 1.961141722542899, 1.9609063693455286, 1.9606704711914062, 1.9604321888514928, 1.960197584969657, 1.9599622317722865, 1.9597234044756209, 1.9594861439296178, 1.9592501776559013, 1.9590110778808594, 1.9587740898132324, 1.9585368973868233, 1.95829895564488, 1.9580633299691337, 1.9578278405325753, 1.9575894900730677, 1.9573512077331543, 1.9571140153067452, 1.956878389630999, 1.956641469682966, 1.9564059121268136, 1.956167425428118, 1.9559288706098283, 1.9556936536516463, 1.9554561887468611, 1.9552194050380163, 1.9549806458609444, 1.9547425678798132, 1.9545029231480189, 1.9542677061898368, 1.9540308543613978, 1.9537905284336634, 1.9535544940403529, 1.953313214438302, 1.9530762263706751, 1.9528368541172572, 1.9525996616908483, 1.952361788068499, 1.9521241869245256, 1.9518896511622839, 1.951653003692627, 1.951413699558803, 1.951174054827009, 1.9509361130850655, 1.9506962639944894, 1.9504551887512207, 1.9502113206045968, 1.9499719483511788, 1.9497338022504533, 1.9494938850402832, 1.9492534909929549, 1.9490154130118233, 1.9487744740077428, 1.9485342161996024, 1.9482921191624232, 1.9480515207563127, 1.9478107179914201, 1.94757046018328, 1.9473272732325964, 1.9470837456839425], "val_accuracy": [0.03999999910593033, 0.041999999433755875, 0.04266666620969772, 0.044333335012197495, 0.045666664838790894, 0.04600000008940697, 0.04699999839067459, 0.049666665494441986, 0.05133333429694176, 0.054666668176651, 0.054999999701976776, 0.056333333253860474, 0.058666665107011795, 0.05999999865889549, 0.06199999898672104, 0.06400000303983688, 0.06566666811704636, 0.06733333319425583, 0.07000000029802322, 0.07100000232458115, 0.07133333384990692, 0.07366666942834854, 0.07599999755620956, 0.07766667008399963, 0.07866666465997696, 0.08166666328907013, 0.08299999684095383, 0.08433333039283752, 0.08633333444595337, 0.08866667002439499, 0.09000000357627869, 0.09266666322946548, 0.0949999988079071, 0.09866666793823242, 0.10266666859388351, 0.10566666722297668, 0.10766666382551193, 0.10833333432674408, 0.11100000143051147, 0.11400000005960464, 0.11599999666213989, 0.11733333021402359, 0.11933333426713943, 0.12166666984558105, 0.12433333694934845, 0.12733332812786102, 0.1303333342075348, 0.13300000131130219, 0.13466666638851166, 0.13833333551883698, 0.14166666567325592, 0.14399999380111694, 0.14533333480358124, 0.1483333259820938, 0.1536666601896286, 0.15600000321865082, 0.1586666703224182, 0.16099999845027924, 0.164000004529953, 0.16466666758060455, 0.16633333265781403, 0.16899999976158142, 0.17133332788944244, 0.17233332991600037, 0.1743333339691162, 0.17599999904632568, 0.17900000512599945, 0.18000000715255737, 0.1823333352804184, 0.18466666340827942, 0.18766666948795319, 0.18833333253860474, 0.19200000166893005, 0.19466666877269745, 0.19566667079925537, 0.1979999989271164, 0.20100000500679016, 0.20366667211055756, 0.20633333921432495, 0.20933333039283752, 0.21199999749660492, 0.21433334052562714, 0.21699999272823334, 0.21933333575725555, 0.22066666185855865, 0.22433333098888397, 0.22599999606609344, 0.22866666316986084, 0.23066666722297668, 0.23233333230018616, 0.234333336353302, 0.23733332753181458, 0.2396666705608368, 0.24199999868869781, 0.2446666657924652, 0.2473333328962326, 0.24966666102409363, 0.2516666650772095, 0.2549999952316284, 0.257666677236557]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [4, 5, 8, 2, 8, 2, 5, 1, 9, 9, 5, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 1, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [5, 7, 3, 4, 6], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.12457142770290375, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 7, 4, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, beta), tf.math.square(tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.square(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [5.2928749785337, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.22691850364208221, 0.10817593336105347, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.677975450243269, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10533333569765091, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [39, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 14, 14, 11, 3, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.square(beta), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302545212326332, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [4, 6, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.divide_no_nan(tf.math.subtract(beta, tf.math.add(beta, grad)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [51, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 5, 1, 2, 6, 6, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [0, 4], [67, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 15, 15, 9, 6, 2, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(grad, tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.subtract(tf.math.add(grad, grad), tf.math.divide_no_nan(beta, tf.math.divide_no_nan(grad, tf.math.square(tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21212521195411682, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 5, 5, 2, 6, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 2, 3, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [6, 4, 3, 4, 6], [4, 4], [67, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 7, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.math.square(tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [4, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 8, 2, 2, 2, 6, 1, 2, 1, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [0, 2, 0, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [3, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 6, 6, 3, 3, 2, 5, 3, 2, 1, 0, 6, 3, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12415797263383865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [15, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 2, 1, 2, 6, 2, 8, 1, 3, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [0, 2, 0, 2, 2, 0, 2, 2, 0, 1, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [6.9735809666778845, 48.63178099598379, 155.52181863337617, 355.7311805742229, 686.5319238777851, 1183.0833693960199], "accuracy": [0.09840179979801178, 0.10328886657953262, 0.09496764093637466, 0.09549596905708313, 0.1018359512090683, 0.09787346422672272], "val_loss": [14.104397365025111, 60.12096514020647, 156.1328342982701, 323.0484619140625, 584.7209821428571, 965.7643694196429], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [3, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 2, 3, 0, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 3], [11, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [96291925.13542238, 1834332190.2966583, 8493410094.087439, 23367687297.978073, 49972806002.593056, 91416599812.0914], "accuracy": [0.09893012791872025, 0.10051512718200684, 0.09509972482919693, 0.0956280529499054, 0.10196803510189056, 0.09721305221319199], "val_loss": [353571172.5714286, 2826568411.428571, 9537417508.571428, 22604607488.0, 44146286592.0, 76281317668.57143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 5, 1, 2, 6, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 3, 2, 2, 3, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [67, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [53, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 2, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.07371428608894348, "mapping_values": [1, 4, 4, 2, 2, 0, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(tf.math.subtract(beta, tf.math.add(beta, grad)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302163316935533, 2.3008036789184296, 2.3005660672969412, 2.299350568158925, 2.2995825468856173, 2.2986834291390865, 2.2994803595363407, 2.3005453879255993, 2.299342228011873, 2.2984065476063456, 2.2991468451987043, 2.2992189895081685, 2.3004908013762644, 2.2998389703974573, 2.2997751641251454], "accuracy": [0.09391097724437714, 0.09642054885625839, 0.09642054885625839, 0.09985470771789551, 0.09906221181154251, 0.10342095047235489, 0.09325055778026581, 0.10117553919553757, 0.09959053993225098, 0.1014397069811821, 0.10117553919553757, 0.1018359512090683, 0.10196803510189056, 0.09774138033390045, 0.1010434553027153], "val_loss": [1.9700522422790527, 1.9695728846958704, 1.9692504065377372, 1.9691821507045202, 1.969168049948556, 1.9693458420889718, 1.9693320819309779, 1.9692035402570451, 1.9691517693655831, 1.9692489760262626, 1.9694063322884696, 1.96967009135655, 1.9699217251368932, 1.9702033996582031, 1.9704087121146066], "val_accuracy": [0.05000000074505806, 0.0560000017285347, 0.06466666609048843, 0.06733333319425583, 0.070333331823349, 0.07433333247900009, 0.07699999958276749, 0.08399999886751175, 0.08666666597127914, 0.08733333647251129, 0.08666666597127914, 0.0820000022649765, 0.07699999958276749, 0.07500000298023224, 0.0729999989271164]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 5, 1, 2, 6, 2, 8, 1, 3, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [5, 2, 0, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 11, 6, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.subtract(tf.math.add(tf.math.add(beta, beta), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3027355637233553, 2.302314753293708, 2.3027587764849833, 2.301768878290068, 2.3023055671086765, 2.300805693745944], "accuracy": [0.09338264167308807, 0.09008057415485382, 0.09338264167308807, 0.09391097724437714, 0.09021265059709549, 0.09509972482919693], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]