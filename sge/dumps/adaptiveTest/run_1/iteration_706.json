[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8257142901420593, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0268759132612493, 1.7203154805597454, 1.168484193962862, 0.8663217068553019, 0.8657395668379966, 0.6844639798921286, 0.6581899212446226, 0.6114931307322692, 0.6018214657983413, 0.5600709888236303, 0.5494582029050918, 0.5378613282330142, 0.4986688138754959, 0.5015501563953072, 0.49006741710342766, 0.46628508110717776, 0.45404437006409487, 0.4582724122402139, 0.44381719083676424, 0.42702829293004274, 0.4002371090608833, 0.4149827836700135, 0.410068167352626, 0.3941877726330151], "accuracy": [0.3187161684036255, 0.45291242003440857, 0.5789195895195007, 0.6832650899887085, 0.6802271604537964, 0.7446836829185486, 0.7479857206344604, 0.7696473598480225, 0.7761194109916687, 0.7860256433486938, 0.7946110367774963, 0.7979130744934082, 0.813498854637146, 0.8120459914207458, 0.8191784620285034, 0.8257825970649719, 0.8278959393501282, 0.8293488025665283, 0.8304054737091064, 0.837141752243042, 0.8544445633888245, 0.8467837572097778, 0.8491612672805786, 0.8540483713150024], "val_loss": [1.2723205770765031, 1.209676742553711, 0.6831970044544765, 0.6421556302479335, 0.5627094166619437, 0.48848492758614676, 0.48791466440473286, 0.4849600110735212, 0.4484087569372995, 0.4492309944970267, 0.4353849376950945, 0.4082777074405125, 0.4426783493586949, 0.4121441755975996, 0.3750732796532767, 0.3925901395933969, 0.3776958244187491, 0.3635729891913278, 0.35501096078327726, 0.364877530506679, 0.4027267439024789, 0.3626018762588501, 0.35627804483686176, 0.338704126221793], "val_accuracy": [0.4983333349227905, 0.4516666531562805, 0.699999988079071, 0.6940000057220459, 0.7609999775886536, 0.7826666831970215, 0.7649999856948853, 0.7886666655540466, 0.8069999814033508, 0.8080000281333923, 0.8046666383743286, 0.8253333568572998, 0.79666668176651, 0.8236666917800903, 0.8420000076293945, 0.8303333520889282, 0.8403333425521851, 0.847000002861023, 0.856333315372467, 0.8486666679382324, 0.8339999914169312, 0.8429999947547913, 0.8483333587646484, 0.8556666374206543]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [1, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.7325714230537415, "mapping_values": [1, 4, 4, 3, 1, 1, 17, 17, 9, 8, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, grad))), alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2953545392512202, 2.245769809344504, 2.1373228654885383, 1.8818003302630715, 1.509936240181994, 1.3774350747109845, 1.2951232315196244, 1.0532367431161709, 0.9011208683492453, 0.9060895148521527, 0.8476868222701692, 0.8139371761178549, 0.8079459865756747, 0.8045676910425331, 0.778591881401708, 0.7461150794957592, 0.7175173445416164, 0.7285582338735459, 0.7157842688997581, 0.6988295504461426, 0.6904712373617382, 0.668053147193227, 0.6528695233116029, 0.6399861839406163, 0.6156927290814286, 0.6095972295607937, 0.6048114003049951, 0.5878279964213106, 0.5807422070833261, 0.5672725237765254, 0.5531427484178398, 0.5605995208831936, 0.5577037000952143, 0.5430773199273768, 0.5311465396731206, 0.5196533122744149, 0.5083884309232826, 0.5183013399767444, 0.5105655310436121, 0.49793996656292133, 0.49570582029432464, 0.4854098987333716, 0.4864551148252748, 0.48292610525155916, 0.47408202129930727, 0.47615420353442545, 0.4755935424260019, 0.4652334273947921], "accuracy": [0.10870426893234253, 0.23457930982112885, 0.3529256284236908, 0.4233258366584778, 0.48514068126678467, 0.5272751450538635, 0.5810328722000122, 0.6388852000236511, 0.653150200843811, 0.6749438643455505, 0.6853784322738647, 0.6951525807380676, 0.6985867023468018, 0.6940959095954895, 0.6966054439544678, 0.7148329019546509, 0.7275128960609436, 0.7231541275978088, 0.726192057132721, 0.7358341217041016, 0.7420420050621033, 0.7467969655990601, 0.7519482374191284, 0.7560427784919739, 0.7617223858833313, 0.7666094303131104, 0.7693831920623779, 0.7783648371696472, 0.7820631265640259, 0.7804781198501587, 0.793422281742096, 0.7874785661697388, 0.7948752045631409, 0.7956677079200745, 0.8013472557067871, 0.8024039268493652, 0.8063663840293884, 0.8075551390647888, 0.8108572363853455, 0.8087438941001892, 0.8094043135643005, 0.8107251524925232, 0.8178576231002808, 0.8228767514228821, 0.8195747137069702, 0.8170651197433472, 0.8158763647079468, 0.8193105459213257], "val_loss": [1.944028718130929, 1.8744727543422155, 1.7112621579851424, 1.3348108700343542, 0.9474985599517822, 0.7890828847885132, 0.7409579583576748, 0.659187776701791, 0.6975773572921753, 0.6746447256633213, 0.6104084764208112, 0.5940831218447004, 0.5995590516499111, 0.5911475590297154, 0.5759064980915615, 0.5646400111062186, 0.5614639009748187, 0.5669443266732352, 0.539346626826695, 0.5224876403808594, 0.518002952848162, 0.5008660214287894, 0.48689472675323486, 0.4725722926003592, 0.4678323268890381, 0.47445149081093924, 0.46677614961351666, 0.45483265604291645, 0.45463999680110384, 0.44976300852639334, 0.4460014956338065, 0.4515447275979178, 0.44783152852739605, 0.4392937592097691, 0.4283275008201599, 0.42158837829317364, 0.4204524414879935, 0.42046800681522917, 0.4143360086849758, 0.4146532927240644, 0.41765546798706055, 0.4166512829916818, 0.4148960368973868, 0.41320630482264925, 0.41091333968298777, 0.4084863322121756, 0.40501720564705984, 0.39972420249666485], "val_accuracy": [0.281333327293396, 0.4163333475589752, 0.47200000286102295, 0.5523333549499512, 0.6366666555404663, 0.6693333387374878, 0.715666651725769, 0.7223333120346069, 0.7036666870117188, 0.7303333282470703, 0.7289999723434448, 0.7353333234786987, 0.734000027179718, 0.731333315372467, 0.746999979019165, 0.7573333382606506, 0.7590000033378601, 0.7599999904632568, 0.7720000147819519, 0.7796666622161865, 0.7720000147819519, 0.7743333578109741, 0.7836666703224182, 0.7963333129882812, 0.7973333597183228, 0.7950000166893005, 0.7990000247955322, 0.8073333501815796, 0.8116666674613953, 0.8136666417121887, 0.8169999718666077, 0.812666654586792, 0.8166666626930237, 0.8243333101272583, 0.8270000219345093, 0.8299999833106995, 0.8299999833106995, 0.8306666612625122, 0.8323333263397217, 0.8370000123977661, 0.8299999833106995, 0.8306666612625122, 0.8383333086967468, 0.8353333473205566, 0.8293333053588867, 0.82833331823349, 0.8299999833106995, 0.8323333263397217]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.730571448802948, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.300450345575849, 2.2933084910587627, 2.287006438857041, 2.280716963510913, 2.274353807785917, 2.267019802915296, 2.260289323139405, 2.252906928020241, 2.2427757213679698, 2.2359145971856744, 2.2283325410711137, 2.218236502119736, 2.209768626762655, 2.1995091633537838, 2.1854942555692705, 2.175322626276637, 2.1599842081799276, 2.1429735573763704, 2.126969853128976, 2.1115856516425793, 2.090638373301502, 2.0761769981180214, 2.0495221965017887, 2.033693806874108, 2.0042391453499744, 1.9764884801635874, 1.9513544434522359, 1.925352717214304, 1.891521026618634, 1.8647801513763829, 1.836400314140093, 1.8011927497290885, 1.7701627793895915, 1.7355239076574072, 1.7074319212711593, 1.6719202726209452, 1.6372271909721303, 1.6070172168071386, 1.5688991373430201, 1.549513848230052, 1.5195846427086872, 1.484365860106781, 1.4646426005496356, 1.4345993263027719, 1.4177000865708285, 1.3846973920652597, 1.3730402532239174, 1.3427617880079676, 1.3311129032014588, 1.315632230176461, 1.2906497699898531, 1.2829080137987934, 1.2642316873346604, 1.2400418414951173, 1.2266576949237848, 1.2201198731053224, 1.202478665670053, 1.187274018834217, 1.1816459493142046, 1.1655964556308454, 1.1594060996520033, 1.1455991181715084, 1.1280076319373689, 1.1227845324973673, 1.1128412672021937, 1.0894674325206608, 1.1026630198966558, 1.0827275631119468, 1.0787051848101814, 1.0772792030051557, 1.055634927015893, 1.03644753040938, 1.0510351187076552, 1.0346843467932083, 1.0418448890315197, 1.0293949699168823, 1.0172965883531622, 1.0073315442561033, 0.9947200280139002, 0.9989048754770553, 0.9965914830461139, 0.9853284349688418, 0.9829273203014146, 0.9767152672792706, 0.9779958666008635, 0.9610080972339468, 0.9583967026781176, 0.9480625470993683, 0.9566116790021368, 0.9581464359773195, 0.9474042841015459, 0.9335346274671301, 0.9399305132669528, 0.9325883644856262, 0.9243700153335462, 0.9302158179756768, 0.9181984078142511, 0.921143452079777, 0.9120286851038849, 0.9196519479854247], "accuracy": [0.09377889335155487, 0.11306300014257431, 0.12574297189712524, 0.1460837423801422, 0.17500990629196167, 0.18650111556053162, 0.20301149785518646, 0.21820102632045746, 0.2421080470085144, 0.2502971887588501, 0.2719587981700897, 0.2813366651535034, 0.2973187267780304, 0.30524370074272156, 0.31462156772613525, 0.33218860626220703, 0.3459252417087555, 0.35503897070884705, 0.3671905994415283, 0.36745476722717285, 0.3863426148891449, 0.39043718576431274, 0.40549466013908386, 0.3995509147644043, 0.4216087758541107, 0.43111875653266907, 0.4319112300872803, 0.42425042390823364, 0.43811914324760437, 0.4453836977481842, 0.45291242003440857, 0.4527803361415863, 0.460969477891922, 0.46968695521354675, 0.46691322326660156, 0.4858010709285736, 0.49068814516067505, 0.5001981258392334, 0.5091797709465027, 0.511821448802948, 0.5151234865188599, 0.5303130149841309, 0.5260863900184631, 0.5349359512329102, 0.5387663245201111, 0.5416721701622009, 0.5370492935180664, 0.5521067380905151, 0.5531634092330933, 0.55791836977005, 0.5612204670906067, 0.5629374980926514, 0.5700700283050537, 0.5774666666984558, 0.5797120332717896, 0.5799762010574341, 0.5886936783790588, 0.5872408151626587, 0.5890899300575256, 0.5939770340919495, 0.5949016213417053, 0.5987319946289062, 0.6083740592002869, 0.6079778075218201, 0.6073173880577087, 0.6164311170578003, 0.6153744459152222, 0.6193369626998901, 0.617751955986023, 0.6184123754501343, 0.629507303237915, 0.6375643610954285, 0.6272619366645813, 0.6347906589508057, 0.6256769299507141, 0.6362435817718506, 0.6439043879508972, 0.6384889483451843, 0.6449610590934753, 0.6420552134513855, 0.6427156329154968, 0.6576409935951233, 0.6516972780227661, 0.6491876840591431, 0.6524897813796997, 0.6561880707740784, 0.6593580842018127, 0.6604147553443909, 0.6543388962745667, 0.6596222519874573, 0.6590939164161682, 0.665830135345459, 0.6619997620582581, 0.6654338836669922, 0.6719059348106384, 0.6696605682373047, 0.6740192770957947, 0.6724342703819275, 0.672170102596283, 0.6730946898460388], "val_loss": [1.9648352350507463, 1.958864961351667, 1.9529344694955009, 1.9469390596662248, 1.9408249855041504, 1.934414999825614, 1.9278515407017298, 1.920895985194615, 1.9135353905814034, 1.9056651251656669, 1.8972550119672502, 1.8883277348109655, 1.8787223270961217, 1.8683397429330009, 1.8569085257393974, 1.844761644090925, 1.8314877237592424, 1.8169748442513602, 1.8012420790536063, 1.7844583647591727, 1.76626341683524, 1.746955054146903, 1.7260565076555525, 1.7042533670152937, 1.6806489740099226, 1.6552768094199044, 1.6284782205309187, 1.6004777295248849, 1.5710366112845284, 1.5407498904636927, 1.5098249231066023, 1.4778033324650355, 1.4455897126879012, 1.4131324972425188, 1.380509853363037, 1.3481223583221436, 1.315462248665946, 1.2836767945970808, 1.251746075493949, 1.2218545845576696, 1.1927828107561385, 1.1644823891775948, 1.1381251130785262, 1.1127794470105852, 1.0892509392329626, 1.0660334995814733, 1.0447396891457694, 1.024125405720302, 1.0049408163343156, 0.9870444365910122, 0.9700980186462402, 0.9543224402836391, 0.9388101782117572, 0.9240894317626953, 0.9101965767996651, 0.8972264017377581, 0.8846661022731236, 0.8730333873203823, 0.8618968214307513, 0.8514587708881923, 0.8419450691768101, 0.8321315901620048, 0.822647043636867, 0.8137662581035069, 0.8050420965467181, 0.796440703528268, 0.7889702490397862, 0.7820207391466413, 0.7747538600649152, 0.7683701004300799, 0.7618214913776943, 0.7552591221673148, 0.7496556384222848, 0.7440562077930996, 0.7388831887926374, 0.7338786125183105, 0.7287412370954242, 0.7242496183940342, 0.7192799023219517, 0.7146206412996564, 0.7101183107921055, 0.7059910808290754, 0.7022669655936105, 0.6985465288162231, 0.6943144627979824, 0.6902206284659249, 0.6865784100123814, 0.6826334851128715, 0.679594738142831, 0.6769995519093105, 0.6740175145012992, 0.6704739843096051, 0.667536803654262, 0.6652941533497402, 0.6622120993477958, 0.6600882496152606, 0.6573761531284877, 0.6551325150898525, 0.6521714925765991, 0.6499885661261422], "val_accuracy": [0.0806666687130928, 0.13833333551883698, 0.2006666660308838, 0.2593333423137665, 0.30133333802223206, 0.33799999952316284, 0.37066665291786194, 0.3869999945163727, 0.398333340883255, 0.4073333442211151, 0.4163333475589752, 0.4259999990463257, 0.4390000104904175, 0.44433334469795227, 0.4506666660308838, 0.4573333263397217, 0.46700000762939453, 0.47600001096725464, 0.4803333282470703, 0.4893333315849304, 0.4970000088214874, 0.5059999823570251, 0.5103333592414856, 0.5226666927337646, 0.5306666493415833, 0.5370000004768372, 0.5393333435058594, 0.5450000166893005, 0.5506666898727417, 0.5559999942779541, 0.5583333373069763, 0.5646666884422302, 0.5703333616256714, 0.5753333568572998, 0.5863333344459534, 0.5883333086967468, 0.5926666855812073, 0.6003333330154419, 0.6036666631698608, 0.609000027179718, 0.6119999885559082, 0.6200000047683716, 0.6290000081062317, 0.637333333492279, 0.6420000195503235, 0.6456666588783264, 0.6520000100135803, 0.6606666445732117, 0.6660000085830688, 0.6706666946411133, 0.6713333129882812, 0.671999990940094, 0.6746666431427002, 0.6763333082199097, 0.6776666641235352, 0.6809999942779541, 0.6816666722297668, 0.6836666464805603, 0.6880000233650208, 0.6896666884422302, 0.690666675567627, 0.6913333535194397, 0.6923333406448364, 0.6956666707992554, 0.6970000267028809, 0.6993333101272583, 0.699999988079071, 0.7003333568572998, 0.703000009059906, 0.7036666870117188, 0.7049999833106995, 0.7056666612625122, 0.7080000042915344, 0.7076666951179504, 0.7089999914169312, 0.7099999785423279, 0.7129999995231628, 0.7139999866485596, 0.7173333168029785, 0.7179999947547913, 0.7193333506584167, 0.7200000286102295, 0.721666693687439, 0.7226666808128357, 0.7239999771118164, 0.7239999771118164, 0.7250000238418579, 0.7273333072662354, 0.7276666760444641, 0.7266666889190674, 0.7279999852180481, 0.7296666502952576, 0.7303333282470703, 0.7306666374206543, 0.7319999933242798, 0.7319999933242798, 0.7336666584014893, 0.7336666584014893, 0.734666645526886, 0.7350000143051147]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.7297142744064331, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.300451852484559, 2.293310294990857, 2.2870044106773304, 2.2807040664545375, 2.2743258955865695, 2.266963623077358, 2.2602027056475733, 2.252788719011729, 2.242604672963892, 2.235687343372944, 2.228036693184525, 2.2178552402654548, 2.209273135074771, 2.198891942810625, 2.1846854967951947, 2.1743309609941313, 2.158741615609313, 2.1413966311975132, 2.1250216893516183, 2.1092083971844593, 2.0877402378914143, 2.072754362082642, 2.04537986257309, 2.0289210163134594, 1.9985139210934904, 1.9697647893811419, 1.9436660344653267, 1.916698907360409, 1.881591609755307, 1.8537761755056386, 1.8244309764040019, 1.7880260137723751, 1.7560478202765408, 1.7205984835548487, 1.6916619509501842, 1.6554932280648669, 1.6198766432921994, 1.5895332091236631, 1.5505113150418128, 1.5314137502321872, 1.5015827442094114, 1.4658940994917458, 1.4468852159542698, 1.417058202442854, 1.4006038988743477, 1.3679719125715937, 1.3567586349789114, 1.3268891562717686, 1.3159176592089323, 1.3007843026458594, 1.2763580709731244, 1.2689536509024484, 1.2504451001214787, 1.2265175826608419, 1.213528477079628, 1.2076299937173534, 1.1901073773397572, 1.174829756138174, 1.1697113031503972, 1.1540108848288861, 1.1480439778694371, 1.1344034109038763, 1.1170402856598032, 1.1121277309852804, 1.1024566701437584, 1.0793413217309256, 1.0927911073367012, 1.0731308113361913, 1.0693990288787214, 1.0677513411299837, 1.0468334627819098, 1.0277924350444525, 1.042375381580827, 1.0262047066869295, 1.0335834080028874, 1.021628697204111, 1.0093954129383438, 0.9995646575312526, 0.9870417812528423, 0.9917034949325473, 0.9896334467893421, 0.9783776950102441, 0.9759587714181144, 0.9700724840116948, 0.9714535020991496, 0.9544558296539307, 0.9521573229693245, 0.9420045655731984, 0.9505407873980515, 0.9521388967181115, 0.9415768891387942, 0.9277112270941461, 0.9344566595741723, 0.9269443873039027, 0.9187012954772881, 0.9250743251198933, 0.912747279157917, 0.9161890001266136, 0.906925745108628, 0.9147020884477199], "accuracy": [0.0936468094587326, 0.11279883980751038, 0.12574297189712524, 0.14621582627296448, 0.17434948682785034, 0.18623696267604828, 0.20314356684684753, 0.21833311021327972, 0.2417117953300476, 0.2502971887588501, 0.2715625464916229, 0.280940443277359, 0.2975828945636749, 0.30563995242118835, 0.3152819871902466, 0.33324527740478516, 0.3463214933872223, 0.35503897070884705, 0.368511438369751, 0.3681151866912842, 0.38621053099632263, 0.38964468240737915, 0.4053625762462616, 0.40007925033569336, 0.4216087758541107, 0.43323206901550293, 0.4336283206939697, 0.42583543062210083, 0.4375908076763153, 0.4472328722476959, 0.4543653428554535, 0.4555540978908539, 0.4632149040699005, 0.47153612971305847, 0.469819039106369, 0.4888390004634857, 0.49253731966018677, 0.501518964767456, 0.5132743120193481, 0.5148593187332153, 0.5188218355178833, 0.5329546928405762, 0.5284639000892639, 0.5359926223754883, 0.5411438345909119, 0.5440496802330017, 0.5404834151268005, 0.5551446080207825, 0.555408775806427, 0.5608242154121399, 0.5630695819854736, 0.5661075115203857, 0.5732399821281433, 0.5815612077713013, 0.5809007883071899, 0.5848633050918579, 0.5910711884498596, 0.5900145173072815, 0.5926561951637268, 0.5971469879150391, 0.5974111557006836, 0.602562427520752, 0.6118082404136658, 0.6108836531639099, 0.6108836531639099, 0.6198652982711792, 0.6188086271286011, 0.6199973821640015, 0.6190727949142456, 0.6229031682014465, 0.6324131488800049, 0.6395456194877625, 0.6302998065948486, 0.637432336807251, 0.6289790272712708, 0.6380926966667175, 0.6453573107719421, 0.640338122844696, 0.6464139223098755, 0.6436402201652527, 0.6468101739883423, 0.6592260003089905, 0.6530181169509888, 0.6523576974868774, 0.6556597352027893, 0.6580372452735901, 0.6619997620582581, 0.6618676781654358, 0.655527651309967, 0.6616035103797913, 0.6613393425941467, 0.6688680648803711, 0.6634526252746582, 0.6660943031311035, 0.6720380187034607, 0.6700568199157715, 0.6754721999168396, 0.6737551093101501, 0.6742834448814392, 0.6760005354881287], "val_loss": [1.964836869921003, 1.958864348275321, 1.9529258183070592, 1.9469171932765417, 1.94078152520316, 1.9343433380126953, 1.9277462278093611, 1.920752934047154, 1.9133362088884627, 1.9054021154131209, 1.8969124385288783, 1.8878906113760812, 1.8781611578805106, 1.8676343645368303, 1.8560146604265486, 1.843644414629255, 1.8301001276288713, 1.8152643612452917, 1.7991198131016322, 1.7818663460867745, 1.7631105014256068, 1.743171283176967, 1.7215371131896973, 1.6989515508924211, 1.6744439261300224, 1.6480516365596227, 1.6201475347791399, 1.5909853322165353, 1.560319185256958, 1.5287887368883406, 1.4966600281851632, 1.4634167466844832, 1.43003477369036, 1.3964990207127161, 1.3628942625863212, 1.3296423639569963, 1.2962047713143485, 1.2638772215162004, 1.231492383139474, 1.201385225568499, 1.1722804137638636, 1.144000666482108, 1.117844922201974, 1.0928149223327637, 1.0696736063276018, 1.046865395137242, 1.026071310043335, 1.0059990542275565, 0.9873713765825544, 0.970043522971017, 0.9536916187831334, 0.9384822164263044, 0.9234766960144043, 0.9092327867235456, 0.8958532810211182, 0.8833786419459752, 0.8712972572871617, 0.8600749799183437, 0.8493507589612689, 0.8393257515771049, 0.8302408967699323, 0.8207954338618687, 0.8117139509746006, 0.803134628704616, 0.7947963816779, 0.7864816359111241, 0.7792712109429496, 0.7726966312953404, 0.7657778603690011, 0.7596672943660191, 0.7534102031162807, 0.7471085446221488, 0.7418489796774728, 0.7364898238863263, 0.7315478835787091, 0.726798381124224, 0.7218927485602242, 0.7176203387124198, 0.712860107421875, 0.7083926030567714, 0.7041157484054565, 0.700104832649231, 0.6965946129390171, 0.692997864314488, 0.6889339004244123, 0.6850231885910034, 0.6815354824066162, 0.6777293341500419, 0.674818617956979, 0.672371370451791, 0.6695211955479213, 0.6660853794642857, 0.6632294484547206, 0.6611547640391758, 0.6581043515886579, 0.6561018909726825, 0.6535009316035679, 0.6512209687914167, 0.6483681201934814, 0.6462370838437762], "val_accuracy": [0.0806666687130928, 0.13833333551883698, 0.19966666400432587, 0.25966668128967285, 0.3019999861717224, 0.3383333384990692, 0.37033334374427795, 0.3863333463668823, 0.3973333239555359, 0.4073333442211151, 0.4153333306312561, 0.4256666600704193, 0.43833333253860474, 0.4436666667461395, 0.45133334398269653, 0.4593333303928375, 0.46700000762939453, 0.47566667199134827, 0.4819999933242798, 0.492000013589859, 0.49900001287460327, 0.5076666474342346, 0.512333333492279, 0.5266666412353516, 0.5339999794960022, 0.5393333435058594, 0.5433333516120911, 0.5479999780654907, 0.5540000200271606, 0.5573333501815796, 0.562333345413208, 0.5680000185966492, 0.5759999752044678, 0.5826666951179504, 0.5893333554267883, 0.593666672706604, 0.596666693687439, 0.6039999723434448, 0.609666645526886, 0.6136666536331177, 0.6193333268165588, 0.6233333349227905, 0.6349999904632568, 0.6423333287239075, 0.6470000147819519, 0.6536666750907898, 0.6576666831970215, 0.6643333435058594, 0.6690000295639038, 0.6710000038146973, 0.6733333468437195, 0.6740000247955322, 0.675000011920929, 0.6776666641235352, 0.6790000200271606, 0.6830000281333923, 0.684333324432373, 0.6869999766349792, 0.6896666884422302, 0.6899999976158142, 0.6913333535194397, 0.6943333148956299, 0.6953333616256714, 0.6973333358764648, 0.6983333230018616, 0.6993333101272583, 0.7020000219345093, 0.7036666870117188, 0.7036666870117188, 0.7039999961853027, 0.7059999704360962, 0.7070000171661377, 0.7080000042915344, 0.7099999785423279, 0.7120000123977661, 0.7139999866485596, 0.7149999737739563, 0.7149999737739563, 0.718999981880188, 0.718999981880188, 0.7213333249092102, 0.722000002861023, 0.7229999899864197, 0.7246666550636292, 0.7246666550636292, 0.7256666421890259, 0.7253333330154419, 0.7276666760444641, 0.7276666760444641, 0.7283333539962769, 0.7289999723434448, 0.7296666502952576, 0.7303333282470703, 0.7323333621025085, 0.7326666712760925, 0.734000027179718, 0.734666645526886, 0.7356666922569275, 0.7356666922569275, 0.7356666922569275]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 2, 1, 8, 5, 2, 8, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7005714178085327, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 10, 5, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.square(grad)), tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2953211041867316, 2.2449353975374873, 2.13102097685122, 1.8494623420796201, 1.4793593900677016, 1.4117180317179747, 1.184639861129924, 0.9561831578051394, 0.9216725084256061, 0.8772302702071251, 0.8540237779236898, 0.8542322837492384, 0.8621727913645643, 0.8034382902667381, 0.8080994526959838, 0.8043070743191338, 0.7564509143336197, 0.7426474074945159, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10910051316022873, 0.2355038970708847, 0.3537181317806244, 0.4233258366584778, 0.4885748326778412, 0.5260863900184631, 0.6078457236289978, 0.6390172839164734, 0.6561880707740784, 0.6767930388450623, 0.6682076454162598, 0.6796988248825073, 0.6837934255599976, 0.6923788189888, 0.6811517477035522, 0.6885483860969543, 0.7197200059890747, 0.7275128960609436, 0.43349623680114746, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9438148907252721, 1.8721692902701241, 1.6945393085479736, 1.2628332546779089, 0.8629888466426304, 0.7613383531570435, 0.6820401634488787, 0.688177057674953, 0.6907072237559727, 0.624107939856393, 0.6015067270823887, 0.6138344832829067, 0.6047228574752808, 0.5907550198691232, 0.609173229762486, 0.5876004184995379, 0.561405863080706, 0.5399890967777797, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.28166666626930237, 0.41600000858306885, 0.47600001096725464, 0.5699999928474426, 0.6706666946411133, 0.6986666917800903, 0.721666693687439, 0.6853333115577698, 0.7226666808128357, 0.7303333282470703, 0.731333315372467, 0.7326666712760925, 0.7406666874885559, 0.7429999709129333, 0.7366666793823242, 0.7456666827201843, 0.7603333592414856, 0.765999972820282, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 9, 4, 5, 6, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 1, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [0, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.6997143030166626, "mapping_values": [1, 4, 4, 3, 1, 1, 15, 15, 10, 5, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(alpha, tf.math.pow(tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), tf.math.add(tf.math.sqrt(grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2953211041867316, 2.244935464991271, 2.1310222993799566, 1.8494672091125954, 1.4793697806901116, 1.4117645122875486, 1.1846998016737582, 0.9561491364091851, 0.921841432775536, 0.8769398432570898, 0.85376325408308, 0.8543826986092933, 0.8621763697610224, 0.8037321615323036, 0.808489524850504, 0.8049539093958026, 0.7564650909098589, 0.7418302737758018, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10910051316022873, 0.2355038970708847, 0.3537181317806244, 0.4231937527656555, 0.48870691657066345, 0.5260863900184631, 0.6079778075218201, 0.6386210322380066, 0.6567164063453674, 0.6758684515953064, 0.669792652130127, 0.6790384650230408, 0.6837934255599976, 0.6914542317390442, 0.6816800832748413, 0.6888125538825989, 0.7191916704177856, 0.7268524765968323, 0.43204331398010254, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9438148907252721, 1.872171265738351, 1.6945412499564034, 1.2628358091626848, 0.8629993711199079, 0.7613753080368042, 0.6820954254695347, 0.6882598400115967, 0.6913332428250994, 0.6243493556976318, 0.6014182226998466, 0.6132645947592599, 0.6042684997831073, 0.5905216251100812, 0.609835318156651, 0.5872057676315308, 0.5613292625972203, 0.5390398161751884, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.28166666626930237, 0.41600000858306885, 0.47600001096725464, 0.5699999928474426, 0.6706666946411133, 0.6986666917800903, 0.721666693687439, 0.6856666803359985, 0.7226666808128357, 0.7310000061988831, 0.7296666502952576, 0.7323333621025085, 0.7396666407585144, 0.7426666617393494, 0.737333357334137, 0.746666669845581, 0.7606666684150696, 0.7666666507720947, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [1, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10942856967449188, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.788162136657316, 2.4001359305030965, 2.3058424286318964, 2.3028895848336837, 2.300413656291425, 2.190099475406117, 2.309084218711334, 2.2561294545964827, 2.3107726909008637, 2.3037543972611445], "accuracy": [0.21516312658786774, 0.19759608805179596, 0.09694888442754745, 0.10117553919553757, 0.12653546035289764, 0.2262580841779709, 0.10579843819141388, 0.19244486093521118, 0.1022322028875351, 0.09642054885625839], "val_loss": [1.9257861546107702, 1.9769393375941686, 1.973613943372454, 1.9728308405194963, 1.9652486528669084, 1.9737509318760462, 1.9695071492876326, 1.9818763051714217, 1.974040916987828, 1.9738846506391252], "val_accuracy": [0.10133333504199982, 0.10199999809265137, 0.09666666388511658, 0.09666666388511658, 0.20466665923595428, 0.09966666996479034, 0.17100000381469727, 0.10300000011920929, 0.09566666930913925, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [1, 0], [53, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 7, 3, 4, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 3, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), grad), grad), tf.math.add(beta, alpha)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [7.767893693054633e+29, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.068022720515728, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 4, 5, 2, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 6, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(grad), grad), tf.math.add(beta, grad)), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07806102186441422, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [1, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09100515395402908, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 5, 3, 4], [1, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [45, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [1, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 9, 8, 1, 3, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), tf.math.add(grad, grad)), alpha), tf.math.add(beta, tf.math.sqrt(grad)))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08506141602993011, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10434553027153015, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 7, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [34, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07806102186441422, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [41, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 2, 1, 4, 5, 5, 4, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 2, 0, 2, 2, 3, 3, 2, 1, 1, 0, 3, 1], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [30.121797086760793, 313.5779911596006, 1218.8428423166936, 3183.1993159418957, 6709.929516849863, 11872.657769727826], "accuracy": [0.09589222073554993, 0.09668471664190292, 0.09760929644107819, 0.09457138925790787, 0.09998679161071777, 0.09576013684272766], "val_loss": [77.9452645438058, 435.8876953125, 1328.4912806919642, 3016.068777901786, 5758.662248883928, 9814.139229910714], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [74, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302035152132737, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [2, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [2, 0], [53, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [98, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [56, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.0965714305639267, "mapping_values": [1, 4, 4, 3, 1, 1, 14, 14, 7, 7, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), grad), grad), tf.math.add(beta, alpha)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.668906034747481, 2.6435733922263807, 2.474163358237655, 2.3519532706963937, 2.3506269328677027, 2.517067941456045, 2.3334064237697643], "accuracy": [0.20723815262317657, 0.16563200950622559, 0.10434553027153015, 0.09391097724437714, 0.09813763201236725, 0.09932637959718704, 0.1026284471154213], "val_loss": [1.9426223891122, 2.325498172215053, 2.0441834586007253, 2.006542001451765, 2.272388458251953, 1.9952975000653947, 2.029871259416853], "val_accuracy": [0.13699999451637268, 0.1536666601896286, 0.10400000214576721, 0.09566666930913925, 0.09200000017881393, 0.10366666316986084, 0.10066666454076767]}}]