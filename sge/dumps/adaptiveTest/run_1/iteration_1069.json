[{"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 1, 2, 2, 4, 8, 6, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 0, 3, 3, 3, 2, 1, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [60, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [0, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.845714271068573, "mapping_values": [1, 4, 4, 2, 2, 1, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), beta))))), tf.math.add(beta, alpha))))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0920045244191474, 1.6089880043536664, 1.1989576907253001, 0.917155629112232, 0.8099582322820649, 0.8411918983892789, 0.7281124656620185, 0.7245620100993553, 0.6816005230721481, 0.6826395112777572, 0.644221722835626, 0.6129807637682869, 0.5993824106685521, 0.5724817363971165, 0.5789014575440792, 0.5484996022108666, 0.549274594485248, 0.5235347492961584, 0.5131413448897681, 0.49821576388709504, 0.4904517315051591, 0.47834601668067, 0.47828427627889347, 0.4735416877641339, 0.45552127412627985, 0.4527088665352868, 0.4532555451269997, 0.4252021855067867, 0.43926147583799746, 0.4176577955401726, 0.41474065918334174, 0.4085077695866397, 0.40423263376178903, 0.38031080680091256, 0.3947549833794469, 0.3801393416917965, 0.39089329078008217, 0.40079622934869474, 0.3638485573215444], "accuracy": [0.3267732262611389, 0.4928014874458313, 0.5820895433425903, 0.6639809608459473, 0.6913221478462219, 0.6913221478462219, 0.7230220437049866, 0.7141724824905396, 0.739400327205658, 0.7367587089538574, 0.7515519857406616, 0.7667415142059326, 0.7730814814567566, 0.7823272943496704, 0.7853652238845825, 0.791441023349762, 0.7910447716712952, 0.8021397590637207, 0.8072909712791443, 0.8156121969223022, 0.81112140417099, 0.8182538747787476, 0.8204993009567261, 0.8238013386726379, 0.8294808864593506, 0.8281601071357727, 0.8273676037788391, 0.8363492488861084, 0.8345000743865967, 0.8428213000297546, 0.8430854678153992, 0.8451988101005554, 0.8490291833877563, 0.8580108284950256, 0.8512746095657349, 0.8562937378883362, 0.8533879518508911, 0.8496896028518677, 0.8669924736022949], "val_loss": [1.7869987487792969, 1.0012675353458949, 0.7042923484529767, 0.6068780592509678, 0.8492616755621774, 0.5924325329916817, 0.54934218951634, 0.5459046193531581, 0.5417906216212681, 0.5466201986585345, 0.49906941822596956, 0.47384330204554964, 0.4690241983958653, 0.46873511586870464, 0.4734645060130528, 0.448988139629364, 0.43985170125961304, 0.4259028434753418, 0.4255216291972569, 0.402108975819179, 0.4187465395246233, 0.39478297744478497, 0.41033497878483366, 0.39006783281053814, 0.3820665308407375, 0.4178243364606585, 0.37112618344170706, 0.37013115201677593, 0.3817058631352016, 0.3805310215268816, 0.36191786187035696, 0.3538515142032078, 0.3537044014249529, 0.3508690595626831, 0.3701133557728359, 0.35829160043171476, 0.39216311488832745, 0.35259142092296053, 0.34678786993026733], "val_accuracy": [0.49266666173934937, 0.5649999976158142, 0.7149999737739563, 0.7333333492279053, 0.6449999809265137, 0.703000009059906, 0.746999979019165, 0.7536666393280029, 0.7456666827201843, 0.746999979019165, 0.7730000019073486, 0.7789999842643738, 0.7850000262260437, 0.7919999957084656, 0.7990000247955322, 0.8016666769981384, 0.7940000295639038, 0.815666675567627, 0.8159999847412109, 0.828000009059906, 0.8133333325386047, 0.8303333520889282, 0.812333345413208, 0.8346666693687439, 0.8383333086967468, 0.8086666464805603, 0.8416666388511658, 0.840666651725769, 0.8489999771118164, 0.8376666903495789, 0.843999981880188, 0.8473333120346069, 0.847000002861023, 0.856333315372467, 0.8416666388511658, 0.8513333201408386, 0.8343333601951599, 0.8476666808128357, 0.8536666631698608]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [9, 1, 2, 2, 1, 8, 0, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 1, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8411428332328796, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.092063978662769, 1.6073516768676068, 1.192462761514553, 0.9443437805532889, 0.8337878271053654, 0.7681118564094929, 0.755759914915528, 0.7046401591159884, 0.6910260370567789, 0.67022588334583, 0.646570627329734, 0.617690480333262, 0.6078427535526159, 0.5805946630478032, 0.5802361739624949, 0.5414908904724464, 0.5554054104940153, 0.5171628886084153, 0.5150382246685822, 0.49742359422878457, 0.49594554231859955, 0.480906476182173, 0.47917615727678564, 0.4751865017203103, 0.4522157250583101, 0.4577459032194505, 0.4547747609921104, 0.42861663694898794, 0.4387289354231505, 0.417960323717112, 0.4101630085849208, 0.40648002771574826, 0.4069896360445709, 0.3783229329661293, 0.3939328921304135, 0.39044132797221437, 0.38336604036092603, 0.3919997276560411, 0.3615691715526921, 0.37352711690525575, 0.36062350940820864, 0.34892933499921724, 0.3349172371710139, 0.34440108083888227, 0.3387660388704997, 0.3222042635533914, 0.3493933736679655, 0.32083552381806857, 0.3198798738765427, 0.3215979280417952, 0.318144406829575, 0.31196496547598956, 0.2930160196835827, 0.29312657634453954, 0.2838747415284691, 0.294781096693925, 0.28518156333921324, 0.2895329247580984, 0.2715419787914053], "accuracy": [0.3269053101539612, 0.490159809589386, 0.5823537111282349, 0.6576409935951233, 0.6818121671676636, 0.7100779414176941, 0.7100779414176941, 0.7289658188819885, 0.735041618347168, 0.7461365461349487, 0.7523444890975952, 0.7621186375617981, 0.7677981853485107, 0.7744023203849792, 0.7800818681716919, 0.7943468689918518, 0.7832518815994263, 0.8050455451011658, 0.8031964302062988, 0.8153480291366577, 0.8137630224227905, 0.8157442808151245, 0.8198388814926147, 0.8238013386726379, 0.8301413059234619, 0.8247259259223938, 0.8252542614936829, 0.8338396549224854, 0.8325188159942627, 0.8455950617790222, 0.8436138033866882, 0.8450667262077332, 0.8481045961380005, 0.859199583530426, 0.8496896028518677, 0.8527275323867798, 0.8537842035293579, 0.8553691506385803, 0.868049144744873, 0.8541803956031799, 0.8626337051391602, 0.8697662353515625, 0.8709549307823181, 0.8713511824607849, 0.868049144744873, 0.8784837126731873, 0.8701624870300293, 0.8779553771018982, 0.8787478804588318, 0.8772949576377869, 0.8761062026023865, 0.8824461698532104, 0.8869370222091675, 0.8865407705307007, 0.8916919827461243, 0.8891823887825012, 0.8912957310676575, 0.8911636471748352, 0.8968431949615479], "val_loss": [1.7868309020996094, 1.0423555714743478, 0.8588003941944667, 0.6498004538672311, 0.6504098347255162, 0.5878806795392718, 0.5361218111855643, 0.5446890592575073, 0.5274591105324882, 0.5353706393923078, 0.4917070525033133, 0.4709031581878662, 0.4859416825430734, 0.4783813101904733, 0.455521753856114, 0.44677054030554636, 0.4337536692619324, 0.427499566759382, 0.4185458081109183, 0.4082360437938145, 0.43643277883529663, 0.3969649246760777, 0.3976507101740156, 0.38510085003716604, 0.3827829360961914, 0.3994752253804888, 0.37270884002958027, 0.3706896560532706, 0.3762678248541696, 0.38189115694590975, 0.3612767202513559, 0.3564922298703875, 0.352233282157353, 0.35068483863558086, 0.395449161529541, 0.3493954198701041, 0.3774239591189793, 0.3502033863748823, 0.3418000851358686, 0.3459220273154123, 0.343452479158129, 0.34303570645196096, 0.34993666410446167, 0.3311248762266977, 0.3306329335485186, 0.34069217102868216, 0.3435686571257455, 0.33871582576206755, 0.35154359681265696, 0.3309791769300188, 0.3336959651538304, 0.33080296005521503, 0.33695719071796965, 0.3310066802161081, 0.3392772674560547, 0.36286587374550955, 0.34570127725601196, 0.34047951868602205, 0.33327058383396696], "val_accuracy": [0.49566665291786194, 0.54666668176651, 0.6486666798591614, 0.7076666951179504, 0.7149999737739563, 0.7323333621025085, 0.7480000257492065, 0.7490000128746033, 0.7586666941642761, 0.7613333463668823, 0.7793333530426025, 0.781333327293396, 0.7696666717529297, 0.7860000133514404, 0.8053333163261414, 0.8090000152587891, 0.8023333549499512, 0.815666675567627, 0.8180000185966492, 0.8230000138282776, 0.8046666383743286, 0.828000009059906, 0.8263333439826965, 0.8343333601951599, 0.8389999866485596, 0.8180000185966492, 0.843666672706604, 0.8396666646003723, 0.843999981880188, 0.8326666951179504, 0.8473333120346069, 0.8483333587646484, 0.8476666808128357, 0.8533333539962769, 0.8276666402816772, 0.8526666760444641, 0.840666651725769, 0.8503333330154419, 0.8553333282470703, 0.8579999804496765, 0.8546666502952576, 0.8526666760444641, 0.8483333587646484, 0.859000027179718, 0.8586666584014893, 0.8583333492279053, 0.8560000061988831, 0.8603333234786987, 0.8483333587646484, 0.8613333106040955, 0.8526666760444641, 0.8616666793823242, 0.8629999756813049, 0.8683333396911621, 0.8606666922569275, 0.8489999771118164, 0.862333357334137, 0.8606666922569275, 0.8640000224113464]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [9, 1, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [0, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8394285440444946, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0919365030726293, 1.6104015817164807, 1.1978224688407026, 0.9056886761904298, 0.8548581698519947, 0.7832737918763569, 0.743014441119398, 0.7371054368799451, 0.6704448133632255, 0.6696626499990006, 0.6431170170333297, 0.613450725277606, 0.597787992238778, 0.5791687124582597, 0.5784407734020652, 0.543479844587291, 0.5566959064854858, 0.5212874184344753, 0.5158963592029471, 0.49897474283555465, 0.49163915422992177, 0.486078818405561, 0.4860449960210997, 0.4770455348209824, 0.4638891977885018, 0.4546975227056351, 0.4555868815240481, 0.4272440060168178, 0.4405319833161887, 0.4149042140924227, 0.4113963291771329, 0.41258448131678677, 0.40750144664338395, 0.38274946370696067, 0.39381095762691165, 0.3871228408898502, 0.37473375638871853, 0.39884131424509855, 0.362546664463011, 0.3668126414409797, 0.36307562660342746, 0.3538089377524878, 0.345580101713859, 0.34667449863264665, 0.3416116922885168], "accuracy": [0.3267732262611389, 0.4917448163032532, 0.5864483118057251, 0.6645092964172363, 0.6779817938804626, 0.7062475085258484, 0.7125874757766724, 0.7162858247756958, 0.7456082701683044, 0.7412495017051697, 0.7532690763473511, 0.7668735980987549, 0.7736098170280457, 0.7773081660270691, 0.7790252566337585, 0.7938185334205627, 0.789459764957428, 0.8058380484580994, 0.8083476424217224, 0.8138951063156128, 0.8141592741012573, 0.8146876096725464, 0.8175934553146362, 0.8210275769233704, 0.8244617581367493, 0.8253863453865051, 0.8271034359931946, 0.8378021121025085, 0.8348963260650635, 0.8481045961380005, 0.8462554216384888, 0.8429533839225769, 0.8469158411026001, 0.8562937378883362, 0.845859169960022, 0.8543124794960022, 0.8557654023170471, 0.8502179384231567, 0.8684453964233398, 0.8551049828529358, 0.8647470474243164, 0.8671245574951172, 0.8646149635314941, 0.8658037185668945, 0.8664641380310059], "val_loss": [1.7867588996887207, 1.0214439800807409, 0.6845397438321795, 0.604374715260097, 0.698970011302403, 0.5949609960828509, 0.5633316040039062, 0.5449502638408116, 0.5312429325921195, 0.5475176743098668, 0.49702017647879465, 0.4723492179598127, 0.48116534096854074, 0.48160174914768766, 0.46313583850860596, 0.4368571639060974, 0.44747358560562134, 0.42645078897476196, 0.424102246761322, 0.4046454429626465, 0.43871561118534635, 0.39540804283959524, 0.4102027586528233, 0.38708095039640156, 0.38888049125671387, 0.4199504681995937, 0.3740309306553432, 0.37594681126730783, 0.38150629826954435, 0.3765432579176767, 0.3620122330529349, 0.359616790499006, 0.35924657753535677, 0.3546396919659206, 0.37713976417269024, 0.3622663531984602, 0.3774032848221915, 0.3454832264355251, 0.3437900883810861, 0.3382146954536438, 0.35341526780809673, 0.34950453894478933, 0.3543515290532793, 0.3369578037943159, 0.34342834779194426], "val_accuracy": [0.49900001287460327, 0.5506666898727417, 0.7089999914169312, 0.7326666712760925, 0.6866666674613953, 0.7239999771118164, 0.7446666955947876, 0.746999979019165, 0.753333330154419, 0.7463333606719971, 0.7753333449363708, 0.7836666703224182, 0.7706666588783264, 0.7820000052452087, 0.8050000071525574, 0.8183333277702332, 0.7919999957084656, 0.8136666417121887, 0.8136666417121887, 0.8303333520889282, 0.8033333420753479, 0.8273333311080933, 0.8199999928474426, 0.8353333473205566, 0.8356666564941406, 0.8053333163261414, 0.8416666388511658, 0.8356666564941406, 0.8426666855812073, 0.8396666646003723, 0.8450000286102295, 0.843666672706604, 0.843666672706604, 0.8556666374206543, 0.8389999866485596, 0.846666693687439, 0.843666672706604, 0.8573333621025085, 0.8560000061988831, 0.8579999804496765, 0.8423333168029785, 0.8473333120346069, 0.8493333458900452, 0.8550000190734863, 0.8543333411216736]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 1, 2, 2, 4, 8, 4, 2, 4, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 3, 3, 3, 3, 2, 1, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8371428847312927, "mapping_values": [1, 4, 4, 2, 2, 1, 24, 24, 14, 10, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, grad), grad), tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), grad))))))), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, beta)))))), tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0918957950920554, 1.6101139692692725, 1.199975291397184, 0.9113789991601237, 0.8117556041257886, 0.7702856693033528, 0.7359754353576663, 0.7445336792053658, 0.686410152578335, 0.6922720787610518, 0.6491554270110598, 0.6230088727128756, 0.5982399007364303, 0.5753481148838949, 0.5800351814004361, 0.5440261396891279, 0.5606063348883887, 0.5248044066976453, 0.5171362826884336, 0.4988397481324666, 0.49436239840930496, 0.48586171247451815, 0.4815991725809523, 0.4726369313166488, 0.4656755787120787, 0.4596105911090563, 0.4591271556631418, 0.4307455643922929, 0.4419368851013219, 0.4179919283616151, 0.4122367304085646, 0.41321183199250167, 0.4104343263574831, 0.38494247558677136, 0.39575798336178825, 0.3986399178578318, 0.38508689856217476, 0.3996444112707233, 0.3675091400468953, 0.3773116615501613, 0.3639517692432522, 0.3505403065150834, 0.3441021636279976, 0.3459314537511258, 0.3476109799219554, 0.3315878641438475, 0.3407345936558486, 0.32139849804096754, 0.32376904600032835, 0.32512486283695063, 0.3394830782872307, 0.3187043709273761, 0.3005689183096797], "accuracy": [0.3267732262611389, 0.49187690019607544, 0.5900145173072815, 0.6556597352027893, 0.6873596906661987, 0.707040011882782, 0.7176066637039185, 0.7083608508110046, 0.7359662055969238, 0.7321357727050781, 0.7475894689559937, 0.7621186375617981, 0.7684586048126221, 0.7807422876358032, 0.7816668748855591, 0.7952714562416077, 0.7845727205276489, 0.8047813773155212, 0.8092722296714783, 0.8140271902084351, 0.8138951063156128, 0.8127063512802124, 0.8150838613510132, 0.8230088353157043, 0.8189142942428589, 0.8235371708869934, 0.8259146809577942, 0.8313300609588623, 0.8342359066009521, 0.8426892161369324, 0.8451988101005554, 0.8442742228507996, 0.8450667262077332, 0.8564258217811584, 0.8473120927810669, 0.8488970994949341, 0.8555012345314026, 0.8510104417800903, 0.863029956817627, 0.8508783578872681, 0.8617091774940491, 0.8651432991027832, 0.8667283058166504, 0.8668603897094727, 0.8692378997802734, 0.8725399374961853, 0.8725399374961853, 0.8771628737449646, 0.8749174475669861, 0.8767666220664978, 0.8704266548156738, 0.8778232932090759, 0.8831065893173218], "val_loss": [1.78700624193464, 1.0139505181993758, 0.6856147050857544, 0.6055107286998204, 0.6478532041822161, 0.5930337394986834, 0.5756561585835048, 0.5489179406847272, 0.56959787436894, 0.5478981392724174, 0.4944465330668858, 0.4766163485390799, 0.49105685097830637, 0.47016566140311106, 0.4567625863211496, 0.4432553393500192, 0.451139109475272, 0.43317569153649466, 0.4226310593741281, 0.4039225493158613, 0.41909514154706684, 0.40638342073985506, 0.40426422016961233, 0.3901185393333435, 0.3871114935193743, 0.41955102341515677, 0.3713301845959255, 0.37487287180764334, 0.38074868065970285, 0.37402262006487164, 0.3641626409121922, 0.3573504516056606, 0.3663787160600935, 0.35416500908987864, 0.40605184010096956, 0.35546882663454327, 0.3839292185647147, 0.35658559628895353, 0.34440140213285175, 0.3470236914498465, 0.3485365850584848, 0.34902110270091463, 0.35252336093357634, 0.33693585225514006, 0.34772075925554546, 0.34218604224068777, 0.34110852650233675, 0.3444002526147025, 0.3618989246232169, 0.3403756873948233, 0.3439889805657523, 0.3292579310280936, 0.34302155460630146], "val_accuracy": [0.4973333477973938, 0.5603333115577698, 0.7003333568572998, 0.721666693687439, 0.6809999942779541, 0.7276666760444641, 0.7386666536331177, 0.7513333559036255, 0.734333336353302, 0.7480000257492065, 0.7773333191871643, 0.7820000052452087, 0.7649999856948853, 0.7893333435058594, 0.8029999732971191, 0.8153333067893982, 0.7870000004768372, 0.8073333501815796, 0.8176666498184204, 0.8289999961853027, 0.8103333115577698, 0.8243333101272583, 0.8223333358764648, 0.831333339214325, 0.8343333601951599, 0.8063333630561829, 0.8423333168029785, 0.8393333554267883, 0.8460000157356262, 0.8389999866485596, 0.840666651725769, 0.8443333506584167, 0.8423333168029785, 0.8539999723434448, 0.8209999799728394, 0.8493333458900452, 0.8389999866485596, 0.8516666889190674, 0.8566666841506958, 0.8500000238418579, 0.8493333458900452, 0.8556666374206543, 0.847000002861023, 0.8603333234786987, 0.8513333201408386, 0.8510000109672546, 0.859000027179718, 0.862333357334137, 0.8403333425521851, 0.8516666889190674, 0.8443333506584167, 0.859666645526886, 0.859666645526886]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 1, 2, 2, 9, 2, 4, 2, 4, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 0, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8305714130401611, "mapping_values": [1, 4, 4, 2, 2, 1, 23, 23, 14, 9, 2, 5, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))))))))))))), beta)), tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, grad)), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1033305533888664, 1.6440638756597707, 1.1921908254431948, 0.948638301625653, 0.8243872824598218, 0.8284912822646803, 0.7246574714293711, 0.7078316722799837, 0.6798763978734795, 0.6997115845221098, 0.6417614025068856, 0.6149006703620763, 0.6112784252993703, 0.5804500232645392, 0.5850781984081075, 0.5577443528169056, 0.5449307496757744, 0.52238161607016, 0.5144824025306908, 0.5105769123698521, 0.49687798107304926, 0.48425483140317505, 0.49040010212875706, 0.4791999392741864, 0.46846249562212977, 0.45860821261397755, 0.46646673228872637, 0.42886993447629895, 0.439855668830078, 0.424460014135232, 0.41618417239050587, 0.41720284445804456, 0.40780806415478754, 0.391210082621701, 0.40212370934519137, 0.3912201399233804, 0.4000776708283523, 0.40120478829986717, 0.37326455496919786, 0.3799787577880829, 0.3680176994134847, 0.3529256356075817, 0.3460206847739746, 0.3563965125098724, 0.343173014091825, 0.33609305217265767, 0.3505627625748434, 0.3217867411414252, 0.3292153668032031, 0.3360147391603513, 0.3286521911046382, 0.31739827182393393, 0.2988498649734469, 0.3003274705573442, 0.29345346445011317, 0.30833484566427416, 0.29354682640313884, 0.29083367116210984, 0.2815628290617266], "accuracy": [0.32505613565444946, 0.48144233226776123, 0.5840708017349243, 0.6557918190956116, 0.687491774559021, 0.6955488324165344, 0.7195879220962524, 0.7297582626342773, 0.7425703406333923, 0.7339849472045898, 0.7512878179550171, 0.7658169269561768, 0.7643640041351318, 0.7770439982414246, 0.7798177003860474, 0.7860256433486938, 0.7931581139564514, 0.8004226684570312, 0.8063663840293884, 0.8067626357078552, 0.8082155585289001, 0.8129705190658569, 0.8138951063156128, 0.8206313848495483, 0.8269713521003723, 0.8234050869941711, 0.8202351331710815, 0.8366134166717529, 0.8321225643157959, 0.8450667262077332, 0.8417646288871765, 0.8385946154594421, 0.8479725122451782, 0.8569541573524475, 0.8453308939933777, 0.8504821062088013, 0.8520671129226685, 0.8498216867446899, 0.8609166741371155, 0.8511425256729126, 0.8613129258155823, 0.8658037185668945, 0.8636903762817383, 0.8660678863525391, 0.8659358024597168, 0.874389111995697, 0.8679170608520508, 0.8809932470321655, 0.8771628737449646, 0.8709549307823181, 0.8753136992454529, 0.8802007436752319, 0.8869370222091675, 0.887201189994812, 0.8842953443527222, 0.8874653577804565, 0.886672854423523, 0.8907673954963684, 0.8901069760322571], "val_loss": [1.8087432043892997, 1.0107168129512243, 0.6992924894605365, 0.6479498829160418, 0.7875675133296421, 0.5830224922725132, 0.550668546131679, 0.5427636589322772, 0.535388571875436, 0.519364561353411, 0.4870339632034302, 0.48099063123975483, 0.4793416772569929, 0.47710841042654856, 0.49769745554242817, 0.4647062676293509, 0.440688567502158, 0.4209538442747934, 0.430633544921875, 0.4116055028779166, 0.4046070660863604, 0.3967537539345877, 0.40582798208509174, 0.3895788703645979, 0.39102170297077726, 0.41227012021201, 0.37894736017499653, 0.37989944219589233, 0.38251493658338276, 0.37437571798052105, 0.3566046953201294, 0.35586099113736835, 0.36154513699667795, 0.353603720664978, 0.3796302931649344, 0.3749238593237741, 0.3822915724345616, 0.3524852139609201, 0.3501013517379761, 0.3584622400147574, 0.3450115748814174, 0.348039448261261, 0.3633332507950919, 0.33670263631003244, 0.3367581452642168, 0.35084785733904156, 0.3357798286846706, 0.34685343503952026, 0.3617244447980608, 0.33260907445635113, 0.3312137382371085, 0.32826865570885794, 0.3395379866872515, 0.3292320030076163, 0.3367854356765747, 0.3782229423522949, 0.3484405960355486, 0.33271818501608713, 0.3402418409075056], "val_accuracy": [0.45366665720939636, 0.5740000009536743, 0.6956666707992554, 0.7183333039283752, 0.653333306312561, 0.7229999899864197, 0.7450000047683716, 0.7436666488647461, 0.7400000095367432, 0.7703333497047424, 0.7829999923706055, 0.7736666798591614, 0.7760000228881836, 0.7850000262260437, 0.7853333353996277, 0.7879999876022339, 0.7963333129882812, 0.8146666884422302, 0.8090000152587891, 0.8193333148956299, 0.8196666836738586, 0.8256666660308838, 0.8199999928474426, 0.8326666951179504, 0.8309999704360962, 0.8183333277702332, 0.8339999914169312, 0.8373333215713501, 0.8389999866485596, 0.8396666646003723, 0.8446666598320007, 0.8473333120346069, 0.8453333377838135, 0.8500000238418579, 0.8383333086967468, 0.8429999947547913, 0.8393333554267883, 0.8523333072662354, 0.8519999980926514, 0.8383333086967468, 0.8546666502952576, 0.8483333587646484, 0.8410000205039978, 0.856333315372467, 0.8560000061988831, 0.8503333330154419, 0.856333315372467, 0.859666645526886, 0.8453333377838135, 0.8536666631698608, 0.859333336353302, 0.8633333444595337, 0.8586666584014893, 0.8659999966621399, 0.8556666374206543, 0.8426666855812073, 0.859333336353302, 0.862666666507721, 0.8613333106040955]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 5, 2, 2, 4, 8, 4, 2, 4, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 1, 3, 0, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8248571157455444, "mapping_values": [1, 4, 4, 2, 2, 1, 22, 22, 13, 9, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, beta))))), tf.math.add(beta, beta)))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, beta)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.092003167376243, 1.6104695379552967, 1.1873412733426925, 0.890220472920037, 0.8159729848054769, 0.8062314552527692, 0.7287885124783207, 0.747611804078394, 0.6795187336484344, 0.67764109559677, 0.6450805919612199, 0.6212479680158585, 0.6051239451286957, 0.5856291739034647, 0.5876268505845418, 0.5452041809018168, 0.5612490077485435, 0.5235892845623529, 0.5150643626633667, 0.49692805898093495, 0.49221862334349153, 0.4803584795177038, 0.488432495636695, 0.47854461416497823, 0.455420776447836, 0.4499417438467401, 0.45635470027196773, 0.42241850637835343, 0.4402604621588168, 0.4183056081967851, 0.4085567040867605, 0.4100569709495798, 0.4076618285203386, 0.3819745911063614, 0.39510685455025996, 0.3910895682730616, 0.3775018751857429, 0.3950054051617527, 0.363556552328501], "accuracy": [0.3267732262611389, 0.49253731966018677, 0.5930524468421936, 0.6680755615234375, 0.6903975605964661, 0.7036058902740479, 0.7193237543106079, 0.7103421092033386, 0.7368907928466797, 0.7395324110984802, 0.7536653280258179, 0.7626469135284424, 0.769911527633667, 0.7716285586357117, 0.7758552432060242, 0.7943468689918518, 0.7864218950271606, 0.7977809906005859, 0.8057059645652771, 0.8138951063156128, 0.8132346868515015, 0.8166688680648804, 0.8169330358505249, 0.8247259259223938, 0.8271034359931946, 0.826310932636261, 0.8277638554573059, 0.8359529972076416, 0.8370096683502197, 0.8451988101005554, 0.8459912538528442, 0.8453308939933777, 0.8438779711723328, 0.8548408150672913, 0.8454629778862, 0.852331280708313, 0.8551049828529358, 0.8525954484939575, 0.8644828796386719], "val_loss": [1.7871619633265905, 0.9999239444732666, 0.6824529681886945, 0.6039719411305019, 0.7596843242645264, 0.5880835567201886, 0.5704259191240583, 0.5479018517902919, 0.5357761893953595, 0.5312295130320958, 0.5011822325842721, 0.4748870474951608, 0.46614973885672434, 0.4901993955884661, 0.48071697780064176, 0.44581424338477, 0.4471403019768851, 0.4325348905154637, 0.4218127301761082, 0.4059367435319083, 0.42710754701069426, 0.3990943006106785, 0.4197549309049334, 0.39370289870670866, 0.3888724020549229, 0.4052817480904715, 0.3746106113706316, 0.3692096642085484, 0.37930103710719515, 0.3712026562009539, 0.3684419308389936, 0.35782957077026367, 0.36410983971187044, 0.35836115905216764, 0.39528560638427734, 0.3548461880002703, 0.372579710824149, 0.358017589364733, 0.3493236558777945], "val_accuracy": [0.49433332681655884, 0.5699999928474426, 0.7076666951179504, 0.737333357334137, 0.6826666593551636, 0.7316666841506958, 0.7413333058357239, 0.7419999837875366, 0.7446666955947876, 0.7509999871253967, 0.7760000228881836, 0.7870000004768372, 0.7910000085830688, 0.7720000147819519, 0.79666668176651, 0.8116666674613953, 0.7933333516120911, 0.8116666674613953, 0.8149999976158142, 0.8240000009536743, 0.8086666464805603, 0.8296666741371155, 0.8183333277702332, 0.8296666741371155, 0.8366666436195374, 0.8113333582878113, 0.8399999737739563, 0.8453333377838135, 0.8443333506584167, 0.8429999947547913, 0.8420000076293945, 0.8473333120346069, 0.840666651725769, 0.8556666374206543, 0.828000009059906, 0.8513333201408386, 0.843999981880188, 0.8473333120346069, 0.8493333458900452]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 1, 2, 2, 4, 8, 4, 2, 4, 6, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 0, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7951428294181824, "mapping_values": [1, 4, 4, 2, 2, 1, 26, 26, 15, 11, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, grad), grad), tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), grad)), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, beta)))))))))), grad), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.10105396154739, 1.5982998510661017, 1.1354267177737982, 0.8894455946825436, 0.8277228646715477, 0.8133748584120517, 0.7077928699790179, 0.709822389750732, 0.6776028966481706, 0.6643123168750698, 0.6382560901370393, 0.5996620768427519, 0.5928013359692591, 0.5791621683705453, 0.5693712392188397, 0.550923637922776, 0.5544458522048404, 0.5313704919348996, 0.532360321447881, 0.5066690727223998, 0.4956601507014067], "accuracy": [0.3039228618144989, 0.44525161385536194, 0.5758816599845886, 0.6736230254173279, 0.6940959095954895, 0.6929071545600891, 0.7298903465270996, 0.7277770638465881, 0.7461365461349487, 0.7483819723129272, 0.7526086568832397, 0.7766477465629578, 0.7824593782424927, 0.7778365015983582, 0.7877426743507385, 0.7907806038856506, 0.7927618622779846, 0.8035926818847656, 0.8037247657775879, 0.8098005652427673, 0.816008448600769], "val_loss": [1.3438029629843575, 1.0581820692334856, 0.6592603410993304, 0.6036416632788522, 0.6504916293280465, 0.5570890392575946, 0.5735752071653094, 0.5323854173932757, 0.5186526605061123, 0.5481338841574532, 0.49569945675986155, 0.5204617125647408, 0.5237010887690953, 0.46507843903132845, 0.46627131530216764, 0.446308502129146, 0.4516801578657968, 0.43031351055417744, 0.4321119018963405, 0.4411453264100211, 0.4226596014840262], "val_accuracy": [0.4466666579246521, 0.503000020980835, 0.7026666402816772, 0.7300000190734863, 0.6766666769981384, 0.7413333058357239, 0.718999981880188, 0.7519999742507935, 0.7580000162124634, 0.7363333106040955, 0.7806666493415833, 0.749666690826416, 0.7546666860580444, 0.7860000133514404, 0.7829999923706055, 0.8116666674613953, 0.7856666445732117, 0.8090000152587891, 0.8043333292007446, 0.7963333129882812, 0.8103333115577698]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 1, 4, 2, 2, 2, 9, 2, 6, 2, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 0, 3, 3, 3, 2, 2, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7822856903076172, "mapping_values": [1, 4, 4, 2, 2, 1, 25, 25, 15, 10, 3, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))), tf.math.add(beta, beta))), tf.math.add(beta, beta)))), tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, grad))))))), tf.math.negative(tf.math.add(beta, grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.149894366584292, 1.4610561115740786, 1.1337424153586295, 0.9441287100606386, 0.8794242297779568, 0.8165108491920634, 0.7897497488050697, 0.7567788216857043, 0.7141654303738029, 0.7119968708999688, 0.6890188754588984, 0.6688377869647208, 0.6615479789263915, 0.6219899294288513, 0.6477719959943774, 0.6185634627853639, 0.6201899860434608, 0.6002231367496278, 0.6069163925627896, 0.5997689417119921, 0.578265342674928, 0.5692801010717318], "accuracy": [0.28741249442100525, 0.49808478355407715, 0.5935807824134827, 0.6645092964172363, 0.6823405027389526, 0.6979262828826904, 0.7042662501335144, 0.7149649858474731, 0.7288337349891663, 0.7272487282752991, 0.735569953918457, 0.748249888420105, 0.7549861073493958, 0.7676661014556885, 0.7547219395637512, 0.7658169269561768, 0.7625148296356201, 0.7730814814567566, 0.7676661014556885, 0.7695152759552002, 0.7833839654922485, 0.780610203742981], "val_loss": [1.3730799470629012, 0.8319898673466274, 0.7274054118565151, 0.6685478857585362, 0.6441866500037057, 0.6378342935017177, 0.5821624653679984, 0.5602492604936872, 0.550877502986363, 0.566414475440979, 0.5215177536010742, 0.5381452356066022, 0.49288083825792584, 0.5386971746172223, 0.49672888006482807, 0.4931584256035941, 0.4742868116923741, 0.5045135872704642, 0.4727555683680943, 0.4732205016272409, 0.47400527341025217, 0.5007034710475377], "val_accuracy": [0.6019999980926514, 0.6773333549499512, 0.6803333163261414, 0.7049999833106995, 0.6996666789054871, 0.7056666612625122, 0.7253333330154419, 0.7366666793823242, 0.7416666746139526, 0.731333315372467, 0.7693333625793457, 0.7356666922569275, 0.7699999809265137, 0.737666666507721, 0.7613333463668823, 0.7773333191871643, 0.7836666703224182, 0.7566666603088379, 0.7836666703224182, 0.7823333144187927, 0.7746666669845581, 0.7583333253860474]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 1, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 0, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.24485714733600616, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.320841914611391, 2.481282283758774, 2.2898838594998696, 2.199772861135823, 2.1830172822806406, 2.1900242175471436, 2.292616358900492, 2.347461289198108, 2.393648263218066, 2.3548616484691283], "accuracy": [0.1806894689798355, 0.15638621151447296, 0.17091533541679382, 0.1904636174440384, 0.18821820616722107, 0.1896711140871048, 0.1592920422554016, 0.12495046854019165, 0.10276053100824356, 0.09826971590518951], "val_loss": [2.197793756212507, 1.9036034175327845, 1.7928738594055176, 1.8343049458095007, 1.7615750176565987, 1.860891682761056, 1.9726858139038086, 1.9901917321341378, 2.021803719656808, 2.061721052442278], "val_accuracy": [0.10199999809265137, 0.18133333325386047, 0.2056666612625122, 0.1979999989271164, 0.25566667318344116, 0.1889999955892563, 0.11233333498239517, 0.10000000149011612, 0.09933333098888397, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 1, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [0, 7, 3, 4, 9], [4, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 1, 2, 1, 1, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.30443196752682, 2.308161230166638, 2.311727401272118, 2.3230356362675, 2.3380826045776857, 2.786681647849294, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08506141602993011, 0.0816272646188736, 0.07858935743570328, 0.07172103971242905, 0.06934354454278946, 0.08070268481969833, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9740611485072546, 1.9778032984052385, 1.9826558658054896, 1.9898491586957658, 2.0084793908255443, 4667667.142857143, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02033333294093609, 0.01733333244919777, 0.017000000923871994, 0.05433333292603493, 0.09333333373069763, 0.09733333438634872, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 3, 5, 8, 4, 2, 4, 2, 6, 2, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 3, 1, 3, 1, 3, 2, 0, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(alpha, beta)), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302578436400928, 2.302491350291097, 2.3023797685066154, 2.3027221043001878, 2.302766973946183, 2.3030131879090288], "accuracy": [0.09985470771789551, 0.09655263274908066, 0.10566636174917221, 0.1002509593963623, 0.10011887550354004, 0.10051512718200684], "val_loss": [1.9737366948808943, 1.9737742968967982, 1.9737374441964286, 1.9740730694362096, 1.9741668701171875, 1.9746033804757255], "val_accuracy": [0.10000000149011612, 0.09733333438634872, 0.10000000149011612, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 8, 2, 0, 4, 8, 4, 2, 4, 2, 3, 3, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 3, 0, 3, 3, 3, 1, 3, 2, 0, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302351815526386, 2.302369620050217, 2.303163394322091, 2.3062728851415604, 2.3223135101954226, 2.4211509709880334], "accuracy": [0.09787346422672272, 0.10381719470024109, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9738499777657645, 1.9742958205086845, 1.975937979561942, 1.9829424449375697, 2.017951624734061, 2.281482424054827], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 1, 2, 2, 4, 8, 0, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 0, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(grad)))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026918345564598, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 1, 2, 2, 4, 4, 4, 2, 1, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [0, 7, 3, 4, 9], [0, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 3, 5, 8, 4, 2, 4, 2, 6, 2, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 3, 1, 3, 1, 3, 2, 0, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [0, 7, 3, 4, 9], [4, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.304394381850261, 2.3079714059294365, 2.3113469506897206, 2.322288559380933, 2.336219504178397, 2.4387763883018567, 2783255594615.758, 6.212196216953586, 12.121817049301846, 18.07659930903221, 24.04996850761078], "accuracy": [0.08492933213710785, 0.08175934851169586, 0.07845727354288101, 0.07224937528371811, 0.06987188011407852, 0.07885351777076721, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9739617620195662, 1.9775599070957728, 1.9821327073233468, 1.98895297731672, 2.005660261426653, 58.584259033203125, 3.399489402770996, 8.305990219116211, 13.405016490391322, 18.543373652866908, 23.634215763637], "val_accuracy": [0.02033333294093609, 0.017999999225139618, 0.01666666753590107, 0.0533333346247673, 0.08966666460037231, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 1, 2, 2, 4, 8, 4, 2, 2, 4, 8, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 3, 3, 3, 3, 2, 1, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 24, 24, 14, 10, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(alpha, tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))))), alpha)))), tf.math.add(beta, grad)))), tf.math.sqrt(beta))), tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026918345564598, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 1, 2, 2, 4, 8, 4, 2, 4, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 3, 3, 3, 3, 2, 1, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 18, 18, 9, 9, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(grad, tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(grad))))), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, grad), beta), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07792893797159195, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 3, 5, 8, 4, 2, 4, 2, 6, 2, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 3, 1, 3, 2, 3, 2, 0, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [9, 7, 3, 4, 9], [4, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [79, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 1, 2, 2, 4, 4, 5, 2, 1, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 3, 1, 3, 3, 1, 2, 0, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 10, 9, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(alpha), grad)), tf.math.add(beta, grad))))), tf.math.add(beta, alpha))))), tf.math.add(beta, beta))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0816272646188736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 1, 2, 2, 4, 8, 4, 2, 4, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 3, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.036571428179740906, "mapping_values": [1, 5, 5, 3, 2, 0, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303758734520542, 2.305105360318578, 2.3052709287482953, 2.309901877952337, 2.3126198178851736, 2.3172086934371947], "accuracy": [0.08598599582910538, 0.08479725569486618, 0.08189142495393753, 0.07885351777076721, 0.0758156105875969, 0.07832518965005875], "val_loss": [1.972569806235177, 1.9739925520760673, 1.9755686351231165, 1.9777543885367257, 1.9802513122558594, 1.9828290939331055], "val_accuracy": [0.027666667476296425, 0.02133333310484886, 0.01899999938905239, 0.01966666616499424, 0.021666666492819786, 0.026333333924412727]}}]