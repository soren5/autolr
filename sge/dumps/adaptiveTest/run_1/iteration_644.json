[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8425714373588562, "mapping_values": [1, 4, 4, 3, 1, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.990945712025171, 1.6012935074108499, 0.9951960331948678, 0.8450048543663388, 0.745871951055407, 0.6420638476774094, 0.6534857492263622, 0.6109029537320467, 0.5731501717372829, 0.5495639027322304, 0.5719730982281639, 0.5095351158730216, 0.5189452960412138, 0.4722957287041298, 0.4955821264382162, 0.4765778144376468, 0.46000131296286445, 0.43727283346071977, 0.43868810801284974, 0.4326128725441235, 0.41704407171361624, 0.45194459804659115, 0.40255013418046476, 0.40397797105507904, 0.384994501663536, 0.36447502411493554, 0.36651937907807436, 0.35750785634549476, 0.35504541224996256, 0.35714993363814884, 0.3329788929813684, 0.3348563889966838, 0.3336830581648475, 0.32284061787245283, 0.3273380923784483, 0.3036720946385892], "accuracy": [0.35068023204803467, 0.4834235906600952, 0.6302998065948486, 0.6889446377754211, 0.7181349992752075, 0.7569673657417297, 0.7564390301704407, 0.7630431652069092, 0.7873464822769165, 0.7903843522071838, 0.7844406366348267, 0.8079513907432556, 0.8075551390647888, 0.8232730031013489, 0.8112534880638123, 0.8241975903511047, 0.8313300609588623, 0.8343679904937744, 0.8352925777435303, 0.8337075710296631, 0.8412362933158875, 0.8297450542449951, 0.8467837572097778, 0.8424250483512878, 0.8582749962806702, 0.8659358024597168, 0.8642187118530273, 0.8652753829956055, 0.8650112152099609, 0.8634262084960938, 0.8770307898521423, 0.8750495314598083, 0.8758420348167419, 0.8840311765670776, 0.8755778670310974, 0.8805969953536987], "val_loss": [1.6034552029200964, 0.8864846229553223, 0.7221028464181083, 0.5551778588976178, 0.5101202045168195, 0.5149598802839007, 0.46798910413469585, 0.4488459314618792, 0.4559956448418753, 0.48215883118765696, 0.4177197217941284, 0.438518762588501, 0.411846399307251, 0.4457925728389195, 0.4539543730872018, 0.37847152778080534, 0.37104508706501554, 0.36801230907440186, 0.3613230160304478, 0.37186306715011597, 0.3563143185206822, 0.35479600940431866, 0.3531834823744638, 0.35606248889650616, 0.3501079933983939, 0.3590567878314427, 0.3359488419124058, 0.35499201502118793, 0.3734965409551348, 0.32772624492645264, 0.3223667059625898, 0.3379171831267221, 0.3274710008076259, 0.33207121917179655, 0.3464311105864389, 0.34284978253500803], "val_accuracy": [0.4336666762828827, 0.6326666474342346, 0.7016666531562805, 0.7513333559036255, 0.7720000147819519, 0.7603333592414856, 0.7926666736602783, 0.7979999780654907, 0.7919999957084656, 0.7933333516120911, 0.8203333616256714, 0.7940000295639038, 0.8266666531562805, 0.7960000038146973, 0.7953333258628845, 0.8349999785423279, 0.8363333344459534, 0.8460000157356262, 0.8443333506584167, 0.840666651725769, 0.8483333587646484, 0.8429999947547913, 0.8453333377838135, 0.8446666598320007, 0.8506666421890259, 0.8519999980926514, 0.8519999980926514, 0.8556666374206543, 0.843999981880188, 0.8606666922569275, 0.8663333058357239, 0.8576666712760925, 0.8653333187103271, 0.8629999756813049, 0.8546666502952576, 0.8553333282470703]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 6, 3, 6, 4, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8411428332328796, "mapping_values": [1, 4, 4, 3, 1, 1, 17, 17, 9, 8, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(grad, grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))), grad), tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9910218209764348, 1.7368827377879121, 1.1177368744599616, 0.8584368618613835, 0.7441263465975191, 0.6598804912484002, 0.6488635603777878, 0.6075548423263989, 0.5970574379864779, 0.5712084579918095, 0.5669665482176167, 0.5175158177321503, 0.5302847648151893, 0.48196218178618966, 0.5041515727509849, 0.4714431522458126, 0.4719271896624247, 0.4670826077949354, 0.4532227517906323, 0.447878924004705, 0.42352466649934206, 0.4276811965720182, 0.3996899594893435, 0.40598678194048415, 0.38174089573677017, 0.37428018042928174, 0.376897510918077, 0.36473509696464906, 0.36111474853181696, 0.3533096124805936, 0.3332392849021222, 0.33622898895742714, 0.34805584310099685, 0.3272294694004971, 0.3237110034404823, 0.3068794240379661], "accuracy": [0.35001981258392334, 0.4399682879447937, 0.5840708017349243, 0.68101966381073, 0.7066437602043152, 0.7536653280258179, 0.7564390301704407, 0.7656848430633545, 0.7804781198501587, 0.7798177003860474, 0.7906485199928284, 0.8054417967796326, 0.8031964302062988, 0.8121780753135681, 0.8120459914207458, 0.8253863453865051, 0.8249900937080383, 0.8251221776008606, 0.8315942287445068, 0.832650899887085, 0.8399154543876648, 0.8387266993522644, 0.847840428352356, 0.8491612672805786, 0.8576145768165588, 0.8598600029945374, 0.8564258217811584, 0.8621054291725159, 0.8658037185668945, 0.8706908226013184, 0.8759741187095642, 0.8775591254234314, 0.8663320541381836, 0.8739928603172302, 0.878351628780365, 0.8835028409957886], "val_loss": [1.6122595923287528, 0.9212990147726876, 0.6710437876837594, 0.5887866190501622, 0.5410260132380894, 0.5176563262939453, 0.4886517184121268, 0.4893313816615513, 0.44167017936706543, 0.46890079975128174, 0.4276090349469866, 0.4846947022846767, 0.4159423964364188, 0.4340531144823347, 0.4417703322001866, 0.38172493662152973, 0.3780620012964521, 0.38168801580156597, 0.3658819964953831, 0.3818931153842381, 0.35327317884990145, 0.34708337272916523, 0.3632878235408238, 0.3486045684133257, 0.3534083366394043, 0.3358259286199297, 0.3473885570253645, 0.3380289929253714, 0.36557492188044954, 0.3273249864578247, 0.32301585163388935, 0.3633924807821001, 0.33813932963779997, 0.32572936160223825, 0.34891373770577566, 0.33344097648348126], "val_accuracy": [0.4300000071525574, 0.6150000095367432, 0.6970000267028809, 0.7319999933242798, 0.7473333477973938, 0.7543333172798157, 0.7773333191871643, 0.7756666541099548, 0.8019999861717224, 0.8029999732971191, 0.8116666674613953, 0.7860000133514404, 0.8183333277702332, 0.8046666383743286, 0.8013333082199097, 0.8306666612625122, 0.8330000042915344, 0.8246666789054871, 0.840666651725769, 0.8356666564941406, 0.8513333201408386, 0.8536666631698608, 0.8463333249092102, 0.8513333201408386, 0.8489999771118164, 0.8610000014305115, 0.8489999771118164, 0.8613333106040955, 0.8526666760444641, 0.8650000095367432, 0.8676666617393494, 0.840666651725769, 0.8640000224113464, 0.8659999966621399, 0.8510000109672546, 0.8663333058357239]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 9, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.831428587436676, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1226615580931756, 1.7574272682449175, 1.3842910326168034, 1.047375133056147, 0.8977454551269884, 0.8011059395830157, 0.7157423759196428, 0.6930044719083608, 0.68931486683436, 0.6305650597975286, 0.627129004238115, 0.5989759777279074, 0.5787454648512922, 0.5485017471042024, 0.556201249254756, 0.5436389083403166, 0.534347387730658, 0.5128957540714005, 0.5107874797083651, 0.4865569095995133, 0.49528563902000505, 0.4649690322399832, 0.4721199556065273, 0.4599793312642805, 0.44490840424478584, 0.4227094195183825, 0.42991317968641873, 0.41740186289474396, 0.433068811621853, 0.39544792083024255, 0.40074150937187075, 0.39626367334062396, 0.3948198438296937], "accuracy": [0.29982829093933105, 0.4473649561405182, 0.5120856165885925, 0.609430730342865, 0.6660943031311035, 0.6934354901313782, 0.7327961921691895, 0.739400327205658, 0.7407211661338806, 0.7598732113838196, 0.7655527591705322, 0.7667415142059326, 0.7868181467056274, 0.7893276810646057, 0.7903843522071838, 0.7944789528846741, 0.7992339134216309, 0.8086118102073669, 0.8087438941001892, 0.8186501264572144, 0.8148196935653687, 0.8277638554573059, 0.8247259259223938, 0.8267071843147278, 0.8318583965301514, 0.8444063067436218, 0.8405758738517761, 0.8429533839225769, 0.833179235458374, 0.8562937378883362, 0.852859616279602, 0.8500858545303345, 0.8527275323867798], "val_loss": [1.6657733576638358, 1.1736280236925398, 0.8549024718148368, 0.8470048393521991, 0.722556608063834, 0.5544284752437046, 0.529593995639256, 0.5730300119944981, 0.5327697140829903, 0.5253382921218872, 0.5252831663404193, 0.5065703221729824, 0.4573007822036743, 0.519523058618818, 0.4424800532204764, 0.4425675187792097, 0.4811063664300101, 0.41163575649261475, 0.4005279115268162, 0.41300748927252634, 0.39489111730030607, 0.4055116942950657, 0.37973660230636597, 0.38077740158353535, 0.38127211162022184, 0.38860106468200684, 0.3872447780200413, 0.3726037229810442, 0.3629592401640756, 0.3556558574948992, 0.37262887614113943, 0.37204783303397043, 0.37182274886540007], "val_accuracy": [0.37533333897590637, 0.6043333411216736, 0.6340000033378601, 0.6566666960716248, 0.6456666588783264, 0.753333330154419, 0.762666642665863, 0.7326666712760925, 0.7590000033378601, 0.7703333497047424, 0.7483333349227905, 0.762666642665863, 0.7883333563804626, 0.762333333492279, 0.800000011920929, 0.8023333549499512, 0.784333348274231, 0.8240000009536743, 0.8240000009536743, 0.8183333277702332, 0.8270000219345093, 0.8203333616256714, 0.8360000252723694, 0.8333333134651184, 0.8403333425521851, 0.8349999785423279, 0.8253333568572998, 0.8506666421890259, 0.847000002861023, 0.8486666679382324, 0.840666651725769, 0.8450000286102295, 0.8473333120346069]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1, 1, 0], [0, 2, 6, 4], [6, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.8265714049339294, "mapping_values": [1, 5, 5, 3, 2, 1, 16, 16, 9, 7, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, beta)), tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.031885091434333, 1.4715876409390567, 1.086418921622177, 0.9186021910052589, 0.8134702872984351, 0.7873834613890239, 0.7583002742286907, 0.7327645160282419, 0.70558015592598, 0.6920565781718028, 0.6559156489142369, 0.6546487354048176, 0.6235877780976659, 0.6033197166724149, 0.6247975220139851, 0.6086338982999663, 0.5907955723132565, 0.5761730856726025, 0.5764871201243116, 0.5618052898129106, 0.5494520626110942, 0.5626738262356012, 0.5374113234231627, 0.541135958590134, 0.5151998415803866, 0.5067195573014952, 0.5067135485533978, 0.5062678580735385, 0.5024668124916846, 0.4861620545324286, 0.4780736228006076, 0.48176022167407984, 0.4696116891039235, 0.4612359717112365], "accuracy": [0.33086779713630676, 0.48408401012420654, 0.5995244979858398, 0.6608110070228577, 0.7030775547027588, 0.7034738063812256, 0.7169462442398071, 0.7202483415603638, 0.7353057861328125, 0.735569953918457, 0.752212405204773, 0.7478536367416382, 0.7667415142059326, 0.7696473598480225, 0.7638356685638428, 0.7681944370269775, 0.7796856164932251, 0.7816668748855591, 0.7796856164932251, 0.789459764957428, 0.7956677079200745, 0.7886672616004944, 0.802800178527832, 0.7992339134216309, 0.8041210174560547, 0.8104609847068787, 0.8127063512802124, 0.8105930685997009, 0.8153480291366577, 0.8234050869941711, 0.821820080280304, 0.8210275769233704, 0.8286884427070618, 0.8318583965301514], "val_loss": [1.3989604881831579, 1.0267630645206995, 0.7178214958735875, 0.6322992188589913, 0.5883971282414028, 0.5500798225402832, 0.5566584553037371, 0.5472124304090228, 0.5072138139179775, 0.5133473873138428, 0.5081060443605695, 0.5099167994090489, 0.49949673243931364, 0.5459542444774083, 0.5083739076341901, 0.47149653094155447, 0.4837862934385027, 0.46759038312094553, 0.4483132702963693, 0.43359157017299105, 0.4642732654299055, 0.45013112681252615, 0.45416086060660227, 0.421648519379752, 0.4321244955062866, 0.4235351766858782, 0.4334037644522531, 0.4075326408658709, 0.4003764646393912, 0.4074340632983616, 0.3899355104991368, 0.3947156071662903, 0.3984529120581491, 0.39204016753605436], "val_accuracy": [0.38600000739097595, 0.6196666955947876, 0.7223333120346069, 0.7289999723434448, 0.7350000143051147, 0.765999972820282, 0.762666642665863, 0.7576666474342346, 0.7789999842643738, 0.7609999775886536, 0.7703333497047424, 0.7566666603088379, 0.7839999794960022, 0.7453333139419556, 0.7666666507720947, 0.7879999876022339, 0.7766666412353516, 0.7996666431427002, 0.8026666641235352, 0.8119999766349792, 0.7933333516120911, 0.8083333373069763, 0.7956666946411133, 0.8296666741371155, 0.8173333406448364, 0.8163333535194397, 0.8050000071525574, 0.8289999961853027, 0.8373333215713501, 0.8213333487510681, 0.8343333601951599, 0.8303333520889282, 0.8309999704360962, 0.8333333134651184]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.8225714564323425, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 10, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1226619195786953, 1.739981896164647, 1.335916413229218, 1.0434366976107903, 0.9109025710388937, 0.8098559549944102, 0.7316665371899371, 0.6962312676210319, 0.6548737218713464, 0.6598306799199462, 0.6314084111675846, 0.6046311246358392, 0.5884300014991897, 0.5399298271593117, 0.5575753543764577, 0.5391244218255299, 0.5230073408601212, 0.49883518722378234, 0.5152007144251047, 0.4811944737961547, 0.49043776793030225, 0.4585584987581304], "accuracy": [0.29982829093933105, 0.45489367842674255, 0.5252938866615295, 0.6107515692710876, 0.6642451286315918, 0.6917183995246887, 0.7283053994178772, 0.7308149337768555, 0.7576277852058411, 0.7504953145980835, 0.7651565074920654, 0.7713643908500671, 0.7820631265640259, 0.7955356240272522, 0.7897239327430725, 0.7952714562416077, 0.8054417967796326, 0.8145555257797241, 0.8055738806724548, 0.8189142942428589, 0.8157442808151245, 0.8286884427070618], "val_loss": [1.6654195104326521, 1.120960337775094, 0.8376005036490304, 0.7833503995622907, 0.6490226813725063, 0.5811916589736938, 0.5671551057270595, 0.5460222789219448, 0.5402266808918544, 0.5266575983592442, 0.4983836923326765, 0.5391084636960711, 0.4667604991367885, 0.4987929718835013, 0.42569477217538015, 0.41439602204731535, 0.41927188634872437, 0.4079016021319798, 0.40295231342315674, 0.4145796128681728, 0.4170652287346976, 0.4303216678755624], "val_accuracy": [0.37566667795181274, 0.6073333621025085, 0.659333348274231, 0.6693333387374878, 0.6869999766349792, 0.7250000238418579, 0.734000027179718, 0.7559999823570251, 0.7490000128746033, 0.7753333449363708, 0.7666666507720947, 0.750333309173584, 0.7839999794960022, 0.7599999904632568, 0.8119999766349792, 0.8196666836738586, 0.8240000009536743, 0.8209999799728394, 0.8240000009536743, 0.8176666498184204, 0.8136666417121887, 0.8090000152587891]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [6, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.8119999766349792, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 10, 6, 1, 6, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1158168952321144, 1.8727107679272341, 1.6050477597565778, 1.2577600809309413, 0.9050033480074616, 0.8001118567735921, 0.7245462906044141, 0.7095741752021899, 0.7233197486254171, 0.6335323743218082, 0.6300937640211917, 0.6135132693186286, 0.5716532368654305, 0.5479974404947712, 0.5513044697276952, 0.5438066010524915, 0.5352550436083383, 0.5164713967493607, 0.5122699249595337, 0.4932416513839717, 0.4992923573133826, 0.4680027048648577, 0.4810481581390652, 0.4686142526573871, 0.44711874959774617, 0.44089973033096463, 0.4619407570081821, 0.44586318170374034, 0.4190569231342, 0.43252335636607253], "accuracy": [0.29877161979675293, 0.40866464376449585, 0.4579315781593323, 0.5551446080207825, 0.6717738509178162, 0.6975300312042236, 0.7301545143127441, 0.7232862114906311, 0.7329282760620117, 0.7576277852058411, 0.7677981853485107, 0.7670056819915771, 0.789459764957428, 0.7944789528846741, 0.7923656105995178, 0.7961959838867188, 0.7977809906005859, 0.8067626357078552, 0.8129705190658569, 0.8138951063156128, 0.8101968169212341, 0.8265751004219055, 0.819970965385437, 0.819970965385437, 0.8294808864593506, 0.837537944316864, 0.822348415851593, 0.8347642421722412, 0.8441421389579773, 0.8388587832450867], "val_loss": [1.6601871762956892, 1.3074885777064733, 1.1774953774043493, 0.7833522047315326, 0.653840252331325, 0.5929520300456456, 0.5758516788482666, 0.6470872163772583, 0.5249111822673252, 0.524774466242109, 0.509107266153608, 0.49260720184871126, 0.4471585580280849, 0.5122860670089722, 0.43398181029728483, 0.43163663148880005, 0.48018533842904226, 0.41005400248936247, 0.40349072217941284, 0.405721196106502, 0.43160607133592876, 0.4202729974474226, 0.39156852449689594, 0.4219217470714024, 0.3777549948011126, 0.36886621373040335, 0.40135551350457327, 0.3794631361961365, 0.3887474366596767, 0.3672929235867092], "val_accuracy": [0.3713333308696747, 0.5090000033378601, 0.5663333535194397, 0.6589999794960022, 0.7136666774749756, 0.7099999785423279, 0.7256666421890259, 0.7120000123977661, 0.7576666474342346, 0.7773333191871643, 0.7596666812896729, 0.7736666798591614, 0.7993333339691162, 0.7630000114440918, 0.8083333373069763, 0.7986666560173035, 0.7850000262260437, 0.8223333358764648, 0.8293333053588867, 0.8223333358764648, 0.8086666464805603, 0.8143333196640015, 0.8306666612625122, 0.8059999942779541, 0.843666672706604, 0.8426666855812073, 0.812333345413208, 0.8336666822433472, 0.8316666483879089, 0.8413333296775818]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [29, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 3, 1, 2, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 1, 3, 2, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7945713996887207, "mapping_values": [1, 4, 4, 3, 1, 1, 17, 17, 10, 7, 1, 6, 5, 3, 2, 0, 7, 3, 4, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, alpha)), tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), grad))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.279828238843092, 2.2126976151618156, 2.0999814929931926, 1.9046439302280957, 1.6389439727463002, 1.406773685747685, 1.2593915578853248, 1.1500319544161473, 1.0717768553398888, 1.0114511855604973, 0.9807001681627614, 0.9217670314646731, 0.9028155751720223, 0.868105544862557, 0.8488545900228206, 0.8318959538018021, 0.811828240781743, 0.8060594887828563, 0.7800520246669113, 0.7779610823284382, 0.765524823124603, 0.7528467430036774, 0.7414309085478258, 0.7467354338135402, 0.7338911911295295, 0.7186429403744921, 0.7212822602693005, 0.705107053391229, 0.7103782418051007, 0.7006256231510911, 0.681771069879246, 0.682606063317692, 0.6845984478998871, 0.674759245063682, 0.6714262066185356, 0.6604439125179441, 0.6649562571310427, 0.6578459757871128, 0.64695876714749, 0.6445738838616772, 0.6386268655968191, 0.648607877668782, 0.6341220332552429, 0.6305209638782386, 0.6322415757172962, 0.620853184504264, 0.6203819889087624, 0.617332561148975, 0.6135932280009275, 0.6140800015470685, 0.6100841283388835, 0.6102455506912391, 0.6079438845746946], "accuracy": [0.14449875056743622, 0.28318583965301514, 0.36983224749565125, 0.4341566562652588, 0.48566898703575134, 0.5387663245201111, 0.5728437304496765, 0.5970149040222168, 0.6210539937019348, 0.6411306262016296, 0.6487914323806763, 0.6693964004516602, 0.6775855422019958, 0.6848500967025757, 0.6936996579170227, 0.6975300312042236, 0.7038700580596924, 0.7021529674530029, 0.7165499925613403, 0.7201162576675415, 0.720380425453186, 0.722229540348053, 0.7314753532409668, 0.7276449799537659, 0.7250033020973206, 0.7338528633117676, 0.7283053994178772, 0.7391361594200134, 0.7372870445251465, 0.7437590956687927, 0.7471932172775269, 0.7486461400985718, 0.7454761862754822, 0.752740740776062, 0.7514199018478394, 0.7526086568832397, 0.7564390301704407, 0.7604015469551086, 0.7647602558135986, 0.759609043598175, 0.7676661014556885, 0.7601373791694641, 0.7658169269561768, 0.7652885913848877, 0.7646281719207764, 0.7718927264213562, 0.7712323069572449, 0.7720248103141785, 0.7753269076347351, 0.7724210619926453, 0.7730814814567566, 0.7724210619926453, 0.7736098170280457], "val_loss": [1.9195171764918737, 1.839270864214216, 1.6872126374925887, 1.4442106315067835, 1.1823396342141288, 0.9889285564422607, 0.8733343396868024, 0.7953270503452846, 0.7453598805836269, 0.7056017603193011, 0.6751492193767002, 0.6502652508871896, 0.6317217860903058, 0.6208440405981881, 0.6040760449000767, 0.5975244556154523, 0.5802202905927386, 0.5759516954421997, 0.5665992668696812, 0.559970498085022, 0.5543156691959926, 0.5479998418263027, 0.5425907714026315, 0.5346660784312657, 0.5361238888331822, 0.5272572892052787, 0.5255513872419085, 0.5235218320574079, 0.5181644644056048, 0.5119024004255023, 0.5071863106318882, 0.5027320725577218, 0.5044411080224174, 0.49836478914533344, 0.5017726251057216, 0.5003966433661324, 0.49308156967163086, 0.49060847078050884, 0.4864222833088466, 0.48923751286097933, 0.48573979309626986, 0.4829823970794678, 0.47894283703395296, 0.4764313357216971, 0.4769124984741211, 0.47288199833461214, 0.47819955008370535, 0.4674173252923148, 0.47039808545793804, 0.4660320281982422, 0.4663339512688773, 0.46705824988228933, 0.468245335987636], "val_accuracy": [0.38100001215934753, 0.46433332562446594, 0.5326666831970215, 0.5643333196640015, 0.6183333396911621, 0.6710000038146973, 0.6836666464805603, 0.7006666660308838, 0.7126666903495789, 0.7210000157356262, 0.7286666631698608, 0.7360000014305115, 0.7379999756813049, 0.7483333349227905, 0.749666690826416, 0.7543333172798157, 0.7576666474342346, 0.7596666812896729, 0.7603333592414856, 0.765666663646698, 0.7680000066757202, 0.7639999985694885, 0.7733333110809326, 0.7739999890327454, 0.7756666541099548, 0.7806666493415833, 0.7756666541099548, 0.7746666669845581, 0.7823333144187927, 0.7796666622161865, 0.781000018119812, 0.7863333225250244, 0.793666660785675, 0.7933333516120911, 0.7766666412353516, 0.7846666574478149, 0.7913333177566528, 0.7986666560173035, 0.8006666898727417, 0.7886666655540466, 0.79666668176651, 0.79666668176651, 0.8056666851043701, 0.8040000200271606, 0.800000011920929, 0.8036666512489319, 0.7910000085830688, 0.8076666593551636, 0.8003333210945129, 0.8069999814033508, 0.8063333630561829, 0.8043333292007446, 0.8050000071525574]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [13, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 4, 9, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.4788571298122406, "mapping_values": [1, 4, 4, 3, 1, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3016679883081963, 2.2985282169435757, 2.297389644846515, 2.2987105567079604, 2.2968924069810837, 2.2942282618501357, 2.295162045739944, 2.2925993180026185, 2.2910888152839863, 2.29071526435451, 2.2900259723721272, 2.2872411147273684, 2.285757420227087, 2.2848895470605726, 2.2840925286144014, 2.2823746545424064, 2.2789552629332515, 2.279480072517027, 2.277959205691431, 2.276840197396017, 2.2746199946818555, 2.274046931048237, 2.271051376723437, 2.2716493312756083, 2.270244596562192, 2.267829921157085, 2.2683269678719715, 2.2656076742972617, 2.265977061167999, 2.263880625628934, 2.2612564633346395, 2.2601414581788073, 2.258364429374365, 2.2580403387585903, 2.2555983904535113, 2.254736127823162, 2.2536593441162696, 2.251577653968024, 2.2489491384483804, 2.2479419896883215, 2.2487791682971294, 2.2454764529651325, 2.2445800211199396, 2.2416377678491877, 2.24153790400249, 2.2412660744180455, 2.236566651341402, 2.2350683280615806, 2.233165931235593, 2.233190100915113, 2.2304781997964334, 2.2299199464566453, 2.2282294810739383, 2.2238340564549417, 2.2249789478567537, 2.221496668285178, 2.2208696590076427, 2.2167907462474643, 2.21591905702957, 2.214698261919275, 2.2121740792641913, 2.210055493533792, 2.2091060199316828, 2.2046984075287535, 2.2038577197171505, 2.2020901825292283, 2.1981674995026834, 2.1969063526068413, 2.1932660450064323, 2.1943046948409366, 2.1888640807399566, 2.188166532030258, 2.1849326496630646, 2.181125285681827, 2.180040891506511, 2.1783576518033456, 2.177665683492898, 2.1730418192034997, 2.1690527754783506, 2.1671413925298375, 2.1635832246803823, 2.1608358898875797, 2.1573639023400033, 2.155960447547962, 2.1526863307307944, 2.1484293871237035, 2.1464342859993994, 2.1426507627423947, 2.1388925793715408, 2.1360741459603765, 2.131187983413241, 2.1298540590178177, 2.1246163736418207, 2.1256275713609085, 2.118948013397366, 2.1176435109756846, 2.1134595324287417, 2.1095047279229933, 2.107057174718643, 2.1025824090194045], "accuracy": [0.09298639744520187, 0.10606260597705841, 0.1002509593963623, 0.09615638852119446, 0.1014397069811821, 0.11081759631633759, 0.109232597053051, 0.1216483935713768, 0.12019548565149307, 0.11993131786584854, 0.12455421686172485, 0.12653546035289764, 0.13274335861206055, 0.13274335861206055, 0.13657376170158386, 0.14740456640720367, 0.14780081808567047, 0.1418570876121521, 0.1530841439962387, 0.15532954037189484, 0.16114120185375214, 0.17012283205986023, 0.16933034360408783, 0.17421740293502808, 0.17831197381019592, 0.1784440577030182, 0.17751948535442352, 0.18742570281028748, 0.1880861222743988, 0.1896711140871048, 0.19997358322143555, 0.2020869106054306, 0.2114647924900055, 0.20353981852531433, 0.20921939611434937, 0.21542729437351227, 0.218465194106102, 0.2172764539718628, 0.2250693440437317, 0.2308809906244278, 0.2296922504901886, 0.23233389854431152, 0.2339189052581787, 0.244485542178154, 0.25122177600860596, 0.24554219841957092, 0.2557125985622406, 0.25122177600860596, 0.25980716943740845, 0.2588825821876526, 0.26799631118774414, 0.26244881749153137, 0.2611279785633087, 0.2719587981700897, 0.26099589467048645, 0.28397834300994873, 0.27843084931373596, 0.2786950170993805, 0.28741249442100525, 0.28503501415252686, 0.2891295850276947, 0.2945449650287628, 0.2921674847602844, 0.3004887104034424, 0.3003566265106201, 0.3089420199394226, 0.3089420199394226, 0.31158366799354553, 0.31924447417259216, 0.30643242597579956, 0.3151499032974243, 0.30960243940353394, 0.3135649263858795, 0.322150319814682, 0.33086779713630676, 0.32545238733291626, 0.3214899003505707, 0.32122573256492615, 0.33483028411865234, 0.33747193217277527, 0.34341567754745483, 0.34724608063697815, 0.3451327383518219, 0.3483027219772339, 0.3497556447982788, 0.3479065001010895, 0.3461894094944, 0.3567560315132141, 0.3619072735309601, 0.36085060238838196, 0.36626601219177246, 0.3609826862812042, 0.3695680797100067, 0.36124685406684875, 0.3757759928703308, 0.3626997768878937, 0.3749834895133972, 0.3707568347454071, 0.36903974413871765, 0.37670058012008667], "val_loss": [1.9697226796831404, 1.9685064043317522, 1.9673012324741908, 1.9660961287362235, 1.9648921830313546, 1.9636972291128976, 1.962503296988351, 1.9613161087036133, 1.960120677947998, 1.9589300836835588, 1.9577373095921107, 1.9565462384905135, 1.95536892754691, 1.954167093549456, 1.952970232282366, 1.95176362991333, 1.9505446297781808, 1.9493491990225655, 1.9481381007603236, 1.9469210079738073, 1.9456846373421806, 1.9444689069475447, 1.9432238851274763, 1.9419694628034319, 1.9407169478280204, 1.9394533293587821, 1.9381976808820451, 1.9369260924203056, 1.9356540271214075, 1.9343726975577218, 1.9330578531537737, 1.9317363330296107, 1.930394172668457, 1.9290402276175362, 1.9276794024876185, 1.9262978008815221, 1.9249259403773717, 1.9235285350254603, 1.9221091951642717, 1.9206729616437639, 1.9192186764308385, 1.917743478502546, 1.9162796565464564, 1.914774009159633, 1.9132563046046667, 1.911731515611921, 1.91017484664917, 1.9085948807852608, 1.9069854872567313, 1.9053724152701241, 1.9037316867283411, 1.9020778111049108, 1.9004020690917969, 1.8986784390040807, 1.8969582148960658, 1.8952020917619978, 1.8934153148106165, 1.8915997913905553, 1.8897671018327986, 1.8879077093941825, 1.886014529636928, 1.884103230067662, 1.8821734700884138, 1.880201748439244, 1.8781851359776087, 1.8761511530194963, 1.874051911490304, 1.8719419070652552, 1.869767325265067, 1.8675928797040666, 1.8653678894042969, 1.8631057739257812, 1.8608017648969377, 1.8584536824907576, 1.856085913521903, 1.8536737986973353, 1.8512529645647322, 1.84877382005964, 1.8462506021772112, 1.8436848776681083, 1.8410607065473283, 1.8383723667689733, 1.8356654303414481, 1.8329097202845983, 1.830127784184047, 1.8272645132882255, 1.8243659564426966, 1.8214493479047502, 1.818462576184954, 1.8154181752886092, 1.8123069490705217, 1.8092033522469657, 1.8059921264648438, 1.8027855328151159, 1.799471650804792, 1.796173095703125, 1.7927984510149275, 1.7893975802830286, 1.7858988216945104, 1.7823724065508162], "val_accuracy": [0.045666664838790894, 0.05366666615009308, 0.06066666543483734, 0.07066666334867477, 0.07900000363588333, 0.08866667002439499, 0.10199999809265137, 0.11366666853427887, 0.12433333694934845, 0.13899999856948853, 0.15466666221618652, 0.16633333265781403, 0.17466667294502258, 0.18433333933353424, 0.19766665995121002, 0.21133333444595337, 0.22166666388511658, 0.23399999737739563, 0.24566666781902313, 0.25833332538604736, 0.2680000066757202, 0.2773333191871643, 0.2853333353996277, 0.29233333468437195, 0.3009999990463257, 0.3083333373069763, 0.31700000166893005, 0.32600000500679016, 0.3330000042915344, 0.34033334255218506, 0.34700000286102295, 0.35333332419395447, 0.35733333230018616, 0.3633333444595337, 0.36933332681655884, 0.37299999594688416, 0.3766666650772095, 0.37833333015441895, 0.382999986410141, 0.38466668128967285, 0.3869999945163727, 0.38999998569488525, 0.3919999897480011, 0.3943333327770233, 0.3973333239555359, 0.39933332800865173, 0.4009999930858612, 0.4033333361148834, 0.4059999883174896, 0.4076666533946991, 0.40966665744781494, 0.41233333945274353, 0.4129999876022339, 0.41466665267944336, 0.4176666736602783, 0.4189999997615814, 0.421999990940094, 0.42533332109451294, 0.4273333251476288, 0.4286666810512543, 0.4323333203792572, 0.4336666762828827, 0.4346666634082794, 0.43666666746139526, 0.43799999356269836, 0.4410000145435333, 0.4426666796207428, 0.445333331823349, 0.4466666579246521, 0.4466666579246521, 0.4483333230018616, 0.4493333399295807, 0.45100000500679016, 0.453000009059906, 0.45399999618530273, 0.45633333921432495, 0.460999995470047, 0.46266666054725647, 0.46399998664855957, 0.46433332562446594, 0.46700000762939453, 0.4673333466053009, 0.46933332085609436, 0.4726666808128357, 0.47333332896232605, 0.47566667199134827, 0.4776666760444641, 0.4790000021457672, 0.4790000021457672, 0.48133334517478943, 0.48233333230018616, 0.48399999737739563, 0.48500001430511475, 0.4856666624546051, 0.4856666624546051, 0.48899999260902405, 0.49166667461395264, 0.49433332681655884, 0.49533334374427795, 0.4963333308696747]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.23000000417232513, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.400677513688893, 2.0352054237768304, 3.0779549268101025, 52.297215246206356, NaN, NaN, NaN], "accuracy": [0.26139214634895325, 0.2950733006000519, 0.21991810202598572, 0.09377889335155487, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.7815743855067663, 1.363121441432408, 168.2520795549665, 7007.421735491072, NaN, NaN, NaN], "val_accuracy": [0.20200000703334808, 0.4676666557788849, 0.10533333569765091, 0.09666666388511658, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [63, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.20000000298023224, "mapping_values": [1, 4, 4, 2, 2, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.2520734621407477, 2.351356111576119, 2.3041578207694937, 2.3032714457418058, 2.303109444836269, 2.300727517928241, 2.349609858450274, 2.3044192349795796, 2.2978809316317954, 2.2257218225489455, 2.3044386775092742, 2.3032097893620307, 2.30341217190661, 2.3030657159842836], "accuracy": [0.1935015171766281, 0.1302337795495987, 0.1026284471154213, 0.09655263274908066, 0.10540219396352768, 0.10579843819141388, 0.16378284990787506, 0.09800554811954498, 0.13498876988887787, 0.18002906441688538, 0.09840179979801178, 0.10421344637870789, 0.09549596905708313, 0.09919429570436478], "val_loss": [1.9489572388785226, 1.9751381192888533, 1.97386257989066, 1.9735638073512487, 1.972928251538958, 1.9576881272452218, 1.9772628375462122, 1.973388671875, 1.9456571170261927, 1.9761264664786202, 1.9743620327540807, 1.97403165272304, 1.974060126713344, 1.9738860130310059], "val_accuracy": [0.17633333802223206, 0.10233332961797714, 0.10233332961797714, 0.10366666316986084, 0.10366666316986084, 0.18033333122730255, 0.0949999988079071, 0.10100000351667404, 0.1979999989271164, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [0, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 5, 0, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10599999874830246, "mapping_values": [1, 4, 4, 3, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3021756731019973, 2.3002738425476896, 2.300336986500684, 2.3029026874005125, 2.3022994685245464, 2.300817825066462, 2.302993392301919, 2.3015807372798474, 2.301370798966762, 2.3021269394122945, 2.302700537480163, 2.3010606597584977, 2.3005917325798926, 2.3011831900604554, 2.301508977601809, 2.301169037645708, 2.2988621687545847, 2.3003273551269783, 2.3001112874945187, 2.300291821090946, 2.2994939480097445, 2.2998146617795183, 2.2982714097450407, 2.3004122736148234, 2.299966003885044, 2.298824486243112, 2.3001321414521247, 2.2990180991659894, 2.300455576613626, 2.299571830425532, 2.2984728766564664, 2.298632509625583, 2.298735702325954, 2.299454843174465, 2.298487986870855, 2.2990115440564147, 2.298720824389394, 2.2982326103412496, 2.297150144645047, 2.297871820804796, 2.2999746999122115, 2.2985122317824427, 2.298014924573766, 2.2973984804734138, 2.298565675081468, 2.299755235279493, 2.2968149462616627, 2.2969466360127684, 2.296921948620735, 2.298008632288318, 2.2970414737653044, 2.2978025417065875, 2.297820144309942, 2.2960017960951107, 2.2982991867219105, 2.2967752731707685, 2.29802952101202, 2.296244148659495, 2.2965600638262993, 2.297195909518009, 2.296908196866347, 2.2965834998278303, 2.29667180996246, 2.29500366261827, 2.2966983517352157, 2.296400905804879, 2.295967920628584, 2.2958075364724664, 2.295405723635767, 2.2970404670915867, 2.294305166375006, 2.296031100733279, 2.295655973835266, 2.294442507411668, 2.2950745527975123, 2.2961388640730624, 2.2968636831319595, 2.2952179410879276, 2.2939399722828258, 2.2950478912643737, 2.2941840526654875, 2.294895719338748, 2.2935946894013224, 2.2946868377386256, 2.2935829550882043, 2.2930718928185816, 2.2943005201886155, 2.29308992621921, 2.292835504025233, 2.2935362221495255, 2.2918839443314107, 2.2926710205559306, 2.292034350303123, 2.2945383144265796, 2.293072005871375, 2.293113832318819, 2.293558019011516, 2.2923820443267378, 2.2945547660643224, 2.292541548780966], "accuracy": [0.09179764986038208, 0.1014397069811821, 0.09351472556591034, 0.08413683623075485, 0.09008057415485382, 0.0948355570435524, 0.09021265059709549, 0.09985470771789551, 0.0940430611371994, 0.09021265059709549, 0.09377889335155487, 0.09245806187391281, 0.09734513610601425, 0.09153348207473755, 0.09021265059709549, 0.09391097724437714, 0.09589222073554993, 0.08849557489156723, 0.09668471664190292, 0.09430722147226334, 0.09694888442754745, 0.09919429570436478, 0.09747721254825592, 0.09087307006120682, 0.09800554811954498, 0.09589222073554993, 0.09708096832036972, 0.09694888442754745, 0.09734513610601425, 0.09642054885625839, 0.09602430462837219, 0.09787346422672272, 0.09800554811954498, 0.09826971590518951, 0.09853387624025345, 0.09708096832036972, 0.09602430462837219, 0.10077928751707077, 0.10698718577623367, 0.10487385839223862, 0.09787346422672272, 0.09932637959718704, 0.09853387624025345, 0.10170386731624603, 0.09774138033390045, 0.09853387624025345, 0.10249637067317963, 0.10210011899471283, 0.10513802617788315, 0.1014397069811821, 0.1080438494682312, 0.10249637067317963, 0.09945846349000931, 0.10381719470024109, 0.10315678268671036, 0.10870426893234253, 0.10513802617788315, 0.11121384054422379, 0.09853387624025345, 0.10910051316022873, 0.09760929644107819, 0.10632677376270294, 0.10236428678035736, 0.10817593336105347, 0.1022322028875351, 0.11240258812904358, 0.10196803510189056, 0.10302469879388809, 0.10460969805717468, 0.09985470771789551, 0.11253467202186584, 0.108440101146698, 0.10434553027153015, 0.11808215826749802, 0.10606260597705841, 0.10566636174917221, 0.10276053100824356, 0.10606260597705841, 0.10791176557540894, 0.11081759631633759, 0.10698718577623367, 0.10434553027153015, 0.11200633645057678, 0.10989301651716232, 0.11055342853069305, 0.11676132678985596, 0.11372341960668564, 0.1158367469906807, 0.11227050423622131, 0.11174217611551285, 0.11266675591468811, 0.11015717685222626, 0.1138555034995079, 0.11028926074504852, 0.11411966383457184, 0.11042134463787079, 0.11649715900421143, 0.1138555034995079, 0.11028926074504852, 0.11279883980751038], "val_loss": [1.9708507401602608, 1.9707621846880232, 1.9706740379333496, 1.970585891178676, 1.9704972675868444, 1.970409938267299, 1.9703217233930315, 1.9702341897147042, 1.9701457704816545, 1.9700579643249512, 1.9699694088527135, 1.96988160269601, 1.9697950226919991, 1.9697063991001673, 1.969618592943464, 1.9695302418300085, 1.9694418225969588, 1.9693551063537598, 1.9692679132734026, 1.9691801752362932, 1.9690924371991838, 1.969005516597203, 1.9689181191580636, 1.968829563685826, 1.9687418937683105, 1.9686547006879533, 1.9685673713684082, 1.968480042048863, 1.9683934620448522, 1.9683057921273368, 1.9682190077645438, 1.9681319509233748, 1.968043599809919, 1.9679557255336217, 1.967867306300572, 1.9677799088614327, 1.9676931244986398, 1.9676055908203125, 1.9675181252615792, 1.967430250985282, 1.9673425129481725, 1.967254638671875, 1.9671684673854284, 1.9670814105442591, 1.9669948305402483, 1.9669078418186732, 1.966820580618722, 1.966733796255929, 1.9666459219796317, 1.9665594100952148, 1.9664733750479562, 1.9663873400006975, 1.966301100594657, 1.9662139075142997, 1.9661271912711007, 1.9660397257123674, 1.9659530094691686, 1.9658654757908411, 1.9657793726239885, 1.9656923839024134, 1.9656056676592146, 1.9655189514160156, 1.9654335294451033, 1.9653467450823103, 1.9652598244803292, 1.9651736531938826, 1.9650861195155553, 1.9649989264351981, 1.9649113927568709, 1.9648241996765137, 1.9647375515529089, 1.96465117590768, 1.964564527784075, 1.9644780158996582, 1.9643919127328056, 1.9643055370875768, 1.9642205238342285, 1.9641341481889998, 1.9640483856201172, 1.963961465018136, 1.9638750212533134, 1.9637878281729562, 1.9637015206473214, 1.9636154856000627, 1.96352904183524, 1.9634421893528529, 1.9633549281529017, 1.9632690974644251, 1.9631826536996024, 1.9630951881408691, 1.9630084037780762, 1.9629228455679757, 1.9628356524876185, 1.962750026157924, 1.962662901197161, 1.9625774111066545, 1.9624910354614258, 1.962404523577009, 1.962317739214216, 1.9622314316885812], "val_accuracy": [0.03799999877810478, 0.03933333232998848, 0.03999999910593033, 0.04066666588187218, 0.04100000113248825, 0.041999999433755875, 0.04233333468437195, 0.04233333468437195, 0.04266666620969772, 0.043666668236255646, 0.044333335012197495, 0.04500000178813934, 0.04533333331346512, 0.045666664838790894, 0.045666664838790894, 0.045666664838790894, 0.04600000008940697, 0.046666666865348816, 0.046666666865348816, 0.04699999839067459, 0.04800000041723251, 0.04899999871850014, 0.05000000074505806, 0.050333332270383835, 0.052000001072883606, 0.052000001072883606, 0.05400000140070915, 0.054666668176651, 0.054999999701976776, 0.054999999701976776, 0.0560000017285347, 0.056333333253860474, 0.056333333253860474, 0.05666666850447655, 0.0573333315551281, 0.05833333358168602, 0.058666665107011795, 0.059333331882953644, 0.05966666713356972, 0.06066666543483734, 0.061666667461395264, 0.06199999898672104, 0.06233333423733711, 0.06366666406393051, 0.06400000303983688, 0.06433333456516266, 0.06499999761581421, 0.0663333311676979, 0.06700000166893005, 0.06800000369548798, 0.06866666674613953, 0.06966666877269745, 0.070333331823349, 0.07066666334867477, 0.07066666334867477, 0.07100000232458115, 0.07100000232458115, 0.0716666653752327, 0.07199999690055847, 0.07266666740179062, 0.07366666942834854, 0.07433333247900009, 0.07500000298023224, 0.07666666805744171, 0.07733333110809326, 0.07766667008399963, 0.07800000160932541, 0.07833333313465118, 0.07900000363588333, 0.07966666668653488, 0.08100000023841858, 0.08100000023841858, 0.0820000022649765, 0.08233333379030228, 0.0833333358168602, 0.08399999886751175, 0.08433333039283752, 0.0846666693687439, 0.08566666394472122, 0.08666666597127914, 0.08699999749660492, 0.08766666799783707, 0.08866667002439499, 0.08933333307504654, 0.08966666460037231, 0.09033333510160446, 0.09099999815225601, 0.09166666865348816, 0.09300000220537186, 0.09399999678134918, 0.09533333033323288, 0.09666666388511658, 0.09799999743700027, 0.0989999994635582, 0.1003333330154419, 0.10133333504199982, 0.10233332961797714, 0.10300000011920929, 0.10366666316986084, 0.10499999672174454]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [6, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 10, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [850672.3447577663, 2.3148170398636077, 2.305790308648884, 2.3036276240784024, 2.303232397558887, 2.3030971781987994], "accuracy": [0.10038304328918457, 0.09179764986038208, 0.0956280529499054, 0.09192973375320435, 0.09338264167308807, 0.09457138925790787], "val_loss": [1.9901859419686454, 1.9778601101466589, 1.9746012687683105, 1.973963669368199, 1.9738520894731795, 1.9737048830304826], "val_accuracy": [0.10366666316986084, 0.10233332961797714, 0.10366666316986084, 0.09566666930913925, 0.0949999988079071, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 5, 0, 4, 1, 4, 3, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 0, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 14, 14, 8, 6, 1, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [64, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 5, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 3, 0, 2, 14, 14, 8, 6, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(grad, tf.math.add(beta, grad)), grad))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.multiply(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08902391046285629, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 2, 6, 3, 6, 5, 2, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0812310129404068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 9, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 34, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 4, 3, 2, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(alpha, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302551730969295, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 1, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 0, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302551730969295, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [6, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302215432698748, 2.3004106744688895, 2.300568294783373, 2.303231769564791, 2.3027258073932475, 2.3013366045905865], "accuracy": [0.09179764986038208, 0.10117553919553757, 0.09298639744520187, 0.08400475233793259, 0.08942015469074249, 0.0936468094587326], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 0, 19, 19, 11, 8, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(grad, grad))))), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302215432698748, 2.3004106744688895, 2.300568294783373, 2.303231769564791, 2.3027258073932475, 2.3013366045905865], "accuracy": [0.09179764986038208, 0.10117553919553757, 0.09298639744520187, 0.08400475233793259, 0.08942015469074249, 0.0936468094587326], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]