[{"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.8320000171661377, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, tf.math.sqrt(tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2686265431312034, 1.9780039082680712, 1.3799807507175228, 1.0527012774169942, 0.892194367339976, 0.8137676835674195, 0.7571415418741521, 0.712181430175682, 0.6881792385186722, 0.6593723892850678, 0.6327309020994331, 0.6243052067946858, 0.6003117750916326, 0.5724565163264579, 0.5538666192424957, 0.5359837665707129, 0.5274923332473463, 0.5120551123469183, 0.5009389795277334, 0.48159038408825094, 0.4787599545947911, 0.4611493115844885, 0.4428086631239177, 0.43874434100370746, 0.430466466328062, 0.4217123656327368, 0.4089095367770925, 0.3952899922776326, 0.3872877896548483, 0.3877941810727324, 0.37482847433363553, 0.3686851372910591, 0.3636842576338867, 0.351235138840128, 0.352416427860391, 0.34394455050921413, 0.33593749489058056, 0.3267271469896181, 0.3210301970202673, 0.32320453794388926, 0.3100891873907687, 0.3012293921312431, 0.30151989612014396, 0.2991638587544922, 0.29657424129609655, 0.2893291807933616, 0.27835918063689785, 0.277185294476514, 0.2695485775961364, 0.263734273599706, 0.26416775696407674, 0.2627462898782688], "accuracy": [0.17474573850631714, 0.4035134017467499, 0.5160480737686157, 0.629507303237915, 0.6756042838096619, 0.6976621150970459, 0.7120591998100281, 0.7279091477394104, 0.7425703406333923, 0.752212405204773, 0.7637035846710205, 0.7643640041351318, 0.7730814814567566, 0.7803460359573364, 0.7882710099220276, 0.7987055778503418, 0.7959318161010742, 0.8053097128868103, 0.8120459914207458, 0.8171972036361694, 0.8208954930305481, 0.828292191028595, 0.8384625315666199, 0.8368775844573975, 0.8430854678153992, 0.8466516733169556, 0.8500858545303345, 0.8508783578872681, 0.8595958352088928, 0.8560295701026917, 0.8597279191017151, 0.8638224601745605, 0.8683133125305176, 0.8689737319946289, 0.8676528930664062, 0.8726720213890076, 0.8750495314598083, 0.8750495314598083, 0.8815215826034546, 0.8784837126731873, 0.8829745054244995, 0.8842953443527222, 0.887597382068634, 0.8894465565681458, 0.8865407705307007, 0.8932769894599915, 0.8906353116035461, 0.8993527889251709, 0.9002773761749268, 0.9006736278533936, 0.9031832218170166, 0.895918607711792], "val_loss": [1.8574161529541016, 1.2223121438707625, 0.7432571990149361, 0.6853255033493042, 0.6158739839281354, 0.5811889341899327, 0.5618893078395298, 0.5438940354755947, 0.5298421893801007, 0.5052645036152431, 0.4871607848576137, 0.47270677770887104, 0.4578413111822946, 0.4515542473111834, 0.43254477637154715, 0.4213958297457014, 0.41238975524902344, 0.4008034127099173, 0.39277899265289307, 0.3854138510567801, 0.38016700744628906, 0.3748784916741507, 0.36735671758651733, 0.36019194977624075, 0.3560540931565421, 0.34819301537105013, 0.3457545297486441, 0.34307526690619333, 0.34314801011766705, 0.33896597794124056, 0.33346887145723614, 0.3349428687776838, 0.3303600123950413, 0.33085811138153076, 0.3289588689804077, 0.32794627121516634, 0.3279168946402414, 0.3236160618918283, 0.32670891284942627, 0.316466680594853, 0.32157381091799053, 0.31650762047086445, 0.3255440081868853, 0.31632312706538607, 0.3164405141557966, 0.3154417872428894, 0.31882928950445993, 0.3143401060785566, 0.31686105898448397, 0.31339564493724276, 0.3155447670391628, 0.3207119958741324], "val_accuracy": [0.46933332085609436, 0.5816666483879089, 0.6813333630561829, 0.7200000286102295, 0.7286666631698608, 0.7379999756813049, 0.749666690826416, 0.762333333492279, 0.7716666460037231, 0.777999997138977, 0.7856666445732117, 0.7933333516120911, 0.8016666769981384, 0.8056666851043701, 0.8153333067893982, 0.8193333148956299, 0.8263333439826965, 0.8333333134651184, 0.8379999995231628, 0.8399999737739563, 0.843666672706604, 0.8460000157356262, 0.8500000238418579, 0.8553333282470703, 0.8546666502952576, 0.8553333282470703, 0.8539999723434448, 0.8579999804496765, 0.8600000143051147, 0.862666666507721, 0.8650000095367432, 0.8659999966621399, 0.8640000224113464, 0.8633333444595337, 0.8606666922569275, 0.8686666488647461, 0.8679999709129333, 0.8666666746139526, 0.8700000047683716, 0.871666669845581, 0.8690000176429749, 0.871666669845581, 0.8700000047683716, 0.8703333139419556, 0.8743333220481873, 0.875, 0.878000020980835, 0.8736666440963745, 0.875, 0.875333309173584, 0.8763333559036255, 0.8730000257492065]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 2, 1, 0, 2, 2, 0, 2, 3, 3, 0], [85, 40, 29, 64, 25, 26, 10], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [8], [0, 1, 0, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [2, 0, 2, 2], [15, 52, 13, 92, 77]], "fitness": -0.49971428513526917, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.358380625512795, 2.1893067558947616, 2.3040054658495, 2.298701016248855, 2.3034499802247423, 2.234881624207442], "accuracy": [0.1814819723367691, 0.2056531459093094, 0.18491612374782562, 0.12812046706676483, 0.09932637959718704, 0.14753665030002594], "val_loss": [1.8696114676339286, 1.907761710030692, 1.986694608415876, 1.9766499655587333, 1.961113725389753, 1.9746472494942802], "val_accuracy": [0.3956666588783264, 0.22466666996479034, 0.0949999988079071, 0.10233332961797714, 0.11800000071525574, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 29, 49, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [36], [0, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [69, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 5, 5, 3, 2, 0, 3, 1, 1, 0, 0, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), grad)), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, tf.math.sqrt(tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3959389017904437.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.046889446675777435, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [90, 32, 29, 49, 25], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [3, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 5, 3, 0, 3, 3, 9], [2, 2, 3, 0, 2, 1, 0, 3, 1, 1, 0, 1, 3, 0, 1, 2, 3, 3, 1, 2, 0, 0], [39, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 1, 3, 1, 1, 0, 0, 17, 11, 6, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, beta), tf.math.square(tf.math.multiply(sigma, tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [1, 1, 9, 1, 2], [1, 2, 2], [58, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 1, 0, 1, 1], [3, 1, 9, 1, 2], [1, 2, 2], [15, 53, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 0, 0, 2, 2, 2, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 1, 0, 0, 0, 9, 3, 9], [1, 2, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [69], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [1, 0, 1, 1, 0, 0, 1], [3, 1, 9, 1, 2], [0, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027374020751443, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8, 1, 9], [3, 0, 2, 0, 1, 0, 1, 2, 0, 2, 3, 3, 0], [30, 56, 29, 20, 25, 26, 10], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [6, 1, 0, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 9, 9, 1, 6, 7, 8, 7, 4, 7, 6], [0, 0, 2], [15, 71, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 19, 12, 6, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, grad)))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3027373705841154, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 4, 1, 1, 2, 5, 6, 4, 0, 0, 1, 3, 8, 4, 2, 2, 2, 6, 8], [1, 0, 2, 0, 2, 0, 1, 1, 0, 2, 1, 2], [15, 52, 13, 64]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(alpha, tf.math.sqrt(tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0812310129404068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 1, 6, 2, 3, 0, 3, 9, 2, 4, 2, 6, 3, 6, 5, 8], [3, 1, 1, 0, 1, 0, 0, 2, 0, 2, 3, 3, 0], [84, 2, 29, 49, 25], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [29], [0, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 0, 0, 1, 1, 1, 1], [3, 4, 0, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 3, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 6, 3, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), alpha)))), tf.math.negative(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 9, 2, 4, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 0, 47, 49, 25], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [4, 1, 0, 0, 0, 9, 3, 9], [1, 2, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [69], [0, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 1, 0, 1, 1], [3, 7, 9, 1, 2, 8], [1, 1, 2], [88, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 3, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))))), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [34.53945529667173, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10447761416435242, 0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1311.24951171875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 29, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 5, 0, 0, 0, 9, 3, 9], [1, 2, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [7, 1, 9, 1, 2], [2, 2, 3, 0, 2, 1, 0, 3, 1, 1, 0, 1, 3, 0, 1, 2, 3, 3, 1, 2, 0, 0], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.square(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10487385839223862, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [5, 2, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [1, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.math.sqrt(tf.math.negative(beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [Infinity, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.052569013088941574, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [97, 32, 29, 49, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [2, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 1, 1, 1], [3, 1, 9, 1, 2], [0, 0, 2], [63, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 5, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [90, 32, 29, 49, 25], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [2, 8, 0, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [36], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [3, 0, 2, 4, 2, 4, 8, 4, 2, 0, 1, 5, 0, 2, 8, 0, 6, 7, 6, 6, 0, 6, 6, 1, 2, 7, 8, 1, 0, 1, 6, 2], [2, 2, 3, 0, 2, 1, 1, 3, 1, 1, 0, 1, 3, 0, 1, 2, 3, 3, 1, 2, 0, 0], [59, 90, 43, 11, 90, 5]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 0, 1, 0, 0, 0, 0, 21, 12, 9, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.pow(beta, tf.math.add(sigma, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.subtract(beta, alpha)))), tf.math.square(alpha)), sigma)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [6, 8, 7, 1, 1, 2, 1, 6, 4, 0, 0, 1, 3, 8, 8, 2, 2, 2, 6, 8], [1, 0, 2, 1, 3, 0], [15, 3, 13, 40, 91]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.subtract(alpha, tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 0, 0, 2, 2, 2, 1, 3, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [2, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [69], [0, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [1, 0, 1, 1, 0, 0, 1], [3, 1, 9, 1, 2], [3, 0, 2], [15, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 17, 17, 10, 7, 4, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3027518641726687, 2.3027313216613376, 2.3013314942264316, 2.302522422363257, 2.302665077762959, 2.3032062113513376], "accuracy": [0.08889182657003403, 0.08994849026203156, 0.09615638852119446, 0.08875974267721176, 0.09232597798109055, 0.09074098616838455], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [4, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [13, 53, 67, 34], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [1, 1, 0, 1, 1, 1], [3, 1, 9, 1, 6, 7, 8, 7, 4, 7, 6], [3, 0, 2, 2, 2, 3, 1, 0, 1], [62, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3027518641726687, 2.3027313216613376, 2.3013314942264316, 2.302522422363257, 2.302665077762959, 2.3032062113513376], "accuracy": [0.08889182657003403, 0.08994849026203156, 0.09615638852119446, 0.08875974267721176, 0.09232597798109055, 0.09074098616838455], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 5, 0, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 2, 2], [15, 52, 13]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.subtract(beta, beta)))", "other_info": {"loss": [2.3028044905944065, 2.3031120903975992, 2.302325157079368, 2.3043749286451076, 2.3055985503901484, 2.3073392395865504], "accuracy": [0.08889182657003403, 0.08942015469074249, 0.09430722147226334, 0.08532558381557465, 0.08492933213710785, 0.08149518072605133], "val_loss": [1.9711196081978934, 1.9715818677629744, 1.9722777775355749, 1.9731713022504533, 1.9742287227085658, 1.975423880985805], "val_accuracy": [0.03766666725277901, 0.035999998450279236, 0.033666666597127914, 0.030666666105389595, 0.02566666714847088, 0.02133333310484886]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 4, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 1, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.010857142508029938, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3051023875654586, 2.3211252150235158, 2.355162591730142, 2.4208692179505915, 2.5523486541105127, 2.920168152543233], "accuracy": [0.08281600475311279, 0.05388984456658363, 0.028397833928465843, 0.012944129295647144, 0.007924976758658886, 0.007528727874159813], "val_loss": [1.9792261123657227, 2.0032721928187778, 2.0467378071376254, 2.1229076385498047, 2.291330337524414, 2.9197664942060197], "val_accuracy": [0.013000000268220901, 0.00566666666418314, 0.004000000189989805, 0.004666666500270367, 0.006000000052154064, 0.007333333138376474]}}]