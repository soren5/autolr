[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8], [1, 0, 2, 0, 0, 0, 2], [42, 52, 13, 96, 41]], "fitness": -0.8482857346534729, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 18, 11, 7, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), beta))))", "other_info": {"loss": [2.205641910431801, 1.4313574519375958, 0.9539101813463345, 0.7852687090379435, 0.7223084018041807, 0.6758881035718337, 0.6500127908812223, 0.6141417909370768, 0.5942979861543384, 0.5649137962543103, 0.5506203630108796, 0.5460871542843184, 0.5273872571079061, 0.508593336497599, 0.49168854619628166, 0.4913742328993853, 0.470784118981362, 0.4538820020558261, 0.4503648648479627, 0.444211836287752, 0.4340204409698942, 0.41733683517989767, 0.40924830977801147, 0.40030003439134626, 0.4006781288149681, 0.38384271759587574, 0.3741448466583502, 0.37537225712449435, 0.3624642572311945, 0.3490873539389526, 0.3518864768111333, 0.3415766299408598], "accuracy": [0.24963676929473877, 0.5149914026260376, 0.6538106203079224, 0.7054550051689148, 0.7288337349891663, 0.7465327978134155, 0.7621186375617981, 0.774798572063446, 0.7788931727409363, 0.7861577272415161, 0.7984414100646973, 0.8025360107421875, 0.8054417967796326, 0.8099326491355896, 0.8164047002792358, 0.81548011302948, 0.8244617581367493, 0.83119797706604, 0.8305375576019287, 0.8366134166717529, 0.8412362933158875, 0.8450667262077332, 0.8450667262077332, 0.8504821062088013, 0.8529917001724243, 0.8607845902442932, 0.8656716346740723, 0.8562937378883362, 0.8636903762817383, 0.8721436858177185, 0.8702945709228516, 0.8747853636741638], "val_loss": [1.5304683957781111, 0.7048262868608747, 0.593969634601048, 0.5545069830758231, 0.5254909140723092, 0.5030808789389474, 0.47777351311274935, 0.46317204407283236, 0.45411029883793425, 0.4394328423908779, 0.4313003846577236, 0.42434871196746826, 0.42830890417099, 0.41149967908859253, 0.40488400629588533, 0.39138701132365633, 0.3799880487578256, 0.3698435255459377, 0.3638169254575457, 0.3647031613758632, 0.35751313822610037, 0.34755916254861013, 0.35080996581486296, 0.35420424597603933, 0.3422038129397801, 0.33239610706056866, 0.3314259222575596, 0.3268898640360151, 0.3330627509525844, 0.33536512511117117, 0.32347404956817627, 0.3217742272785732], "val_accuracy": [0.5383333563804626, 0.7006666660308838, 0.7379999756813049, 0.7559999823570251, 0.7670000195503235, 0.7770000100135803, 0.7926666736602783, 0.7943333387374878, 0.7929999828338623, 0.8133333325386047, 0.8106666803359985, 0.8226666450500488, 0.8159999847412109, 0.8270000219345093, 0.8303333520889282, 0.8373333215713501, 0.8393333554267883, 0.8450000286102295, 0.8483333587646484, 0.8496666550636292, 0.8550000190734863, 0.8573333621025085, 0.8536666631698608, 0.8543333411216736, 0.8610000014305115, 0.8646666407585144, 0.8656666874885559, 0.8636666536331177, 0.8600000143051147, 0.8616666793823242, 0.8643333315849304, 0.8653333187103271]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [3, 6, 9, 1, 2, 0, 5, 3, 2, 2, 8, 8, 5, 7, 7, 5, 2, 0, 0, 8, 6, 7, 9, 2, 9], [1, 0, 1, 0, 0, 1, 2, 3, 1, 1, 1, 1], [42, 52, 13, 96, 41, 21, 22]], "fitness": -0.817714273929596, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 36, 25, 11, 6], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), alpha), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, beta)), tf.math.add(tf.math.square(tf.math.add(tf.math.negative(tf.math.negative(tf.math.sqrt(sigma))), tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha)))), tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [2.248022363075979, 1.7508687085447814, 1.1779995062930346, 0.8909608297706391, 0.7821013641127538, 0.7255043932286551, 0.6906907236051755, 0.662825444922109, 0.6370416232119651, 0.606371254087077, 0.5939613885458167, 0.5913593311666293, 0.571745817718914, 0.5572966678488004, 0.5447823431403362, 0.545833503447346, 0.5265384381158461, 0.5080040493551231, 0.5117855642324016, 0.5049181269018516, 0.4927874248434981, 0.4760198946154081, 0.4771041950891676, 0.4723088898796998, 0.46487867269281696, 0.45382269499340017, 0.44898982652504965, 0.4476942728617881, 0.4312039433162069, 0.43538567044747234, 0.4359755711532807, 0.4271550228992206, 0.41486483339966723, 0.4097179321013957, 0.40337206147145666, 0.39499688927114224, 0.39286271078932034, 0.3894099211136993, 0.3835825608855524, 0.42728688982672713, 0.415997136636669, 0.38954832833425135], "accuracy": [0.2078985571861267, 0.4531765878200531, 0.5735041499137878, 0.6791704893112183, 0.7123233675956726, 0.7313432693481445, 0.7465327978134155, 0.7537974119186401, 0.7667415142059326, 0.774798572063446, 0.783119797706604, 0.7824593782424927, 0.7876105904579163, 0.7955356240272522, 0.7971205711364746, 0.7950072884559631, 0.8075551390647888, 0.8125742673873901, 0.8117818236351013, 0.8131026029586792, 0.8227446675300598, 0.8227446675300598, 0.8211596608161926, 0.8228767514228821, 0.8294808864593506, 0.8378021121025085, 0.8355567455291748, 0.8360850811004639, 0.8455950617790222, 0.8429533839225769, 0.8401796221733093, 0.8454629778862, 0.8467837572097778, 0.8510104417800903, 0.8544445633888245, 0.8553691506385803, 0.8479725122451782, 0.8585391640663147, 0.8593316674232483, 0.8421608805656433, 0.8471800088882446, 0.8558974862098694], "val_loss": [1.770186151776995, 0.9166807106563023, 0.6819941656930106, 0.6140853336879185, 0.5638785191944667, 0.535017558506557, 0.5062355313982282, 0.49056453364236013, 0.47921643938337055, 0.4649097067969186, 0.46025609970092773, 0.45177059514181955, 0.45229245935167584, 0.4424046277999878, 0.4376709461212158, 0.42789855173655916, 0.41532494340624126, 0.41386243275233675, 0.4035944087164743, 0.40080896445683073, 0.3958197150911604, 0.39103879247392925, 0.38798817566462923, 0.3885181375912258, 0.3834877780505589, 0.37532677820750643, 0.3721241354942322, 0.3644165311540876, 0.36451172828674316, 0.3693122182573591, 0.36305281094142366, 0.36136867318834576, 0.3610176018306187, 0.3505579318319048, 0.34371793270111084, 0.3446434565952846, 0.3429081610270909, 0.3477623973573957, 0.3382812312671116, 0.36861521005630493, 0.35084809575762066, 0.3477377806391035], "val_accuracy": [0.4726666808128357, 0.652999997138977, 0.7203333377838135, 0.7366666793823242, 0.7423333525657654, 0.765333354473114, 0.7876666784286499, 0.7856666445732117, 0.7943333387374878, 0.8013333082199097, 0.8063333630561829, 0.8046666383743286, 0.7996666431427002, 0.8109999895095825, 0.8153333067893982, 0.8193333148956299, 0.828000009059906, 0.8230000138282776, 0.8366666436195374, 0.8410000205039978, 0.8343333601951599, 0.8346666693687439, 0.8379999995231628, 0.8416666388511658, 0.8396666646003723, 0.8496666550636292, 0.8463333249092102, 0.8456666469573975, 0.8529999852180481, 0.8506666421890259, 0.8500000238418579, 0.8493333458900452, 0.8543333411216736, 0.8566666841506958, 0.8566666841506958, 0.8566666841506958, 0.8610000014305115, 0.8556666374206543, 0.8579999804496765, 0.8516666889190674, 0.8556666374206543, 0.8543333411216736]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [3, 1, 9, 1, 2, 5, 5, 3, 2, 2, 8, 0], [1, 0, 2, 0, 3, 0, 3], [25, 52, 13, 38, 41]], "fitness": -0.8019999861717224, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 19, 12, 7, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), sigma)), tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), sigma))))", "other_info": {"loss": [2.164131365369072, 1.2767786894019695, 0.8703162815781507, 0.7539418861142019, 0.6942120857714914, 0.65283343950519, 0.625510222805395, 0.5884441228637827, 0.5647535731196954, 0.5341492966260294, 0.5256703376470855, 3.982734023162024e+21, NaN, NaN, NaN, NaN], "accuracy": [0.2685246467590332, 0.5568616986274719, 0.6808875799179077, 0.7136441469192505, 0.7382115721702576, 0.7574957013130188, 0.7703077793121338, 0.7849689722061157, 0.785101056098938, 0.7964601516723633, 0.8039889335632324, 0.6627922058105469, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.304194688796997, 0.6677850484848022, 0.5741562502724784, 0.5443155084337506, 0.51295006275177, 0.49127561705453054, 0.4575137751443045, 0.44656082562037874, 0.43699775423322407, 0.41776418685913086, 0.41125851018088205, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.5523333549499512, 0.7266666889190674, 0.7413333058357239, 0.7590000033378601, 0.7706666588783264, 0.7886666655540466, 0.8040000200271606, 0.8113333582878113, 0.8066666722297668, 0.82833331823349, 0.8323333263397217, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 1, 9, 1, 2, 1, 5, 3, 2, 2, 8, 6, 3, 4, 8], [1, 0, 2, 0, 0, 0, 2, 3, 3], [42, 52, 13, 96, 41]], "fitness": -0.7994285821914673, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 21, 12, 9, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), beta), tf.math.divide_no_nan(sigma, sigma)))))", "other_info": {"loss": [2.271424918394551, 2.177744786060088, 1.9740696994462552, 1.6634562616067368, 1.384802237556532, 1.212391524786616, 1.1109132383320357, 1.0141849714562468, 0.9675902939979599, 0.9223336855402523, 0.8876384016923019, 0.8639399172166682, 0.8479302467025739, 0.8249442261270858, 0.8080903189986247, 0.7777680318904449, 0.7559090237638907, 0.7519512681787229, 0.7452025853127946, 0.7370814897396529, 0.7273215109394086, 0.7102142446832477, 0.7041150588149078, 0.7041136233829599, 0.6913798710437357, 0.681393673572369, 0.6831705877809571, 0.6731152664700267, 0.6686365382231426, 0.6584828050302524, 0.6544632409793857, 0.651075191785001, 0.6431769522394345, 0.6384812089209985, 0.6411896674718996, 0.6309441484008026, 0.6347348677515275, 0.6248613110528315, 0.6232696520480749, 0.6038207695027856, 0.607547743138447], "accuracy": [0.16642451286315918, 0.3121120035648346, 0.4233258366584778, 0.48632940649986267, 0.5387663245201111, 0.5855237245559692, 0.6124686598777771, 0.6427156329154968, 0.6622639298439026, 0.6725663542747498, 0.6848500967025757, 0.6901333928108215, 0.6917183995246887, 0.7037379741668701, 0.7088891863822937, 0.7154933214187622, 0.7265883088111877, 0.7256637215614319, 0.7316074371337891, 0.7309470176696777, 0.7309470176696777, 0.7417778372764587, 0.7420420050621033, 0.7400607466697693, 0.7485140562057495, 0.750231146812439, 0.7469290494918823, 0.7544577717781067, 0.750231146812439, 0.7581561207771301, 0.7576277852058411, 0.7586844563484192, 0.7644960880279541, 0.7623828053474426, 0.763439416885376, 0.7695152759552002, 0.7644960880279541, 0.7701756954193115, 0.7687227725982666, 0.7781006693840027, 0.7740060687065125], "val_loss": [1.9000628335135323, 1.7661397116524833, 1.4898225239345007, 1.1710567474365234, 0.9579887049538749, 0.8379888534545898, 0.7680337258747646, 0.7112807886941093, 0.6815543515341622, 0.6515412160328456, 0.6267415625708443, 0.6180316550391061, 0.6047164882932391, 0.5907599925994873, 0.5770418133054461, 0.5670124122074672, 0.5584627560206822, 0.5512596539088658, 0.5489164931433541, 0.5535059826714652, 0.536827666418893, 0.5301979609898159, 0.5295290606362479, 0.5207846164703369, 0.5132669040134975, 0.5204076596668789, 0.5127479178564889, 0.5050698689052037, 0.5039707592555455, 0.4989232335771833, 0.5048086983816964, 0.49657629217420307, 0.49614223412105013, 0.490288325718471, 0.48563226631709505, 0.47999743052891325, 0.4803735017776489, 0.4808771439961025, 0.4824868781226022, 0.4800324780600412, 0.4752270494188581], "val_accuracy": [0.38966667652130127, 0.4830000102519989, 0.5646666884422302, 0.6100000143051147, 0.6880000233650208, 0.6890000104904175, 0.6936666369438171, 0.7206666469573975, 0.7200000286102295, 0.7379999756813049, 0.750333309173584, 0.7450000047683716, 0.7526666522026062, 0.7513333559036255, 0.7553333044052124, 0.7613333463668823, 0.7590000033378601, 0.7676666378974915, 0.7643333077430725, 0.7583333253860474, 0.7743333578109741, 0.7720000147819519, 0.7766666412353516, 0.7816666960716248, 0.7860000133514404, 0.7663333415985107, 0.7796666622161865, 0.7786666750907898, 0.7850000262260437, 0.7886666655540466, 0.7839999794960022, 0.7866666913032532, 0.7853333353996277, 0.7863333225250244, 0.7976666688919067, 0.7986666560173035, 0.79666668176651, 0.7983333468437195, 0.7860000133514404, 0.7903333306312561, 0.7976666688919067]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8], [2, 0, 1, 3, 0, 0, 2], [42, 52, 13, 96, 41]], "fitness": -0.6842857003211975, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2633806583100715, 1.8994424983479201, 1.3855312601324274, 1.0006873373499698, 0.8901190693037401, 0.8200788418173774, 0.7812739112720104, 0.7557054546216003, 0.7194447323016644, 0.6850743358318816, 0.6553045640437674, 0.6314750651106497, 0.6069026169618201, 0.5861591401510802, 0.5666966641331865, 0.5574914463491267, 0.5411865929759898, 0.5123051993047966, 0.5051549780937218, 0.5043848746677259, 0.4907545447388912, 0.488825138199205, 0.4662160904667932, 0.458350132319748, 0.4454740780479384, 0.4420772284966072, 0.43166010964894574, 0.41074756158262654, 0.42154135784421376, 0.4052939757521693, 0.40217002418535325, 0.3938185885487578, 0.3893355785808417, 0.38646151891647157, 0.3751992768402727, 0.3664909076964646, 0.35493687992287415, 0.3644879593305647, 0.35582290601421734, 0.3419424702998055, 0.34705568931720293, 0.3310296894607763, 0.33617967896615164, 0.34001912258288897, 0.3387182748761742, 0.31855114866965767, 0.32285467596763257, 0.30911344487385867, 0.32706668948563505, 0.3332505737352743, 0.3203171222650175], "accuracy": [0.18557654321193695, 0.4208162724971771, 0.54220050573349, 0.6413947939872742, 0.672170102596283, 0.6876237988471985, 0.6966054439544678, 0.709549605846405, 0.7240787148475647, 0.7420420050621033, 0.7493065595626831, 0.7621186375617981, 0.7648923397064209, 0.785101056098938, 0.7795535326004028, 0.7852331399917603, 0.7964601516723633, 0.8054417967796326, 0.81548011302948, 0.8152159452438354, 0.8149517774581909, 0.8195747137069702, 0.8260467648506165, 0.8293488025665283, 0.8323867321014404, 0.8409721255302429, 0.8343679904937744, 0.8424250483512878, 0.8432175517082214, 0.8471800088882446, 0.8467837572097778, 0.8564258217811584, 0.8488970994949341, 0.8544445633888245, 0.8520671129226685, 0.8605204224586487, 0.8590674996376038, 0.8642187118530273, 0.8668603897094727, 0.8639545440673828, 0.86553955078125, 0.8697662353515625, 0.8698983192443848, 0.8658037185668945, 0.8689737319946289, 0.874389111995697, 0.8737286925315857, 0.8791441321372986, 0.8749174475669861, 0.8749174475669861, 0.8732003569602966], "val_loss": [1.8343836920601981, 1.0797148432050432, 0.7616571869168963, 0.7093755006790161, 0.602560145514352, 0.598731279373169, 0.5765851225171771, 0.567175166947501, 0.5444601093019757, 0.5032293796539307, 0.47828214509146555, 0.47757584708077566, 0.45429723603384836, 0.43919878346579416, 0.4488119397844587, 0.4320803625243051, 0.41524480070386616, 0.40691083669662476, 0.4183174286569868, 0.4116718683923994, 0.4147538798195975, 0.3857783079147339, 0.39105361700057983, 0.38210502692631315, 0.37978228500911165, 0.3985296402658735, 0.3770641599382673, 0.37812782185418264, 0.3795831373759678, 0.3755977749824524, 0.4029013769967215, 0.3920339601380484, 0.3812655636242458, 0.39118519851139616, 0.3819619757788522, 0.3671803559575762, 0.39478714976991924, 0.3973872491291591, 0.37093148061207365, 0.3547169991901943, 0.3681296025003706, 0.3813312223979405, 0.38231452873774935, 0.3946410758154733, 0.38690441846847534, 0.40438634157180786, 0.42488497495651245, 0.4313316345214844, 0.433271552835192, 0.44711857182638987, 0.4230207545416696], "val_accuracy": [0.44433334469795227, 0.6106666922569275, 0.7099999785423279, 0.7089999914169312, 0.7329999804496765, 0.734000027179718, 0.7450000047683716, 0.7613333463668823, 0.762333333492279, 0.7746666669845581, 0.7923333048820496, 0.7946666479110718, 0.8086666464805603, 0.8149999976158142, 0.8196666836738586, 0.8149999976158142, 0.8209999799728394, 0.831333339214325, 0.8330000042915344, 0.8346666693687439, 0.8366666436195374, 0.8423333168029785, 0.8463333249092102, 0.8479999899864197, 0.8460000157356262, 0.8516666889190674, 0.8453333377838135, 0.8546666502952576, 0.8579999804496765, 0.8619999885559082, 0.8633333444595337, 0.8529999852180481, 0.8576666712760925, 0.856333315372467, 0.8636666536331177, 0.8606666922569275, 0.859000027179718, 0.8666666746139526, 0.8633333444595337, 0.8666666746139526, 0.8629999756813049, 0.8613333106040955, 0.8669999837875366, 0.8650000095367432, 0.8643333315849304, 0.871666669845581, 0.8690000176429749, 0.8690000176429749, 0.8676666617393494, 0.8643333315849304, 0.8693333268165588]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 1, 2, 1, 2, 0, 5, 3, 2, 2, 8], [1, 0, 2, 0, 0, 0, 2, 1, 0], [42, 23, 17, 96, 41]], "fitness": -0.11599999666213989, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 19, 10, 9, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), beta), tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [2.390292332267182, 2.802750591714668, 3.2942512061192515, 2.4765748846658453, 2.4563118056409534, 2.8194344629464827, 3.688379727901327, 5.426945599614038, 8.197729628178358], "accuracy": [0.03724738955497742, 0.017038701102137566, 0.04649319872260094, 0.0956280529499054, 0.1150442510843277, 0.10447761416435242, 0.09853387624025345, 0.09972262382507324, 0.09747721254825592], "val_loss": [2.371952329363142, 2.540243625640869, 2.1385883603777205, 2.045761380876814, 2.246803419930594, 2.752880028315953, 3.898975372314453, 5.847865513392857, 8.893186024257115], "val_accuracy": [0.007333333138376474, 0.06366666406393051, 0.0949999988079071, 0.1809999942779541, 0.14366666972637177, 0.09566666930913925, 0.10366666316986084, 0.10366666316986084, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 9, 1, 2, 6, 5, 3, 2, 2, 8], [2, 0, 1, 3, 0, 0, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [12012459.199461548, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04504028707742691, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.6111341530875057e+23, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [6, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 9, 1, 2, 6, 5, 3, 2, 2, 8], [1, 0, 2, 0, 0, 0, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3018222727779984, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [9, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 1, 3, 1, 2, 0, 5, 3, 2, 3, 8, 8], [2, 0, 2, 1, 0, 0, 2, 3, 0], [25, 52, 13, 47, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 21, 12, 9, 4], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(alpha), tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), beta))))), sigma), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [4, 1], [64], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 9, 1, 2, 6, 5, 3, 2, 2, 8], [1, 0, 2, 0, 0, 0, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [19.59275426513184, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16880200803279877, 0.10381719470024109, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [23.720279148646764, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 9, 1, 2, 6, 5, 3, 2, 2, 8], [1, 0, 2, 0, 0, 0, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [19.63637095917296, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16880200803279877, 0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [22.087181091308594, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 9, 1, 2, 6, 5, 3, 2, 2, 8], [1, 0, 2, 0, 0, 0, 2], [42, 52, 31, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3033013430096454, 2.305363479370391, 2.3043382292520636, 2.305421333176947, 2.307407238354001, 2.3064633536222288, 2.3071932899103254, 2.3079503145294735, 2.3084823646565567], "accuracy": [0.09338264167308807, 0.09430722147226334, 0.09919429570436478, 0.09470347315073013, 0.0952318087220192, 0.09945846349000931, 0.09377889335155487, 0.09826971590518951, 0.09985470771789551], "val_loss": [1.9739082881382533, 1.9746593066624232, 1.9759899548121862, 1.9760287829807825, 1.9746533121381487, 1.9765501022338867, 1.978665896824428, 1.9794158254350935, 1.9780195099966866], "val_accuracy": [0.10199999809265137, 0.10066666454076767, 0.10233332961797714, 0.10366666316986084, 0.10233332961797714, 0.0949999988079071, 0.09666666388511658, 0.10233332961797714, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 9, 0, 0, 0, 5, 3, 2, 2, 8], [2, 0, 1, 3, 0, 0, 2], [18, 81, 89, 86, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07040020823478699, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8, 6, 4, 0, 2, 8], [1, 2, 2, 0, 0, 0, 2, 3, 0, 1], [42, 33, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10738343745470047, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [28, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [6, 7, 8, 4], [1, 1], [64], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8], [1, 0, 2, 2, 0, 0, 2], [18, 81, 89, 86, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 18, 11, 7, 4], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.sqrt(beta), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [2, 1, 9, 1, 2, 0, 5, 3, 2, 0, 2], [2, 0, 1, 3, 0, 0, 2], [5, 52, 13, 60, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 15, 9, 6, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(alpha, sigma), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.306631127463167, 2.4132324325693535, 4.167686478840661, 17.805944839787916, 66.08904347881398, 160.3950755238108, 332.3131953702863, 801.7827068062318, 1122.1361159603152, 1354.9879858369416], "accuracy": [0.0882314071059227, 0.09642054885625839, 0.1014397069811821, 0.10408136248588562, 0.10315678268671036, 0.09906221181154251, 0.10421344637870789, 0.10077928751707077, 0.09998679161071777, 0.10328886657953262], "val_loss": [1.9812538964407784, 2.3063837460109164, 7.719961166381836, 31.12773677280971, 106.87834167480469, 205.70135062081474, 282.3594970703125, 815.1159144810268, 1121.9217703683037, 1251.341029575893], "val_accuracy": [0.10199999809265137, 0.09799999743700027, 0.10199999809265137, 0.09666666388511658, 0.10366666316986084, 0.10066666454076767, 0.10066666454076767, 0.09799999743700027, 0.09799999743700027, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 3, 9, 1, 2, 1, 5, 2, 2, 2, 8, 6, 3, 4, 2, 2, 5, 6, 8, 3, 4, 2, 0, 6, 6, 4, 5, 0, 9, 5], [1, 0, 2, 0, 0, 0, 2, 2, 1, 2, 0, 2, 2, 3, 2, 2, 3, 0, 0, 2, 1], [42, 52, 75, 96, 41, 49, 31, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 48, 28, 20, 8], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.add(alpha, beta)), tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(beta, sigma))), beta), tf.math.pow(beta, sigma)), tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [3, 9, 9, 1, 3, 0, 5, 3, 2, 2, 8], [1, 0, 2, 0, 0, 0, 2], [42, 52, 13, 89, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07040020823478699, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 3, 2, 2, 3, 1, 8, 3, 6, 5, 1, 6, 5, 7, 6, 2, 5, 2, 9, 1], [2, 0, 1, 3, 0, 0, 2, 1, 3, 0, 0, 1, 3, 3, 2, 3, 2, 1], [9, 23, 17, 96, 41, 40, 16]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 45, 27, 18, 7], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.multiply(alpha, tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), beta), alpha)), tf.math.sqrt(tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), alpha), tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.add(sigma, sigma), beta), tf.math.square(sigma))))), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(beta, alpha)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [3, 1, 9, 1, 4, 0, 5, 3, 2, 3, 8], [1, 0, 1, 3, 0, 0, 2], [9, 23, 17, 96, 41]], "fitness": -0.02857142873108387, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302064142270001, 2.3064061093245356, 2.3158822580807876, 2.3321629102440116, 2.354691964350892, 2.3844209556582108], "accuracy": [0.08770307898521423, 0.08189142495393753, 0.06472064554691315, 0.04504028707742691, 0.026416590437293053, 0.0169066172093153], "val_loss": [1.9733700071062361, 1.980233601161412, 1.9918139321463448, 2.0084100450788225, 2.0308822904314314, 2.060777868543352], "val_accuracy": [0.02866666577756405, 0.012333333492279053, 0.006000000052154064, 0.005333333276212215, 0.004666666500270367, 0.004333333112299442]}}]