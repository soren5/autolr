[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 8, 8, 6, 5, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.75, "mapping_values": [1, 16, 16, 10, 6, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(alpha))))))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.296106825352282, 2.255665742836104, 2.1703280695614295, 1.9816068197206782, 1.6600709278758932, 1.408770132420668, 1.3535247390075933, 1.2040014403481383, 0.9913149738292873, 0.8974989153973226, 0.906399076766877, 0.8537772390127907, 0.8004781150972177, 0.8110351368830173, 0.8087919482056176, 0.7985638737237654, 0.7630732879426423, 0.7374689709697779, 0.7299846858160135, 0.7256250529320106, 0.707006369560087, 0.6981111393077514, 0.6875904403767644, 0.6892726510160903, 0.6761106562384557, 0.651352118153094, 0.6198155540579803, 0.621293786273987, 0.6037171743864302, 0.6039167139051833, 0.5962308952049761, 0.5888313337827891, 0.5704562769605657, 0.5617068607211034, 0.5621841489174394, 0.5491302283432788, 0.5424751451443436, 0.5259780234601503, 0.5264827970894116, 0.5257618232189688, 0.5117913496618682, 0.5082127919105444, 0.5089359216371374, 0.49528454040429215, 0.5004813884345689, 0.4927389029073457, 0.4885573398915768, 0.4885529476449065, 0.4751343787613955, 0.47395549554945127, 0.457871347252467, 0.47089250294634094, 0.46530142664248053, 0.451866779848884, 0.4518193225063243, 0.4450600325210991, 0.4478799250375924, 0.44031395654022704, 0.43213125998002977, 0.42458225261769855, 0.4185309712842093, 0.41676341584329957, 0.41494267762470965, 0.4063927285415527, 0.40872286724817514, 0.39486690603069674, 0.39859808744645436, 0.4001550602953841, 0.3852325426140293, 0.3841576630318752, 0.3855749388861225, 0.3782243523080005, 0.3690269776244662, 0.3697474875926908, 0.3637629035142403, 0.3578714357272997, 0.35549072736856757, 0.3610258367925729, 0.34762402709212836, 0.35801265563994444, 0.34762279471433427, 0.35246959630178026, 0.3441369347623657], "accuracy": [0.10500594228506088, 0.2118610441684723, 0.33205652236938477, 0.4113062918186188, 0.45185577869415283, 0.5101043581962585, 0.5527671575546265, 0.6050719618797302, 0.6470743417739868, 0.6530181169509888, 0.6684718132019043, 0.6876237988471985, 0.6984546184539795, 0.6951525807380676, 0.6960771083831787, 0.7037379741668701, 0.7067758440971375, 0.7107383608818054, 0.7129837274551392, 0.7290979027748108, 0.7362303733825684, 0.7415136694908142, 0.7417778372764587, 0.7371549606323242, 0.741909921169281, 0.7555144429206848, 0.7635715007781982, 0.7627789974212646, 0.7720248103141785, 0.7728173136711121, 0.7763835787773132, 0.7775723338127136, 0.7799497842788696, 0.7821952104568481, 0.7835160493850708, 0.796328067779541, 0.7976489067077637, 0.7992339134216309, 0.7976489067077637, 0.800818920135498, 0.8086118102073669, 0.81548011302948, 0.8090080618858337, 0.8162726163864136, 0.8096684813499451, 0.8166688680648804, 0.8177255392074585, 0.8235371708869934, 0.824329674243927, 0.8227446675300598, 0.8207634687423706, 0.8216879963874817, 0.8220842480659485, 0.828820526599884, 0.83119797706604, 0.8378021121025085, 0.8376700282096863, 0.8364813327789307, 0.8388587832450867, 0.8397833704948425, 0.8418967127799988, 0.8441421389579773, 0.8454629778862, 0.8451988101005554, 0.8479725122451782, 0.8533879518508911, 0.8491612672805786, 0.8487650156021118, 0.8553691506385803, 0.8593316674232483, 0.8508783578872681, 0.8564258217811584, 0.858671247959137, 0.8643507957458496, 0.8605204224586487, 0.859199583530426, 0.8636903762817383, 0.863029956817627, 0.8676528930664062, 0.8646149635314941, 0.8693699836730957, 0.8651432991027832, 0.8691058158874512], "val_loss": [1.9491079875401087, 1.891632148197719, 1.7748349734715052, 1.5049246038709367, 1.1094588211604528, 0.8435712712151664, 0.7461770943232945, 0.7202040978840419, 0.6536427395684379, 0.6879569462367466, 0.6745264530181885, 0.6123413188116891, 0.5901335988725934, 0.5949801206588745, 0.5903805834906442, 0.5789571149008614, 0.5562660012926374, 0.564369968005589, 0.5625416891915458, 0.5562590190342495, 0.5412480660847255, 0.5272714921406337, 0.5223243066242763, 0.5094840696879795, 0.48881670406886507, 0.47586824212755474, 0.4710691145488194, 0.4688307387488229, 0.4635885272707258, 0.4623740570885794, 0.454241190637861, 0.44112300872802734, 0.4399325336728777, 0.4406909261431013, 0.43758583068847656, 0.43234894956861225, 0.42942472866603304, 0.42970692259924753, 0.4246443935803005, 0.4180310368537903, 0.41382764066968647, 0.413267263344356, 0.4106530887739999, 0.40703455890928, 0.40615272521972656, 0.4084000587463379, 0.4081933668681553, 0.40423024552209036, 0.3972019978931972, 0.39277057136808124, 0.39188335623059956, 0.3903218763215201, 0.38883293526513235, 0.389414838382176, 0.388969429901668, 0.3869967375482832, 0.3857198527881077, 0.38517305680683683, 0.3843775987625122, 0.38043041740145, 0.3767783045768738, 0.3748341883931841, 0.3730139136314392, 0.37526353767939974, 0.3804078442709787, 0.3796854870659964, 0.3746721999985831, 0.37146869727543425, 0.371183489050184, 0.372857289654868, 0.37417987414768766, 0.3721123082297189, 0.3682423063686916, 0.3668708460671561, 0.36642674037388395, 0.37133617060525076, 0.37994115693228586, 0.3795851043292454, 0.3738189254488264, 0.3722619669778006, 0.38085492168154034, 0.38164582422801424, 0.38367366790771484], "val_accuracy": [0.24066667258739471, 0.4076666533946991, 0.45100000500679016, 0.515333354473114, 0.609000027179718, 0.6776666641235352, 0.6959999799728394, 0.7166666388511658, 0.7129999995231628, 0.737666666507721, 0.7390000224113464, 0.7400000095367432, 0.7386666536331177, 0.7403333187103271, 0.7400000095367432, 0.7429999709129333, 0.7523333430290222, 0.7559999823570251, 0.762333333492279, 0.7689999938011169, 0.768666684627533, 0.7726666927337646, 0.7723333239555359, 0.781333327293396, 0.7850000262260437, 0.7839999794960022, 0.784333348274231, 0.7863333225250244, 0.7893333435058594, 0.7916666865348816, 0.7986666560173035, 0.8080000281333923, 0.8103333115577698, 0.8109999895095825, 0.8140000104904175, 0.8173333406448364, 0.8193333148956299, 0.8166666626930237, 0.8203333616256714, 0.824999988079071, 0.8256666660308838, 0.8306666612625122, 0.8303333520889282, 0.8330000042915344, 0.82833331823349, 0.8343333601951599, 0.8386666774749756, 0.8410000205039978, 0.8420000076293945, 0.8429999947547913, 0.8433333039283752, 0.847000002861023, 0.8473333120346069, 0.8486666679382324, 0.8503333330154419, 0.8503333330154419, 0.8493333458900452, 0.8506666421890259, 0.8546666502952576, 0.8543333411216736, 0.8523333072662354, 0.8539999723434448, 0.8546666502952576, 0.8560000061988831, 0.8560000061988831, 0.8556666374206543, 0.8583333492279053, 0.8600000143051147, 0.8600000143051147, 0.8586666584014893, 0.8576666712760925, 0.859333336353302, 0.862333357334137, 0.8633333444595337, 0.8650000095367432, 0.8650000095367432, 0.8666666746139526, 0.8669999837875366, 0.8659999966621399, 0.8666666746139526, 0.8619999885559082, 0.8633333444595337, 0.8603333234786987]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 8, 8, 6, 5, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.732285737991333, "mapping_values": [1, 20, 20, 12, 8, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))))))))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.296106825352282, 2.255665742836104, 2.170328415868273, 1.9816104475659244, 1.660076843386927, 1.4087588731339737, 1.353478855019815, 1.2039611708486495, 0.9913408009367628, 0.8976037825780412, 0.906537265573526, 0.8540163302323948, 0.8004886967205904, 0.8115056698915272, 0.8090639631541303, 0.7989263029036159, 0.7632466045589243, 0.7373821272621411, 0.7302866212491267, 0.7259115162479596, 0.7074165005473538, 0.698554638732363, 0.6878039806415974, 0.6901333570527584, 0.6758973297740899, 0.6512601410219966, 0.6196097889675236, 0.6211652113084134, 0.6036473785834211, 0.6035301043152447, 0.5967718569546832, 0.5890107400161306, 0.5702978487279925, 0.5622326340012153, 0.563163611434155, 0.5490440196128742, 0.5422690245516627, 0.5269522203461936, 0.5273181015332582, 0.5260713501235419, 0.5116562954800996, 0.5080009735791029, 0.5086061306649101, 0.4949526639623003, 0.5000751951445899, 0.4927508923529067, 0.48752351051481596, 0.48872304171335584, 0.4747996538377567, 0.47392637259483716, 0.45868009067072985, 0.472604555838679, 0.4658164138082878, 0.45346728847042883, 0.4535863923831245, 0.4461782343824384, 0.4472147710941188, 0.44026575126998757, 0.43161211466792393, 0.42577029185020504, 0.41914828401735477, 0.41729158382720605, 0.41667463598848414, 0.40621618194555514, 0.4086205634253923, 0.393992682438422, 0.3999447721484598, 0.40182263800229034, 0.387441753660132, 0.38590712364103186, 0.38400566996348423, 0.3786070444808739, 0.37225692294781093, 0.36991016261880866, 0.36614190817288655, 0.3604199767207205, 0.35740729841684005, 0.3648186521546842, 0.3500592858051942, 0.3612342982078981, 0.3498878186806523, 0.35445857551103854, 0.34570212983625315, 0.3476011478637959], "accuracy": [0.10500594228506088, 0.2118610441684723, 0.33205652236938477, 0.4113062918186188, 0.45172369480133057, 0.5101043581962585, 0.5526350736618042, 0.6048077940940857, 0.6472064256668091, 0.6532822847366333, 0.6680755615234375, 0.6872276067733765, 0.6992471218109131, 0.6956809163093567, 0.6959450244903564, 0.7041342258453369, 0.7073041796684265, 0.711530864238739, 0.7128516435623169, 0.7288337349891663, 0.7362303733825684, 0.7407211661338806, 0.7413815855979919, 0.7362303733825684, 0.7421740889549255, 0.7556465268135071, 0.763967752456665, 0.7629110813140869, 0.7724210619926453, 0.772288978099823, 0.7774402499198914, 0.7778365015983582, 0.7816668748855591, 0.7820631265640259, 0.78113853931427, 0.7956677079200745, 0.7981772422790527, 0.7988376617431641, 0.7961959838867188, 0.7985734939575195, 0.8103289008140564, 0.8152159452438354, 0.8100647330284119, 0.8156121969223022, 0.8086118102073669, 0.8161405324935913, 0.8173292875289917, 0.8222163319587708, 0.8251221776008606, 0.8220842480659485, 0.8220842480659485, 0.821820080280304, 0.8228767514228821, 0.8290846943855286, 0.8308017253875732, 0.8347642421722412, 0.8367455005645752, 0.8325188159942627, 0.8393871188163757, 0.8404437899589539, 0.8405758738517761, 0.8442742228507996, 0.8441421389579773, 0.8450667262077332, 0.8502179384231567, 0.8541803956031799, 0.8520671129226685, 0.8492933511734009, 0.8544445633888245, 0.858671247959137, 0.8536521196365356, 0.8582749962806702, 0.8574824929237366, 0.8640866279602051, 0.8580108284950256, 0.8601241707801819, 0.8619733452796936, 0.8613129258155823, 0.8684453964233398, 0.8627657890319824, 0.8683133125305176, 0.8638224601745605, 0.8677849769592285, 0.8659358024597168], "val_loss": [1.949108055659703, 1.891632011958531, 1.7748361315046037, 1.5049314158303397, 1.1094683919634138, 0.8435544116156442, 0.7461787291935512, 0.7201779229300362, 0.6537875788552421, 0.6880538633891514, 0.6747229950768607, 0.6126105104173932, 0.5904093980789185, 0.5951944589614868, 0.5903963702065604, 0.5791568245206561, 0.5560252836772374, 0.5644744804927281, 0.5628270081111363, 0.5567319904054914, 0.5415738991328648, 0.5273173536573138, 0.5227550438472203, 0.5098553895950317, 0.48885795048304964, 0.47596585750579834, 0.471088102885655, 0.4687681027821132, 0.46329379081726074, 0.462523136820112, 0.45464539527893066, 0.44135425771985737, 0.44076899119785856, 0.4409453868865967, 0.43728200026920866, 0.4322274497577122, 0.42969327313559397, 0.4306214026042393, 0.4251591307776315, 0.41791439056396484, 0.4138317448752267, 0.41327573571886334, 0.41158303192683626, 0.4092683962413243, 0.408291825226375, 0.40890819685799734, 0.40818112237112864, 0.40470683574676514, 0.39714980125427246, 0.3928606595311846, 0.3929475631032671, 0.3918326752526419, 0.3900118981088911, 0.39089579241616385, 0.39026981592178345, 0.38728253330503193, 0.3856490595000131, 0.3852956805910383, 0.38568527357918875, 0.3826201728412083, 0.3786053316933768, 0.3760046362876892, 0.3730391263961792, 0.3750853623662676, 0.3822566100529262, 0.38371819257736206, 0.37797536168779644, 0.3736389790262495, 0.3727583203996931, 0.37298836026872906, 0.3736250826290676, 0.37282594612666536, 0.36914946351732525, 0.3690066252435957, 0.36831423214503695, 0.3726843850953238, 0.3819573862212045, 0.3865394507135664, 0.3836879815374102, 0.38282508509499685, 0.3880898186138698, 0.3836718201637268, 0.3792495216642107, 0.38163243872778757], "val_accuracy": [0.24066667258739471, 0.4076666533946991, 0.45100000500679016, 0.515333354473114, 0.609000027179718, 0.6776666641235352, 0.6959999799728394, 0.7170000076293945, 0.7129999995231628, 0.7366666793823242, 0.7393333315849304, 0.7406666874885559, 0.7393333315849304, 0.7390000224113464, 0.7403333187103271, 0.7433333396911621, 0.753000020980835, 0.7566666603088379, 0.7616666555404663, 0.7689999938011169, 0.7683333158493042, 0.7716666460037231, 0.7726666927337646, 0.7806666493415833, 0.7866666913032532, 0.7846666574478149, 0.784333348274231, 0.7866666913032532, 0.7910000085830688, 0.7919999957084656, 0.7979999780654907, 0.8090000152587891, 0.809333324432373, 0.8086666464805603, 0.812666654586792, 0.8186666369438171, 0.8206666707992554, 0.8163333535194397, 0.8193333148956299, 0.8266666531562805, 0.8270000219345093, 0.831333339214325, 0.831333339214325, 0.8309999704360962, 0.8256666660308838, 0.8323333263397217, 0.8410000205039978, 0.8423333168029785, 0.8410000205039978, 0.8426666855812073, 0.8416666388511658, 0.8460000157356262, 0.846666693687439, 0.8460000157356262, 0.8483333587646484, 0.8479999899864197, 0.8479999899864197, 0.8503333330154419, 0.8529999852180481, 0.8516666889190674, 0.8519999980926514, 0.8523333072662354, 0.8539999723434448, 0.8546666502952576, 0.8566666841506958, 0.8560000061988831, 0.856333315372467, 0.8613333106040955, 0.8606666922569275, 0.859666645526886, 0.8573333621025085, 0.8576666712760925, 0.8636666536331177, 0.8636666536331177, 0.8656666874885559, 0.8656666874885559, 0.8616666793823242, 0.8643333315849304, 0.8666666746139526, 0.8663333058357239, 0.8616666793823242, 0.8603333234786987, 0.8546666502952576, 0.8583333492279053]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 8, 8, 6, 5, 2, 6, 2, 4, 0, 4, 4], [2, 2, 2, 0, 3, 1, 0, 1, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7137143015861511, "mapping_values": [1, 15, 15, 9, 6, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.pow(grad, alpha))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3002535744806747, 2.294992242554128, 2.289064033990995, 2.2825147854637837, 2.2786462120549427, 2.2727088207078094, 2.2685973712907033, 2.261951559334068, 2.256694872334271, 2.2488433989425456, 2.2444250720004835, 2.2368220854051173, 2.2300409598357454, 2.22233142369081, 2.2148212011007504, 2.2068141382824806, 2.1989529675748356, 2.1852374331920594, 2.1778972109531476, 2.1674318522069242, 2.1583976304416157, 2.1426807225514177, 2.1312427236387963, 2.1157634294799856, 2.099630696819821, 2.085621095462608, 2.0710430003239133, 2.0505814942795886, 2.033715872134137, 2.010901776003784, 1.9928857475113733, 1.9720022850788628, 1.948736981945015, 1.9280858874525675, 1.8968961145175274, 1.8751128355525566, 1.8531605889532372, 1.8245151312658894, 1.7999458873213683, 1.7706112097818396, 1.7522556054011122, 1.7161193090958318, 1.6966494327806416, 1.6576766504225493, 1.6330405244139505, 1.606007573375014, 1.5791517976819565, 1.5572439955839974, 1.5339969592307932, 1.5089924556704213, 1.4885103203254904, 1.4672723829691137, 1.4462018436239916, 1.4324986362627328, 1.4027137200058633, 1.3897736373437064, 1.365418176640924, 1.3505923272501823, 1.3399591808542048, 1.3178509411448422, 1.3088388234207644, 1.2911332376471536, 1.281491461368269, 1.2589334540788477, 1.257672943112841, 1.2334876387205265, 1.2177152000854767, 1.2080693182581845, 1.210063024314167, 1.187384851147958, 1.1899532932788626, 1.1724359766524686, 1.1605963325298945, 1.1626476147675229, 1.1501615295604142, 1.140699534872189, 1.1303385766647465, 1.1174109181896759, 1.1177937645937992, 1.10025195122206, 1.093838540507251, 1.0926659740807751, 1.0810997502804747, 1.0828747377734473, 1.066490987556139, 1.0590103693673514, 1.048692549208703, 1.0535157227229606, 1.0433493241059577, 1.0315181250349248, 1.0308093804378458, 1.0211019563070298, 1.0245672725588812, 1.0142835150966711, 1.0147667269995815, 1.0028915897950583, 0.9992702620581487, 0.983000352642146, 0.9835926061529352, 0.9880227181795267], "accuracy": [0.0952318087220192, 0.10593052208423615, 0.12468630075454712, 0.14238542318344116, 0.1546691358089447, 0.1674811840057373, 0.1768590658903122, 0.19099193811416626, 0.21344605088233948, 0.22480517625808716, 0.2374851405620575, 0.24699510633945465, 0.2658829689025879, 0.2798837721347809, 0.28741249442100525, 0.29745081067085266, 0.30299827456474304, 0.3315281867980957, 0.32624489068984985, 0.33826443552970886, 0.33707568049430847, 0.3543785512447357, 0.3571522831916809, 0.36903974413871765, 0.38066306710243225, 0.3859463632106781, 0.38105931878089905, 0.39849424362182617, 0.39585259556770325, 0.4113062918186188, 0.4147404432296753, 0.42028793692588806, 0.42847707867622375, 0.4297979176044464, 0.44128912687301636, 0.43072250485420227, 0.44327038526535034, 0.4535728394985199, 0.4493461847305298, 0.46229031682014465, 0.4640074074268341, 0.47193238139152527, 0.46929070353507996, 0.4916127324104309, 0.49187690019607544, 0.5044247508049011, 0.5090476870536804, 0.5057455897331238, 0.5116893649101257, 0.5214634537696838, 0.5156518220901489, 0.5281997323036194, 0.5297846794128418, 0.5262184739112854, 0.5412759184837341, 0.5431250929832458, 0.5439175963401794, 0.5519746541976929, 0.5448421835899353, 0.5624092221260071, 0.5621450543403625, 0.5609562993049622, 0.5665037631988525, 0.5729758143424988, 0.5732399821281433, 0.5787875056266785, 0.5793157815933228, 0.5799762010574341, 0.5822216272354126, 0.5904107689857483, 0.5900145173072815, 0.5935807824134827, 0.5959582328796387, 0.5912032723426819, 0.602562427520752, 0.6017699241638184, 0.6021661758422852, 0.6052040457725525, 0.6123365759849548, 0.6086382269859314, 0.6169594526290894, 0.6218464970588684, 0.6106194853782654, 0.6213181614875793, 0.6276581883430481, 0.6240919232368469, 0.6289790272712708, 0.6277902722358704, 0.6345264911651611, 0.6373002529144287, 0.6387531161308289, 0.6440364718437195, 0.6357152462005615, 0.6396777033805847, 0.651168942451477, 0.6453573107719421, 0.6493197679519653, 0.6498481035232544, 0.6482630968093872, 0.6477347612380981], "val_loss": [1.9659380231584822, 1.961015088217599, 1.9561497143336706, 1.9512222153799874, 1.946260588509696, 1.9412181718008858, 1.9360670362200056, 1.9306960105895996, 1.9251604761396135, 1.9193376813616072, 1.9132343019757951, 1.906855515071324, 1.900094441005162, 1.8929694720676966, 1.8853934832981654, 1.8773888179234095, 1.8688150133405412, 1.8595373289925712, 1.8497394834245955, 1.8393532208033971, 1.8282557215009416, 1.8164183071681432, 1.8037606648036413, 1.7902299336024694, 1.7757346289498466, 1.7604062897818429, 1.7441795894077845, 1.7268757820129395, 1.7087831497192383, 1.6894981520516532, 1.669313873563494, 1.648078782217843, 1.625997679574149, 1.6030544894082206, 1.5788988045283727, 1.5541831425258092, 1.5291776997702462, 1.5031924928937639, 1.4769926411764962, 1.4502208232879639, 1.423640353339059, 1.3963543687547957, 1.3695626940046037, 1.342203208378383, 1.3153201852525984, 1.2885934965951102, 1.262409005846296, 1.2370597975594657, 1.2122737680162703, 1.1884004729134696, 1.1654368468693324, 1.1432980469294958, 1.1220337663378035, 1.10188889503479, 1.082240445273263, 1.063661984034947, 1.0457913875579834, 1.0284754208156042, 1.0125813484191895, 0.9971624783107212, 0.9826255525861468, 0.9685542242867606, 0.9551162719726562, 0.942124741418021, 0.930011340550014, 0.918360982622419, 0.9071228163582938, 0.8963593755449567, 0.8863451480865479, 0.8764293875013079, 0.8673926762172154, 0.8585261447089059, 0.849503755569458, 0.8415853977203369, 0.8334356546401978, 0.8257688624518258, 0.8183835404259818, 0.8113274914877755, 0.8046974965504238, 0.7984574692589896, 0.7921527624130249, 0.7865246874945504, 0.7805924756186349, 0.7750727449144635, 0.7692935977663312, 0.7642063753945487, 0.7588765791484288, 0.7539491653442383, 0.7491701330457415, 0.744701589856829, 0.7399411712374006, 0.7354844297681536, 0.7315803936549595, 0.7276146071297782, 0.7238201584134784, 0.7199165139879499, 0.716006875038147, 0.711913023676191, 0.708389333316258, 0.7053209713527134], "val_accuracy": [0.07100000232458115, 0.11699999868869781, 0.1679999977350235, 0.2160000056028366, 0.2643333375453949, 0.29633334279060364, 0.3269999921321869, 0.35466668009757996, 0.37433332204818726, 0.3866666555404663, 0.3956666588783264, 0.4076666533946991, 0.4129999876022339, 0.42399999499320984, 0.42933332920074463, 0.4359999895095825, 0.44333332777023315, 0.44699999690055847, 0.45366665720939636, 0.4650000035762787, 0.4703333377838135, 0.47833332419395447, 0.4830000102519989, 0.4896666705608368, 0.49666666984558105, 0.5013333559036255, 0.5059999823570251, 0.5139999985694885, 0.5230000019073486, 0.5273333191871643, 0.5353333353996277, 0.5393333435058594, 0.5410000085830688, 0.54666668176651, 0.5483333468437195, 0.5519999861717224, 0.5543333292007446, 0.5590000152587891, 0.5649999976158142, 0.5696666836738586, 0.57833331823349, 0.5823333263397217, 0.5860000252723694, 0.5879999995231628, 0.5923333168029785, 0.5973333120346069, 0.6043333411216736, 0.6046666502952576, 0.6086666584014893, 0.6150000095367432, 0.6223333477973938, 0.6273333430290222, 0.637333333492279, 0.640999972820282, 0.6466666460037231, 0.6520000100135803, 0.656000018119812, 0.6610000133514404, 0.6613333225250244, 0.6656666398048401, 0.6706666946411133, 0.6729999780654907, 0.6713333129882812, 0.6723333597183228, 0.675000011920929, 0.6783333420753479, 0.6790000200271606, 0.6816666722297668, 0.6830000281333923, 0.6856666803359985, 0.687333345413208, 0.6880000233650208, 0.6919999718666077, 0.6909999847412109, 0.6936666369438171, 0.6946666836738586, 0.6956666707992554, 0.6959999799728394, 0.6980000138282776, 0.6983333230018616, 0.6993333101272583, 0.6990000009536743, 0.7016666531562805, 0.703000009059906, 0.7036666870117188, 0.7053333520889282, 0.7056666612625122, 0.7066666483879089, 0.7080000042915344, 0.7086666822433472, 0.7099999785423279, 0.7089999914169312, 0.7099999785423279, 0.7116666436195374, 0.7139999866485596, 0.7146666646003723, 0.715666651725769, 0.7183333039283752, 0.718666672706604, 0.7203333377838135]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 8, 8, 6, 5, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.12114285677671432, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [8.129568136977545, 2.6177484447205654, 2.451528510082478, 2.8773394208526915, 2.4296012210997104, 2.4415550002678903], "accuracy": [0.17170783877372742, 0.09589222073554993, 0.11174217611551285, 0.11015717685222626, 0.09100515395402908, 0.10315678268671036], "val_loss": [2.177687576838902, 2.1897363662719727, 2.23833213533674, 2.0339016233171736, 2.1434326171875, 2.007018838609968], "val_accuracy": [0.10366666316986084, 0.10199999809265137, 0.0949999988079071, 0.10199999809265137, 0.10233332961797714, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [3], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [2, 0, 1], [7, 59, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [1, 3, 9, 1, 2, 7, 8, 0], [3, 0, 2, 3, 1], [7, 59, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.sqrt(beta), tf.math.negative(sigma)), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 8, 8, 6, 5, 2, 6, 2, 3, 4, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 73], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [56, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 12, 9, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [8.298518882026416, 36281228307340.56, 1.2181541896525997e+34, 3.0532039377620395, 3.3011849490548517, 2.9001829347999704, 3.4693609897596898, 3.2709716878562727], "accuracy": [0.21820102632045746, 0.10579843819141388, 0.09826971590518951, 0.09708096832036972, 0.09747721254825592, 0.10157178342342377, 0.10487385839223862, 0.0944393053650856], "val_loss": [3.562486376081194, 7.385001619351167e+34, 3.042443411690848, 2.576462745666504, 2.7293027469090054, 2.697852407182966, 2.8892248698643277, 2.869058064052037], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10366666316986084, 0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10199999809265137, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 8, 8, 2, 5, 2, 6, 2, 3, 5, 9, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [47, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 0, 9, 1, 2], [3, 2, 2], [26, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0754193663597107, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9, 0, 3, 5, 6, 8, 2, 8, 4, 5, 1, 3, 7, 7, 1, 1, 2, 6, 8, 1, 3, 9, 3, 7, 4, 9], [4, 3, 3, 4, 3, 2, 3, 2, 0, 2, 2, 2, 1, 0, 2, 1, 0, 1, 2, 2, 1], [98, 49, 80, 73, 7, 92], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 2, 1], [7, 59, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.13881917297840118, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9, 9, 0, 3, 2, 4, 8, 1, 4, 8, 1, 3, 0, 0, 1, 2, 5, 4, 9], [4, 3, 3, 4, 1, 2, 0, 2, 3, 1, 2, 0, 2], [98, 86, 99, 44, 78], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [67, 59, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 39, 39, 26, 13, 5, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))), tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.negative(beta), tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.square(tf.math.add(beta, alpha)), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), beta))))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4, 3], [3, 0, 2, 0, 3, 1, 0, 0, 0, 3], [31, 32, 73, 24, 44], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9, 8, 3, 3, 1, 7, 0, 4, 2, 1, 4, 0], [4, 3, 3, 4, 1, 5, 1, 4, 5, 5, 4, 3, 0], [98, 75], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 2, 2], [7, 59, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 5, 32, 32, 19, 13, 2, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.pow(grad, tf.math.pow(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))))), grad))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.math.pow(grad, alpha)))), tf.math.add(beta, tf.math.negative(grad))), grad))), grad)), tf.math.add(beta, grad))), grad))))), tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(beta, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [45.439469321465936, 537.3805952897209, 2162.875571316795, 5618.164061339115, 11886.646937249248, 21735.54250697563], "accuracy": [0.0952318087220192, 0.10130762308835983, 0.09760929644107819, 0.10328886657953262, 0.10077928751707077, 0.10011887550354004], "val_loss": [125.40030779157367, 752.2601143973214, 2355.3069893973216, 5407.592215401785, 10383.68247767857, 17753.565290178572], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [5, 8, 8, 6, 5, 2, 6, 2, 3, 5, 4, 8], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.pow(alpha, tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))))))))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [3, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1, 1], [4, 3, 4, 1, 2], [2, 0, 2, 0], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad))), tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.multiply(tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.09914285689592361, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3368203646597245, 2.684550174207515, 3.676686268094634, 5.325815287343011, 7.828536223962149, 10.998259729791735, 14.892937622805944], "accuracy": [0.09166556596755981, 0.10394927859306335, 0.09668471664190292, 0.10342095047235489, 0.10077928751707077, 0.09945846349000931, 0.10659094154834747], "val_loss": [2.027173246656145, 2.3468972614833286, 3.110221658434187, 4.364324024745396, 6.071987697056362, 8.217454365321569, 10.813998903547015], "val_accuracy": [0.10000000149011612, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 4, 6, 5, 5, 7, 3, 2], [2, 3, 3, 4, 1], [98, 40], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [7, 7, 9, 1, 2], [3, 2, 2], [6, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024959888566583, 2.302696559281476, 2.3020499898867444, 2.3008319883771056, 2.302232982397174, 2.3017050118383997], "accuracy": [0.08928807079792023, 0.08770307898521423, 0.09113723784685135, 0.09417514503002167, 0.09391097724437714, 0.09021265059709549], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [3, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024959888566583, 2.302696559281476, 2.3020499898867444, 2.3008319883771056, 2.302232982397174, 2.3017050118383997], "accuracy": [0.08928807079792023, 0.08770307898521423, 0.09113723784685135, 0.09417514503002167, 0.09391097724437714, 0.09021265059709549], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [3, 4, 9, 1, 2], [3, 0, 0], [91, 59, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.pow(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3024959888566583, 2.302696559281476, 2.3020499898867444, 2.3008319883771056, 2.302232982397174, 2.3017050118383997], "accuracy": [0.08928807079792023, 0.08770307898521423, 0.09113723784685135, 0.09417514503002167, 0.09391097724437714, 0.09021265059709549], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4, 1, 8, 6, 7, 8, 2, 3, 0, 4, 0, 2], [1, 2, 2, 0, 3, 1, 0, 0, 0, 3, 0, 2, 1, 2, 2], [31, 32, 81, 90, 29, 70], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [6, 3, 9, 1, 2], [3, 0, 2], [7, 59, 13]], "fitness": -0.03971428424119949, "mapping_values": [1, 8, 8, 5, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302683121272208, 2.3033457874322782, 2.3031514597260294, 2.3023878421765813, 2.304244666634266, 2.3041789103429773], "accuracy": [0.08875974267721176, 0.08625016361474991, 0.08770307898521423, 0.09021265059709549, 0.08981640636920929, 0.08598599582910538], "val_loss": [1.971358163016183, 1.9717776434762138, 1.9721943310328893, 1.9726123809814453, 1.9730307715279716, 1.9734499113900321], "val_accuracy": [0.03633333370089531, 0.03533333167433739, 0.03433333337306976, 0.032999999821186066, 0.030666666105389595, 0.028333334252238274]}}]