[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 1], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.8360000252723694, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 5, 3, 0, 5, 4, 2, 2, 0, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.negative(grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1572922931890823, 1.2909149295539588, 0.8824609014115959, 0.7697728624149888, 0.7035021652178348, 0.6463365040009977, 0.6160527603611451, 0.589873972963805, 0.5659459029379585, 0.5551718064444712, 0.5365287852545519, 0.5131552067682837, 0.4968175043944496, 0.47567287759380317, 0.4634910755626057, 0.4554688033646974, 0.4393939190828222, 0.43687871666537803, 0.4199091037463487, 0.4035855320938795, 0.394309046927098, 0.3936306154211483, 0.38105423043684605, 0.3701968681047054, 0.3665401072762567, 0.3563779042168946, 0.34681733666457015, 0.3386118650995367, 0.33295738278614956, 0.3239953142895029, 0.31548892110566484], "accuracy": [0.27777042984962463, 0.5513142347335815, 0.6752080321311951, 0.7098137736320496, 0.7337207794189453, 0.7580240368843079, 0.772288978099823, 0.7868181467056274, 0.789459764957428, 0.7932901978492737, 0.8014793395996094, 0.8084797263145447, 0.8125742673873901, 0.8228767514228821, 0.8277638554573059, 0.8319904804229736, 0.8372738361358643, 0.8396512866020203, 0.8462554216384888, 0.8508783578872681, 0.8532558679580688, 0.8539162874221802, 0.8603883385658264, 0.86118084192276, 0.8661999702453613, 0.8660678863525391, 0.871879518032074, 0.8733324408531189, 0.8762382864952087, 0.8794082403182983, 0.8817857503890991], "val_loss": [1.2857997417449951, 0.6944264343806675, 0.6014478717531476, 0.5640866415841239, 0.5335295881543841, 0.4887017181941441, 0.46620677198682514, 0.45477068424224854, 0.4374506303242275, 0.4278741649218968, 0.417968145438603, 0.41302186250686646, 0.39084012167794363, 0.38217978818076, 0.38029730319976807, 0.3664190428597586, 0.365445145538875, 0.35613472972597393, 0.35998126438685824, 0.345647326537541, 0.34375399351119995, 0.34255107811519075, 0.33887702226638794, 0.33209599767412457, 0.3283832924706595, 0.32597743613379343, 0.3264669009617397, 0.32199820450374056, 0.32880196401051115, 0.3226719413484846, 0.3200442109789167], "val_accuracy": [0.5786666870117188, 0.7233333587646484, 0.7293333411216736, 0.7513333559036255, 0.7563333511352539, 0.7870000004768372, 0.7993333339691162, 0.8016666769981384, 0.8109999895095825, 0.8180000185966492, 0.8223333358764648, 0.8190000057220459, 0.8330000042915344, 0.8389999866485596, 0.8346666693687439, 0.8426666855812073, 0.8416666388511658, 0.847000002861023, 0.8543333411216736, 0.8539999723434448, 0.8600000143051147, 0.8543333411216736, 0.8603333234786987, 0.8669999837875366, 0.8663333058357239, 0.871666669845581, 0.8679999709129333, 0.8703333139419556, 0.8619999885559082, 0.871666669845581, 0.8713333606719971]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [29, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 2, 0, 9, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [5, 9, 8, 4], [2, 1], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.8171428442001343, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2785918276465216, 2.113621973090751, 1.6021155613823779, 1.2744868738681823, 1.0031097065330166, 0.8889889448168665, 0.8246307428077447, 0.7876801423943983, 0.7328075651463706, 0.7193283302326401, 0.6955889796048674, 0.6746140098795363, 0.6423201519720874, 0.6313692894846047, 0.6045260634388921, 0.5821566638095016, 0.5729350767367394, 0.5546961962161142, 0.5396993618993365, 0.5265740437703503, 0.5144985183441659, 0.5058249839229858, 0.5008704675627957, 0.48924903469850295, 0.4786671196480689, 0.4638283895329871, 0.4516954898456336, 0.4487602519573332, 0.4294506200095839, 0.4270342885463812, 0.41009383812682537, 0.4024693091091085, 0.4138831052884387, 0.39849307923316324, 0.3844513042318571, 0.38035827827900787, 0.37592502034193864, 0.37099940182274327, 0.3593080749546044, 0.3490282543197426, 0.3430482140188566, 0.3356856946396617, 0.3370860388777779, 0.3282133576664013, 0.317721834346965, 0.31939898468499894, 0.3079993726043275, 0.3056409221086929, 0.29654875593320207], "accuracy": [0.15334829688072205, 0.36164310574531555, 0.47351735830307007, 0.5635979175567627, 0.6440364718437195, 0.678642213344574, 0.702681303024292, 0.7047945857048035, 0.7209087014198303, 0.7230220437049866, 0.7430986762046814, 0.7477215528488159, 0.759609043598175, 0.7640998363494873, 0.7737419009208679, 0.7817989587783813, 0.7825914621353149, 0.7886672616004944, 0.796328067779541, 0.8004226684570312, 0.8045172095298767, 0.8107251524925232, 0.8178576231002808, 0.8171972036361694, 0.8164047002792358, 0.8267071843147278, 0.8330471515655518, 0.8289526104927063, 0.8356888294219971, 0.8400475382804871, 0.8490291833877563, 0.8469158411026001, 0.8426892161369324, 0.8516708612442017, 0.8558974862098694, 0.8569541573524475, 0.860652506351471, 0.8640866279602051, 0.8687095642089844, 0.8665962219238281, 0.873860776424408, 0.8746532797813416, 0.8753136992454529, 0.8774270415306091, 0.8817857503890991, 0.8845595121383667, 0.8849557638168335, 0.8853520154953003, 0.8903711438179016], "val_loss": [1.894264084952218, 1.557239396231515, 0.9062973090580532, 0.7295851366860526, 0.6701702390398298, 0.6279480797903878, 0.5762173107692173, 0.5617708138057164, 0.5456229618617466, 0.5386052472250802, 0.5255911690848214, 0.5073485544749669, 0.4910529681614467, 0.47726419993809294, 0.46977613653455463, 0.45283600262233187, 0.43988767692020964, 0.4292828270367214, 0.42020493745803833, 0.4194698589188712, 0.4059423633984157, 0.3993128367832729, 0.3880666834967477, 0.3814488819667271, 0.3806170736040388, 0.373076251574925, 0.37086890425000874, 0.36304268666676115, 0.35722438778196064, 0.3577886734689985, 0.35189162833350046, 0.35314508846827913, 0.34582496540887014, 0.3471685903412955, 0.347928558077131, 0.33910830531801495, 0.33346354961395264, 0.33529493638447355, 0.3314986228942871, 0.33332687616348267, 0.3256957786423819, 0.323989885193961, 0.32279188292367117, 0.325862637587956, 0.32721561193466187, 0.3227885791233608, 0.31622116906302317, 0.31783682107925415, 0.3237044896398272], "val_accuracy": [0.437666654586792, 0.5366666913032532, 0.6613333225250244, 0.6949999928474426, 0.7183333039283752, 0.7360000014305115, 0.7393333315849304, 0.7519999742507935, 0.7603333592414856, 0.7689999938011169, 0.765666663646698, 0.777999997138977, 0.7833333611488342, 0.7919999957084656, 0.7979999780654907, 0.8009999990463257, 0.8059999942779541, 0.8159999847412109, 0.8183333277702332, 0.8220000267028809, 0.8273333311080933, 0.831333339214325, 0.8403333425521851, 0.8426666855812073, 0.8393333554267883, 0.8389999866485596, 0.8433333039283752, 0.8519999980926514, 0.8556666374206543, 0.8483333587646484, 0.8526666760444641, 0.8529999852180481, 0.8569999933242798, 0.859333336353302, 0.856333315372467, 0.8603333234786987, 0.8616666793823242, 0.8606666922569275, 0.8629999756813049, 0.8616666793823242, 0.8606666922569275, 0.8659999966621399, 0.8690000176429749, 0.8696666955947876, 0.8650000095367432, 0.8656666874885559, 0.8669999837875366, 0.8696666955947876, 0.8683333396911621]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 3, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 9, 8, 4], [2, 1], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [1, 32, 13]], "fitness": -0.7960000038146973, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2975828834040417, 2.269909788478619, 2.2251859694077685, 2.1610270712621586, 2.056469081651423, 1.8923486236410527, 1.6797025858245869, 1.4731814644796783, 1.2999287941326414, 1.1948753400737615, 1.0900887494325922, 1.0273652508935562, 0.9774194072187538, 0.933724965653667, 0.9023513320871333, 0.8692562046886797, 0.8589019289956416, 0.8274274487788918, 0.807999901295401, 0.788659852021217, 0.7785324227178511, 0.7690809821849486, 0.7568918579384604, 0.7458685355148044, 0.7432712059073902, 0.7220712264200416, 0.7133294758370303, 0.7108729948866495, 0.6937720095949119, 0.694560759402285, 0.691208082836664, 0.6789841313230489, 0.6867305316063455, 0.6799551093378371, 0.6659845260345012, 0.6562198294215215, 0.659418516178897, 0.6574037300124853, 0.6502052117899314, 0.6431767196781868, 0.6359823966983633, 0.6327939343380025, 0.6242359903478792, 0.6293722476626683, 0.6146176292549554, 0.6197257046733534, 0.6200423046204518, 0.6043720927614468, 0.6010998210194025, 0.5966724391075535, 0.6064260491306409, 0.5900969766685598, 0.5867169596547102, 0.5960058836322246, 0.5895047317548214, 0.5831352452623405, 0.590118493740632], "accuracy": [0.10487385839223862, 0.1795007288455963, 0.27460044622421265, 0.3521331250667572, 0.39730551838874817, 0.4301941692829132, 0.472989022731781, 0.5057455897331238, 0.5440496802330017, 0.5717870593070984, 0.6089023947715759, 0.6339981555938721, 0.6489235162734985, 0.6649055480957031, 0.6737551093101501, 0.6913221478462219, 0.6936996579170227, 0.7047945857048035, 0.7066437602043152, 0.7129837274551392, 0.7104741930961609, 0.7150970697402954, 0.7240787148475647, 0.7284374833106995, 0.7323999404907227, 0.7353057861328125, 0.739928662776947, 0.7429665923118591, 0.7409853339195251, 0.7446836829185486, 0.7485140562057495, 0.752212405204773, 0.7497028112411499, 0.7473253011703491, 0.7586844563484192, 0.7576277852058411, 0.7536653280258179, 0.750759482383728, 0.7567031979560852, 0.765949010848999, 0.7643640041351318, 0.7635715007781982, 0.7670056819915771, 0.7672698497772217, 0.7725531458854675, 0.7725531458854675, 0.7663452625274658, 0.778761088848114, 0.7744023203849792, 0.7750627398490906, 0.7757231593132019, 0.7775723338127136, 0.778761088848114, 0.7791573405265808, 0.7786290049552917, 0.7845727205276489, 0.7795535326004028], "val_loss": [1.953470093863351, 1.919074603489467, 1.8697432109287806, 1.7906218937465124, 1.660301719393049, 1.4661850588662284, 1.2349145071847099, 1.0325415134429932, 0.8907617500850132, 0.8054316895348685, 0.7534279312406268, 0.714254651750837, 0.6804709604808262, 0.6551094566072736, 0.6351045029503959, 0.6180281979697091, 0.6024032490594047, 0.5932867356709072, 0.582837632724217, 0.5735795668193272, 0.565422603062221, 0.5575657742364066, 0.5518560239246914, 0.5434174707957676, 0.5378177847181048, 0.5337836912700108, 0.5269975151334491, 0.5243041345051357, 0.5188678332737514, 0.5158054488045829, 0.5129314831324986, 0.5079885380608695, 0.5068370444434029, 0.502005900655474, 0.5010032994406564, 0.49527813707079205, 0.4917886427470616, 0.4898477452141898, 0.4884875331606184, 0.4862206663404192, 0.48399414334978375, 0.48244772638593403, 0.4770715406962803, 0.47716101578303743, 0.47633309023720877, 0.4736686774662563, 0.47191572189331055, 0.46953230244772776, 0.46787995951516287, 0.4678829738071987, 0.4657419238771711, 0.46427306107112337, 0.46253250326429096, 0.46093203340257916, 0.45880208696637836, 0.45698368549346924, 0.4562446560178484], "val_accuracy": [0.1979999989271164, 0.38600000739097595, 0.4449999928474426, 0.49566665291786194, 0.5446666479110718, 0.5723333358764648, 0.6140000224113464, 0.6589999794960022, 0.6823333501815796, 0.6913333535194397, 0.7020000219345093, 0.718666672706604, 0.7286666631698608, 0.737666666507721, 0.7400000095367432, 0.7406666874885559, 0.7476666569709778, 0.753000020980835, 0.75, 0.7543333172798157, 0.7606666684150696, 0.7590000033378601, 0.7620000243186951, 0.7696666717529297, 0.7703333497047424, 0.7726666927337646, 0.7730000019073486, 0.7730000019073486, 0.777999997138977, 0.7786666750907898, 0.7799999713897705, 0.7806666493415833, 0.7823333144187927, 0.7823333144187927, 0.7846666574478149, 0.7896666526794434, 0.7850000262260437, 0.7876666784286499, 0.7893333435058594, 0.7929999828338623, 0.7916666865348816, 0.7963333129882812, 0.7993333339691162, 0.7953333258628845, 0.7996666431427002, 0.796999990940094, 0.7979999780654907, 0.7973333597183228, 0.8013333082199097, 0.8016666769981384, 0.8006666898727417, 0.8056666851043701, 0.8046666383743286, 0.7996666431427002, 0.8056666851043701, 0.8040000200271606, 0.8040000200271606]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [29, 32, 5, 49, 25], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [1, 2, 8, 4], [1, 4, 0], [64], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 4, 2], [1, 0, 2], [1, 52, 13]], "fitness": -0.15142856538295746, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 1, 3, 1, 1, 0, 0, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(grad))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.5994284423807468, 4.740872729424519, 2.4377114741305603, 2.4310380469664703, 2.391230069288819, 2.4841088122223125, 2.3831930997239095, 2.3728570242158615, 2.347534549392178, 2.3419900881757574, 2.3692635122212784], "accuracy": [0.21701228618621826, 0.1438383311033249, 0.09813763201236725, 0.09615638852119446, 0.09866596013307571, 0.11755382269620895, 0.10210011899471283, 0.1010434553027153, 0.09959053993225098, 0.09774138033390045, 0.10011887550354004], "val_loss": [1.9542244502476283, 2.1075150626046315, 2.000788824898856, 2.1078972135271346, 2.1017201968601773, 1.9971997397286552, 2.07502623966762, 1.980200903756278, 2.0483249255589078, 1.994601113455636, 2.004049777984619], "val_accuracy": [0.10199999809265137, 0.09700000286102295, 0.10066666454076767, 0.10366666316986084, 0.09733333438634872, 0.14766666293144226, 0.0949999988079071, 0.09566666930913925, 0.09799999743700027, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [29, 32, 5, 49, 25], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 2, 0, 9, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [1, 2, 8, 4], [1, 4, 0], [64], [0, 1, 1, 1, 0, 1], [3, 1, 9, 1, 2], [0, 0, 2], [1, 52, 44]], "fitness": -0.10314285755157471, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 1, 3, 1, 1, 0, 0, 3, 1, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301060083787581, 2.3013194886181, 2.302208953136151, 2.302568496478122, 2.3025818993748928, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09351472556591034, 0.09813763201236725, 0.10553427785634995, 0.09985470771789551, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9718609537397112, 1.9732709612165178, 1.973637648991176, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10366666316986084, 0.10766666382551193, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 6, 8, 4], [2, 1], [80], [0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 1, 1, 2], [2, 2, 2, 2, 0], [12, 37, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 5, 3, 0, 4, 3, 2, 1, 0, 9, 4, 5, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(grad))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.subtract(beta, tf.math.subtract(beta, beta)), beta), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 2, 0, 9, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 68], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [7, 2, 8, 4], [2, 1], [64], [1, 1, 0, 1, 0, 1], [3, 1, 0, 1, 2], [1, 0, 2], [69, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 6, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0874389111995697, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [3, 2, 3, 6, 1, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 1, 1, 0, 2, 2, 0, 2, 3, 3, 0], [75, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [2, 5, 8, 4], [2, 1], [64], [0, 1, 0, 1, 0, 1], [3, 1, 8, 1, 2], [1, 2, 2], [15, 53, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 3, 8, 8, 6, 2, 1, 4, 2, 2, 0, 0, 6, 3, 3, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha)))), tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), alpha))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.square(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.math.sqrt(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 3, 6, 9, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [55, 32, 5, 49, 25], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 6, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 9, 8, 4], [2, 1], [64], [1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2], [0, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3019555428119114, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 9, 8, 4], [2, 1], [64], [0, 1, 0, 1, 0, 1], [8, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], [4, 8, 5, 1, 0, 9, 3, 3], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 33], [0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0], [5, 9, 8, 4], [2, 1], [64], [0, 1, 0, 1, 0, 1], [6, 1, 9, 1, 2], [0, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 2, 2, 0, 2, 1, 1, 0, 0, 5, 3, 2, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3019545665900187, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 2, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0], [5, 9, 8, 4], [2, 1], [64], [0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2], [1, 1, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.negative(tf.math.negative(grad)), tf.math.add(beta, grad)), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 3, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 9, 8, 4], [2, 1], [64], [0, 0, 0, 1, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.negative(grad))), tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [29, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 8, 2, 0, 9, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [67], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [1, 2, 8, 4], [2, 1], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(grad, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 3, 6, 1, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 0, 2, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 4, 2, 1, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0], [7, 2, 8, 4], [2, 4], [64], [0, 1, 0, 1, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 3, 2, 2, 1, 1, 0, 8, 6, 4, 2, 0, 5, 2, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.pow(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 2, 2, 0, 0, 9, 3, 9], [1, 3, 3, 1, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 1], [64], [0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, grad)), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [4, 3, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 2, 8, 4], [2, 1], [64], [1, 1, 0, 1, 0, 1], [9, 1, 9, 1, 2], [1, 0, 2], [15, 77, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3978.8790117721546, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05534275621175766, 0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [9386166283702.857, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [61, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 4, 1, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [7, 2, 8, 4], [2, 1], [64], [0, 1, 0, 1, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.062285713851451874, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3022426320986584, 2.3098219830078803, 2.3230927432328166, 1.0224636135312468e+20, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09140139818191528, 0.07872143387794495, 0.0544181764125824, 0.05336151272058487, 0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9792356491088867, 1.977794579097203, 2.2496950966971263, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07833333313465118, 0.06700000166893005, 0.0273333340883255, 0.10599999874830246, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 9, 6, 2, 2, 0, 4, 5, 2, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 87], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0], [7, 2, 8, 4], [3, 1], [64], [0, 1, 0, 1, 0, 1], [3, 9, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 5, 3, 0, 3, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(grad))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3020762323057804, 2.302555774448885, 2.3011844623924924, 2.3019228126741025, 2.3017874379687697, 2.302265381217869], "accuracy": [0.09298639744520187, 0.0870426595211029, 0.09219389408826828, 0.08598599582910538, 0.09774138033390045, 0.08889182657003403], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [58, 20, 5, 16, 89], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 8, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [1, 6, 8, 4], [2, 1], [64], [0, 1, 0, 1, 0, 1], [3, 9, 9, 1, 2], [1, 0, 2], [1, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 0, 7, 7, 4, 3, 0, 5, 3, 2, 1, 0, 3, 2, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(tf.math.negative(grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3020762637968093, 2.3025562647956948, 2.30118538457578, 2.3019236988946354, 2.3017875957073333, 2.3022642027290976], "accuracy": [0.09298639744520187, 0.0870426595211029, 0.09219389408826828, 0.08598599582910538, 0.09774138033390045, 0.08875974267721176], "val_loss": [1.9709392275129045, 1.9709395681108748, 1.9709397043500627, 1.9709392956324987, 1.970938069479806, 1.9709354128156389], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]