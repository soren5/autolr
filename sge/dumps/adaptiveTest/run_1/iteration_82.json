[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.6834285855293274, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2955045134179453, 2.2550661051199343, 2.170617956290738, 1.984294522487256, 1.6633270054823373, 1.4123437122945315, 1.362057915579106, 1.2012138127839764, 0.9670725718323644, 0.9053213515569505, 0.900569407096896, 0.8488617972013831, 0.8014607171907779, 0.8066406856910853, 0.7949696521575755, 0.7826093973626613, 0.7314042802641751, 0.7311448303699934, 0.7288436828870752, 0.7224022928812815, 0.6990036521022819, 0.6902013984275706, 0.6771186597673822, 0.6748987296474388, 0.6632291820574872, 0.6279120790235685, 0.6160448334787374, 0.6116140756183817, 0.6014993018115815, 0.5970241490954721, 0.5958183363066247, 0.5734801607959542, 0.5655095266344808, 0.5544415268333062, 0.5522741846845544, 0.5510115148510679, 0.5353080937733597, 0.5438241274160653, 0.5389739810326127, 0.5284864903677251, 0.5175951624496061, 0.5119125923035309, 0.511649648676522, 0.5081142975378345, 0.4981180148716096, 0.48547035059704047, 0.48247482062661495, 0.4818304347607753, 0.4880364609668441, 0.4712839503455801, 0.4720881816977444, 0.4601969512233865], "accuracy": [0.10817593336105347, 0.2156914472579956, 0.3339056968688965, 0.40826839208602905, 0.45951658487319946, 0.5115572810173035, 0.54655921459198, 0.6021661758422852, 0.6577730774879456, 0.6547351479530334, 0.6750759482383728, 0.687491774559021, 0.7009642124176025, 0.6952846646308899, 0.6940959095954895, 0.709021270275116, 0.7187954187393188, 0.7148329019546509, 0.7156254053115845, 0.7259278893470764, 0.7362303733825684, 0.7395324110984802, 0.7452120184898376, 0.7428345084190369, 0.746268630027771, 0.7613261342048645, 0.7627789974212646, 0.769911527633667, 0.7716285586357117, 0.7744023203849792, 0.7773081660270691, 0.7848368883132935, 0.7874785661697388, 0.7926297783851624, 0.7957997918128967, 0.7948752045631409, 0.7930260300636292, 0.7972526550292969, 0.7948752045631409, 0.800290584564209, 0.8035926818847656, 0.8132346868515015, 0.8084797263145447, 0.8108572363853455, 0.8131026029586792, 0.8132346868515015, 0.8232730031013489, 0.8166688680648804, 0.8169330358505249, 0.8259146809577942, 0.8269713521003723, 0.8309338092803955], "val_loss": [1.9493567602975028, 1.8921709060668945, 1.774446964263916, 1.5050006253378732, 1.106910262789045, 0.8479555334363665, 0.749477710042681, 0.7241828611918858, 0.6662931953157697, 0.6792736394064767, 0.6658515078680856, 0.6129065241132464, 0.597321731703622, 0.5908821991511753, 0.5898847239358085, 0.5711778913225446, 0.5572389364242554, 0.5518569435392108, 0.5571132046835763, 0.5414815630231585, 0.5271413496562413, 0.5219851902553013, 0.512883186340332, 0.49776051725660053, 0.4827390398297991, 0.47227122102464947, 0.4709149088178362, 0.46893329279763357, 0.4609945671898978, 0.45663591793605257, 0.4522631508963449, 0.44871158259255545, 0.4496016332081386, 0.4506558520453317, 0.4437363658632551, 0.43204393557139803, 0.42930751187460764, 0.42971255098070416, 0.4259548102106367, 0.42100476367133005, 0.4199738843100412, 0.4200379507882254, 0.4216862916946411, 0.4160145861761911, 0.4107382042067392, 0.40813583987099783, 0.40730433804648264, 0.4082552194595337, 0.4042480247361319, 0.403158894606999, 0.4129555480820792, 0.4179809944970267], "val_accuracy": [0.23766666650772095, 0.4099999964237213, 0.453000009059906, 0.5093333125114441, 0.6043333411216736, 0.6763333082199097, 0.6970000267028809, 0.7160000205039978, 0.7106666564941406, 0.734000027179718, 0.7250000238418579, 0.7379999756813049, 0.737666666507721, 0.7323333621025085, 0.7350000143051147, 0.7480000257492065, 0.7519999742507935, 0.7556666731834412, 0.7630000114440918, 0.7696666717529297, 0.7723333239555359, 0.7703333497047424, 0.7770000100135803, 0.7866666913032532, 0.7950000166893005, 0.7900000214576721, 0.7910000085830688, 0.7983333468437195, 0.8056666851043701, 0.8090000152587891, 0.8090000152587891, 0.8136666417121887, 0.8133333325386047, 0.815666675567627, 0.8180000185966492, 0.8180000185966492, 0.8196666836738586, 0.8176666498184204, 0.8216666579246521, 0.8230000138282776, 0.8293333053588867, 0.8316666483879089, 0.8309999704360962, 0.8339999914169312, 0.8333333134651184, 0.8363333344459534, 0.8379999995231628, 0.8276666402816772, 0.8303333520889282, 0.8353333473205566, 0.8370000123977661, 0.8366666436195374]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [1, 52, 13]], "fitness": -0.6759999990463257, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.301620807535597, 2.3007937211717016, 2.2995754393289243, 2.295474696105828, 2.2934308834929964, 2.288977447076953, 2.28269652992176, 2.275840774991367, 2.2690712134001387, 2.2612714168181776, 2.2527721207832476, 2.2423025809416384, 2.2330754506447845, 2.2202208503803256, 2.209462751313727, 2.1954468931929467, 2.179357452730162, 2.1626129016868663, 2.1435360717987577, 2.1222022098399678, 2.0982247716510427, 2.0720113972631253, 2.0347320630707526, 1.996491015154247, 1.9663504124349056, 1.9126362143695284, 1.86590786442198, 1.8159619221802574, 1.763498666909676, 1.7067470180989885, 1.6525085174553997, 1.6040495130379975, 1.5491501932461595, 1.492717114547933, 1.471030978777972, 1.4454121166578673, 1.4266908934654545, 1.4095889521218279, 1.3792974951559793, 1.3712613730146554, 1.3477133216638733, 1.3756244930498605, 1.356494202857571, 1.36925352309374, 1.3642625023801926, 1.363987203806997, 1.3575613255734458], "accuracy": [0.09245806187391281, 0.09113723784685135, 0.09681680053472519, 0.10659094154834747, 0.11649715900421143, 0.1216483935713768, 0.13630960881710052, 0.16457535326480865, 0.18319904804229736, 0.20737022161483765, 0.2250693440437317, 0.2487121969461441, 0.26720380783081055, 0.2899220585823059, 0.3063003420829773, 0.32505613565444946, 0.3385286033153534, 0.35464271903038025, 0.35886937379837036, 0.36864352226257324, 0.37300223112106323, 0.3803988993167877, 0.3913617730140686, 0.4131554663181305, 0.4085325598716736, 0.41751420497894287, 0.42742040753364563, 0.4290054142475128, 0.44208163022994995, 0.452119916677475, 0.45172369480133057, 0.45991283655166626, 0.47430986166000366, 0.48672565817832947, 0.4858010709285736, 0.5025756359100342, 0.5023114681243896, 0.50350022315979, 0.5320301055908203, 0.5396909117698669, 0.5392946600914001, 0.5311055183410645, 0.5436534285545349, 0.5474838018417358, 0.5538238286972046, 0.5540879964828491, 0.5625412464141846], "val_loss": [1.9704598699297224, 1.9691205705915178, 1.966924054282052, 1.963888440813337, 1.9600450651986259, 1.955415998186384, 1.9500273295811243, 1.9439058985028947, 1.9370535441807337, 1.9294827325003487, 1.9211862427847726, 1.9121603965759277, 1.9023256301879883, 1.891577993120466, 1.8796930994306291, 1.8664330754961287, 1.8514892033168249, 1.8345020157950265, 1.8151722635541643, 1.7931790351867676, 1.7682032585144043, 1.7398547445024763, 1.707749911717006, 1.6714671679905482, 1.6307498046330042, 1.585383108683995, 1.53548298563276, 1.4814144202641077, 1.4239202226911272, 1.3640148299080985, 1.303058181490217, 1.2426096030644007, 1.1841874803815569, 1.1289443288530623, 1.0776325975145613, 1.0304450307573592, 0.9875563893999372, 0.9484614304133824, 0.9129290580749512, 0.8804214341299874, 0.8508095570972988, 0.8254688637597221, 0.8067138535635812, 0.795388034411839, 0.7884659256253924, 0.7800825493676322, 0.7662686109542847], "val_accuracy": [0.0416666679084301, 0.047333333641290665, 0.06533333659172058, 0.08799999952316284, 0.12700000405311584, 0.17599999904632568, 0.2303333282470703, 0.28600001335144043, 0.33033332228660583, 0.3623333275318146, 0.37466666102409363, 0.382666677236557, 0.3919999897480011, 0.4023333191871643, 0.4099999964237213, 0.41866666078567505, 0.4246666729450226, 0.43166667222976685, 0.4413333237171173, 0.44866666197776794, 0.45533332228660583, 0.4659999907016754, 0.4749999940395355, 0.48399999737739563, 0.49433332681655884, 0.5009999871253967, 0.5120000243186951, 0.5223333239555359, 0.5350000262260437, 0.5440000295639038, 0.5540000200271606, 0.5673333406448364, 0.5803333520889282, 0.5983333587646484, 0.6083333492279053, 0.628333330154419, 0.6423333287239075, 0.6539999842643738, 0.6660000085830688, 0.6723333597183228, 0.6763333082199097, 0.6806666851043701, 0.6793333292007446, 0.6800000071525574, 0.6729999780654907, 0.6726666688919067, 0.6790000200271606]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [8, 1, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 50, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 8, 1, 2, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.2280000001192093, "mapping_values": [1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.sqrt(sigma), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.6902419006063987, 3.0963753995453254, 2.386299037001215, 2.40554633888161, 2.4040622867062234, 2.4020412694414324], "accuracy": [0.19178444147109985, 0.1516312211751938, 0.10593052208423615, 0.10421344637870789, 0.09760929644107819, 0.09747721254825592], "val_loss": [2.85181679044451, 2.054193905421666, 2.0617854254586354, 2.0622787475585938, 2.0360003198896135, 2.0671336310250417], "val_accuracy": [0.11966666579246521, 0.10366666316986084, 0.09666666388511658, 0.10199999809265137, 0.10233332961797714, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 8, 1, 2, 1, 2], [3, 2, 2], [20, 52, 13]], "fitness": -0.19257143139839172, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.sqrt(sigma), beta), beta)", "other_info": {"loss": [2.6917939903776738, 4.0302975571717665, 2.551252863646782, 2.4041953261943148, 2.4352763539937667, 2.4568935611449243, 2.418524889000623], "accuracy": [0.19218069314956665, 0.1534803807735443, 0.1328754425048828, 0.10342095047235489, 0.09430722147226334, 0.10619468986988068, 0.09985470771789551], "val_loss": [2.4743905067443848, 1.8673768043518066, 2.085071155003139, 2.111006600516183, 1.9709931782313757, 2.0468831743512834, 2.1084539549691335], "val_accuracy": [0.125, 0.21166667342185974, 0.09666666388511658, 0.10199999809265137, 0.13433332741260529, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.15485714375972748, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.605348868125056, 2.896043669640538, 2.4068853718776904, 2.5159176674816255, 2.4280950588210697, 2.3371118659655714], "accuracy": [0.19680359959602356, 0.13115836679935455, 0.10566636174917221, 0.1014397069811821, 0.09919429570436478, 0.09945846349000931], "val_loss": [2.058281217302595, 2.061967441013881, 2.0311876705714633, 2.002252919333322, 2.0005890982491628, 2.031027385166713], "val_accuracy": [0.10633333027362823, 0.10366666316986084, 0.10233332961797714, 0.09833333641290665, 0.0949999988079071, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.12999999523162842, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [2.3623527039500307, 2.3103078855830192, 2.312307662054406, 2.308056348696865, 2.3106998441525106, 2.322437095005971, 2.317298286610811], "accuracy": [0.10553427785634995, 0.10157178342342377, 0.10606260597705841, 0.09642054885625839, 0.09932637959718704, 0.09972262382507324, 0.1022322028875351], "val_loss": [1.980384349822998, 1.9989359719412667, 1.978954247065953, 1.9809551239013672, 1.9804974283490862, 1.9787413052150182, 1.9808407511029924], "val_accuracy": [0.09666666388511658, 0.1146666631102562, 0.0949999988079071, 0.10066666454076767, 0.10366666316986084, 0.10199999809265137, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [2, 4, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0, 2, 3, 3], [11, 32, 3, 66, 35], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1], [4, 7, 6, 5, 5, 7, 3, 9, 1, 7, 8, 9], [5, 2, 0, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [0, 3, 4, 1, 2], [2, 0, 2, 0], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [6, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [48, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 0, 1, 1, 1], [1, 4, 9, 1, 2], [3, 2, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 8, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.square(grad)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, beta)), beta)", "other_info": {"loss": [2.3574782242281813, 5.139696849855245, 11.895692254825905, 19.625140502137626, 27.473188103749028, 35.310044510961916, 43.159941811713374, 51.018370833804404, 58.8646037588345, 66.71869629797068], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09747721254825592, 0.09787346422672272, 0.10236428678035736, 0.09826971590518951, 0.09536388516426086], "val_loss": [2.514624663761684, 7.562344142368862, 14.022600446428571, 20.708232879638672, 27.401586260114396, 34.10110364641462, 40.815403529575896, 47.517120361328125, 54.21978105817522, 60.91824122837612], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10233332961797714, 0.10066666454076767, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 6, 9, 1, 2], [3, 1, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [2.3027720422068323, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 8, 6, 5, 2, 4, 5, 6, 8, 4, 4, 2], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 55], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 8, 1, 2, 1, 2], [3, 0, 0], [27, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 13, 9, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.square(grad), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(grad, alpha))), tf.math.add(alpha, tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.sqrt(sigma), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [294555972.65275395, 5655381399.381852, 26778693556.258354, 73958770495.67032, 160012505337.40643, 295008467758.4932], "accuracy": [0.09932637959718704, 0.10289261490106583, 0.09932637959718704, 0.1006472036242485, 0.1014397069811821, 0.09760929644107819], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [8, 3, 8, 6, 5, 8, 0, 5, 6, 8, 4, 4, 0], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 3, 6, 3, 5, 6, 1, 1, 9, 9, 5, 5, 5, 1, 1, 2, 1, 1, 2, 3, 5, 3, 1, 0, 1, 0, 7, 1, 8, 0, 9], [4, 3, 3, 4, 1, 2, 0, 2], [98, 22, 77, 14], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [0, 0, 2], [53, 64, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 15, 8, 3, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), grad), alpha), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, tf.math.subtract(beta, tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [26570038.427783664, 509610893.7281733, 2412302970.8434815, 6661496423.671377, 14411300645.972263, 26568162664.44908], "accuracy": [0.09932637959718704, 0.10289261490106583, 0.09932637959718704, 0.1006472036242485, 0.1014397069811821, 0.09760929644107819], "val_loss": [100795458.28571428, 805491236.5714285, 2717560758.857143, 6440466724.571428, 12577684626.285715, 21732666221.714287], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [48, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0874389111995697, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [58, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [294555972.65275395, 5655381399.381852, 26778693556.258354, 73958770495.67032, 160012505337.40643, 295008467758.4932], "accuracy": [0.09932637959718704, 0.10289261490106583, 0.09932637959718704, 0.1006472036242485, 0.1014397069811821, 0.09760929644107819], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [33, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [294555972.65275395, 5655381399.381852, 26778693556.258354, 73958770495.67032, 160012505337.40643, 295008467758.4932], "accuracy": [0.09932637959718704, 0.10289261490106583, 0.09932637959718704, 0.1006472036242485, 0.1014397069811821, 0.09760929644107819], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 8, 8, 6, 4, 4, 4, 0, 5, 2, 4, 4, 9, 2, 6], [3, 0, 2, 0, 3, 1, 0, 0, 0, 0], [74, 32, 3, 66, 41, 5, 96], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 6, 9, 1, 2], [3, 0, 0], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 7, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), alpha))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [133.0661994972879, 1884.9184335878165, 8354.151026403175, 22528.01489467417, 48140.87767416375, 88103.86822662131], "accuracy": [0.09919429570436478, 0.10315678268671036, 0.09959053993225098, 0.1002509593963623, 0.1014397069811821, 0.09774138033390045], "val_loss": [413.9690726143973, 2852.084054129464, 9270.802734375, 21615.270647321428, 41827.55803571428, 71851.54464285714], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [0, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 0, 4, 1, 4], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 1, 3, 0], [4, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08175934851169586, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 0, 1, 1, 1], [1, 3, 9, 3, 2], [0, 0, 2], [8, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 3], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.305757125859027, 12.965824352421103, 36.10535356841304, 74.58986438695293, 133.66967035187014, 217.35122260447775], "accuracy": [0.09760929644107819, 0.10170386731624603, 0.09906221181154251, 0.1002509593963623, 0.10091137140989304, 0.09826971590518951], "val_loss": [4.611803736005511, 14.991055079868861, 34.27117701939174, 64.58683776855469, 108.49071175711495, 168.79133823939733], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [4, 8, 8, 6, 5, 9, 1, 2, 3, 5, 4, 4, 0, 2, 5, 6, 2, 6, 0, 5, 2, 6, 9, 4, 4, 9], [3, 0, 2, 0, 3, 1, 0, 0, 0, 3, 0, 3, 1, 3, 1, 0, 0], [85, 76, 27, 55, 3, 91, 37, 65], [0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [9, 3, 9, 1, 2], [3, 0, 1], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 13, 7, 4, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))))))))), tf.math.pow(tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(alpha))), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(grad, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027720422068323, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 0, 0, 1, 1], [1, 3, 3, 1, 2], [3, 0, 2], [40, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301757770837369, 2.301852700197308, 2.3024790935418107, 2.3011133550826064, 2.3027585255329743, 2.302780364372506], "accuracy": [0.09232597798109055, 0.0886276587843895, 0.09206181764602661, 0.09457138925790787, 0.0952318087220192, 0.09034473448991776], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 0, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301757770837369, 2.301852700197308, 2.3024790935418107, 2.3011133550826064, 2.3027585255329743, 2.302780364372506], "accuracy": [0.09232597798109055, 0.0886276587843895, 0.09206181764602661, 0.09457138925790787, 0.0952318087220192, 0.09034473448991776], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]