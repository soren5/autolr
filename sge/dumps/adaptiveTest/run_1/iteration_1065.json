[{"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 9, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8382856845855713, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0034349371240343, 1.375267851779395, 0.9301342453387876, 0.7974023041534953, 0.7621465571615375, 0.6893444870756192, 0.6677979552719052, 0.6630869039832924, 0.6082635710283812, 0.6186247636707877, 0.5661469522389785, 0.5675137017334079, 0.5571290003688123, 0.5232930297959262, 0.5096437047776797, 0.5251888725436705, 0.49360995523099177, 0.490456218882291, 0.5166044617569946, 0.4746731915501965, 0.4609633389441659, 0.46661848080566043, 0.44830186381835696, 0.44090604691567786, 0.4327531031385436, 0.42712436923655095, 0.4137692940414637, 0.4058825605069295, 0.4055491622885252, 0.3942501992243093, 0.37983439596825747, 0.37322678491266537, 0.38440781386536915, 0.3618167428733524, 0.3533990647594108, 0.35978353320725637, 0.34821363255379617, 0.357857384016926, 0.34171999733304115, 0.33135355531720595, 0.32695066053806565, 0.328094205056766, 0.3219738275918821, 0.317717035397594], "accuracy": [0.3387927711009979, 0.5251618027687073, 0.6596222519874573, 0.7020208835601807, 0.7096816897392273, 0.7376832365989685, 0.7446836829185486, 0.7397965788841248, 0.7644960880279541, 0.7621186375617981, 0.7841764688491821, 0.7792893648147583, 0.7853652238845825, 0.8061022162437439, 0.802800178527832, 0.7985734939575195, 0.8136309385299683, 0.8201030492782593, 0.8043851256370544, 0.8222163319587708, 0.8230088353157043, 0.8214238286018372, 0.8272355198860168, 0.8354246616363525, 0.8330471515655518, 0.8442742228507996, 0.8469158411026001, 0.8494254350662231, 0.8454629778862, 0.8561616539955139, 0.8595958352088928, 0.859199583530426, 0.8514066934585571, 0.8659358024597168, 0.8642187118530273, 0.8621054291725159, 0.8677849769592285, 0.863558292388916, 0.8734645247459412, 0.8762382864952087, 0.8800686597824097, 0.8753136992454529, 0.8750495314598083, 0.8803328275680542], "val_loss": [1.6528363909040178, 0.7625279767172677, 0.6851847682680402, 0.617649929864066, 0.5548577649252755, 0.5173871517181396, 0.5436028412410191, 0.5011741604123797, 0.4948525088174002, 0.47335588932037354, 0.49332925251552034, 0.4843946525028774, 0.43018882615225656, 0.42551019362040926, 0.41426117931093487, 0.4308430126735142, 0.3941828523363386, 0.40684010301317486, 0.40319771426064627, 0.40332492760249544, 0.4119431035859244, 0.37779304810932707, 0.4118347593716213, 0.39183366298675537, 0.36072979654584614, 0.3577570744923183, 0.36674158913748606, 0.3697026116507394, 0.362264232976096, 0.35023053203310284, 0.34240223680223736, 0.35644921234675814, 0.34793189593723844, 0.3379984072276524, 0.34562316962650846, 0.34318881375449045, 0.3536599023001535, 0.3310456531388419, 0.339128349508558, 0.3408739226205008, 0.33787901060921804, 0.3414388469287327, 0.33848432132175993, 0.3334433436393738], "val_accuracy": [0.45899999141693115, 0.6449999809265137, 0.7076666951179504, 0.7139999866485596, 0.7513333559036255, 0.7636666893959045, 0.7366666793823242, 0.7586666941642761, 0.7770000100135803, 0.7673333287239075, 0.7756666541099548, 0.7839999794960022, 0.815666675567627, 0.8069999814033508, 0.8176666498184204, 0.8083333373069763, 0.8333333134651184, 0.8326666951179504, 0.8233333230018616, 0.8263333439826965, 0.8230000138282776, 0.8396666646003723, 0.8106666803359985, 0.8233333230018616, 0.8450000286102295, 0.8503333330154419, 0.8386666774749756, 0.8416666388511658, 0.8463333249092102, 0.8583333492279053, 0.8546666502952576, 0.8399999737739563, 0.8500000238418579, 0.8586666584014893, 0.8573333621025085, 0.8500000238418579, 0.8536666631698608, 0.8586666584014893, 0.8633333444595337, 0.8579999804496765, 0.8619999885559082, 0.8550000190734863, 0.859000027179718, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 1, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8360000252723694, "mapping_values": [1, 4, 4, 2, 2, 1, 22, 22, 13, 9, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))), tf.math.add(beta, beta)), tf.math.add(beta, grad)))), grad))))), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.003489371036353, 1.3789286864132946, 0.9305675085415032, 0.7889866085887632, 0.7716683527545024, 0.6913879933830864, 0.6616502784703308, 0.6586714245702738, 0.6077136847998378, 0.6003806451213768, 0.5737208268897818, 0.565713155121615, 0.5610494092785845, 0.532625073588929, 0.507377673204722, 0.5231936569573494, 0.49458684959919885, 0.4943634719896499, 0.5275998586645342, 0.4772459575410658, 0.45805675742758767, 0.47897676449048127, 0.44936421031351054, 0.4407780171936498, 0.44047690930934613, 0.4301910076702213, 0.4153003706050004, 0.41720344947549914, 0.40316863499533595, 0.4004621213894195, 0.38153301854694777, 0.37363773479658174, 0.3790365982529604, 0.36525953894577257, 0.35629896951263385, 0.3621288063566777, 0.34621977567546763, 0.3598859521376222, 0.3389504909231962, 0.33851821504296126, 0.32441939351549554, 0.3387923255265586, 0.3209923246808733], "accuracy": [0.3389248549938202, 0.5267468094825745, 0.6602826714515686, 0.7061154246330261, 0.7041342258453369, 0.7388719916343689, 0.746268630027771, 0.7458723783493042, 0.7652885913848877, 0.7689869403839111, 0.7792893648147583, 0.7803460359573364, 0.785101056098938, 0.802271842956543, 0.8062343001365662, 0.7981772422790527, 0.8123101592063904, 0.8166688680648804, 0.8025360107421875, 0.8198388814926147, 0.8245938420295715, 0.8142913579940796, 0.8272355198860168, 0.8348963260650635, 0.8315942287445068, 0.8422929644584656, 0.8477083444595337, 0.8451988101005554, 0.8474441766738892, 0.8481045961380005, 0.860652506351471, 0.8573504090309143, 0.8539162874221802, 0.863558292388916, 0.8669924736022949, 0.8626337051391602, 0.8692378997802734, 0.8639545440673828, 0.8720116019248962, 0.8712190985679626, 0.8812574148178101, 0.8689737319946289, 0.8762382864952087], "val_loss": [1.653728382928031, 0.7738196679524013, 0.6619134800774711, 0.6324479579925537, 0.54188985483987, 0.5374270677566528, 0.5274221897125244, 0.49887546471187044, 0.4709825686046055, 0.4684093339102609, 0.47958753790174213, 0.4804270267486572, 0.43715706893375944, 0.4330119320324489, 0.41193469933101107, 0.42443929399762836, 0.39484308447156635, 0.41605712686266216, 0.4122623460633414, 0.3980246697153364, 0.4182598079953875, 0.38373699358531405, 0.4068461401121957, 0.40095201560429167, 0.36470918144498554, 0.3621225357055664, 0.38148031915937153, 0.36484510557992117, 0.36528466429029194, 0.3489158494131906, 0.34663689136505127, 0.34523806401661467, 0.351163991859981, 0.3371043120111738, 0.3420986107417515, 0.3395352193287441, 0.35245267833982197, 0.33117325816835674, 0.33570315156664166, 0.3420343313898359, 0.34327765873500277, 0.3387692740985325, 0.33742267744881765], "val_accuracy": [0.4593333303928375, 0.6430000066757202, 0.7059999704360962, 0.7129999995231628, 0.7506666779518127, 0.7486666440963745, 0.7476666569709778, 0.7580000162124634, 0.7906666398048401, 0.7763333320617676, 0.7773333191871643, 0.7866666913032532, 0.8053333163261414, 0.8026666641235352, 0.8159999847412109, 0.8140000104904175, 0.8303333520889282, 0.8259999752044678, 0.8193333148956299, 0.8326666951179504, 0.8163333535194397, 0.8339999914169312, 0.8140000104904175, 0.8199999928474426, 0.8403333425521851, 0.847000002861023, 0.8270000219345093, 0.8503333330154419, 0.8410000205039978, 0.8560000061988831, 0.8576666712760925, 0.8476666808128357, 0.8479999899864197, 0.8600000143051147, 0.8573333621025085, 0.8496666550636292, 0.8536666631698608, 0.862333357334137, 0.8600000143051147, 0.8579999804496765, 0.859666645526886, 0.8560000061988831, 0.8610000014305115]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 2, 6, 2, 1, 8, 4, 2, 6, 8, 6, 0, 8, 4, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [4, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8337143063545227, "mapping_values": [1, 4, 4, 2, 2, 1, 27, 27, 16, 11, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)))), grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.negative(tf.math.add(beta, grad)))))))))), grad)), tf.math.add(beta, grad))), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0255532022858374, 1.4468710248527934, 1.0661671406021995, 0.8908052893520079, 0.8160256936707281, 0.7441339179383387, 0.7050475334415756, 0.7177176271384308, 0.6502030787765861, 0.6435360274908801, 0.6389523599803125, 0.6016479142668572, 0.6033927704349186, 0.5750742236526494, 0.5574966116966179, 0.5759355671385953, 0.5381283196460113, 0.5330138356772869, 0.5653803231709543, 0.5117005962012955, 0.5174161363444734, 0.509387897053226, 0.4946410389521874, 0.49010433830746947, 0.48467550775976764, 0.4621451388630711, 0.4542815454639795, 0.4715511464778191, 0.45598847571066137], "accuracy": [0.3261128067970276, 0.49372607469558716, 0.6225069165229797, 0.6700568199157715, 0.6909258961677551, 0.7235503792762756, 0.7281733155250549, 0.720380425453186, 0.7485140562057495, 0.7454761862754822, 0.7555144429206848, 0.7651565074920654, 0.7667415142059326, 0.7761194109916687, 0.7868181467056274, 0.7709681391716003, 0.7973847389221191, 0.7947431206703186, 0.7821952104568481, 0.8067626357078552, 0.8025360107421875, 0.8055738806724548, 0.8088759779930115, 0.8115176558494568, 0.8157442808151245, 0.8226125836372375, 0.830669641494751, 0.8227446675300598, 0.8255184292793274], "val_loss": [1.454826899937221, 0.9582891123635429, 0.8153464794158936, 0.6200676134654454, 0.5657368898391724, 0.5632299184799194, 0.6518815585545131, 0.5272484336580548, 0.5122955696923392, 0.5073305538722447, 0.4984285661152431, 0.4901770693915231, 0.479108418737139, 0.4738567386354719, 0.47633125100817, 0.454200233731951, 0.4405222364834377, 0.45578781196049284, 0.4270912664277213, 0.43574159485953196, 0.4289257100650242, 0.4074891890798296, 0.4332725320543562, 0.39200979471206665, 0.3900852884565081, 0.4013177326747349, 0.4339932543890817, 0.4136380808694022, 0.385053174836295], "val_accuracy": [0.4713333249092102, 0.6086666584014893, 0.6106666922569275, 0.7126666903495789, 0.7440000176429749, 0.7353333234786987, 0.6833333373069763, 0.7516666650772095, 0.7643333077430725, 0.7553333044052124, 0.765999972820282, 0.7793333530426025, 0.7793333530426025, 0.781333327293396, 0.7620000243186951, 0.7986666560173035, 0.8050000071525574, 0.7926666736602783, 0.8113333582878113, 0.8003333210945129, 0.8109999895095825, 0.824999988079071, 0.7983333468437195, 0.8339999914169312, 0.8289999961853027, 0.8286666870117188, 0.8076666593551636, 0.8196666836738586, 0.8299999833106995]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 8, 6, 2, 1, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8305714130401611, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.025490295334326, 1.4435904054215964, 1.0417560948876499, 0.8850564271184069, 0.8353124354981853, 0.7308437323227, 0.7187664286965282, 0.7121508505759757, 0.6486549585282196, 0.6570175718070809, 0.6234088289959713, 0.6014157142527052, 0.6195157391047827, 0.5645903203119266, 0.5598891894610456, 0.5762506559886763, 0.5396736694671821, 0.5346575285528378, 0.558081019792291, 0.5056747589538346, 0.5100940442938673, 0.511955938921345, 0.49322504645970994, 0.4862252548858553, 0.48331483107012463, 0.46592531257679654, 0.4484351917760814, 0.4788233297746006, 0.4537743441125799], "accuracy": [0.3261128067970276, 0.4935939908027649, 0.6193369626998901, 0.667811393737793, 0.6847180128097534, 0.7244749665260315, 0.7236824631690979, 0.719852089881897, 0.7436270117759705, 0.7475894689559937, 0.755118191242218, 0.7680623531341553, 0.7581561207771301, 0.7862898111343384, 0.7814027070999146, 0.7730814814567566, 0.7979130744934082, 0.7946110367774963, 0.7828556299209595, 0.8099326491355896, 0.8026680946350098, 0.8042530417442322, 0.81112140417099, 0.8168009519577026, 0.8148196935653687, 0.8220842480659485, 0.8301413059234619, 0.8204993009567261, 0.8301413059234619], "val_loss": [1.4553323132651192, 0.9141239098140171, 0.7065758534840175, 0.7022970744541713, 0.5970747300556728, 0.55071679183415, 0.6036995138440814, 0.52020263671875, 0.512095468384879, 0.5163275684629168, 0.48041348797934397, 0.5179922580718994, 0.4769618170601981, 0.4784961257662092, 0.471489531653268, 0.45689306940351215, 0.43700345924922396, 0.4552426167896816, 0.42628250803266254, 0.429010808467865, 0.430156341620854, 0.4038681387901306, 0.42454542432512554, 0.3886162298066275, 0.3886875254767282, 0.3940590109143938, 0.44861716883523123, 0.406211793422699, 0.38347759417125155], "val_accuracy": [0.47200000286102295, 0.6209999918937683, 0.6783333420753479, 0.6759999990463257, 0.7103333473205566, 0.7379999756813049, 0.6959999799728394, 0.7630000114440918, 0.7723333239555359, 0.7350000143051147, 0.7789999842643738, 0.7616666555404663, 0.7689999938011169, 0.7816666960716248, 0.7723333239555359, 0.793666660785675, 0.8109999895095825, 0.7929999828338623, 0.8076666593551636, 0.8080000281333923, 0.8113333582878113, 0.8270000219345093, 0.8066666722297668, 0.8379999995231628, 0.824999988079071, 0.8326666951179504, 0.8050000071525574, 0.8276666402816772, 0.8326666951179504]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 0, 2, 2, 4, 4, 4, 2, 3, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8288571238517761, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.003657572997827, 1.3802492188235882, 0.9339878955663329, 0.8062800225911123, 0.77075710596268, 0.6851217843490806, 0.6678006487783267, 0.6605575757728293, 0.6201864089066437, 0.5945887670556647, 0.5813306395120436, 0.5617806244724698, 0.5679232155280012, 0.5311733219901001, 0.5102505776954915, 0.5244776136005056, 0.49742340507792004, 0.49817848048111263, 0.519084180535862, 0.481643816168597, 0.4600773866048122, 0.4698383789792462, 0.4550068620890044, 0.4438328044195028, 0.43801765995900455, 0.4310668713625128, 0.41647513610119075, 0.4141860986902194, 0.4063585665066638, 0.4022579042824299, 0.38266348253466653, 0.3724461196632811, 0.3704882822433845, 0.3633403043193651, 0.3582205226621009, 0.361678622921838, 0.3495749070140207, 0.36011454696825956, 0.34067736948092286, 0.33690692266893896], "accuracy": [0.3387927711009979, 0.5267468094825745, 0.6573768258094788, 0.6979262828826904, 0.7029454708099365, 0.739928662776947, 0.7413815855979919, 0.7453441023826599, 0.7577598690986633, 0.7734777331352234, 0.7757231593132019, 0.7852331399917603, 0.7819310426712036, 0.8031964302062988, 0.8067626357078552, 0.7989697456359863, 0.8145555257797241, 0.8146876096725464, 0.8018755912780762, 0.8162726163864136, 0.8235371708869934, 0.8204993009567261, 0.8255184292793274, 0.8350284099578857, 0.8302733898162842, 0.8409721255302429, 0.8475762605667114, 0.8450667262077332, 0.8491612672805786, 0.8508783578872681, 0.8584070801734924, 0.8618412613868713, 0.8595958352088928, 0.8617091774940491, 0.8640866279602051, 0.8625016212463379, 0.8669924736022949, 0.8634262084960938, 0.8716153502464294, 0.8722757697105408], "val_loss": [1.6532028062003, 0.7772488083158221, 0.677113515990121, 0.6256594657897949, 0.5469502551215035, 0.5678749935967582, 0.5118642023631504, 0.49630253655569895, 0.48963756220681326, 0.48655714307512554, 0.4744872195380075, 0.4968520062310355, 0.4374657784189497, 0.42407519476754324, 0.4330938032695225, 0.4232545239584787, 0.3966240201677595, 0.42035177775791716, 0.4114548819405692, 0.3985931192125593, 0.413107659135546, 0.3803695525441851, 0.40595281975609915, 0.38920880215508596, 0.3642800876072475, 0.36083697421210154, 0.37745658840451923, 0.3628864458629063, 0.36022359132766724, 0.3526406969342913, 0.34642107997621807, 0.3423111353601728, 0.35567773239953177, 0.3380655476025173, 0.3429212825638907, 0.34400664057050434, 0.35150507518223356, 0.33282027925763813, 0.3401730571474348, 0.3450897080557687], "val_accuracy": [0.4543333351612091, 0.6383333206176758, 0.7023333311080933, 0.7103333473205566, 0.7556666731834412, 0.7303333282470703, 0.7630000114440918, 0.7673333287239075, 0.7796666622161865, 0.7616666555404663, 0.7853333353996277, 0.7749999761581421, 0.8053333163261414, 0.8069999814033508, 0.7956666946411133, 0.8090000152587891, 0.8316666483879089, 0.824999988079071, 0.8199999928474426, 0.8330000042915344, 0.8206666707992554, 0.8413333296775818, 0.8143333196640015, 0.8236666917800903, 0.8420000076293945, 0.843666672706604, 0.8293333053588867, 0.8479999899864197, 0.8433333039283752, 0.8516666889190674, 0.8539999723434448, 0.8503333330154419, 0.8416666388511658, 0.8573333621025085, 0.859666645526886, 0.8479999899864197, 0.8529999852180481, 0.8586666584014893, 0.8579999804496765, 0.8529999852180481]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 8, 6, 2, 1, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [22, 85, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8125714063644409, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.14768379719628, 1.411440112933727, 1.1289748656137224, 0.9567638282463488, 0.886131204122471, 0.7968055610139656, 0.7629668610033941, 0.7647771420117934, 0.7204224769512676, 0.6917256299515032, 0.6867824313411025, 0.6715145433867029, 0.6519690904682182, 0.6372313989687275, 0.6275449143566428, 0.6446767926704237, 0.6049669953290703, 0.5992460358947449, 0.6290373278253066, 0.58829954441717, 0.5829584904555333, 0.5810879581183365, 0.5700072602053612, 0.5652077966409668, 0.5636776758931363, 0.5488654355079491, 0.5366047302399014, 0.5560369843646851, 0.5393872975539443, 0.5217086509344459, 0.5155736586641657, 0.5150741921628802, 0.51263904351096, 0.5224823342054874, 0.5082507456030749, 0.4997305406153934, 0.4987789722418568, 0.49949449015378544, 0.4822510290478104, 0.49873310669601206, 0.4700865900244113, 0.47954172599411693, 0.46776847734805255, 0.47628871868425404, 0.4720895254435619, 0.46398997618584914, 0.4580001797123104, 0.462796267233725, 0.4518098794686528, 0.44747881761568414, 0.449492858629563, 0.4413215003434331, 0.4441770829615607, 0.43119742120923055, 0.43277714898352926, 0.42336646278599516, 0.43254914690852714, 0.4244492039027357, 0.42496336148856195, 0.4214496022485676, 0.4107529426476014, 0.4093487595507277], "accuracy": [0.2921674847602844, 0.5266147255897522, 0.5997886657714844, 0.6552634835243225, 0.669792652130127, 0.7047945857048035, 0.7117950320243835, 0.7087571024894714, 0.7284374833106995, 0.7425703406333923, 0.7387399077415466, 0.7448157668113708, 0.7589486241340637, 0.7593448758125305, 0.76106196641922, 0.7531369924545288, 0.7680623531341553, 0.769911527633667, 0.7574957013130188, 0.7770439982414246, 0.7781006693840027, 0.7783648371696472, 0.7852331399917603, 0.7913089394569397, 0.7829877138137817, 0.7921014428138733, 0.7961959838867188, 0.7895918488502502, 0.7927618622779846, 0.8034605979919434, 0.8043851256370544, 0.8087438941001892, 0.8074230551719666, 0.8006868362426758, 0.8117818236351013, 0.8095363974571228, 0.8103289008140564, 0.8086118102073669, 0.8173292875289917, 0.8141592741012573, 0.8264430165290833, 0.8175934553146362, 0.8236692547798157, 0.8212917447090149, 0.8232730031013489, 0.8277638554573059, 0.8231409192085266, 0.8252542614936829, 0.8296129703521729, 0.8285563588142395, 0.8330471515655518, 0.8308017253875732, 0.8341038227081299, 0.8384625315666199, 0.8354246616363525, 0.8379341959953308, 0.8359529972076416, 0.8412362933158875, 0.8379341959953308, 0.8412362933158875, 0.8418967127799988, 0.8449346423149109], "val_loss": [1.373509304864066, 0.9116640772138324, 0.9245657920837402, 0.6916182381766183, 0.6060939856937954, 0.5849474327904838, 0.6349060876028878, 0.558113660131182, 0.5325351272310529, 0.542406473840986, 0.525544456073216, 0.5363698516573224, 0.5070221424102783, 0.5147056749888829, 0.4986339977809361, 0.4963000501905169, 0.4812077794756208, 0.5000071695872715, 0.47304281166621615, 0.4804541213171823, 0.48512448583330425, 0.4572937403406416, 0.4722304344177246, 0.44541679109845844, 0.4403679370880127, 0.4465158666883196, 0.4446770293372018, 0.453907915524074, 0.4259143131119864, 0.4386155605316162, 0.4253638982772827, 0.4282929301261902, 0.4427672965185983, 0.42431874786104473, 0.426063026700701, 0.4172263315745762, 0.44096188034330097, 0.4052203467914036, 0.41296811614717754, 0.39940692697252544, 0.3998947484152658, 0.4011190874235971, 0.4046450597899301, 0.414011469909123, 0.4000187175614493, 0.39907905885151457, 0.40210494824818205, 0.3862578102520534, 0.38438351665224346, 0.3778432863099234, 0.37994920355933054, 0.37526375906808035, 0.3744953104427883, 0.39109690700258526, 0.37862203802381245, 0.37923204047339304, 0.37059677498681204, 0.37110587528773714, 0.3844158138547625, 0.3722191367830549, 0.3755074569157192, 0.37429935591561453], "val_accuracy": [0.5173333287239075, 0.6340000033378601, 0.5933333039283752, 0.6793333292007446, 0.7316666841506958, 0.7310000061988831, 0.6980000138282776, 0.7353333234786987, 0.7606666684150696, 0.7553333044052124, 0.7663333415985107, 0.7596666812896729, 0.7633333206176758, 0.7633333206176758, 0.7616666555404663, 0.7756666541099548, 0.7873333096504211, 0.7739999890327454, 0.7850000262260437, 0.781333327293396, 0.7816666960716248, 0.7976666688919067, 0.7886666655540466, 0.8033333420753479, 0.8080000281333923, 0.8059999942779541, 0.8016666769981384, 0.8006666898727417, 0.8083333373069763, 0.8076666593551636, 0.8183333277702332, 0.8050000071525574, 0.8006666898727417, 0.8136666417121887, 0.812333345413208, 0.8199999928474426, 0.8033333420753479, 0.8246666789054871, 0.8226666450500488, 0.8233333230018616, 0.8236666917800903, 0.8263333439826965, 0.828000009059906, 0.8190000057220459, 0.8230000138282776, 0.8223333358764648, 0.8236666917800903, 0.8336666822433472, 0.8349999785423279, 0.8363333344459534, 0.8363333344459534, 0.840666651725769, 0.8410000205039978, 0.831333339214325, 0.8360000252723694, 0.8289999961853027, 0.8443333506584167, 0.8420000076293945, 0.8303333520889282, 0.843666672706604, 0.8420000076293945, 0.8413333296775818]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 4, 2, 4, 2, 6, 2, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7617142796516418, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 6, 6, 2, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), beta)), tf.math.pow(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(tf.math.add(beta, grad), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, sigma)", "other_info": {"loss": [2.1464507146014546, 1.4180149109671223, 1.101974697759233, 0.9478628079511108, 0.8828287097866414, 0.7995022729702472, 0.763166473486861, 0.7710754162584077, 0.729210348043302, 0.6974732456678381, 0.6912800992925515, 0.6624414795000225, 0.6670756329319906, 0.6364385423218144, 0.6297126883812364, 0.6446343942750415], "accuracy": [0.29203540086746216, 0.5218597054481506, 0.6135252714157104, 0.6491876840591431, 0.6811517477035522, 0.7053229212760925, 0.7160216569900513, 0.7099458575248718, 0.7251353859901428, 0.7384757399559021, 0.7376832365989685, 0.7470611333847046, 0.7458723783493042, 0.7609298825263977, 0.7602694630622864, 0.7526086568832397], "val_loss": [1.363856417792184, 0.9118233408246722, 0.7989382573536464, 0.7155429806028094, 0.6107408830097744, 0.5760330642972674, 0.5782504252025059, 0.5610768284116473, 0.531278133392334, 0.5369958196367536, 0.5190046685082572, 0.5361583743776593, 0.5086989402770996, 0.5183739832469395, 0.49813783168792725, 0.4986356496810913], "val_accuracy": [0.5163333415985107, 0.5929999947547913, 0.6266666650772095, 0.675000011920929, 0.7289999723434448, 0.7493333220481873, 0.746999979019165, 0.7409999966621399, 0.765666663646698, 0.7649999856948853, 0.7673333287239075, 0.7606666684150696, 0.765666663646698, 0.762333333492279, 0.7613333463668823, 0.7633333206176758]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [22, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0], [5, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.728857159614563, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 7, 6, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.pow(beta, tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(alpha))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2987251121134036, 2.2888683422193425, 2.2826040893293187, 2.2753604082556733, 2.267076228666677, 2.2575046839794037, 2.2480577646922346, 2.237690667245744, 2.2297590260083067, 2.216105714371459, 2.2034895876694383, 2.1903371374132514, 2.171563627099191, 2.1585697290715036, 2.139547800863455, 2.1200345686760245, 2.098113587535273, 2.0696982205929677, 2.0481227583904715, 2.018554671124665, 1.9899195965806082, 1.956673765147855, 1.9171397389044238, 1.8859626948951558, 1.844309531576393, 1.8004371184777463, 1.765160217135259, 1.7284280207210354, 1.6807773408164217, 1.6466211800278612, 1.601704758770194, 1.5724418085674174, 1.5376468692646523, 1.5031865680253957, 1.4636403952670245, 1.4386452958410947, 1.4049043758371171, 1.3839972615320733, 1.3599683037366, 1.3215855905770657, 1.3003158867713436, 1.2913211958991884, 1.260034954196757, 1.2394738211655079, 1.2245472563319217, 1.2139356161514845, 1.2025676968705148, 1.18338961704233, 1.1714875666441116, 1.152530961883161, 1.1265558568068688, 1.1201191072875891, 1.111733147764502, 1.1053757437971903, 1.0963296515673002, 1.0916124407987804, 1.0694326935757925, 1.0620608340007534, 1.0600901542007806, 1.037525564750991, 1.029422101925991, 1.0372913922332676, 1.0101175796653397, 1.0204493297231259, 1.0081264605816282, 1.003428316906758, 0.9859880319187717, 0.9865526026423581, 0.9793103663534961, 0.9683855400896658, 0.9708522707164846, 0.9701981985683943, 0.9648446228053544, 0.9387610654364236, 0.9448521238638662, 0.941056237063624, 0.9400096283124627, 0.9275707017633783, 0.925608216842341, 0.9222857142483569, 0.9258387949582907, 0.9013910725006197, 0.9116824123412548, 0.8984311408984615, 0.9007146140965708, 0.8853308087909353, 0.9045795981185847, 0.8930323257217664, 0.8797519567809196, 0.8844762704454597, 0.8734175033494387, 0.8763616017897872, 0.8743575766039027, 0.8681031550556173, 0.8536289141257174, 0.8639488896957053, 0.8489650401220723, 0.8592874099156167, 0.8490047372327489, 0.8511737629233916], "accuracy": [0.0956280529499054, 0.12402588874101639, 0.14080041646957397, 0.15955619513988495, 0.18650111556053162, 0.204860657453537, 0.22559767961502075, 0.2533350884914398, 0.2538634240627289, 0.2868841588497162, 0.30299827456474304, 0.3147536516189575, 0.33483028411865234, 0.34460440278053284, 0.3579447865486145, 0.36349228024482727, 0.3683793544769287, 0.39228636026382446, 0.3937392830848694, 0.40681546926498413, 0.4111742079257965, 0.41764628887176514, 0.436930388212204, 0.43164706230163574, 0.4547615945339203, 0.45845991373062134, 0.4562145173549652, 0.469819039106369, 0.4835556745529175, 0.4850085973739624, 0.4966318905353546, 0.5012547969818115, 0.5102364420890808, 0.5132743120193481, 0.5266147255897522, 0.525029718875885, 0.533879280090332, 0.5349359512329102, 0.5457667708396912, 0.5564654469490051, 0.5634658336639404, 0.5612204670906067, 0.5764099955558777, 0.5746929049491882, 0.5856558084487915, 0.5842028856277466, 0.5894861817359924, 0.5894861817359924, 0.5919957756996155, 0.5982036590576172, 0.6155065298080444, 0.613789439201355, 0.6152423620223999, 0.6148461103439331, 0.615770697593689, 0.6243560910224915, 0.6264694333076477, 0.6248844265937805, 0.6207898855209351, 0.6346585750579834, 0.6305639743804932, 0.6358473300933838, 0.6435081362724304, 0.6388852000236511, 0.6382247805595398, 0.6498481035232544, 0.6493197679519653, 0.6530181169509888, 0.659490168094635, 0.6577730774879456, 0.6571126580238342, 0.6535464525222778, 0.6563201546669006, 0.6676793098449707, 0.6688680648803711, 0.6631884574890137, 0.6686038970947266, 0.6729626059532166, 0.6695284843444824, 0.6737551093101501, 0.6666226387023926, 0.6773213744163513, 0.672170102596283, 0.6798309087753296, 0.6811517477035522, 0.6837934255599976, 0.6774534583091736, 0.6774534583091736, 0.6872276067733765, 0.6869634389877319, 0.6863030195236206, 0.6892088055610657, 0.6870955228805542, 0.6876237988471985, 0.6997754573822021, 0.6927750706672668, 0.698718786239624, 0.694360077381134, 0.6966054439544678, 0.6923788189888], "val_loss": [1.9638800621032715, 1.9564103399004256, 1.9488099643162318, 1.9411566598074776, 1.9332518577575684, 1.92495482308524, 1.916156428200858, 1.906550475529262, 1.8963445935930525, 1.8850396701267786, 1.872643062046596, 1.859083584376744, 1.843712329864502, 1.8271209853036063, 1.808976513998849, 1.7890116146632604, 1.7671653883797782, 1.742847170148577, 1.7168284824916296, 1.6885676043374198, 1.6580842903682165, 1.625610249383109, 1.5906068597521101, 1.5542283739362444, 1.5161644050053187, 1.4763508864811488, 1.4362503801073347, 1.396204948425293, 1.355679648263114, 1.3159702505384172, 1.2769405160631453, 1.2397639410836356, 1.2040650163378035, 1.169966391154698, 1.1371947016034807, 1.1072108064379012, 1.0787858963012695, 1.052889108657837, 1.028296368462699, 1.0044655459267753, 0.9832590988704136, 0.9634099006652832, 0.9440062046051025, 0.9266277381352016, 0.9109095505305699, 0.8956585611615863, 0.8816383225577218, 0.8679774488721576, 0.8559246914727348, 0.8443260703768048, 0.8325743504932949, 0.8217612164361137, 0.8122647489820208, 0.8038132190704346, 0.7948414087295532, 0.7864636693681989, 0.7792365040097918, 0.7720682961600167, 0.7649402107511248, 0.757334862436567, 0.7506772109440395, 0.745438984462193, 0.7385839053562709, 0.732993517603193, 0.7282067877905709, 0.7231842279434204, 0.7180281026022775, 0.7130569389888218, 0.7071548870631627, 0.7024369750704084, 0.6991958958762032, 0.6944281884602138, 0.6914218834468296, 0.6862637145178658, 0.6829419987542289, 0.679303594997951, 0.6759130614144462, 0.6729877846581596, 0.6684970685413906, 0.6658635650362287, 0.6635390520095825, 0.6596028123583112, 0.6575375965663365, 0.6543259790965489, 0.651238100869315, 0.6477892398834229, 0.6459700039454869, 0.6441773857389178, 0.6409458262579781, 0.6397196224757603, 0.6359902450016567, 0.6333374295915876, 0.631675294467381, 0.6290346043450492, 0.626781736101423, 0.6244185141154698, 0.6224017824445452, 0.6201561519077846, 0.6180331707000732, 0.6165222440447126], "val_accuracy": [0.08699999749660492, 0.1589999943971634, 0.23499999940395355, 0.28866666555404663, 0.3256666660308838, 0.3556666672229767, 0.3736666738986969, 0.3853333294391632, 0.3986666798591614, 0.41466665267944336, 0.4286666810512543, 0.4449999928474426, 0.45766666531562805, 0.46833333373069763, 0.47999998927116394, 0.4893333315849304, 0.5019999742507935, 0.5096666812896729, 0.5193333625793457, 0.5263333320617676, 0.5336666703224182, 0.5419999957084656, 0.5503333210945129, 0.5553333163261414, 0.5600000023841858, 0.5640000104904175, 0.5726666450500488, 0.5763333439826965, 0.5803333520889282, 0.5863333344459534, 0.5916666388511658, 0.6003333330154419, 0.6079999804496765, 0.6169999837875366, 0.6223333477973938, 0.6299999952316284, 0.6399999856948853, 0.6460000276565552, 0.6506666541099548, 0.6543333530426025, 0.6573333144187927, 0.6603333353996277, 0.6633333563804626, 0.6646666526794434, 0.6669999957084656, 0.6700000166893005, 0.6710000038146973, 0.6726666688919067, 0.6756666898727417, 0.6813333630561829, 0.6816666722297668, 0.6840000152587891, 0.6833333373069763, 0.684333324432373, 0.6869999766349792, 0.690666675567627, 0.6883333325386047, 0.6909999847412109, 0.6926666498184204, 0.6963333487510681, 0.6966666579246521, 0.6973333358764648, 0.6986666917800903, 0.699999988079071, 0.7009999752044678, 0.70333331823349, 0.7016666531562805, 0.7056666612625122, 0.7076666951179504, 0.7059999704360962, 0.7070000171661377, 0.7096666693687439, 0.7056666612625122, 0.7116666436195374, 0.7093333601951599, 0.7106666564941406, 0.7129999995231628, 0.7083333134651184, 0.715666651725769, 0.7146666646003723, 0.7146666646003723, 0.7146666646003723, 0.7143333554267883, 0.7170000076293945, 0.718666672706604, 0.7226666808128357, 0.7229999899864197, 0.7213333249092102, 0.7226666808128357, 0.7179999947547913, 0.7226666808128357, 0.7246666550636292, 0.7250000238418579, 0.7239999771118164, 0.7250000238418579, 0.7286666631698608, 0.7296666502952576, 0.7316666841506958, 0.7323333621025085, 0.7319999933242798]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 4, 8, 4, 2, 6, 8, 6, 2, 8, 5, 0, 2, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 0, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [5, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.6420000195503235, "mapping_values": [1, 4, 4, 2, 2, 1, 38, 38, 22, 16, 3, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.add(beta, grad))), grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), grad)))))), tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1516414776674715, 1.8787412313091725, 1.179793851234815, 1.195503476053071, 1.1262136929543136, 1.3887915698339786, 1.5776287358214338, 1.3653092958734745], "accuracy": [0.3255844712257385, 0.3595297932624817, 0.5832782983779907, 0.5918636918067932, 0.6302998065948486, 0.5931845307350159, 0.5711266398429871, 0.5568616986274719], "val_loss": [1.9432791301182337, 1.0213125092642648, 0.7517931972231183, 0.7687028646469116, 0.9744146551404681, 1.102351495197841, 0.8763812780380249, 0.9383284023829869], "val_accuracy": [0.23733332753181458, 0.6050000190734863, 0.7020000219345093, 0.6650000214576721, 0.6623333096504211, 0.6733333468437195, 0.6380000114440918, 0.6483333110809326]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [95, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 8, 6, 2, 8, 8, 4, 2, 6, 6, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [67, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.1662857085466385, "mapping_values": [1, 4, 4, 2, 2, 1, 25, 25, 16, 9, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(grad))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))))), tf.math.add(beta, grad)))), grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), tf.math.negative(grad)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.817188658277829, 2.2618377394821696, 2.2560647004442034, 2.2997323379320096, 2.2416351407101094, 2.305116548797694, 2.3042286646884147, 2.3009700414259293, 2.2264532123999494], "accuracy": [0.17897239327430725, 0.15770703554153442, 0.1414608359336853, 0.1216483935713768, 0.23286223411560059, 0.1018359512090683, 0.10091137140989304, 0.10685510188341141, 0.187689870595932], "val_loss": [1.9559905869620187, 1.9741541998726981, 1.9750073296683175, 1.9115527016775948, 1.9759727886744909, 1.973759378705706, 1.9734639440264021, 1.9618279593331474, 2.0493161337716237], "val_accuracy": [0.10000000149011612, 0.10466666519641876, 0.09866666793823242, 0.1456666737794876, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [4, 7, 3, 4, 9], [4, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.4259210081620695, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03407740220427513, 0.07172103971242905, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.9559851373944963, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004333333112299442, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [756541074560.6969, 2.3904684827532736, 2.7746298395647364, 5.530077443886836, 4.103331378264875, 2.3324545121951865, 2.337759674248867, 2.3436519482415727, 2.3498311548531565, 2.356291867769972], "accuracy": [0.06472064554691315, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10117553919553757, 0.10394927859306335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.020916053227016, 2.12940399987357, 3.321505614689418, 10.621802466256279, 1.9955189568655831, 1.9996867179870605, 2.004234654562814, 2.0091723033360074, 2.014415740966797, 2.020127773284912], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025186338980186, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 8, 6, 2, 1, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [5, 8, 6, 2, 1, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 2, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08717474341392517, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 2, 5, 2, 1, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [77, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.negative(grad)), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(alpha, tf.math.sqrt(tf.math.add(beta, beta)))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 8, 3, 2, 1, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [10567134261998.043, 2.3468620840742007, 2.410702834653974, 2.663403235248933, 3.848069483278733, 6.184110621199269, 2.8253248683560117, 2.910664259466308, 2.9323579862589817, 2.9540500318401004, 2.9761778885079666], "accuracy": [0.06472064554691315, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10276053100824356, 0.10130762308835983, 0.10619468986988068, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0024094581604004, 2.035903113228934, 2.144996711186, 2.657562051500593, 4.357252665928432, 2.1507088797433034, 2.4712418828691756, 2.4893010003226146, 2.5074239458356584, 2.525815282549177, 2.544326032911028], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 2, 4, 2, 1, 5, 4, 3, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 3, 0, 1, 3, 3, 3, 2, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 20, 20, 11, 9, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.square(grad), tf.math.add(beta, grad))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, grad))), beta))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3025186338980186, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 9, 1, 8, 4, 2, 6, 2, 8, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0], [5, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 6, 6, 4, 2, 1, 2, 1, 1, 0, 0, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0664377212524414, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 8, 6, 2, 1, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302097559038202, 2.3002357187524307, 2.3021659205193217, 2.30298203446405, 2.303056371210431, 2.301964282233717], "accuracy": [0.08875974267721176, 0.09721305221319199, 0.09179764986038208, 0.09272222965955734, 0.09060890227556229, 0.08955223858356476], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}]