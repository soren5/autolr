[{"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 0, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.7868571281433105, "mapping_values": [1, 13, 13, 8, 5, 2, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.square(alpha)))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2828433618191575, 2.122819721375978, 1.6157286841840068, 1.3037714277669785, 0.9680795018636099, 0.8910106386821567, 0.8319255989760833, 0.8295448337878534, 0.8390638611540582, 0.8350772979457569, 0.8028628006508605, 0.788797423745411, 0.7574164357089002, 0.6815939420612024, 0.6481953278477197, 0.6381167820841173, 0.628482935482469, 0.6083258295166274, 0.6011654357978806, 0.5799077415211231, 0.5595809673872512, 0.5538335565043132, 0.5466102306333595, 0.5313430590172012, 0.5317781598198573, 0.5146572922183349, 0.5061058050464126, 0.5070394462464335, 0.49653132890650403, 0.48501313911248284, 0.48479122857942936, 0.4934693138636555, 0.4657532503229831, 0.4649859233192874, 0.4635359187285819, 0.44309862636855374, 0.42968237854313024], "accuracy": [0.13921542465686798, 0.3481706380844116, 0.45845991373062134, 0.5625412464141846, 0.640338122844696, 0.6650376319885254, 0.6863030195236206, 0.6812838315963745, 0.6884163022041321, 0.687887966632843, 0.7099458575248718, 0.7047945857048035, 0.7128516435623169, 0.7491744756698608, 0.7572315335273743, 0.7574957013130188, 0.7667415142059326, 0.7676661014556885, 0.7728173136711121, 0.7866860628128052, 0.7884030938148499, 0.7864218950271606, 0.8013472557067871, 0.805177628993988, 0.7972526550292969, 0.8062343001365662, 0.8187822103500366, 0.8119139075279236, 0.8204993009567261, 0.8219521641731262, 0.8201030492782593, 0.8239334225654602, 0.8252542614936829, 0.8190463781356812, 0.8259146809577942, 0.8337075710296631, 0.8317263126373291], "val_loss": [1.9022117342267717, 1.5669303621564592, 0.8528610297611782, 0.7401614359446934, 0.7045822654451642, 0.6170127051217216, 0.597493052482605, 0.6036192349025181, 0.6277967521122524, 0.5940921136311123, 0.6004573106765747, 0.542583533695766, 0.5384766374315534, 0.5259736606052944, 0.5134348017828805, 0.4971135514123099, 0.478645920753479, 0.4638486589704241, 0.4685506650379726, 0.4451685973576137, 0.44421454838344027, 0.4475046055657523, 0.43966189452580046, 0.4354872192655291, 0.4308397259031023, 0.41820294516427176, 0.41812913758414133, 0.4160736118044172, 0.4172278812953404, 0.4117768406867981, 0.43644154923302786, 0.41572960785457064, 0.4026931864874704, 0.39768067428043913, 0.4018753596714565, 0.40679939304079327, 0.4143945745059422], "val_accuracy": [0.3646666705608368, 0.48899999260902405, 0.671999990940094, 0.7066666483879089, 0.7089999914169312, 0.7276666760444641, 0.734333336353302, 0.7353333234786987, 0.7143333554267883, 0.7549999952316284, 0.7419999837875366, 0.7576666474342346, 0.7689999938011169, 0.7806666493415833, 0.7870000004768372, 0.7763333320617676, 0.7916666865348816, 0.8006666898727417, 0.7979999780654907, 0.8090000152587891, 0.8090000152587891, 0.8203333616256714, 0.8209999799728394, 0.8203333616256714, 0.8190000057220459, 0.8299999833106995, 0.8316666483879089, 0.8330000042915344, 0.8349999785423279, 0.8289999961853027, 0.8316666483879089, 0.8423333168029785, 0.828000009059906, 0.8379999995231628, 0.8423333168029785, 0.8379999995231628, 0.8413333296775818]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 0, 6, 0, 4, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 2, 2, 2, 2, 2, 0], [31, 32, 29, 49, 25], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 0, 4, 1], [98, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [9, 3, 9, 1, 2], [3, 0, 2], [34, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.pow(alpha, grad)))))), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024073446022126, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 0, 6, 0, 4, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [3, 4, 6, 5, 5, 7, 6, 9], [2, 3, 0, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 3, 7, 1, 2, 7, 5, 3, 9, 9], [3, 3, 2, 0, 1, 1], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 16, 10, 6, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(alpha, alpha))))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 1, 8, 6, 2, 4, 8, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 1, 1, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 7, 2, 9, 4, 7, 3, 9], [3, 5, 0, 4, 1], [14, 47, 74], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 0, 1, 1, 1], [1, 2, 9, 1, 2], [0, 3, 0], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 7, 4, 3, 3], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.add(beta, tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024073446022126, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 5, 8, 3, 4, 3, 5, 5, 0, 4, 4, 6, 3, 6], [3, 0, 1, 1, 1, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 6, 5, 5, 7, 3, 9], [2, 3, 0, 4, 1], [98, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 2, 9, 1, 2], [2, 2, 2], [43, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 1, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.square(alpha), alpha)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.pow(beta, grad)), tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), beta), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 8, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 13, 29, 49, 25], [1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1], [3, 9, 3, 9, 5, 7, 3, 9], [2, 2, 3, 4, 1], [98, 65], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 6, 9, 1, 2], [3, 2, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.divide_no_nan(beta, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 5, 8, 3, 2, 0, 5, 0, 8, 4, 4, 6, 3, 6], [3, 2, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 6, 6, 5, 5, 7, 3, 9], [2, 0, 0, 4, 1], [92, 72], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 2, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 5, 4, 2, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [189.74723968384933, 2779.317155085503, 12358.39048362997, 33553.021994390605, 70966.97158771958, 130408.54754779751], "accuracy": [0.09972262382507324, 0.09734513610601425, 0.09840179979801178, 0.09985470771789551, 0.10051512718200684, 0.10091137140989304], "val_loss": [589.4053083147321, 4172.609375, 13650.59095982143, 31907.86160714286, 61829.87053571428, 106301.72767857143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [3, 7, 5, 5, 5, 7, 3, 9], [2, 3, 0, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [9, 3, 9, 1, 2], [3, 0, 2], [85, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, grad)))))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024073446022126, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [8, 2, 8, 4, 2, 4, 6, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 0, 2, 1, 2, 2, 0], [31, 13, 29, 49, 25], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [3, 4, 6, 5, 5, 7, 6, 9], [2, 1, 3, 4, 1, 0, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 0, 1, 0, 1, 1], [2, 3, 9, 1, 2], [2, 0, 2, 1], [41, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 9, 5, 4, 2], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), beta), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 4, 2, 4, 6, 5, 4, 8, 4, 3, 6, 3, 6], [3, 0, 1, 1, 2, 1, 2, 2, 0], [79, 13, 29, 49, 25], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [3, 1, 6, 6, 5, 7, 3, 5], [2, 1, 3, 4, 1, 0, 1], [98, 30], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 1, 0, 1, 1], [2, 3, 9, 1, 2], [2, 0, 2], [41, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad))))), grad)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.307434535722502, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08400475233793259, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.006204605102539, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 8, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 6, 5, 5, 7, 3, 9], [2, 2, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 1, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [0, 0, 1, 2, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 1], [3, 5, 6, 5, 5, 7, 3, 9], [3, 3, 0, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [3, 0, 2], [92, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [306488143.61765146, 5746475628.269978, 26952394799.87954, 74667720554.68076, 159585568185.05984, 295133167185.3546], "accuracy": [0.10077928751707077, 0.09708096832036972, 0.09826971590518951, 0.09959053993225098, 0.1006472036242485, 0.10117553919553757], "val_loss": [1117491090.2857144, 8935653376.0, 30153053915.42857, 71468070619.42857, 139579181348.57144, 241185465490.2857], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 1, 8, 6, 2, 4, 8, 5, 5, 8, 4, 4, 6, 3, 6], [2, 1, 1, 0, 0, 1, 2, 2, 0], [31, 13, 29, 49, 25], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [3, 7, 5, 9, 4, 7, 3, 9], [1, 3, 0, 4, 1], [98, 47, 74], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 6, 9, 1, 2], [0, 0, 2], [92, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, alpha))), alpha)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [8, 1, 8, 6, 2, 4, 8, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [3, 7, 1, 5, 5, 7, 3, 9], [2, 3, 2, 1, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [9, 3, 9, 1, 2], [1, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024073446022126, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 1, 8, 6, 2, 4, 5, 5, 5, 8, 4, 4, 6, 3, 6], [3, 2, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [3, 1, 6, 6, 5, 7, 3, 5], [2, 1, 3, 4, 1, 0, 1], [98, 30], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [2, 3, 9, 1, 2], [2, 0, 2], [60, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 1, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.square(alpha)))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, alpha)), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [3, 7, 6, 2, 5, 7, 3, 5], [2, 1, 3, 3, 1, 0, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 1, 0, 1, 1], [2, 3, 9, 1, 2], [2, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 0, 6, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 2, 2, 2, 2, 2, 0], [52, 89, 29, 49, 25], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [3, 4, 6, 5, 5, 7, 6, 9], [2, 3, 0, 4, 1, 4], [92, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 8, 9, 1, 2], [1, 0, 2], [43, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(beta)))), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), alpha)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 0, 6, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 1, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 7, 5, 1, 5, 7, 3, 9, 7], [2, 3, 0, 2, 1], [47], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 8, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 3, 3, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [168057.65171516285, 3119164.461563862, 14587042.009245805, 40358796.949412234, 86195632.3740589, 159334465.5089156], "accuracy": [0.10077928751707077, 0.09708096832036972, 0.09840179979801178, 0.09945846349000931, 0.1006472036242485, 0.10117553919553757], "val_loss": [609000.1607142857, 4841240.0, 16305799.42857143, 38611809.14285714, 75368390.85714285, 130184768.0], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 3, 8, 3, 6, 0, 5, 8, 8, 4, 4, 6, 3, 6], [3, 0, 1, 1, 1, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1], [3, 8, 0, 5, 5, 7, 3, 9], [2, 3, 0, 4, 1], [98, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 9, 9, 1, 2], [2, 2, 2], [95, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 14, 9, 2, 6, 6, 4, 2, 0, 1, 0, 0, 0, 0, 3, 3, 0, 2], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))))), alpha), tf.math.add(alpha, alpha)))), tf.math.pow(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.negative(beta))), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024073446022126, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 6, 4, 2, 4, 6, 5, 8, 8, 4, 4, 6, 3, 6], [2, 0, 1, 2, 0, 1, 2, 2, 0], [31, 13, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [3, 1, 6, 6, 5, 7, 3, 5], [2, 3, 0, 4, 1], [98, 30], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 1, 0, 1, 1], [1, 3, 9, 1, 2], [2, 0, 2], [23, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 17, 17, 10, 7, 2, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), alpha)), grad), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30174912988801, 2.3014262755785353, 2.303631738286843, 2.3025653527602072, 2.301973849932563, 2.3022690021823253], "accuracy": [0.09087307006120682, 0.09206181764602661, 0.08757099509239197, 0.08902391046285629, 0.08981640636920929, 0.08915598690509796], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]