[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 6, 3, 3, 0, 2, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 5, 3, 2, 1, 4, 4, 0, 0, 1, 5, 0, 2, 1, 2, 2, 0, 5, 1], [85, 77, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8360000252723694, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0900799325586013, 1.1705562137278898, 0.8343986732502182, 0.7298464583226356, 0.6748672626699045, 0.6251773441692842, 0.5838476172008094, 0.5589880123508132, 0.5297658250332193, 0.5014352145180522, 0.4852711197730336, 0.4639118971755051, 0.4435433422876717, 0.4295363820043175, 0.411269172528133, 0.40134953548722124, 0.38549371349687167, 0.3852250720759928, 0.3679642901759437, 0.35680625019780776, 0.3470691359510763, 0.3404916859557994, 0.3335538285086577, 0.3163158893821388, 0.31456608846124295, 0.30578802503756625, 0.29488474456169006, 0.2780762378959419, 0.27405920141739315, 0.2625337062242906, 0.26448506326282406, 0.24685855916604202, 0.25202130793092303, 0.24874417852448466], "accuracy": [0.2942807972431183, 0.5865803956985474, 0.6882842183113098, 0.7244749665260315, 0.739400327205658, 0.7627789974212646, 0.7810064554214478, 0.7889314293861389, 0.8031964302062988, 0.811649739742279, 0.817989706993103, 0.8280280232429504, 0.8325188159942627, 0.8417646288871765, 0.850350022315979, 0.8518029451370239, 0.8558974862098694, 0.8574824929237366, 0.8625016212463379, 0.8687095642089844, 0.8712190985679626, 0.8753136992454529, 0.8758420348167419, 0.8815215826034546, 0.8825782537460327, 0.8854840993881226, 0.8903711438179016, 0.8951261639595032, 0.8928807377815247, 0.89988112449646, 0.8971073627471924, 0.9030511379241943, 0.9010698795318604, 0.9055606722831726], "val_loss": [1.0437933036259242, 0.6857261317116874, 0.5684303556169782, 0.5359875815255302, 0.4964194468089512, 0.47574593339647564, 0.45495656558445524, 0.4299685869898115, 0.4162294268608093, 0.39694569792066303, 0.3911446843828474, 0.3690078854560852, 0.358883730002812, 0.35768883568899973, 0.35076836177280973, 0.3404697264943804, 0.3335720896720886, 0.3336559704371861, 0.33497829948152813, 0.3274977036884853, 0.33247746740068707, 0.3280292408806937, 0.32336712735039846, 0.3220844268798828, 0.3195101959364755, 0.3133986336844308, 0.31508834872926983, 0.3118546094213213, 0.31275603600910734, 0.3180731620107378, 0.314714287008558, 0.3243188347135271, 0.33491818393979755, 0.3284767355237688], "val_accuracy": [0.6349999904632568, 0.7086666822433472, 0.7436666488647461, 0.762333333492279, 0.7776666879653931, 0.7860000133514404, 0.8006666898727417, 0.8176666498184204, 0.828000009059906, 0.8379999995231628, 0.8363333344459534, 0.8483333587646484, 0.8496666550636292, 0.8500000238418579, 0.8566666841506958, 0.859000027179718, 0.8603333234786987, 0.8619999885559082, 0.8616666793823242, 0.8669999837875366, 0.8616666793823242, 0.8613333106040955, 0.8703333139419556, 0.8666666746139526, 0.8709999918937683, 0.8743333220481873, 0.8709999918937683, 0.874666690826416, 0.8769999742507935, 0.8740000128746033, 0.8730000257492065, 0.8730000257492065, 0.8659999966621399, 0.8736666440963745]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 2, 2, 8, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 39, 40, 49, 25], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 3, 3, 0, 2, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 77, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.826285719871521, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0900786484646647, 1.1706313022910926, 0.8341694383604841, 0.730952175490813, 0.6748902782898191, 0.6269799003023528, 0.5830187791248181, 0.5600213753690557, 0.5314627711673092, 0.5003805858442387, 0.4836407413162717, 0.4648362337094351, 0.4454363759096824, 0.4338043051278665, 0.4133009310443215, 0.4020806146162439, 0.38358372398308316, 0.3795012217179864, 0.36383634573826623, 0.3586450461595916, 0.34618811522886156, 0.34434766018977964, 0.33679115314446484, 0.3167414941359127, 0.3128523725985284, 0.30245149540642957, 0.2962268875369842, 0.27980230477633744, 0.2746058869883054, 0.2648914194755771, 0.2681336411435008, 0.2535528884139028, 0.25360371359209294, 0.24328045690686334], "accuracy": [0.2942807972431183, 0.5867124795913696, 0.687491774559021, 0.7223616242408752, 0.7388719916343689, 0.7630431652069092, 0.7825914621353149, 0.789459764957428, 0.8038568496704102, 0.8094043135643005, 0.8156121969223022, 0.826310932636261, 0.8335754871368408, 0.8372738361358643, 0.8527275323867798, 0.8508783578872681, 0.8580108284950256, 0.8614450097084045, 0.8646149635314941, 0.863558292388916, 0.872407853603363, 0.872407853603363, 0.8741249442100525, 0.8805969953536987, 0.8865407705307007, 0.8868049383163452, 0.8837670087814331, 0.8948619961738586, 0.8918240666389465, 0.8988244533538818, 0.898428201675415, 0.902390718460083, 0.9019944667816162, 0.9029190540313721], "val_loss": [1.0437983444758825, 0.685983555657523, 0.5711961814335415, 0.5353126866476876, 0.49627305780138287, 0.47418856620788574, 0.4547471148627145, 0.4304248179708208, 0.417654173714774, 0.39618400165012907, 0.3905877556119646, 0.36864638328552246, 0.36059785740716116, 0.3576487898826599, 0.3545880062239511, 0.3412214091845921, 0.3348110999379839, 0.3325785483632769, 0.33549535274505615, 0.32922057594571796, 0.3283531069755554, 0.32789489201136995, 0.320384008543832, 0.32528906209128244, 0.3150910564831325, 0.31929400137492586, 0.31539298806871685, 0.3098072920526777, 0.3103368708065578, 0.3153969645500183, 0.3193064332008362, 0.31481403963906424, 0.32413231475012644, 0.32766654661723543], "val_accuracy": [0.6353333592414856, 0.7070000171661377, 0.7390000224113464, 0.7620000243186951, 0.7760000228881836, 0.7866666913032532, 0.7973333597183228, 0.8180000185966492, 0.8273333311080933, 0.8416666388511658, 0.8370000123977661, 0.8486666679382324, 0.8533333539962769, 0.8553333282470703, 0.8523333072662354, 0.8619999885559082, 0.8616666793823242, 0.8619999885559082, 0.8633333444595337, 0.8659999966621399, 0.8679999709129333, 0.8646666407585144, 0.8709999918937683, 0.8686666488647461, 0.8709999918937683, 0.8756666779518127, 0.8726666569709778, 0.874666690826416, 0.8796666860580444, 0.8796666860580444, 0.8730000257492065, 0.871999979019165, 0.8703333139419556, 0.875333309173584]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 2, 2, 8, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 39, 40, 49, 25], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 2, 0, 2, 8, 2, 9, 2, 4, 7, 8, 7, 4, 5, 9, 8, 2, 8, 8, 5, 7, 6, 1, 6, 1, 6], [1, 3, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 2, 63], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [5, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.7757142782211304, "mapping_values": [1, 10, 10, 6, 4, 1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.11429608783009, 1.1756092493150843, 0.8540368439924164, 0.76932785120843, 0.7852275309829098, 0.8317303328844126, 0.7015814336771821, 0.6486257841212009, 0.6175731124658752, 0.5928671612652647, 0.7007775260488576, 0.6292868969447073, 0.63781150660227, 0.5654126518532553, 0.8919103696220004, NaN, NaN, NaN, NaN], "accuracy": [0.2859595715999603, 0.5820895433425903, 0.687491774559021, 0.7078325152397156, 0.7154933214187622, 0.715889573097229, 0.746268630027771, 0.7600052952766418, 0.7714964747428894, 0.7841764688491821, 0.7614582180976868, 0.774270236492157, 0.7812706232070923, 0.802800178527832, 0.7486461400985718, 0.1418570876121521, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.1182165827069963, 0.7135343040738787, 0.5910781792231968, 0.568698593548366, 0.6808756930487496, 0.527273416519165, 0.49771554129464285, 0.4663219962801252, 0.45852034432547434, 0.48385941982269287, 0.4765452487128122, 0.48002963406699045, 0.4377297673906599, 0.41972598859242033, 288425658660.5714, NaN, NaN, NaN, NaN], "val_accuracy": [0.5976666808128357, 0.7213333249092102, 0.7450000047683716, 0.7379999756813049, 0.7543333172798157, 0.784333348274231, 0.7883333563804626, 0.7973333597183228, 0.8029999732971191, 0.8100000023841858, 0.8083333373069763, 0.8016666769981384, 0.8176666498184204, 0.8233333230018616, 0.10366666316986084, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 9, 8, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 39, 40, 49, 25], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 2, 0, 2, 8, 2, 9, 2, 4, 7, 8, 7, 4, 5, 9, 8, 2, 8, 8, 5, 7, 6, 1, 6, 1, 6], [1, 3, 3, 3, 3, 5, 3, 2, 1, 4, 4, 0, 0, 1, 5, 0, 2, 1, 2, 2, 0, 5, 1], [85, 2, 63], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [5, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.7614285945892334, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2978400604962013, 2.2865315256747336, 2.2750496846998782, 2.262738025136486, 2.250870267555399, 2.2365029073898364, 2.220410783891397, 2.204545537352546, 2.181109181831006, 2.162746834449481, 2.1360823143238656, 2.1086265696290147, 2.074962456874119, 2.0348803217321922, 1.9912076768716407, 1.9469627183048308, 1.8992354408026593, 1.8434335123892742, 1.7886625563605523, 1.7298439347654238, 1.677727097864117, 1.6145862137809988, 1.5648359781746946, 1.513758017150497, 1.4649158668492874, 1.4260352447032614, 1.3901785126357205, 1.3486696762762145, 1.3244380232459911, 1.2882559007862067, 1.270092195869988, 1.2261286962459021, 1.2116968909337804, 1.1969574043196836, 1.1678684323518316, 1.1545305803325654, 1.1351776791601416, 1.1101149135435167, 1.0912239682704326, 1.0707897574689647, 1.0712381656600374, 1.0617460165009949, 1.029305155629007, 1.0243567126601238, 1.021548995370516, 1.0161345609348242, 0.9947844727353302, 0.9851383385704241, 0.9771113511262993, 0.9681141965928693, 0.9598162619114363, 0.9428122906621264, 0.9517383209041334, 0.9346300995801781, 0.9357425821786386, 0.9260385973877706, 0.9175176736606567, 0.9002319675678464, 0.9062276460695827, 0.9023944957460064, 0.8959221158753832, 0.889988736878958, 0.8811417113930053, 0.8640123858601111, 0.8684839392224827, 0.8645188950780612, 0.8522035997021924, 0.8503941671802006, 0.8517178540862137, 0.8540786277773893, 0.8484459017970385, 0.8341091406217829, 0.8323569352270007, 0.826225905488621, 0.8339071507152235, 0.8249379223001757, 0.8142599100764906, 0.8230722830626533, 0.8175030238891967, 0.8095360179351164, 0.8067515502122762, 0.8179567172511253, 0.8000990600082711, 0.7976010746928159, 0.7862737425692156, 0.797467738567106, 0.7807810534465394, 0.7906316250086366, 0.7884815358183466, 0.7876537234917639, 0.7844223233891705, 0.7872285752909893, 0.7770218884688264, 0.7711664774414413, 0.7645468536605452, 0.7753286007026624, 0.7615624778715689, 0.7691311700043976, 0.7562167632455414, 0.7596055357652396], "accuracy": [0.09959053993225098, 0.1310262829065323, 0.1620657742023468, 0.1946902722120285, 0.22335226833820343, 0.25742965936660767, 0.28239333629608154, 0.3019416332244873, 0.3271694481372833, 0.33905693888664246, 0.35886937379837036, 0.37168142199516296, 0.3881917893886566, 0.4061550796031952, 0.4154008626937866, 0.43230748176574707, 0.433760404586792, 0.4472328722476959, 0.4625544846057892, 0.47364944219589233, 0.48791441321372986, 0.4959714710712433, 0.5036323070526123, 0.5171047449111938, 0.5247655510902405, 0.5292563438415527, 0.5435213446617126, 0.5540879964828491, 0.5560691952705383, 0.5646545886993408, 0.5675604343414307, 0.579051673412323, 0.5807687044143677, 0.5805045366287231, 0.5997886657714844, 0.5976753234863281, 0.602562427520752, 0.6106194853782654, 0.616299033164978, 0.6205257177352905, 0.6227710843086243, 0.6230352520942688, 0.6400739550590515, 0.639809787273407, 0.6425835490226746, 0.6337339878082275, 0.6431118845939636, 0.650640606880188, 0.6510368585586548, 0.655527651309967, 0.6641130447387695, 0.6686038970947266, 0.6635847091674805, 0.667811393737793, 0.661471426486969, 0.672170102596283, 0.6699247360229492, 0.6811517477035522, 0.6787742972373962, 0.6758684515953064, 0.6783780455589294, 0.6811517477035522, 0.6750759482383728, 0.6824725866317749, 0.6839255094528198, 0.6894729733467102, 0.6900013089179993, 0.6930392384529114, 0.6901333928108215, 0.6885483860969543, 0.6959450244903564, 0.7022850513458252, 0.6995112895965576, 0.6989829540252686, 0.689869225025177, 0.7024171352386475, 0.7018887996673584, 0.695813000202179, 0.7066437602043152, 0.7029454708099365, 0.707568347454071, 0.7014925479888916, 0.7117950320243835, 0.7091533541679382, 0.7128516435623169, 0.7063795924186707, 0.7150970697402954, 0.7131158113479614, 0.7137762308120728, 0.7099458575248718, 0.7121912837028503, 0.7170783281326294, 0.7174745798110962, 0.7197200059890747, 0.7239466309547424, 0.7169462442398071, 0.7255316376686096, 0.720380425453186, 0.7256637215614319, 0.7191916704177856], "val_loss": [1.9604606628417969, 1.9501360484531947, 1.9395026479448592, 1.9282892772129603, 1.915992328098842, 1.9024419103349959, 1.8871842111860002, 1.8699919155665807, 1.8497567176818848, 1.826869283403669, 1.8007304327828544, 1.7712442534310477, 1.7377173560006278, 1.6997956207820348, 1.6571837493351527, 1.6105187620435442, 1.5602116584777832, 1.5069390024457658, 1.4516538211277552, 1.3948354380471366, 1.3388191291264124, 1.283165352685111, 1.229539121900286, 1.1788323266165597, 1.1322455406188965, 1.0900545120239258, 1.0518770899091447, 1.0161757469177246, 0.9845827307019915, 0.955756493977138, 0.9298643725258964, 0.9058367524828229, 0.8847902161734444, 0.8658538545880999, 0.8476654631750924, 0.8309514352253505, 0.8155017410005841, 0.8013127871922084, 0.7876626593726022, 0.774492587362017, 0.7629707029887608, 0.753277131489345, 0.742803863116673, 0.7337895631790161, 0.7255530527659825, 0.7172942672457013, 0.7090392112731934, 0.7022058112280709, 0.6959590230669294, 0.6892658642360142, 0.6843515464237758, 0.6786463260650635, 0.6733394520623344, 0.6679600136620658, 0.6632686172212873, 0.6581296580178397, 0.6532464027404785, 0.6492977823529925, 0.64582587991442, 0.6409761905670166, 0.6377832208360944, 0.6346261671611241, 0.6308997528893607, 0.6264446803501674, 0.6236813238688877, 0.6201925958905902, 0.6174481766564506, 0.6134949922561646, 0.6101607424872262, 0.6085711717605591, 0.6054169961384365, 0.6024424518857684, 0.6004571744373867, 0.5978566919054303, 0.5951438971928188, 0.5934871775763375, 0.590719325201852, 0.5885814087731498, 0.5866240603583199, 0.5841412714549473, 0.5824052606310163, 0.5811415910720825, 0.5788280282701764, 0.5769189936774117, 0.5752332040241787, 0.5729777642658779, 0.5710949727467128, 0.5696814060211182, 0.5681836605072021, 0.5666225467409406, 0.5645610604967389, 0.5638031278337751, 0.5628136226109096, 0.5605196612221854, 0.5586952311652047, 0.557796665600368, 0.5566627127783639, 0.5550936119897025, 0.5523159674235752, 0.5515767335891724], "val_accuracy": [0.12066666781902313, 0.22566667199134827, 0.3089999854564667, 0.3643333315849304, 0.39233332872390747, 0.40966665744781494, 0.4243333339691162, 0.4423333406448364, 0.44966667890548706, 0.47066667675971985, 0.48366665840148926, 0.4986666738986969, 0.5096666812896729, 0.5276666879653931, 0.5379999876022339, 0.5460000038146973, 0.5559999942779541, 0.5609999895095825, 0.5693333148956299, 0.5863333344459534, 0.5876666903495789, 0.596666693687439, 0.609333336353302, 0.6179999709129333, 0.6333333253860474, 0.6433333158493042, 0.653333306312561, 0.6613333225250244, 0.6656666398048401, 0.6700000166893005, 0.6753333210945129, 0.6763333082199097, 0.6826666593551636, 0.6859999895095825, 0.6890000104904175, 0.6926666498184204, 0.6959999799728394, 0.6970000267028809, 0.7009999752044678, 0.7053333520889282, 0.7059999704360962, 0.706333339214325, 0.7080000042915344, 0.7099999785423279, 0.7120000123977661, 0.7146666646003723, 0.7179999947547913, 0.7229999899864197, 0.7226666808128357, 0.7243333458900452, 0.7260000109672546, 0.7253333330154419, 0.7276666760444641, 0.7296666502952576, 0.731333315372467, 0.7333333492279053, 0.734000027179718, 0.7350000143051147, 0.734000027179718, 0.7390000224113464, 0.737666666507721, 0.737666666507721, 0.7396666407585144, 0.7429999709129333, 0.7413333058357239, 0.7429999709129333, 0.7433333396911621, 0.7483333349227905, 0.7476666569709778, 0.7456666827201843, 0.7493333220481873, 0.750333309173584, 0.7523333430290222, 0.7516666650772095, 0.7513333559036255, 0.7516666650772095, 0.7513333559036255, 0.7540000081062317, 0.7546666860580444, 0.7559999823570251, 0.7536666393280029, 0.753333330154419, 0.7563333511352539, 0.7546666860580444, 0.7563333511352539, 0.7583333253860474, 0.7586666941642761, 0.7580000162124634, 0.7576666474342346, 0.7606666684150696, 0.7606666684150696, 0.7593333125114441, 0.7596666812896729, 0.7606666684150696, 0.7620000243186951, 0.762666642665863, 0.7646666765213013, 0.7630000114440918, 0.7649999856948853, 0.7670000195503235]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 9, 2, 4, 0, 2, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 2, 0, 2, 2, 0, 2, 3, 3, 0], [9, 32, 5, 95, 25], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 6, 3, 3, 0, 2, 3, 2, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 3, 3, 5, 3, 2, 1, 4, 4, 0, 0, 1, 5, 0, 2, 1, 2, 2, 0, 5, 1], [85, 77, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.7031428813934326, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3018669337014543, 2.297238450969262, 2.2878319364355506, 2.2739868717044964, 2.2573679639773205, 2.23569868244216, 2.2088155286690943, 2.178237127102031, 2.132956755710804, 2.086273699546172, 2.017216727639454, 1.932898235201379, 1.8281903305010883, 1.7087318375598421, 1.6034996734555402, 1.5257647369736458, 1.4605885820460593, 1.39692496688154, 1.3438341398564124, 1.315047520388859, 1.3039721158265343, 1.2429021113521277, 1.2085992086832755, 1.1544338113926877, 1.1239364285746807, 1.0775010326141379, 1.035671597592441, 1.0080979242143442, 0.9877658405985421, 0.9348501340194448, 0.9356968208326718, 0.9074008653444495, 0.914072372343058, 0.8986961346937917, 0.883190342408791, 0.8715840996358813, 0.8488018718126066, 0.8244603923078478, 0.8137570384502599, 0.8105291418899493, 0.8082134714767114, 0.8031659426312515, 0.773807908888459], "accuracy": [0.08849557489156723, 0.10117553919553757, 0.12838461995124817, 0.16734910011291504, 0.21529521048069, 0.270109623670578, 0.31541407108306885, 0.3357548415660858, 0.3711530864238739, 0.38621053099632263, 0.40007925033569336, 0.4161933660507202, 0.43125081062316895, 0.44604411721229553, 0.4505349397659302, 0.4721965491771698, 0.48712190985679626, 0.5145951509475708, 0.540219247341156, 0.544710099697113, 0.5606921315193176, 0.5703341960906982, 0.5807687044143677, 0.5960903167724609, 0.6062607169151306, 0.6176198720932007, 0.6400739550590515, 0.6513010263442993, 0.6538106203079224, 0.6679434776306152, 0.6608110070228577, 0.6762647032737732, 0.6692643165588379, 0.6701889038085938, 0.6720380187034607, 0.672698438167572, 0.6799629926681519, 0.6902654767036438, 0.7016246318817139, 0.700700044631958, 0.6988508701324463, 0.6976621150970459, 0.7136441469192505], "val_loss": [1.9684876033238001, 1.961794103894915, 1.9511293002537318, 1.9368245942252023, 1.9191864558628626, 1.8979426792689733, 1.8721138409205846, 1.8393775394984655, 1.7967002732413155, 1.7405522210257394, 1.6670458316802979, 1.5725499902452742, 1.4588271549769811, 1.3376502309526717, 1.226485320499965, 1.129561083657401, 1.0388925075531006, 0.9531711169651577, 0.8854362283434186, 0.839512722832816, 0.8010762929916382, 0.7586370536259243, 0.7264174393245152, 0.7131366389138358, 0.7044151851109096, 0.6921850783484322, 0.7086870329720634, 0.7014948129653931, 0.682134849684579, 0.6769382442746844, 0.6821232523236956, 0.6864678178514753, 0.6845312799726214, 0.6764460972377232, 0.6651499101093837, 0.6528052091598511, 0.6408657857349941, 0.6301920924867902, 0.6216587679726737, 0.6150567190987724, 0.6081486940383911, 0.5984790325164795, 0.5877615553992135], "val_accuracy": [0.054999999701976776, 0.10966666787862778, 0.21966665983200073, 0.3333333432674408, 0.3790000081062317, 0.40166667103767395, 0.4169999957084656, 0.42933332920074463, 0.44066667556762695, 0.4543333351612091, 0.4793333411216736, 0.4973333477973938, 0.515666663646698, 0.5333333611488342, 0.54666668176651, 0.5756666660308838, 0.6060000061988831, 0.643666684627533, 0.6676666736602783, 0.6819999814033508, 0.6883333325386047, 0.6936666369438171, 0.6940000057220459, 0.6953333616256714, 0.6983333230018616, 0.7083333134651184, 0.7076666951179504, 0.7103333473205566, 0.7160000205039978, 0.7146666646003723, 0.7163333296775818, 0.7233333587646484, 0.7196666598320007, 0.7250000238418579, 0.7300000190734863, 0.734333336353302, 0.7379999756813049, 0.7413333058357239, 0.7386666536331177, 0.7366666793823242, 0.734333336353302, 0.7366666793823242, 0.7369999885559082]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 4, 40, 49, 25], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 1, 0, 2, 2, 1, 6, 2, 4, 7, 3, 7, 4, 5, 9, 8, 2, 8, 8, 5, 7, 6, 1, 6, 1, 6], [1, 3, 3, 0, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 2, 63], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 1, 8, 4], [1, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 6, 3, 3, 0, 2, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 5, 3, 2, 1, 4, 4, 0, 0, 1, 5, 0, 2, 1, 2, 2, 0, 5, 1], [85, 77, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08017434924840927, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 3, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [12, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 6, 3, 3, 0, 2, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 5, 3, 2, 1, 4, 4, 0, 0, 1, 5, 0, 2, 1, 2, 2, 0, 5, 1], [85, 77, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026571944247713, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 1, 0, 2, 2, 0, 9, 2, 4, 4, 8, 7, 4, 5, 9, 8, 2, 8, 8, 5, 7, 6, 1, 6, 1, 6], [1, 3, 0, 3, 3, 2, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [3, 89, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [8, 1, 8, 4], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 13, 13, 8, 5, 2, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(grad, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 2, 2, 6, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [97, 37, 40, 49, 25], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [4, 6, 3, 3, 0, 4, 3, 8, 3, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 5, 3, 3, 3, 4, 4, 3], [85, 92, 30, 73, 40], [1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [0, 1, 8, 4], [3, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 28, 28, 16, 12, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)))), tf.math.add(beta, tf.math.square(grad)))))))), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.add(beta, grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026571944247713, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 0, 5, 2, 2, 8, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 3, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [96, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 6, 2, 0, 2, 8, 2, 9, 2, 4, 7, 8, 7, 4, 5, 9, 8, 2, 8, 8, 5, 7, 6, 1, 6, 1, 6], [1, 3, 3, 3, 3, 5, 3, 2, 1, 4, 4, 0, 0, 1, 5, 0, 2, 1, 2, 2, 0, 5, 1], [85, 2, 63], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [5, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1236472081.2076516, 23578923150.28609, 108898203116.45595, 304788550553.343, 653759123155.7385, 1211005383503.7654], "accuracy": [0.09642054885625839, 0.10130762308835983, 0.09972262382507324, 0.09813763201236725, 0.09985470771789551, 0.09721305221319199], "val_loss": [4606917485.714286, 36844201106.28571, 124336144384.0, 294710561060.5714, 575593606582.8572, 994599951213.7142], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 39, 40, 49, 25], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 6, 3, 3, 0, 2, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 77, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [5, 1, 8, 4], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 4, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))))), tf.math.pow(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 6, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 37, 40, 54, 25], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [4, 6, 2, 3, 0, 2, 3, 2, 2, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 5, 0, 3, 3, 4, 4, 0, 0], [82, 7, 63, 11], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [8, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 3, 29, 29, 16, 13, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))), tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(grad, grad))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 2, 2, 8, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 39, 40, 49, 25], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 6, 2, 0, 2, 8, 2, 9, 2, 4, 7, 8, 7, 4, 5, 9, 8, 2, 8, 8, 5, 7, 6, 1, 6, 1, 6], [1, 3, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 77, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 0, 2, 2, 4, 2, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [9, 48, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 9, 3, 3, 0, 2, 3, 4, 8, 3, 7, 6, 2, 9, 2, 5, 8, 6, 4, 6, 5, 8, 9, 9, 6, 5, 2, 2, 3, 3, 6], [1, 3, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 2, 63], [1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [8, 1, 8, 4], [2, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 3, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))))))), tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [29, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 6, 3, 3, 0, 2, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 5, 3, 2, 1, 4, 4, 0, 0, 1, 5, 0, 2, 1, 2, 2, 0, 5, 1], [85, 77, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 4, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 6, 3, 3, 0, 2, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 5, 3, 2, 1, 4, 4, 0, 0, 1, 5, 0, 2, 1, 2, 2, 0, 5, 1], [85, 77, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08096684515476227, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 6, 3, 3, 0, 2, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 5, 3, 2, 1, 4, 4, 0, 0, 1, 5, 0, 2, 1, 2, 2, 0, 5, 1], [85, 77, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [19.917876926442776, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03473781421780586, 0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5221355.714285715, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 2, 2, 2, 6, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 37, 40, 49, 25], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [4, 6, 3, 9, 0, 2, 3, 2, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 0, 3, 3, 4, 4, 0], [82, 7, 63], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 3, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 6, 3, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [53, 37, 40, 58, 25], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [4, 6, 3, 3, 0, 2, 3, 2, 0, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 5, 0, 3, 3, 4, 4, 0], [82, 7, 63], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 2, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]