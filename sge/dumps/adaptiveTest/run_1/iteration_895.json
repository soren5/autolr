[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8302857279777527, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.056087027766276, 2.0347233319310876, 1.246147594526223, 0.9257497839120873, 0.7904747215323146, 0.7643950614379995, 0.6848824711098506, 0.6284205350877744, 0.5887029579586089, 0.5802985153272561, 0.5760782450228917, 0.5759595215296969, 0.5400211020483395, 0.5051031594090001, 0.5025182437895154, 0.49327243169175006, 0.4699834792046515, 0.4801607450332309, 0.46788525703781236, 0.44408858101507453, 0.4578548767791527, 0.45178721335192146, 0.41294468051847794, 0.4211383901724427, 0.40315685716161576, 0.41224233516612624, 0.40382980317833905], "accuracy": [0.29784706234931946, 0.32782986760139465, 0.5432571768760681, 0.6567164063453674, 0.7017567157745361, 0.7103421092033386, 0.7343811988830566, 0.7695152759552002, 0.778232753276825, 0.7837802171707153, 0.7807422876358032, 0.7884030938148499, 0.8043851256370544, 0.8131026029586792, 0.8119139075279236, 0.8123101592063904, 0.8183859586715698, 0.8190463781356812, 0.8240655064582825, 0.8387266993522644, 0.8318583965301514, 0.8271034359931946, 0.8455950617790222, 0.8437458872795105, 0.8520671129226685, 0.845859169960022, 0.8473120927810669], "val_loss": [1.8383928026471819, 1.212378672191075, 0.746904696737017, 0.6773983240127563, 0.6852268150874546, 0.5030087062290737, 0.5089931828635079, 0.4868395839418684, 0.44801454884665354, 0.47629073687962126, 0.49177452496119906, 0.428588935307094, 0.4239962100982666, 0.39381044251578196, 0.39251806906291414, 0.39052873849868774, 0.3797755411693028, 0.388418367930821, 0.39765275376183645, 0.3909469502312796, 0.3730956145695278, 0.356790942805154, 0.36574835436684744, 0.37049657106399536, 0.3619847297668457, 0.3592697126524789, 0.3610948749950954], "val_accuracy": [0.3009999990463257, 0.429666668176651, 0.6933333277702332, 0.6769999861717224, 0.6869999766349792, 0.7839999794960022, 0.7646666765213013, 0.7666666507720947, 0.796999990940094, 0.7770000100135803, 0.7746666669845581, 0.812333345413208, 0.8119999766349792, 0.8336666822433472, 0.8339999914169312, 0.8370000123977661, 0.8450000286102295, 0.8346666693687439, 0.8273333311080933, 0.8363333344459534, 0.8450000286102295, 0.8560000061988831, 0.8493333458900452, 0.8460000157356262, 0.8433333039283752, 0.8519999980926514, 0.8516666889190674]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [4, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8257142901420593, "mapping_values": [1, 4, 4, 2, 2, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.square(tf.math.subtract(beta, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0563866544503577, 2.014153047181738, 1.244343978617689, 1.0617530249790383, 0.8397220580837021, 0.7776594502405326, 0.7062477241527954, 0.6639122353521525, 0.6170126408271628, 0.6029783129503131, 0.5890861408286295, 0.565091082692666, 0.5507210466399122, 0.5095128319786524, 0.5032083713194289, 0.4952969713973772, 0.4899545696630076, 0.4866797257730942, 0.4743352201455431, 0.4562650109286857, 0.44454747477007295, 0.45544874017831594, 0.41596331810198595, 0.4113337089553753, 0.4114503055641664, 0.4051289363126902, 0.39440278926419703, 0.38862754001262845, 0.38494249702428923, 0.3848501943153177, 0.36868557883858316], "accuracy": [0.29784706234931946, 0.3353586196899414, 0.5502575635910034, 0.6218464970588684, 0.6826046705245972, 0.7104741930961609, 0.7231541275978088, 0.7514199018478394, 0.7709681391716003, 0.7705719470977783, 0.7779685854911804, 0.7921014428138733, 0.800290584564209, 0.8109893202781677, 0.8137630224227905, 0.8133667707443237, 0.8108572363853455, 0.819970965385437, 0.8252542614936829, 0.8315942287445068, 0.8355567455291748, 0.8322546482086182, 0.8453308939933777, 0.8470479249954224, 0.8499537706375122, 0.8512746095657349, 0.8527275323867798, 0.854708731174469, 0.8549728989601135, 0.8479725122451782, 0.8585391640663147], "val_loss": [1.8437224796840124, 1.121429477419172, 0.8472633702414376, 0.597720912524632, 0.580634355545044, 0.5263788018907819, 0.525193589074271, 0.4643538509096418, 0.4656233957835606, 0.44067743846348356, 0.4717141389846802, 0.42164041314806255, 0.4134661299841745, 0.41619181632995605, 0.40682670899799894, 0.3911870207105364, 0.3936324715614319, 0.3936834590775626, 0.3949862803731646, 0.3820166843278067, 0.3787124752998352, 0.353185841015407, 0.35703972407749723, 0.3594846214566912, 0.3508474997111729, 0.33984375, 0.34177933420453754, 0.3419560194015503, 0.3533098357064383, 0.3486735054424831, 0.3380464145115444], "val_accuracy": [0.30266666412353516, 0.47566667199134827, 0.6133333444595337, 0.7400000095367432, 0.7450000047683716, 0.765999972820282, 0.7476666569709778, 0.7929999828338623, 0.7960000038146973, 0.8069999814033508, 0.7796666622161865, 0.8190000057220459, 0.8216666579246521, 0.8186666369438171, 0.8223333358764648, 0.8286666870117188, 0.831333339214325, 0.8323333263397217, 0.8270000219345093, 0.8356666564941406, 0.8429999947547913, 0.8543333411216736, 0.8433333039283752, 0.8486666679382324, 0.8486666679382324, 0.8610000014305115, 0.8583333492279053, 0.856333315372467, 0.8506666421890259, 0.8523333072662354, 0.8526666760444641]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 2, 2, 6, 1, 0, 1, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 2, 3, 0, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 71, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [3, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8242856860160828, "mapping_values": [1, 4, 4, 2, 2, 1, 26, 26, 15, 11, 2, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(grad, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.subtract(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(grad))))), grad))))))))), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.056394898612753, 2.0383752167988543, 1.210609107835654, 0.9843582190212052, 0.8429785389642611, 0.7396857198423729, 0.6701241349500042, 0.6441253713565716, 0.5881815604199319, 0.5625471258679905, 0.5816204126925753, 0.5699918826163926, 0.558621818087813, 0.5108132632401294, 0.5178636336457287, 0.48382186183462117, 0.4741110144912008, 0.48697956017987476, 0.4667918836246975, 0.45015615615327015, 0.4738782824676082, 0.444798751399974, 0.4142609159424635, 0.41683343168593606, 0.3979147570582901, 0.41896998261526797, 0.41895326558688, 0.38400737404146246, 0.3887645406352058, 0.38177327564316593, 0.36918014300938656, 0.3907204828816886], "accuracy": [0.29784706234931946, 0.3259807229042053, 0.5588429570198059, 0.6421872973442078, 0.6925109028816223, 0.7240787148475647, 0.7481178045272827, 0.7589486241340637, 0.7840443849563599, 0.7872143983840942, 0.7781006693840027, 0.7835160493850708, 0.789988100528717, 0.8082155585289001, 0.8031964302062988, 0.8183859586715698, 0.8171972036361694, 0.8183859586715698, 0.824329674243927, 0.8318583965301514, 0.8255184292793274, 0.8364813327789307, 0.847840428352356, 0.8446704745292664, 0.8532558679580688, 0.8411042094230652, 0.8450667262077332, 0.8565579056739807, 0.8588033318519592, 0.852859616279602, 0.8607845902442932, 0.8552370667457581], "val_loss": [1.8419815472194128, 1.2197931494031633, 0.8253882782799857, 0.7066296849931989, 0.6568966422762189, 0.5098278863089425, 0.5081922837666103, 0.46475080081394743, 0.45016402857644217, 0.4460284539631435, 0.46310784135546, 0.42626691716057913, 0.4153048481260027, 0.4053779329572405, 0.40051729338509695, 0.39348595482962473, 0.3892082231385367, 0.3796759162630354, 0.39589463812964304, 0.44233764920915875, 0.3694970352309091, 0.3563420942851475, 0.35860144240515573, 0.3671981692314148, 0.3941419380051749, 0.36361548730305265, 0.3470278126852853, 0.3598631109510149, 0.35319727659225464, 0.3526170083454677, 0.3371978998184204, 0.35371851921081543], "val_accuracy": [0.30300000309944153, 0.43066665530204773, 0.6223333477973938, 0.7226666808128357, 0.7213333249092102, 0.7753333449363708, 0.7733333110809326, 0.7886666655540466, 0.7963333129882812, 0.8013333082199097, 0.7896666526794434, 0.8146666884422302, 0.8183333277702332, 0.8209999799728394, 0.8266666531562805, 0.8360000252723694, 0.8383333086967468, 0.8393333554267883, 0.82833331823349, 0.8076666593551636, 0.8456666469573975, 0.8543333411216736, 0.8526666760444641, 0.8443333506584167, 0.8246666789054871, 0.8456666469573975, 0.8566666841506958, 0.8426666855812073, 0.8546666502952576, 0.8526666760444641, 0.8560000061988831, 0.8546666502952576]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 8, 2, 2, 2, 6, 1, 2, 1, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 0, 2, 2, 0, 3, 2, 0, 1, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [0, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7954285740852356, "mapping_values": [1, 4, 4, 2, 2, 1, 27, 27, 16, 11, 4, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(beta, tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))))), grad)))))), tf.math.add(beta, beta)), tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1516722292554316, 2.194838556520943, 1.7204305408905054, 1.2604992889599038, 0.906297056690073, 0.7632865840968927, 0.7188556401044024, 0.6545368377023354, 0.6449099632617017, 0.619223178566691, 0.5690225373563388, 0.5694591460399907, 0.573627229096505, 0.5434396156797383], "accuracy": [0.2790912687778473, 0.26720380783081055, 0.40285298228263855, 0.566239595413208, 0.6621318459510803, 0.7168141603469849, 0.7250033020973206, 0.7471932172775269, 0.7553823590278625, 0.7695152759552002, 0.7860256433486938, 0.785629391670227, 0.7774402499198914, 0.793950617313385], "val_loss": [1.5202852657863073, 1.7438822473798479, 0.8777927671160016, 0.7864165646689278, 0.593807544027056, 0.5746342965534755, 0.5654445886611938, 0.528705324445452, 0.47774762766701834, 0.472842846597944, 0.5032645804541451, 0.5176377637045724, 0.46154819216047016, 0.4485342332295009], "val_accuracy": [0.3233333230018616, 0.4596666693687439, 0.6499999761581421, 0.6893333196640015, 0.7363333106040955, 0.7366666793823242, 0.749666690826416, 0.7566666603088379, 0.79666668176651, 0.7883333563804626, 0.7616666555404663, 0.765666663646698, 0.79666668176651, 0.7900000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [15, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 5, 1, 2, 6, 2, 8, 1, 3, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 0, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.5479999780654907, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302903306262211, 2.3017296392400235, 2.2983664267760036, 2.295054555332908, 2.2920753302087307, 2.292779968399272, 2.2886737137737683, 2.288210652051207, 2.2856677042384583, 2.2837435832002835, 2.282225610494708, 2.2793461720327173, 2.278472741896277, 2.275609274518929, 2.274279425283071, 2.272042644494686, 2.2701859153603454, 2.268214381807091, 2.2647972411451844, 2.265351063130381, 2.260696186255376, 2.2603518097486637, 2.257039009162763, 2.2556196086363567, 2.252665592490123, 2.250136648958322, 2.249373025992417, 2.247237631925392, 2.2452053271422, 2.2420833734331698, 2.239217867641527, 2.2366107814520766, 2.2337941517525692, 2.231280535786238, 2.2286248172452154, 2.2262398485872237, 2.223541413158426, 2.2184479732586486, 2.216662907628745, 2.2131961200058092, 2.211535952551301, 2.2084714111446027, 2.2045796778790625, 2.2025497391743194, 2.1984316998815427, 2.195505453878626, 2.19414029693276, 2.188500385494784, 2.1867996541311587, 2.1816394885202612, 2.1787803530173453, 2.1756282538281866, 2.171095636022908, 2.1648505954631583, 2.1660928108657216, 2.1608029820144043, 2.153039170577463, 2.150297440274548, 2.143860475309395, 2.1402509155180223, 2.1341836983737785, 2.131457293148542, 2.1262086754099663, 2.120242230093254, 2.116230708544107, 2.110072642962348, 2.10442952668237, 2.10020599187625, 2.0922226886298314, 2.0865043957377343, 2.0807451265929884, 2.0741706201822656, 2.0690685384828718, 2.063764996422186, 2.0570431891811554, 2.0509056253298446, 2.0408181638104206, 2.0342653313207117, 2.0294227479172107, 2.0228038571687375, 2.012091616708148, 2.008855651272381, 1.9997557232077914, 1.991152821640848, 1.979334301479961, 1.9759267506708384, 1.9703496408153913, 1.9581555042127026, 1.9576707084055165, 1.9453056780984295, 1.9316559515262655, 1.9278026102808221, 1.9161883252974845, 1.9037168465900132, 1.8946229753209585, 1.8884348436951905, 1.8822280306149122, 1.872359810834705, 1.8595413875113767, 1.8522571644778612], "accuracy": [0.0882314071059227, 0.09391097724437714, 0.1014397069811821, 0.10434553027153015, 0.11834631860256195, 0.11345925182104111, 0.12138422578573227, 0.1302337795495987, 0.13274335861206055, 0.14251750707626343, 0.1430458277463913, 0.14555540680885315, 0.15295206010341644, 0.15559370815753937, 0.16061286628246307, 0.17210407555103302, 0.17804782092571259, 0.1842557191848755, 0.18821820616722107, 0.1822744756937027, 0.19918107986450195, 0.20195482671260834, 0.2090873122215271, 0.2122572958469391, 0.22176727652549744, 0.22414475679397583, 0.22612600028514862, 0.2316734939813614, 0.23352265357971191, 0.2359001487493515, 0.25016510486602783, 0.2499009370803833, 0.25716549158096313, 0.26284506916999817, 0.2616563141345978, 0.27565711736679077, 0.2786950170993805, 0.280940443277359, 0.2813366651535034, 0.294148713350296, 0.29362040758132935, 0.29705455899238586, 0.30762118101119995, 0.30379077792167664, 0.3109232485294342, 0.3152819871902466, 0.30563995242118835, 0.31924447417259216, 0.31898030638694763, 0.33139610290527344, 0.3191123902797699, 0.3333773612976074, 0.33562275767326355, 0.3381323516368866, 0.33218860626220703, 0.340509831905365, 0.3483027219772339, 0.34803855419158936, 0.35886937379837036, 0.35345396399497986, 0.3551710546016693, 0.3516048192977905, 0.36362436413764954, 0.3609826862812042, 0.36402061581611633, 0.3677189350128174, 0.37762513756752014, 0.3700964152812958, 0.38964468240737915, 0.3901730179786682, 0.3917580246925354, 0.38805970549583435, 0.38845595717430115, 0.3895126283168793, 0.3947959244251251, 0.38726720213890076, 0.39228636026382446, 0.4115704596042633, 0.41024965047836304, 0.40509840846061707, 0.4049663245677948, 0.4080042243003845, 0.41751420497894287, 0.4150046110153198, 0.42028793692588806, 0.42266544699668884, 0.4163254499435425, 0.42068418860435486, 0.41923126578330994, 0.4212125241756439, 0.44023245573043823, 0.4227975308895111, 0.43785497546195984, 0.43204331398010254, 0.4485536813735962, 0.4377228915691376, 0.4387795627117157, 0.4473649561405182, 0.4468366205692291, 0.43864747881889343], "val_loss": [1.9691312653677804, 1.9673174449375697, 1.9655467442103796, 1.9637425967625208, 1.9619522094726562, 1.960165228162493, 1.9583683013916016, 1.9565768241882324, 1.9547995158604212, 1.9529945509774345, 1.9511984416416712, 1.949394975389753, 1.9475883756365096, 1.945756094796317, 1.9439458165849959, 1.9420931679861886, 1.9402283259800501, 1.9383435249328613, 1.9364468029567175, 1.9345399311610632, 1.9325823102678572, 1.9306369509015764, 1.9286082131522042, 1.926565374646868, 1.9244858877999442, 1.9223951612200056, 1.920283385685512, 1.9181397983006068, 1.9159413746425085, 1.913721697671073, 1.9114392144339425, 1.9090993063790458, 1.906738349369594, 1.904299259185791, 1.9018128258841378, 1.8993038449968611, 1.8967225892203194, 1.8940646989004952, 1.8913702964782715, 1.88859190259661, 1.8857755661010742, 1.8828840255737305, 1.8799349921090263, 1.8769209044320243, 1.8738366535731725, 1.8706554685320174, 1.867434024810791, 1.8641148975917272, 1.86073180607387, 1.857245581490653, 1.853668485369001, 1.850038800920759, 1.8463329587663924, 1.842477253505162, 1.838632583618164, 1.8346453394208635, 1.8305046898978097, 1.826270512172154, 1.8219528879438127, 1.8175636700221471, 1.8130388941083635, 1.8084378923688615, 1.803713321685791, 1.7988814626421248, 1.7939564159938268, 1.7888823917933874, 1.783684458051409, 1.7784435408455985, 1.7729922022138322, 1.7674224717276437, 1.76175171988351, 1.7559423446655273, 1.7500475474766322, 1.744011470249721, 1.7378622463771276, 1.7315704481942313, 1.7251150948660714, 1.71848429952349, 1.7118096692221505, 1.704991681235177, 1.6980006694793701, 1.6909188202449255, 1.6837091445922852, 1.676347289766584, 1.6687832900456019, 1.6611757619040353, 1.6534530094691686, 1.645517451422555, 1.637631825038365, 1.629476615360805, 1.621112653187343, 1.6127477032797677, 1.6042039734976632, 1.5954972335270472, 1.5866621903010778, 1.5777527604784285, 1.5688021864209856, 1.5597411223820277, 1.5505522659846716, 1.5413209370204382], "val_accuracy": [0.047333333641290665, 0.06199999898672104, 0.07400000095367432, 0.08933333307504654, 0.10899999737739563, 0.12466666847467422, 0.14499999582767487, 0.1653333306312561, 0.1823333352804184, 0.1979999989271164, 0.21666666865348816, 0.23333333432674408, 0.2526666522026062, 0.2683333456516266, 0.281333327293396, 0.2926666736602783, 0.30433332920074463, 0.3176666796207428, 0.32866665720939636, 0.3370000123977661, 0.34933334589004517, 0.35766667127609253, 0.36766666173934937, 0.3726666569709778, 0.3779999911785126, 0.3813333213329315, 0.3853333294391632, 0.3903333246707916, 0.3919999897480011, 0.3970000147819519, 0.40066665410995483, 0.4023333191871643, 0.40566667914390564, 0.40833333134651184, 0.4113333225250244, 0.41366666555404663, 0.4169999957084656, 0.4189999997615814, 0.421999990940094, 0.4246666729450226, 0.4273333251476288, 0.43033334612846375, 0.4333333373069763, 0.43666666746139526, 0.4403333365917206, 0.4436666667461395, 0.4449999928474426, 0.4463333189487457, 0.4476666748523712, 0.4506666660308838, 0.45266667008399963, 0.45633333921432495, 0.45899999141693115, 0.4606666564941406, 0.4636666774749756, 0.4663333296775818, 0.4703333377838135, 0.47466665506362915, 0.47733333706855774, 0.4793333411216736, 0.48133334517478943, 0.48399999737739563, 0.48633334040641785, 0.4883333444595337, 0.49033331871032715, 0.49266666173934937, 0.49666666984558105, 0.49900001287460327, 0.5006666779518127, 0.5016666650772095, 0.5043333172798157, 0.5070000290870667, 0.5093333125114441, 0.5116666555404663, 0.5133333206176758, 0.5166666507720947, 0.5189999938011169, 0.5230000019073486, 0.5256666541099548, 0.5266666412353516, 0.528333306312561, 0.531333327293396, 0.5336666703224182, 0.5363333225250244, 0.5383333563804626, 0.5389999747276306, 0.5400000214576721, 0.5433333516120911, 0.5426666736602783, 0.5446666479110718, 0.5456666946411133, 0.5479999780654907, 0.5486666560173035, 0.5503333210945129, 0.5519999861717224, 0.5529999732971191, 0.5546666383743286, 0.5546666383743286, 0.5556666851043701, 0.5580000281333923]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 5, 1, 2, 6, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 2, 3, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [0, 4], [67, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.17028571665287018, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 9, 6, 2, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.math.subtract(tf.math.add(grad, grad), tf.math.divide_no_nan(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.457132441067598, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2646942138671875, 0.1916523575782776, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9728042057582311, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10599999874830246, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [5, 6, 5, 4, 2, 6, 1, 2, 1, 2, 6, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 1, 3, 2, 3, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.11228571087121964, "mapping_values": [1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.square(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30264262223461, 2.3007451238066623, 2.300381066981497, 2.302295650552214, 2.3025403566301272, 2.302764143658478, 2.30353054891976], "accuracy": [0.09034473448991776, 0.10117553919553757, 0.10011887550354004, 0.08572183549404144, 0.09074098616838455, 0.1014397069811821, 0.09998679161071777], "val_loss": [1.969200951712472, 1.9709351403372628, 1.9724912643432617, 1.9737623078482491, 1.9741428239004952, 1.9747278349740165, 1.975473131452288], "val_accuracy": [0.08266666531562805, 0.1080000028014183, 0.09700000286102295, 0.07599999755620956, 0.09866666793823242, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 1, 2, 2, 2, 6, 1, 2, 1, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 2, 3, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [5, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10371428728103638, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.275004172321985, 2.317555162333825, 2.316416403069834, 1.7518278832259888, 2.8863022078329057, 2.1765854690466824e+20, 2.535659726962532, 2.4870124802597604], "accuracy": [0.30101704597473145, 0.16602826118469238, 0.2661471366882324, 0.42847707867622375, 0.2475234419107437, 0.13802668452262878, 0.09959053993225098, 0.09998679161071777], "val_loss": [1.9794092859540666, 1.7008539608546667, 1.379368577684675, 1.7038826942443848, 10.664616448538643, 2.2070412635803223, 2.115741048540388, 2.1148642131260464], "val_accuracy": [0.10233332961797714, 0.36033332347869873, 0.4483333230018616, 0.38600000739097595, 0.11900000274181366, 0.10366666316986084, 0.10233332961797714, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 5, 1, 2, 6, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 0, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [0, 4], [28, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.3020694450443417, 2.3024087784832274, 2.3024041299665012, 2.302494762564505, 2.3024935431688878, 2.302617105620806], "accuracy": [0.10777968913316727, 0.10236428678035736, 0.10579843819141388, 0.10011887550354004, 0.10513802617788315, 0.09998679161071777], "val_loss": [1.973637512751988, 1.9736465045383997, 1.9736760003226144, 1.9737039293561662, 1.973787443978446, 1.973937920161656], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10066666454076767, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 4, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 0, 2, 2, 2, 6, 1, 2, 1, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 0, 3, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [7, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 6, 1, 2, 6, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 4, 0, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [0, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 5, 1, 2, 6, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 5, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [59, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [0, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 2, 9, 2, 6, 1, 6, 2, 2, 4, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 3, 3, 2, 3, 1, 3, 3, 0, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 24, 24, 13, 11, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))), tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, alpha)), tf.math.sqrt(tf.math.add(beta, grad)))), grad)))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [95123061.9220897, 1809763314.6775856, 8531169530.623695, 23467989783.22969, 50154916745.38317, 92260426075.32954], "accuracy": [0.09430722147226334, 0.09602430462837219, 0.1010434553027153, 0.0956280529499054, 0.10091137140989304, 0.09655263274908066], "val_loss": [353571172.5714286, 2826568411.428571, 9537417508.571428, 22604607488.0, 44146286592.0, 76281317668.57143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 4, 2, 3, 2, 6, 1, 2, 0, 2, 9, 3, 8, 5, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 2, 3, 1, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 26, 26, 16, 10, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), alpha))), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(grad)))))))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [95123061.9220897, 1809763314.6775856, 8531169530.623695, 23467989783.22969, 50154916745.38317, 92260426075.32954], "accuracy": [0.09430722147226334, 0.09602430462837219, 0.1010434553027153, 0.0956280529499054, 0.10091137140989304, 0.09655263274908066], "val_loss": [353571172.5714286, 2826568411.428571, 9537417508.571428, 22604607488.0, 44146286592.0, 76281317668.57143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [5, 5, 6, 4, 2, 6, 1, 2, 2, 2, 6, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 2, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [9, 7, 3, 4, 6], [0, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 6, 2, 4, 2, 6, 1, 2, 1, 2, 6, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 2, 3, 3, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [6, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3037113808936858, 2.304538031862617, 2.30307242388833, 2.3017949089004444, 2.3007388941568707, 2.3033859945795303], "accuracy": [0.0870426595211029, 0.08651433140039444, 0.08942015469074249, 0.08809932321310043, 0.0944393053650856, 0.09153348207473755], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 6, 2, 4, 2, 6, 1, 2, 1, 2, 6, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 2, 3, 2, 3, 0, 3, 3, 0, 2, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 0, 26, 26, 13, 13, 2, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.pow(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.add(beta, grad)))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), beta)), grad)), tf.math.add(beta, grad))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3037113808936858, 2.304538031862617, 2.30307242388833, 2.3017949089004444, 2.3007388941568707, 2.3033859945795303], "accuracy": [0.0870426595211029, 0.08651433140039444, 0.08942015469074249, 0.08809932321310043, 0.0944393053650856, 0.09153348207473755], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [10, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 5, 6, 4, 2, 6, 1, 2, 2, 2, 6, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 5, 1, 2, 4, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [5, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.03285714238882065, "mapping_values": [1, 5, 5, 2, 3, 1, 6, 6, 3, 3, 0, 5, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3045893472498435, 2.3081216403065326, 2.309556531395973, 2.3116198595032134, 2.3146436271760695, 2.323486355427722], "accuracy": [0.08611807972192764, 0.08017434924840927, 0.07991018146276474, 0.07370228320360184, 0.07290978729724884, 0.07330603897571564], "val_loss": [1.9727166039603097, 1.9750616891043526, 1.9776498930794852, 1.9807816232953752, 1.9842655999319894, 1.9887006623404366], "val_accuracy": [0.028999999165534973, 0.020999999716877937, 0.014333332888782024, 0.01600000075995922, 0.016333334147930145, 0.027666667476296425]}}]