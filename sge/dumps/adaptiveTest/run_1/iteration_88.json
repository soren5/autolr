[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7402856945991516, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2955574546869895, 2.254740087945999, 2.1693372196446417, 1.982628906738363, 1.659072691911499, 1.3981988597712922, 1.3945828067344712, 1.2028745330320043, 0.9801261142858693, 0.8987089972281264, 0.9039812709409422, 0.8530511888751044, 0.8068430467509102, 0.8019718867188447, 0.8063750127838462, 0.7794891384378195, 0.7566511445765985, 0.7273957803658427, 0.7264253140724, 0.7250269800916623, 0.70207600238663, 0.6997230716700158, 0.6841254553396814, 0.6702087227505558, 0.6566687237317331, 0.6384126594069454, 0.6199234171928337, 0.6068055806945989, 0.6068801159525529, 0.5900811691010838, 0.5851654187405759, 0.5797293555262601, 0.5717871717143257, 0.5731828991038814, 0.5639788223342684, 0.5530188296921674, 0.5417703008450191, 0.5351386146538483, 0.5346021051215395, 0.5294138894199522, 0.5197744485708732], "accuracy": [0.10751552134752274, 0.21714437007904053, 0.33443403244018555, 0.4027208983898163, 0.45106327533721924, 0.5124818682670593, 0.5365209579467773, 0.6021661758422852, 0.6452252268791199, 0.6551313996315002, 0.6679434776306152, 0.6847180128097534, 0.6919825673103333, 0.7014925479888916, 0.6944921612739563, 0.7025492191314697, 0.7099458575248718, 0.7176066637039185, 0.7180029153823853, 0.72672039270401, 0.7305507659912109, 0.7387399077415466, 0.7388719916343689, 0.7467969655990601, 0.7430986762046814, 0.7581561207771301, 0.7582882046699524, 0.7629110813140869, 0.7671377658843994, 0.7758552432060242, 0.7770439982414246, 0.7823272943496704, 0.7833839654922485, 0.787082314491272, 0.7903843522071838, 0.7997622489929199, 0.8001585006713867, 0.798309326171875, 0.7942147850990295, 0.7965922355651855, 0.8049134612083435], "val_loss": [1.948753493172782, 1.8909326962062292, 1.77317442212786, 1.5015920911516463, 1.1051791395459856, 0.8429488113948277, 0.7474783658981323, 0.7242432151521955, 0.6598900897162301, 0.6916251523154122, 0.670563782964434, 0.6093723092760358, 0.5940756457192558, 0.589977332523891, 0.5881644998277936, 0.5737424407686506, 0.5652557611465454, 0.5576043469565255, 0.5620254448481968, 0.5499724320002964, 0.5374700852802822, 0.5309107303619385, 0.5182077033179147, 0.5081349440983364, 0.49522260257175993, 0.4797587905611311, 0.47362046582358225, 0.4738592079707554, 0.46656531946999685, 0.45935375349862234, 0.4529313700539725, 0.4471154042652675, 0.45321265288761686, 0.45438473565237864, 0.44082559858049664, 0.4325213772909982, 0.431051288332258, 0.4309394955635071, 0.43006804159709383, 0.4253007769584656, 0.4203822783061436], "val_accuracy": [0.2446666657924652, 0.3946666717529297, 0.4476666748523712, 0.5203333497047424, 0.6039999723434448, 0.6740000247955322, 0.6953333616256714, 0.7170000076293945, 0.7223333120346069, 0.7110000252723694, 0.7310000061988831, 0.7360000014305115, 0.7406666874885559, 0.7390000224113464, 0.7436666488647461, 0.7516666650772095, 0.749666690826416, 0.7573333382606506, 0.7603333592414856, 0.765333354473114, 0.7643333077430725, 0.765999972820282, 0.7730000019073486, 0.7799999713897705, 0.784333348274231, 0.7900000214576721, 0.7846666574478149, 0.7876666784286499, 0.7973333597183228, 0.7963333129882812, 0.8069999814033508, 0.8103333115577698, 0.8149999976158142, 0.8140000104904175, 0.8223333358764648, 0.8226666450500488, 0.8163333535194397, 0.812666654586792, 0.8173333406448364, 0.8180000185966492, 0.8206666707992554]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 0, 6, 5, 2, 0, 8, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7391428351402283, "mapping_values": [1, 11, 11, 8, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2955574546869895, 2.254739993472912, 2.169337170172235, 1.9826284928832623, 1.659071434695156, 1.3982050083316848, 1.3945973396710654, 1.202893864729023, 0.9801170782421904, 0.8986936372583884, 0.9040222879508546, 0.8531442737503767, 0.8068168580870603, 0.8018915877208702, 0.8064877649166675, 0.7796082250934314, 0.7569228426623795, 0.7274572922805234, 0.7265978106465464, 0.7255170769175644, 0.7021516176766535, 0.6997255596817288, 0.6845949083003764, 0.6703911905023542, 0.6566768533927481, 0.6386605549749839, 0.6196058555097156, 0.6063074242279844, 0.6069372480398376, 0.5901686185780234, 0.5856132487012505, 0.5798251207368312, 0.5718253779058616, 0.5737160863405237, 0.5642905384951642, 0.5531045587905851, 0.5421421131154314, 0.5354998556968638, 0.5351078146956679, 0.5301080091541879, 0.5200188190095287], "accuracy": [0.10751552134752274, 0.21714437007904053, 0.33443403244018555, 0.4027208983898163, 0.45106327533721924, 0.5126138925552368, 0.5365209579467773, 0.6020340919494629, 0.6452252268791199, 0.6551313996315002, 0.667811393737793, 0.6844538450241089, 0.6911900639533997, 0.7017567157745361, 0.6946242451667786, 0.702681303024292, 0.7098137736320496, 0.7173424959182739, 0.7176066637039185, 0.7260599732398987, 0.7310791015625, 0.7397965788841248, 0.7386078238487244, 0.7464007139205933, 0.7429665923118591, 0.7573636174201965, 0.7582882046699524, 0.763439416885376, 0.7672698497772217, 0.7763835787773132, 0.7771760821342468, 0.7829877138137817, 0.7837802171707153, 0.7869502305984497, 0.789459764957428, 0.7988376617431641, 0.7984414100646973, 0.7972526550292969, 0.7942147850990295, 0.7967243194580078, 0.8037247657775879], "val_loss": [1.948753493172782, 1.8909326962062292, 1.7731741496494837, 1.5015913077763148, 1.1051767553601946, 0.8429550613675799, 0.7474729333605085, 0.7242612498147147, 0.6598724297114781, 0.6916392360414777, 0.6706436702183315, 0.609446815082005, 0.5941957235336304, 0.5900961841855731, 0.5882514544895717, 0.5738856622150966, 0.5652860743658883, 0.5575586727687291, 0.5621602705546788, 0.550100292478289, 0.5373560190200806, 0.5310635226113456, 0.5184048073632377, 0.508098806653704, 0.4951703889029367, 0.4796163184302194, 0.473500200680324, 0.4742177895137242, 0.46673829214913504, 0.4594853775841849, 0.4532404627118792, 0.4468733072280884, 0.4527435983930315, 0.4539585794721331, 0.4405609369277954, 0.43234378950936453, 0.4314209648541042, 0.4313753417560032, 0.42991712263652254, 0.42534258535930086, 0.420171320438385], "val_accuracy": [0.2446666657924652, 0.3946666717529297, 0.4476666748523712, 0.5203333497047424, 0.6039999723434448, 0.6740000247955322, 0.6949999928474426, 0.7170000076293945, 0.7223333120346069, 0.7113333344459534, 0.7306666374206543, 0.7350000143051147, 0.7409999966621399, 0.7390000224113464, 0.7436666488647461, 0.7526666522026062, 0.75, 0.7576666474342346, 0.7609999775886536, 0.7663333415985107, 0.7646666765213013, 0.765666663646698, 0.7726666927337646, 0.7803333401679993, 0.7863333225250244, 0.7903333306312561, 0.7846666574478149, 0.7873333096504211, 0.7973333597183228, 0.7960000038146973, 0.8053333163261414, 0.8106666803359985, 0.8140000104904175, 0.8140000104904175, 0.8233333230018616, 0.8236666917800903, 0.8173333406448364, 0.8119999766349792, 0.8176666498184204, 0.8173333406448364, 0.8206666707992554]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 6, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7388571500778198, "mapping_values": [1, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2955574546869895, 2.2547400744363473, 2.169337408590814, 1.9826285782239503, 1.6590762338492187, 1.3982018413891362, 1.3945967427428687, 1.2028251680259014, 0.9800183540873162, 0.8986988903713768, 0.9040488909342979, 0.8531332800039101, 0.8069395057875735, 0.8018108394876242, 0.8062692312374878, 0.7794462523644926, 0.7574878933171176, 0.727742088729081, 0.7263590974452521, 0.7247290593238476, 0.7019099882013998, 0.699805716828364, 0.6848769813102895, 0.6706463781330233, 0.6569915960147129, 0.6382374921495007, 0.6198002688636901, 0.6064850210576656, 0.6068508339406886, 0.5898984503500403, 0.5849055077075139, 0.5800952452946301, 0.5720610250461182, 0.5741886470799968, 0.565212099834944, 0.553106973979294, 0.5415801269865432, 0.5359588771440476, 0.5345763657087065, 0.5294414760729168, 0.5203991749535116], "accuracy": [0.10751552134752274, 0.21714437007904053, 0.33443403244018555, 0.4027208983898163, 0.45106327533721924, 0.5124818682670593, 0.5365209579467773, 0.6021661758422852, 0.6453573107719421, 0.6553955674171448, 0.667811393737793, 0.684982180595398, 0.6911900639533997, 0.7016246318817139, 0.6931713223457336, 0.7029454708099365, 0.7083608508110046, 0.7180029153823853, 0.7174745798110962, 0.726192057132721, 0.7312111854553223, 0.7392682433128357, 0.7386078238487244, 0.7466648817062378, 0.7420420050621033, 0.7585523724555969, 0.7585523724555969, 0.7625148296356201, 0.7667415142059326, 0.7750627398490906, 0.778232753276825, 0.7823272943496704, 0.7820631265640259, 0.7852331399917603, 0.789459764957428, 0.8005547523498535, 0.800290584564209, 0.7991018295288086, 0.7932901978492737, 0.7950072884559631, 0.8033285140991211], "val_loss": [1.948753493172782, 1.890932832445417, 1.7731737409319197, 1.5015908990587508, 1.1051853043692452, 0.8429516553878784, 0.747450419834682, 0.7242195095334735, 0.6598760741097587, 0.6915714400155204, 0.6705608197620937, 0.6093761239733014, 0.5941173689705985, 0.5900034393583026, 0.5882074322019305, 0.574056897844587, 0.5657485382897514, 0.5577430895396641, 0.5617419651576451, 0.5496048586709159, 0.537273815699986, 0.5309148515973773, 0.5182154178619385, 0.5080335140228271, 0.4952020134244646, 0.479692884853908, 0.47361254692077637, 0.4739796093532017, 0.4664890595844814, 0.45899808406829834, 0.4527946880885533, 0.4470141615186419, 0.45278934070042204, 0.4545606715338571, 0.44124577726636616, 0.43230728592191425, 0.43099973031452726, 0.4308053340230669, 0.42979531628744944, 0.42537741150174824, 0.42075603348868235], "val_accuracy": [0.2446666657924652, 0.3946666717529297, 0.4476666748523712, 0.5203333497047424, 0.6039999723434448, 0.6740000247955322, 0.6949999928474426, 0.7170000076293945, 0.7223333120346069, 0.7113333344459534, 0.7306666374206543, 0.7350000143051147, 0.7409999966621399, 0.7390000224113464, 0.7440000176429749, 0.7519999742507935, 0.750333309173584, 0.7570000290870667, 0.7620000243186951, 0.7670000195503235, 0.7649999856948853, 0.7649999856948853, 0.7736666798591614, 0.7806666493415833, 0.7846666574478149, 0.7903333306312561, 0.7856666445732117, 0.7860000133514404, 0.7976666688919067, 0.7983333468437195, 0.8050000071525574, 0.8096666932106018, 0.8136666417121887, 0.812666654586792, 0.8216666579246521, 0.8233333230018616, 0.8180000185966492, 0.812333345413208, 0.8140000104904175, 0.8163333535194397, 0.8190000057220459]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 86, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7331428527832031, "mapping_values": [1, 14, 14, 10, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2955574546869895, 2.254740087945999, 2.1693371386812066, 1.9826285896394482, 1.6590719031557006, 1.3981978127260755, 1.3946140318845226, 1.202897449258359, 0.9800376646853457, 0.8986744999948542, 0.9039243100861265, 0.852915652817613, 0.8070925199880009, 0.8019047467196229, 0.8062174772668304, 0.7794716800318859, 0.7564826040472006, 0.7274144297546131, 0.7266212011041768, 0.7252988432219252, 0.7016457084966389, 0.6999477206550616, 0.6847748270659572, 0.6709984820343484, 0.6577438548287978, 0.6387362430958842, 0.6201754839208384, 0.6066335668070694, 0.6072827825110428, 0.590100987909209, 0.5845736039706729, 0.5792938856290647, 0.5715981713926567, 0.5728430120290908, 0.5627089842687493, 0.5529916276391377, 0.541940238119636, 0.5354808732589726, 0.5352415385861612, 0.5289351860403999], "accuracy": [0.10751552134752274, 0.21714437007904053, 0.33443403244018555, 0.4027208983898163, 0.45106327533721924, 0.5124818682670593, 0.5365209579467773, 0.6021661758422852, 0.6449610590934753, 0.6557918190956116, 0.6679434776306152, 0.6856426000595093, 0.6911900639533997, 0.7024171352386475, 0.6952846646308899, 0.7041342258453369, 0.7103421092033386, 0.7174745798110962, 0.7177387475967407, 0.7269845604896545, 0.7313432693481445, 0.7392682433128357, 0.7383436560630798, 0.746268630027771, 0.7425703406333923, 0.7578919529914856, 0.7578919529914856, 0.7626469135284424, 0.7672698497772217, 0.7749306559562683, 0.7786290049552917, 0.7820631265640259, 0.7839123010635376, 0.7864218950271606, 0.7903843522071838, 0.7989697456359863, 0.800290584564209, 0.7977809906005859, 0.7935543656349182, 0.7973847389221191], "val_loss": [1.948753493172782, 1.890932628086635, 1.7731741496494837, 1.5015919549124581, 1.1051733493804932, 0.8429300103868756, 0.7474672794342041, 0.7241976431437901, 0.6598581416266305, 0.6915525879178729, 0.6703481333596366, 0.6093264818191528, 0.5940029450825283, 0.5899344001497541, 0.5882675818034581, 0.5738587890352521, 0.5655042273657662, 0.5580393586839948, 0.5625497102737427, 0.549964427947998, 0.5373342888695853, 0.5313370398112706, 0.5186599833624703, 0.5085704667227608, 0.4954281875065395, 0.4798689569745745, 0.4737965890339443, 0.47438827582768034, 0.46681335994175505, 0.45928231307438444, 0.45273239271981375, 0.44665939467293875, 0.45316297667367117, 0.4533315896987915, 0.44016572407313753, 0.4323782239641462, 0.4311931814466204, 0.4312733667237418, 0.42968051774161203, 0.42415207624435425], "val_accuracy": [0.2446666657924652, 0.3946666717529297, 0.4476666748523712, 0.5203333497047424, 0.6039999723434448, 0.6740000247955322, 0.6949999928474426, 0.7170000076293945, 0.7226666808128357, 0.7113333344459534, 0.731333315372467, 0.7353333234786987, 0.7409999966621399, 0.7390000224113464, 0.7440000176429749, 0.7519999742507935, 0.7493333220481873, 0.7563333511352539, 0.7606666684150696, 0.765333354473114, 0.765333354473114, 0.765666663646698, 0.7739999890327454, 0.7789999842643738, 0.7839999794960022, 0.7883333563804626, 0.784333348274231, 0.7879999876022339, 0.79666668176651, 0.7976666688919067, 0.8059999942779541, 0.8100000023841858, 0.8140000104904175, 0.8166666626930237, 0.8233333230018616, 0.8230000138282776, 0.8183333277702332, 0.8136666417121887, 0.8163333535194397, 0.8180000185966492]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.11971428245306015, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [2.3649420258926757, 2.3122559067689985, 2.337000870134663, 2.311391680043182, 2.3129038773255655, 2.31288633499604], "accuracy": [0.10394927859306335, 0.09760929644107819, 0.09589222073554993, 0.09655263274908066, 0.09655263274908066, 0.09932637959718704], "val_loss": [1.9777890614100866, 1.9809520585196358, 1.987887246268136, 1.9809113230024065, 1.9810830524989538, 1.9768454006740026], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.09666666388511658, 0.10366666316986084, 0.09666666388511658, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 2, 6, 5, 2, 0, 5, 6, 3, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [50, 57, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [1, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [20362345538.97322, 2951986611102.212, 49877355428221.69, 353886154105811.25, 1531034993374321.8, 5115361330930293.0], "accuracy": [0.1018359512090683, 0.09906221181154251, 0.09549596905708313, 0.1022322028875351, 0.09800554811954498, 0.09879804402589798], "val_loss": [160007782400.0, 8619803429156.571, 92498474490733.72, 504203544138313.1, 1888548276179529.2, 5570348937829230.0], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 4, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 86, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [1, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 2, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [8, 3, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4, 2, 1, 3, 5], [3, 0, 2, 0, 3, 1, 0, 0, 0, 2], [31, 32, 3, 66, 1], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 1, 2], [3, 0, 3], [78, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 16, 10, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))))), tf.math.pow(tf.math.pow(grad, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [306879184.0969808, 5699073191.848897, 26297105158.99934, 73381134157.46613, 154726713775.9979, 288357876278.98035], "accuracy": [0.1018359512090683, 0.09906221181154251, 0.09549596905708313, 0.10210011899471283, 0.09840179979801178, 0.09866596013307571], "val_loss": [1107593325.7142856, 8856498468.571428, 29885909284.57143, 70834506020.57143, 138341871030.85715, 239047067940.57144], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [76, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [2, 3, 0], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.multiply(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07713644206523895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [0, 0, 2], [61, 52, 90]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3032511828393196, 2.303407315391638, 2.304043471931293, 2.3040386603540197, 2.3044821459934335, 2.3039518543568898, 2.3042325833060753], "accuracy": [0.09417514503002167, 0.0940430611371994, 0.09853387624025345, 0.09628847241401672, 0.09945846349000931, 0.09377889335155487, 0.1018359512090683], "val_loss": [1.973921775817871, 1.9737349918910436, 1.974766526903425, 1.974435670035226, 1.975181715829032, 1.9738062449863978, 1.9742892129080636], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.09666666388511658, 0.10199999809265137, 0.10233332961797714, 0.10066666454076767, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 1, 2], [1, 3, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [678812.5513745404, 97752215.70360586, 1649974878.7108705, 11703443271.785498, 50629442404.594376, 169155408912.3656], "accuracy": [0.1018359512090683, 0.09906221181154251, 0.09549596905708313, 0.10210011899471283, 0.09840179979801178, 0.09866596013307571], "val_loss": [5313754.428571428, 285256027.4285714, 3059289380.571429, 16673611190.857143, 62446794459.42857, 184186994688.0], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [1, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 86, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [13, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4.18035014808422, 21.29889725712958, 61.83211908729683, 133.63266337259554, 242.16781699246482, 407.5604504368734], "accuracy": [0.10196803510189056, 0.09959053993225098, 0.09509972482919693, 0.10236428678035736, 0.09879804402589798, 0.09959053993225098], "val_loss": [6.848421096801758, 25.121314457484655, 60.356863839285715, 117.83563668387276, 203.6382053920201, 324.5131574358259], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 7, 9, 1, 2], [1, 0, 1], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 1, 2], [0, 0, 2], [13, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 3], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3021942133192437, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 9, 0, 5, 6, 8, 4, 4], [3, 0, 1, 2, 3, 1, 0, 0, 0], [63, 86, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3022566908590862, 2.3038846234037043, 2.3108529837659604, 2.3708505544207745, 201.0813561513707, 4823.4729363199995, 14.589001622198122, 21.743157677630926, 28.86936100148695], "accuracy": [0.10196803510189056, 0.10342095047235489, 0.1014397069811821, 0.10645885765552521, 0.10196803510189056, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737469128199987, 1.974750586918422, 1.9868944713047572, 2.3042958804539273, 34782.38169642857, 9.92510986328125, 16.03848157610212, 22.124149867466517, 28.18268040248326], "val_accuracy": [0.10233332961797714, 0.10100000351667404, 0.10233332961797714, 0.10366666316986084, 0.10233332961797714, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [2, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [71, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [1], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 2, 3], [13, 52, 13]], "fitness": -0.09971428662538528, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(beta, sigma))", "other_info": {"loss": [2.3098675711216976, 2.369171190664926, 2.5307898593852705, 2.883951363137149, 3.620105559815505, 5.325030850728017, 9.487288596843921, 21.182991226351476, 66.44372529571618], "accuracy": [0.09047681838274002, 0.09298639744520187, 0.0936468094587326, 0.09985470771789551, 0.09509972482919693, 0.09734513610601425, 0.09470347315073013, 0.09721305221319199, 0.1014397069811821], "val_loss": [1.9799453190394811, 2.02547482081822, 2.1458611488342285, 2.4269089698791504, 3.1354216166904996, 5.081438064575195, 10.762050083705358, 30.45810808454241, 124.03252301897321], "val_accuracy": [0.09066666662693024, 0.09799999743700027, 0.10300000011920929, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 0, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 86, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [0, 0, 2], [20, 52, 13]], "fitness": -0.09428571164608002, "mapping_values": [1, 11, 11, 8, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.square(grad)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3032512952937836, 2.303407265919232, 2.3040435528947283, 2.3040386918450486, 2.3044634810087308, 2.309167960883289, 2.312782160468373, 2.3125361919780967, 2.306378770891733, 2.3085111227364288], "accuracy": [0.09417514503002167, 0.0940430611371994, 0.09853387624025345, 0.09628847241401672, 0.09985470771789551, 0.10249637067317963, 0.09879804402589798, 0.09959053993225098, 0.09853387624025345, 0.0948355570435524], "val_loss": [1.973921775817871, 1.9737349918910436, 1.974766390664237, 1.974435601915632, 1.9738947323390417, 1.9782109260559082, 1.9745442526681083, 1.9796137809753418, 1.977785519191197, 1.9750075340270996], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.09666666388511658, 0.10199999809265137, 0.1223333328962326, 0.10366666316986084, 0.09566666930913925, 0.0949999988079071, 0.09666666388511658, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 5, 8, 6, 5, 2, 0, 5, 6, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 11, 11, 8, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.square(grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.302042356366888, 2.302615764512362, 2.3015174018928892, 2.3014598968494773, 2.3012530861623914, 2.301645030655393], "accuracy": [0.09206181764602661, 0.08994849026203156, 0.09074098616838455, 0.09298639744520187, 0.09245806187391281, 0.08770307898521423], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 3, 2], [61, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.302042356366888, 2.302615764512362, 2.3015174018928892, 2.3014598968494773, 2.3012530861623914, 2.301645030655393], "accuracy": [0.09206181764602661, 0.08994849026203156, 0.09074098616838455, 0.09298639744520187, 0.09245806187391281, 0.08770307898521423], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 8, 9, 1, 2], [3, 0, 3], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302042356366888, 2.302615764512362, 2.3015174018928892, 2.3014598968494773, 2.3012530861623914, 2.301645030655393], "accuracy": [0.09206181764602661, 0.08994849026203156, 0.09074098616838455, 0.09298639744520187, 0.09245806187391281, 0.08770307898521423], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]