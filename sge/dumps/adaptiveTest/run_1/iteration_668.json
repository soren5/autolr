[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8274285793304443, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 8, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.066252288029824, 1.9106139572084604, 1.846626566606128, 1.573694222591588, 1.0524501012080476, 0.8332728370856836, 0.7753079090025825, 0.7204870030061522, 0.6827004517562291, 0.6472807247971563, 0.6239058967941016, 0.629815926751472, 0.5784646139688433, 0.5765691686772463, 0.5811579694144556, 0.5496880943827767, 0.5298420813703707, 0.5475788203842683, 0.5033460467514533, 0.4922484788817815, 0.4945192873367717, 0.4930011152457473, 0.48442702822602735, 0.4625878307002489, 0.4765308626796182, 0.46118934424388613, 0.4447512983205123], "accuracy": [0.31264033913612366, 0.37445515394210815, 0.3377360999584198, 0.44062870740890503, 0.605468213558197, 0.6946242451667786, 0.7102100253105164, 0.7310791015625, 0.746268630027771, 0.7553823590278625, 0.7625148296356201, 0.7650244235992432, 0.7854973077774048, 0.7800818681716919, 0.7794214487075806, 0.7936864495277405, 0.8045172095298767, 0.7969884872436523, 0.8030643463134766, 0.8186501264572144, 0.8164047002792358, 0.8125742673873901, 0.8214238286018372, 0.830669641494751, 0.8202351331710815, 0.8267071843147278, 0.8345000743865967], "val_loss": [1.7676779883248466, 1.8328180994306291, 1.79090792792184, 0.982682602746146, 0.6874480928693499, 0.5744389125279018, 0.5822796651295253, 0.5135484763554165, 0.5210533312388829, 0.5191795144762311, 0.5262036153248378, 0.4582282134464809, 0.4378351994923183, 0.4312377997807094, 0.43742854254586355, 0.47784428937094553, 0.44261293751852854, 0.41826815264565603, 0.4008093902042934, 0.42631902013506207, 0.42296710184642244, 0.37805512121745516, 0.3899038944925581, 0.428611091205052, 0.41672768763133455, 0.38106952394757954, 0.40826102665492464], "val_accuracy": [0.31299999356269836, 0.13233333826065063, 0.3153333365917206, 0.5553333163261414, 0.7146666646003723, 0.7440000176429749, 0.734666645526886, 0.7643333077430725, 0.7603333592414856, 0.7706666588783264, 0.7616666555404663, 0.809333324432373, 0.8080000281333923, 0.8113333582878113, 0.8149999976158142, 0.7923333048820496, 0.8029999732971191, 0.8183333277702332, 0.8373333215713501, 0.8069999814033508, 0.8173333406448364, 0.8423333168029785, 0.8316666483879089, 0.8056666851043701, 0.8233333230018616, 0.8366666436195374, 0.824999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 0, 6, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8145714402198792, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.066291255753164, 1.9188434820700442, 1.991881906521744, 1.2927279874727695, 1.0117323428427838, 0.793123305221795, 0.7523927970522069, 0.6977790565522843, 0.6627409291021765, 0.6367676631492032, 0.6277816227130791, 0.5969377643931985, 0.590093560513882, 0.5672680899341423, 0.5635572372804213, 0.5552521232899863, 0.5302060754024247, 0.529690702050322, 0.5051285769284094, 0.49559888943563346, 0.49111360603587473, 0.4937968245429323, 0.48015426799778954, 0.47434249267586315, 0.4679912954683018, 0.45501279770312386, 0.4436317977927632], "accuracy": [0.31264033913612366, 0.37604016065597534, 0.32267865538597107, 0.5424646735191345, 0.6312243938446045, 0.7067758440971375, 0.7199841737747192, 0.7339849472045898, 0.7464007139205933, 0.7611940503120422, 0.7586844563484192, 0.7757231593132019, 0.7823272943496704, 0.7861577272415161, 0.7750627398490906, 0.7902522683143616, 0.8072909712791443, 0.8000264167785645, 0.8076872229576111, 0.8156121969223022, 0.8168009519577026, 0.8113855719566345, 0.8219521641731262, 0.8197067975997925, 0.8239334225654602, 0.8301413059234619, 0.8297450542449951], "val_loss": [1.7690207617623466, 1.8259353637695312, 1.4062483651297433, 0.7841810498918805, 0.5939334801265171, 0.5730026960372925, 0.5927736588886806, 0.4937431641987392, 0.48738508565085276, 0.4704328605106899, 0.4729903255190168, 0.46089032718113493, 0.43835149492536274, 0.4447671685900007, 0.4433201551437378, 0.4473987477166312, 0.4405926636287144, 0.422768839768001, 0.39663225412368774, 0.39727273157664705, 0.43877266134534565, 0.3837365337780544, 0.44490965775081087, 0.4064971464020865, 0.44599826846803936, 0.391052850655147, 0.44826204436165945], "val_accuracy": [0.3109999895095825, 0.24500000476837158, 0.5006666779518127, 0.6299999952316284, 0.7293333411216736, 0.7306666374206543, 0.721666693687439, 0.7856666445732117, 0.7879999876022339, 0.7919999957084656, 0.79666668176651, 0.8056666851043701, 0.8149999976158142, 0.8133333325386047, 0.8096666932106018, 0.8036666512489319, 0.8053333163261414, 0.8193333148956299, 0.8323333263397217, 0.8289999961853027, 0.7983333468437195, 0.8416666388511658, 0.8113333582878113, 0.8143333196640015, 0.8100000023841858, 0.8289999961853027, 0.8006666898727417]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8117142915725708, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 8, 3, 2, 6, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.066249060010425, 1.8881794387291861, 1.8596804152547786, 1.2980346520421622, 0.9658068196648509, 0.8459023672434411, 0.7566143468449443, 0.703991983119822, 0.6709663054615893, 0.6270087858657827, 0.6415402594574406, 0.6089840656998388, 0.5740647014294948, 0.5632579907481665, 0.5819191778844547, 0.5458187552538247, 0.5489898871484292, 0.5343253924751861, 0.501793187339434, 0.49001161758264516, 0.5001541925474889, 0.49245472226979287, 0.46180731555678983, 0.4821518577163907, 0.46795535857541104, 0.44833000640607135, 0.4391226897685598], "accuracy": [0.31264033913612366, 0.38422930240631104, 0.3603222966194153, 0.5509179830551147, 0.6429798007011414, 0.6925109028816223, 0.713379979133606, 0.7326641082763672, 0.7481178045272827, 0.7635715007781982, 0.7565711140632629, 0.7656848430633545, 0.7841764688491821, 0.7836481332778931, 0.7753269076347351, 0.7959318161010742, 0.7924976944923401, 0.802800178527832, 0.8138951063156128, 0.8170651197433472, 0.8183859586715698, 0.8168009519577026, 0.826310932636261, 0.8232730031013489, 0.824329674243927, 0.8337075710296631, 0.8348963260650635], "val_loss": [1.7679425648280553, 1.8553545815604073, 1.4620315687997, 0.7242528029850551, 0.6319637809480939, 0.5845820903778076, 0.6008715288979667, 0.508496914591108, 0.4964979716709682, 0.5633630241666522, 0.4798622131347656, 0.46286087376730783, 0.4401839290346418, 0.464401262147086, 0.43114071232931955, 0.47373918124607634, 0.42218055043901714, 0.4188017930303301, 0.41719973938805716, 0.41482006652014597, 0.44515020506722586, 0.3790504847254072, 0.3974249277796064, 0.388814457825252, 0.41553383214133127, 0.3951577629361834, 0.44020986557006836], "val_accuracy": [0.312666654586792, 0.12566666305065155, 0.4833333194255829, 0.6890000104904175, 0.7243333458900452, 0.734666645526886, 0.718666672706604, 0.7776666879653931, 0.7850000262260437, 0.7386666536331177, 0.784333348274231, 0.7943333387374878, 0.8059999942779541, 0.79666668176651, 0.8209999799728394, 0.7806666493415833, 0.8209999799728394, 0.8223333358764648, 0.8223333358764648, 0.8276666402816772, 0.7919999957084656, 0.8460000157356262, 0.8293333053588867, 0.8309999704360962, 0.8309999704360962, 0.8296666741371155, 0.8163333535194397]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 2, 3, 9, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [2, 7, 6, 4], [1, 2], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8082857131958008, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 9, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.sqrt(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.sqrt(grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0869272337487628, 1.7770718576224442, 1.435497992420713, 1.2841934854517272, 0.9392421589693168, 0.865978950719477, 0.7854546946446972, 0.7247927526063482, 0.6753888852828371, 0.6724811472031167, 0.6328308899578023, 0.6274145805934921, 0.5925864470066443, 0.5864923370355282, 0.5842658557660072, 0.5476668575782786, 0.5564680027372849, 0.5327135092546722, 0.5173704845951596, 0.49247172018241225, 0.5049612091013059, 0.48783843771357344, 0.48594653744188043, 0.4683720189047181, 0.47954633392284357, 0.4553251378036462, 0.42582199164054746], "accuracy": [0.31026285886764526, 0.3774930536746979, 0.4912164807319641, 0.5316338539123535, 0.6317527294158936, 0.6738871932029724, 0.7018887996673584, 0.7252674698829651, 0.7445515990257263, 0.7458723783493042, 0.7577598690986633, 0.7602694630622864, 0.7794214487075806, 0.7738739848136902, 0.778232753276825, 0.7957997918128967, 0.7829877138137817, 0.7984414100646973, 0.8009510040283203, 0.8142913579940796, 0.8129705190658569, 0.8165367841720581, 0.819442629814148, 0.8255184292793274, 0.819442629814148, 0.8284242749214172, 0.8411042094230652], "val_loss": [1.9083266939435686, 1.3003806046077184, 1.2464427266802107, 0.6961962495531354, 0.7052076884678432, 0.6037697451455253, 0.5767145497458321, 0.5270515850612095, 0.5424366848809379, 0.5673571314130511, 0.5249973024640765, 0.4740950550351824, 0.46349855831691195, 0.4324787514550345, 0.44272645882197786, 0.49976655415126253, 0.44161925997052875, 0.42626612527029856, 0.4351433004651751, 0.4519976888384138, 0.4528577668326242, 0.39431525128228323, 0.4276204790387835, 0.42205668347222464, 0.44275202069963726, 0.3982457092830113, 0.4703188112803868], "val_accuracy": [0.2486666738986969, 0.4650000035762787, 0.48366665840148926, 0.6669999957084656, 0.6953333616256714, 0.7283333539962769, 0.7400000095367432, 0.7663333415985107, 0.7516666650772095, 0.7366666793823242, 0.7663333415985107, 0.7933333516120911, 0.7896666526794434, 0.8146666884422302, 0.8109999895095825, 0.7663333415985107, 0.812666654586792, 0.8176666498184204, 0.8143333196640015, 0.8036666512489319, 0.7879999876022339, 0.8333333134651184, 0.812333345413208, 0.8013333082199097, 0.8086666464805603, 0.8263333439826965, 0.8086666464805603]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 0, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7879999876022339, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 8, 3, 2, 6, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2468570915305808, 1.886229951147705, 1.5275670293929664, 1.2437534915804154, 1.1522638913017176, 1.0479978694891838, 0.9483638173789711, 0.8026236464255805, 0.7844427660660673, 0.7910261005694604, 0.7306904547076892, 0.6905593542595424, 0.696015396925594, 0.6885909877196909, 0.6554464235943165, 0.6050144892720782, 0.6228832452052525, 0.5863863361856453, 0.5881931108411875, 0.5632071459313834, 0.5570803545784437, 0.6025149846010834], "accuracy": [0.25241050124168396, 0.354510635137558, 0.4651961326599121, 0.5322942733764648, 0.5737683176994324, 0.5972790718078613, 0.6321489810943604, 0.687887966632843, 0.6917183995246887, 0.6819442510604858, 0.7112666964530945, 0.7191916704177856, 0.7154933214187622, 0.7292299270629883, 0.7397965788841248, 0.7598732113838196, 0.7629110813140869, 0.7740060687065125, 0.769911527633667, 0.7841764688491821, 0.7817989587783813, 0.7732135653495789], "val_loss": [1.8307735579354423, 0.9909965310777936, 1.1409971032823836, 0.8627568994249616, 1.0569525105612618, 0.9952303341456822, 0.6606819799968174, 0.710365755217416, 0.6275836569922311, 0.6090106623513358, 0.569950784955706, 0.5608615704945156, 0.5572799273899623, 0.5551819631031581, 0.510469743183681, 0.4954361915588379, 0.48756500652858187, 0.5243389776774815, 0.47945594787597656, 0.5076934439795358, 0.4491878407342093, 0.5127796275275094], "val_accuracy": [0.3866666555404663, 0.5453333258628845, 0.5016666650772095, 0.6013333201408386, 0.4659999907016754, 0.4946666657924652, 0.6886666417121887, 0.6776666641235352, 0.7043333053588867, 0.7256666421890259, 0.7263333201408386, 0.7213333249092102, 0.7493333220481873, 0.7379999756813049, 0.753333330154419, 0.7666666507720947, 0.7863333225250244, 0.7516666650772095, 0.7720000147819519, 0.7543333172798157, 0.7850000262260437, 0.7773333191871643]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 2, 3, 9, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [54, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7354285717010498, "mapping_values": [1, 4, 4, 3, 1, 1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.299506595342261, 2.292431536225941, 2.286117938625783, 2.2768290752055167, 2.271189077198702, 2.262628683529321, 2.2560558642819575, 2.24708622778254, 2.238961689287346, 2.230711345013815, 2.219605859685426, 2.2096536392863904, 2.1955603665490555, 2.182455087082812, 2.1683991210430116, 2.1546175683635873, 2.1387525695961513, 2.1181815022632446, 2.0977186694074033, 2.0763182343430193, 2.054029778750219, 2.030635466932731, 2.0008262275563036, 1.9747331043071341, 1.9388543914542489, 1.9116230354868362, 1.8769308895781969, 1.8408882548197811, 1.807078483507476, 1.7697390687779004, 1.7312734121691202, 1.6930107736411175, 1.6573270457752345, 1.6132867171890024, 1.5837923593335952, 1.5539957836335283, 1.5259048989924142, 1.4830527485574256, 1.4518130884792795, 1.4368088613994339, 1.402586983242496, 1.3769805981986605, 1.3586301129838305, 1.3316117175235378, 1.3098145165951685, 1.291881984550215, 1.2816433301612513, 1.2636896787050647, 1.2575467629848989, 1.226927528591078, 1.2151286734597495, 1.1977044340011986, 1.1809425589399347, 1.1726475238579612, 1.1577496050749125, 1.1446847501070019, 1.133129883939879, 1.1136735050732733, 1.111124204842957, 1.1027837512263563, 1.1028128009446465, 1.0785207316356171, 1.0775200091395885, 1.0577147459042244, 1.0614984308519164, 1.0587025925688314, 1.0341380067930372, 1.0310728470599884, 1.0246554219790454, 1.0090453640155945, 1.0239246242617288, 1.0043801099254848, 0.9903830472488665, 0.9898009066568499, 0.9793585751743491, 0.9840158160021591, 0.9714453205960286, 0.9683505440542427, 0.9540886806616646, 0.9495266027863724, 0.9428647095894753, 0.9480279270195926, 0.9382499864765556, 0.9379028245489816, 0.9451861661564736, 0.9266061125225505, 0.9193036111039476, 0.9066956230457575, 0.9092669329229457, 0.9086883707431329, 0.9106807315968377, 0.89188147554812, 0.9013615393005641, 0.8901415552051863, 0.8966341607637724, 0.8854069548937402, 0.877275809627939, 0.8832090284688645, 0.876770958593729, 0.8713263279616069], "accuracy": [0.09734513610601425, 0.11728965491056442, 0.1328754425048828, 0.1566503793001175, 0.1728965789079666, 0.19852067530155182, 0.2114647924900055, 0.23735305666923523, 0.24778760969638824, 0.2654867172241211, 0.28278958797454834, 0.29520538449287415, 0.31224408745765686, 0.3269053101539612, 0.3369435966014862, 0.3521331250667572, 0.3590014576911926, 0.3646810054779053, 0.37802138924598694, 0.3859463632106781, 0.4006075859069824, 0.3987584114074707, 0.4142121374607086, 0.4161933660507202, 0.4227975308895111, 0.4275524914264679, 0.4422137141227722, 0.4527803361415863, 0.4519878625869751, 0.4683661460876465, 0.4752344489097595, 0.48329150676727295, 0.49148064851760864, 0.5024435520172119, 0.4959714710712433, 0.5075947642326355, 0.5130101442337036, 0.522520124912262, 0.5349359512329102, 0.5317659378051758, 0.5414080023765564, 0.5387663245201111, 0.5474838018417358, 0.5502575635910034, 0.55791836977005, 0.5650508403778076, 0.5654470920562744, 0.5692775249481201, 0.5708624720573425, 0.5779950022697449, 0.5845991373062134, 0.587769091129303, 0.5941091179847717, 0.5921278595924377, 0.5939770340919495, 0.5982036590576172, 0.6053361296653748, 0.6100911498069763, 0.6129969358444214, 0.6152423620223999, 0.6155065298080444, 0.6239598393440247, 0.6185444593429565, 0.6262052655220032, 0.6275261044502258, 0.6273940205574036, 0.6338660717010498, 0.6347906589508057, 0.6346585750579834, 0.6416589617729187, 0.6351869106292725, 0.6427156329154968, 0.650640606880188, 0.6516972780227661, 0.6518293619155884, 0.6456214785575867, 0.6580372452735901, 0.6534143686294556, 0.6617355942726135, 0.6602826714515686, 0.6627922058105469, 0.6601505875587463, 0.6655659675598145, 0.6708492636680603, 0.6618676781654358, 0.6651697158813477, 0.6704530715942383, 0.6737551093101501, 0.672170102596283, 0.6717738509178162, 0.6741513609886169, 0.6819442510604858, 0.6789063811302185, 0.6777176260948181, 0.6777176260948181, 0.6774534583091736, 0.6840575933456421, 0.6822084188461304, 0.6820763349533081, 0.6799629926681519], "val_loss": [1.96426180430821, 1.9577748434884208, 1.9512696266174316, 1.944601127079555, 1.9379184586661202, 1.930821418762207, 1.923386778150286, 1.9154886518205916, 1.9070828301565987, 1.8980722427368164, 1.88821622303554, 1.877701759338379, 1.8660308292933874, 1.85317781993321, 1.839204924447196, 1.8240360532488142, 1.8075360570635115, 1.7893894059317452, 1.769669873373849, 1.7482237134660994, 1.7250911167689733, 1.7003765787397112, 1.6733826228550501, 1.644817658833095, 1.6143428598131453, 1.5825301919664656, 1.549062660762242, 1.5144140720367432, 1.4787633759634835, 1.4425493308476038, 1.405888557434082, 1.3688678060259138, 1.331815242767334, 1.294938019343785, 1.2597687244415283, 1.226132597242083, 1.193502630506243, 1.1621435710362025, 1.132200036730085, 1.1046939577375139, 1.0784048352922713, 1.0533192498343331, 1.0299609388623918, 1.0080040863582067, 0.9874336038316999, 0.9683383192334857, 0.950385570526123, 0.9335883004324776, 0.9181578159332275, 0.9030961649758475, 0.889092070715768, 0.8757468632289341, 0.8633604049682617, 0.8519626344953265, 0.8409405776432582, 0.830076915877206, 0.8202637093407767, 0.8100837639399937, 0.8009937490735736, 0.7923317296164376, 0.7855663129261562, 0.7772936650684902, 0.7697820493153164, 0.7623382977076939, 0.7558564628873553, 0.7497515167508807, 0.7431081022535052, 0.7373289891651699, 0.7318986824580601, 0.7265577486583165, 0.7217461381639753, 0.7165070261274066, 0.7112305675234113, 0.706526620047433, 0.701930182320731, 0.6977366379329136, 0.6934831483023507, 0.6893808330808368, 0.6856322458812169, 0.6812783479690552, 0.6778310537338257, 0.6745083161762783, 0.6711552143096924, 0.6677361556461879, 0.6650729009083339, 0.6623773404530117, 0.6593381847654071, 0.6564942598342896, 0.6534391471317836, 0.6502974033355713, 0.6479726178305489, 0.6452641487121582, 0.6427002634320941, 0.6400200128555298, 0.637890236718314, 0.6352716343743461, 0.6330525023596627, 0.6307492085865566, 0.6283630643572126, 0.6263313974652972], "val_accuracy": [0.0846666693687439, 0.15299999713897705, 0.2160000056028366, 0.2750000059604645, 0.3240000009536743, 0.35600000619888306, 0.3773333430290222, 0.3919999897480011, 0.4059999883174896, 0.4189999997615814, 0.4283333420753479, 0.4403333365917206, 0.4476666748523712, 0.45500001311302185, 0.4650000035762787, 0.4776666760444641, 0.4846666753292084, 0.4933333396911621, 0.5009999871253967, 0.5109999775886536, 0.5210000276565552, 0.5289999842643738, 0.5360000133514404, 0.5400000214576721, 0.546999990940094, 0.5523333549499512, 0.5556666851043701, 0.5600000023841858, 0.5636666417121887, 0.5740000009536743, 0.5806666612625122, 0.5863333344459534, 0.5926666855812073, 0.6000000238418579, 0.6083333492279053, 0.6140000224113464, 0.6173333525657654, 0.624666690826416, 0.6320000290870667, 0.640333354473114, 0.6480000019073486, 0.6546666622161865, 0.6603333353996277, 0.6646666526794434, 0.668666660785675, 0.6700000166893005, 0.6736666560173035, 0.6743333339691162, 0.6779999732971191, 0.6796666383743286, 0.6833333373069763, 0.6836666464805603, 0.6853333115577698, 0.6886666417121887, 0.6909999847412109, 0.6940000057220459, 0.6953333616256714, 0.6959999799728394, 0.6986666917800903, 0.6983333230018616, 0.6990000009536743, 0.7020000219345093, 0.703000009059906, 0.7036666870117188, 0.7056666612625122, 0.7070000171661377, 0.7083333134651184, 0.7076666951179504, 0.7110000252723694, 0.7120000123977661, 0.7129999995231628, 0.7170000076293945, 0.7173333168029785, 0.7203333377838135, 0.7206666469573975, 0.721666693687439, 0.7233333587646484, 0.7266666889190674, 0.7250000238418579, 0.7273333072662354, 0.7283333539962769, 0.7289999723434448, 0.7289999723434448, 0.7283333539962769, 0.7296666502952576, 0.7300000190734863, 0.731333315372467, 0.7306666374206543, 0.7333333492279053, 0.734333336353302, 0.7366666793823242, 0.7360000014305115, 0.7363333106040955, 0.737666666507721, 0.737666666507721, 0.7386666536331177, 0.7383333444595337, 0.7403333187103271, 0.7423333525657654, 0.7423333525657654]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 8, 6, 9, 3, 0, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 2, 2, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.6825714111328125, "mapping_values": [1, 4, 4, 3, 1, 1, 5, 5, 4, 1, 1, 8, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.pow(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.298222641982045, 2.2712692351877224, 2.219478800564142, 2.1243623419680913, 1.9571338195401475, 1.6878779157750154, 1.4471974150222195, 1.3671995422009071, 1.3387106723631723, 1.2267222357085983, 1.0423246551388212, 0.9211427260304895, 0.9113919308015211, 0.9079853414371265, 0.8596632804427842, 0.8186641632369039, 0.796048828426873, 0.7933903634902462, 0.7797463319919145, 0.7747561623234208, 0.7459151576601708, 0.7330451614159823, 0.7131829342633002, 0.7074215911115244, 0.7028175051800248, 0.6919612098111767, 0.6817897808093594, 0.6629329934773303, 0.6539699283526038, 0.6360384646093117, 0.6436203154417282, 0.6303633488463751, 0.6208380680152878, 0.6007827020844039, 0.5935734160477695, 0.5916063571650165, 0.5876305648018073, 0.5819460349139001, 0.5705616021625527, 0.5610809430564635, 0.5586995305228999, 0.5494217652733521, 0.5423520877927821, 0.5430854557448879, 0.5301752597302211, 0.5323305980577571, 0.5280858893845422, 0.5256313951519959, 0.5278237629261125, 0.5139826852348518, 0.5092414291763759, 0.4974635039668876, 0.4943657317465134, 0.4977923572779867, 0.4888785428036284, 0.4865884531159931, 0.4751793079333078, 0.48148840788632274, 0.47555828204701023, 0.4677352500141352, 0.4717539269351657, 0.45515966806287667, 0.45987595812031434, 0.46440739027261263, 0.45306132752913303, 0.45400015388056586, 0.453299500135745, 0.447594826802633, 0.4440117624095402, 0.435941244199874, 0.4354511390327856, 0.435254914771454, 0.4237865481976867, 0.4286757936220694, 0.43012297277468825, 0.41732032953110415, 0.4068951861119273, 0.40822612600020447, 0.40872750775830746, 0.4006651360652293, 0.4019280170500003, 0.4014963846968118, 0.3967235503636331, 0.39476177380967054, 0.38830408911742176, 0.38692397098058817, 0.3752413031612767, 0.38366856676255867, 0.37565960463767734, 0.37730477526518236, 0.370108712256435, 0.3697936253902887], "accuracy": [0.09985470771789551, 0.17078325152397156, 0.287280410528183, 0.3673226833343506, 0.40641921758651733, 0.4539690911769867, 0.5023114681243896, 0.5336151123046875, 0.5540879964828491, 0.5975432395935059, 0.639809787273407, 0.656980574131012, 0.6597543358802795, 0.6749438643455505, 0.6947563290596008, 0.691850483417511, 0.7071720957756042, 0.7040021419525146, 0.7096816897392273, 0.7055870890617371, 0.7156254053115845, 0.7189275026321411, 0.7219653725624084, 0.7279091477394104, 0.7300224304199219, 0.7312111854553223, 0.7408532500267029, 0.741909921169281, 0.7479857206344604, 0.7540615797042847, 0.7536653280258179, 0.763439416885376, 0.767401933670044, 0.7721568942070007, 0.7746664881706238, 0.7725531458854675, 0.7746664881706238, 0.7843085527420044, 0.7820631265640259, 0.785101056098938, 0.7833839654922485, 0.789988100528717, 0.7975168228149414, 0.7948752045631409, 0.802800178527832, 0.7971205711364746, 0.8030643463134766, 0.8035926818847656, 0.8035926818847656, 0.8099326491355896, 0.8090080618858337, 0.8169330358505249, 0.8098005652427673, 0.8131026029586792, 0.819442629814148, 0.8222163319587708, 0.8183859586715698, 0.8190463781356812, 0.8247259259223938, 0.8284242749214172, 0.8248580098152161, 0.8240655064582825, 0.829216718673706, 0.8269713521003723, 0.8341038227081299, 0.8302733898162842, 0.8294808864593506, 0.8343679904937744, 0.8337075710296631, 0.8388587832450867, 0.8426892161369324, 0.8450667262077332, 0.8399154543876648, 0.8399154543876648, 0.8454629778862, 0.844010055065155, 0.8465195894241333, 0.8450667262077332, 0.845859169960022, 0.8520671129226685, 0.848368763923645, 0.8469158411026001, 0.8510104417800903, 0.8506141901016235, 0.8520671129226685, 0.8504821062088013, 0.857218325138092, 0.8502179384231567, 0.8549728989601135, 0.8668603897094727, 0.8648791313171387, 0.8598600029945374], "val_loss": [1.956160340990339, 1.918100016457694, 1.8546583993094308, 1.733454976763044, 1.5069141047341483, 1.201765673501151, 0.9685510226658413, 0.8159581763403756, 0.7489621809550694, 0.7041972194399152, 0.6760412624904087, 0.6786232846123832, 0.703965289252145, 0.686110394341605, 0.6298913444791522, 0.5968050105231149, 0.593383959361485, 0.5856506824493408, 0.5808024747031075, 0.5729515893118722, 0.5563049997602191, 0.5470793758119855, 0.550341010093689, 0.5499351705823626, 0.5405124255589077, 0.531145419393267, 0.5246256589889526, 0.5182101045336042, 0.5137914419174194, 0.510452219418117, 0.5019891602652413, 0.4909937722342355, 0.4829808303288051, 0.4767843655177525, 0.4736567905970982, 0.4723437343324934, 0.46725853851863314, 0.4611051934106009, 0.4563180719103132, 0.4509434529713222, 0.4452131986618042, 0.441588078226362, 0.43893114158085417, 0.436407242502485, 0.4364797217505319, 0.43500499214444843, 0.43162853377205984, 0.42988376106534687, 0.4265156217983791, 0.41939095088413786, 0.4143909811973572, 0.41236560685294016, 0.41025304794311523, 0.40771701506205965, 0.40660883699144634, 0.40705898829868864, 0.40755068404333933, 0.4077608415058681, 0.4063209465571812, 0.40397283009120394, 0.40137825693402973, 0.39910395656313213, 0.3958451407296317, 0.39432733399527414, 0.3920398695128305, 0.38716516324451994, 0.38464719908578054, 0.3836787257875715, 0.3846638628414699, 0.38840889079230173, 0.39065208605357576, 0.3915552922657558, 0.3920109527451651, 0.3913728254181998, 0.39004006556102205, 0.3841723884854998, 0.37982834236962454, 0.37830497537340435, 0.37989688771111624, 0.38378808328083586, 0.3818380577223642, 0.37938326597213745, 0.37927516869136263, 0.3769750339644296, 0.3764248149735587, 0.37712693214416504, 0.37569364479609896, 0.37540437494005474, 0.37725840296064106, 0.3815909113202776, 0.3814823627471924, 0.37489473819732666], "val_accuracy": [0.17299999296665192, 0.37433332204818726, 0.4116666615009308, 0.45266667008399963, 0.5173333287239075, 0.5699999928474426, 0.640999972820282, 0.6850000023841858, 0.6946666836738586, 0.7153333425521851, 0.7120000123977661, 0.7183333039283752, 0.7279999852180481, 0.7369999885559082, 0.7323333621025085, 0.7419999837875366, 0.7429999709129333, 0.7446666955947876, 0.7443333268165588, 0.7513333559036255, 0.7593333125114441, 0.765999972820282, 0.7583333253860474, 0.7609999775886536, 0.7680000066757202, 0.7749999761581421, 0.7726666927337646, 0.7689999938011169, 0.765666663646698, 0.7670000195503235, 0.7753333449363708, 0.7879999876022339, 0.7933333516120911, 0.7963333129882812, 0.7963333129882812, 0.7953333258628845, 0.7979999780654907, 0.7976666688919067, 0.8013333082199097, 0.8043333292007446, 0.8096666932106018, 0.8103333115577698, 0.8143333196640015, 0.8186666369438171, 0.8209999799728394, 0.8233333230018616, 0.8246666789054871, 0.8273333311080933, 0.82833331823349, 0.8289999961853027, 0.8299999833106995, 0.8259999752044678, 0.8266666531562805, 0.8289999961853027, 0.82833331823349, 0.8326666951179504, 0.8346666693687439, 0.8376666903495789, 0.8383333086967468, 0.8353333473205566, 0.8336666822433472, 0.8373333215713501, 0.8393333554267883, 0.8420000076293945, 0.843999981880188, 0.843999981880188, 0.8460000157356262, 0.847000002861023, 0.846666693687439, 0.8486666679382324, 0.8450000286102295, 0.8446666598320007, 0.8433333039283752, 0.8486666679382324, 0.8516666889190674, 0.8523333072662354, 0.8489999771118164, 0.8503333330154419, 0.8519999980926514, 0.8556666374206543, 0.8573333621025085, 0.8556666374206543, 0.8560000061988831, 0.859000027179718, 0.862333357334137, 0.8616666793823242, 0.8640000224113464, 0.8633333444595337, 0.8619999885559082, 0.8640000224113464, 0.8633333444595337, 0.8600000143051147]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 2, 3, 9, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [26, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.6679999828338623, "mapping_values": [1, 4, 4, 3, 1, 1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.298222641982045, 2.271269104751881, 2.219477064180305, 2.1243540787536235, 1.9571136409706364, 1.6878583988005287, 1.4472075929069848, 1.3672278500535406, 1.3386666621073535, 1.2267740272086893, 1.0423731070782893, 0.9211504823181214, 0.9113834160052239, 0.9081380212973011, 0.8596995257824294, 0.8188551183641862, 0.7959478204559892, 0.7939233352810149, 0.7798017319072869, 0.7750514555978831, 0.7460766234229096, 0.733375986026121, 0.713771957597555, 0.7082748981971373, 0.7036701174869419, 0.6924535696453911, 0.6821836410197347, 0.6635021843914626, 0.6545351462325778, 0.6364370388456261, 0.6440043514981924, 0.631121525147556, 0.6216405585866799, 0.6012104282746336, 0.5937296693918018, 0.5922727538310872, 0.5878558722012834, 0.581556732337142, 0.5706211924001825, 0.5615022327795698, 0.5585980319296601, 0.5496702154928809, 0.542741111327534, 0.5438204694890139, 0.5304603063828752, 0.5335689638395036, 0.5292011915401398, 0.5256555984206345, 0.5283265742076592, 0.5142627081236804, 0.5092559768271532, 0.4984218756504787, 0.4939564638220639, 0.4979149646345556, 0.4890428855395226], "accuracy": [0.09985470771789551, 0.17078325152397156, 0.287280410528183, 0.36745476722717285, 0.40641921758651733, 0.4539690911769867, 0.5023114681243896, 0.5337471961975098, 0.5543521046638489, 0.5974111557006836, 0.6400739550590515, 0.6564522385597229, 0.6598864197731018, 0.6753401160240173, 0.6939638257026672, 0.6911900639533997, 0.7078325152397156, 0.7042662501335144, 0.7096816897392273, 0.7051908373832703, 0.7153612375259399, 0.7180029153823853, 0.7218332886695862, 0.7268524765968323, 0.7290979027748108, 0.7313432693481445, 0.7411174178123474, 0.7412495017051697, 0.7464007139205933, 0.7548540234565735, 0.7531369924545288, 0.7635715007781982, 0.7652885913848877, 0.7724210619926453, 0.7745344042778015, 0.7728173136711121, 0.7736098170280457, 0.7865539789199829, 0.78113853931427, 0.7857614755630493, 0.7825914621353149, 0.7897239327430725, 0.7965922355651855, 0.7977809906005859, 0.8017435073852539, 0.7977809906005859, 0.8042530417442322, 0.8042530417442322, 0.8039889335632324, 0.809140145778656, 0.8090080618858337, 0.816008448600769, 0.8098005652427673, 0.8129705190658569, 0.8191784620285034], "val_loss": [1.956160340990339, 1.9180993352617537, 1.8546545164925712, 1.7334369250706263, 1.5068912846701485, 1.2017617906842912, 0.9686006477900914, 0.8159916400909424, 0.7489537511553083, 0.7042345660073417, 0.6761510031563895, 0.6785326514925275, 0.7040201766150338, 0.6860896008355277, 0.629739591053554, 0.5965392078672137, 0.5934285947254726, 0.5857788154057094, 0.580764719418117, 0.573145832334246, 0.5563066516603742, 0.5472985846655709, 0.5508298873901367, 0.5504463059561593, 0.5411213125501361, 0.5318218980516706, 0.5253213133130755, 0.519075768334525, 0.5145877599716187, 0.5109257187162127, 0.5024080617087228, 0.4914381333759853, 0.4831808975764683, 0.4768568107060024, 0.4739161218915667, 0.4724990129470825, 0.467030542237418, 0.4606189216886248, 0.45575596605028423, 0.4502415657043457, 0.44461069788251606, 0.44121384620666504, 0.4385825480733599, 0.436520448752812, 0.4371499163763864, 0.43552391869681223, 0.43208381107875277, 0.43066912037985666, 0.4269221765654428, 0.41975834539958407, 0.41515759910855976, 0.41335426909582956, 0.41121569701603483, 0.4090224504470825, 0.4076760837009975], "val_accuracy": [0.17299999296665192, 0.37433332204818726, 0.4116666615009308, 0.45266667008399963, 0.5170000195503235, 0.5699999928474426, 0.640999972820282, 0.6850000023841858, 0.6946666836738586, 0.715666651725769, 0.7120000123977661, 0.718999981880188, 0.7283333539962769, 0.7363333106040955, 0.7326666712760925, 0.7416666746139526, 0.7423333525657654, 0.7450000047683716, 0.7453333139419556, 0.75, 0.7583333253860474, 0.765666663646698, 0.7580000162124634, 0.7603333592414856, 0.7673333287239075, 0.7739999890327454, 0.7713333368301392, 0.7683333158493042, 0.765333354473114, 0.7673333287239075, 0.7766666412353516, 0.7856666445732117, 0.7923333048820496, 0.7956666946411133, 0.7950000166893005, 0.7960000038146973, 0.7973333597183228, 0.7996666431427002, 0.8019999861717224, 0.8046666383743286, 0.8113333582878113, 0.8113333582878113, 0.8140000104904175, 0.8186666369438171, 0.8216666579246521, 0.8243333101272583, 0.8256666660308838, 0.8266666531562805, 0.8296666741371155, 0.8299999833106995, 0.8299999833106995, 0.8246666789054871, 0.8263333439826965, 0.8243333101272583, 0.828000009059906]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 2, 3, 3, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [4, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 0, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [77, 97, 13, 96, 41]], "fitness": -0.6648571491241455, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 6, 6, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(grad)), grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(alpha), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3010755518345296, 2.2977164952730726, 2.295074177833832, 2.2896255140905413, 2.287525826221003, 2.283291907500062, 2.280997879422336, 2.276863573249683, 2.2738676642099342, 2.2713642774115086, 2.2671235690987923, 2.263926667308039, 2.2585743940139507, 2.254765225124397, 2.251292738664451, 2.24854377887158, 2.2451545754758797, 2.239563699695082, 2.2350261230919704, 2.2313914357584546, 2.2266271518694176, 2.2224595754248293, 2.2169932725170995, 2.2127154244722833, 2.2049675773179227, 2.202084044014474, 2.196068073827451, 2.188675652153661, 2.184439260694156, 2.1771831080709165, 2.168902108855393, 2.161528963722085, 2.1548147716731316, 2.1451517959013278, 2.1383270619646466, 2.130540538190016, 2.124203012257582, 2.109535970456092, 2.0996399696051813, 2.0941710377004026, 2.0815638833593275, 2.0697758080952706, 2.0619576562113844, 2.0480652477416568, 2.03787915087206, 2.02424499658215, 2.0162245903536626, 2.001697697454928, 1.994470153565357, 1.9748415666217927, 1.9598461112578027, 1.9480153271046927, 1.9288568671321857, 1.9174797134849106, 1.901810728673843, 1.885484083878791, 1.8686542472882184, 1.8504189187509508, 1.8367366525459567, 1.8220021644241349, 1.8051070111255447, 1.7858226215992117, 1.773785584386408, 1.7454479143147488, 1.737224728754719, 1.7235079884702313, 1.6998571280427912, 1.68010592970787, 1.6643392846033542, 1.6439537501936623, 1.6396252655192547, 1.6173625714144986, 1.5967153499879385, 1.5851832043461718, 1.565741124406325, 1.5582521723844371, 1.5460591257964742, 1.524181433798473, 1.5040910031423593, 1.4909867106836863, 1.4723215756588262, 1.4679176104838711, 1.4509891644917332, 1.4396089524357405, 1.4424539795168765, 1.4182906890227227, 1.4002339084780433, 1.3840565189095284, 1.3743003795270072, 1.3687637922644473, 1.3631439160015826, 1.34133103354858, 1.3392834515068368, 1.3233368192067345, 1.326460764880792, 1.303457599006797, 1.2942707811946867, 1.2962600248301774, 1.2778177959351193, 1.2705963130451354], "accuracy": [0.0940430611371994, 0.10460969805717468, 0.10949676483869553, 0.11913882195949554, 0.12812046706676483, 0.13868708908557892, 0.14595165848731995, 0.16034869849681854, 0.16774533689022064, 0.17382116615772247, 0.18623696267604828, 0.18795403838157654, 0.20459648966789246, 0.21701228618621826, 0.2215031087398529, 0.2339189052581787, 0.2339189052581787, 0.2390701323747635, 0.25822216272354126, 0.26363757252693176, 0.26641130447387695, 0.2735437750816345, 0.28041210770606995, 0.28741249442100525, 0.2977149784564972, 0.30418702960014343, 0.30762118101119995, 0.3160744905471802, 0.3195086419582367, 0.3273015320301056, 0.3287544548511505, 0.34341567754745483, 0.3535860478878021, 0.35464271903038025, 0.35266146063804626, 0.36243560910224915, 0.3593977093696594, 0.381719708442688, 0.38343679904937744, 0.3823801279067993, 0.3825122117996216, 0.39506009221076965, 0.38885220885276794, 0.4061550796031952, 0.40324923396110535, 0.4127592146396637, 0.40047550201416016, 0.410910040140152, 0.4060229957103729, 0.421740859746933, 0.41949543356895447, 0.4237220883369446, 0.43864747881889343, 0.4325716495513916, 0.4345529079437256, 0.4395720660686493, 0.4461762011051178, 0.452119916677475, 0.4488178491592407, 0.4554220139980316, 0.45528993010520935, 0.4617619812488556, 0.459780752658844, 0.4703473746776581, 0.469819039106369, 0.47193238139152527, 0.48289525508880615, 0.4865935742855072, 0.4834235906600952, 0.495839387178421, 0.4905560612678528, 0.4982168674468994, 0.4982168674468994, 0.509840190410614, 0.5031039714813232, 0.5012547969818115, 0.5110289454460144, 0.5175009965896606, 0.5156518220901489, 0.5279355645179749, 0.5233126282691956, 0.5192180871963501, 0.5304450988769531, 0.5386342406272888, 0.5267468094825745, 0.540219247341156, 0.5452384352684021, 0.5481442213058472, 0.5411438345909119, 0.5452384352684021, 0.550521731376648, 0.5576542019844055, 0.5526350736618042, 0.5567296147346497, 0.5562012791633606, 0.559899628162384, 0.5620129704475403, 0.5548804402351379, 0.5655791759490967, 0.568749189376831], "val_loss": [1.9677463259015764, 1.96462767464774, 1.9615163121904646, 1.9584180286952428, 1.9553789411272322, 1.95225191116333, 1.9491605758666992, 1.9460041182381767, 1.942831380026681, 1.9396278517586845, 1.9363218716212682, 1.9330287660871233, 1.9295904295785087, 1.9260536602565221, 1.922424588884626, 1.9187195641653878, 1.9148738043648856, 1.9109108107430595, 1.906832218170166, 1.9026177951267786, 1.8982441084725517, 1.8937337739127023, 1.8890111105782645, 1.8841203962053572, 1.8790024348667689, 1.8736955778939384, 1.8681741441999162, 1.8624353408813477, 1.8564350264413017, 1.850203582218715, 1.843681880405971, 1.8368383816310339, 1.8297625950404577, 1.8222814968654089, 1.8145341191973006, 1.8065730503627233, 1.7983348029000419, 1.7895687648228236, 1.780412197113037, 1.7710911887032645, 1.7613355091639928, 1.7511121204921178, 1.7406120981488908, 1.7296598979404993, 1.7183568818228585, 1.706617730004447, 1.694657325744629, 1.682213408606393, 1.6696182319096156, 1.6563757487705775, 1.642787081854684, 1.6289097581590926, 1.6145359788622176, 1.5998716013772147, 1.5849512645176478, 1.5695978232792445, 1.5539557933807373, 1.5379619598388672, 1.521850892475673, 1.5054913929530553, 1.4890990938459123, 1.4724297182900565, 1.455707345690046, 1.4385996546064104, 1.421696731022426, 1.404939889907837, 1.387857437133789, 1.3706746782575334, 1.3537360259464808, 1.3367597716195243, 1.3202743189675468, 1.3035829407828194, 1.2869177545819963, 1.2706518854413713, 1.254448481968471, 1.2390117985861642, 1.2234721183776855, 1.2082340376717704, 1.193159784589495, 1.1783977576664515, 1.164126225880214, 1.1501768316541399, 1.13661071232387, 1.1233320236206055, 1.1108509472438268, 1.0982109819139754, 1.0859113420758928, 1.0737066268920898, 1.061978476388114, 1.050727163042341, 1.0400197505950928, 1.0294109753199987, 1.019299132483346, 1.0092079298836845, 0.9997350147792271, 0.9901571273803711, 0.9810940197535923, 0.972212655203683, 0.963446923664638, 0.9549731867653983], "val_accuracy": [0.05833333358168602, 0.08100000023841858, 0.11500000208616257, 0.14533333480358124, 0.1756666600704193, 0.2083333283662796, 0.23933333158493042, 0.2669999897480011, 0.28866666555404663, 0.3100000023841858, 0.3319999873638153, 0.3499999940395355, 0.3619999885559082, 0.375, 0.38333332538604736, 0.38966667652130127, 0.39633333683013916, 0.4009999930858612, 0.4076666533946991, 0.41200000047683716, 0.4169999957084656, 0.4233333468437195, 0.42933332920074463, 0.4333333373069763, 0.43966665863990784, 0.4429999887943268, 0.44699999690055847, 0.4493333399295807, 0.4566666781902313, 0.46000000834465027, 0.46566668152809143, 0.4690000116825104, 0.4753333330154419, 0.47833332419395447, 0.4819999933242798, 0.4846666753292084, 0.4896666705608368, 0.49166667461395264, 0.4970000088214874, 0.4986666738986969, 0.503000020980835, 0.5073333382606506, 0.5120000243186951, 0.5139999985694885, 0.5210000276565552, 0.5253333449363708, 0.527999997138977, 0.531000018119812, 0.5360000133514404, 0.5370000004768372, 0.5406666398048401, 0.5413333177566528, 0.5440000295639038, 0.54666668176651, 0.5516666769981384, 0.5526666641235352, 0.5536666512489319, 0.5573333501815796, 0.5573333501815796, 0.5596666932106018, 0.562333345413208, 0.5649999976158142, 0.5676666498184204, 0.5696666836738586, 0.5730000138282776, 0.5776666402816772, 0.5806666612625122, 0.5830000042915344, 0.5853333473205566, 0.5870000123977661, 0.5910000205039978, 0.5929999947547913, 0.5953333377838135, 0.6003333330154419, 0.6036666631698608, 0.6066666841506958, 0.6113333106040955, 0.6119999885559082, 0.6156666874885559, 0.6203333139419556, 0.6223333477973938, 0.625, 0.6299999952316284, 0.6326666474342346, 0.6370000243186951, 0.6389999985694885, 0.6426666378974915, 0.6453333497047424, 0.6466666460037231, 0.6513333320617676, 0.656333327293396, 0.6589999794960022, 0.6616666913032532, 0.6629999876022339, 0.6646666526794434, 0.6673333048820496, 0.668666660785675, 0.6700000166893005, 0.6713333129882812, 0.67166668176651]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.49885714054107666, "mapping_values": [1, 4, 4, 3, 1, 1, 12, 12, 9, 3, 2, 6, 5, 3, 2, 1, 7, 3, 4, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2366539158794025, 2.710001259715471, 2.2697441983200917, 2.0881209407169523, 2.506150032409257, 2.672144143147759, 2.3047789730935633, 2.30300877929096], "accuracy": [0.2382776439189911, 0.12032756209373474, 0.1694624274969101, 0.2755250334739685, 0.24963676929473877, 0.1282525360584259, 0.09945846349000931, 0.1014397069811821], "val_loss": [1.6529535566057478, 1.9772657666887556, 1.4009959697723389, 1.8927963801792689, 1.9178405489240373, 1.9757622991289412, 1.9740709577287947, 1.9738516126360213], "val_accuracy": [0.2486666738986969, 0.10366666316986084, 0.47600001096725464, 0.30300000309944153, 0.2630000114440918, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [59, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 3, 9, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [93, 97, 13, 96, 41]], "fitness": -0.4002857208251953, "mapping_values": [1, 4, 4, 3, 1, 1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.8249299901272753, 2.4777451234801635, 2.304898010001222, 2.3031771964936163, 2.303283304601943, 2.3034314384644357, 2.303084284889857, 2.3024710136366213, 2.297282306730094, 2.223917741943045, 2.2990035636943675, 4.126939428071493, 2.2376950268322813, 2.4859770983437883, 2.304303164243415, 2.3034906420394683, 2.3033054763646317, 2.3031819171562895], "accuracy": [0.15889579057693481, 0.10342095047235489, 0.09298639744520187, 0.09549596905708313, 0.09998679161071777, 0.09351472556591034, 0.09655263274908066, 0.09840179979801178, 0.12323339283466339, 0.1830669641494751, 0.11478008329868317, 0.14212125539779663, 0.18412363529205322, 0.14898955821990967, 0.09998679161071777, 0.09549596905708313, 0.09655263274908066, 0.09708096832036972], "val_loss": [2.706841536930629, 1.9777605874197823, 1.9741062436785017, 1.9738127844674247, 1.9739339692252023, 1.9737080846514021, 1.9735230037144251, 1.9725465093340193, 1.9383999279567175, 1.9496194294520788, 1.9694198880876814, 1.9940839494977678, 1.588327373777117, 1.9768704686846053, 1.9738375799996513, 1.9738798141479492, 1.973803997039795, 1.9738638060433524], "val_accuracy": [0.10233332961797714, 0.09666666388511658, 0.10300000011920929, 0.10066666454076767, 0.10199999809265137, 0.10199999809265137, 0.09566666930913925, 0.13899999856948853, 0.18666666746139526, 0.1509999930858612, 0.10866666585206985, 0.10233332961797714, 0.3513333201408386, 0.10066666454076767, 0.10366666316986084, 0.09799999743700027, 0.10199999809265137, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 1, 0, 3, 3, 8, 5, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 8, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 4, 4, 4, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [68, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 2, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, grad), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [63.779611423519135, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2156914472579956, 0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1040708.8928571428, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 6, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 0, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 0, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 2, 4, 4, 4, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), alpha))))))))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 8, 6, 1, 4, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [41, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 12, 12, 8, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, grad))), grad)), grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [0, 0], [64, 91], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 6, 5, 3, 2, 2, 7, 3, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5503717586112735, 10447462989504.287, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.22044643759727478, 0.12151630967855453, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0354354040963307, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.014000000432133675, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 5, 2, 6, 4, 3, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 7, 6, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.add(beta, grad)), tf.math.add(beta, grad)), grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07977809756994247, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [2, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 5, 5, 4, 1, 1, 6, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07977809756994247, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 1, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025096934059937, 2.3025903962213037, 2.303359469906403, 2.3013412865507856, 2.30232299276394, 2.301718129867324], "accuracy": [0.08889182657003403, 0.09219389408826828, 0.09153348207473755, 0.0878351628780365, 0.09100515395402908, 0.09285431355237961], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]