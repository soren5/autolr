[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 1, 2, 6, 2, 8, 1, 3, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 5, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [1, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8288571238517761, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.100204945870237, 1.7077946089451197, 1.2933989954252978, 1.0399986794753522, 0.8379584938354654, 0.7878260657047599, 0.6945371635129282, 0.7041750989097567, 0.6582671989618023, 0.6344045499973703, 0.5957020018488393, 0.5816684444866097, 0.581739185603067, 0.5577291581199595, 0.5516827724408543, 0.5172986757753705, 0.5360479852810291, 0.5025644642038274, 0.5132677896998074, 0.48824287145412704, 0.49223017282788906, 0.46152862052655474, 0.48563200777012516, 0.4536780062337136, 0.4463102239478203, 0.4621920827404698, 0.4415724440226229, 0.4244665216067527, 0.41200410676134763, 0.4189834775799978, 0.3962402057693367, 0.38883478770465774, 0.36877899148822885, 0.38550546450023526, 0.4008879595586353, 0.3812211190334731, 0.37114107182091727, 0.35002344445608485, 0.3619842781421924, 0.34398637280377886, 0.3888407386667173, 0.3353491594030589, 0.345797915641957, 0.3196876442679608, 0.3378946755217712, 0.32241402144649983], "accuracy": [0.2895258367061615, 0.4519878625869751, 0.5473517179489136, 0.6260731816291809, 0.6925109028816223, 0.7086250185966492, 0.7293620109558105, 0.7391361594200134, 0.752212405204773, 0.7557786107063293, 0.7732135653495789, 0.7854973077774048, 0.7817989587783813, 0.7906485199928284, 0.7902522683143616, 0.8043851256370544, 0.7964601516723633, 0.8165367841720581, 0.809140145778656, 0.8189142942428589, 0.8132346868515015, 0.8257825970649719, 0.817989706993103, 0.8272355198860168, 0.8378021121025085, 0.8284242749214172, 0.8337075710296631, 0.8404437899589539, 0.8462554216384888, 0.8426892161369324, 0.854708731174469, 0.8539162874221802, 0.8628978729248047, 0.8569541573524475, 0.8500858545303345, 0.8557654023170471, 0.8625016212463379, 0.8751816153526306, 0.8632941246032715, 0.8705587387084961, 0.8494254350662231, 0.8762382864952087, 0.8679170608520508, 0.8782195448875427, 0.8726720213890076, 0.8791441321372986], "val_loss": [1.7608870097569056, 1.1524393558502197, 1.0241567407335554, 0.6899951526096889, 0.7076528753553119, 0.5702695505959647, 0.6206036976405552, 0.5406102282660348, 0.48784429686410086, 0.4738068240029471, 0.48000710351126535, 0.45997049127306255, 0.45362842082977295, 0.43253942898341585, 0.4258851834705898, 0.42805235726492746, 0.42654991149902344, 0.4022652506828308, 0.4300628049033029, 0.41126290389469694, 0.444959214755467, 0.48682083402361187, 0.3845876455307007, 0.3701389602252415, 0.40389748982020784, 0.35410376105989727, 0.3883382592882429, 0.3619105560438974, 0.46542067187173025, 0.3799503871372768, 0.35696772166660856, 0.33776781388691496, 0.3565104178019932, 0.35263895988464355, 0.36611539125442505, 0.3415586863245283, 0.33174589702061247, 0.33886075019836426, 0.3324375408036368, 0.4276498130389622, 0.3278976934296744, 0.3204829522541591, 0.3687371611595154, 0.32762138332639423, 0.33923792839050293, 0.34772610664367676], "val_accuracy": [0.41733333468437195, 0.543666660785675, 0.5910000205039978, 0.7083333134651184, 0.7026666402816772, 0.7316666841506958, 0.7043333053588867, 0.7546666860580444, 0.7929999828338623, 0.7940000295639038, 0.7693333625793457, 0.8080000281333923, 0.800000011920929, 0.8096666932106018, 0.8103333115577698, 0.812666654586792, 0.8103333115577698, 0.8253333568572998, 0.8176666498184204, 0.8173333406448364, 0.7940000295639038, 0.8003333210945129, 0.8339999914169312, 0.8460000157356262, 0.8240000009536743, 0.8523333072662354, 0.8376666903495789, 0.8460000157356262, 0.7960000038146973, 0.8396666646003723, 0.8533333539962769, 0.8586666584014893, 0.8483333587646484, 0.8526666760444641, 0.8416666388511658, 0.8556666374206543, 0.8633333444595337, 0.8550000190734863, 0.8646666407585144, 0.8213333487510681, 0.8679999709129333, 0.8640000224113464, 0.847000002861023, 0.8636666536331177, 0.8566666841506958, 0.859666645526886]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [1, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.824571430683136, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2508499158482116, 2.2257041812746077, 2.2105587732365195, 2.000316997891357, 1.7151323247500667, 1.0227395839395776, 1.1921440935437202, 0.8831933005107093, 0.8081218630268338, 0.7681257181462988, 0.7290407199239876, 0.6964298711634268, 0.6763410335203691, 0.653568288141852, 0.6451808022485984, 0.6114529897634143, 0.6020989737585, 0.5796346618215626, 0.5782683572560064, 0.5495308671156964, 0.5463187090315446, 0.5140546613586042, 0.517070227011934, 0.5063842805290676, 0.4953064961463957, 0.4852670781710963, 0.4902537125976504, 0.46948538403532464, 0.47485350610290017, 0.46442470800812063, 0.4402533624118991, 0.4402962039490386, 0.44303736781888176, 0.42610965067086015, 0.4244478426242879, 0.43013222563803677, 0.41369201504496095], "accuracy": [0.25822216272354126, 0.1888786107301712, 0.2378813922405243, 0.37088891863822937, 0.4010038375854492, 0.6391493678092957, 0.6045436263084412, 0.6816800832748413, 0.7061154246330261, 0.7162858247756958, 0.7343811988830566, 0.7403249144554138, 0.7537974119186401, 0.757099449634552, 0.7569673657417297, 0.7721568942070007, 0.7761194109916687, 0.7861577272415161, 0.7858935594558716, 0.789459764957428, 0.7947431206703186, 0.8013472557067871, 0.8082155585289001, 0.8104609847068787, 0.8164047002792358, 0.8182538747787476, 0.8149517774581909, 0.8260467648506165, 0.821820080280304, 0.8298771381378174, 0.834632158279419, 0.8314621448516846, 0.8341038227081299, 0.837537944316864, 0.8376700282096863, 0.8322546482086182, 0.8436138033866882], "val_loss": [1.7625117983136858, 1.8977810314723425, 1.7570395469665527, 1.838474954877581, 0.7471081188746861, 0.6475751570292881, 0.6943190097808838, 0.5836842911584037, 0.5957850217819214, 0.5740201813834054, 0.5254920550755092, 0.5072096245629447, 0.4986808810915266, 0.5083569288253784, 0.47213940961020334, 0.4583731378827776, 0.47398459911346436, 0.45708794253213064, 0.4515421560832432, 0.43689186232430594, 0.425467278276171, 0.452694160597665, 0.42101304871695383, 0.41037483726228985, 0.42397092069898334, 0.40936045135770527, 0.4165394476481846, 0.41541082518441336, 0.42211891072137014, 0.3836445723261152, 0.3956552233014788, 0.37458875349589754, 0.37053634439195904, 0.37932619878223967, 0.37497451475688387, 0.3836861678532192, 0.3769379087856838], "val_accuracy": [0.19633333384990692, 0.28833332657814026, 0.29866665601730347, 0.2029999941587448, 0.684333324432373, 0.734333336353302, 0.7023333311080933, 0.7516666650772095, 0.7526666522026062, 0.7590000033378601, 0.7753333449363708, 0.7770000100135803, 0.781000018119812, 0.7773333191871643, 0.8026666641235352, 0.8119999766349792, 0.7940000295639038, 0.7986666560173035, 0.8090000152587891, 0.8149999976158142, 0.8083333373069763, 0.8086666464805603, 0.8190000057220459, 0.8256666660308838, 0.8206666707992554, 0.8173333406448364, 0.8266666531562805, 0.8270000219345093, 0.8209999799728394, 0.8420000076293945, 0.831333339214325, 0.847000002861023, 0.8456666469573975, 0.840666651725769, 0.8443333506584167, 0.8349999785423279, 0.8333333134651184]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [5, 0], [69, 2], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [90, 23, 13, 96, 41]], "fitness": -0.728857159614563, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.300362541344597, 2.293520566384554, 2.2859724989782597, 2.280577276518568, 2.2730282719077657, 2.2656582217442596, 2.260948780898987, 2.2529759198257935, 2.244608855754503, 2.2365261318031444, 2.2274269090273817, 2.219571631078502, 2.2097816867221223, 2.199930177813807, 2.1862917101346993, 2.1732547560293662, 2.1630703569356053, 2.1486519158020343, 2.1303715815775273, 2.114631127719126, 2.094238384162682, 2.074433980254512, 2.053426790609021, 2.0275271875731398, 2.0054317795762673, 1.9820291622990962, 1.9499411734418626, 1.9258379723653818, 1.8901843193137589, 1.8647383150092647, 1.8339472265133943, 1.7993058038346756, 1.7707825583898946, 1.7334184900581593, 1.7092503412697908, 1.6663106817689632, 1.6357999284584541, 1.6046986582729212, 1.5748439807587014, 1.5481628955016755, 1.5165705812164758, 1.4880483188743778, 1.4537937172084925, 1.433185215985786, 1.4098831426670617, 1.3889546556054577, 1.372174561614169, 1.3468220130154296, 1.3261604966614713, 1.3125406651212839, 1.2870161959744244, 1.2711843795402253, 1.2632970064071507, 1.251777282889808, 1.2293976102097632, 1.2126651374718391, 1.197011277046123, 1.1976984025716877, 1.1797827857124208, 1.1639326823433203, 1.149424883636265, 1.1387314105377127, 1.140957884926444, 1.1184192872428467, 1.1227598680937847, 1.1078445809219082, 1.0976411794800531, 1.084052149519834, 1.0858909684621962, 1.065302908995274, 1.057599187763281, 1.0635417488036674, 1.045381441800948, 1.0480524996850846, 1.0349301496485457, 1.0261831007078104, 1.0185645496714557, 1.0129696240892436, 1.0058413332857397, 1.0064380110184026, 0.9896351951161522, 0.9913183060603733, 0.9694946492982657, 0.9749789175623838, 0.966795500306374, 0.9617897495617562, 0.9603583502054623, 0.9554848883366462, 0.945708288996526, 0.9425695416571804, 0.940066311880897, 0.9405466705863785, 0.9374958021907507, 0.9267513266313251, 0.9299779396094289, 0.9271273184068262, 0.9171814348609173, 0.9194688389818068, 0.9106317693216296, 0.9075289453812688], "accuracy": [0.1002509593963623, 0.11715757846832275, 0.13168670237064362, 0.14753665030002594, 0.1702549159526825, 0.18531237542629242, 0.1974640041589737, 0.21516312658786774, 0.23325848579406738, 0.25861841440200806, 0.26799631118774414, 0.2771100103855133, 0.2925637364387512, 0.29745081067085266, 0.31924447417259216, 0.3357548415660858, 0.33483028411865234, 0.34645357728004456, 0.36045435070991516, 0.3679831027984619, 0.38026681542396545, 0.38304054737091064, 0.39941883087158203, 0.40787214040756226, 0.413419634103775, 0.41725003719329834, 0.4319112300872803, 0.43323206901550293, 0.4423457980155945, 0.4519878625869751, 0.44828951358795166, 0.46110156178474426, 0.45727115869522095, 0.4703473746776581, 0.4752344489097595, 0.48632940649986267, 0.4893673360347748, 0.5032360553741455, 0.5038964748382568, 0.5083872675895691, 0.5116893649101257, 0.5238409638404846, 0.5292563438415527, 0.5322942733764648, 0.5378417372703552, 0.5443138480186462, 0.5399550795555115, 0.5499933958053589, 0.5555408596992493, 0.5585787892341614, 0.5661075115203857, 0.5711266398429871, 0.5703341960906982, 0.5720512270927429, 0.5778629183769226, 0.5875049233436584, 0.5857878923416138, 0.5822216272354126, 0.59225994348526, 0.5979394912719727, 0.5988640785217285, 0.6037511825561523, 0.6017699241638184, 0.6061286330223083, 0.6066569685935974, 0.6135252714157104, 0.6152423620223999, 0.6217144131660461, 0.6168273687362671, 0.625148594379425, 0.6301677227020264, 0.6276581883430481, 0.631488561630249, 0.6292431354522705, 0.6396777033805847, 0.6404702067375183, 0.6472064256668091, 0.6408664584159851, 0.6468101739883423, 0.641791045665741, 0.6523576974868774, 0.6452252268791199, 0.6604147553443909, 0.6540747880935669, 0.6559239029884338, 0.6510368585586548, 0.6600185036659241, 0.6543388962745667, 0.6634526252746582, 0.6625280380249023, 0.6612072587013245, 0.6695284843444824, 0.6643772125244141, 0.6674151420593262, 0.6655659675598145, 0.6675472259521484, 0.6674151420593262, 0.674679696559906, 0.6701889038085938, 0.6749438643455505], "val_loss": [1.9648768561226981, 1.9589181627546037, 1.9528723444257463, 1.9468608583722795, 1.9406349318368095, 1.9342914308820451, 1.927684715815953, 1.9207361085074288, 1.9134253093174525, 1.905627659388951, 1.8972535814557756, 1.8883424486432756, 1.8787479400634766, 1.8684143338884627, 1.8570267132350378, 1.84475496837071, 1.8316608837672643, 1.817582402910505, 1.8022193227495467, 1.7855266162327357, 1.76747008732387, 1.7480687413896834, 1.7272416523524694, 1.704770905630929, 1.680978775024414, 1.6559184959956579, 1.6290173871176583, 1.60117472921099, 1.5715318747929163, 1.541255269731794, 1.5103114673069544, 1.478351695196969, 1.4460952622549874, 1.4133338587624686, 1.3810973848615373, 1.348275559289115, 1.3158458641597204, 1.28365843636649, 1.2522690977369035, 1.2221824782235282, 1.1931071962629045, 1.1654376983642578, 1.1381095818110876, 1.1126793452671595, 1.0885418483189173, 1.0656372479030065, 1.0442471163613456, 1.0237178802490234, 1.0046092442103796, 0.9864049979618618, 0.9692775521959577, 0.9529162815638951, 0.9379187652042934, 0.9237604141235352, 0.9098927974700928, 0.8967649936676025, 0.8841198171888079, 0.8727641786847796, 0.8617355312619891, 0.8511527265821185, 0.8407060248511178, 0.8311433621815273, 0.8222755023411342, 0.8134979861123222, 0.8052417039871216, 0.7977770907538277, 0.7902529580252511, 0.7828496694564819, 0.7764921699251447, 0.7694855587823051, 0.7629830326352801, 0.7569773367473057, 0.7511623927525112, 0.745719347681318, 0.7401282617024013, 0.7348848070417132, 0.7298891374043056, 0.7247038398470197, 0.7199735811778477, 0.7156120027814593, 0.7113579681941441, 0.7071580375943866, 0.7024575131280082, 0.6981084176472255, 0.6939907414572579, 0.6899384430476597, 0.6861761978694371, 0.6827495098114014, 0.67939407484872, 0.6767889942441668, 0.6732240234102521, 0.670344625200544, 0.6673652444566999, 0.664266654423305, 0.6612897941044399, 0.6594913176127842, 0.6564354215349469, 0.6538022926875523, 0.6508041109357562, 0.6491286924907139], "val_accuracy": [0.08033332973718643, 0.13899999856948853, 0.19900000095367432, 0.25966668128967285, 0.296999990940094, 0.3373333215713501, 0.36500000953674316, 0.38199999928474426, 0.3943333327770233, 0.40533334016799927, 0.41466665267944336, 0.42533332109451294, 0.4346666634082794, 0.44466665387153625, 0.4506666660308838, 0.4573333263397217, 0.4676666557788849, 0.476666659116745, 0.484333336353302, 0.492333322763443, 0.49799999594688416, 0.5103333592414856, 0.518666684627533, 0.528333306312561, 0.5333333611488342, 0.5386666655540466, 0.543666660785675, 0.5496666431427002, 0.5513333082199097, 0.5540000200271606, 0.5586666464805603, 0.5630000233650208, 0.5680000185966492, 0.5740000009536743, 0.5799999833106995, 0.5860000252723694, 0.5916666388511658, 0.597000002861023, 0.6019999980926514, 0.6079999804496765, 0.6129999756813049, 0.6213333606719971, 0.6306666731834412, 0.6349999904632568, 0.640999972820282, 0.6476666927337646, 0.6549999713897705, 0.6600000262260437, 0.6656666398048401, 0.668666660785675, 0.6713333129882812, 0.6736666560173035, 0.675000011920929, 0.6763333082199097, 0.675000011920929, 0.6776666641235352, 0.6803333163261414, 0.6816666722297668, 0.6863333582878113, 0.6880000233650208, 0.6909999847412109, 0.6923333406448364, 0.6936666369438171, 0.6966666579246521, 0.6973333358764648, 0.6983333230018616, 0.699999988079071, 0.7009999752044678, 0.7036666870117188, 0.7043333053588867, 0.7053333520889282, 0.7076666951179504, 0.7080000042915344, 0.7080000042915344, 0.7093333601951599, 0.7099999785423279, 0.7103333473205566, 0.7113333344459534, 0.7139999866485596, 0.7166666388511658, 0.7163333296775818, 0.7196666598320007, 0.7210000157356262, 0.7223333120346069, 0.722000002861023, 0.7243333458900452, 0.7250000238418579, 0.7269999980926514, 0.7266666889190674, 0.7263333201408386, 0.7293333411216736, 0.7286666631698608, 0.7289999723434448, 0.7296666502952576, 0.731333315372467, 0.7316666841506958, 0.7326666712760925, 0.7350000143051147, 0.7356666922569275, 0.7350000143051147]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [2, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [81, 23, 13, 96, 41]], "fitness": -0.7285714149475098, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3003692344793505, 2.29354825386392, 2.286019098300503, 2.280638180766611, 2.2731050469730163, 2.2657471562515177, 2.2610490560815037, 2.253089420201205, 2.2447319921957836, 2.2366588132697296, 2.227572861443327, 2.2197220908054005, 2.209938745394107, 2.200088681829541, 2.1864457420464505, 2.1733927024810575, 2.1631831478496286, 2.1487304742357374, 2.1303959918799986, 2.1145831707241576, 2.0941092424136993, 2.0741768326064647, 2.0530217199624095, 2.026952005884415, 2.0046592085289996, 1.98104487108186, 1.9486444708126693, 1.924278421235705, 1.888313074043288, 1.8625258349030798, 1.8314889416387918, 1.7964884602020539, 1.7676577666148754, 1.7298998398913714, 1.7055248148043582, 1.662215600160481, 1.6315271084917347, 1.600182971304371, 1.5700913307106552, 1.5433438156794532, 1.5117549357428732, 1.483170072148426, 1.4487598744428798, 1.4283087574621596, 1.4049950388554553, 1.3842897659216606, 1.3675515485587704, 1.3421366785842004, 1.3217518713023637, 1.3081476139653834, 1.2828131273453813, 1.267108034495554, 1.2593835761534178, 1.2479198841197758, 1.2256070480150176, 1.208955684673076, 1.1935807464302586, 1.194255174961954, 1.1763865686505304, 1.1607144530801063, 1.1463106751300245, 1.1357104101232676, 1.1380068329835156, 1.1156036786242027, 1.1198263928528396, 1.1049304974156284, 1.0949510112650847, 1.0812795572686489, 1.0833183698618905, 1.0626130838908099, 1.0550581381195303, 1.0611499938919497, 1.043076904489852, 1.0456169003178146, 1.0327520407957722, 1.0239432949226892, 1.016384322110137, 1.010944252512663, 1.0037771778461908, 1.0044260054468526, 0.987775377766835, 0.9895146435529895, 0.9675263617772782, 0.973179966585275, 0.9649710265589648, 0.9602262548892694, 0.9586840089223073, 0.9538517816113034, 0.9443472489909474, 0.9411545792165733, 0.9386008485291597, 0.9392108587289074, 0.9359900905644779, 0.9254370637384656, 0.9286021495917218, 0.9257735797537316, 0.9158454658947034, 0.9181725942321725, 0.9094496007923595, 0.9061777163584785], "accuracy": [0.1002509593963623, 0.11715757846832275, 0.13168670237064362, 0.14740456640720367, 0.1702549159526825, 0.18518029153347015, 0.19693566858768463, 0.2148989588022232, 0.23286223411560059, 0.2583542466163635, 0.2673358917236328, 0.2769779562950134, 0.2919033169746399, 0.2969224750995636, 0.31937655806541443, 0.3353586196899414, 0.3343019485473633, 0.3455289900302887, 0.35966187715530396, 0.3667943477630615, 0.37987056374549866, 0.3825122117996216, 0.39862632751464844, 0.4081363081932068, 0.41368380188941956, 0.416589617729187, 0.4321753978729248, 0.43283581733703613, 0.44208163022994995, 0.45291242003440857, 0.4476291239261627, 0.46110156178474426, 0.45766741037368774, 0.4710077941417694, 0.4757627844810486, 0.4877823293209076, 0.49148064851760864, 0.502971887588501, 0.5041606426239014, 0.5095760226249695, 0.5126138925552368, 0.5246334671974182, 0.5305771827697754, 0.5341434478759766, 0.5394267439842224, 0.5445780158042908, 0.5407475829124451, 0.5495971441268921, 0.5558050274848938, 0.5581825375556946, 0.5663716793060303, 0.572579562664032, 0.570202112197876, 0.572579562664032, 0.5779950022697449, 0.5880332589149475, 0.5864483118057251, 0.583938717842102, 0.5923920273780823, 0.5987319946289062, 0.5999207496643066, 0.6040153503417969, 0.603090763092041, 0.6059965491294861, 0.6081098914146423, 0.6139215230941772, 0.6152423620223999, 0.6227710843086243, 0.6174877882003784, 0.6264694333076477, 0.6312243938446045, 0.628582775592804, 0.6316206455230713, 0.6297714710235596, 0.6392814517021179, 0.6409985423088074, 0.6479989290237427, 0.64231938123703, 0.6469422578811646, 0.6432439684867859, 0.6530181169509888, 0.6446968913078308, 0.6608110070228577, 0.6544709801673889, 0.6572447419166565, 0.651168942451477, 0.6608110070228577, 0.655527651309967, 0.6642451286315918, 0.6622639298439026, 0.6616035103797913, 0.6695284843444824, 0.6653017997741699, 0.6679434776306152, 0.6659622192382812, 0.6672830581665039, 0.6684718132019043, 0.6744155287742615, 0.6711134314537048, 0.6757363677024841], "val_loss": [1.9648942947387695, 1.958953857421875, 1.9529218673706055, 1.9469244139535087, 1.9407101358686174, 1.934377942766462, 1.9277819905962263, 1.9208437374659948, 1.9135419981820243, 1.9057512283325195, 1.8973821912493025, 1.8884754862104143, 1.8788821356637138, 1.8685449872698103, 1.857142720903669, 1.8448431832449776, 1.831714698246547, 1.8175907135009766, 1.8021586281912667, 1.7853795460292272, 1.7672076906476701, 1.7476643834795271, 1.726677690233503, 1.7040021078927177, 1.6799814360482352, 1.6546554224831718, 1.627453122820173, 1.5992867265428816, 1.5692895480564661, 1.538651738848005, 1.5073528630392892, 1.4750056947980608, 1.442359447479248, 1.4092109543936593, 1.3766168185642786, 1.3434608323233468, 1.3107146876198905, 1.2782477991921561, 1.2466347898755754, 1.2163961274283273, 1.1872030326298304, 1.159482513155256, 1.1321046011788505, 1.1066962310246058, 1.0826234136308943, 1.0597867284502303, 1.0385187012808663, 1.0181029524121965, 0.9991484369550433, 0.9810876165117536, 0.9640986578805106, 0.9478952884674072, 0.9331042766571045, 0.9191115243094308, 0.905381577355521, 0.892413888658796, 0.8799338000161308, 0.8687404564448765, 0.8578464303697858, 0.8473752396447318, 0.8370354005268642, 0.8276173557553973, 0.8188569375446865, 0.8101973022733416, 0.8020661728722709, 0.7947089501789638, 0.7872932808739799, 0.7799828393118722, 0.7737213202885219, 0.7668065002986363, 0.7604035479681832, 0.7544779777526855, 0.7487313747406006, 0.743387086050851, 0.7378589085170201, 0.7327213627951485, 0.7277983597346714, 0.722674914768764, 0.7180204561778477, 0.7137336390359061, 0.7095526116234916, 0.7054318189620972, 0.7007910524095807, 0.6964828797749111, 0.6924088171550206, 0.6884274142129081, 0.6847398451396397, 0.6813707862581525, 0.6780552353177752, 0.6755172865731376, 0.6720059428896222, 0.6691633973802839, 0.6662329435348511, 0.6631541763033185, 0.6601877723421369, 0.6584022215434483, 0.6553611755371094, 0.6527482441493443, 0.6497760500226702, 0.6481496606554303], "val_accuracy": [0.07999999821186066, 0.13866665959358215, 0.19833333790302277, 0.2590000033378601, 0.29633334279060364, 0.3370000123977661, 0.36533331871032715, 0.3813333213329315, 0.39399999380111694, 0.40533334016799927, 0.41499999165534973, 0.42500001192092896, 0.4339999854564667, 0.44433334469795227, 0.4493333399295807, 0.4569999873638153, 0.4676666557788849, 0.47699999809265137, 0.48399999737739563, 0.492000013589859, 0.4986666738986969, 0.5113333463668823, 0.5196666717529297, 0.528333306312561, 0.5336666703224182, 0.5396666526794434, 0.5450000166893005, 0.5490000247955322, 0.5519999861717224, 0.5543333292007446, 0.559333324432373, 0.5653333067893982, 0.5686666369438171, 0.574999988079071, 0.5826666951179504, 0.5889999866485596, 0.5926666855812073, 0.6006666421890259, 0.6023333072662354, 0.6100000143051147, 0.6150000095367432, 0.625333309173584, 0.6309999823570251, 0.637666642665863, 0.6423333287239075, 0.6516666412353516, 0.656000018119812, 0.6626666784286499, 0.6669999957084656, 0.6700000166893005, 0.67166668176651, 0.675000011920929, 0.6740000247955322, 0.6759999990463257, 0.6769999861717224, 0.6790000200271606, 0.6806666851043701, 0.6836666464805603, 0.687666654586792, 0.6903333067893982, 0.6919999718666077, 0.6926666498184204, 0.6946666836738586, 0.6970000267028809, 0.6980000138282776, 0.6990000009536743, 0.699999988079071, 0.7026666402816772, 0.7049999833106995, 0.7053333520889282, 0.7049999833106995, 0.7073333263397217, 0.7086666822433472, 0.7083333134651184, 0.7083333134651184, 0.7103333473205566, 0.7106666564941406, 0.7123333215713501, 0.7146666646003723, 0.7163333296775818, 0.7176666855812073, 0.7206666469573975, 0.721666693687439, 0.7226666808128357, 0.7229999899864197, 0.7256666421890259, 0.7263333201408386, 0.7266666889190674, 0.7269999980926514, 0.7263333201408386, 0.7289999723434448, 0.7286666631698608, 0.7286666631698608, 0.7289999723434448, 0.7316666841506958, 0.7319999933242798, 0.7333333492279053, 0.7353333234786987, 0.7363333106040955, 0.7356666922569275]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7285714149475098, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3003692344793505, 2.29354825386392, 2.286019098300503, 2.280638180766611, 2.273105078464045, 2.265747174232895, 2.2610490560815037, 2.2530894066915534, 2.244731897722697, 2.236658876251787, 2.2275730503894997, 2.219722378696386, 2.2099393031947003, 2.2000890912129156, 2.186446731683522, 2.173393435718172, 2.1631843309045986, 2.1487317293106902, 2.130397894662432, 2.1145855009658163, 2.094112247287668, 2.074180593170652, 2.0530262095754046, 2.026956279437461, 2.004664165705045, 1.9810504064646852, 1.9486518238261863, 1.9242855084806842, 1.8883203705933902, 1.862532789240172, 1.8314961818199527, 1.7964965460275568, 1.7676655875693348, 1.7299098441975858, 1.7055326892778213, 1.6622269001178391, 1.6315386472928006, 1.600194871874376, 1.570102657687316, 1.5433551335237157, 1.5117668749366249, 1.4831849868192712, 1.4487726456296128, 1.4283217917092015, 1.4050087410272183, 1.3843030833990158, 1.3675640742414428, 1.342150746949392, 1.3217642174546809, 1.308153866603626, 1.2828173781146683, 1.2671161678882559, 1.259390266060341, 1.247924694405917, 1.2256146854555068, 1.2089629630056182, 1.1935859889307703, 1.1942644153430462, 1.1763938112565004, 1.1607199933597865, 1.1463151138377716, 1.1357182124822744, 1.138013526685108, 1.115611135810043, 1.1198304889696842, 1.1049370009743888, 1.094956859416808, 1.08128413721366, 1.0833200563481928, 1.0626135255209979, 1.0550587118545842, 1.0611548149322774, 1.0430728829595093, 1.045620223755031, 1.0327482179738212, 1.0239359776357444, 1.0163828427875676, 1.0109387725304304, 1.0037806270113396, 1.004421736696188, 0.9877749537558776, 0.9895166337387736, 0.9675298900872552, 0.9731772109942902, 0.9649629949846319, 0.960225015583449, 0.9586840238333095, 0.9538488748318893, 0.9443487731488689, 0.9411498114118297, 0.9386033919257195, 0.9392114612861253, 0.9359899314954186, 0.9254340837817733, 0.9285875101839594, 0.9257702500498006, 0.9158395777808646, 0.9181704798851346, 0.9094444348937752, 0.906179552742078], "accuracy": [0.1002509593963623, 0.11715757846832275, 0.13168670237064362, 0.14740456640720367, 0.1702549159526825, 0.18531237542629242, 0.19693566858768463, 0.2148989588022232, 0.23286223411560059, 0.2583542466163635, 0.26720380783081055, 0.2769779562950134, 0.2919033169746399, 0.2969224750995636, 0.3195086419582367, 0.3353586196899414, 0.3343019485473633, 0.3455289900302887, 0.35966187715530396, 0.3669264316558838, 0.37987056374549866, 0.3825122117996216, 0.39862632751464844, 0.4081363081932068, 0.4138158857822418, 0.416589617729187, 0.4321753978729248, 0.4329679012298584, 0.44208163022994995, 0.45291242003440857, 0.4476291239261627, 0.460969477891922, 0.45766741037368774, 0.4710077941417694, 0.4757627844810486, 0.4876502454280853, 0.49148064851760864, 0.5031039714813232, 0.5041606426239014, 0.5095760226249695, 0.5126138925552368, 0.5246334671974182, 0.5307092666625977, 0.5340113639831543, 0.5394267439842224, 0.5445780158042908, 0.5406154990196228, 0.5495971441268921, 0.5558050274848938, 0.5583146214485168, 0.5665037631988525, 0.5728437304496765, 0.570202112197876, 0.572579562664032, 0.5781270861625671, 0.5881653428077698, 0.5864483118057251, 0.5838066339492798, 0.5926561951637268, 0.5987319946289062, 0.5999207496643066, 0.6040153503417969, 0.6029586791992188, 0.6059965491294861, 0.6078457236289978, 0.6139215230941772, 0.6153744459152222, 0.6229031682014465, 0.6174877882003784, 0.6264694333076477, 0.6312243938446045, 0.6284506916999817, 0.631488561630249, 0.6300356388092041, 0.6391493678092957, 0.6409985423088074, 0.6478668451309204, 0.64231938123703, 0.6469422578811646, 0.6433760523796082, 0.6528860330581665, 0.6446968913078308, 0.6606789231300354, 0.6544709801673889, 0.6571126580238342, 0.6513010263442993, 0.6608110070228577, 0.6556597352027893, 0.6643772125244141, 0.6625280380249023, 0.6616035103797913, 0.6695284843444824, 0.6651697158813477, 0.6679434776306152, 0.665830135345459, 0.6674151420593262, 0.6684718132019043, 0.6744155287742615, 0.6709813475608826, 0.6760005354881287], "val_loss": [1.9648942947387695, 1.958953857421875, 1.9529217992510115, 1.9469244820731026, 1.9407101358686174, 1.934377942766462, 1.9277819905962263, 1.9208436693464006, 1.9135421344212122, 1.9057513645717077, 1.8973825318472726, 1.8884755543300085, 1.878882816859654, 1.8685457365853446, 1.8571438108171736, 1.8448442731584822, 1.8317159243992396, 1.8175923483712333, 1.8021612167358398, 1.7853822026933943, 1.7672113691057478, 1.7476681300571986, 1.7266817774091447, 1.7040061610085624, 1.6799865790775843, 1.6546614510672433, 1.6274600710187639, 1.5992938109806605, 1.5692965984344482, 1.5386594704219274, 1.5073613779885429, 1.4750141756875175, 1.4423675196511405, 1.4092189925057548, 1.3766274452209473, 1.3434721742357527, 1.310725314276559, 1.2782608781542097, 1.2466473238808768, 1.2164105347224645, 1.1872163159506661, 1.1594952515193395, 1.132117680140904, 1.1067122391292028, 1.0826365947723389, 1.0598019531794958, 1.0385352884020125, 1.0181163719722204, 0.9991558279309954, 0.9810927936008998, 0.9641047205243792, 0.9479005336761475, 0.9331073760986328, 0.9191138063158307, 0.905386141368321, 0.8924175330570766, 0.8799406119755336, 0.8687501294272286, 0.8578548771994454, 0.847382834979466, 0.8370399815695626, 0.8276189735957554, 0.8188631875174386, 0.810203126498631, 0.8020706347056797, 0.7947110959461757, 0.7872954947607858, 0.7799865177699498, 0.7737267698560443, 0.766806960105896, 0.7604054723467145, 0.7544832910810199, 0.7487353767667498, 0.7433861664363316, 0.7378597940717425, 0.7327211243765694, 0.7277997561863491, 0.7226793255124774, 0.718025803565979, 0.7137371812547956, 0.7095565285001483, 0.7054332665034703, 0.7007918698447091, 0.6964788777487618, 0.6924127510615757, 0.6884184735161918, 0.6847269535064697, 0.6813586950302124, 0.6780475718634469, 0.6755106619426182, 0.6719980239868164, 0.6691559893744332, 0.6662158284868512, 0.6631402117865426, 0.6601756470543998, 0.6583935873849052, 0.6553537675312587, 0.6527339560644967, 0.6497633968080793, 0.6481387615203857], "val_accuracy": [0.07999999821186066, 0.13866665959358215, 0.19833333790302277, 0.2590000033378601, 0.29633334279060364, 0.3370000123977661, 0.36533331871032715, 0.3813333213329315, 0.39399999380111694, 0.40533334016799927, 0.41499999165534973, 0.4246666729450226, 0.4339999854564667, 0.44433334469795227, 0.4493333399295807, 0.4569999873638153, 0.4676666557788849, 0.47699999809265137, 0.48399999737739563, 0.49166667461395264, 0.4986666738986969, 0.5113333463668823, 0.5196666717529297, 0.528333306312561, 0.5336666703224182, 0.5396666526794434, 0.5450000166893005, 0.5490000247955322, 0.5519999861717224, 0.5543333292007446, 0.559333324432373, 0.5653333067893982, 0.5686666369438171, 0.574999988079071, 0.5826666951179504, 0.5889999866485596, 0.5926666855812073, 0.6006666421890259, 0.6023333072662354, 0.609666645526886, 0.6150000095367432, 0.625333309173584, 0.6309999823570251, 0.637333333492279, 0.6426666378974915, 0.6516666412353516, 0.6556666493415833, 0.6629999876022339, 0.6669999957084656, 0.6700000166893005, 0.67166668176651, 0.6746666431427002, 0.6740000247955322, 0.6759999990463257, 0.6769999861717224, 0.6786666512489319, 0.6806666851043701, 0.6836666464805603, 0.687666654586792, 0.6903333067893982, 0.6916666626930237, 0.6926666498184204, 0.6943333148956299, 0.6970000267028809, 0.6980000138282776, 0.6986666917800903, 0.699999988079071, 0.7026666402816772, 0.7049999833106995, 0.7053333520889282, 0.7046666741371155, 0.7073333263397217, 0.7086666822433472, 0.7083333134651184, 0.7083333134651184, 0.7099999785423279, 0.7106666564941406, 0.7123333215713501, 0.7146666646003723, 0.7163333296775818, 0.7176666855812073, 0.7206666469573975, 0.721666693687439, 0.7226666808128357, 0.7226666808128357, 0.7256666421890259, 0.7263333201408386, 0.7269999980926514, 0.7269999980926514, 0.7263333201408386, 0.7289999723434448, 0.7286666631698608, 0.7286666631698608, 0.7289999723434448, 0.7316666841506958, 0.7319999933242798, 0.7336666584014893, 0.7353333234786987, 0.7360000014305115, 0.7356666922569275]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [1, 7, 3, 4], [3, 0], [69, 2], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [2, 2, 1, 9, 3, 0, 1, 3, 2, 2, 1, 3, 6, 8, 7, 7], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 0, 0, 1], [40, 23, 58, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 29, 16, 13, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(alpha), tf.math.subtract(beta, tf.math.multiply(tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(alpha), beta)))))), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.301639609380311, 2.312722970591938, 2.603627439345729, 8.933854770950118, 23.100878205234505, 37.50968414284471], "accuracy": [0.10474177449941635, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9765160424368722, 2.018484047480992, 3.4282958848135814, 14.775373186383929, 27.17186519077846, 39.56084551130022], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [0, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [1, 7, 3, 4], [3, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 10, 3, 2, 3, 2, 1, 1, 0, 6, 3, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(grad))))), tf.math.subtract(grad, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 9, 2, 6, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [82, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 2, 1, 2, 6, 2, 8, 1, 3, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 1, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [1, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 7, 7, 3, 4, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, alpha), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [50, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [1, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302228821959903, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [5, 2, 1, 2, 1, 2, 8, 1, 3, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 2, 0, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [64, 87, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [5, 7, 3, 4], [3, 0], [69, 2], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 5, 3, 0, 3, 0, 1, 3, 2, 2, 5, 7, 5, 2, 6, 1, 6, 4, 0, 7, 4, 5, 1, 0, 7, 1, 6, 8, 2, 8, 8, 6], [1, 2, 0, 2, 0, 2, 2, 0, 1, 3, 2, 2, 2, 1, 1, 1, 1, 3, 3, 0, 2, 3], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0, 0, 54, 32, 22, 4], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.subtract(beta, tf.math.multiply(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(beta), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), beta)))), tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), alpha))))), tf.math.divide_no_nan(tf.math.subtract(sigma, tf.math.divide_no_nan(tf.math.pow(beta, beta), beta)), tf.math.negative(tf.math.add(tf.math.pow(tf.math.square(tf.math.subtract(tf.math.negative(tf.math.add(alpha, alpha)), alpha)), tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.add(tf.math.sqrt(sigma), tf.math.sqrt(sigma))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(beta, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [9, 7, 3, 4], [3, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [3, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(grad, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3040557735867866, 2.3075387815773496, 2.3119841588093006, 2.3195699101756544, 2.3321931173205925, 2.373527391570009, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09417514503002167, 0.08360850811004639, 0.07832518965005875, 0.07330603897571564, 0.07396645098924637, 0.0816272646188736, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.972952025277274, 1.9759465626307897, 1.9800383704049247, 1.9857423646109444, 1.998138359614781, 2.1747522354125977, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.026000000536441803, 0.01733333244919777, 0.018333332613110542, 0.04533333331346512, 0.09000000357627869, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [98, 66, 89, 50, 85, 46], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [4, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [1, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 0, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), grad))), tf.math.add(beta, tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302228821959903, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 2, 1, 2, 6, 2, 8, 1, 3, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 0, 1, 5], [36, 19, 7, 66, 58, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [5, 7, 3, 4], [3, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 1, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [1, 7, 3, 4], [3, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 11, 9, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), alpha))))))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [3, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 7, 7, 4, 3, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303067757138298, 2.3028053542988536, 2.3020544180922333, 2.302829119633564, 2.3023194353168885, 2.3014240645619117], "accuracy": [0.09536388516426086, 0.09192973375320435, 0.08796724677085876, 0.08955223858356476, 0.09166556596755981, 0.09747721254825592], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 2, 1, 2, 6, 2, 8, 1, 3, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7, 8, 7, 1, 7, 4, 6, 8, 4, 3, 6, 4], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5, 5, 0, 3, 1, 1, 3, 4, 4], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [3, 7, 3, 4], [3, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [8, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [95, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 0, 81, 81, 48, 33, 7, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.subtract(tf.math.add(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(beta))), tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, beta), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.square(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.multiply(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(grad, grad))))))))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, alpha)))), tf.math.add(beta, alpha))), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, alpha))), tf.math.add(beta, alpha)), grad))), tf.math.pow(grad, tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [2.303067757138298, 2.3028053542988536, 2.3020544180922333, 2.302829119633564, 2.3023194353168885, 2.3014240645619117], "accuracy": [0.09536388516426086, 0.09192973375320435, 0.08796724677085876, 0.08955223858356476, 0.09166556596755981, 0.09747721254825592], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [1, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.0357142873108387, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303502643428002, 2.3048027120702823, 2.305976955976626, 2.308548840171452, 2.3110640331140333, 2.3128140045745953], "accuracy": [0.0944393053650856, 0.08730682730674744, 0.08228767663240433, 0.07806102186441422, 0.07951393723487854, 0.08030643314123154], "val_loss": [1.9717845235552107, 1.9730582237243652, 1.9744928904942103, 1.976231302533831, 1.9782377651759557, 1.9801878247942244], "val_accuracy": [0.033666666597127914, 0.025333333760499954, 0.02133333310484886, 0.017999999225139618, 0.01899999938905239, 0.03099999949336052]}}]