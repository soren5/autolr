[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.8448571562767029, "mapping_values": [1, 3, 3, 1, 2, 1, 6, 6, 4, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1641483103295265, 1.2885218711970678, 0.8936104272744281, 0.7719696654210301, 0.6993910889772927, 0.648853795064864, 0.6220138304741502, 0.5919792747547944, 0.5731199592206268, 0.5435110373094554, 0.5225374175258017, 0.504873215963245, 0.49101925098570093, 0.47423058040878, 0.4541504619663512, 0.4440120252809032, 0.4348072961431374, 0.41498911041845626, 0.41788272339796045, 0.39890848245634586, 0.3935293926617662, 0.37707226215147654, 0.36872582417658023, 0.3635740527710217, 0.35233832257471975, 0.34627040612100846, 0.3397500309347713, 0.325457881517603, 0.32179443223869103, 0.3055346274908114, 0.31410335559162245, 0.29731644076552166, 0.29235216962615684, 0.29588970291600364, 0.2872088022826291, 0.28152391931337056, 0.27712842578019414, 0.26908055914234036, 0.26708273143816175, 0.25742306413352606, 0.2651214145784286, 0.2530872772347264, 0.24995081254228577, 0.23433507661053596, 0.2359465403961326, 0.22659567937701686, 0.2262729890275515, 0.21869865382635645, 0.2213116119275114, 0.2088784315602308, 0.21057916667719306, 0.2076725319073169, 0.21105756989213154, 0.20319368703143945], "accuracy": [0.26601505279541016, 0.5476158857345581, 0.6789063811302185, 0.709549605846405, 0.7357020378112793, 0.7564390301704407, 0.7685906887054443, 0.7783648371696472, 0.7893276810646057, 0.7968564033508301, 0.8034605979919434, 0.8128384351730347, 0.8198388814926147, 0.8281601071357727, 0.828820526599884, 0.8409721255302429, 0.8363492488861084, 0.8461233377456665, 0.8450667262077332, 0.8511425256729126, 0.8549728989601135, 0.8581429123878479, 0.8638224601745605, 0.8685774803161621, 0.869502067565918, 0.8734645247459412, 0.8739928603172302, 0.8767666220664978, 0.8811253309249878, 0.8848236799240112, 0.8816536664962769, 0.8919561505317688, 0.8936732411384583, 0.887201189994812, 0.8886540532112122, 0.8948619961738586, 0.8972394466400146, 0.8968431949615479, 0.8956544995307922, 0.9062210917472839, 0.895918607711792, 0.9019944667816162, 0.9049002528190613, 0.910711944103241, 0.91124027967453, 0.9132214784622192, 0.9145423173904419, 0.9157310724258423, 0.9174481630325317, 0.9222031235694885, 0.9218068718910217, 0.9232597947120667, 0.9179764986038208, 0.9210143685340881], "val_loss": [1.2988879680633545, 0.7194067069462368, 0.5894583463668823, 0.5533250570297241, 0.512206895010812, 0.49621331691741943, 0.4658623593194144, 0.4482696056365967, 0.4347456523350307, 0.42328511817114695, 0.41163140535354614, 0.40877435888562885, 0.38670291219438824, 0.38350177662713186, 0.36955034732818604, 0.35919300998960224, 0.35726789065769743, 0.35980963706970215, 0.3479390825544085, 0.337668776512146, 0.33731713465281893, 0.3321050320352827, 0.3344131112098694, 0.33589781182152884, 0.3401796988078526, 0.3194968615259443, 0.32441732713154386, 0.32638085739953177, 0.32057359388896395, 0.3263971635273525, 0.3115284357752119, 0.31678982291902813, 0.31486248118536814, 0.3265060526984079, 0.3034934401512146, 0.3132239750453404, 0.3084050246647426, 0.3123003329549517, 0.3027097838265555, 0.3102771895272391, 0.29903267111097065, 0.3050623280661447, 0.3089937312262399, 0.3087946517126901, 0.30223165239606586, 0.3167851226670401, 0.31083145311900545, 0.3103236811501639, 0.30954865898404804, 0.31254182543073383, 0.3158957702772958, 0.31619822127478464, 0.3193918466567993, 0.31821623018809725], "val_accuracy": [0.5763333439826965, 0.7080000042915344, 0.749666690826416, 0.7636666893959045, 0.765999972820282, 0.7793333530426025, 0.7993333339691162, 0.8029999732971191, 0.8146666884422302, 0.8180000185966492, 0.8253333568572998, 0.8253333568572998, 0.8410000205039978, 0.8383333086967468, 0.8426666855812073, 0.8519999980926514, 0.8553333282470703, 0.846666693687439, 0.8523333072662354, 0.859333336353302, 0.8629999756813049, 0.8633333444595337, 0.8663333058357239, 0.8653333187103271, 0.8610000014305115, 0.8676666617393494, 0.8703333139419556, 0.8713333606719971, 0.8679999709129333, 0.8700000047683716, 0.871999979019165, 0.8696666955947876, 0.8740000128746033, 0.8646666407585144, 0.875333309173584, 0.8726666569709778, 0.8736666440963745, 0.8786666393280029, 0.8763333559036255, 0.8759999871253967, 0.8813333511352539, 0.8759999871253967, 0.8743333220481873, 0.8816666603088379, 0.8820000290870667, 0.8816666603088379, 0.8803333044052124, 0.8776666522026062, 0.8849999904632568, 0.8799999952316284, 0.871666669845581, 0.8769999742507935, 0.8776666522026062, 0.8793333172798157]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.8437142968177795, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 5, 2, 0, 5, 3, 2, 1, 0, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1641482091960875, 1.2885287863514474, 0.8931558102097699, 0.7718834245933943, 0.6994691040411665, 0.6502356964599313, 0.6221833318814374, 0.5935761910844646, 0.5752434087325522, 0.5429663150742888, 0.5240349041283516, 0.5090282741098072, 0.49105504615321655, 0.47507345250112315, 0.45486548708697916, 0.4469619501323559, 0.4359882696429736, 0.41714089462124454, 0.41919974008287975, 0.3989582553342538, 0.393717693126811, 0.38055938964490926, 0.37117540520243025, 0.3640035468833542, 0.34997606218026506, 0.3465158738094534, 0.3404419726982817, 0.324208483251488, 0.32364495677828964, 0.30737029277983907, 0.31483553069504794, 0.302275227309218, 0.2935788817393734, 0.2934772279150435, 0.2898543481034153, 0.2827541850002419, 0.27711293081628835, 0.2662797844810666, 0.26248752295758354, 0.258113405507207, 0.2592543672734342, 0.2436606440628682, 0.24873073321717085, 0.23987377381926248, 0.23755520236978694, 0.22572569796288286, 0.22707888341307436, 0.22238620518142238, 0.22275464796292516, 0.21157624063836963, 0.2132467017268555, 0.2054562002436171, 0.21149194208488584, 0.20404264541657027], "accuracy": [0.26601505279541016, 0.5477479696273804, 0.6800950765609741, 0.7107383608818054, 0.733588695526123, 0.755118191242218, 0.7677981853485107, 0.7773081660270691, 0.7865539789199829, 0.7954035401344299, 0.8025360107421875, 0.8117818236351013, 0.8195747137069702, 0.8265751004219055, 0.8298771381378174, 0.8381983637809753, 0.8341038227081299, 0.8466516733169556, 0.8448025584220886, 0.8508783578872681, 0.8580108284950256, 0.8560295701026917, 0.8619733452796936, 0.8679170608520508, 0.8691058158874512, 0.8714832663536072, 0.8753136992454529, 0.8786157965660095, 0.8816536664962769, 0.8842953443527222, 0.883238673210144, 0.8840311765670776, 0.893541157245636, 0.8887861371040344, 0.8870691061019897, 0.8928807377815247, 0.8927486538887024, 0.8961827754974365, 0.8965790271759033, 0.9046360850334167, 0.9019944667816162, 0.9054285883903503, 0.9033153057098389, 0.9120327830314636, 0.9121648669242859, 0.9109761118888855, 0.913617730140686, 0.9159952402114868, 0.9153348207473755, 0.9211464524269104, 0.9186369180679321, 0.9223352074623108, 0.9198256731033325, 0.9215427041053772], "val_loss": [1.2988830293927873, 0.719119770186288, 0.5893545321055821, 0.5523603813988822, 0.512807982308524, 0.49550208023616243, 0.46718757493155344, 0.4484043632234846, 0.4369873489652361, 0.4239427277020046, 0.4133592758859907, 0.40969319002968924, 0.3874720505305699, 0.38275147335869925, 0.36974323647362844, 0.3610059363501413, 0.3589047448975699, 0.3598306434495108, 0.348168534891946, 0.3385661840438843, 0.3386238557951791, 0.3345621909414019, 0.3353607569422041, 0.33755694116864887, 0.3392356208392552, 0.3202038322176252, 0.32554252658571514, 0.3260239447866167, 0.3208697438240051, 0.32916786840983797, 0.317484940801348, 0.3152283344949995, 0.3138266120638166, 0.31836860520499094, 0.30305239983967375, 0.31446658713477, 0.3070704596383231, 0.30523362330027987, 0.31100384678159443, 0.3063529985291617, 0.3035900167056492, 0.30928973640714374, 0.3121722085135324, 0.30507510900497437, 0.319063024861472, 0.317213841847011, 0.30841346297945293, 0.3093633992331369, 0.3130196418081011, 0.31573639597211567, 0.3158995934895107, 0.31111099890300203, 0.3192664555140904, 0.3148317422185625], "val_accuracy": [0.5763333439826965, 0.7080000042915344, 0.7519999742507935, 0.7649999856948853, 0.7633333206176758, 0.781333327293396, 0.7979999780654907, 0.8013333082199097, 0.8146666884422302, 0.8169999718666077, 0.8246666789054871, 0.8296666741371155, 0.8426666855812073, 0.8396666646003723, 0.843999981880188, 0.8479999899864197, 0.8506666421890259, 0.8450000286102295, 0.8496666550636292, 0.8600000143051147, 0.8576666712760925, 0.8633333444595337, 0.8636666536331177, 0.8633333444595337, 0.8600000143051147, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8659999966621399, 0.8679999709129333, 0.8709999918937683, 0.8700000047683716, 0.8703333139419556, 0.8663333058357239, 0.8756666779518127, 0.875, 0.8730000257492065, 0.8773333430290222, 0.8736666440963745, 0.875333309173584, 0.8790000081062317, 0.8733333349227905, 0.8723333477973938, 0.8796666860580444, 0.8733333349227905, 0.8809999823570251, 0.8846666812896729, 0.8756666779518127, 0.8853333592414856, 0.8799999952316284, 0.8773333430290222, 0.8776666522026062, 0.8823333382606506, 0.8843333125114441]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [15, 97, 31, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 6, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 7], [64], [0, 1, 0, 0, 1, 1, 1], [0, 1, 5, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.7602857351303101, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(grad)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3011220435204365, 2.285885322520667, 2.2556695801439286, 2.2128981402080607, 2.1456911514432377, 2.037943410379004, 1.868179802786893, 1.6543083771769995, 1.4796379567641214, 1.3799106466015962, 1.372970107177686, 1.3220252967891661, 1.1858790947099513, 1.066409000072182, 0.9351939426799256, 0.9065828809428288, 0.9084507946750161, 0.899960597579222, 0.8703442201354894, 0.8248287037127148, 0.795418217748683, 0.8016569792964534, 0.8010210330223977, 0.8078199066049497, 0.7947598158675508, 0.7708558442019169, 0.7586408571135083, 0.7390126150360732, 0.712504408284264, 0.7156490341011937, 0.7078166266851862, 0.7106160676128215, 0.7139683525166444, 0.7097644045557313, 0.684367421973635, 0.6671906972542383, 0.6660747038626856, 0.6615789655318995, 0.6712279825115468, 0.6504334403287307, 0.6434538816306664, 0.6301113842831406, 0.6157012061750916, 0.6191443128199106, 0.6043462589148911, 0.6032761382609468, 0.5971451936428179, 0.5757978660217004, 0.5933759261934811, 0.5813040602019812, 0.578709427163491, 0.5542861638508768, 0.5594744967069639, 0.5528179786271737, 0.5470032504977583, 0.5362192215054751, 0.5408345147516623, 0.5430837010175261, 0.529178276345116, 0.5282926648725309, 0.5166200460176489, 0.5194513003398809, 0.5184911046919648, 0.5144919721347434, 0.5133142019102303, 0.5057349897189903], "accuracy": [0.09668471664190292, 0.14040417969226837, 0.22242768108844757, 0.2999603748321533, 0.36124685406684875, 0.39690926671028137, 0.43006208539009094, 0.4579315781593323, 0.49148064851760864, 0.5164443254470825, 0.5395588278770447, 0.5658433437347412, 0.6063928008079529, 0.6367719173431396, 0.6565843224525452, 0.6560559868812561, 0.6592260003089905, 0.681547999382019, 0.6882842183113098, 0.6931713223457336, 0.7020208835601807, 0.6942279934883118, 0.7033417224884033, 0.6993792057037354, 0.7074362635612488, 0.707568347454071, 0.7121912837028503, 0.7173424959182739, 0.7194558382034302, 0.7215691208839417, 0.722757875919342, 0.7290979027748108, 0.7316074371337891, 0.7337207794189453, 0.7407211661338806, 0.7465327978134155, 0.7486461400985718, 0.7454761862754822, 0.7440232634544373, 0.754589855670929, 0.7535332441329956, 0.7568352818489075, 0.763439416885376, 0.7627789974212646, 0.7701756954193115, 0.7677981853485107, 0.7737419009208679, 0.7796856164932251, 0.7755910754203796, 0.7784969210624695, 0.7816668748855591, 0.7918372750282288, 0.787082314491272, 0.7876105904579163, 0.7972526550292969, 0.7979130744934082, 0.7980451583862305, 0.7998943328857422, 0.800290584564209, 0.8038568496704102, 0.8037247657775879, 0.8103289008140564, 0.8042530417442322, 0.8075551390647888, 0.8034605979919434, 0.8103289008140564], "val_loss": [1.9627735955374581, 1.9412363597324915, 1.9079147747584753, 1.8594538824898856, 1.7801124027797155, 1.6469336237226213, 1.4419676916939872, 1.1973894664219447, 0.9930739743368966, 0.8533051013946533, 0.7823540142604283, 0.7307773317609515, 0.7322795731680733, 0.6833886419023786, 0.6662951537540981, 0.6800231082098824, 0.6953714064189366, 0.6827494587217059, 0.6392386640821185, 0.6060751846858433, 0.6002540077481952, 0.5988141127995082, 0.5902553626469204, 0.5866685083934239, 0.5863855736596244, 0.578862088067191, 0.5635205847876412, 0.5563702923910958, 0.5600568396704537, 0.5608623708997454, 0.5562746184212821, 0.5526187590190342, 0.5500989471163068, 0.5423073257718768, 0.530720591545105, 0.5225007874625069, 0.5194064208439418, 0.5172080142157418, 0.5118123292922974, 0.5023793492998395, 0.4919344016483852, 0.48464211395808626, 0.47984981536865234, 0.47610017231532503, 0.47216858182634625, 0.46772049154554096, 0.46401398522513254, 0.4616577625274658, 0.4593754495893206, 0.45589527062007357, 0.4515632561274937, 0.44892784527369906, 0.44712194374629427, 0.4451220716748919, 0.442547219140189, 0.44165936538151335, 0.4415767022541591, 0.43958985805511475, 0.43570995330810547, 0.4319082072802952, 0.4289784176009042, 0.4268656373023987, 0.42542444808142527, 0.4236531172479902, 0.4215496097292219, 0.41829705238342285], "val_accuracy": [0.10266666859388351, 0.30300000309944153, 0.390666663646698, 0.421999990940094, 0.4476666748523712, 0.484333336353302, 0.5329999923706055, 0.5793333053588867, 0.640666663646698, 0.6773333549499512, 0.6736666560173035, 0.7023333311080933, 0.7129999995231628, 0.7146666646003723, 0.7196666598320007, 0.6976666450500488, 0.7266666889190674, 0.7336666584014893, 0.731333315372467, 0.7353333234786987, 0.7386666536331177, 0.7336666584014893, 0.7379999756813049, 0.7396666407585144, 0.7440000176429749, 0.7476666569709778, 0.75, 0.7513333559036255, 0.7516666650772095, 0.7573333382606506, 0.7636666893959045, 0.7710000276565552, 0.7680000066757202, 0.7743333578109741, 0.7726666927337646, 0.7693333625793457, 0.7746666669845581, 0.7756666541099548, 0.7799999713897705, 0.7836666703224182, 0.7883333563804626, 0.7896666526794434, 0.7856666445732117, 0.7829999923706055, 0.7866666913032532, 0.7893333435058594, 0.7973333597183228, 0.7979999780654907, 0.800000011920929, 0.7986666560173035, 0.8043333292007446, 0.8066666722297668, 0.8056666851043701, 0.8090000152587891, 0.8136666417121887, 0.8183333277702332, 0.8216666579246521, 0.8196666836738586, 0.8220000267028809, 0.8233333230018616, 0.8276666402816772, 0.8273333311080933, 0.8230000138282776, 0.8259999752044678, 0.824999988079071, 0.8253333568572998]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [15, 97, 31, 49, 25], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 1, 6, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 1], [0, 0, 1], [2, 0, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [34, 52, 13]], "fitness": -0.7577142715454102, "mapping_values": [1, 3, 3, 1, 2, 1, 10, 10, 6, 4, 0, 4, 3, 2, 1, 0, 5, 3, 2, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(alpha, tf.math.add(beta, grad)), grad)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3021118755212093, 2.2931512736405018, 2.2746487820483847, 2.249980705950506, 2.2154839594350624, 2.169617690461864, 2.102574271076249, 2.008526464825561, 1.875343877263687, 1.7133924808673509, 1.5531457661165302, 1.4436311465779694, 1.3749584878802599, 1.3658740538269727, 1.3538624611922447, 1.2734273731936836, 1.1971759491151963, 1.075949493605211, 0.9803069371510144, 0.9082558514608636, 0.9054319201648164, 0.9072716355780411, 0.907122674406858, 0.8960340737965853, 0.8537347950577626, 0.8198260888526185, 0.8128898535831619, 0.8109302780159303, 0.7962124819264924, 0.7948234815954013, 0.7808359079530384, 0.7914293182209545, 0.7953941403614957, 0.7777562119453465, 0.7486159599153295, 0.7341738023526161, 0.7292301914537934, 0.715558363383299, 0.7243528222096138, 0.697851104294509, 0.6989696750850599, 0.696859403057121, 0.6983512226364726, 0.6960968971173714, 0.6890158212384874, 0.6791268051607482, 0.6736174838543882, 0.6549098173688038, 0.6713220389952764, 0.6596320331482415], "accuracy": [0.09430722147226334, 0.1162329912185669, 0.16589617729187012, 0.230484738945961, 0.29626205563545227, 0.3423590064048767, 0.378549724817276, 0.4021925628185272, 0.4208162724971771, 0.44828951358795166, 0.47747984528541565, 0.4991414546966553, 0.5238409638404846, 0.5344076156616211, 0.5478800535202026, 0.5709945559501648, 0.6004490852355957, 0.6392814517021179, 0.6518293619155884, 0.6592260003089905, 0.6588297486305237, 0.6613393425941467, 0.6712455153465271, 0.6789063811302185, 0.687887966632843, 0.689869225025177, 0.6917183995246887, 0.6911900639533997, 0.7025492191314697, 0.6993792057037354, 0.7021529674530029, 0.6992471218109131, 0.6944921612739563, 0.7043983340263367, 0.7135120630264282, 0.7195879220962524, 0.7226257920265198, 0.7251353859901428, 0.7199841737747192, 0.7260599732398987, 0.7371549606323242, 0.7329282760620117, 0.7354378700256348, 0.7343811988830566, 0.7411174178123474, 0.739400327205658, 0.7434949278831482, 0.7506273984909058, 0.7465327978134155, 0.7508915662765503], "val_loss": [1.966160433632987, 1.9533258846827917, 1.9333013807024275, 1.9064721379961287, 1.8711000851222448, 1.8201684951782227, 1.7443881034851074, 1.6329305512564523, 1.4786099706377303, 1.293825932911464, 1.1159187725612096, 0.9747191837855748, 0.866929258619036, 0.7972506965909686, 0.7665396417890277, 0.7274875129972186, 0.734593323298863, 0.6983616862978254, 0.6602434090205601, 0.6661352259772164, 0.6823949473244804, 0.6934580632618496, 0.6909201145172119, 0.666575721332005, 0.6335633311952863, 0.6118212427411761, 0.6040717874254499, 0.5994935206004551, 0.592882684298924, 0.5879471302032471, 0.5896459817886353, 0.5908197164535522, 0.5861465420041766, 0.579214334487915, 0.5737539870398385, 0.5660569327218192, 0.5583805697304862, 0.5549856083733695, 0.5523743288857597, 0.5490964821406773, 0.5475226470402309, 0.547860928944179, 0.5461448090417045, 0.5410745995385307, 0.5339396170207432, 0.5267646483012608, 0.5212149790355137, 0.5184291941779, 0.5187625714710781, 0.5194467646735055], "val_accuracy": [0.07133333384990692, 0.19766665995121002, 0.34833332896232605, 0.3883333206176758, 0.4183333218097687, 0.43566668033599854, 0.4593333303928375, 0.49300000071525574, 0.5260000228881836, 0.5606666803359985, 0.6019999980926514, 0.6433333158493042, 0.6746666431427002, 0.6809999942779541, 0.6793333292007446, 0.7039999961853027, 0.7153333425521851, 0.7170000076293945, 0.721666693687439, 0.7093333601951599, 0.6976666450500488, 0.7120000123977661, 0.7326666712760925, 0.7296666502952576, 0.7319999933242798, 0.734666645526886, 0.7363333106040955, 0.7400000095367432, 0.7406666874885559, 0.7366666793823242, 0.7360000014305115, 0.737666666507721, 0.7366666793823242, 0.7426666617393494, 0.7473333477973938, 0.7490000128746033, 0.7513333559036255, 0.753333330154419, 0.7586666941642761, 0.7590000033378601, 0.7559999823570251, 0.762333333492279, 0.7716666460037231, 0.7743333578109741, 0.7746666669845581, 0.7730000019073486, 0.7739999890327454, 0.7733333110809326, 0.7696666717529297, 0.7703333497047424]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 9, 5, 1, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0, 1], [30, 97, 31, 49, 25], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [9, 8, 0, 2, 0, 9, 3, 9], [4, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 1, 1], [0, 0, 1], [3, 6, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1, 0], [0, 1, 5, 1, 2], [1, 0, 2], [15, 52, 13, 20, 37]], "fitness": -0.31771427392959595, "mapping_values": [1, 14, 14, 8, 6, 4, 1, 1, 1, 0, 1, 5, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.0386460967083426, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.3365473449230194, 0.16140536963939667, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.7822153227669852, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.3790000081062317, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 8, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 0, 1, 0, 0], [1, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 1, 1, 1, 1], [9, 1, 9, 1, 2], [1, 3, 2], [58, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026668621706152, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [15, 97, 31, 49, 25], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 4, 8, 0, 0, 3, 9], [2, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 7], [64], [0, 0, 0, 0, 1, 1, 1], [0, 1, 5, 1, 2], [1, 0, 2], [15, 93, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 6, 3, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.negative(beta))))), tf.math.add(beta, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.subtract(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.330919951905097, 2.3025851564605113, 2.3025851249694824, 2.302585106988105, 2.3025849990053673, 2.3025849990053673], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644460950579, 1.973644460950579, 1.973644392830985, 1.9736443247113908, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 0, 9, 4, 2, 6, 3, 6, 5, 8], [2, 2, 1, 0, 1, 1, 2, 2, 0, 2, 3, 3, 0], [15, 97, 31, 13, 25], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 8, 0, 3, 0, 0, 3, 9], [4, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 0, 0, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1, 1], [0, 5, 6, 1, 2], [1, 0, 2], [15, 93, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 2, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))))))))), tf.math.add(alpha, tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [30, 97, 31, 49, 25], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [5, 1, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 0, 1, 1, 1], [0, 0, 1], [7, 1, 8, 4], [6], [64], [0, 0, 0, 0, 1, 1, 1], [4, 1, 9, 1, 2], [1, 3, 1, 0, 3, 1, 3, 0, 2, 0, 1, 0, 1, 3], [15, 52, 13, 20, 37]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, sigma)), alpha)", "other_info": {"loss": [2.3026152806841953, 2.3026945855497543, 2.303178568148358, 2.304264778442796, 2.305836951491729, 2.3091882787376203, 2.320812124601996, 2.3764287405766042, 2.5618923071935713, 2.8825280565265117, 3.0153607579585096, 2.9248033568780687, 3.2173989867143753, 2.493169216038355, 2.9878482230036187, 2.7301832879491847, 3.1169230541485713], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09642054885625839, 0.1022322028875351, 0.09681680053472519, 0.10011887550354004, 0.09602430462837219, 0.09998679161071777, 0.10157178342342377, 0.09998679161071777, 0.09549596905708313, 0.09879804402589798], "val_loss": [1.9737392834254675, 1.9741595132010323, 1.974872044154576, 1.9761980601719447, 1.9788262503487724, 1.9840922355651855, 2.0081701959882463, 2.1128118378775462, 2.3701890536717007, 2.6159623691013882, 2.4820805958339145, 3.0163302421569824, 2.2806858335222517, 2.619344643184117, 2.3969456808907643, 2.4923123632158553, 2.7149717467171803], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.10233332961797714, 0.10199999809265137, 0.10199999809265137, 0.10366666316986084, 0.10366666316986084, 0.09666666388511658, 0.09666666388511658, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 49, 61, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [3, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 1], [0, 0, 1], [3, 7, 8, 4], [2], [64], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 5, 1, 2, 7, 0], [1, 0, 2, 0, 2], [15, 52, 13, 20, 37]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 12, 7, 5, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.subtract(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 9, 6, 4, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [34, 32, 5, 49, 25], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 6, 0, 0, 9, 3, 9], [1, 1, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 0, 1, 0, 1], [0, 0, 1], [8, 2, 8, 4], [4], [64], [0, 1, 1, 0, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 4, 8, 8, 5, 3, 0, 4, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10606260597705841, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [0, 97, 31, 49, 25], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 4, 0, 3, 0, 0, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 7], [64], [0, 1, 0, 0, 1, 1, 1], [0, 1, 5, 1, 2], [2, 0, 2], [15, 93, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 4, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))), tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))), tf.math.add(beta, grad)))), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 3, 6, 3, 2, 4, 1, 6, 4, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 2, 2, 3, 3, 0], [30, 80, 31, 49, 25], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [3, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 0, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 1, 0, 0, 1], [0, 1, 5, 1, 2], [1, 0, 2, 0, 3, 1, 3, 0, 2, 0, 1, 0, 1, 3], [15, 52, 13, 20, 37]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 11, 12, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [55, 97, 31, 49, 25], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [4, 8, 0, 3, 0, 0, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1], [7, 2, 8, 4], [2, 7], [64], [0, 1, 0, 0, 1, 1, 1], [6, 1, 5, 1, 2], [1, 0, 2], [58, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 6, 3, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [15, 97, 31, 49, 25], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 3, 0, 0, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 7], [64], [0, 1, 0, 0, 1, 1, 1], [2, 1, 5, 1, 2], [1, 0, 2], [15, 93, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 6, 3, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.negative(alpha))), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 5, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [81, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [5, 1, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 0, 1, 0, 1], [0, 0, 1], [9, 2, 8, 4], [3], [64], [0, 1, 0, 0, 1, 1, 1], [4, 1, 9, 1, 2], [1, 0, 2], [58, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 4, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 3, 0, 0, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0], [0, 0, 1], [7, 2, 8, 4], [2, 7], [64], [0, 1, 0, 0, 1, 1, 1], [8, 1, 9, 1, 2], [1, 0, 2], [19, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [88, 97, 31, 49, 25], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [4, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 7], [64], [1, 1, 0, 0, 1, 1, 1], [2, 5, 6, 1, 2], [3, 0, 2], [15, 93, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3034999447727973, 2.3035507837637397, 2.3025371584642236, 2.3030228409485622, 2.30217714426839, 2.3022479592155647], "accuracy": [0.09087307006120682, 0.09311848133802414, 0.09351472556591034, 0.08968432247638702, 0.0886276587843895, 0.09642054885625839], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [9, 8, 0, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 1], [1, 0, 1], [7, 0, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 32, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3034999447727973, 2.3035507837637397, 2.3025371584642236, 2.3030228409485622, 2.30217714426839, 2.3022479592155647], "accuracy": [0.09087307006120682, 0.09311848133802414, 0.09351472556591034, 0.08968432247638702, 0.0886276587843895, 0.09642054885625839], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [9, 8, 0, 2, 0, 9, 3, 9], [3, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [2], [64], [0, 1, 1, 0, 1, 1, 0], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13, 20, 37]], "fitness": -0.03799999877810478, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3036887581479735, 2.304747139095961, 2.305285757086485, 2.307584246403789, 2.3086729203358836, 2.310709372046696], "accuracy": [0.09074098616838455, 0.09008057415485382, 0.08638224750757217, 0.08070268481969833, 0.07436270266771317, 0.07634394615888596], "val_loss": [1.97154358455113, 1.9727990286690849, 1.9743674823216029, 1.9760974475315638, 1.9779072489057268, 1.979767186301095], "val_accuracy": [0.035999998450279236, 0.03166666626930237, 0.025333333760499954, 0.019333332777023315, 0.014666666276752949, 0.013000000268220901]}}]