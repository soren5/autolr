[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [34, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8162857294082642, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 2, 0, 1, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.988228674751184, 1.2501693359849129, 0.9140537848656503, 0.8331873825181824, 0.7495019961389111, 0.693140685172554, 0.6749469960102741, 0.6585242306441363, 0.6267219536639224, 0.601575571863076, 0.5825364036393786, 0.5699867773695299, 0.5549012676143155, 0.5417909930568282, 0.5347378108763124, 0.5266135454949387, 0.500347967999502, 0.48431583837495423, 0.5224524116582244, 0.47694560562252697, 0.4617699326588383, 0.461618559518904, 0.45484414011763546, 0.43675430588450775, 0.4390429398284817, 0.41343468406008, 0.4426429987292264, 0.4203666126951644, 0.41047950567444635, 0.40760467591664856, 0.3823231696736118, 0.3955422372684786, 0.37094070391096945, 0.37879005698417045, 0.3680261421661808, 0.36899950705530654, 0.3613722161287172, 0.3438028841836814, 0.3478130775160242, 0.35359999184374796, 0.33830672691463876, 0.3201620798376431, 0.32597688773777095, 0.33037868310211355, 0.3103542135195127, 0.30193479640404186, 0.31565221229312507, 0.30874048971134704, 0.29541398807051256, 0.2853274100476473, 0.2891199633610987, 0.301890330638364, 0.29710402915490663, 0.2745808550174982], "accuracy": [0.33760401606559753, 0.5568616986274719, 0.6684718132019043, 0.6886804699897766, 0.7150970697402954, 0.7327961921691895, 0.7424382567405701, 0.7428345084190369, 0.7630431652069092, 0.7672698497772217, 0.7724210619926453, 0.7820631265640259, 0.7893276810646057, 0.7952714562416077, 0.7979130744934082, 0.7987055778503418, 0.8098005652427673, 0.819970965385437, 0.8047813773155212, 0.8207634687423706, 0.8269713521003723, 0.8261788487434387, 0.824329674243927, 0.8374059200286865, 0.8329150676727295, 0.847840428352356, 0.8359529972076416, 0.8426892161369324, 0.8467837572097778, 0.8466516733169556, 0.8610487580299377, 0.8524633646011353, 0.8628978729248047, 0.8584070801734924, 0.8618412613868713, 0.8597279191017151, 0.8638224601745605, 0.8668603897094727, 0.867520809173584, 0.8628978729248047, 0.8698983192443848, 0.8816536664962769, 0.8735966086387634, 0.8787478804588318, 0.8857482671737671, 0.8885219693183899, 0.8808611631393433, 0.8833707571029663, 0.8886540532112122, 0.8920882344245911, 0.8926165699958801, 0.884691596031189, 0.8848236799240112, 0.8936732411384583], "val_loss": [1.4182021958487374, 0.8039181573050362, 0.6098659038543701, 0.6116666453225272, 0.5409695761544364, 0.5589764969689506, 0.51908768926348, 0.5278570481709072, 0.4868582146508353, 0.48378786018916536, 0.4619425194604056, 0.4481232166290283, 0.43308461563927786, 0.4511528526033674, 0.4512098857334682, 0.41634258202144075, 0.40710266147341045, 0.44606281178338186, 0.4128411327089582, 0.395384567124503, 0.38496267795562744, 0.42750362839017597, 0.3904817359788077, 0.38519745213644846, 0.37326725891658236, 0.4013127514294216, 0.39300369364874704, 0.36131410939352854, 0.3640642251287188, 0.36755214418683735, 0.3515563351767404, 0.34598590646471294, 0.3808221220970154, 0.34779660190854755, 0.34335654973983765, 0.3651642543928964, 0.33149343729019165, 0.3565409183502197, 0.3378438098090036, 0.33402986185891287, 0.34783429758889334, 0.33603388922555105, 0.3517420973096575, 0.33128414835248676, 0.3331971083368574, 0.33952478000095915, 0.3304740531103952, 0.34022581577301025, 0.33425759417670114, 0.34568247624806, 0.3807916130338396, 0.3605694685663496, 0.33645096846989225, 0.3389410206249782], "val_accuracy": [0.45366665720939636, 0.6639999747276306, 0.7243333458900452, 0.7070000171661377, 0.7576666474342346, 0.7379999756813049, 0.7693333625793457, 0.7633333206176758, 0.7879999876022339, 0.7796666622161865, 0.7926666736602783, 0.7976666688919067, 0.8069999814033508, 0.7933333516120911, 0.800000011920929, 0.8166666626930237, 0.8226666450500488, 0.7903333306312561, 0.8146666884422302, 0.831333339214325, 0.8346666693687439, 0.7986666560173035, 0.8230000138282776, 0.8323333263397217, 0.8403333425521851, 0.8216666579246521, 0.8259999752044678, 0.8489999771118164, 0.843999981880188, 0.8460000157356262, 0.8543333411216736, 0.8539999723434448, 0.8336666822433472, 0.856333315372467, 0.8553333282470703, 0.8403333425521851, 0.859333336353302, 0.8539999723434448, 0.8616666793823242, 0.8573333621025085, 0.8543333411216736, 0.8610000014305115, 0.8443333506584167, 0.8629999756813049, 0.8633333444595337, 0.8573333621025085, 0.8600000143051147, 0.8550000190734863, 0.8646666407585144, 0.846666693687439, 0.8373333215713501, 0.8420000076293945, 0.8606666922569275, 0.8576666712760925]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [31, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 2, 3, 4, 6, 6], [0, 4, 3, 1], [34, 95, 82], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7717142701148987, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 2, 1, 1, 13, 9, 6, 3, 1, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, sigma))))), sigma)), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.2600753029591654, 2.079957782946652, 1.6755693854279192, 1.304831413623758, 1.1166823077683656, 1.0060418540019684, 0.9327886443033573, 0.9021153990476989, 0.8576275044822138, 0.818327212432876, 0.8126950659661828, 0.7833478386139809, 0.7626313150613977, 0.745988751643401, 0.7376166329943131, 0.7242887287469919, 0.7181653075088458, 0.7004296382451968, 0.6987872228111022, 0.6831928123855918, 0.6776838391495733, 0.6663013886876347, 0.6687673969732347, 0.6555847579682461], "accuracy": [0.19495442509651184, 0.37088891863822937, 0.4815744161605835, 0.5556729435920715, 0.6032228469848633, 0.6440364718437195, 0.672170102596283, 0.6724342703819275, 0.6890767216682434, 0.7062475085258484, 0.7017567157745361, 0.7172104120254517, 0.7240787148475647, 0.7255316376686096, 0.7292299270629883, 0.7346453666687012, 0.7357020378112793, 0.7448157668113708, 0.7477215528488159, 0.743891179561615, 0.7500990629196167, 0.7555144429206848, 0.7541936039924622, 0.7647602558135986], "val_loss": [1.8619449479239327, 1.567124673298427, 1.105858530317034, 0.8669883353369576, 0.7601489169257027, 0.7054992403302874, 0.6599862234933036, 0.6308718579156058, 0.615735684122358, 0.5898577996662685, 0.6072623389107841, 0.5966147695268903, 0.5592989751270839, 0.5485948153904506, 0.5364722524370465, 0.5361093623297555, 0.526554993220738, 0.527485728263855, 0.5122044597353254, 0.5107623679297311, 0.5038725137710571, 0.5089438813073295, 0.5074722596577236, 0.4966481924057007], "val_accuracy": [0.44699999690055847, 0.5759999752044678, 0.640999972820282, 0.6783333420753479, 0.6893333196640015, 0.706333339214325, 0.7223333120346069, 0.7276666760444641, 0.7300000190734863, 0.7443333268165588, 0.722000002861023, 0.7266666889190674, 0.7580000162124634, 0.7580000162124634, 0.7606666684150696, 0.7596666812896729, 0.7683333158493042, 0.7703333497047424, 0.7726666927337646, 0.7710000276565552, 0.7710000276565552, 0.7680000066757202, 0.7620000243186951, 0.7663333415985107]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 2, 2, 4, 6, 5], [0, 1, 2, 1], [34, 75, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7274285554885864, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 8, 3, 4, 12, 7, 6, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(sigma, tf.math.square(sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2981668583327406, 2.270604227323259, 2.2161397586928824, 2.116573133331327, 1.924262885971155, 1.6408635294117775, 1.4248885200039711, 1.3979235866428477, 1.360484892492832, 1.1759215331805017, 0.976824360563928, 0.9096140696025874, 0.9380784976940586, 0.908120943838343, 0.8490471601202787, 0.8248390065302639, 0.8278653713627389, 0.8608782936742261, 0.8413995667266619, 0.7954089081503097, 0.7632948754328495, 0.7609753116971198, 0.7707119515748024, 0.7616686139360568, 0.7417989706460905, 0.7249922240493698, 0.7079861531908234, 0.7038252717389596, 0.7103801009094773, 0.7034050622526146, 0.6738853692898205, 0.6546156658881911, 0.6562074175789183, 0.648943374406046, 0.6399523613711453, 0.6366967403767462], "accuracy": [0.10038304328918457, 0.17553824186325073, 0.28582748770713806, 0.36785101890563965, 0.41104212403297424, 0.4625544846057892, 0.5120856165885925, 0.5352001190185547, 0.5595033764839172, 0.6229031682014465, 0.6474705934524536, 0.652621865272522, 0.6608110070228577, 0.674679696559906, 0.6833971738815308, 0.6900013089179993, 0.6927750706672668, 0.687887966632843, 0.6926429867744446, 0.7003037929534912, 0.7086250185966492, 0.7087571024894714, 0.7113987803459167, 0.7168141603469849, 0.715889573097229, 0.7301545143127441, 0.7314753532409668, 0.7388719916343689, 0.7382115721702576, 0.735569953918457, 0.7417778372764587, 0.7520803213119507, 0.7465327978134155, 0.7498348951339722, 0.7534011602401733, 0.7606657147407532], "val_loss": [1.9563676289149694, 1.9165199824741908, 1.8489827428545271, 1.7172743252345495, 1.4658730711255754, 1.1384539263589042, 0.9066810948508126, 0.8144932644707816, 0.7621446847915649, 0.732479384967259, 0.6710080759865897, 0.7113721881593976, 0.7280075379780361, 0.6663951703480312, 0.6268317699432373, 0.621283769607544, 0.6144332204546247, 0.6169498137065342, 0.5952281781605312, 0.5811270645686558, 0.5713177408490863, 0.5906520060130528, 0.5911171776907784, 0.5768126589911324, 0.5578910623277936, 0.5449105330875942, 0.5323022944586617, 0.5262057951518467, 0.5192420993532453, 0.49666578429085867, 0.4890183550970895, 0.49309541497911724, 0.5012976101466587, 0.5074419464383807, 0.49954611914498465, 0.4852136032921927], "val_accuracy": [0.16366666555404663, 0.3766666650772095, 0.4506666660308838, 0.4936666786670685, 0.5230000019073486, 0.5883333086967468, 0.6596666574478149, 0.6433333158493042, 0.6856666803359985, 0.6913333535194397, 0.7053333520889282, 0.6823333501815796, 0.7153333425521851, 0.7183333039283752, 0.718666672706604, 0.7246666550636292, 0.7246666550636292, 0.7229999899864197, 0.7316666841506958, 0.7329999804496765, 0.7403333187103271, 0.7426666617393494, 0.75, 0.7519999742507935, 0.7486666440963745, 0.7509999871253967, 0.7603333592414856, 0.762333333492279, 0.765999972820282, 0.7806666493415833, 0.7846666574478149, 0.7763333320617676, 0.7730000019073486, 0.7710000276565552, 0.7739999890327454, 0.781000018119812]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 2, 3, 4, 6, 7], [0, 3, 2, 1], [34, 75, 82], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [5, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7265714406967163, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2981669528058273, 2.27060419583223, 2.2161397586928824, 2.1165729578948054, 1.9242624406250255, 1.640863142528743, 1.4248907307056844, 1.3979306770211843, 1.3604939924396813, 1.1759369765542298, 0.9768484544209234, 0.909575917056019, 0.9380088322087995, 0.9080269682235753, 0.8489202144611718, 0.8248488249606807, 0.8281344690925614, 0.8608590922634662, 0.8412184718262644, 0.7950391047870982, 0.7630128682234409, 0.7610990535927927, 0.7702713609135398, 0.7612506886672319, 0.7419305135466561, 0.7249408394212437, 0.7074705095276022, 0.7032892642602504, 0.7100687562876121, 0.7028539119741747, 0.6737960398850613, 0.6545656280132758, 0.6556997229284252, 0.6486577077029073, 0.6396410498227331, 0.6367488799550514], "accuracy": [0.10038304328918457, 0.17553824186325073, 0.28582748770713806, 0.36785101890563965, 0.41104212403297424, 0.4625544846057892, 0.5120856165885925, 0.5352001190185547, 0.5596354603767395, 0.6229031682014465, 0.6472064256668091, 0.653150200843811, 0.6606789231300354, 0.6744155287742615, 0.683529257774353, 0.6902654767036438, 0.6931713223457336, 0.6877558827400208, 0.6926429867744446, 0.7008321285247803, 0.7086250185966492, 0.7082287669181824, 0.7111346125602722, 0.7173424959182739, 0.7156254053115845, 0.7305507659912109, 0.7317395210266113, 0.7390040755271912, 0.7388719916343689, 0.7354378700256348, 0.7423061728477478, 0.752212405204773, 0.746268630027771, 0.7498348951339722, 0.754589855670929, 0.7607977986335754], "val_loss": [1.9563676289149694, 1.9165199824741908, 1.8489827428545271, 1.7172739165169852, 1.4658725942884172, 1.13845317704337, 0.9066891329629081, 0.8144966534205845, 0.7621559926441738, 0.7325294869286674, 0.6710224151611328, 0.7113113233021328, 0.7279173306056431, 0.6662630183356149, 0.6267975398472377, 0.6211168595722744, 0.6142052752631051, 0.6165859528950283, 0.5950187955583844, 0.5806617225919452, 0.5713464362280709, 0.5904148817062378, 0.5905976125172206, 0.5766857351575579, 0.5580155508858817, 0.5445633275168282, 0.5319301911762783, 0.5262494427817208, 0.5189934798649379, 0.4964707578931536, 0.48903225149427143, 0.49294255461011616, 0.5010853494916644, 0.5072233506611415, 0.49943786008017405, 0.48551598617008757], "val_accuracy": [0.16366666555404663, 0.3766666650772095, 0.4506666660308838, 0.4936666786670685, 0.5230000019073486, 0.5883333086967468, 0.6596666574478149, 0.6433333158493042, 0.6856666803359985, 0.6909999847412109, 0.7056666612625122, 0.6823333501815796, 0.7153333425521851, 0.718666672706604, 0.718666672706604, 0.7250000238418579, 0.7250000238418579, 0.7223333120346069, 0.731333315372467, 0.7333333492279053, 0.7403333187103271, 0.7436666488647461, 0.7493333220481873, 0.7523333430290222, 0.7486666440963745, 0.7506666779518127, 0.7603333592414856, 0.7620000243186951, 0.765666663646698, 0.7793333530426025, 0.7836666703224182, 0.7770000100135803, 0.7733333110809326, 0.7703333497047424, 0.7736666798591614, 0.7799999713897705]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 8, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 3, 1, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 3, 0, 9, 7], [0, 3, 2, 1], [54, 75, 82], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.6608571410179138, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 10, 3, 2, 8, 7, 5, 2, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.sqrt(tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3009984694168377, 2.297227584769335, 2.29374858224869, 2.289950665544604, 2.2873787240046144, 2.2841903006065287, 2.278820530046577, 2.276081140723762, 2.271632959939989, 2.268314720286575, 2.266330852799522, 2.26057507506514, 2.2568895091564585, 2.2527421038494984, 2.248949750098633, 2.245115895737998, 2.238822578801266, 2.2342432898741986, 2.232083882701049, 2.2256781492156437, 2.22028385567832, 2.214565141310293, 2.2106137566357997, 2.20532325491567, 2.1977733527475642, 2.1917491902323794, 2.1856346293179714, 2.176557946592479, 2.1721206674675315, 2.1625069218414996, 2.155993164711467, 2.1468714851792052, 2.1394665950734333, 2.1314973630578904, 2.121519242610284, 2.111481946835098, 2.1022179971328896, 2.089994476141002, 2.0821026106867038, 2.0657983372917172, 2.053681403008812, 2.045578984064181, 2.0330544412411626, 2.016239455315919, 2.002214188195333, 1.9926040276182388, 1.978785609839977, 1.9600782147834424, 1.949810472918445, 1.930687378426238, 1.9164283052017943, 1.8945063040508743, 1.882369619523687, 1.8663669876088052, 1.8446672898179048, 1.8256933064492875, 1.8070590164935065, 1.7918678672637103, 1.7681539039790686, 1.7533698634480315, 1.7417549865750621, 1.7162940788262744, 1.6967825840618853, 1.6789261662114519, 1.6623811295098319, 1.6452296866622378, 1.6244002337846868, 1.6034696563485906, 1.5978411923404603, 1.5769429252195226, 1.56340337408973, 1.5477512470876946, 1.5292166387715187, 1.5121246694715473, 1.4930363310767423, 1.4843998411469819, 1.4709684910507816, 1.4521730912281239, 1.4444774445163544, 1.4338303339904908, 1.4119084353743605, 1.4054364546525275, 1.3900128330111803, 1.3750425303506657, 1.3679185896155353, 1.3501599051334823, 1.3485867976827424, 1.3240052102783872, 1.3145429657718304, 1.3082696095339263, 1.319294676930598, 1.303382174906682, 1.2828104874366908, 1.282126543764677, 1.2670438978193679, 1.2618703906719695, 1.2431935090524897, 1.240194909545204, 1.229709466639574, 1.2250545979679819], "accuracy": [0.09496764093637466, 0.10698718577623367, 0.11028926074504852, 0.12455421686172485, 0.12891295552253723, 0.13921542465686798, 0.14832915365695953, 0.15876370668411255, 0.1744815707206726, 0.1798969805240631, 0.1842557191848755, 0.19852067530155182, 0.21199312806129456, 0.2164839506149292, 0.22454100847244263, 0.23603223264217377, 0.24342887103557587, 0.2557125985622406, 0.254920095205307, 0.2724871337413788, 0.27737417817115784, 0.28305375576019287, 0.2926958203315735, 0.29045039415359497, 0.30207371711730957, 0.3032624423503876, 0.31765949726104736, 0.3283582031726837, 0.32782986760139465, 0.34341567754745483, 0.34420815110206604, 0.3517369031906128, 0.3473781645298004, 0.35781270265579224, 0.3559635579586029, 0.36481308937072754, 0.37141725420951843, 0.37921014428138733, 0.37828555703163147, 0.3897767663002014, 0.3967771828174591, 0.39889049530029297, 0.3953242599964142, 0.4103817343711853, 0.416589617729187, 0.4154008626937866, 0.4173821210861206, 0.42385417222976685, 0.4235900044441223, 0.4299300014972687, 0.43045833706855774, 0.4403645396232605, 0.44551578164100647, 0.4451195299625397, 0.45066702365875244, 0.4575353264808655, 0.4651961326599121, 0.46189406514167786, 0.4550257623195648, 0.47087571024894714, 0.4702152907848358, 0.4768194556236267, 0.4772156774997711, 0.481838583946228, 0.49148064851760864, 0.4913485646247864, 0.5011227130889893, 0.4967639744281769, 0.49808478355407715, 0.5008585453033447, 0.5123497843742371, 0.507330596446991, 0.5112931132316589, 0.5149914026260376, 0.5204068422317505, 0.5246334671974182, 0.5241051316261292, 0.5307092666625977, 0.5381059050559998, 0.5300488471984863, 0.538237988948822, 0.5387663245201111, 0.5399550795555115, 0.540219247341156, 0.548540472984314, 0.5542200207710266, 0.5476158857345581, 0.5555408596992493, 0.5610883831977844, 0.5616167187690735, 0.5555408596992493, 0.5563333630561829, 0.5639941692352295, 0.5667679309844971, 0.5698058605194092, 0.5676925182342529, 0.5785233378410339, 0.5724474787712097, 0.5724474787712097, 0.5831462144851685], "val_loss": [1.9680330412728446, 1.964686393737793, 1.9613749640328544, 1.9580673490251814, 1.9547028541564941, 1.9513216699872697, 1.9479284967694963, 1.9445368903023856, 1.941070216042655, 1.937563691820417, 1.933995246887207, 1.9303648131234306, 1.9266652379717146, 1.922848837716239, 1.918959413255964, 1.9149230548313685, 1.910728863307408, 1.906381675175258, 1.9018747465951102, 1.8972172737121582, 1.892310959952218, 1.8872344153267997, 1.8819996288844518, 1.8765269007001604, 1.8706984519958496, 1.864684786115374, 1.8583877427237374, 1.85173123223441, 1.8448175021580286, 1.8376342909676688, 1.8301204953874861, 1.8222500256129675, 1.81406341280256, 1.8055227143423898, 1.7966570854187012, 1.7873897552490234, 1.7777673857552665, 1.7677545547485352, 1.7573410442897253, 1.7463111877441406, 1.734908172062465, 1.7231881277901786, 1.711012942450387, 1.6982758385794503, 1.6850743974958147, 1.6715897832598006, 1.6576386179242815, 1.6430599689483643, 1.6283136435917445, 1.613044023513794, 1.5973711354391915, 1.581158229282924, 1.5648042474474226, 1.548269408089774, 1.5312134197780065, 1.513887848172869, 1.4962461675916399, 1.4784009116036552, 1.4604547364371163, 1.4424117292676653, 1.4244391577584403, 1.4062477179936, 1.387974500656128, 1.3697918483189173, 1.3515643051692419, 1.3334107739584786, 1.3154140199933733, 1.2974867139543806, 1.2803515706743513, 1.263164418084281, 1.2462920461382185, 1.2298235552651542, 1.213475329535348, 1.1976355143955775, 1.1822535310472762, 1.167320898600987, 1.1528101648603166, 1.1383740561349052, 1.124368395124163, 1.1110409327915736, 1.0978271280016219, 1.0849955081939697, 1.0727500915527344, 1.0608179569244385, 1.049339771270752, 1.0381100858960832, 1.0274850640978133, 1.0167075565883092, 1.0064055238451277, 0.9963765825544085, 0.9872104781014579, 0.9781484603881836, 0.9690349102020264, 0.9606754779815674, 0.9521848814828056, 0.9443896157400948, 0.9364746638706752, 0.9288575308663505, 0.9213059289114816, 0.9141497952597482], "val_accuracy": [0.05700000002980232, 0.08100000023841858, 0.109333336353302, 0.14300000667572021, 0.17766666412353516, 0.21433334052562714, 0.24400000274181366, 0.26766666769981384, 0.2919999957084656, 0.3076666593551636, 0.32499998807907104, 0.33633333444595337, 0.34966665506362915, 0.359333336353302, 0.3686666786670685, 0.375, 0.3816666603088379, 0.38866665959358215, 0.3956666588783264, 0.40033334493637085, 0.4046666622161865, 0.41200000047683716, 0.4216666519641876, 0.43066665530204773, 0.4386666715145111, 0.4423333406448364, 0.4490000009536743, 0.45266667008399963, 0.4569999873638153, 0.46433332562446594, 0.46933332085609436, 0.47333332896232605, 0.476666659116745, 0.484333336353302, 0.48899999260902405, 0.49266666173934937, 0.4973333477973938, 0.5009999871253967, 0.5023333430290222, 0.5076666474342346, 0.512333333492279, 0.515333354473114, 0.5180000066757202, 0.5233333110809326, 0.5260000228881836, 0.527999997138977, 0.5293333530426025, 0.5350000262260437, 0.5396666526794434, 0.5426666736602783, 0.5443333387374878, 0.546999990940094, 0.550000011920929, 0.5506666898727417, 0.5546666383743286, 0.5573333501815796, 0.5586666464805603, 0.5630000233650208, 0.5659999847412109, 0.5686666369438171, 0.5716666579246521, 0.574999988079071, 0.5776666402816772, 0.5809999704360962, 0.5803333520889282, 0.5826666951179504, 0.5843333601951599, 0.5853333473205566, 0.5886666774749756, 0.5953333377838135, 0.597000002861023, 0.5989999771118164, 0.6023333072662354, 0.6066666841506958, 0.6086666584014893, 0.6150000095367432, 0.6193333268165588, 0.6233333349227905, 0.6263333559036255, 0.6303333044052124, 0.6309999823570251, 0.6393333077430725, 0.640999972820282, 0.6446666717529297, 0.6476666927337646, 0.6473333239555359, 0.6510000228881836, 0.6520000100135803, 0.6543333530426025, 0.6549999713897705, 0.6566666960716248, 0.6579999923706055, 0.6586666703224182, 0.6600000262260437, 0.6603333353996277, 0.6613333225250244, 0.6639999747276306, 0.6643333435058594, 0.6660000085830688, 0.6679999828338623]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [31, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 5, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 3, 4, 9, 7], [0, 0, 2, 1], [34, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.5982857346534729, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 8, 3, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2443693542619028, 1.692534049819127, 1.275466417017677, 0.9678090517121913, 0.8898015598484932, 0.8519183875326908, 0.8156567049883046, 0.7933076621519025, 0.7645155102616807, NaN, NaN, NaN, NaN], "accuracy": [0.21661603450775146, 0.4551578462123871, 0.5880332589149475, 0.6446968913078308, 0.6719059348106384, 0.6800950765609741, 0.7014925479888916, 0.7077004313468933, 0.7073041796684265, 0.25901466608047485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.743025234767369, 0.8571183000292096, 0.693057656288147, 0.6807831355503627, 0.6315419503620693, 0.6299927234649658, 0.5753012214388166, 0.5478847026824951, 0.5500764165605817, NaN, NaN, NaN, NaN], "val_accuracy": [0.4856666624546051, 0.6576666831970215, 0.6963333487510681, 0.7120000123977661, 0.7096666693687439, 0.7250000238418579, 0.7433333396911621, 0.7536666393280029, 0.7523333430290222, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [11, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 0, 3, 4, 9, 7], [0, 3, 2, 1], [34, 95, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.43228572607040405, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 8, 3, 4, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30214015329991, 2.3011208137012886, 2.3002698622076125, 2.2991439311448625, 2.2994271933583694, 2.2989532705689184, 2.2963214066081816, 2.296231507310274, 2.294696733353554, 2.2942403753467318, 2.295212908412141, 2.2922088644208847, 2.291610484141495, 2.290686481743126, 2.2898810972012957, 2.2896130386360602, 2.2869641945551353, 2.2861193454560036, 2.2878401138369653, 2.28490947237923, 2.2848003741977174, 2.2830563624458478, 2.2830111490437823, 2.2827532230949577, 2.2816347742376704, 2.280231456242658, 2.2799629911912227, 2.2772939630298565, 2.2784413029851223, 2.276239733418233, 2.276059661417306, 2.274664953636408, 2.274139991384125, 2.274317827710953, 2.2727398975666064, 2.271145184782313, 2.2708016893316048, 2.268854617127779, 2.2696317231351233, 2.2668074227248547, 2.2655894220339827, 2.266710135883517, 2.265611833884275, 2.2634816643993663, 2.2612386758474545, 2.262726987656853, 2.2621329025648462, 2.2608740847454945, 2.2612187766348604, 2.2585230465688566, 2.2593782371329025, 2.2557421127377784, 2.256708040748841, 2.254252511811625, 2.253974826879757, 2.251735290248459, 2.2512082187900484, 2.250804132836417, 2.2483181886984105, 2.2475745802967384, 2.247628607880312, 2.245758584398777, 2.2439778703566886, 2.242671740982495, 2.243277583313089, 2.242510780446077, 2.2400536456238465, 2.2383333287297646, 2.2393343007764512, 2.2381257529681338, 2.2369942735325092, 2.2360748036379166, 2.2345651502953134, 2.2332014289309776, 2.2311490326824597, 2.2305155099894725, 2.2297215370721886, 2.2288439567960436, 2.2285984872181372, 2.227572377804106, 2.2246928027340322, 2.225211868165207, 2.223093675978195, 2.2217606030687005, 2.2197354190999237, 2.2179783274862572, 2.2189068079089225, 2.214500424443392, 2.211608809030382, 2.2130977125877025, 2.214463165391784, 2.212424057979531, 2.2096887230322015, 2.2078293232696717, 2.2064064267981935, 2.2047664090044323, 2.20085440439681, 2.2027784074380996, 2.200020630975929, 2.199301231838], "accuracy": [0.09285431355237961, 0.09496764093637466, 0.09470347315073013, 0.10421344637870789, 0.09813763201236725, 0.10421344637870789, 0.1026284471154213, 0.10579843819141388, 0.11028926074504852, 0.10738343745470047, 0.11042134463787079, 0.11636507511138916, 0.11517632752656937, 0.12217672914266586, 0.12389380484819412, 0.12402588874101639, 0.1298375427722931, 0.13432836532592773, 0.1278562992811203, 0.14093250036239624, 0.13261127471923828, 0.13908334076404572, 0.1434420794248581, 0.14159291982650757, 0.14119666814804077, 0.1426495909690857, 0.14898955821990967, 0.15572579205036163, 0.15017831325531006, 0.15281997621059418, 0.16629242897033691, 0.16655659675598145, 0.15717871487140656, 0.16272619366645813, 0.16219785809516907, 0.17395325005054474, 0.17157575488090515, 0.18042530119419098, 0.1760665625333786, 0.1764628142118454, 0.18399155139923096, 0.18716153502464294, 0.1942940205335617, 0.19218069314956665, 0.19957733154296875, 0.1896711140871048, 0.19138818979263306, 0.1942940205335617, 0.19838859140872955, 0.20353981852531433, 0.1982565075159073, 0.21516312658786774, 0.21080438792705536, 0.21344605088233948, 0.21542729437351227, 0.218465194106102, 0.228899747133255, 0.2238806039094925, 0.22797517478466034, 0.22533351182937622, 0.22823932766914368, 0.22784309089183807, 0.23854179680347443, 0.23761722445487976, 0.23299431800842285, 0.23339056968688965, 0.2417117953300476, 0.24739135801792145, 0.2487121969461441, 0.24897634983062744, 0.252938836812973, 0.2533350884914398, 0.2533350884914398, 0.24976885318756104, 0.2572975754737854, 0.2611279785633087, 0.2591467499732971, 0.2607317268848419, 0.2635054886341095, 0.26958128809928894, 0.26984545588493347, 0.26878878474235535, 0.26641130447387695, 0.2739400267601013, 0.284110426902771, 0.280940443277359, 0.27341169118881226, 0.2801479399204254, 0.29097872972488403, 0.28278958797454834, 0.2802800238132477, 0.28503501415252686, 0.2938845455646515, 0.29560163617134094, 0.2917712330818176, 0.2900541424751282, 0.3073570132255554, 0.2969224750995636, 0.3061682879924774, 0.3007528781890869], "val_loss": [1.97060946055821, 1.9697869164603097, 1.9689686638968331, 1.9681500026157923, 1.9673242568969727, 1.9664989880153112, 1.9656756946018763, 1.9648624147687639, 1.9640441622052873, 1.9632270676749093, 1.9624084745134627, 1.9616004398890905, 1.9607981954302107, 1.9599870954241072, 1.9591779708862305, 1.9583667346409388, 1.9575563839503698, 1.956749779837472, 1.9559362956455775, 1.955127579825265, 1.954308237348284, 1.9534942763192313, 1.9526893751961845, 1.9518805231366838, 1.9510587283543177, 1.950242178780692, 1.94942045211792, 1.9485938889639718, 1.9477710042681013, 1.94694185256958, 1.9461165155683244, 1.945287091391427, 1.9444548743111747, 1.9436286517551966, 1.9427909851074219, 1.94195590700422, 1.941117763519287, 1.9402805055890764, 1.939443588256836, 1.9385921614510673, 1.937736988067627, 1.9368797710963659, 1.936021327972412, 1.9351557322910853, 1.9342812129429408, 1.9334122794015067, 1.9325357164655412, 1.9316346304757255, 1.9307522092546736, 1.9298624311174666, 1.9289663859776087, 1.92805814743042, 1.9271495001656669, 1.9262364251273019, 1.9253181729997908, 1.9243871825081962, 1.9234488351004464, 1.9225084441048759, 1.9215539523533411, 1.9205968720572335, 1.9196384293692452, 1.9186684063502721, 1.9176831245422363, 1.9166896002633231, 1.9156968252999442, 1.9146955353873116, 1.913675240107945, 1.9126501083374023, 1.9116246359688895, 1.9105941908700126, 1.909555435180664, 1.9085025787353516, 1.9074419566563197, 1.9063621248517717, 1.9052692822047643, 1.904179232461112, 1.9030729702540807, 1.901956558227539, 1.900846208844866, 1.8997249603271484, 1.8985707419259208, 1.8974197251456124, 1.8962582179478236, 1.8950818606785365, 1.8938978058951241, 1.892697879246303, 1.891483919961112, 1.8902551106044225, 1.8890032768249512, 1.8877549852643694, 1.88650301524571, 1.8852383749825614, 1.8839504378182548, 1.8826566423688615, 1.881342819758824, 1.8800065858023507, 1.8786509377615792, 1.877291543143136, 1.8759170259748186, 1.8745252064296178], "val_accuracy": [0.03966666758060455, 0.04533333331346512, 0.05133333429694176, 0.057999998331069946, 0.06333333253860474, 0.07000000029802322, 0.07366666942834854, 0.07966666668653488, 0.08699999749660492, 0.09399999678134918, 0.0989999994635582, 0.1066666692495346, 0.11533333361148834, 0.12266666442155838, 0.13099999725818634, 0.14233332872390747, 0.15000000596046448, 0.1586666703224182, 0.1653333306312561, 0.1756666600704193, 0.18066667020320892, 0.1886666715145111, 0.19766665995121002, 0.20666666328907013, 0.21666666865348816, 0.22200000286102295, 0.23233333230018616, 0.2383333295583725, 0.24400000274181366, 0.25066667795181274, 0.257999986410141, 0.2619999945163727, 0.2680000066757202, 0.27399998903274536, 0.2796666622161865, 0.2849999964237213, 0.29100000858306885, 0.2953333258628845, 0.29866665601730347, 0.30399999022483826, 0.3109999895095825, 0.3149999976158142, 0.31833332777023315, 0.3213333189487457, 0.32366666197776794, 0.32600000500679016, 0.3306666612625122, 0.3346666693687439, 0.3386666774749756, 0.34033334255218506, 0.34299999475479126, 0.3466666638851166, 0.35066667199134827, 0.3529999852180481, 0.3580000102519989, 0.35899999737739563, 0.3619999885559082, 0.3636666536331177, 0.3656666576862335, 0.367000013589859, 0.3683333396911621, 0.3700000047683716, 0.37166666984558105, 0.37466666102409363, 0.3766666650772095, 0.3790000081062317, 0.38066667318344116, 0.38066667318344116, 0.3813333213329315, 0.3816666603088379, 0.38499999046325684, 0.3869999945163727, 0.38866665959358215, 0.38999998569488525, 0.390666663646698, 0.39133334159851074, 0.39266666769981384, 0.3956666588783264, 0.39633333683013916, 0.3970000147819519, 0.3996666669845581, 0.4013333320617676, 0.4026666581630707, 0.40400001406669617, 0.4050000011920929, 0.4059999883174896, 0.40700000524520874, 0.4099999964237213, 0.41233333945274353, 0.4126666784286499, 0.41600000858306885, 0.4189999997615814, 0.42100000381469727, 0.42233332991600037, 0.42633333802223206, 0.42800000309944153, 0.4283333420753479, 0.42933332920074463, 0.429666668176651, 0.43166667222976685]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [31, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 4, 3, 4, 9, 7], [0, 0, 2, 1], [34, 75, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [5, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 2, 0, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.7498256784107968e+34, 1.2371661360659486e+21, 8119.911113303177, 2022241.4493049134, 537440663.1007793, NaN, NaN], "accuracy": [0.1270637959241867, 0.10962884873151779, 0.09787346422672272, 0.10196803510189056, 0.10276053100824356, 0.09787346422672272, 0.09998679161071777], "val_loss": [8.209240374607263e+21, 256.5979788643973, 65531.19419642857, 16775586.857142856, 4294550235.428571, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 4, 4, 4, 9, 7], [1, 0, 2], [34, 75, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 2, 2, 2, 0, 1, 8, 4, 4, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.pow(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [31, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 2, 3, 4, 6, 7], [0, 3, 2, 1], [34, 75, 82], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [5, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3242257159415365, 2.3985568918115536, 2.62082113389562, 45785.221301246704, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.055210672318935394, 0.019680358469486237, 0.012019548565149307, 0.08057060092687607, 0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.023904119219099, 2.1241001401628767, 2.7147998809814453, 1.7212699068172036e+21, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.003666666569188237, 0.004666666500270367, 0.02199999988079071, 0.10133333504199982, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [31, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [3, 2, 3, 4, 6, 7, 5, 2, 9], [0, 3, 2, 1], [34, 95, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 2, 2, 2, 0, 1, 16, 13, 9, 4, 2, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, beta))))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3030633645806535, 2.3044873111519784, 2.3059176956547596, 2.30755386675637, 2.311759114753553, 2.3156285765243165, 2.316963020773643, 2.3227443240967722, 2.328213650237741, 2.3397655510993727, 2.3708372167419243, 1.2530284041921857e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.08809932321310043, 0.08519349992275238, 0.08770307898521423, 0.07819310575723648, 0.07898560166358948, 0.07528728246688843, 0.07845727354288101, 0.07938185334205627, 0.07594769448041916, 0.07819310575723648, 0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.972581454685756, 1.9738939830235072, 1.9750343731471471, 1.9768010548182897, 1.9788892609732491, 1.9813916342599052, 1.9840230260576521, 1.9876046180725098, 1.9926116125924247, 2.0029899052211215, 2.0404555456978932, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02866666577756405, 0.024666666984558105, 0.02433333359658718, 0.026000000536441803, 0.02866666577756405, 0.03433333337306976, 0.041333332657814026, 0.06066666543483734, 0.0793333351612091, 0.09566666930913925, 0.09733333438634872, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 3, 0, 0, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [31, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [34, 2, 82], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [2.3029462011057893, 2.3025851114598312, 2.3025849675143384, 2.3025849990053673, 2.302585030496396, 2.3025850619874246, 2.3025850619874246, 2.3025850575156985], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.10011887550354004, 0.09998679161071777, 0.09760929644107819, 0.09998679161071777, 0.1002509593963623, 0.09959053993225098], "val_loss": [1.973644460950579, 1.9736443247113908, 1.973644460950579, 1.9736443247113908, 1.9736442565917969, 1.9736442565917969, 1.9736443247113908, 1.9736443247113908], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10199999809265137, 0.10199999809265137, 0.10133333504199982, 0.10133333504199982, 0.0976666659116745, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [31, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 3, 4, 9, 7], [0, 0, 2, 1], [34, 2, 82], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 2, 2, 2, 0, 1, 9, 7, 5, 2, 3, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [9624292038.8389, 184090981786.22217, 855744079614.7489, 2390812025220.4463, 5099284175970.87, 9391204736691.818], "accuracy": [0.09642054885625839, 0.09391097724437714, 0.09694888442754745, 0.09959053993225098, 0.09879804402589798, 0.10157178342342377], "val_loss": [36220770011.42857, 289723542966.8571, 977766374253.7142, 2317599824749.7144, 4526518791606.857, 7821778073307.429], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [31, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [44, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 2, 3, 4, 6, 7], [0, 0, 2, 1], [34, 95, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3242577397040782, 2.399150640421918, 2.6329306736125955, 11556.865889014285, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.055210672318935394, 0.019680358469486237, 0.012679963372647762, 0.08492933213710785, 0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0240522793361118, 2.1257543563842773, 2.817971706390381, 854525888804.5714, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.003666666569188237, 0.004666666500270367, 0.03166666626930237, 0.09933333098888397, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 1, 3, 0, 9, 7], [0, 3, 2, 1], [34, 75, 82], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [5, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 11, 11, 8, 3, 4, 5, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.306910532529501, 2.3365380390209056, 2.4064604197164425, 2.57374007852086, 3.2367543753474193, 9.825315860158275, 9.46712795392051e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0820235088467598, 0.0408136323094368, 0.014000792056322098, 0.009377889335155487, 0.008189142681658268, 0.010830801911652088, 0.04371945559978485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9869110924857003, 2.0327414785112654, 2.125368731362479, 2.3787246431623186, 3.8666913168770924, 28.691405160086497, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004999999888241291, 0.003666666569188237, 0.004000000189989805, 0.006000000052154064, 0.008666666224598885, 0.009666666388511658, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 2, 3, 4, 6, 7], [0, 3, 2, 1], [34, 95, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 8, 3, 4, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029462190871666, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 1, 3, 0, 9, 7], [0, 3, 2, 1], [34, 75, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08057060092687607, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [31, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 6, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 3, 4, 9, 7], [0, 0, 2, 1], [34, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 14, 14, 9, 5, 2, 13, 13, 9, 4, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302508098700295, 2.302379171279254, 2.3023892341115455, 2.3021540745705065, 2.3033646800971193, 2.30378380159991], "accuracy": [0.09259014576673508, 0.09232597798109055, 0.09008057415485382, 0.09602430462837219, 0.08717474341392517, 0.09351472556591034], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 3, 4, 9, 7], [0, 3, 2, 1], [34, 2, 82], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.02857142873108387, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304024946955705, 2.3076087113746864, 2.311267180607193, 2.3149403176681163, 2.320282366045588, 2.3248775615006894], "accuracy": [0.08849557489156723, 0.08228767663240433, 0.07238145917654037, 0.07040020823478699, 0.057191915810108185, 0.05375776067376137], "val_loss": [1.9748787879943848, 1.9783355167933874, 1.9818344116210938, 1.9854485648018974, 1.9891856057303292, 1.9930566379002161], "val_accuracy": [0.02133333310484886, 0.014000000432133675, 0.007000000216066837, 0.005333333276212215, 0.00566666666418314, 0.005333333276212215]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [9, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 4, 4, 4, 9, 7], [1, 0, 2], [34, 75, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.02857142873108387, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304024915464676, 2.3076087293560636, 2.311267212098222, 2.3149402546860585, 2.3202824290276456, 2.3248775615006894], "accuracy": [0.08849557489156723, 0.08228767663240433, 0.07238145917654037, 0.07040020823478699, 0.057191915810108185, 0.05375776067376137], "val_loss": [1.9748787879943848, 1.9783355167933874, 1.9818344116210938, 1.9854485648018974, 1.9891856057303292, 1.9930565697806222], "val_accuracy": [0.02133333310484886, 0.014000000432133675, 0.007000000216066837, 0.005333333276212215, 0.00566666666418314, 0.005333333276212215]}}]