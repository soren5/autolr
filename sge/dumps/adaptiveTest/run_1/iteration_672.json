[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 1, 1, 4, 5, 4, 6, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [4, 7, 3, 4], [0, 0], [64, 18], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8251428604125977, "mapping_values": [1, 4, 4, 3, 1, 1, 16, 16, 9, 7, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), grad))), grad)), tf.math.add(beta, grad)), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.004244006635837, 1.584947580816314, 1.1520146520193526, 0.881182677135523, 0.8212525861264219, 0.7635240316579938, 0.6932850042826716, 0.6805062854389206, 0.6189077488655869, 0.6319102446211957, 0.5992586685052055, 0.5513391187949629, 0.5718504206820282, 0.542536252202485, 0.5406674162161553, 0.5108446462625809, 0.4945174922694021, 0.5078259289713426, 0.5042483023270766, 0.482249307303365, 0.46520973758737816, 0.4542335841311219, 0.46911582811287195, 0.44593929937801907, 0.43068340776571584, 0.426380318968508, 0.3870492232174937, 0.39569688733337954, 0.4092919264628887, 0.4229428183566373, 0.3736104127115593, 0.3863032294963534, 0.36995546214490155], "accuracy": [0.3143574297428131, 0.4785365164279938, 0.5865803956985474, 0.6686038970947266, 0.6959450244903564, 0.7156254053115845, 0.7412495017051697, 0.7408532500267029, 0.7621186375617981, 0.7656848430633545, 0.7689869403839111, 0.7938185334205627, 0.7803460359573364, 0.7918372750282288, 0.793422281742096, 0.8055738806724548, 0.8181217908859253, 0.8138951063156128, 0.8062343001365662, 0.821820080280304, 0.8274996876716614, 0.8300092220306396, 0.8208954930305481, 0.8356888294219971, 0.8409721255302429, 0.8401796221733093, 0.8634262084960938, 0.8541803956031799, 0.8442742228507996, 0.8432175517082214, 0.8599920868873596, 0.8557654023170471, 0.8627657890319824], "val_loss": [1.565310341971261, 0.8538912875311715, 0.6848534175327846, 0.731808968952724, 0.6169306210109166, 0.5499624184199742, 0.518254143851144, 0.5105206455503192, 0.5088056325912476, 0.4807881627764021, 0.45092994826180594, 0.4865765060697283, 0.4604524714606149, 0.4333139402525766, 0.42502628905432566, 0.42656387601579937, 0.47782959256853375, 0.4064199243273054, 0.41120320558547974, 0.40468173367636545, 0.40873120512281147, 0.4147893956729344, 0.3839476193700518, 0.3821905851364136, 0.36481977360589163, 0.34928107261657715, 0.3800395556858608, 0.3374001979827881, 0.40933139835085186, 0.36038917303085327, 0.3651094266346523, 0.3514538322176252, 0.3554972154753549], "val_accuracy": [0.33933332562446594, 0.6006666421890259, 0.7070000171661377, 0.6826666593551636, 0.7076666951179504, 0.7473333477973938, 0.7643333077430725, 0.7756666541099548, 0.7730000019073486, 0.7710000276565552, 0.8073333501815796, 0.765333354473114, 0.7960000038146973, 0.8090000152587891, 0.8140000104904175, 0.8220000267028809, 0.8016666769981384, 0.8299999833106995, 0.8289999961853027, 0.8306666612625122, 0.8193333148956299, 0.8100000023841858, 0.8399999737739563, 0.8349999785423279, 0.8476666808128357, 0.8569999933242798, 0.8373333215713501, 0.859000027179718, 0.82833331823349, 0.8479999899864197, 0.8429999947547913, 0.8539999723434448, 0.8506666421890259]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 2, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 0], [67], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8134285807609558, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 7, 4, 1, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0043313703233414, 1.5784217302652161, 1.1253447084457742, 0.9681699003651787, 0.8168095653602838, 0.7696712465255394, 0.7198335974759051, 0.6757907086532854, 0.6282432555538269, 0.6331587852094592, 0.6049360175095592, 0.5626233529263578, 0.5858459607437854, 0.5463875846666919, 0.5355014341689371, 0.525977300977222, 0.4990089868415915, 0.5058852112162555, 0.514874171358861, 0.47559714515715257, 0.4752514657130599, 0.4605277018020528, 0.43518370711934123], "accuracy": [0.31422534584999084, 0.478140264749527, 0.5964865684509277, 0.6382247805595398, 0.694360077381134, 0.7112666964530945, 0.7268524765968323, 0.7452120184898376, 0.7578919529914856, 0.7631752490997314, 0.7675340175628662, 0.7897239327430725, 0.7804781198501587, 0.7930260300636292, 0.7926297783851624, 0.7980451583862305, 0.8142913579940796, 0.8121780753135681, 0.8024039268493652, 0.8228767514228821, 0.8231409192085266, 0.8293488025665283, 0.8392550349235535], "val_loss": [1.561690023967198, 0.8159800597599575, 0.6284985712596348, 0.6260645389556885, 0.6586416619164603, 0.5787815707070487, 0.5255496161324638, 0.4966045618057251, 0.4983833517347063, 0.4921401398522513, 0.4466905082975115, 0.46467156069619314, 0.44284037181309294, 0.43925927366529194, 0.41284918785095215, 0.45015077931540354, 0.469312173979623, 0.4162808656692505, 0.4180552193096706, 0.43114945718220304, 0.40019937072481426, 0.4138230340821402, 0.43387229101998465], "val_accuracy": [0.34033334255218506, 0.6110000014305115, 0.7269999980926514, 0.7263333201408386, 0.6973333358764648, 0.7429999709129333, 0.750333309173584, 0.7786666750907898, 0.7693333625793457, 0.762666642665863, 0.8063333630561829, 0.7903333306312561, 0.8109999895095825, 0.8096666932106018, 0.8199999928474426, 0.8100000023841858, 0.7873333096504211, 0.8293333053588867, 0.8196666836738586, 0.8173333406448364, 0.8276666402816772, 0.8190000057220459, 0.8023333549499512]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 5, 0, 6, 4, 6, 1, 4, 3, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0], [4, 7, 3, 4, 8, 3, 0], [7, 0], [67], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8100000023841858, "mapping_values": [1, 4, 4, 3, 1, 1, 15, 15, 8, 7, 0, 13, 9, 7, 2, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(grad, tf.math.add(beta, alpha)), tf.math.add(beta, grad)), grad)), tf.math.add(beta, grad)), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.pow(sigma, sigma)))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.004365050986364, 1.5807851652159997, 1.1247449637545792, 0.9419608431768739, 0.7965647863311979, 0.7612734049491721, 0.6976595488694901, 0.6849785499946868, 0.6271865464094497, 0.6276185732350106, 0.6021283853953115, 0.553702846069094, 0.5871779806090226, 0.5564804592420396, 0.5365754423746422, 0.5211080115909952, 0.4987016215442178, 0.5125005701080746, 0.5131701068272916, 0.4743312540039835, 0.4744043307155745, 0.4606400310536575, 0.5050431372758467, 0.4453529503445946, 0.42998280158022123, 0.4361119437463342, 0.3993955243493525, 0.42662678878808996, 0.4162326170240553, 0.4164220359008609, 0.3788911669781148, 0.3865908413452322, 0.3736096195863805, 0.36968796763516465, 0.3664265187102192], "accuracy": [0.31422534584999084, 0.4776119291782379, 0.5947695374488831, 0.6436402201652527, 0.6976621150970459, 0.7113987803459167, 0.7305507659912109, 0.7378153204917908, 0.7592127919197083, 0.7663452625274658, 0.7635715007781982, 0.7903843522071838, 0.776251494884491, 0.7847048044204712, 0.7968564033508301, 0.8041210174560547, 0.8175934553146362, 0.805177628993988, 0.8038568496704102, 0.8232730031013489, 0.8239334225654602, 0.8276317715644836, 0.8131026029586792, 0.8337075710296631, 0.8421608805656433, 0.8321225643157959, 0.8525954484939575, 0.8411042094230652, 0.843481719493866, 0.8438779711723328, 0.86118084192276, 0.8551049828529358, 0.8639545440673828, 0.8615770936012268, 0.863029956817627], "val_loss": [1.5628085477011544, 0.815991827419826, 0.6507278169904437, 0.6305667672838483, 0.6447622776031494, 0.5807416098458427, 0.5386886085782733, 0.5146117040089199, 0.5104806082589286, 0.5083980730601719, 0.45267343521118164, 0.4791229622704642, 0.520459634917123, 0.4358502967017038, 0.4231343184198652, 0.5175153527941022, 0.46344413076128277, 0.41816049814224243, 0.40987413270132883, 0.41832268238067627, 0.41864717858178274, 0.42748506580080303, 0.38700829233442036, 0.37335228068487986, 0.37710085936955046, 0.35948202439716886, 0.40435475962502615, 0.41104510000773836, 0.42687045676367624, 0.356965286391122, 0.3649277687072754, 0.35613031898226055, 0.36275458335876465, 0.3715066228594099, 0.40134185552597046], "val_accuracy": [0.3396666646003723, 0.612666666507721, 0.718999981880188, 0.7260000109672546, 0.6996666789054871, 0.7350000143051147, 0.7459999918937683, 0.7726666927337646, 0.7630000114440918, 0.7509999871253967, 0.8096666932106018, 0.7736666798591614, 0.7603333592414856, 0.8076666593551636, 0.8130000233650208, 0.800000011920929, 0.8050000071525574, 0.8240000009536743, 0.8223333358764648, 0.8240000009536743, 0.8173333406448364, 0.8019999861717224, 0.8349999785423279, 0.8399999737739563, 0.8379999995231628, 0.8510000109672546, 0.8103333115577698, 0.8140000104904175, 0.8133333325386047, 0.8536666631698608, 0.8396666646003723, 0.8460000157356262, 0.847000002861023, 0.8479999899864197, 0.8176666498184204]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 4, 1, 9, 4, 5, 4, 6, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [0, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8094285726547241, "mapping_values": [1, 4, 4, 3, 1, 1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.square(grad), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.004253483876702, 1.5864830359239872, 1.1431707481524853, 0.9130526674563748, 0.811248287178695, 0.7587306249442433, 0.7270963623806816, 0.6667390660193492, 0.6252965400515295, 0.6412220430207243, 0.5972644705593531, 0.5719279426593727, 0.5792125969704006, 0.5492933892602256, 0.5475147585622575, 0.5007916205216865, 0.49961338384418186, 0.5118376952412106, 0.5125475928232639, 0.47515155378743373, 0.4763511142923123, 0.4738633640414578, 0.4548160415937431, 0.43570106311512663, 0.4122117841012285, 0.43473668158518847, 0.4024919182310141, 0.4319947813448731, 0.40940444297195977, 0.40323861651275106, 0.3799697691423388], "accuracy": [0.3143574297428131, 0.47827234864234924, 0.5915995240211487, 0.6613393425941467, 0.6926429867744446, 0.7162858247756958, 0.7273808121681213, 0.7503632307052612, 0.759609043598175, 0.7618544697761536, 0.7720248103141785, 0.7814027070999146, 0.78113853931427, 0.7907806038856506, 0.7915731072425842, 0.8138951063156128, 0.8128384351730347, 0.8087438941001892, 0.807158887386322, 0.8230088353157043, 0.8214238286018372, 0.8219521641731262, 0.8280280232429504, 0.8404437899589539, 0.8496896028518677, 0.8368775844573975, 0.8535200357437134, 0.8413683772087097, 0.8473120927810669, 0.8491612672805786, 0.8597279191017151], "val_loss": [1.5646749564579554, 0.84833334173475, 0.8888535499572754, 0.6105612516403198, 0.5864006791796003, 0.5967420509883335, 0.5108958823340279, 0.48689344951084684, 0.5056802715573993, 0.5243983609335763, 0.462754419871739, 0.4534751517432077, 0.45324221679142546, 0.4442578213555472, 0.41985003437314716, 0.4515787022454398, 0.4708532265254429, 0.43033195393426077, 0.4010328395026071, 0.4045939530645098, 0.42808733667646137, 0.41199042967387606, 0.38602409192493986, 0.3732701369694301, 0.3936401179858616, 0.3494487830570766, 0.39210729939596994, 0.3808680772781372, 0.39373299905232023, 0.36036049468176706, 0.3381620815822056], "val_accuracy": [0.33933332562446594, 0.5960000157356262, 0.5866666436195374, 0.7250000238418579, 0.7459999918937683, 0.746999979019165, 0.7770000100135803, 0.7929999828338623, 0.7770000100135803, 0.7506666779518127, 0.79666668176651, 0.8019999861717224, 0.8050000071525574, 0.8059999942779541, 0.8176666498184204, 0.8003333210945129, 0.7943333387374878, 0.8216666579246521, 0.8289999961853027, 0.8299999833106995, 0.8149999976158142, 0.8066666722297668, 0.8389999866485596, 0.8410000205039978, 0.8356666564941406, 0.8573333621025085, 0.8289999961853027, 0.8349999785423279, 0.8316666483879089, 0.8460000157356262, 0.8569999933242798]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8091428279876709, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.930386636613335, 1.3500193535470693, 0.9179070407310418, 0.8613637347562108, 0.7675138415126375, 0.7270081503406066, 0.7042184194569354, 0.6727126095792826, 0.6376023351351, 0.6351390978553434, 0.6015842559157802, 0.5760090515172996, 0.5896769179927517, 0.5764966242427697, 0.553026613384867, 0.5375924849270861, 0.5154723299650263, 0.5307784688912047, 0.5159086420504235, 0.49452046437301905], "accuracy": [0.3567560315132141, 0.5550125241279602, 0.6608110070228577, 0.6789063811302185, 0.7087571024894714, 0.7283053994178772, 0.7300224304199219, 0.7453441023826599, 0.7604015469551086, 0.7622507214546204, 0.778232753276825, 0.7835160493850708, 0.7798177003860474, 0.7852331399917603, 0.793422281742096, 0.8001585006713867, 0.8039889335632324, 0.8014793395996094, 0.8030643463134766, 0.8170651197433472], "val_loss": [1.634375946862357, 0.7435241597039359, 0.6142964703696114, 0.5913395881652832, 0.5559110130582537, 0.5679175683430263, 0.5007489579064506, 0.5203220163072858, 0.4942960228238787, 0.4717801128114973, 0.46480064732687815, 0.4663562434060233, 0.4971918889454433, 0.4508742945534842, 0.4286752087729318, 0.4405787331717355, 0.4513214996882847, 0.42894853012902395, 0.43068081992013113, 0.44045376777648926], "val_accuracy": [0.5456666946411133, 0.6526666879653931, 0.7433333396911621, 0.7319999933242798, 0.7599999904632568, 0.7329999804496765, 0.7763333320617676, 0.7506666779518127, 0.778333306312561, 0.7990000247955322, 0.8046666383743286, 0.8016666769981384, 0.7829999923706055, 0.8083333373069763, 0.8213333487510681, 0.815666675567627, 0.8063333630561829, 0.8203333616256714, 0.8193333148956299, 0.812333345413208]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 8, 0, 6, 4, 6, 1, 4, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 8, 6, 4], [0, 0], [64, 29], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8065714240074158, "mapping_values": [1, 4, 4, 3, 1, 1, 5, 5, 3, 2, 0, 3, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.128351932629429, 1.9554894930808426, 1.7327935843656028, 1.3915338194239582, 1.1656309676334102, 0.9716500280051734, 0.8707594981975779, 0.860971346074375, 0.8170765115285452, 0.8316311177529081, 0.7334132773481608, 0.6967281114864563, 0.6693847840094627, 0.664137451435518, 0.6336515763054403, 0.6229374836133912, 0.6010259672194392, 0.6275022741731415, 0.5721485403471808, 0.5534584779056655, 0.5544860403944929, 0.5442660392834415, 0.5453400666671832, 0.5181708305172712, 0.5177446693642548, 0.5115108617922539, 0.5200762535445269, 0.5209943483439828, 0.47863708471719696, 0.4851968307237521, 0.4756596923708963, 0.46500238547503375, 0.4667071324171974, 0.46625325269136036, 0.45780194819705705], "accuracy": [0.2880729138851166, 0.37168142199516296, 0.4027208983898163, 0.5028398036956787, 0.5526350736618042, 0.6263373494148254, 0.6649055480957031, 0.658961832523346, 0.684982180595398, 0.703209638595581, 0.713379979133606, 0.7256637215614319, 0.7467969655990601, 0.7407211661338806, 0.7580240368843079, 0.7647602558135986, 0.7712323069572449, 0.7681944370269775, 0.78113853931427, 0.7910447716712952, 0.7825914621353149, 0.7927618622779846, 0.7969884872436523, 0.8034605979919434, 0.8014793395996094, 0.8010830879211426, 0.8149517774581909, 0.8038568496704102, 0.8198388814926147, 0.8128384351730347, 0.8191784620285034, 0.8232730031013489, 0.8230088353157043, 0.8234050869941711, 0.8348963260650635], "val_loss": [1.874556541442871, 1.8396778106689453, 1.1518358162471227, 1.1420862674713135, 0.9290946211133685, 0.7194804634366717, 0.6656765256609235, 0.6192839656557355, 0.6188263211931501, 0.5512238400323051, 0.5317988565989903, 0.5925393956048148, 0.6191559519086566, 0.506082364491054, 0.5109466654913766, 0.528315578188215, 0.5327949523925781, 0.4903776986258371, 0.4537121738706316, 0.47086564132145475, 0.4765160935265677, 0.47879256520952496, 0.45068369592939106, 0.4905963625226702, 0.4560383217675345, 0.4152397428240095, 0.4649426426206316, 0.4372946449688503, 0.4449760232652937, 0.4036204389163426, 0.39344546624592375, 0.40339975697653635, 0.40574391399111065, 0.43948996918542044, 0.3961805871554783], "val_accuracy": [0.26766666769981384, 0.19733333587646484, 0.5913333296775818, 0.5099999904632568, 0.54666668176651, 0.6656666398048401, 0.6826666593551636, 0.7243333458900452, 0.7563333511352539, 0.7603333592414856, 0.7593333125114441, 0.7286666631698608, 0.7243333458900452, 0.7630000114440918, 0.768666684627533, 0.7633333206176758, 0.7836666703224182, 0.7953333258628845, 0.8066666722297668, 0.7839999794960022, 0.7696666717529297, 0.7803333401679993, 0.8086666464805603, 0.7873333096504211, 0.7836666703224182, 0.8226666450500488, 0.7976666688919067, 0.7866666913032532, 0.7996666431427002, 0.8323333263397217, 0.828000009059906, 0.8236666917800903, 0.8173333406448364, 0.8206666707992554, 0.8293333053588867]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 2, 1, 3, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7968571186065674, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3714713751443104, 1.873041345443015, 1.6744066825112678, 1.2452300524966686, 1.0365928267254854, 0.938282145855213, 0.8493933326469641, 0.783793418871303, 0.7231908848477455, 0.6991491626754743, 0.7281530722493524, 0.6417178318185923, 0.6223413650433086, 0.5970151721919453, 0.5820585522259923, 0.5695549971423428, 0.5888967743528959, 0.5502026949135415, 0.5341843219520457], "accuracy": [0.27724209427833557, 0.40126800537109375, 0.4636111557483673, 0.5608242154121399, 0.618280291557312, 0.6547351479530334, 0.678642213344574, 0.7028133869171143, 0.7228899598121643, 0.7302865982055664, 0.7263241410255432, 0.76542067527771, 0.7606657147407532, 0.7774402499198914, 0.7798177003860474, 0.7816668748855591, 0.7741381525993347, 0.7946110367774963, 0.8025360107421875], "val_loss": [1.794454642704555, 1.199699810573033, 1.341545922415597, 0.8178156614303589, 0.7268558059419904, 0.66305182661329, 0.6143717254911151, 0.5626518726348877, 0.5259018114634922, 0.5972344705036708, 0.5075749499457223, 0.5061744621821812, 0.506975667817252, 0.4611290693283081, 0.4654834270477295, 0.5213759286063058, 0.45735020296914236, 0.46166339942387175, 0.4560004643031529], "val_accuracy": [0.48266667127609253, 0.49900001287460327, 0.5113333463668823, 0.628333330154419, 0.7143333554267883, 0.7013333439826965, 0.7293333411216736, 0.746999979019165, 0.7670000195503235, 0.7250000238418579, 0.7773333191871643, 0.7606666684150696, 0.7636666893959045, 0.8023333549499512, 0.7973333597183228, 0.7549999952316284, 0.8003333210945129, 0.7873333096504211, 0.7929999828338623]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 5, 6, 1, 5, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7577142715454102, "mapping_values": [1, 4, 4, 3, 1, 1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0435891814314378, 1.3675590248911562, 0.9939005128254964, 0.9329039958395332, 0.8409745126604451, 0.7355643514912316, 0.7295642133402142, 0.6991500653579423, 0.6848612085325276, 0.6765117635973819], "accuracy": [0.3179236650466919, 0.5320301055908203, 0.6346585750579834, 0.6396777033805847, 0.6778497099876404, 0.7187954187393188, 0.7250033020973206, 0.7304186820983887, 0.7290979027748108, 0.7338528633117676], "val_loss": [1.3756396770477295, 0.7242141110556466, 0.6637651409421649, 0.6244714600699288, 0.566429853439331, 0.5454067332404, 0.5550801072801862, 0.5596826417105538, 0.6087368386132377, 0.5694331782204765], "val_accuracy": [0.5009999871253967, 0.6963333487510681, 0.7086666822433472, 0.7086666822433472, 0.7540000081062317, 0.7480000257492065, 0.7409999966621399, 0.7166666388511658, 0.706333339214325, 0.7353333234786987]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 6, 9, 4, 1, 1, 6, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 0, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7037143111228943, "mapping_values": [1, 4, 4, 3, 1, 1, 14, 14, 8, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), grad)), tf.math.add(beta, grad))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.371398107266429, 1.9092856056229501, 1.4416195802905256, 1.1778587078641922, 1.0285282451415878, 0.8939992885988906, 0.8377248959502902, 0.7656908274925049, 0.7210385744928479, 0.7126154274657701], "accuracy": [0.27763834595680237, 0.39043718576431274, 0.5000660419464111, 0.5894861817359924, 0.6178840398788452, 0.6679434776306152, 0.6896050572395325, 0.7098137736320496, 0.7331924438476562, 0.7327961921691895], "val_loss": [1.7950021880013602, 1.4796673229762487, 1.1703526973724365, 0.7351202964782715, 0.6704697268349784, 0.6587225539343697, 0.7016985586711338, 0.61995530128479, 0.5892401933670044, 0.6137334959847587], "val_accuracy": [0.48233333230018616, 0.3880000114440918, 0.5976666808128357, 0.6896666884422302, 0.7310000061988831, 0.7120000123977661, 0.6753333210945129, 0.7269999980926514, 0.7233333587646484, 0.7129999995231628]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [0, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10771428793668747, "mapping_values": [1, 4, 4, 3, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5291535097295266, 2.304687033271462, 2.303149377759642, 2.3028362685064865, 2.3029814875908436, 2.3028323419215955], "accuracy": [0.1744815707206726, 0.09549596905708313, 0.09853387624025345, 0.09325055778026581, 0.09232597798109055, 0.10011887550354004], "val_loss": [1.9748766081673759, 1.9740266799926758, 1.973850863320487, 1.9736804280962263, 1.9736907141549247, 1.9736709594726562], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10233332961797714, 0.10366666316986084, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [38, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 4, 1, 9, 4, 5, 4, 6, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [0, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.square(grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30388450052571, 2.3206023419175748, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09021265059709549, 0.08426892012357712, 0.08928807079792023, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9750053542000907, 2.0050038610185896, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02199999988079071, 0.1003333330154419, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [76, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 2, 6, 9, 4, 1, 1, 5, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 0, 0, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 46, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4.47335602342492, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17117950320243835, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1120787348066057, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 1, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(beta, grad)), tf.math.add(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 6, 6, 4, 1, 1, 6, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 9, 8, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad)), grad)), tf.math.add(beta, grad)), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06379606574773788, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 2, 2, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 14, 14, 9, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), beta)), tf.math.add(beta, beta))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.7545773105592616e+16, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05243692919611931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [61, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 1, 9, 4, 6, 4, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [0, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 13, 13, 7, 6, 3, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(beta, grad)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302402904367151, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 6, 9, 4, 1, 1, 6, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 0, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [503.66157395218374, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04173821210861206, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5844500918.857142, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 1, 9, 4, 5, 4, 6, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [0, 0], [84], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302402904367151, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 3, 1, 9, 4, 6, 4, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 8, 6, 9, 3, 6, 0, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 0, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [35, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]