[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.7480000257492065, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.291099668572592, 2.2167091589436287, 2.015602368704474, 1.5939732892496585, 1.3584974879019327, 1.2577190770291697, 0.9530820329474924, 0.9128473234245916, 0.8568906284767356, 0.8198494218784852, 0.808593732459497, 0.7769034753039749, 0.7269908904462459, 0.7395781112101415, 0.7261122227612582, 0.695702517100329, 0.6849557419557613, 0.6900833541879943, 0.6517743022922732, 0.6289286685578811, 0.6089691702621394, 0.6101462218849933, 0.6009178844425326, 0.5850261671353231, 0.5653162217174837, 0.5630361100607355, 0.5459068802133322, 0.5443845951262718, 0.5313743328956833, 0.5180927705708087, 0.509164384508555, 0.5163618723289007, 0.5027126933306184, 0.5029376005932734, 0.4868494493299078, 0.48691457534400057, 0.4807759479383011, 0.48007392382199787, 0.4755529750016986, 0.4685220722635078, 0.462141366903068, 0.45936569343578737, 0.4625948615447956, 0.4378458530265799, 0.43193997773574944, 0.4354983351060885, 0.4309984519378998, 0.423015782464182, 0.4138259251419075, 0.4071671509188495], "accuracy": [0.11913882195949554, 0.28622373938560486, 0.3995509147644043, 0.47404569387435913, 0.5416721701622009, 0.5971469879150391, 0.6535464525222778, 0.6720380187034607, 0.6852463483810425, 0.6902654767036438, 0.6923788189888, 0.7051908373832703, 0.7174745798110962, 0.7186633348464966, 0.72672039270401, 0.7313432693481445, 0.7450799345970154, 0.7360982894897461, 0.7559106945991516, 0.7578919529914856, 0.7650244235992432, 0.7721568942070007, 0.7730814814567566, 0.7792893648147583, 0.7816668748855591, 0.7866860628128052, 0.7944789528846741, 0.7959318161010742, 0.800290584564209, 0.7992339134216309, 0.802800178527832, 0.802271842956543, 0.8103289008140564, 0.8132346868515015, 0.813498854637146, 0.8193105459213257, 0.8204993009567261, 0.8170651197433472, 0.8208954930305481, 0.8265751004219055, 0.8277638554573059, 0.826310932636261, 0.8252542614936829, 0.8368775844573975, 0.8354246616363525, 0.8323867321014404, 0.8356888294219971, 0.8400475382804871, 0.8399154543876648, 0.8430854678153992], "val_loss": [1.9317336082458496, 1.818983895438058, 1.4794396332332067, 0.9787631034851074, 0.7679674114499774, 0.7141102722712925, 0.6744649580546788, 0.6858895165579659, 0.6111751454217094, 0.5870679616928101, 0.5994855676378522, 0.5720735618046352, 0.57219512122018, 0.569513201713562, 0.5557083402361188, 0.5328179597854614, 0.526680486542838, 0.5036837032863072, 0.4817864554268973, 0.47199441705431255, 0.4647317273276193, 0.46339782646724154, 0.4564669132232666, 0.44567649705069406, 0.4421831709997995, 0.44628030913216726, 0.4339311974389212, 0.43414885657174246, 0.43062931299209595, 0.4217678563935416, 0.41718211344310213, 0.41554554871150423, 0.4120039939880371, 0.4092875463621957, 0.4092285633087158, 0.4079615899494716, 0.4000567538397653, 0.3935301218714033, 0.39143675565719604, 0.3939001304762704, 0.39499140637261526, 0.39399742228644236, 0.3839339699063982, 0.38126719849450247, 0.3806949087551662, 0.3838449375970023, 0.3809841700962612, 0.3808933751923697, 0.3821702429226467, 0.3967502883502415], "val_accuracy": [0.36633333563804626, 0.4216666519641876, 0.512666642665863, 0.6456666588783264, 0.6826666593551636, 0.7106666564941406, 0.7203333377838135, 0.722000002861023, 0.7366666793823242, 0.7450000047683716, 0.7400000095367432, 0.7419999837875366, 0.7450000047683716, 0.7509999871253967, 0.7573333382606506, 0.7710000276565552, 0.7770000100135803, 0.7816666960716248, 0.7839999794960022, 0.7923333048820496, 0.7993333339691162, 0.8050000071525574, 0.7993333339691162, 0.8113333582878113, 0.8196666836738586, 0.8186666369438171, 0.8206666707992554, 0.8190000057220459, 0.8183333277702332, 0.8226666450500488, 0.824999988079071, 0.8220000267028809, 0.8286666870117188, 0.8303333520889282, 0.8339999914169312, 0.8343333601951599, 0.8386666774749756, 0.8410000205039978, 0.8426666855812073, 0.8423333168029785, 0.8433333039283752, 0.8429999947547913, 0.8473333120346069, 0.8446666598320007, 0.8476666808128357, 0.843999981880188, 0.8460000157356262, 0.8473333120346069, 0.8473333120346069, 0.8450000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 8, 8, 6, 2, 4, 0, 5, 6, 8, 4, 4, 6, 3, 6, 4, 2], [3, 0, 2, 0, 3, 1, 2, 0, 2, 2, 2, 3, 3], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7394285798072815, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2962643657740256, 2.2553300638051477, 2.1702984585155507, 1.9861304289345822, 1.6514393074983902, 1.4228856194808168, 1.3767308793000541, 1.212082574333198, 0.9773692922459271, 0.9053475307026371, 0.9077241660471307, 0.842139519200963, 0.819602150029636, 0.8088898858090654, 0.7939424617116352, 0.7815681451725182, 0.7604333342121514, 0.7233271808152532, 0.7279435581361707, 0.7196476855739043, 0.7099417464182975, 0.6978950218958484, 0.6862722302645173, 0.6806922069535578, 0.6597917532057983, 0.6295642709341567, 0.6020898622938072, 0.6105038271509599, 0.6132645711308662, 0.5855110090611209, 0.5849962877150241, 0.5835859163829978, 0.5696405127158396, 0.5566645810522534, 0.5521912229390208, 0.555634050171814, 0.5449626291149312, 0.5303047012186888, 0.5513127869414048, 0.5402526975567661, 0.5218844639311818, 0.522459555217036, 0.5175082705213315, 0.5117029196960012, 0.5084771633132448, 0.4934070558438385, 0.48405815643043, 0.48273051004714623, 0.4912716802541748, 0.4776672059715605, 0.4650993797214134, 0.46910244050105926, 0.4601757464635925, 0.4709473945965085, 0.4522519410522528, 0.44796299704502696, 0.4437057972662894, 0.4448077055354868, 0.43592026726586425, 0.44779800056324753, 0.4401769035362596, 0.4290183403543619, 0.42444967667361483, 0.41474191791912696, 0.4182502053212559, 0.4108699657551412, 0.4122537360286133, 0.40624787296601383, 0.40298616043753893, 0.39885425344827924, 0.3890257423005289, 0.37327072343192064, 0.391976689468868, 0.3842474056855326, 0.3859054956808066, 0.3705741940566877, 0.3683035212374949, 0.3726678739654043, 0.37026240867457416, 0.3588211030307274, 0.36096266949291733], "accuracy": [0.10579843819141388, 0.21621978282928467, 0.33905693888664246, 0.40523049235343933, 0.45991283655166626, 0.5095760226249695, 0.5452384352684021, 0.6013736724853516, 0.6478668451309204, 0.6483951807022095, 0.6733588576316833, 0.6865671873092651, 0.6907938122749329, 0.6956809163093567, 0.6984546184539795, 0.7020208835601807, 0.7129837274551392, 0.7234182953834534, 0.7219653725624084, 0.7296261787414551, 0.7281733155250549, 0.7341170310974121, 0.7396644949913025, 0.7449478507041931, 0.7404569983482361, 0.7582882046699524, 0.7721568942070007, 0.7681944370269775, 0.7670056819915771, 0.7765156626701355, 0.7771760821342468, 0.7784969210624695, 0.7795535326004028, 0.7857614755630493, 0.7931581139564514, 0.7907806038856506, 0.8026680946350098, 0.8090080618858337, 0.798309326171875, 0.8016114234924316, 0.8049134612083435, 0.8021397590637207, 0.8096684813499451, 0.807158887386322, 0.8037247657775879, 0.8063663840293884, 0.8202351331710815, 0.8197067975997925, 0.8227446675300598, 0.8227446675300598, 0.8231409192085266, 0.8236692547798157, 0.8339717388153076, 0.8264430165290833, 0.832650899887085, 0.8368775844573975, 0.8342359066009521, 0.8347642421722412, 0.8412362933158875, 0.8293488025665283, 0.8360850811004639, 0.8378021121025085, 0.8425571322441101, 0.8448025584220886, 0.8436138033866882, 0.8451988101005554, 0.847840428352356, 0.8504821062088013, 0.8469158411026001, 0.8487650156021118, 0.8506141901016235, 0.8599920868873596, 0.8499537706375122, 0.8533879518508911, 0.8581429123878479, 0.8646149635314941, 0.8639545440673828, 0.8590674996376038, 0.8581429123878479, 0.8622375130653381, 0.8679170608520508], "val_loss": [1.9489524023873466, 1.8923873901367188, 1.7763774735586983, 1.5075233663831438, 1.106297492980957, 0.8548389162336077, 0.7542464733123779, 0.7182282890592303, 0.6647655282701764, 0.6937283447810582, 0.6771351609911237, 0.6124654497419085, 0.6012039695467267, 0.5925150428499494, 0.5983939511435372, 0.5842300994055611, 0.5689574139458793, 0.5641069752829415, 0.5607398067201886, 0.5520389420645577, 0.5364706005368914, 0.5319601127079555, 0.5216084889003209, 0.5085947854178292, 0.48740482330322266, 0.4730032171521868, 0.4673044851848057, 0.4711166279656546, 0.4681306907108852, 0.4563737767083304, 0.4502877507890974, 0.447370103427342, 0.4438990695135934, 0.45033625194004606, 0.4519186871392386, 0.4436775786536081, 0.43425185339791433, 0.42980956179755075, 0.4328766550336565, 0.4257010987826756, 0.4205899068287441, 0.42302521637507845, 0.42328111614499775, 0.4285086819103786, 0.4234321713447571, 0.41142310414995464, 0.41006338596343994, 0.4098415970802307, 0.4016689487865993, 0.39717801979609896, 0.39566350834710257, 0.3932521172932216, 0.3924932139260428, 0.39130699634552, 0.386908803667341, 0.3811448301587786, 0.3812599948474339, 0.3832515903881618, 0.38468014342444284, 0.38614836760929655, 0.38071166617529734, 0.3793028507913862, 0.37821632623672485, 0.3794985328401838, 0.38552954367228914, 0.3905340944017683, 0.3940895029476711, 0.38472035101481844, 0.3749291556222098, 0.36871484347752165, 0.3666381239891052, 0.3695660488946097, 0.3739719731467111, 0.382313677242824, 0.38405715567725046, 0.38130950927734375, 0.3775134001459394, 0.3811050312859671, 0.38803900139672415, 0.3963208794593811, 0.40062648909432547], "val_accuracy": [0.2396666705608368, 0.39800000190734863, 0.43933331966400146, 0.5053333044052124, 0.6053333282470703, 0.6769999861717224, 0.690666675567627, 0.7166666388511658, 0.7153333425521851, 0.7203333377838135, 0.7246666550636292, 0.7316666841506958, 0.7356666922569275, 0.7390000224113464, 0.7316666841506958, 0.7390000224113464, 0.7426666617393494, 0.7490000128746033, 0.7540000081062317, 0.7676666378974915, 0.765999972820282, 0.7620000243186951, 0.7689999938011169, 0.7806666493415833, 0.7883333563804626, 0.7900000214576721, 0.7926666736602783, 0.7913333177566528, 0.7996666431427002, 0.8016666769981384, 0.8036666512489319, 0.8103333115577698, 0.8116666674613953, 0.8090000152587891, 0.8130000233650208, 0.8186666369438171, 0.8190000057220459, 0.8199999928474426, 0.8130000233650208, 0.8149999976158142, 0.8226666450500488, 0.8253333568572998, 0.8276666402816772, 0.8230000138282776, 0.8230000138282776, 0.8270000219345093, 0.8353333473205566, 0.8356666564941406, 0.8323333263397217, 0.8326666951179504, 0.8303333520889282, 0.8383333086967468, 0.8426666855812073, 0.8410000205039978, 0.8370000123977661, 0.8450000286102295, 0.8426666855812073, 0.8460000157356262, 0.8479999899864197, 0.8483333587646484, 0.8516666889190674, 0.8529999852180481, 0.8519999980926514, 0.8489999771118164, 0.8473333120346069, 0.8526666760444641, 0.8553333282470703, 0.8543333411216736, 0.8533333539962769, 0.8569999933242798, 0.8583333492279053, 0.8633333444595337, 0.8646666407585144, 0.8633333444595337, 0.862333357334137, 0.8650000095367432, 0.8619999885559082, 0.8583333492279053, 0.8566666841506958, 0.8600000143051147, 0.8560000061988831]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 5, 2, 6, 5, 2, 2, 1, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [0, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.19428572058677673, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.4644675195933554, 2.471947036761303, 2.2998999916346725, 2.2920938091759258, 2.2027239834769463, 2.30886075298595, 2.303882876816773, 2.3032208869895285], "accuracy": [0.21635186672210693, 0.18333113193511963, 0.11266675591468811, 0.11940298229455948, 0.21291771531105042, 0.09708096832036972, 0.0956280529499054, 0.10077928751707077], "val_loss": [1.9714025088718958, 2.0143542970929826, 1.7581398146493095, 1.9686405318123954, 1.987107413155692, 1.9746125085013253, 1.9738627161298479, 1.9735728672572546], "val_accuracy": [0.12166666984558105, 0.09566666930913925, 0.24699999392032623, 0.12300000339746475, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82, 51], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [3, 7, 6, 7, 5, 7, 3, 9], [1, 3, 3, 4, 1, 5], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 0, 1, 1], [1, 3, 9, 1, 2], [2, 0, 2], [20, 52, 13]], "fitness": -0.13171428442001343, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.square(tf.math.add(tf.math.add(beta, grad), alpha))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.569941514203766, 2.409809190016759, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.10170386731624603, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0503014155796597, 2.1218439510890414, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.08399999886751175, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 2, 8, 6, 3, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6, 2, 8], [3, 0, 2, 0, 2, 1, 1, 0, 0, 2, 3, 2], [31, 32, 3, 66, 77], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [3, 7, 1, 5, 9, 7, 3, 9, 6, 5], [4, 3, 3, 4, 3], [98, 21], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [4, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 12, 8, 3, 15, 15, 10, 5, 2, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12930920720100403, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 8, 3, 5, 2, 5, 5, 6, 8, 4, 4, 0], [2, 0, 2, 0, 3, 1, 0, 0, 0], [70, 32, 3, 66, 82, 51], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 8, 5, 7, 3, 9, 9, 0], [3, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 0, 1, 1, 1], [1, 5, 9, 1, 2], [3, 0, 2], [4, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 13, 7, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.math.square(grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(alpha))), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06960771232843399, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [8, 5, 2, 6, 5, 2, 2, 1, 6, 8, 4, 4], [1, 0, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 3], [31, 32, 3, 93], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [4, 3, 9, 1, 2], [3, 2, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82, 51], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [3, 7, 5, 5, 4, 7, 3, 0], [1, 0, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 0, 1, 1], [1, 5, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.square(alpha), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(sigma), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [45.59066915304244, 524.1297807674587, 2148.832665802796, 5710.372912728256, 11837.008550049119, 21554.352210789937], "accuracy": [0.1002509593963623, 0.10051512718200684, 0.09945846349000931, 0.09906221181154251, 0.10249637067317963, 0.10553427785634995], "val_loss": [125.40030779157367, 752.2601143973214, 2355.3069893973216, 5407.592215401785, 10383.68247767857, 17753.565290178572], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 65, 66], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [4, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [301856138.33458185, 5690672629.112139, 26694902423.28041, 74474247656.12785, 157867112461.7958, 291381101195.3782], "accuracy": [0.10249637067317963, 0.10051512718200684, 0.09972262382507324, 0.09879804402589798, 0.10249637067317963, 0.10579843819141388], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 2, 8, 6, 2, 2, 0, 5, 6, 8, 2, 4, 3, 3, 6, 3, 6, 1, 3, 2, 5, 8], [2, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 2, 0, 3, 1, 1, 2], [31, 32, 65, 21, 28, 33, 52, 35], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 9, 7, 3, 9], [4, 3, 3, 3, 0], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [1, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [2, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 16, 13, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad)))))))))), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06947562843561172, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 2, 0, 8, 4, 4, 6, 3, 6, 9, 2, 8, 5, 0], [3, 2, 2, 1, 3, 2, 0, 0, 0, 2, 0], [31, 32, 3, 66, 12, 9, 94], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 7, 3, 5, 5, 9, 3, 9], [1, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [3], [64], [0, 1, 1, 1, 1, 1], [1, 5, 9, 1, 2], [3, 0, 2], [73, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 20, 11, 5, 8, 8, 5, 3, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.negative(grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad)))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(alpha)))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1211994073.892104, 22855661240.41738, 107225812137.74243, 299153895471.068, 634147556662.4055, 1170487125072.746], "accuracy": [0.10249637067317963, 0.10051512718200684, 0.09972262382507324, 0.09879804402589798, 0.10249637067317963, 0.10579843819141388], "val_loss": [4490224493.714286, 35910797604.57143, 121186928932.57143, 287243904146.2857, 561004169508.5714, 969397913892.5714], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [1, 0, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 3], [31, 32, 3, 93], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [301856138.33458185, 5690672629.112139, 26694902423.28041, 74474247656.12785, 157867112461.7958, 291381101195.3782], "accuracy": [0.10249637067317963, 0.10051512718200684, 0.09972262382507324, 0.09879804402589798, 0.10249637067317963, 0.10579843819141388], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [1, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4, 0], [3, 2, 1, 0, 3, 1, 0, 0, 0], [31, 39, 3, 66, 82, 51], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 13, 7, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))))), tf.math.pow(tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(alpha))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [301856138.33458185, 5690672629.112139, 26694902423.28041, 74474247656.12785, 157867112461.7958, 291381101195.3782], "accuracy": [0.10249637067317963, 0.10051512718200684, 0.09972262382507324, 0.09879804402589798, 0.10249637067317963, 0.10579843819141388], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4, 0, 7], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 27, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 8, 9, 1, 2], [3, 0, 0], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 14, 7, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.pow(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [165454.65093626577, 3087312.2175406157, 14439648.823669264, 40231250.85352001, 85220253.17236824, 157222009.48461235], "accuracy": [0.1022322028875351, 0.10051512718200684, 0.09959053993225098, 0.09879804402589798, 0.10249637067317963, 0.10566636174917221], "val_loss": [609000.1607142857, 4841240.0, 16305799.42857143, 38611809.14285714, 75368390.85714285, 130184768.0], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [8, 5, 2, 6, 5, 2, 2, 1, 6, 8, 4, 4, 6, 5, 5, 5, 4, 4, 8, 5, 6, 1, 5], [2, 0, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 3, 1], [31, 32, 3, 66, 82, 51], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 2, 9, 1, 2], [3, 2, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 8, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [407192.15703504113, 7621816.4229296, 35679008.44274204, 99445693.4090609, 210695012.89869237, 388760870.8133668], "accuracy": [0.10249637067317963, 0.10051512718200684, 0.09972262382507324, 0.09879804402589798, 0.10249637067317963, 0.10579843819141388], "val_loss": [1501706.4642857143, 11958552.857142856, 40299875.428571425, 95455165.71428572, 186353801.14285713, 321924900.5714286], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 5, 2, 6, 5, 2, 2, 1, 6, 8, 4, 4], [1, 0, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 3], [31, 32, 3, 93], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 1, 1, 1], [9, 3, 9, 1, 2], [3, 2, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 12, 9, 4, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.square(tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))))), tf.math.sqrt(tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023915361057514, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 2, 0, 0], [38, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 2, 5, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 0, 1, 1], [0, 5, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 2, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302677990942741, 2.3018818600712168, 2.3017111780022774, 2.301364062972718, 2.3027887521339934, 2.302530576240873], "accuracy": [0.09311848133802414, 0.09259014576673508, 0.09232597798109055, 0.09642054885625839, 0.09087307006120682, 0.08691058307886124], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [2, 0, 2], [23, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(tf.math.add(beta, grad), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302677990942741, 2.3018818600712168, 2.3017111780022774, 2.301364062972718, 2.3027887521339934, 2.302530576240873], "accuracy": [0.09311848133802414, 0.09259014576673508, 0.09232597798109055, 0.09642054885625839, 0.09087307006120682, 0.08691058307886124], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 8, 5, 7, 3, 9, 9, 0], [4, 3, 3, 4, 1], [98, 73], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [1, 0, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [4, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302677990942741, 2.3018818600712168, 2.3017111780022774, 2.301364062972718, 2.3027887521339934, 2.302530576240873], "accuracy": [0.09311848133802414, 0.09259014576673508, 0.09232597798109055, 0.09642054885625839, 0.09087307006120682, 0.08691058307886124], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]