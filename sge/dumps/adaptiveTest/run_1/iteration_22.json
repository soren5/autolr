[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [4, 8, 4, 3, 8, 2, 5], [0, 2, 0, 2, 3], [77, 90], [0], [1], [], [2], [], [0, 0, 1], [0, 1], [6], [4], [], [0], [9], [], [93]], "fitness": -0.10000000149011612, "tree_depth": 19, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.square(tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302920341491699, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 1, 0, 1]}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [9], [0, 0, 2, 0, 0, 1, 2, 2, 1, 0, 3, 3, 2, 0, 2, 0, 1], [7, 90], [0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [9, 9, 2, 1, 4, 8, 5, 5, 3, 5], [2], [87, 80, 20, 37], [0, 0, 1], [0, 1, 1], [0], [5, 6], [61], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [2, 7, 4, 2, 6, 5, 3, 6, 8, 0, 9], [0, 1, 3, 0, 0, 0, 2], [89, 22, 51, 11, 73]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302920341491699, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [4, 8, 4, 3, 8, 2, 5], [0, 0, 2, 0, 0, 1, 2, 2, 1, 0, 3, 3, 2, 0, 2, 0, 1], [3, 90], [0], [1], [], [3], [], [1, 0, 1], [1, 1, 1], [0], [0], [20], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [2, 5, 4, 2, 5, 6, 5, 8, 1, 4, 0, 7, 2, 6, 3, 2, 1, 9, 8, 7, 8, 0, 1, 6, 1], [0, 1, 0, 0, 0, 0, 2, 2, 2, 2, 0, 1, 1, 2, 1, 1], [93, 18, 41, 81, 15, 45, 34, 23]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 30, 18, 12, 7], "tree_depth": 25, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.pow(tf.math.add(tf.math.square(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta), tf.math.multiply(beta, tf.math.add(beta, beta)))))), tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))))), alpha)", "other_info": {"loss": [2.302920341491699, 2.3025851249694824, 2.3025851249694824, 2.3025856018066406, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.10553427785634995, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025851249694824, 2.3025848865509033, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [9], [3, 0, 0, 0, 3, 3, 0, 2, 1, 3, 2, 2, 0, 1, 1, 1, 1], [7, 90], [0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [8, 9, 2, 1, 4, 8, 5, 5, 3, 5], [2], [22, 80, 20, 37], [0, 0, 1], [0, 1, 1], [0], [5, 6], [76, 71], [0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 9, 8, 4], [0, 0, 0, 0, 0, 0, 2], [94, 2, 63, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 2, 2, 1, 1, 0, 6, 4, 2, 3], "tree_depth": 10, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302920341491699, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [9], [3, 0, 0, 0, 3, 3, 0, 2, 1, 3, 2, 2, 0, 1, 1, 1, 1], [63, 97, 87, 75, 80, 36], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [9, 9, 2, 1, 4, 8, 5, 5, 3, 5], [5], [52, 80, 20, 37], [0, 0, 1], [0, 1, 1], [7, 7], [4], [76, 71], [0, 0, 1, 1, 1, 1, 0, 1], [2, 7, 4], [2, 1, 3, 3, 0, 0, 2], [82, 2, 63, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 5, 2, 3, 0], "tree_depth": 7, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(beta, alpha), sigma)", "other_info": {"loss": [1.9794997863082533e+24, 154.39935302734375, 38324.203125, 9838511.0, 2514488320.0, 629282504704.0], "accuracy": [0.09787346422672272, 0.09906221181154251, 0.1006472036242485, 0.10328886657953262, 0.09642054885625839, 0.1018359512090683], "val_loss": [10.338027000427246, 2474.147216796875, 632123.375, 161821232.0, 41426235392.0, 10605116260352.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [9], [0, 0, 2, 0, 0, 1, 2, 2, 1, 0, 3, 3, 2, 0, 2, 0, 1], [7, 90], [0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [9, 9, 2, 1, 4, 8, 5, 5, 3, 5], [2], [22, 80, 20, 37], [0, 1, 1], [0, 0, 1], [0], [6, 6], [61], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [2, 7, 4, 2, 6, 5, 3, 6, 8, 0, 9], [0, 1, 3, 0, 0, 0, 2], [89, 22, 51, 11, 73]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 18, 11, 7, 5], "tree_depth": 16, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.divide_no_nan(sigma, tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), beta), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [8, 0, 8, 9, 8, 2, 5, 4], [3, 0, 0, 0, 3, 3, 0, 2, 1, 3, 2, 2, 0, 1, 1, 1, 1], [7, 90], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [9, 9, 2, 1, 4, 8, 5, 5, 3, 5], [2], [74, 80, 20, 37], [0, 0, 1], [1, 1, 1], [5, 5], [4], [76, 71], [1, 1, 1], [1, 9], [0, 1, 0, 0, 0, 0, 2], [94, 2, 63, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302920341491699, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [8, 8, 8, 9, 8, 2, 5, 4], [2, 2, 0, 2, 3, 1, 1], [77, 90, 55], [0], [1], [], [0], [18], [0, 0, 1], [0, 1, 1], [5, 5], [4], [76, 71], [0, 0, 0, 0, 1, 1, 1, 1], [9], [], [93]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302920341491699, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [9], [0, 2, 0, 2, 3], [77, 90], [0], [1], [9, 9, 2, 1, 4, 8, 5, 5, 3, 5], [5], [], [0, 0, 1], [0, 1, 1], [9, 7], [4], [76, 71], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [2, 7, 4, 6, 8, 3, 7, 7, 0, 0], [3, 3, 1, 2, 0, 1, 1, 3], [67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 18, 10, 8, 1], "tree_depth": 21, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.pow(sigma, tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.multiply(beta, tf.math.add(tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.negative(alpha))))))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]