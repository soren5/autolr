[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [4, 8, 4, 3, 8, 2, 5], [0, 2, 0, 2, 3], [77, 90], [0], [1], [], [2], [], [0, 0, 1], [0, 1], [6], [4], [], [0], [9], [], [93]], "fitness": -0.10000000149011612, "tree_depth": 19, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.square(tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027634620666504, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 1, 0, 1]}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [9], [3, 0, 0], [13], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [2, 9, 2, 1, 4, 8, 5, 5, 3, 5], [2, 1, 1, 2, 5, 1], [57, 68], [1, 0, 1], [1, 0, 1], [5, 5], [5, 6], [76, 71], [0, 1, 1, 1, 0, 1, 1, 1], [2, 7, 4], [0, 1, 3, 0, 0, 0, 2], [43, 2, 63, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3027634620666504, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [6, 4, 4, 6, 2, 2, 4, 4, 3, 6, 2, 6, 4, 2, 8, 0, 0, 6, 8, 4, 3, 9], [3, 0, 0, 0, 3, 3, 0, 2, 1, 3, 2, 2, 0, 1, 1, 1, 1], [13, 97, 87, 75, 80, 36], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 3, 5, 0, 3, 0, 5], [2, 0, 4, 2, 5, 3], [55, 58], [1, 0, 1], [1, 0, 1], [5, 5], [5, 6], [71], [0, 1, 0, 0, 1, 1, 1, 1], [2, 7, 4], [0, 1, 3, 0, 0, 0, 2], [43, 2, 63, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 39, 39, 22, 17, 6, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 31, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), grad))), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))))), tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.multiply(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(alpha, sigma), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027634620666504, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 4, 4, 6, 8, 2, 5, 4], [1, 0, 0, 1, 1, 1], [86, 90], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 3, 3, 0, 3, 0, 5], [2, 0, 4, 2, 5, 3], [55, 58], [0, 0, 1], [0, 0, 1, 1, 0], [5, 5], [4], [71], [0, 1, 0, 0, 1, 1, 1, 1], [9], [1, 0], [82, 2, 63, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 3, 2, 2, 0, 0, 1, 1, 0, 1], "tree_depth": 11, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027634620666504, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [9], [0, 0, 0], [85, 90], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [2, 9, 2, 1, 4, 8, 5, 5, 3, 5], [4, 2, 1, 2, 5, 1], [57, 68], [0, 0, 1], [0, 1, 1], [2, 5], [0, 6], [76, 71], [0, 0, 0, 1, 1, 1, 1, 1], [9], [0, 1, 3, 0, 0, 0, 2], [89, 2, 63, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 3, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 8, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027634620666504, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [4, 8, 4, 3, 8, 2, 5, 5, 8, 2], [0, 2, 0, 2, 3, 3], [19, 17], [0], [1], [], [2], [], [0, 0, 1], [0, 1], [6], [0], [61], [0], [9], [], [13]], "fitness": -0.10000000149011612, "tree_depth": 22, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, grad)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026809692382812, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}, "mapping_values": [1, 16, 16, 10, 6, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 1, 1, 1, 0, 1]}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [9], [0, 2, 0, 2, 3], [77, 90], [0], [1], [2, 9, 2, 1, 3, 8, 5, 5, 8, 5], [2], [], [0, 0, 1], [0, 1], [6], [0], [76, 71], [0], [9], [], [40]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 8, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027634620666504, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [6, 8, 8, 6, 8, 2, 5, 4], [1, 2, 3, 1, 1], [13, 53], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 3, 3, 2, 9, 3, 0, 7, 5, 0], [1, 0, 4, 2, 5, 3], [74, 80, 20, 37], [0, 0, 1], [0, 0, 1, 1, 0], [5, 5], [0], [71], [0, 1, 0, 0, 1, 1, 1, 1], [1, 9], [1, 0], [43, 2, 63, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 3, 2, 2, 0, 0, 3, 2, 1, 1], "tree_depth": 19, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [11838319.0, 227256512.0, 1064215808.0, 2957951232.0, 6291582464.0, 11472050176.0], "accuracy": [0.10315678268671036, 0.09774138033390045, 0.10091137140989304, 0.09959053993225098, 0.10500594228506088, 0.10460969805717468], "val_loss": [51638660.0, 412518400.0, 1391587712.0, 3297799424.0, 6440120832.0, 11127492608.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [9], [3, 0, 0], [21], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [2, 9, 2, 1, 4, 8, 5, 5, 3, 5], [2, 1, 1, 2, 5, 1], [57, 68], [1, 0, 1], [1, 0, 1], [5, 5], [5, 6], [76, 71], [0, 1, 0, 0, 1, 1, 1, 1], [2, 7, 4], [0, 1, 3, 0, 0, 0, 2], [43, 2, 63, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 16, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), alpha)), alpha), tf.math.sqrt(tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(alpha, sigma), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027634620666504, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]