[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.8431428670883179, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(tf.math.negative(grad), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1569649683816667, 1.2707364906440903, 0.8654067803210177, 0.7443050057140749, 0.6933680990069471, 0.6408913597895595, 0.614569278818946, 0.5871367749678477, 0.5653348235941645, 0.543608770284198, 0.5272562614663119, 0.5108216971123554, 0.4983041837010417, 0.4856033295829928, 0.4679378276574471, 0.45158038273888684, 0.44612672010968313, 0.4216217190723976, 0.4217246893122684, 0.40676150228589547, 0.3983167481342122, 0.3934783423778293, 0.3800792578755904, 0.3791024434512963, 0.36677182989822105, 0.3508205968729651, 0.34969466396798987, 0.34221887918369504, 0.3388310596061468, 0.3257869740542388, 0.32335004231334913, 0.3170664175358809, 0.3065999880749961, 0.29346091711699074, 0.29020172927153187, 0.28821462792743074, 0.28629173041019834, 0.2815733613386571, 0.2681399971845049, 0.27370019189953376, 0.27198255273093164, 0.2625906730309107, 0.25652254729175833, 0.24550356531203021, 0.25103158377314666, 0.2416164788154642, 0.23189471424090438, 0.23090541900865405, 0.2341230295754978, 0.22361554368383707, 0.21977747127112618, 0.2058490455158477, 0.20924687195431996, 0.2054579886506341, 0.20146649013483892, 0.19476058827045178, 0.18977161255479252, 0.19417698820505505, 0.18944565660335352, 0.18593038109000395, 0.18408625939101464], "accuracy": [0.26680755615234375, 0.5525029897689819, 0.6763967871665955, 0.7185312509536743, 0.7380794882774353, 0.7544577717781067, 0.7687227725982666, 0.7777044177055359, 0.7877426743507385, 0.7921014428138733, 0.798309326171875, 0.8057059645652771, 0.8123101592063904, 0.8222163319587708, 0.8247259259223938, 0.8335754871368408, 0.8337075710296631, 0.8436138033866882, 0.8450667262077332, 0.8535200357437134, 0.8495575189590454, 0.8551049828529358, 0.857218325138092, 0.8609166741371155, 0.863029956817627, 0.8659358024597168, 0.8669924736022949, 0.8708229064941406, 0.8741249442100525, 0.8782195448875427, 0.8754457831382751, 0.8792761564254761, 0.8819178342819214, 0.8907673954963684, 0.8943336606025696, 0.889578640460968, 0.8910315632820129, 0.8944657444953918, 0.8985602855682373, 0.896446943283081, 0.8945978283882141, 0.8938053250312805, 0.9021265506744385, 0.9072777628898621, 0.9041078090667725, 0.9095231890678406, 0.9126931428909302, 0.9089948534965515, 0.9101836085319519, 0.9115044474601746, 0.9190331697463989, 0.9179764986038208, 0.9141460657119751, 0.9228635430335999, 0.9233918786048889, 0.924448549747467, 0.9257693886756897, 0.923920214176178, 0.9281468987464905, 0.9297318458557129, 0.9276185631752014], "val_loss": [1.2698189531053816, 0.6721176249640328, 0.5719499247414725, 0.5382199117115566, 0.5081589562552316, 0.4835519279752459, 0.4808291026524135, 0.45154924052102224, 0.4447169474193028, 0.42997839621135164, 0.41637520279203144, 0.4166089722088405, 0.3970979792731149, 0.3914483274732317, 0.38010785409382414, 0.38084604910441805, 0.3637550473213196, 0.35853913852146696, 0.35541991676603046, 0.3482081038611276, 0.3493213398115976, 0.3464927758489336, 0.33509317466190885, 0.34289940765925814, 0.33861842325755526, 0.33281952142715454, 0.32878492559705463, 0.32749418701444355, 0.3187464986528669, 0.3278610110282898, 0.314055723803384, 0.3164753147533962, 0.311708356652941, 0.31084867886134554, 0.31380284684044973, 0.3132969055856977, 0.3137455242020743, 0.3075597030775888, 0.32271431173597065, 0.319526127406529, 0.3131411756787981, 0.30706329005105154, 0.31193840503692627, 0.3129214218684605, 0.31453901529312134, 0.3150469405310495, 0.31685233967644827, 0.314132102898189, 0.31045516048158917, 0.31579997709819246, 0.31635749340057373, 0.3203419361795698, 0.32133600541523527, 0.31887343951634, 0.3224956818989345, 0.317646895136152, 0.3290608014379229, 0.31654729161943707, 0.31785362107413156, 0.323133613382067, 0.3241164854594639], "val_accuracy": [0.5733333230018616, 0.7223333120346069, 0.7490000128746033, 0.765666663646698, 0.7776666879653931, 0.7906666398048401, 0.7906666398048401, 0.8119999766349792, 0.812666654586792, 0.8166666626930237, 0.8259999752044678, 0.8190000057220459, 0.8386666774749756, 0.8396666646003723, 0.8386666774749756, 0.8420000076293945, 0.8566666841506958, 0.8500000238418579, 0.8533333539962769, 0.8573333621025085, 0.8519999980926514, 0.856333315372467, 0.862333357334137, 0.8543333411216736, 0.8600000143051147, 0.8606666922569275, 0.8633333444595337, 0.8669999837875366, 0.8663333058357239, 0.8629999756813049, 0.8673333525657654, 0.8690000176429749, 0.871666669845581, 0.875, 0.874666690826416, 0.875333309173584, 0.8723333477973938, 0.8726666569709778, 0.8673333525657654, 0.8736666440963745, 0.8773333430290222, 0.8723333477973938, 0.8763333559036255, 0.8776666522026062, 0.8799999952316284, 0.8809999823570251, 0.8813333511352539, 0.8813333511352539, 0.8806666731834412, 0.8776666522026062, 0.878000020980835, 0.8823333382606506, 0.8806666731834412, 0.8766666650772095, 0.8836666941642761, 0.8853333592414856, 0.8803333044052124, 0.8840000033378601, 0.8849999904632568, 0.8813333511352539, 0.8790000081062317]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [4, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 27, 13]], "fitness": -0.7777143120765686, "mapping_values": [1, 17, 17, 10, 7, 4, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301000296967204, 2.2902223097098706, 2.276221306222289, 2.2582374085146815, 2.2398976536159894, 2.217758507162368, 2.1875677300230105, 2.1584251002234995, 2.1132542494659363, 2.0692267242187774, 2.015823981167067, 1.9425102038673832, 1.8705419150199936, 1.7876970050924128, 1.6978026877115935, 1.6153683548731936, 1.5353662344474424, 1.457636923885081, 1.4023250156405611, 1.3303391216705347, 1.289359201765835, 1.2467117719268597, 1.2078881638318697, 1.1735397257651825, 1.1408518177879454, 1.113734199354882, 1.080207623841504, 1.0619621581216263, 1.0343393238544023, 1.0270124231394429, 1.0034264757207765, 0.985228200889991, 0.968191426420067, 0.9603224053295958, 0.9379346495637678, 0.9404895486234595, 0.9140081354545454, 0.909118333473465, 0.8910055791681406, 0.8947044663567191, 0.8878634212716475, 0.8687468275591178, 0.8609499875281418, 0.8552430695735421, 0.8427046779644031, 0.8427758572785263, 0.8308835607856068, 0.8280068296152351, 0.831260389805218, 0.8209870041810196, 0.8145444226885327, 0.8040812446488177, 0.8113780652196605, 0.7976013984284649, 0.7934436037666085, 0.785045896696298, 0.790700915034232, 0.7759146260201198, 0.7657841707437959, 0.7725714244122645, 0.7679157753536148, 0.7590967012182313, 0.7598998810180253, 0.7470289675425136, 0.7542805828281035, 0.7448880825658689, 0.7479127744689295, 0.7451289611139224, 0.7382662807000926, 0.7420319738625504, 0.7310260845496591, 0.7289073010870903, 0.727178051904397, 0.7308033101861944, 0.7154173273703898, 0.7141554859871436, 0.7207599594104622, 0.7141899273789492, 0.7167223582430255, 0.7064863229786731, 0.7063741737967075, 0.6980075277924428, 0.6959688254256746, 0.6948582081668144, 0.6918177012329041, 0.6964729663056941, 0.6976146987558057, 0.6968105822238688, 0.690721644890417, 0.6879008731286539, 0.6884333288995519, 0.68276012505932, 0.6809441848611157, 0.6746372879299395, 0.6749763926494832, 0.6868344394128714, 0.6744282041731575, 0.6688135825269778, 0.6751964148387397, 0.6700160774052843], "accuracy": [0.09549596905708313, 0.11795007437467575, 0.16774533689022064, 0.20737022161483765, 0.24422137439250946, 0.2843745946884155, 0.3267732262611389, 0.34566107392311096, 0.3761722445487976, 0.38568219542503357, 0.40509840846061707, 0.4321753978729248, 0.43930789828300476, 0.4640074074268341, 0.48474442958831787, 0.4982168674468994, 0.5136705636978149, 0.5268788933753967, 0.5305771827697754, 0.5468233823776245, 0.5587108731269836, 0.5647866725921631, 0.5787875056266785, 0.5943732857704163, 0.6048077940940857, 0.6133931875228882, 0.6243560910224915, 0.6256769299507141, 0.6376964449882507, 0.6346585750579834, 0.6470743417739868, 0.6481310129165649, 0.6557918190956116, 0.6571126580238342, 0.6633205413818359, 0.6672830581665039, 0.6752080321311951, 0.6749438643455505, 0.6802271604537964, 0.6802271604537964, 0.6802271604537964, 0.6893408894538879, 0.6885483860969543, 0.6921146512031555, 0.7003037929534912, 0.6923788189888, 0.6976621150970459, 0.700700044631958, 0.6954167485237122, 0.7034738063812256, 0.7025492191314697, 0.7107383608818054, 0.7079645991325378, 0.7143045663833618, 0.7137762308120728, 0.7113987803459167, 0.7120591998100281, 0.7186633348464966, 0.7197200059890747, 0.7202483415603638, 0.7153612375259399, 0.7127195596694946, 0.720380425453186, 0.7250033020973206, 0.7210407853126526, 0.7283053994178772, 0.7272487282752991, 0.7239466309547424, 0.7264562249183655, 0.7281733155250549, 0.7256637215614319, 0.7322678565979004, 0.7349095344543457, 0.7284374833106995, 0.7362303733825684, 0.7367587089538574, 0.7345132827758789, 0.7404569983482361, 0.7313432693481445, 0.7421740889549255, 0.7436270117759705, 0.7383436560630798, 0.7445515990257263, 0.7458723783493042, 0.7465327978134155, 0.7452120184898376, 0.7441553473472595, 0.7489103078842163, 0.7460044622421265, 0.7485140562057495, 0.7460044622421265, 0.7497028112411499, 0.746268630027771, 0.7531369924545288, 0.7540615797042847, 0.7409853339195251, 0.750759482383728, 0.7518161535263062, 0.7523444890975952, 0.7511557340621948], "val_loss": [1.964954035622733, 1.9528302465166365, 1.937753473009382, 1.9204304558890206, 1.9006914411272322, 1.8775756018502372, 1.8496320588248116, 1.815429619380406, 1.7733749662126814, 1.7230050904410226, 1.6643452984946114, 1.5952041489737374, 1.5176655224391393, 1.4329407896314348, 1.3452170916966029, 1.2585579667772566, 1.1774574688502721, 1.105083908353533, 1.0417911325182234, 0.9869296891348702, 0.9411710671016148, 0.9025946004050118, 0.8686332362038749, 0.8400195326123919, 0.8153273037501744, 0.7938963856015887, 0.7736115796225411, 0.7558701378958566, 0.7407184498650687, 0.726860625403268, 0.7144665718078613, 0.7038908345358712, 0.693521329334804, 0.6838884013039725, 0.6742494787488665, 0.6652433531624931, 0.6580823148999896, 0.6507171903337751, 0.643499527658735, 0.6376653739384243, 0.6318679026194981, 0.62648834500994, 0.6215201105390277, 0.6149917159761701, 0.6096733978816441, 0.6046230622700283, 0.5993415117263794, 0.5958905901227679, 0.5932356630052839, 0.588517461504255, 0.58550306728908, 0.5823806524276733, 0.5794322660991124, 0.5757465873445783, 0.5728030375071934, 0.5699326310838971, 0.5661997454507011, 0.5636127676282611, 0.5614203044346401, 0.5584725141525269, 0.5557033504758563, 0.5520907640457153, 0.5503907373973301, 0.5489615883146014, 0.5459226540156773, 0.545520373753139, 0.5432446854455131, 0.5409055948257446, 0.5393893037523542, 0.5368027176175799, 0.5342289209365845, 0.532633900642395, 0.5323269367218018, 0.5294678211212158, 0.5273684774126325, 0.5268782206944057, 0.5253743784768241, 0.5232249838965279, 0.5223231826509748, 0.5206791843686785, 0.5180606501443046, 0.5174367427825928, 0.5175489698137555, 0.5149356978280204, 0.5136443717139108, 0.51326242515019, 0.5116298539297921, 0.5098642451422555, 0.5089567218508039, 0.5075724806104388, 0.5066077028002057, 0.50589690889631, 0.5043745551790509, 0.5028178351266044, 0.5028951508658273, 0.5014656782150269, 0.5005671296800885, 0.49982636315482004, 0.49786501271384104, 0.49701947825295584], "val_accuracy": [0.07900000363588333, 0.20133332908153534, 0.32499998807907104, 0.3790000081062317, 0.40433332324028015, 0.4286666810512543, 0.4493333399295807, 0.4736666679382324, 0.4873333275318146, 0.5166666507720947, 0.5376666784286499, 0.5526666641235352, 0.5693333148956299, 0.5870000123977661, 0.6029999852180481, 0.6106666922569275, 0.6313333511352539, 0.6456666588783264, 0.6573333144187927, 0.6650000214576721, 0.6729999780654907, 0.6786666512489319, 0.6850000023841858, 0.6886666417121887, 0.6933333277702332, 0.6986666917800903, 0.7046666741371155, 0.7056666612625122, 0.7086666822433472, 0.7099999785423279, 0.7153333425521851, 0.7179999947547913, 0.7223333120346069, 0.7233333587646484, 0.7276666760444641, 0.7306666374206543, 0.7326666712760925, 0.7353333234786987, 0.7369999885559082, 0.737666666507721, 0.7406666874885559, 0.7426666617393494, 0.7446666955947876, 0.7453333139419556, 0.7440000176429749, 0.7480000257492065, 0.7556666731834412, 0.7523333430290222, 0.749666690826416, 0.7563333511352539, 0.753333330154419, 0.7536666393280029, 0.7573333382606506, 0.7563333511352539, 0.7580000162124634, 0.7573333382606506, 0.7593333125114441, 0.7620000243186951, 0.7616666555404663, 0.7613333463668823, 0.7620000243186951, 0.7673333287239075, 0.765333354473114, 0.7643333077430725, 0.7706666588783264, 0.7673333287239075, 0.7693333625793457, 0.7710000276565552, 0.7699999809265137, 0.7723333239555359, 0.7749999761581421, 0.778333306312561, 0.7713333368301392, 0.7786666750907898, 0.7820000052452087, 0.7786666750907898, 0.7799999713897705, 0.7836666703224182, 0.781000018119812, 0.781333327293396, 0.7839999794960022, 0.7846666574478149, 0.7823333144187927, 0.7873333096504211, 0.7876666784286499, 0.7856666445732117, 0.7870000004768372, 0.7903333306312561, 0.7903333306312561, 0.7900000214576721, 0.7889999747276306, 0.7913333177566528, 0.7916666865348816, 0.793666660785675, 0.7893333435058594, 0.7903333306312561, 0.7919999957084656, 0.7943333387374878, 0.7933333516120911, 0.7933333516120911]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [4, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 1, 1, 0, 1, 1], [0, 1, 9, 1, 2], [1, 0, 2], [15, 27, 13]], "fitness": -0.2962857186794281, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.sqrt(tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.427787959284361, 2.3053221581650134, 2.304801025473761, 2.2867257576797457, 13.623201877024384, 2.0580164882815857], "accuracy": [0.1748778223991394, 0.13181878626346588, 0.09576013684272766, 0.12257297337055206, 0.11715757846832275, 0.25795799493789673], "val_loss": [1.8326119695390974, 1.9772690364292689, 1.973456791469029, 2.8528973034449985, 1.8734745298113142, 1.9295123645237513], "val_accuracy": [0.3016666769981384, 0.09799999743700027, 0.10499999672174454, 0.1886666715145111, 0.179666668176651, 0.15000000596046448]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 8, 2, 6, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 27, 13]], "fitness": -0.2848571538925171, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.295097030841947, 2.284896348241046, 2.2881106540212355, 2.2933004906054393, 2.297252454872318, 2.299353234472843, 2.301094629887057], "accuracy": [0.10976093262434006, 0.14978206157684326, 0.1508387327194214, 0.13697001338005066, 0.1274600476026535, 0.11240258812904358, 0.10276053100824356], "val_loss": [1.9566818646022253, 1.957322665623256, 1.963749613080706, 1.967658315386091, 1.970602035522461, 1.972144603729248, 1.9731060436793737], "val_accuracy": [0.21066667139530182, 0.2680000066757202, 0.21766667068004608, 0.18400000035762787, 0.1446666717529297, 0.11533333361148834, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 8, 2, 6, 0, 9, 3, 9], [0, 1, 0, 3, 3, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 1, 1, 0, 1, 1], [0, 1, 9, 1, 2], [1, 0, 2], [46, 73, 13]], "fitness": -0.12314286082983017, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.796224536897012, 2.4000257698457634, 2.4049353324946567, 2.355702224739507, 2.358765029258511, 2.366640612559784, 2.3740639346481363, 2.3598161014851136, 2.3481182698418737], "accuracy": [0.18134988844394684, 0.09800554811954498, 0.10421344637870789, 0.10685510188341141, 0.11913882195949554, 0.10130762308835983, 0.1072513535618782, 0.09985470771789551, 0.09879804402589798], "val_loss": [2.15463011605399, 1.9684351512363978, 1.9911324637276786, 2.047763075147356, 2.059312071119036, 2.017772538321359, 1.9831119264875139, 2.0100771359034946, 2.0583068983895436], "val_accuracy": [0.10199999809265137, 0.10400000214576721, 0.10366666316986084, 0.13833333551883698, 0.09799999743700027, 0.10233332961797714, 0.10066666454076767, 0.10366666316986084, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [8, 4, 2, 6, 0, 9, 3, 9], [1, 4, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [1, 1, 1, 0, 0, 1, 0, 1, 1], [3, 1, 9, 1, 2], [2, 2, 2], [41, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [4, 8, 4, 7, 0, 9, 3, 9], [3, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [1, 1, 0, 0, 1, 1], [3, 1, 3, 1, 2], [2, 0, 2], [52, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07647603005170822, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [5, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0], [7, 2, 8, 4], [2, 6], [64], [1, 1, 0, 1, 0, 1, 1, 0], [4, 2, 5, 1, 3, 5, 2, 6, 9, 4, 1, 4, 1, 9, 9, 4, 5], [1, 2, 2, 1, 2, 3, 2, 0, 3, 3], [15, 88, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 8, 6, 4, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.pow(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 8, 2, 6, 0, 9, 3, 9], [3, 1, 0, 3, 3, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 1, 1, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [46, 73, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), alpha), tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06300356984138489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 2, 0, 0, 9, 3, 9], [3, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 7, 0, 9, 5, 7, 2, 3, 8, 3, 3, 4, 1, 5, 9], [1, 0, 2, 2, 1, 2, 3, 2, 3], [72, 19, 87, 3, 28, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 18, 11, 7, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.negative(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.multiply(alpha, beta)), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [3, 1, 5, 1, 2, 8, 3, 8, 9], [3, 0, 2, 0, 3], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 14, 9, 5, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.subtract(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12415797263383865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [6, 8, 2, 6, 0, 9, 3, 9], [1, 4, 2, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [1, 0, 1, 0, 1, 1], [5, 1, 9, 1, 2], [1, 0, 2, 2], [41, 72, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07647603005170822, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 8, 2, 6, 0, 9, 3, 9], [3, 1, 0, 3, 3, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [1, 1, 1, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07647603005170822, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 2, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [1, 1, 0, 0, 1, 1], [7, 1, 2, 1, 2], [1, 0, 2], [72, 97, 92, 3, 28, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 1, 1, 0, 1, 1], [3, 1, 9, 1, 2], [1, 1, 2], [80, 52, 13]], "fitness": -0.07942856848239899, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.302837881036108, 2.301489046646257, 2.3016760754878134, 2.300754238192148, 2.301637732514994, 2.3011096261039214, 2.2992003311365825, 2.300804141805062, 2.298494225621554, 2.299532015278607, 2.2993292856084167, 2.2981783921424785, 2.299471951966997, 2.298428972588397, 2.2978956813683773, 2.2992638214908934, 2.2990769885550275, 2.2991012719486523, 2.2994202455871564], "accuracy": [0.09126931428909302, 0.08875974267721176, 0.0940430611371994, 0.09681680053472519, 0.09285431355237961, 0.09259014576673508, 0.09338264167308807, 0.09219389408826828, 0.10170386731624603, 0.09985470771789551, 0.1022322028875351, 0.09760929644107819, 0.10236428678035736, 0.10685510188341141, 0.10276053100824356, 0.10540219396352768, 0.1006472036242485, 0.10091137140989304, 0.10289261490106583], "val_loss": [1.9708475385393416, 1.9704808507646834, 1.9699993133544922, 1.969613483973912, 1.9692627361842565, 1.9690006801060267, 1.9689548356192452, 1.9689698219299316, 1.968996320452009, 1.9689339229038783, 1.9687941414969308, 1.9686920983450753, 1.9686599458966936, 1.96866055897304, 1.9687439373561315, 1.9689226150512695, 1.9691102845328194, 1.9693363053458077, 1.9696012224469865], "val_accuracy": [0.03966666758060455, 0.04399999976158142, 0.04833333194255829, 0.052000001072883606, 0.059333331882953644, 0.0663333311676979, 0.0689999982714653, 0.07400000095367432, 0.07400000095367432, 0.07500000298023224, 0.07800000160932541, 0.0833333358168602, 0.08733333647251129, 0.08866667002439499, 0.08566666394472122, 0.08266666531562805, 0.0793333351612091, 0.07733333110809326, 0.07433333247900009]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 3, 2, 0, 0, 9, 3, 9], [4, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2, 0], [64], [1, 0, 0, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 27, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302861938418619, 2.301783897432401, 2.3024554847490046, 2.3020742232096336, 2.3036617064409883, 2.303730911535279], "accuracy": [0.09126931428909302, 0.08875974267721176, 0.09232597798109055, 0.09351472556591034, 0.0874389111995697, 0.08915598690509796], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 8, 2, 0, 0, 9, 3, 9], [5, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [3, 0, 2], [15, 27, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302861938418619, 2.301783897432401, 2.3024554847490046, 2.3020742232096336, 2.3036617064409883, 2.303730911535279], "accuracy": [0.09126931428909302, 0.08875974267721176, 0.09232597798109055, 0.09351472556591034, 0.0874389111995697, 0.08915598690509796], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [9, 8, 2, 0, 0, 9, 3, 9], [1, 5, 0, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [3, 1, 0, 1, 2], [1, 0, 2, 3, 2], [34, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 10, 5, 5, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(grad, tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), beta)), tf.math.add(sigma, beta)))", "other_info": {"loss": [2.302861938418619, 2.301783897432401, 2.3024554847490046, 2.3020742232096336, 2.3036617064409883, 2.303730911535279], "accuracy": [0.09126931428909302, 0.08875974267721176, 0.09232597798109055, 0.09351472556591034, 0.0874389111995697, 0.08915598690509796], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 3, 2, 0, 0, 9, 3, 9], [4, 4, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2, 1], [1, 0, 2], [84, 68, 13]], "fitness": -0.023714285343885422, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3045941925225177, 2.3077821271168544, 2.3128400151566777, 2.3170124371258685, 2.3233410835329096, 2.328115201031039], "accuracy": [0.08770307898521423, 0.0758156105875969, 0.07198520749807358, 0.06155065447092056, 0.05243692919611931, 0.04609694704413414], "val_loss": [1.9748263359069824, 1.978771550314767, 1.9828387669154577, 1.9870313235691615, 1.9913719722202845, 1.995847225189209], "val_accuracy": [0.023333333432674408, 0.01366666704416275, 0.009333333000540733, 0.007666666526347399, 0.006000000052154064, 0.00566666666418314]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [4, 8, 2, 6, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 2, 8, 4], [2], [64], [0, 0, 0, 1, 1, 1, 1], [3, 1, 3, 1, 2], [1, 1, 2, 0], [15, 52, 13]], "fitness": -0.009999999776482582, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(alpha, alpha), beta), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3052172684130996, 2.3200212787438725, 2.3546245974194435, 2.411464454507028, 2.5039214956258125, 2.6309891730850055], "accuracy": [0.08691058307886124, 0.05494650825858116, 0.02588825859129429, 0.01439704094082117, 0.008585391566157341, 0.008189142681658268], "val_loss": [1.979193891797747, 2.0027805055890764, 2.0432677268981934, 2.105363164629255, 2.2002112524850026, 2.300854069846017], "val_accuracy": [0.013333333656191826, 0.006000000052154064, 0.004333333112299442, 0.004666666500270367, 0.006666666828095913, 0.007333333138376474]}}]