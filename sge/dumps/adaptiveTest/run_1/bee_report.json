["2021-08-04 16:59:40", "{   'Fitness:': -0.12428571283817291,\n    'Generation:': 41,\n    'Mean:': -0.08042857050895691,\n    'Progress:': '0.028647568287808126',\n    'Standard Deviation:': 0.043857142329216,\n    'Time Elapsed:': '1:22:4',\n    'Time Left:': '37:1:27'}", "[   {   'evaluations': [   -0.12428571283817291,\n                           -0.12428571283817291,\n                           -0.12428571283817291,\n                           -0.12428571283817291,\n                           -0.12428571283817291],\n        'fitness': -0.12428571283817291,\n        'genotype': [   [0],\n                        [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0],\n                        [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1],\n                        [5, 9, 8, 3, 8, 2, 5],\n                        [0, 2, 0, 2, 3],\n                        [46, 90, 79, 31],\n                        [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1],\n                        [   0,\n                            1,\n                            0,\n                            0,\n                            0,\n                            0,\n                            1,\n                            0,\n                            1,\n                            0,\n                            1,\n                            1,\n                            1,\n                            0,\n                            0,\n                            0,\n                            0,\n                            1,\n                            0,\n                            1,\n                            0,\n                            1,\n                            1],\n                        [2, 6, 5, 9, 1, 3, 9, 1, 5],\n                        [2, 1, 5, 0],\n                        [99, 40],\n                        [1, 0, 1],\n                        [0, 0, 1],\n                        [6, 2],\n                        [1],\n                        [76, 71],\n                        [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1],\n                        [8, 0, 3, 7],\n                        [2, 1, 3, 1],\n                        [80, 55, 71, 29, 59, 45, 36, 41, 89]],\n        'mapping_values': [   1,\n                              2,\n                              2,\n                              1,\n                              1,\n                              1,\n                              10,\n                              10,\n                              7,\n                              3,\n                              2,\n                              1,\n                              0,\n                              0,\n                              0,\n                              0,\n                              1,\n                              0,\n                              1,\n                              0],\n        'other_info': {   'accuracy': [   0.10077928751707077,\n                                          0.11200633645057678,\n                                          0.107647605240345,\n                                          0.09787346422672272,\n                                          0.10038304328918457,\n                                          0.09668471664190292],\n                          'loss': [   98052480.0,\n                                      1997831296.0,\n                                      9005772800.0,\n                                      31038418944.0,\n                                      120856805376.0,\n                                      425006891008.0],\n                          'val_accuracy': [   0.125,\n                                              0.10199999809265137,\n                                              0.10199999809265137,\n                                              0.10199999809265137,\n                                              0.10199999809265137,\n                                              0.10199999809265137],\n                          'val_loss': [   859222592.0,\n                                          6940717568.0,\n                                          24545835008.0,\n                                          124646514688.0,\n                                          489961816064.0,\n                                          1424300572672.0]},\n        'phenotype': 'alpha_func, beta_func, sigma_func, grad_func = lambda '\n                     'shape,  alpha, grad: tf.math.add(alpha, '\n                     'tf.math.square(tf.constant(3.30246430e-01, shape=shape, '\n                     'dtype=tf.float32))), lambda shape,  alpha, beta, grad: '\n                     'tf.math.add(beta, tf.math.add(beta, '\n                     'tf.math.divide_no_nan(tf.math.add(beta, '\n                     'tf.math.square(tf.constant(9.99954602e-01, shape=shape, '\n                     'dtype=tf.float32))), tf.math.add(beta, '\n                     'tf.math.subtract(alpha, tf.math.multiply(grad, '\n                     'tf.constant(1.27951705e-01, shape=shape, '\n                     'dtype=tf.float32))))))), lambda shape,  alpha, beta, '\n                     'sigma, grad: sigma, lambda shape,  alpha, beta, sigma, '\n                     'grad: beta',\n        'tree_depth': 17},\n    {   'evaluations': [   -0.036571428179740906,\n                           -0.036571428179740906,\n                           -0.036571428179740906,\n                           -0.036571428179740906,\n                           -0.036571428179740906],\n        'fitness': -0.036571428179740906,\n        'genotype': [   [0],\n                        [   0,\n                            0,\n                            0,\n                            0,\n                            0,\n                            1,\n                            0,\n                            1,\n                            1,\n                            0,\n                            1,\n                            0,\n                            0,\n                            0,\n                            1,\n                            1,\n                            1,\n                            1,\n                            1,\n                            0,\n                            0,\n                            1,\n                            0,\n                            0,\n                            1,\n                            0,\n                            0],\n                        [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1],\n                        [4, 8, 4, 3, 0, 2, 5, 6, 7, 3, 6, 7, 8, 1, 0, 9],\n                        [0, 0, 0, 2, 3, 0, 3, 2, 3, 0, 3],\n                        [43, 90, 56, 49, 55, 34],\n                        [   0,\n                            0,\n                            1,\n                            0,\n                            0,\n                            0,\n                            0,\n                            0,\n                            1,\n                            0,\n                            1,\n                            0,\n                            0,\n                            0,\n                            0,\n                            0,\n                            0,\n                            0,\n                            1,\n                            0,\n                            1,\n                            0,\n                            1],\n                        [1],\n                        [2, 1, 5, 9, 1, 3, 9, 1, 5],\n                        [2, 1, 5, 0],\n                        [],\n                        [1, 0, 0],\n                        [0, 0],\n                        [6, 2],\n                        [4, 7],\n                        [],\n                        [   0,\n                            0,\n                            0,\n                            0,\n                            1,\n                            0,\n                            0,\n                            1,\n                            0,\n                            0,\n                            1,\n                            1,\n                            0,\n                            1,\n                            0,\n                            0,\n                            1,\n                            0,\n                            1,\n                            0,\n                            1,\n                            1,\n                            1,\n                            0,\n                            0,\n                            0,\n                            1,\n                            0,\n                            1,\n                            0,\n                            0,\n                            0,\n                            1,\n                            0,\n                            1,\n                            0,\n                            1,\n                            1],\n                        [8, 6, 3, 8, 4, 1, 7, 5, 8, 5, 3, 5],\n                        [1, 1, 3, 2, 0, 2, 3],\n                        [93]],\n        'mapping_values': [   1,\n                              11,\n                              11,\n                              6,\n                              5,\n                              3,\n                              1,\n                              1,\n                              0,\n                              1,\n                              0,\n                              1,\n                              0,\n                              0,\n                              0,\n                              0,\n                              19,\n                              12,\n                              7,\n                              1],\n        'other_info': {   'accuracy': [   0.08506141602993011,\n                                          0.09034473448991776,\n                                          0.09417514503002167,\n                                          0.0882314071059227,\n                                          0.08902391046285629,\n                                          0.09272222965955734],\n                          'loss': [   2.3038790225982666,\n                                      2.3032748699188232,\n                                      2.302300453186035,\n                                      2.3037474155426025,\n                                      2.3032047748565674,\n                                      2.302614212036133],\n                          'val_accuracy': [   0.036666665226221085,\n                                              0.036666665226221085,\n                                              0.036666665226221085,\n                                              0.036666665226221085,\n                                              0.036666665226221085,\n                                              0.036666665226221085],\n                          'val_loss': [   2.299229621887207,\n                                          2.299229621887207,\n                                          2.299229621887207,\n                                          2.299229621887207,\n                                          2.299229621887207,\n                                          2.299229621887207]},\n        'phenotype': 'alpha_func, beta_func, sigma_func, grad_func = lambda '\n                     'shape,  alpha, grad: tf.math.add(alpha, '\n                     'tf.math.pow(tf.math.add(alpha, '\n                     'tf.math.sqrt(tf.math.add(alpha, '\n                     'tf.constant(2.11963334e-01, shape=shape, '\n                     'dtype=tf.float32)))), tf.math.add(alpha, '\n                     'tf.math.pow(tf.math.add(alpha, '\n                     'tf.math.multiply(tf.constant(9.99720385e-01, '\n                     'shape=shape, dtype=tf.float32), tf.math.add(alpha, '\n                     'tf.constant(7.88036666e-01, shape=shape, '\n                     'dtype=tf.float32)))), '\n                     'tf.math.negative(tf.math.add(tf.math.add(alpha, grad), '\n                     'grad)))))), lambda shape,  alpha, beta, grad: '\n                     'tf.math.add(beta, beta), lambda shape,  alpha, beta, '\n                     'sigma, grad: sigma, lambda shape,  alpha, beta, sigma, '\n                     'grad: '\n                     'tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(alpha), '\n                     'tf.math.pow(tf.math.subtract(alpha, '\n                     'tf.math.add(tf.math.square(sigma), beta)), '\n                     'tf.math.sqrt(tf.constant(9.99847452e-01, shape=shape, '\n                     'dtype=tf.float32)))), '\n                     'tf.math.square(tf.math.multiply(beta, '\n                     'tf.math.square(sigma)))))',\n        'tree_depth': 17}]"]