[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8322857022285461, "mapping_values": [1, 4, 4, 3, 1, 1, 17, 17, 9, 8, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), grad), alpha), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2672274640805967, 2.064255357969549, 1.6348989279105475, 1.1906178531834415, 0.9138584336930924, 0.8655477731990903, 0.7715124823649987, 0.738688430978543, 0.714362432628874, 0.6535857246457751, 0.6181033317675255, 0.6336170942114802, 0.6078105107384776, 0.5756690895962063, 0.5617611502706729, 0.5910218341900704, 0.5606910236649242, 0.544349178642314, 0.5326007651992998, 0.5137686140391459, 0.5121950168044985, 0.5131175049410016, 0.47841993265966964, 0.5021228315555943, 0.469981741541491, 0.47304467412663675, 0.47773669719727535, 0.4480273954234717, 0.45680913762519737, 0.4586897630496914, 0.431114261845682, 0.4236175427937851], "accuracy": [0.23563598096370697, 0.2937524616718292, 0.43851539492607117, 0.587372899055481, 0.6612072587013245, 0.6748117804527283, 0.71100252866745, 0.7199841737747192, 0.7404569983482361, 0.7552502751350403, 0.7714964747428894, 0.7567031979560852, 0.7713643908500671, 0.7839123010635376, 0.7858935594558716, 0.7720248103141785, 0.7918372750282288, 0.8001585006713867, 0.7964601516723633, 0.8031964302062988, 0.8055738806724548, 0.8104609847068787, 0.8238013386726379, 0.8129705190658569, 0.8197067975997925, 0.8219521641731262, 0.817989706993103, 0.828820526599884, 0.830669641494751, 0.8300092220306396, 0.8396512866020203, 0.8457271456718445], "val_loss": [1.9511826378958566, 1.470022405896868, 0.8017999955586025, 0.6698456832340786, 0.6957963534763881, 0.6508626086371285, 0.5463665894099644, 0.6043436186654227, 0.5153223105839321, 0.48923024109431673, 0.5404508113861084, 0.46870667593819754, 0.45056445258004324, 0.44150495529174805, 0.46476827348981586, 0.43117458479745047, 0.4171902452196394, 0.43725129536220003, 0.4118967482021877, 0.436839154788426, 0.4045094762529646, 0.39016599314553396, 0.4467641796384539, 0.41449785232543945, 0.42271530628204346, 0.42681050300598145, 0.37049485955919537, 0.37932266507829937, 0.3886739526476179, 0.388417192867824, 0.4042551943234035, 0.4266589879989624], "val_accuracy": [0.18766666948795319, 0.42533332109451294, 0.6579999923706055, 0.7213333249092102, 0.684333324432373, 0.6996666789054871, 0.746999979019165, 0.746999979019165, 0.7789999842643738, 0.7736666798591614, 0.7549999952316284, 0.7953333258628845, 0.8036666512489319, 0.8090000152587891, 0.784333348274231, 0.8103333115577698, 0.8236666917800903, 0.809333324432373, 0.8186666369438171, 0.7916666865348816, 0.8276666402816772, 0.8323333263397217, 0.7889999747276306, 0.8320000171661377, 0.8080000281333923, 0.8040000200271606, 0.8446666598320007, 0.8373333215713501, 0.8326666951179504, 0.8403333425521851, 0.8216666579246521, 0.8106666803359985]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 4, 1, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8242856860160828, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), grad), alpha), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2530848140084214, 1.7222621459309704, 1.2554353375114298, 0.9695525912482111, 0.795808501192261, 0.7175071412750822, 0.6732252275057283, 0.6610512638750203, 0.6276120762578752, 0.5967942153489538, 0.5725571684565889, 0.5695242823280317, 0.5337668707216137, 0.5322228274632281, 0.4892528798751481, 0.5022710604107753, 0.49215983022646487, 0.471056822485156, 0.46376126102799076, 0.451892322474278, 0.44407432669142155, 0.43738292177528704, 0.4382946016278013, 0.42182029652053876, 0.4068830400929711, 0.4042693020023328, 0.3814130407188389, 0.39311710806208483, 0.36969690737927735], "accuracy": [0.2534671723842621, 0.402588814496994, 0.54220050573349, 0.6441685557365417, 0.6935675740242004, 0.724210798740387, 0.7390040755271912, 0.7457403540611267, 0.7604015469551086, 0.7713643908500671, 0.7884030938148499, 0.7810064554214478, 0.7984414100646973, 0.8033285140991211, 0.817461371421814, 0.8109893202781677, 0.8212917447090149, 0.8224804997444153, 0.8222163319587708, 0.8304054737091064, 0.834632158279419, 0.8368775844573975, 0.8356888294219971, 0.8444063067436218, 0.8473120927810669, 0.846387505531311, 0.8574824929237366, 0.8492933511734009, 0.8639545440673828], "val_loss": [1.8881664957318987, 0.8786811828613281, 0.8714202301842826, 0.6301853486469814, 0.5503510407039097, 0.5008555991309029, 0.5005776882171631, 0.46209655489240375, 0.48903575965336393, 0.45107156889779226, 0.4579108612877982, 0.4271837728364127, 0.41270142793655396, 0.4066220777375357, 0.3956625206129892, 0.38626299585614887, 0.42297560828072683, 0.38205965076174053, 0.3831491470336914, 0.38947461332593647, 0.3703362686293466, 0.3870466521808079, 0.3894154003688267, 0.35438952275684904, 0.3676411083766392, 0.3589275734765189, 0.38137422289167133, 0.3664752500397818, 0.3690195253917149], "val_accuracy": [0.33766666054725647, 0.6256666779518127, 0.6259999871253967, 0.7129999995231628, 0.7553333044052124, 0.7730000019073486, 0.7693333625793457, 0.7973333597183228, 0.781000018119812, 0.8023333549499512, 0.8090000152587891, 0.8056666851043701, 0.8173333406448364, 0.8316666483879089, 0.8309999704360962, 0.8373333215713501, 0.8193333148956299, 0.8413333296775818, 0.8360000252723694, 0.8343333601951599, 0.8443333506584167, 0.8370000123977661, 0.8426666855812073, 0.859000027179718, 0.8489999771118164, 0.8579999804496765, 0.8463333249092102, 0.8560000061988831, 0.8486666679382324]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8171428442001343, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.267223262169641, 2.057223677021118, 1.557436464563762, 1.1866288344700417, 0.9704038644621101, 0.8289799932963686, 0.7492885018667257, 0.7043619775627236, 0.6961644745112379, 0.652169692502156, 0.6497296733847384, 0.6011740422409445, 0.6089596989573332, 0.5815245048748803, 0.5713062099556425, 0.5878996259784182, 0.5567568948500035, 0.5320841478570861, 0.5281987757714921, 0.5091215793356809, 0.5231336282504437, 0.5042736420400264, 0.4933181422544965, 0.4949615286199912, 0.4666719352170823, 0.47042433252471266, 0.4773399676424464, 0.4677362109668156, 0.45885183802212803, 0.4545536834912419, 0.43303120439755777, 0.4542115924774364, 0.42174952629456164, 0.42085700833156614, 0.4015808513986121, 0.4016993786672701, 0.4172882032416453, 0.40098176695619986, 0.3868976794749109], "accuracy": [0.23563598096370697, 0.2934883236885071, 0.46308282017707825, 0.5606921315193176, 0.6460176706314087, 0.6906617283821106, 0.7210407853126526, 0.7272487282752991, 0.7376832365989685, 0.7547219395637512, 0.7569673657417297, 0.7668735980987549, 0.7713643908500671, 0.7824593782424927, 0.7812706232070923, 0.7746664881706238, 0.7917051911354065, 0.7984414100646973, 0.8043851256370544, 0.8075551390647888, 0.8013472557067871, 0.8166688680648804, 0.8166688680648804, 0.817461371421814, 0.8234050869941711, 0.8193105459213257, 0.817461371421814, 0.8251221776008606, 0.8305375576019287, 0.8286884427070618, 0.8374059200286865, 0.828820526599884, 0.8453308939933777, 0.844010055065155, 0.8525954484939575, 0.8507462739944458, 0.8442742228507996, 0.8519350290298462, 0.857218325138092], "val_loss": [1.9511833190917969, 1.4387737682887487, 0.913891077041626, 0.7008114371980939, 0.5955996002469744, 0.5404098544801984, 0.5359284026282174, 0.5390088558197021, 0.5266961029597691, 0.49410879611968994, 0.4886042390550886, 0.47758424282073975, 0.45447133268628803, 0.446900521005903, 0.4687593494142805, 0.43544888496398926, 0.4229957376207624, 0.44213197912488666, 0.4103366051401411, 0.4440807104110718, 0.4020696793283735, 0.41485767705099924, 0.4467853307723999, 0.42179754802158903, 0.38744042600904194, 0.38313167435782297, 0.3783125621931894, 0.38718749795641216, 0.40039673873356413, 0.39307773964745657, 0.4025669779096331, 0.3940633790833609, 0.3928670712879726, 0.3497145857129778, 0.3612623299871172, 0.3512624076434544, 0.3621509756360735, 0.39856194598334177, 0.3811095186642238], "val_accuracy": [0.18666666746139526, 0.3799999952316284, 0.596666693687439, 0.6883333325386047, 0.7323333621025085, 0.7609999775886536, 0.7549999952316284, 0.7620000243186951, 0.7643333077430725, 0.7839999794960022, 0.7793333530426025, 0.7889999747276306, 0.7963333129882812, 0.8019999861717224, 0.7806666493415833, 0.809333324432373, 0.8230000138282776, 0.8003333210945129, 0.8246666789054871, 0.8009999990463257, 0.8333333134651184, 0.8180000185966492, 0.7986666560173035, 0.8166666626930237, 0.8336666822433472, 0.8383333086967468, 0.8366666436195374, 0.8343333601951599, 0.8146666884422302, 0.8389999866485596, 0.8199999928474426, 0.8306666612625122, 0.8336666822433472, 0.8610000014305115, 0.8443333506584167, 0.8506666421890259, 0.8453333377838135, 0.8370000123977661, 0.8330000042915344]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 2, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0], [8, 5, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8131428360939026, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2672214972549316, 2.0583461740816493, 1.5518223813275744, 1.1368283311436755, 0.9559943722601596, 0.8089580009122488, 0.7430567084097545, 0.7371919882484887, 0.7014203417444462, 0.6685312573605241, 0.6192154368594055, 0.6107446726885423, 0.6078441428580792, 0.5797188494262474, 0.5681381307777522, 0.5940693200476937, 0.5517007644937622, 0.5206018116385662, 0.5482263004601892, 0.5228207358956857, 0.5181093152842234, 0.5142916877783679, 0.5082461029200617, 0.4895945887807464, 0.46462687648849527, 0.47482938991876533, 0.47392969055261436, 0.46332283573316907, 0.4594121636999219, 0.44941708719914597, 0.43649249821763547, 0.4427436358853732, 0.42732936682371714, 0.4217637040792691, 0.4006591499080086, 0.41523304852465, 0.42308149031439574, 0.40394350826511954, 0.3992801804969875, 0.37406439440928396, 0.377512954682281, 0.3706019984110708, 0.3826763045243016, 0.3774196085574337, 0.3650870348098429, 0.3701938763624956], "accuracy": [0.23576806485652924, 0.29282790422439575, 0.471800297498703, 0.5980715751647949, 0.6429798007011414, 0.7030775547027588, 0.7173424959182739, 0.7169462442398071, 0.735041618347168, 0.7473253011703491, 0.7700436115264893, 0.7613261342048645, 0.7680623531341553, 0.7821952104568481, 0.7835160493850708, 0.772288978099823, 0.7918372750282288, 0.8074230551719666, 0.7930260300636292, 0.8016114234924316, 0.8088759779930115, 0.8090080618858337, 0.8014793395996094, 0.8214238286018372, 0.822348415851593, 0.8232730031013489, 0.8187822103500366, 0.8214238286018372, 0.8272355198860168, 0.8329150676727295, 0.8393871188163757, 0.8338396549224854, 0.8393871188163757, 0.844010055065155, 0.850350022315979, 0.8446704745292664, 0.8387266993522644, 0.8488970994949341, 0.8453308939933777, 0.8644828796386719, 0.863029956817627, 0.8644828796386719, 0.8515387773513794, 0.8573504090309143, 0.8615770936012268, 0.8610487580299377], "val_loss": [1.9512052536010742, 1.492574998310634, 0.964700426374163, 0.6534174851008824, 0.7333412170410156, 0.6270971298217773, 0.5986146075384957, 0.567695072719029, 0.5437520572117397, 0.48010359491620747, 0.5093319416046143, 0.4829541104180472, 0.4549309355872018, 0.4384293385914394, 0.460712126323155, 0.4382432358605521, 0.423753023147583, 0.432631254196167, 0.41722566740853445, 0.40889681237084524, 0.40247611488614765, 0.39869204589298796, 0.4005123717444284, 0.40772790568215506, 0.38706088066101074, 0.4221993769918169, 0.3994117038590567, 0.38535317352839876, 0.38456909145627705, 0.3730704273496355, 0.3906088045665196, 0.3825862577983311, 0.36900122676576885, 0.3664077179772513, 0.3608306646347046, 0.35018003838402884, 0.37352921281542095, 0.3526838081223624, 0.34371613604681833, 0.3365474854196821, 0.33769995825631277, 0.3486630065100534, 0.35547657523836407, 0.34818687609263826, 0.3385839802878244, 0.3464173674583435], "val_accuracy": [0.18700000643730164, 0.3683333396911621, 0.6060000061988831, 0.7149999737739563, 0.6763333082199097, 0.7179999947547913, 0.7266666889190674, 0.737333357334137, 0.749666690826416, 0.7873333096504211, 0.7646666765213013, 0.7870000004768372, 0.7963333129882812, 0.8080000281333923, 0.7853333353996277, 0.8080000281333923, 0.8186666369438171, 0.8053333163261414, 0.8109999895095825, 0.8240000009536743, 0.8286666870117188, 0.8226666450500488, 0.8336666822433472, 0.8296666741371155, 0.8326666951179504, 0.8103333115577698, 0.8346666693687439, 0.8323333263397217, 0.8306666612625122, 0.847000002861023, 0.8413333296775818, 0.8366666436195374, 0.8429999947547913, 0.8500000238418579, 0.8473333120346069, 0.8486666679382324, 0.8349999785423279, 0.8546666502952576, 0.8479999899864197, 0.859000027179718, 0.8650000095367432, 0.8546666502952576, 0.8506666421890259, 0.8500000238418579, 0.8600000143051147, 0.859666645526886]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [93, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0], [6, 5, 9, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8019999861717224, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2672259706815376, 2.062941402318912, 1.5781630519799679, 1.152229076276728, 0.9928842451452438, 0.8232319062459329, 0.7538025718969109, 0.7068481984675096, 0.6913623539778881, 0.652463220499762, 0.6343784144903769, 0.6187783771848572, 0.6063870711963347, 0.5771900089173474, 0.5620642717740224, 0.5884925517990541, 0.546575195749816, 0.5289593208750966, 0.5308785145395484, 0.5029767577312153, 0.513456730389277, 0.48783186730723166, 0.5114272944821091, 0.4920841394681909, 0.4608127069731493, 0.4788038009122504], "accuracy": [0.23563598096370697, 0.29441288113594055, 0.4651961326599121, 0.5923920273780823, 0.6483951807022095, 0.6927750706672668, 0.7098137736320496, 0.7304186820983887, 0.7397965788841248, 0.7549861073493958, 0.763967752456665, 0.7642319202423096, 0.7730814814567566, 0.7803460359573364, 0.7869502305984497, 0.7744023203849792, 0.7975168228149414, 0.8045172095298767, 0.7971205711364746, 0.8100647330284119, 0.8075551390647888, 0.822348415851593, 0.8109893202781677, 0.8210275769233704, 0.8249900937080383, 0.8208954930305481], "val_loss": [1.9511143820626395, 1.469043493270874, 0.9212093012673515, 0.6592016220092773, 0.6574666159493583, 0.6032248565128872, 0.5226647342954364, 0.5356013263974871, 0.5179441145488194, 0.5056439978735787, 0.5065326860972813, 0.47840631008148193, 0.4498018366949899, 0.4426428760801043, 0.4373141016278948, 0.4263122762952532, 0.41675394773483276, 0.43677025181906565, 0.4191583905901228, 0.41763401882989065, 0.3968283789498465, 0.39861346994127544, 0.41628711564200266, 0.399681065763746, 0.4065671903746469, 0.40876701048442293], "val_accuracy": [0.18833333253860474, 0.43299999833106995, 0.6186666488647461, 0.721666693687439, 0.7133333086967468, 0.7153333425521851, 0.7663333415985107, 0.7603333592414856, 0.7706666588783264, 0.7770000100135803, 0.784333348274231, 0.7916666865348816, 0.8043333292007446, 0.8106666803359985, 0.809333324432373, 0.8153333067893982, 0.8203333616256714, 0.8063333630561829, 0.8130000233650208, 0.8163333535194397, 0.8356666564941406, 0.8326666951179504, 0.8343333601951599, 0.8346666693687439, 0.8209999799728394, 0.8203333616256714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 4, 2, 6, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 3, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [3, 9, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8002856969833374, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 6, 6, 2, 3, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, grad)), grad), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.267242357447761, 2.0596916673678165, 1.558984191772598, 1.154693588344822, 0.9880437136499433, 0.8100976742742052, 0.760761403333651, 0.7406736203723847, 0.6988578574721367, 0.6451775259062158, 0.6103163398393882, 0.6323586395545454, 0.6095444305209814, 0.5820264923432406, 0.5711919261227981, 0.6025734566080256, 0.5501448481019304, 0.5353908417735354, 0.52786514617669, 0.5138508510501425, 0.5217794080168549, 0.5143496609162409, 0.4763788623407359, 0.5082229330098514, 0.465698933880075, 0.47884114362371283, 0.4774429458495475, 0.4578408051388942, 0.4599418106678691, 0.45573766808452515, 0.4237864753943645, 0.45100399511302264, 0.41914244405723533, 0.40710917178193545, 0.40883510869098233, 0.4010825782183722, 0.4350213242000703, 0.40109599793922507, 0.38289601178752464], "accuracy": [0.23576806485652924, 0.2933562397956848, 0.46849822998046875, 0.6061286330223083, 0.6482630968093872, 0.7016246318817139, 0.7124554514884949, 0.7169462442398071, 0.7423061728477478, 0.7623828053474426, 0.7745344042778015, 0.7593448758125305, 0.7717606425285339, 0.7804781198501587, 0.7808743715286255, 0.7692511081695557, 0.7957997918128967, 0.800818920135498, 0.8004226684570312, 0.804649293422699, 0.8031964302062988, 0.8086118102073669, 0.8256505131721497, 0.8115176558494568, 0.8252542614936829, 0.8173292875289917, 0.8206313848495483, 0.8240655064582825, 0.8235371708869934, 0.8281601071357727, 0.8424250483512878, 0.8248580098152161, 0.8449346423149109, 0.848368763923645, 0.8479725122451782, 0.8532558679580688, 0.8374059200286865, 0.8499537706375122, 0.8576145768165588], "val_loss": [1.9512416975838798, 1.4698711463383265, 0.9189747401646206, 0.8634962524686541, 0.583146469933646, 0.6271061216081891, 0.579779863357544, 0.5490482023784092, 0.5401429959705898, 0.49780334745134625, 0.49405622482299805, 0.4529976674488613, 0.44596236092703684, 0.45245770045689176, 0.47402894496917725, 0.4459298849105835, 0.4133126905986241, 0.4493722915649414, 0.42059573956898283, 0.41847326925822664, 0.41682566915239605, 0.3921450121062143, 0.44215123994009836, 0.39577245712280273, 0.3936452439853123, 0.4052115423338754, 0.3823722260338919, 0.39528417587280273, 0.4201595442635672, 0.3717490094048636, 0.3969592707497733, 0.3889605232647487, 0.390933096408844, 0.3481866291591099, 0.3592646377427237, 0.38062912225723267, 0.36495631081717356, 0.3794665847505842, 0.3519960812159947], "val_accuracy": [0.18799999356269836, 0.3726666569709778, 0.5993333458900452, 0.6536666750907898, 0.7390000224113464, 0.7139999866485596, 0.7166666388511658, 0.75, 0.7583333253860474, 0.7796666622161865, 0.7803333401679993, 0.7960000038146973, 0.8019999861717224, 0.7976666688919067, 0.7703333497047424, 0.8023333549499512, 0.8263333439826965, 0.8090000152587891, 0.8113333582878113, 0.8173333406448364, 0.8169999718666077, 0.8293333053588867, 0.793666660785675, 0.8263333439826965, 0.8323333263397217, 0.8230000138282776, 0.8376666903495789, 0.8276666402816772, 0.8029999732971191, 0.8456666469573975, 0.8176666498184204, 0.8360000252723694, 0.8336666822433472, 0.8566666841506958, 0.8443333506584167, 0.8379999995231628, 0.840666651725769, 0.8443333506584167, 0.8463333249092102]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [70, 67, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7985714077949524, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9738460874607882, 1.560938041444153, 1.1529878661018778, 0.8790887345522622, 0.7630765640645877, 0.7676698122797956, 0.6729740500843772, 0.673562646345172, 0.6134170704372272, 0.6042933124262092, 0.5619551172944234, 0.551396326775627, 0.5610142550637237, 0.5112141227331679, 0.5145137713743065, 0.5293540783436103, 0.492086355106123], "accuracy": [0.320169061422348, 0.44551578164100647, 0.5716549754142761, 0.6716417670249939, 0.7106062769889832, 0.726192057132721, 0.7441553473472595, 0.7450799345970154, 0.7671377658843994, 0.7738739848136902, 0.7931581139564514, 0.7926297783851624, 0.7848368883132935, 0.8082155585289001, 0.805177628993988, 0.805177628993988, 0.819442629814148], "val_loss": [1.465172324861799, 1.1095154285430908, 0.7602716684341431, 0.6161129474639893, 0.749777981213161, 0.529444660459246, 0.5027287687574115, 0.520861199923924, 0.46854233741760254, 0.5277328320911953, 0.4644298894064767, 0.43929806777409147, 0.4882955551147461, 0.4951316458838327, 0.47387811115809847, 0.4838589940752302, 0.4370234949248178], "val_accuracy": [0.40033334493637085, 0.5600000023841858, 0.668666660785675, 0.7239999771118164, 0.6903333067893982, 0.7636666893959045, 0.7689999938011169, 0.7649999856948853, 0.7946666479110718, 0.7673333287239075, 0.7956666946411133, 0.8113333582878113, 0.7513333559036255, 0.7570000290870667, 0.7916666865348816, 0.7889999747276306, 0.8059999942779541]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 0, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 35, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [2, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7962856888771057, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), grad), alpha), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9738347445496667, 1.5406092169451409, 1.4635713884402513, 0.9673272231786857, 0.8106887931868447, 0.722218945309502, 0.6925685526578024, 0.6555578662829235, 0.606577753335761, 0.5921538555626824, 0.5659231660923765, 0.5436733703902369, 0.5614240270296439, 0.5234347912046841], "accuracy": [0.32003697752952576, 0.44908201694488525, 0.49966979026794434, 0.6371681690216064, 0.693831741809845, 0.7302865982055664, 0.7374191284179688, 0.748778223991394, 0.7663452625274658, 0.7807422876358032, 0.7860256433486938, 0.8004226684570312, 0.7866860628128052, 0.7981772422790527], "val_loss": [1.465010506766183, 1.302450316292899, 0.7616923536573138, 0.7094639369419643, 0.5888612610953194, 0.5453005858830043, 0.5410703420639038, 0.5031569174357823, 0.46648175375802176, 0.5004584959575108, 0.46501122202192036, 0.4590775796345302, 0.5004020929336548, 0.47261898858206614], "val_accuracy": [0.40033334493637085, 0.5616666674613953, 0.6886666417121887, 0.6740000247955322, 0.7440000176429749, 0.7663333415985107, 0.7463333606719971, 0.7736666798591614, 0.7973333597183228, 0.7846666574478149, 0.7940000295639038, 0.7919999957084656, 0.7390000224113464, 0.7806666493415833]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [80, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 4, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.2411428540945053, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), grad), alpha), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.532160866199121, 2.534738963636913, 2.306046628240329, 2.303240642130666, 2.302092373599434, 2.2972727343705763], "accuracy": [0.1784440577030182, 0.13089419901371002, 0.09708096832036972, 0.10276053100824356, 0.10579843819141388, 0.12230881303548813], "val_loss": [1.9352585247584753, 1.9790890557425362, 1.974966594151088, 1.9741837637765067, 1.9722704206194197, 1.953951699393136], "val_accuracy": [0.2553333342075348, 0.09666666388511658, 0.09866666793823242, 0.09799999743700027, 0.125, 0.20666666328907013]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 2, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [22, 20, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.14542856812477112, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.295689648609466, 2.7600084773899933, 2.2901388298266947, 2.381360497535763, 2.3229355729881167, 2.3068480875198913, 2.306464408351257], "accuracy": [0.2526746690273285, 0.13895125687122345, 0.1414608359336853, 0.09285431355237961, 0.11993131786584854, 0.12812046706676483, 0.11253467202186584], "val_loss": [1.9641952514648438, 1.8852403504507882, 2.0406803403581892, 2.004833630153111, 1.9229794229779924, 1.9550960404532296, 1.9426078796386719], "val_accuracy": [0.13433332741260529, 0.22733333706855774, 0.0949999988079071, 0.10733333230018616, 0.13500000536441803, 0.12666666507720947, 0.14933332800865173]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 2, 1, 4, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0], [2, 5, 3, 4], [0, 0], [30, 16], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 1, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08400475233793259, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 4, 9, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 0, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 5, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 13, 13, 7, 6, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(beta, grad))), grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [89, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [22, 20, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 5, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301826965476638, 2.3040951084640318, 2.305284482707531, 2.305957281358049, 2.3122270496813315, 2.3137967893239955, 2.322408833728569, 2.3242412256196254, 2.33318581969715, 2.344180161407233, 2.3820761182226007, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.0882314071059227, 0.08334434032440186, 0.0866464152932167, 0.08030643314123154, 0.07951393723487854, 0.07317395508289337, 0.07740060985088348, 0.07317395508289337, 0.08215559273958206, 0.07845727354288101, 0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9717553002493722, 1.972984858921596, 1.9743620327540807, 1.9759084837777274, 1.97831392288208, 1.9805574417114258, 1.9839817455836706, 1.987870556967599, 1.9941861970084054, 2.00645181110927, 2.067861761365618, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03266666829586029, 0.02666666731238365, 0.02199999988079071, 0.02133333310484886, 0.026000000536441803, 0.03799999877810478, 0.05166666582226753, 0.06666667014360428, 0.08433333039283752, 0.09933333098888397, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 3, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [89, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [22, 20, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 5, 3, 4], [5, 0], [93, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [77, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 5, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, tf.math.add(grad, grad)))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026997073136615, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 0, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [18, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3026997073136615, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [68, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 2, 1, 4, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 1, 3, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [0, 0], [93, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 3, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 17, 17, 9, 8, 1, 1, 1, 0, 1, 1, 7, 3, 4, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), tf.math.add(beta, alpha))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, sigma), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 2, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 35, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.05542857199907303, "mapping_values": [1, 2, 2, 1, 1, 0, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), grad), alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [81028.92176516357, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16919825971126556, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9819241937942236e+16, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [3, 9, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 5, 6, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.subtract(tf.math.pow(grad, grad), tf.math.add(beta, alpha)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3014126672657835, 2.3023411384930683, 2.3018196058342597, 2.300796748750702, 2.3031873185290417, 2.3017665122431095], "accuracy": [0.09959053993225098, 0.09179764986038208, 0.08809932321310043, 0.09311848133802414, 0.09087307006120682, 0.09325055778026581], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]