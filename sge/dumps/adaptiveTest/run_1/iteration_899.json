[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [1, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8277142643928528, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1869480321435977, 1.7488063397330065, 1.3992102118594032, 1.0113914779400577, 0.9220556291165904, 0.8081744280725564, 0.7729314449141763, 0.7161255635526816, 0.6922792369789372, 0.6836417624585428, 0.6249244269000824, 0.631039799755559, 0.6158747085018432, 0.5785431517286859, 0.549208536517776, 0.5597030916045197, 0.5326868649549992, 0.5371762919876286, 0.5301493620749682, 0.49965251173876724, 0.49130475299075893, 0.471433224490353, 0.47515828306207947, 0.47434991008853394, 0.4502682296937845, 0.44773407167274215, 0.461289435601458, 0.465971203811448, 0.44051606041675606, 0.4085156023266167, 0.40634947218096346, 0.40985987297359033, 0.41271645130262147, 0.3952901583573822, 0.39083109913154473, 0.395970852954308, 0.3616044320733934, 0.35716088284055525, 0.3711007341197327, 0.4046653463635478, 0.3516305498498353, 0.3626622200689264, 0.36002938973511595, 0.3392017581648342, 0.3383905925786632, 0.34842516985929656, 0.33395281849347086, 0.31931369889760297], "accuracy": [0.27922335267066956, 0.44062870740890503, 0.5235767960548401, 0.6370360851287842, 0.6715096831321716, 0.7000396251678467, 0.7071720957756042, 0.7305507659912109, 0.7368907928466797, 0.7448157668113708, 0.7631752490997314, 0.7652885913848877, 0.7652885913848877, 0.7804781198501587, 0.7921014428138733, 0.7902522683143616, 0.8038568496704102, 0.7947431206703186, 0.7988376617431641, 0.811649739742279, 0.8153480291366577, 0.8247259259223938, 0.8210275769233704, 0.819970965385437, 0.8310658931732178, 0.8318583965301514, 0.8281601071357727, 0.8235371708869934, 0.8385946154594421, 0.8490291833877563, 0.848368763923645, 0.844010055065155, 0.843481719493866, 0.8535200357437134, 0.8525954484939575, 0.8486329317092896, 0.8669924736022949, 0.8627657890319824, 0.8643507957458496, 0.8506141901016235, 0.8689737319946289, 0.8628978729248047, 0.86118084192276, 0.8713511824607849, 0.8710870146751404, 0.8704266548156738, 0.8741249442100525, 0.8767666220664978], "val_loss": [1.321843079158238, 1.0012349401201521, 0.7745266130992344, 0.753283177103315, 0.600994484765189, 0.6572213172912598, 0.5580656698771885, 0.5857960837227958, 0.575202192578997, 0.47227231093815397, 0.5283861671175275, 0.49078811917986187, 0.47121405601501465, 0.43579308475766865, 0.45236546652657644, 0.49001426356179373, 0.4112345405987331, 0.42307645082473755, 0.4124361106327602, 0.4372935806001936, 0.40115720885140554, 0.38210523980004446, 0.4543553761073521, 0.4103900449616568, 0.43473425933292936, 0.40384793281555176, 0.37673005887440275, 0.4209075655255999, 0.36652530091149466, 0.40101642268044607, 0.37494013139179777, 0.3541724852153233, 0.3680754814829145, 0.38701179197856356, 0.40637346676417757, 0.3581323027610779, 0.3507345063345773, 0.3845271723611014, 0.36012186322893414, 0.34863794701439993, 0.334360020501273, 0.35022064617701937, 0.3262628061430795, 0.33443428788866314, 0.3418681962149484, 0.3332417437008449, 0.3460377199309213, 0.34213718346187044], "val_accuracy": [0.5210000276565552, 0.6370000243186951, 0.653333306312561, 0.6926666498184204, 0.7526666522026062, 0.6983333230018616, 0.750333309173584, 0.7269999980926514, 0.7440000176429749, 0.8013333082199097, 0.7509999871253967, 0.7706666588783264, 0.7903333306312561, 0.8056666851043701, 0.79666668176651, 0.765666663646698, 0.8206666707992554, 0.8063333630561829, 0.812666654586792, 0.7973333597183228, 0.8273333311080933, 0.8346666693687439, 0.8053333163261414, 0.8149999976158142, 0.7986666560173035, 0.8176666498184204, 0.8413333296775818, 0.8016666769981384, 0.8450000286102295, 0.828000009059906, 0.8346666693687439, 0.8479999899864197, 0.8396666646003723, 0.8220000267028809, 0.8143333196640015, 0.8519999980926514, 0.8583333492279053, 0.8330000042915344, 0.8463333249092102, 0.8529999852180481, 0.8606666922569275, 0.8546666502952576, 0.8629999756813049, 0.8629999756813049, 0.8556666374206543, 0.8576666712760925, 0.8503333330154419, 0.8579999804496765]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8268571496009827, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.163593240228894, 1.701191146124025, 1.336853587096787, 1.0692991296518528, 0.8836635505014706, 0.760000668693417, 0.7131534640374295, 0.6612300873038917, 0.6246955077630213, 0.6345835977368398, 0.5756755131598807, 0.5738520421891747, 0.5567298143877722, 0.5387158455424824, 0.5085534703666981, 0.4965057396586419, 0.4968121225264535, 0.4769491453165108, 0.4684100283324333, 0.4605916698240979, 0.4489661470191385, 0.4338035952689043, 0.4303509561676375, 0.40137534860480717, 0.40565299858286114, 0.40656281400901484, 0.38872898293760205, 0.396301044161766, 0.3754453710309267, 0.37569509310225424, 0.37187379210490623, 0.3577553090984953, 0.35159181182599575, 0.3641102135126318, 0.325711691781845], "accuracy": [0.3148857355117798, 0.462950736284256, 0.5254259705543518, 0.613789439201355, 0.6711134314537048, 0.7174745798110962, 0.7269845604896545, 0.7491744756698608, 0.7663452625274658, 0.7543256878852844, 0.7877426743507385, 0.7814027070999146, 0.7886672616004944, 0.7928939461708069, 0.809140145778656, 0.8138951063156128, 0.8105930685997009, 0.8219521641731262, 0.8272355198860168, 0.8231409192085266, 0.8345000743865967, 0.8383304476737976, 0.8408400416374207, 0.8521991968154907, 0.8514066934585571, 0.8466516733169556, 0.8537842035293579, 0.8510104417800903, 0.8621054291725159, 0.8602562546730042, 0.8607845902442932, 0.8646149635314941, 0.8642187118530273, 0.863558292388916, 0.8778232932090759], "val_loss": [1.4720494747161865, 1.2948664256504603, 0.872750094958714, 0.700807877949306, 0.5970783403941563, 0.5294748033796038, 0.48101692540305, 0.48498012338365826, 0.5467511415481567, 0.4496194124221802, 0.43569983754839214, 0.42656698397227694, 0.43417084217071533, 0.4194425514766148, 0.42769103390829905, 0.4206277132034302, 0.39140836681638447, 0.3730502554348537, 0.40015415634427753, 0.36675002745219637, 0.3626575214522226, 0.3829622438975743, 0.3573160852704729, 0.3474903702735901, 0.38791909388133455, 0.33454584223883493, 0.3449426293373108, 0.3800629803112575, 0.357368997165135, 0.3261110952922276, 0.336928129196167, 0.32481310197285246, 0.3399622780936105, 0.33285235507147654, 0.36945436682019916], "val_accuracy": [0.54666668176651, 0.43700000643730164, 0.6209999918937683, 0.7016666531562805, 0.7166666388511658, 0.7573333382606506, 0.7863333225250244, 0.7956666946411133, 0.7356666922569275, 0.8180000185966492, 0.8103333115577698, 0.812333345413208, 0.8173333406448364, 0.8163333535194397, 0.8183333277702332, 0.8109999895095825, 0.831333339214325, 0.8366666436195374, 0.8180000185966492, 0.8463333249092102, 0.8493333458900452, 0.8303333520889282, 0.8523333072662354, 0.8493333458900452, 0.824999988079071, 0.8650000095367432, 0.8579999804496765, 0.8339999914169312, 0.8489999771118164, 0.8656666874885559, 0.859000027179718, 0.8650000095367432, 0.8576666712760925, 0.8603333234786987, 0.8479999899864197]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [5, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8165714144706726, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1639777805512024, 1.7320102481731192, 1.236107623383448, 0.9374517440606952, 0.8558232489751393, 0.7314114814436966, 0.6744253264442175, 0.6610414301320908, 0.6200087257128161, 0.6151325067808096, 0.5511401955871346, 0.5614289597371598, 0.5418931795873378, 0.5210787348223872, 0.4844451912437306, 0.48998409045166136, 0.4654652959225657, 0.46477930554230734, 0.4536163575692404, 0.46687955836483896, 0.4250276246838928, 0.42684847687245236, 0.4150019700910437, 0.389191143229464, 0.3992985738282663, 0.40036422750732886, 0.38353443465385895, 0.37885392765169995, 0.3662931287624045, 0.3456906217586221, 0.3501241732589982, 0.35457239576051136, 0.344051013336426, 0.37026136036184343, 0.3251017264371314, 0.32327049899772015, 0.309062613275435], "accuracy": [0.3144895136356354, 0.45410117506980896, 0.5674283504486084, 0.6542068123817444, 0.6804913282394409, 0.7248712182044983, 0.7428345084190369, 0.7532690763473511, 0.7696473598480225, 0.7664773464202881, 0.791969358921051, 0.7917051911354065, 0.7930260300636292, 0.7994980812072754, 0.821820080280304, 0.8144234418869019, 0.8298771381378174, 0.8265751004219055, 0.8308017253875732, 0.8227446675300598, 0.8421608805656433, 0.8404437899589539, 0.8459912538528442, 0.8594637513160706, 0.850350022315979, 0.8499537706375122, 0.857218325138092, 0.8599920868873596, 0.8648791313171387, 0.8701624870300293, 0.870030403137207, 0.869502067565918, 0.8732003569602966, 0.8570862412452698, 0.8779553771018982, 0.8776912093162537, 0.883238673210144], "val_loss": [1.470400367464338, 1.2382196698869978, 0.784662127494812, 0.6071561574935913, 0.5910199369703021, 0.5173665796007428, 0.4755773884909494, 0.5365076065063477, 0.5127698693956647, 0.43444316727774485, 0.42684695550373625, 0.4336425406592233, 0.4136770878519331, 0.3951356155531747, 0.40548468487603323, 0.40466679845537457, 0.3777359553745815, 0.3598212514604841, 0.4451932055609567, 0.3669043183326721, 0.3561350532940456, 0.3715346029826573, 0.35653319529124666, 0.3385413374219622, 0.38267488139016287, 0.3354911208152771, 0.33809185879571096, 0.3650107724325998, 0.3425760098866054, 0.3241344264575413, 0.3302287118775504, 0.33339355673108784, 0.37063997983932495, 0.3374490567616054, 0.34688907861709595, 0.3339226075581142, 0.3246982523373195], "val_accuracy": [0.5473333597183228, 0.46133333444595337, 0.625, 0.7356666922569275, 0.7223333120346069, 0.7566666603088379, 0.7850000262260437, 0.7519999742507935, 0.750333309173584, 0.8159999847412109, 0.8133333325386047, 0.8140000104904175, 0.8246666789054871, 0.8330000042915344, 0.8296666741371155, 0.8236666917800903, 0.8420000076293945, 0.8489999771118164, 0.7923333048820496, 0.8403333425521851, 0.8550000190734863, 0.8416666388511658, 0.8550000190734863, 0.8583333492279053, 0.824999988079071, 0.859333336353302, 0.8579999804496765, 0.8429999947547913, 0.8556666374206543, 0.8640000224113464, 0.8579999804496765, 0.8676666617393494, 0.8366666436195374, 0.8606666922569275, 0.859666645526886, 0.862666666507721, 0.8676666617393494]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [5, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 2, 1, 2, 6, 2, 8, 1, 3, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 0, 3, 3, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.2574285566806793, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3019344631581022, 2.3026502083289766, 2.3025599681721736, 2.3026442922983406, 2.3016186881263763, 2.3008690578842113, 2.3001264065263953, 2.3002237845972435, 2.3012362740153507, 2.299849209736965, 2.2998983233029486, 2.3001598000542174, 2.2995192250398016, 2.299204475702375, 2.298442368746087, 2.298629676755614, 2.299030441822802, 2.297168571179679, 2.2977507951756855, 2.2975196653841476, 2.2975705626649847, 2.2983426863506975, 2.2968470333841546, 2.295610185942362, 2.296750255878717, 2.2960227897784113, 2.2953091120250693, 2.293948400289848, 2.2951063550836484, 2.294442012152258, 2.292859269674853, 2.2952784601691976, 2.295593999522064, 2.292981881097701, 2.29430557330208, 2.2917779245554195, 2.292712742138249, 2.2916902516417577, 2.293154431907272, 2.2908689108475593, 2.2914243299947548, 2.291228126588357, 2.2906577134601602, 2.2906750798807987, 2.2906327158185107, 2.2897091063651995, 2.2913201332974036, 2.2901297717156774, 2.290719658108813, 2.2882741336195207, 2.2873360957955766, 2.288753840397724, 2.28752753350713, 2.2870373030254285, 2.2876526500098286, 2.2887378961749287, 2.28828366041152, 2.28748137934207, 2.287640401920575, 2.2859710766229617, 2.2860551743916138, 2.2855004805143024, 2.286140231723405, 2.2862918057288666, 2.285937028333669, 2.2855292251160146, 2.2866839044964182, 2.2850991767615754, 2.2837660848314987, 2.2849276239656895, 2.2834735913378075, 2.282853717045651, 2.2830636306697696, 2.283986775409969, 2.2821923920255154, 2.2810456727269366, 2.2826308401080326, 2.282842774448488, 2.2811085738211165, 2.2809430405038964, 2.2834108708131864, 2.2807341685085376, 2.2821238809305173, 2.281305440334108, 2.281282542041894, 2.2796922495903322, 2.278892357524801, 2.2800541361797566, 2.279432787918506, 2.2790676169092503, 2.2790787341871503, 2.2780150562591714, 2.2790339773420203, 2.2786895817517445, 2.2783149850681834, 2.2763051331995845, 2.27627348430625, 2.2772155232228593, 2.2785691870453966, 2.2764937186112038], "accuracy": [0.08809932321310043, 0.09140139818191528, 0.0886276587843895, 0.08915598690509796, 0.09034473448991776, 0.0936468094587326, 0.09430722147226334, 0.09272222965955734, 0.09457138925790787, 0.09708096832036972, 0.09708096832036972, 0.09708096832036972, 0.09602430462837219, 0.10315678268671036, 0.10751552134752274, 0.1002509593963623, 0.10011887550354004, 0.10474177449941635, 0.10315678268671036, 0.09893012791872025, 0.09787346422672272, 0.10130762308835983, 0.10394927859306335, 0.09959053993225098, 0.1026284471154213, 0.10711926966905594, 0.11174217611551285, 0.1088363528251648, 0.10672302544116974, 0.11200633645057678, 0.109232597053051, 0.11174217611551285, 0.11108175665140152, 0.1162329912185669, 0.10593052208423615, 0.11966715008020401, 0.10962884873151779, 0.1142517477273941, 0.11240258812904358, 0.11755382269620895, 0.11953506618738174, 0.11517632752656937, 0.1216483935713768, 0.12270505726337433, 0.11596883088350296, 0.12362963706254959, 0.11808215826749802, 0.11821424216032028, 0.12270505726337433, 0.13089419901371002, 0.1294412910938263, 0.12468630075454712, 0.13313961029052734, 0.1262712925672531, 0.12693171203136444, 0.12270505726337433, 0.1294412910938263, 0.13168670237064362, 0.13089419901371002, 0.13115836679935455, 0.137630432844162, 0.12534672021865845, 0.1290450394153595, 0.12336547672748566, 0.13710209727287292, 0.13181878626346588, 0.1368379294872284, 0.12812046706676483, 0.1398758441209793, 0.1336679458618164, 0.1422533392906189, 0.14463083446025848, 0.14080041646957397, 0.1328754425048828, 0.136045441031456, 0.14753665030002594, 0.14568749070167542, 0.1406683325767517, 0.1508387327194214, 0.14330999553203583, 0.1438383311033249, 0.14463083446025848, 0.13815876841545105, 0.1476687341928482, 0.1550653874874115, 0.1460837423801422, 0.14463083446025848, 0.1484612375497818, 0.1468762308359146, 0.14898955821990967, 0.1500462293624878, 0.1508387327194214, 0.1570466309785843, 0.15031039714813232, 0.1534803807735443, 0.15757495164871216, 0.15863162279129028, 0.15480121970176697, 0.15572579205036163, 0.1554616242647171], "val_loss": [1.9706971985953194, 1.9704559871128626, 1.9702131407601493, 1.9699699538094657, 1.969729014805385, 1.9694867815290178, 1.969245093209403, 1.9690026555742537, 1.9687627383640833, 1.9685232979910714, 1.9682835851396834, 1.968043395451137, 1.9678020477294922, 1.9675637653895788, 1.9673220770699638, 1.9670842715672083, 1.9668447630746024, 1.9666058676583427, 1.9663671084812708, 1.966132572719029, 1.9658918380737305, 1.9656556674412318, 1.965416363307408, 1.965179375239781, 1.9649413653782435, 1.9647011756896973, 1.9644650050571986, 1.964228561946324, 1.9639911651611328, 1.9637530190604073, 1.9635158266339983, 1.963280269077846, 1.9630427360534668, 1.9628043174743652, 1.9625680787222726, 1.9623297963823592, 1.962090287889753, 1.9618515287126814, 1.9616164479936873, 1.9613796642848425, 1.9611407688685827, 1.960904666355678, 1.9606713567461287, 1.9604345730372839, 1.9602010590689523, 1.9599641391209193, 1.959728377205985, 1.9594907760620117, 1.9592547416687012, 1.9590158462524414, 1.9587784494672502, 1.958540984562465, 1.9583039283752441, 1.9580658503941126, 1.9578284536089217, 1.9575916699000768, 1.9573558398655482, 1.9571234158107214, 1.9568869726998466, 1.9566518238612585, 1.9564162663051061, 1.9561813899448939, 1.9559457642691476, 1.9557091167994909, 1.955472469329834, 1.9552343232291085, 1.9549993787493025, 1.9547602789742606, 1.9545224053519112, 1.954284940447126, 1.954047679901123, 1.9538102831159319, 1.9535726819719588, 1.9533355576651437, 1.9530987058367049, 1.9528602191380091, 1.9526207787649972, 1.9523824964250838, 1.9521426473345076, 1.9519062042236328, 1.951669420514788, 1.951428004673549, 1.951188428061349, 1.950948783329555, 1.9507102285112654, 1.9504707200186593, 1.9502301897321428, 1.9499906131199427, 1.9497504915509904, 1.9495118686131068, 1.9492718151637487, 1.9490339415413993, 1.948796272277832, 1.9485575131007604, 1.9483186176845007, 1.9480765887669154, 1.9478355816432409, 1.9475960050310408, 1.9473579951695033, 1.9471169880458288], "val_accuracy": [0.03999999910593033, 0.041999999433755875, 0.04233333468437195, 0.044333335012197495, 0.045666664838790894, 0.04600000008940697, 0.046666666865348816, 0.049666665494441986, 0.05166666582226753, 0.054666668176651, 0.05533333495259285, 0.056333333253860474, 0.05833333358168602, 0.05966666713356972, 0.061666667461395264, 0.06400000303983688, 0.06499999761581421, 0.06733333319425583, 0.06966666877269745, 0.07100000232458115, 0.07100000232458115, 0.07266666740179062, 0.07533333450555801, 0.07733333110809326, 0.07900000363588333, 0.08133333176374435, 0.08233333379030228, 0.08399999886751175, 0.08633333444595337, 0.08766666799783707, 0.08966666460037231, 0.09166666865348816, 0.09466666728258133, 0.09799999743700027, 0.10133333504199982, 0.10400000214576721, 0.1066666692495346, 0.10833333432674408, 0.1106666699051857, 0.11400000005960464, 0.11533333361148834, 0.11666666716337204, 0.11900000274181366, 0.12133333086967468, 0.1236666664481163, 0.1263333261013031, 0.1289999932050705, 0.1303333342075348, 0.13333334028720856, 0.13699999451637268, 0.14000000059604645, 0.14300000667572021, 0.14633333683013916, 0.14933332800865173, 0.15266667306423187, 0.156333327293396, 0.1586666703224182, 0.16033333539962769, 0.16300000250339508, 0.16466666758060455, 0.16633333265781403, 0.16699999570846558, 0.1706666648387909, 0.17166666686534882, 0.17299999296665192, 0.17466667294502258, 0.1783333271741867, 0.18000000715255737, 0.18333333730697632, 0.18400000035762787, 0.1860000044107437, 0.1899999976158142, 0.19233334064483643, 0.195333331823349, 0.1966666728258133, 0.19766665995121002, 0.2006666660308838, 0.20499999821186066, 0.2070000022649765, 0.20800000429153442, 0.21133333444595337, 0.2150000035762787, 0.2163333296775818, 0.21833333373069763, 0.22066666185855865, 0.22233332693576813, 0.22499999403953552, 0.2290000021457672, 0.23133333027362823, 0.23266667127609253, 0.23466666042804718, 0.23666666448116302, 0.23933333158493042, 0.2423333376646042, 0.2446666657924652, 0.2460000067949295, 0.24899999797344208, 0.2523333430290222, 0.2549999952316284, 0.25699999928474426]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [5, 66, 89, 50, 85, 46], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 4, 1, 2, 2, 6, 1, 9, 3, 1, 8, 4, 8, 9, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 2, 0, 3, 3, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.2574285566806793, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3019344631581022, 2.3026502083289766, 2.3025599681721736, 2.3026441978252543, 2.3016185126898545, 2.3008689454297473, 2.3001262131084967, 2.3002236091607218, 2.3012359726147142, 2.299848989299764, 2.2998979409388767, 2.3001594176901454, 2.2995189866212224, 2.299204174301738, 2.298441810945494, 2.298629231409484, 2.2990299155132377, 2.2971680763611437, 2.2977501608833832, 2.297519094073903, 2.2975698429375213, 2.2983419846046114, 2.2968464305828813, 2.2956094077045672, 2.296749477640922, 2.2960219620682105, 2.295308194313508, 2.2939475231072404, 2.2951054958824186, 2.2944411529510282, 2.2928581855646955, 2.295277425531446, 2.2955930008470675, 2.2929807340054857, 2.2943044262098646, 2.291776831407337, 2.2927115005729473, 2.291688965075776, 2.293153334287463, 2.2908676377912287, 2.291423074919802, 2.2912267770403174, 2.2906564718948585, 2.290673680860353, 2.2906314607435574, 2.2897077388357823, 2.2913186083128423, 2.290128246731116, 2.290718178124932, 2.2882724017074096, 2.287334602302044, 2.2887522344497278, 2.28752581510467, 2.2870356970774326, 2.287650837134282, 2.288736240754526, 2.2882817845539156, 2.2874795349754944, 2.2876384945719423, 2.2859691242736484, 2.2860533300250387, 2.285498492202235, 2.2861382928837433, 2.286289754434741, 2.285934932038863, 2.2855271423308605, 2.2866818082016125, 2.2850970309943635, 2.283763988536693, 2.2849253837253913, 2.283471427589218, 2.282851476805353, 2.2830613409570653, 2.283984391224178, 2.2821900888031594, 2.2810432570501167, 2.2826283749588065, 2.282840403772348, 2.2811060591994843, 2.2809406248270765, 2.283408374172932, 2.2807315459041675, 2.282121163853061, 2.281302673784245, 2.2812799014561462, 2.2796895460225275, 2.2788895100115028, 2.2800512886664586, 2.2794299898776145, 2.279064823340085, 2.279075796672492, 2.278012145763816, 2.279030954392201, 2.278686419328159, 2.2783120565914508, 2.2763019213035927, 2.2762703489019667, 2.277212360799273, 2.2785659166390726, 2.2764904257517764], "accuracy": [0.08809932321310043, 0.09140139818191528, 0.0886276587843895, 0.08915598690509796, 0.09034473448991776, 0.0936468094587326, 0.09430722147226334, 0.09272222965955734, 0.09470347315073013, 0.09708096832036972, 0.09708096832036972, 0.09708096832036972, 0.09602430462837219, 0.10315678268671036, 0.10751552134752274, 0.1002509593963623, 0.10011887550354004, 0.10474177449941635, 0.10315678268671036, 0.09893012791872025, 0.09787346422672272, 0.10130762308835983, 0.10394927859306335, 0.09959053993225098, 0.1026284471154213, 0.10711926966905594, 0.11174217611551285, 0.1088363528251648, 0.10672302544116974, 0.11200633645057678, 0.109232597053051, 0.11174217611551285, 0.11108175665140152, 0.1162329912185669, 0.10593052208423615, 0.11966715008020401, 0.10962884873151779, 0.1142517477273941, 0.11240258812904358, 0.11755382269620895, 0.11953506618738174, 0.11517632752656937, 0.1216483935713768, 0.12270505726337433, 0.11596883088350296, 0.12362963706254959, 0.11808215826749802, 0.11821424216032028, 0.12270505726337433, 0.13089419901371002, 0.1294412910938263, 0.12468630075454712, 0.13313961029052734, 0.1262712925672531, 0.12693171203136444, 0.1228371411561966, 0.1294412910938263, 0.13168670237064362, 0.13089419901371002, 0.13115836679935455, 0.137630432844162, 0.12534672021865845, 0.1290450394153595, 0.12336547672748566, 0.13710209727287292, 0.13195087015628815, 0.1368379294872284, 0.12812046706676483, 0.1398758441209793, 0.1336679458618164, 0.1422533392906189, 0.14463083446025848, 0.14080041646957397, 0.1328754425048828, 0.136045441031456, 0.14753665030002594, 0.14568749070167542, 0.1406683325767517, 0.1508387327194214, 0.14330999553203583, 0.1438383311033249, 0.14463083446025848, 0.13815876841545105, 0.1476687341928482, 0.1550653874874115, 0.1460837423801422, 0.14463083446025848, 0.1484612375497818, 0.1468762308359146, 0.14898955821990967, 0.1500462293624878, 0.1508387327194214, 0.1570466309785843, 0.15031039714813232, 0.15361246466636658, 0.15757495164871216, 0.15863162279129028, 0.15480121970176697, 0.15572579205036163, 0.1554616242647171], "val_loss": [1.9706971985953194, 1.9704559189932687, 1.9702131407601493, 1.9699698175702776, 1.969728878566197, 1.9694865771702357, 1.9692449569702148, 1.9690024512154716, 1.9687625340053014, 1.9685230255126953, 1.9682831764221191, 1.9680430548531669, 1.9678017071315221, 1.9675632885524206, 1.9673218045915877, 1.9670836584908622, 1.9668442181178503, 1.9666053908211845, 1.9663666316441126, 1.9661319596426827, 1.9658912249973841, 1.9656549862452917, 1.9654157502310616, 1.9651786940438407, 1.9649405479431152, 1.964700426374163, 1.9644643238612585, 1.9642276763916016, 1.9639902796064104, 1.963752269744873, 1.963514941079276, 1.9632793154035295, 1.9630419186183385, 1.9628031594412667, 1.9625669888087682, 1.9623287064688546, 1.9620891979762487, 1.961850575038365, 1.9616152218409948, 1.961378506251744, 1.9611396108354842, 1.9609033039637975, 1.960669994354248, 1.9604334150041853, 1.9601998329162598, 1.959963049207415, 1.9597270148141044, 1.9594894817897253, 1.9592533792768205, 1.9590142795017786, 1.9587768827165877, 1.9585394178118025, 1.9583022935049874, 1.9580642155238561, 1.957826750619071, 1.95759003502982, 1.9573542731148856, 1.9571216447012765, 1.9568853378295898, 1.9566503252301897, 1.9564144951956612, 1.956179482596261, 1.9559438569205148, 1.955707209450858, 1.955470425742013, 1.9552322796412878, 1.9549976076398576, 1.9547581672668457, 1.9545202936444963, 1.9542829649788993, 1.9540457044328963, 1.9538082395281111, 1.9535704340253557, 1.9533334459577287, 1.953096526009696, 1.9528579711914062, 1.9526184626988001, 1.9523801803588867, 1.9521405356270927, 1.9519038881574358, 1.951667172568185, 1.9514256886073522, 1.95118590763637, 1.95094633102417, 1.9507077762058802, 1.9504681314740862, 1.9502276693071638, 1.9499880926949638, 1.9497479030064173, 1.9495092119489397, 1.9492691584995814, 1.949031148638044, 1.9487934793744768, 1.9485546520778112, 1.9483156885419572, 1.9480736596243722, 1.9478327887398856, 1.9475930758884974, 1.94735506602696, 1.9471139226640974], "val_accuracy": [0.03999999910593033, 0.041999999433755875, 0.04233333468437195, 0.044333335012197495, 0.045666664838790894, 0.04600000008940697, 0.046666666865348816, 0.049666665494441986, 0.05166666582226753, 0.054666668176651, 0.05533333495259285, 0.056333333253860474, 0.05833333358168602, 0.05966666713356972, 0.06199999898672104, 0.06400000303983688, 0.06499999761581421, 0.06733333319425583, 0.06966666877269745, 0.07100000232458115, 0.07100000232458115, 0.07266666740179062, 0.07533333450555801, 0.07733333110809326, 0.07900000363588333, 0.08133333176374435, 0.08233333379030228, 0.08399999886751175, 0.08633333444595337, 0.08799999952316284, 0.08966666460037231, 0.09166666865348816, 0.09466666728258133, 0.09799999743700027, 0.10133333504199982, 0.10400000214576721, 0.1066666692495346, 0.10833333432674408, 0.1106666699051857, 0.11400000005960464, 0.11533333361148834, 0.11666666716337204, 0.11900000274181366, 0.12133333086967468, 0.1236666664481163, 0.1263333261013031, 0.1289999932050705, 0.1303333342075348, 0.13333334028720856, 0.13699999451637268, 0.14000000059604645, 0.14300000667572021, 0.14633333683013916, 0.1496666669845581, 0.15266667306423187, 0.156333327293396, 0.1586666703224182, 0.16033333539962769, 0.16300000250339508, 0.16466666758060455, 0.16633333265781403, 0.16699999570846558, 0.1706666648387909, 0.17166666686534882, 0.17299999296665192, 0.17466667294502258, 0.17866666615009308, 0.18000000715255737, 0.18333333730697632, 0.18400000035762787, 0.1860000044107437, 0.1899999976158142, 0.19233334064483643, 0.195333331823349, 0.1966666728258133, 0.19766665995121002, 0.2006666660308838, 0.20499999821186066, 0.2070000022649765, 0.20800000429153442, 0.21133333444595337, 0.2150000035762787, 0.2163333296775818, 0.21833333373069763, 0.22066666185855865, 0.22233332693576813, 0.22499999403953552, 0.2290000021457672, 0.23133333027362823, 0.23266667127609253, 0.23466666042804718, 0.23666666448116302, 0.23933333158493042, 0.2423333376646042, 0.2446666657924652, 0.2460000067949295, 0.24899999797344208, 0.2523333430290222, 0.2553333342075348, 0.25699999928474426]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 4, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 87, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.11999999731779099, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(beta, grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.689126451175132, 2.348001855003237, 2.32325337150739, 2.3425433346309115, 2.5492613883365527, 2.3239238433802623], "accuracy": [0.24382512271404266, 0.10500594228506088, 0.10328886657953262, 0.10394927859306335, 0.1010434553027153, 0.09985470771789551], "val_loss": [2.0081862040928433, 1.976015908377511, 1.99758209500994, 2.0071840967450822, 1.99514525277274, 1.9969526018415178], "val_accuracy": [0.10366666316986084, 0.10233332961797714, 0.09300000220537186, 0.09666666388511658, 0.09566666930913925, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [8, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [1, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 10, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.square(beta))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30211271453669, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [1, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.subtract(tf.math.add(grad, tf.math.add(beta, grad)), grad)), tf.math.add(beta, tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.subtract(beta, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08189142495393753, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [27, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.585303391857296, 1.2018785094217808e+29, 2.3141854123637158, 2.3166414451259016, 2.3196972321525555, 2.323569594719438], "accuracy": [0.029586579650640488, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [22.498875209263392, 1.9825091361999512, 1.9843693460736955, 1.9867241723196847, 1.9897105353219169, 1.993438652583531], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303829783886935, 2.3238870850675033, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08387266844511032, 0.07858935743570328, 0.08757099509239197, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9756817136492049, 2.0018564632960727, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.015666667371988297, 0.05766666680574417, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [63, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [1, 7, 3, 4], [3, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [1, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07092854380607605, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [5, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 0, 3, 3, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 88, 71, 40, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.09971428662538528, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 9, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.square(grad), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3439668602616544, 2.753114793436355, 3.893128153040519, 5.986298705640014, 8.722506138311951, 12.430980189979321, 16.817281930611323], "accuracy": [0.08757099509239197, 0.09945846349000931, 0.1010434553027153, 0.09774138033390045, 0.10368511080741882, 0.10408136248588562, 0.09893012791872025], "val_loss": [2.038607052394322, 2.4249640873500278, 3.3358313696725026, 4.801908901759556, 6.778711046491351, 9.260386330740792, 12.270960399082728], "val_accuracy": [0.1003333330154419, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 5, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 0, 3, 3, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 88, 71, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.square(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3020427925806195, 2.30302328654662, 2.303200092707422, 2.303550348337285, 2.3027833376294824, 2.3023079592616975], "accuracy": [0.08757099509239197, 0.09074098616838455, 0.0870426595211029, 0.0882314071059227, 0.08836349099874496, 0.09047681838274002], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 9, 1, 0, 4, 6, 1, 0, 5, 2, 4, 5, 8, 2, 5, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 1, 3, 2, 3, 0, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3020427925806195, 2.30302328654662, 2.303200092707422, 2.303550348337285, 2.3027833376294824, 2.3023079592616975], "accuracy": [0.08757099509239197, 0.09074098616838455, 0.0870426595211029, 0.0882314071059227, 0.08836349099874496, 0.09047681838274002], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 4], [69, 2], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 7, 7, 4, 3, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1, 1, 7, 4, 3, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020427925806195, 2.30302328654662, 2.303200092707422, 2.303550348337285, 2.3027833376294824, 2.3023079592616975], "accuracy": [0.08757099509239197, 0.09074098616838455, 0.0870426595211029, 0.0882314071059227, 0.08836349099874496, 0.09047681838274002], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 2, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [5, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 4, 1, 2, 2, 6, 1, 9, 8, 1, 9, 0, 1, 2, 0, 0, 2, 9, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 2, 2, 3, 3, 3, 2, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [16, 87, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 1, 27, 27, 18, 9, 3, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.pow(tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))))))), tf.math.add(beta, beta)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3020427925806195, 2.30302328654662, 2.303200092707422, 2.303550348337285, 2.3027833376294824, 2.3023079592616975], "accuracy": [0.08757099509239197, 0.09074098616838455, 0.0870426595211029, 0.0882314071059227, 0.08836349099874496, 0.09047681838274002], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]