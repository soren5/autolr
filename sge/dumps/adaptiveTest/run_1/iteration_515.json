[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8445714116096497, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0714680835193318, 1.492078904494035, 0.9889773073181926, 0.8356105219875392, 0.7716336036874728, 0.7258057039742299, 0.6655025458795646, 0.6302815939236657, 0.62453109525088, 0.6115653305289264, 0.5843630717604026, 0.5649366345954783, 0.5401651153726947, 0.5595391575040881, 0.5091463082092722, 0.5067248059506304, 0.4936406789848188, 0.4828469285584239, 0.4791495488178398, 0.46838680671001737, 0.4594465781983887, 0.43242454015111187, 0.4275378341908468, 0.4245890930005667, 0.4318342165522776, 0.41518087937233233, 0.4125720914076852, 0.3955574262616121, 0.3940544793114859, 0.415094163293899, 0.3786706958921153, 0.3781985430165745, 0.3784036350138451, 0.3546303328293473, 0.36103396664253395, 0.3607149753178808, 0.34103875622899227, 0.3414691979851091, 0.32514727847797525, 0.32404388026192266, 0.31735742172041054], "accuracy": [0.32333904504776, 0.5182934999465942, 0.6425835490226746, 0.6868313550949097, 0.709021270275116, 0.7214370369911194, 0.7485140562057495, 0.7633073329925537, 0.7652885913848877, 0.7677981853485107, 0.7740060687065125, 0.7891955971717834, 0.7976489067077637, 0.7872143983840942, 0.807158887386322, 0.8090080618858337, 0.8183859586715698, 0.8182538747787476, 0.8206313848495483, 0.828820526599884, 0.8297450542449951, 0.8436138033866882, 0.8381983637809753, 0.8429533839225769, 0.8429533839225769, 0.8446704745292664, 0.8454629778862, 0.8492933511734009, 0.8574824929237366, 0.8401796221733093, 0.8582749962806702, 0.8613129258155823, 0.8570862412452698, 0.8692378997802734, 0.8656716346740723, 0.8683133125305176, 0.8758420348167419, 0.8733324408531189, 0.8805969953536987, 0.880729079246521, 0.8825782537460327], "val_loss": [1.627476726259504, 0.7970837184361049, 0.6851708207811628, 0.5782664503370013, 0.5462906360626221, 0.5298326356070382, 0.4999778951917376, 0.4924975463322231, 0.4651133843830654, 0.46789228916168213, 0.4368750878742763, 0.43605031285967144, 0.4859538589205061, 0.4317178045000349, 0.41902596609933035, 0.435174788747515, 0.4065733126231602, 0.41189490045819965, 0.3961945687021528, 0.3905877556119646, 0.37551190171922955, 0.37000379392078947, 0.36606029101780485, 0.3856180054800851, 0.38618231671197073, 0.3733348846435547, 0.3704591819218227, 0.350865227835519, 0.38209902388708933, 0.3443500740187509, 0.36046174594334196, 0.3699137568473816, 0.3369350859097072, 0.336661091872624, 0.33545570714133127, 0.32365137338638306, 0.34906292813164846, 0.33884512526648386, 0.3342071941920689, 0.3362246496336801, 0.3283372351101467], "val_accuracy": [0.5446666479110718, 0.6553333401679993, 0.6850000023841858, 0.7383333444595337, 0.7643333077430725, 0.7720000147819519, 0.7749999761581421, 0.7743333578109741, 0.8003333210945129, 0.8033333420753479, 0.8109999895095825, 0.812666654586792, 0.7696666717529297, 0.8163333535194397, 0.8159999847412109, 0.8036666512489319, 0.8299999833106995, 0.8199999928474426, 0.8286666870117188, 0.8336666822433472, 0.8429999947547913, 0.8379999995231628, 0.843666672706604, 0.8379999995231628, 0.8289999961853027, 0.8376666903495789, 0.8423333168029785, 0.8583333492279053, 0.8286666870117188, 0.8583333492279053, 0.8403333425521851, 0.843999981880188, 0.859333336353302, 0.8543333411216736, 0.8600000143051147, 0.8650000095367432, 0.8513333201408386, 0.8533333539962769, 0.8613333106040955, 0.859000027179718, 0.8640000224113464]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0], [5, 2, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8339999914169312, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.083272281434353, 1.4896124669699669, 0.9955779128637705, 0.8225300031929536, 0.850017941890848, 0.7286034278850104, 0.693891488683852, 0.6552912935825183, 0.6506771198069777, 0.6214624156080862, 0.5906518690102073, 0.5812134642674073, 0.5545379916249549, 0.568862706788889, 0.5215561154842565, 0.5168656061007725, 0.5290862319098173, 0.506186212153089, 0.48590223964147755, 0.4793913305167902, 0.47288972750678115, 0.4459642563017683, 0.4337978688300073, 0.4577692576946442, 0.4347431368012832, 0.4264365273491266, 0.42552274550193053, 0.4129131744172768, 0.40802585608246555, 0.4142260072198542, 0.39168302141491135, 0.39136933839521104, 0.38213231261332964, 0.3652997657276809, 0.35866973328788787, 0.36589709815489635, 0.3500197461457253, 0.3439456471528013, 0.3366256470079388, 0.3322937675966893, 0.3281570562534108, 0.32523911846957865, 0.3193235010707761, 0.3176777671278114, 0.31943794263431097, 0.30701948316767075, 0.2989060995939653], "accuracy": [0.3195086419582367, 0.5159159898757935, 0.6355831623077393, 0.6934354901313782, 0.6781138777732849, 0.7228899598121643, 0.7401928305625916, 0.7553823590278625, 0.7544577717781067, 0.7688548564910889, 0.77677983045578, 0.7777044177055359, 0.7902522683143616, 0.7833839654922485, 0.8014793395996094, 0.8061022162437439, 0.8026680946350098, 0.806630551815033, 0.8195747137069702, 0.8193105459213257, 0.8251221776008606, 0.8345000743865967, 0.8370096683502197, 0.8259146809577942, 0.8374059200286865, 0.8381983637809753, 0.8405758738517761, 0.8467837572097778, 0.8549728989601135, 0.8404437899589539, 0.8537842035293579, 0.852859616279602, 0.8602562546730042, 0.8632941246032715, 0.8681812286376953, 0.863558292388916, 0.8712190985679626, 0.8709549307823181, 0.8705587387084961, 0.8766345381736755, 0.8778232932090759, 0.8757099509239197, 0.878879964351654, 0.8805969953536987, 0.8857482671737671, 0.8837670087814331, 0.8861445188522339], "val_loss": [1.6707838262830461, 0.759952357837132, 0.685279130935669, 0.6083635262080601, 0.5735183273042951, 0.5257709196635655, 0.5130034174237933, 0.537602288382394, 0.47496674742017475, 0.47772060121808735, 0.4475177526473999, 0.4457029104232788, 0.49623193059648785, 0.4344899994986398, 0.4173499516078404, 0.4935088668550764, 0.4222850373813084, 0.4150070207459586, 0.41676792076655794, 0.3912497418267386, 0.3798848901476179, 0.37330481835774015, 0.3889051675796509, 0.37298922879355295, 0.3918210097721645, 0.40653322424207416, 0.37862574202673777, 0.35131027017320904, 0.3779134580067226, 0.3692339062690735, 0.37329912185668945, 0.36979940959385466, 0.34079320090157644, 0.3472482051168169, 0.35611807448523386, 0.32625384841646465, 0.33845902340752737, 0.3393441694123404, 0.3357184018407549, 0.3430426972252982, 0.32767692634037565, 0.3293842673301697, 0.3445348228727068, 0.32591037239347187, 0.3207704169409616, 0.3144068036760603, 0.3255470650536673], "val_accuracy": [0.5580000281333923, 0.7043333053588867, 0.6819999814033508, 0.7173333168029785, 0.7620000243186951, 0.7739999890327454, 0.7770000100135803, 0.7436666488647461, 0.7950000166893005, 0.7913333177566528, 0.8073333501815796, 0.8040000200271606, 0.7670000195503235, 0.8176666498184204, 0.8203333616256714, 0.7789999842643738, 0.8213333487510681, 0.8206666707992554, 0.8186666369438171, 0.8320000171661377, 0.8379999995231628, 0.8386666774749756, 0.8346666693687439, 0.8426666855812073, 0.8263333439826965, 0.8333333134651184, 0.8373333215713501, 0.8553333282470703, 0.8333333134651184, 0.8399999737739563, 0.831333339214325, 0.8479999899864197, 0.8579999804496765, 0.8510000109672546, 0.846666693687439, 0.8643333315849304, 0.8573333621025085, 0.856333315372467, 0.859666645526886, 0.8513333201408386, 0.8663333058357239, 0.8730000257492065, 0.8526666760444641, 0.8683333396911621, 0.8726666569709778, 0.8709999918937683, 0.8663333058357239]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 2, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8257142901420593, "mapping_values": [1, 18, 18, 11, 7, 3, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), alpha)))), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.016700624632341, 1.37650138782929, 1.0804809566895723, 0.9014459456576804, 0.8718803710610623, 0.7838149204025525, 0.7354206634770767, 0.7226154585209631, 0.6977923449870381, 0.6940047828166429, 0.646495625382606, 0.6503180612615228, 0.6237097516224889, 0.6308133920752818, 0.609364414432376, 0.6010305778603308, 0.591714009569778, 0.5720270478950594, 0.5564625118197923, 0.5769084503212625, 0.5662256687576461, 0.5318097834180233, 0.5344719726726631, 0.5244867986990964, 0.5276524647430674, 0.4979706953789312, 0.5093779963052599, 0.5004121257549956, 0.49111014281391796, 0.509117253157189, 0.4854639417790403, 0.4725804727516154, 0.47469083222226854, 0.4628893905004978, 0.45063119835825866, 0.46068942680287717, 0.44445060292932226, 0.4306526900778483, 0.43146505608629193, 0.4383821557415569, 0.41363405513332, 0.43215103523606213, 0.4082853827596482, 0.4178611214969294, 0.4005133042112239, 0.40365809887911364, 0.40272600121186974, 0.40123620329752197, 0.3968915737198013, 0.3830151379998051, 0.3785866719266254, 0.38100176019092924, 0.37374420100907924, 0.38050595815502], "accuracy": [0.33760401606559753, 0.5233126282691956, 0.6192048788070679, 0.6653017997741699, 0.6734909415245056, 0.7024171352386475, 0.7285695672035217, 0.7296261787414551, 0.7423061728477478, 0.7342491149902344, 0.7540615797042847, 0.7598732113838196, 0.7688548564910889, 0.7622507214546204, 0.7709681391716003, 0.7744023203849792, 0.7773081660270691, 0.7881389260292053, 0.7960638999938965, 0.7841764688491821, 0.7820631265640259, 0.7994980812072754, 0.8006868362426758, 0.8083476424217224, 0.8063663840293884, 0.8113855719566345, 0.8092722296714783, 0.8125742673873901, 0.8206313848495483, 0.8063663840293884, 0.8204993009567261, 0.8230088353157043, 0.8269713521003723, 0.8272355198860168, 0.8359529972076416, 0.8261788487434387, 0.8374059200286865, 0.8385946154594421, 0.8378021121025085, 0.8388587832450867, 0.8498216867446899, 0.8341038227081299, 0.8529917001724243, 0.8426892161369324, 0.8529917001724243, 0.8536521196365356, 0.8524633646011353, 0.8520671129226685, 0.8519350290298462, 0.8618412613868713, 0.8574824929237366, 0.8589354157447815, 0.8640866279602051, 0.8574824929237366], "val_loss": [1.1091433252607072, 1.1084177494049072, 0.6772145884377616, 0.6477852719170707, 0.6186156613486153, 0.6209604569843837, 0.553297928401402, 0.5369877985545567, 0.5392490795680455, 0.5027180228914533, 0.5024161338806152, 0.5004454340253558, 0.5254383938653129, 0.5104016576494489, 0.4697936943599156, 0.49736978326525005, 0.4868603263582502, 0.4564695187977382, 0.4776274136134556, 0.46330600125449045, 0.4533272811344692, 0.4371382679258074, 0.4360701526914324, 0.4296993442944118, 0.42020431586674284, 0.43082778794424875, 0.4402841329574585, 0.4078138470649719, 0.4156591296195984, 0.4001202242715018, 0.4237199766295297, 0.44561794825962614, 0.389324426651001, 0.37930658885410856, 0.3821140357426235, 0.37330687046051025, 0.3794777733939035, 0.3862431304795401, 0.38353300946099417, 0.3713435275214059, 0.3698893274579729, 0.36457290819713045, 0.366139931338174, 0.3619592615536281, 0.35325304099491667, 0.351284316607884, 0.3564115081514631, 0.34827832664762226, 0.34460900511060444, 0.3529015949794224, 0.354704099042075, 0.3463552934782846, 0.35417146342141287, 0.35107593876974924], "val_accuracy": [0.559333324432373, 0.546999990940094, 0.7153333425521851, 0.7036666870117188, 0.7266666889190674, 0.734666645526886, 0.7643333077430725, 0.7633333206176758, 0.7639999985694885, 0.7833333611488342, 0.7766666412353516, 0.7803333401679993, 0.7506666779518127, 0.778333306312561, 0.8040000200271606, 0.7773333191871643, 0.7816666960716248, 0.8046666383743286, 0.7803333401679993, 0.7976666688919067, 0.7976666688919067, 0.8073333501815796, 0.8076666593551636, 0.8203333616256714, 0.8230000138282776, 0.8143333196640015, 0.8029999732971191, 0.8253333568572998, 0.8140000104904175, 0.8286666870117188, 0.8046666383743286, 0.8066666722297668, 0.8366666436195374, 0.8393333554267883, 0.8450000286102295, 0.8420000076293945, 0.843666672706604, 0.8363333344459534, 0.8376666903495789, 0.8456666469573975, 0.846666693687439, 0.8476666808128357, 0.8453333377838135, 0.846666693687439, 0.8529999852180481, 0.8529999852180481, 0.8479999899864197, 0.8583333492279053, 0.8603333234786987, 0.8529999852180481, 0.8533333539962769, 0.8513333201408386, 0.8500000238418579, 0.8513333201408386]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8208571672439575, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0744601221856755, 1.4489310428750135, 1.0381807651124249, 0.9029685928522084, 0.7902036219099179, 0.7930902258327309, 0.7234030737459322, 0.6968154009496059, 0.6844947943598004, 0.6659695725667084, 0.6064375559525672, 0.6160271551945679, 0.5897890309364159, 0.6066241910854083, 0.5744206631156857, 0.5534177149575006, 0.5540001864808661, 0.5478794646773277, 0.5250615749880623, 0.525151923166967, 0.515202352844288, 0.4878914603042628, 0.488006513069303, 0.493480078548315, 0.483693457574042, 0.44594719543858224, 0.46996246202117054, 0.4559625696551767], "accuracy": [0.3163386583328247, 0.5128780603408813, 0.6166952848434448, 0.6560559868812561, 0.7008321285247803, 0.6970016956329346, 0.7250033020973206, 0.7380794882774353, 0.7440232634544373, 0.7485140562057495, 0.7714964747428894, 0.7642319202423096, 0.7758552432060242, 0.7681944370269775, 0.785101056098938, 0.793422281742096, 0.7881389260292053, 0.793950617313385, 0.8024039268493652, 0.7975168228149414, 0.8041210174560547, 0.8170651197433472, 0.8146876096725464, 0.8152159452438354, 0.8169330358505249, 0.8329150676727295, 0.8240655064582825, 0.8286884427070618], "val_loss": [1.3187023571559362, 0.9997989450182233, 0.638564007622855, 0.6338373082024711, 0.6508392095565796, 0.593570419720241, 0.5310455901282174, 0.5253917149135044, 0.5162324394498553, 0.4820143665586199, 0.4967220851353237, 0.4784935031618391, 0.5133894171033587, 0.48868169103349957, 0.4624964850289481, 0.4733597891671317, 0.4847780466079712, 0.42199948855808805, 0.4458704335348947, 0.42536365134375437, 0.4367161818913051, 0.41320046356746126, 0.39591539757592337, 0.4049247162682669, 0.39338753053120207, 0.41595652273723055, 0.4218855244772775, 0.4002542495727539], "val_accuracy": [0.5506666898727417, 0.5423333048820496, 0.7236666679382324, 0.6809999942779541, 0.6959999799728394, 0.7413333058357239, 0.7613333463668823, 0.7676666378974915, 0.781000018119812, 0.7860000133514404, 0.7823333144187927, 0.793666660785675, 0.750333309173584, 0.781000018119812, 0.7996666431427002, 0.7853333353996277, 0.7826666831970215, 0.8209999799728394, 0.7979999780654907, 0.8153333067893982, 0.8009999990463257, 0.8116666674613953, 0.8326666951179504, 0.8196666836738586, 0.8273333311080933, 0.8256666660308838, 0.8113333582878113, 0.824999988079071]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [2, 2, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8062857389450073, "mapping_values": [1, 18, 18, 11, 7, 4, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), alpha)))), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0404172520422743, 1.5838327821314122, 1.1724693114180307, 0.9869097895578796, 0.9011807956353564, 0.8345812970873009, 0.7571263237872443, 0.7645836706647091, 0.7319137609441125, 0.7199025606010033, 0.6609151123883529, 0.6602955336946112, 0.6346845115810384, 0.6648976448315671, 0.6383816483880173, 0.6085815760973123, 0.6157404311092821, 0.5896759012261591, 0.5774934852379913, 0.5695216412384276, 0.5593566204641537, 0.5519287374041352, 0.5455142025461979, 0.5269454272746599, 0.5434513201393614, 0.5087732550742337, 0.5213742183026636], "accuracy": [0.316470742225647, 0.44010037183761597, 0.5803724527359009, 0.6345264911651611, 0.6586976647377014, 0.6877558827400208, 0.7224937081336975, 0.7162858247756958, 0.7281733155250549, 0.7248712182044983, 0.7523444890975952, 0.7561748623847961, 0.763439416885376, 0.7448157668113708, 0.7564390301704407, 0.7746664881706238, 0.7651565074920654, 0.7833839654922485, 0.7815347909927368, 0.7852331399917603, 0.7861577272415161, 0.7943468689918518, 0.7989697456359863, 0.8063663840293884, 0.7884030938148499, 0.8053097128868103, 0.8041210174560547], "val_loss": [1.4834489141191756, 0.9362879480634417, 0.7592799833842686, 0.749595046043396, 0.6589351381574359, 0.6510881526129586, 0.599293623651777, 0.579763684953962, 0.5712394714355469, 0.5198674201965332, 0.49602380820683073, 0.5182541949408395, 0.48600837162562777, 0.5326984098979405, 0.48814748014722553, 0.5210451228278024, 0.512468763760158, 0.4570189544132778, 0.4761695010321481, 0.45180066994258333, 0.44807101999010357, 0.4390318734305246, 0.43940768923078266, 0.4787224701472691, 0.4281980054719107, 0.44557522024427143, 0.4418167471885681], "val_accuracy": [0.2943333387374878, 0.609333336353302, 0.6783333420753479, 0.6196666955947876, 0.7236666679382324, 0.7253333330154419, 0.7303333282470703, 0.7486666440963745, 0.7566666603088379, 0.7770000100135803, 0.781000018119812, 0.7770000100135803, 0.7889999747276306, 0.7693333625793457, 0.7906666398048401, 0.753333330154419, 0.7789999842643738, 0.8056666851043701, 0.7913333177566528, 0.8103333115577698, 0.8080000281333923, 0.8163333535194397, 0.8083333373069763, 0.7763333320617676, 0.8159999847412109, 0.8050000071525574, 0.8046666383743286]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.4725714325904846, "mapping_values": [1, 18, 18, 11, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), alpha)))), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.99012031206885, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.334169864654541, 0.1958790123462677, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.5789316722324915, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.44466665387153625, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [93, 7, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.25542858242988586, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4.173721490393162, 2.2945493485681636, 2.2276622169856397, 2.3036588161628733, 2.299634209146526, 2.307212026127735, 2.304156347776621], "accuracy": [0.17117950320243835, 0.12270505726337433, 0.1954827606678009, 0.1010434553027153, 0.1150442510843277, 0.1644432693719864, 0.1010434553027153], "val_loss": [1.9783005714416504, 1.8570852279663086, 1.9736745698111398, 1.9724884033203125, 1.9629182134355818, 1.976233891078404, 1.9732439177376884], "val_accuracy": [0.09666666388511658, 0.3529999852180481, 0.10400000214576721, 0.10433333367109299, 0.17233332991600037, 0.10066666454076767, 0.10400000214576721]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [0, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10314285755157471, "mapping_values": [1, 4, 4, 2, 2, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3004931310195933, 2.3024417419380687, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973325320652553, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10899999737739563, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [0, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.1022857129573822, "mapping_values": [1, 4, 4, 2, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3002652622185615, 2.302133471753855, 2.3025812380632877, 2.3025851744418886, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09879804402589798, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9728387423924036, 1.9736430304391044, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.08900000154972076, 0.10466666519641876, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 2, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30194713470722, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [53, 7, 5, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 9, 1, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [5, 7, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [0, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [6, 7, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [5, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3666248880813874, 3.021732336148106, 4.913889133194891, 8.097166704448176, 12.380633978717094, 18.027421704152353, 24.75751501936655], "accuracy": [0.08968432247638702, 0.1026284471154213, 0.09747721254825592, 0.09760929644107819, 0.10157178342342377, 0.10434553027153015, 0.09628847241401672], "val_loss": [2.0882058824811662, 2.7619169780186246, 4.2622688838413785, 6.548473085675921, 9.590833118983678, 13.43086324419294, 18.125889369419642], "val_accuracy": [0.10166666656732559, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30194713470722, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 0, 0, 2, 2], [51, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30194713470722, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 4, 2, 2, 1, 1, 0, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(grad, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), alpha)))), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0540219247341156, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [12, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 4, 3, 2, 1, 0, 1, 1, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30194713470722, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 2, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [5, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.07000000029802322, "mapping_values": [1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, beta)", "other_info": {"loss": [2.3016370590793427, 2.3025579687752633, 2.30186493049413, 2.3020611264371538, 2.3016947708613587, 2.3017399355782935, 2.301243467542552, 2.3001189618897304, 2.3013435452448268, 2.299164584725052, 2.3004384615858706, 2.300980677174508, 2.2997225082592956, 2.299473110836857, 2.298858157112425, 2.2993950957808558, 2.300620189825967, 2.2994041946412644, 2.298735461577039, 2.2991943833000072, 2.300265256424212, 2.3010331720582182, 2.2987957880591767, 2.300389694704623, 2.2979648181901173, 2.299495102313405, 2.2990913754519755, 2.298204514328767, 2.2990912981414997, 2.2980159070308828, 2.2993265588632146, 2.2984024414596083, 2.2980009926592024, 2.297711484578024, 2.297547401139261, 2.2997343501142775, 2.296632485729183, 2.299169624076937, 2.296982007775529, 2.2982100069940112, 2.2978428310139334, 2.2977982683739784, 2.2984155060167657, 2.296758497143938, 2.297365881653195, 2.2987551256461214, 2.29780190388729, 2.296765622209643, 2.296095572379539, 2.2974087282525173, 2.297871151588943, 2.298403687150235, 2.2956578466067494, 2.296470161757181, 2.2980654516145775, 2.2969548912914974, 2.2962791722574414, 2.2969090520682163, 2.2945714882729846, 2.2969938768387594, 2.296868356998964, 2.2948881608620137, 2.295949601730288, 2.294414773860927, 2.296645125409379, 2.296425658099923, 2.295572884062955, 2.296403276638474, 2.295275140447923, 2.295267349819324, 2.29572799599103, 2.2953907533990017, 2.2948595319268503, 2.295570164718144, 2.2943599689213072, 2.2957078049195805, 2.293747316939153, 2.2953739855913295, 2.293875765916993, 2.2956848127526093, 2.2937579893117976, 2.2951907637947193, 2.2950776941850908, 2.293382032247283, 2.294629314178489, 2.2942969794318095, 2.294912637642047, 2.294903680396795, 2.2947469316595157, 2.2953026258493567, 2.2936199970721507, 2.293649415487406, 2.293755078910915, 2.293367866165429, 2.2944232465852097, 2.294030001103335, 2.2928009293319023, 2.29364129007768, 2.292877354531823, 2.2938154810030134], "accuracy": [0.08875974267721176, 0.08770307898521423, 0.09325055778026581, 0.09206181764602661, 0.0952318087220192, 0.09826971590518951, 0.09153348207473755, 0.09285431355237961, 0.09179764986038208, 0.09087307006120682, 0.09377889335155487, 0.09113723784685135, 0.09391097724437714, 0.09668471664190292, 0.10051512718200684, 0.09549596905708313, 0.09285431355237961, 0.10038304328918457, 0.1002509593963623, 0.09391097724437714, 0.09338264167308807, 0.09272222965955734, 0.1010434553027153, 0.09945846349000931, 0.10408136248588562, 0.09826971590518951, 0.09628847241401672, 0.09985470771789551, 0.09549596905708313, 0.09893012791872025, 0.09747721254825592, 0.10328886657953262, 0.09906221181154251, 0.09906221181154251, 0.10342095047235489, 0.10038304328918457, 0.10817593336105347, 0.09985470771789551, 0.10500594228506088, 0.10249637067317963, 0.09708096832036972, 0.10368511080741882, 0.10857218503952026, 0.10315678268671036, 0.10249637067317963, 0.09708096832036972, 0.10632677376270294, 0.10170386731624603, 0.1002509593963623, 0.09879804402589798, 0.10210011899471283, 0.1026284471154213, 0.10447761416435242, 0.10593052208423615, 0.10276053100824356, 0.1014397069811821, 0.10460969805717468, 0.1022322028875351, 0.10394927859306335, 0.10315678268671036, 0.10289261490106583, 0.11345925182104111, 0.10276053100824356, 0.10540219396352768, 0.10474177449941635, 0.10672302544116974, 0.10791176557540894, 0.10685510188341141, 0.11266675591468811, 0.11147800832986832, 0.10408136248588562, 0.1072513535618782, 0.10896842926740646, 0.10447761416435242, 0.10791176557540894, 0.10949676483869553, 0.11055342853069305, 0.10342095047235489, 0.11398758739233017, 0.11187426000833511, 0.11108175665140152, 0.11161009222269058, 0.10632677376270294, 0.11068551242351532, 0.11068551242351532, 0.10659094154834747, 0.11094967275857925, 0.10632677376270294, 0.11187426000833511, 0.10896842926740646, 0.11279883980751038, 0.11253467202186584, 0.11240258812904358, 0.11134592443704605, 0.1080438494682312, 0.11227050423622131, 0.11913882195949554, 0.11372341960668564, 0.11345925182104111, 0.11359133571386337], "val_loss": [1.97081082207816, 1.970693588256836, 1.9705563272748674, 1.9704465184892928, 1.9703320094517298, 1.9702181134905135, 1.9700935908726283, 1.9699677739824568, 1.9698524475097656, 1.9697431836809431, 1.9696327618190221, 1.9695244516645158, 1.9694029263087682, 1.9692864418029785, 1.9691689355032784, 1.969048295702253, 1.9689467975071497, 1.968850885118757, 1.9687536784580775, 1.9686639649527413, 1.9685732296534948, 1.9684704371861048, 1.968384061540876, 1.9682837213788713, 1.9681905337742396, 1.9680972780500139, 1.9680039542061942, 1.9679158074515206, 1.967836584363665, 1.9677481651306152, 1.9676539557320731, 1.967571462903704, 1.9674884932381767, 1.9674156733921595, 1.967332022530692, 1.9672455106462752, 1.9671570914132255, 1.967078685760498, 1.967008318219866, 1.9669256891523088, 1.9668478284563338, 1.9667677198137556, 1.9666887010846819, 1.966611453465053, 1.9665209225245885, 1.9664457184927804, 1.9663643836975098, 1.9662878853934151, 1.966212204524449, 1.966135093144008, 1.9660658155168806, 1.9659924507141113, 1.9659159524100167, 1.9658450399126326, 1.9657747404915946, 1.9656989233834403, 1.9656265122549874, 1.965555054800851, 1.965486798967634, 1.9654104369027274, 1.9653455189296178, 1.9652782848903112, 1.9652117320469447, 1.9651416369846888, 1.9650765827723913, 1.9650142533438546, 1.9649491991315569, 1.964883872440883, 1.9648187501089913, 1.9647481100899833, 1.9646838733128138, 1.9646133014133997, 1.9645509038652693, 1.9644889831542969, 1.9644286291939872, 1.9643707956586565, 1.964310986655099, 1.9642468861171178, 1.9641822406223841, 1.9641215460641044, 1.964062009538923, 1.96400363104684, 1.963944980076381, 1.9638845579964774, 1.9638242040361678, 1.9637676647731237, 1.963710103716169, 1.9636531557355608, 1.9635942322867257, 1.9635357856750488, 1.9634753635951452, 1.9634229115077428, 1.9633656910487585, 1.963305950164795, 1.9632489340645927, 1.9631915773664201, 1.963132585797991, 1.9630735942295618, 1.9630175999232702, 1.9629667145865304], "val_accuracy": [0.038333334028720856, 0.03999999910593033, 0.04066666588187218, 0.04100000113248825, 0.041999999433755875, 0.04266666620969772, 0.04333333298563957, 0.04500000178813934, 0.04699999839067459, 0.04766666516661644, 0.04800000041723251, 0.04899999871850014, 0.05000000074505806, 0.05000000074505806, 0.050999999046325684, 0.050999999046325684, 0.05133333429694176, 0.052000001072883606, 0.052666667848825455, 0.052666667848825455, 0.05433333292603493, 0.05433333292603493, 0.054999999701976776, 0.0560000017285347, 0.05666666850447655, 0.0573333315551281, 0.05766666680574417, 0.057999998331069946, 0.05900000035762787, 0.05900000035762787, 0.05900000035762787, 0.05999999865889549, 0.061000000685453415, 0.06199999898672104, 0.06333333253860474, 0.06466666609048843, 0.06533333659172058, 0.06533333659172058, 0.06599999964237213, 0.06599999964237213, 0.06733333319425583, 0.0676666647195816, 0.0689999982714653, 0.07100000232458115, 0.07233333587646484, 0.07233333587646484, 0.07366666942834854, 0.07433333247900009, 0.07500000298023224, 0.07533333450555801, 0.07633333653211594, 0.07666666805744171, 0.07733333110809326, 0.07800000160932541, 0.07900000363588333, 0.07999999821186066, 0.08033332973718643, 0.08033332973718643, 0.0806666687130928, 0.08100000023841858, 0.08166666328907013, 0.08233333379030228, 0.08266666531562805, 0.0833333358168602, 0.08366666734218597, 0.08433333039283752, 0.08633333444595337, 0.0860000029206276, 0.08566666394472122, 0.08566666394472122, 0.08666666597127914, 0.08766666799783707, 0.08866667002439499, 0.08933333307504654, 0.08900000154972076, 0.08933333307504654, 0.09000000357627869, 0.09000000357627869, 0.09066666662693024, 0.09200000017881393, 0.09200000017881393, 0.09266666322946548, 0.09300000220537186, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09433333575725555, 0.0949999988079071, 0.09533333033323288, 0.09566666930913925, 0.09700000286102295, 0.09700000286102295, 0.0976666659116745, 0.09799999743700027, 0.09866666793823242, 0.09866666793823242, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 1, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0], [5, 2, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3016847522424717, 2.302744724747055, 2.3022071070060783, 2.3025208183047225, 2.3022837409915202, 2.3024456335679178], "accuracy": [0.08875974267721176, 0.08770307898521423, 0.09259014576673508, 0.09047681838274002, 0.0940430611371994, 0.09708096832036972], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 2, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [14, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 7, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.0357142873108387, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3021364815089336, 2.3046075484031827, 2.30569242228134, 2.308452519915753, 2.3111510302302167, 2.3149677695001136], "accuracy": [0.08994849026203156, 0.08611807972192764, 0.08717474341392517, 0.08321225643157959, 0.07951393723487854, 0.0796460211277008], "val_loss": [1.9718470573425293, 1.972970690046038, 1.9742086955479212, 1.9760838917323522, 1.9784673282078333, 1.9807840756007604], "val_accuracy": [0.03333333507180214, 0.02666666731238365, 0.02199999988079071, 0.017000000923871994, 0.019999999552965164, 0.0273333340883255]}}]