[{"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [1, 3, 8, 6, 0], [3, 0, 2], [7, 52, 13]], "fitness": -0.7454285621643066, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3028893957930374, 2.3001299295852435, 2.2932349737719333, 2.285443000915642, 2.2738191272761794, 2.2583401593329366, 2.2399280486625215, 2.2214851931432267, 2.197149140692154, 2.1659704238794357, 2.132535190945052, 2.0841281206191193, 2.029786139478647, 1.9596927829501085, 1.8744762560883848, 1.7811720826921524, 1.6828275447697325, 1.5904253151407017, 1.5125230588240315, 1.4496702491615143, 1.4208497063925616, 1.3928318655234224, 1.3942775458959524, 1.352261441841322, 1.4052704885068619, 1.3971272114481768, 1.3084597027989868, 1.2438590002727545, 1.1983914927500365, 1.1427019914820555, 1.05693080546188, 0.9938167460590479, 0.9520187492557033, 0.9277679252429267, 0.9197234116556654, 0.9294716258877855, 0.9240808735166511, 0.9356703980645137, 0.9303596656414748, 0.9289569530614914, 0.9225577499888215, 0.9049649943670561, 0.8785546018525893, 0.8595564085825355, 0.8357298632323734, 0.8365249771641041, 0.83381180117836, 0.8398995238555941, 0.8432411905041051], "accuracy": [0.09206181764602661, 0.09602430462837219, 0.11266675591468811, 0.13829085230827332, 0.16470743715763092, 0.21384228765964508, 0.2557125985622406, 0.28424251079559326, 0.313300758600235, 0.34460440278053284, 0.3623035252094269, 0.38462555408477783, 0.39730551838874817, 0.4085325598716736, 0.43204331398010254, 0.43864747881889343, 0.4515916109085083, 0.4621582329273224, 0.4799894392490387, 0.4959714710712433, 0.5157839059829712, 0.516180157661438, 0.5337471961975098, 0.5445780158042908, 0.5431250929832458, 0.5515784025192261, 0.5690133571624756, 0.5894861817359924, 0.6067890524864197, 0.614317774772644, 0.637828528881073, 0.6460176706314087, 0.653150200843811, 0.6477347612380981, 0.6552634835243225, 0.6468101739883423, 0.655527651309967, 0.6590939164161682, 0.6642451286315918, 0.6781138777732849, 0.6757363677024841, 0.6774534583091736, 0.683529257774353, 0.6843217611312866, 0.6897371411323547, 0.683529257774353, 0.6911900639533997, 0.6843217611312866, 0.6839255094528198], "val_loss": [1.968959195273263, 1.9644688878740584, 1.957219191959926, 1.9473862648010254, 1.9352265085492815, 1.920795236315046, 1.904020036969866, 1.88435241154262, 1.8604860986982072, 1.8306454249790736, 1.7928917748587472, 1.7451118060520716, 1.6849335261753626, 1.6102947166987829, 1.5209158148084367, 1.4190337317330497, 1.3109997000013078, 1.2062222276415144, 1.1129558426993233, 1.0334668500082833, 0.9653585297720773, 0.9067929131644112, 0.8598315715789795, 0.8317979233605521, 0.8172570807593209, 0.7873132228851318, 0.7526588099343436, 0.7431480373655047, 0.7418057407651629, 0.7257624694279262, 0.6952342135565621, 0.6696519000189645, 0.6651510511125837, 0.6748862777437482, 0.6853554589407784, 0.6950537988117763, 0.705350228718349, 0.7143128258841378, 0.7178076335362026, 0.7115998949323382, 0.6956028257097516, 0.6727541003908429, 0.6482446363994053, 0.6270695584160941, 0.6124822582517352, 0.6050642558506557, 0.603226900100708, 0.603577903338841, 0.6037083353315081], "val_accuracy": [0.047333333641290665, 0.07866666465997696, 0.14733333885669708, 0.2460000067949295, 0.3253333270549774, 0.36533331871032715, 0.3863333463668823, 0.4059999883174896, 0.4203333258628845, 0.4320000112056732, 0.4493333399295807, 0.4650000035762787, 0.4779999852180481, 0.492000013589859, 0.5066666603088379, 0.5196666717529297, 0.5473333597183228, 0.5713333487510681, 0.6006666421890259, 0.628333330154419, 0.6466666460037231, 0.6556666493415833, 0.6629999876022339, 0.6646666526794434, 0.6536666750907898, 0.675000011920929, 0.6963333487510681, 0.7006666660308838, 0.7016666531562805, 0.7020000219345093, 0.703000009059906, 0.7093333601951599, 0.7170000076293945, 0.7080000042915344, 0.699999988079071, 0.6983333230018616, 0.7086666822433472, 0.7236666679382324, 0.7316666841506958, 0.7300000190734863, 0.7296666502952576, 0.7316666841506958, 0.737333357334137, 0.7390000224113464, 0.7336666584014893, 0.7310000061988831, 0.7279999852180481, 0.7289999723434448, 0.7276666760444641]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0], [0, 2, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1, 1, 2], [25, 84, 69, 92], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 6, 0], [3, 2, 2], [16, 52, 13]], "fitness": -0.6940000057220459, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3004818498308883, 2.2825128556935383, 2.2470303188619236, 2.1941573717779628, 2.106545723156922, 1.9530471551687554, 1.722589623753295, 1.5190389199011898, 1.3948166116259244, 1.376872684158559, 1.3633443977476631, 1.2016833156185884, 1.0433175625849582, 0.9492021952212651, 0.9311573297403366, 0.9405249230393392, 0.9313007952152635, 0.8655716414701008, 0.839084390667467, 0.8378672485794956, 0.8459418175825432, 0.8505543015179869, 0.8359431074106808, 0.7966501112265153, 0.7911882350678142, 0.768355864929627, 0.7641574910067769, 0.7797135186233163, 0.7894814494358093, 0.7700327442479943, 0.7310554287484324, 0.7320063722021843, 0.7334019315949741, 0.7226498183746222, 0.6975208279904185, 0.6833247622211045, 0.6703440011012131, 0.6774977295154027, 0.6633381993464191, 0.641218198092071, 0.6228846294642786, 0.627483734514861, 0.624205057639267, 0.625262559774986, 0.6136936199600513, 0.6105198405359273, 0.6077696624811157, 0.5951973112141845, 0.5986441293522949, 0.5890535532113441, 0.5918965008532476, 0.5794999095679054, 0.5695542797845793, 0.5614873848303419, 0.5735330992859148, 0.5590536151115275, 0.5583984023544373, 0.5591329224451957, 0.554162996005168, 0.5482912063598633, 0.5487572776170659, 0.5407359171474236, 0.5431124081370412], "accuracy": [0.09813763201236725, 0.14119666814804077, 0.23973055183887482, 0.31184783577919006, 0.3629639446735382, 0.41223087906837463, 0.4387795627117157, 0.4760269522666931, 0.5213313698768616, 0.5410117506980896, 0.5646545886993408, 0.6077136397361755, 0.6345264911651611, 0.6440364718437195, 0.6520935297012329, 0.6728305220603943, 0.670320987701416, 0.6820763349533081, 0.6827367544174194, 0.6894729733467102, 0.6822084188461304, 0.6761326193809509, 0.6881521344184875, 0.7080966830253601, 0.7010962963104248, 0.7119271159172058, 0.7058512568473816, 0.7057191729545593, 0.7059833407402039, 0.713379979133606, 0.7296261787414551, 0.7243428826332092, 0.72672039270401, 0.7360982894897461, 0.7338528633117676, 0.7347774505615234, 0.746268630027771, 0.7429665923118591, 0.7520803213119507, 0.752212405204773, 0.757099449634552, 0.7643640041351318, 0.7664773464202881, 0.7662131786346436, 0.7658169269561768, 0.7713643908500671, 0.7666094303131104, 0.7738739848136902, 0.7734777331352234, 0.7795535326004028, 0.7836481332778931, 0.7857614755630493, 0.7903843522071838, 0.7952714562416077, 0.7917051911354065, 0.787082314491272, 0.7833839654922485, 0.7835160493850708, 0.7827235460281372, 0.7890635132789612, 0.7913089394569397, 0.7932901978492737, 0.7943468689918518], "val_loss": [1.9606541906084334, 1.9346002170017786, 1.8942681040082658, 1.8310867718287878, 1.719480242047991, 1.527157987867083, 1.266775063105992, 1.0388950960976737, 0.8879379885537284, 0.8194994926452637, 0.7498917409351894, 0.7423902579716274, 0.6725135019847325, 0.6908585514341082, 0.7176730632781982, 0.7252805573599679, 0.6764818600245884, 0.6261379037584577, 0.6127630301884243, 0.6088258368628365, 0.6093834127698626, 0.6036085571561541, 0.5848443678447178, 0.5808769805090768, 0.5721512692315238, 0.5658310651779175, 0.5813749517713275, 0.5952956676483154, 0.58357002053942, 0.5576565946851458, 0.538629242352077, 0.5313745566776821, 0.5252973011561802, 0.5140232699257987, 0.5011871371950422, 0.49494336332593647, 0.4972344636917114, 0.4959639481135777, 0.4842996767589024, 0.47101027624947683, 0.4664041485105242, 0.46725853851863314, 0.4662449189594814, 0.4607105255126953, 0.4539919410433088, 0.44953309638159616, 0.4466759307043893, 0.44322177342006136, 0.4405004211834499, 0.44072861330849783, 0.44262116295950754, 0.44163839306150166, 0.43793206555502756, 0.4345119765826634, 0.43378751618521555, 0.43295801537377493, 0.4296753151076181, 0.42448768445423674, 0.4209328719547817, 0.41996303626469206, 0.4199838808604649, 0.4196166566440037, 0.4167470932006836], "val_accuracy": [0.10766666382551193, 0.32899999618530273, 0.40066665410995483, 0.4390000104904175, 0.46799999475479126, 0.49900001287460327, 0.5486666560173035, 0.6296666860580444, 0.6570000052452087, 0.6466666460037231, 0.6976666450500488, 0.7039999961853027, 0.7123333215713501, 0.6919999718666077, 0.7206666469573975, 0.7250000238418579, 0.7273333072662354, 0.7369999885559082, 0.7273333072662354, 0.7296666502952576, 0.7243333458900452, 0.7303333282470703, 0.7413333058357239, 0.737333357334137, 0.7400000095367432, 0.7459999918937683, 0.7493333220481873, 0.746666669845581, 0.7516666650772095, 0.7509999871253967, 0.7543333172798157, 0.7553333044052124, 0.7609999775886536, 0.7596666812896729, 0.765666663646698, 0.7736666798591614, 0.7743333578109741, 0.7760000228881836, 0.777999997138977, 0.7803333401679993, 0.7766666412353516, 0.7733333110809326, 0.7763333320617676, 0.7796666622161865, 0.7879999876022339, 0.7943333387374878, 0.7993333339691162, 0.8029999732971191, 0.8040000200271606, 0.7990000247955322, 0.7976666688919067, 0.7976666688919067, 0.8076666593551636, 0.8119999766349792, 0.8166666626930237, 0.8136666417121887, 0.8130000233650208, 0.8193333148956299, 0.8180000185966492, 0.8140000104904175, 0.8136666417121887, 0.8109999895095825, 0.812666654586792]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1, 1], [1, 3, 8, 6, 0], [3, 0, 2], [16, 52, 13]], "fitness": -0.6514285802841187, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.2205423978750876, 1.5654666752878859, 1.0783784326198882, 0.9047653301753199, 0.8446112651756301, 0.8052980852652976, 0.7343525156101232, 0.6791438667088641, 0.6401946779570292, 0.6094725092782195, 0.5917883703359413, 0.5605074097184047, 0.5577770095176354, 0.5393099244150109, 0.5190484783534817, 0.5174598122009937, 0.500470609271909, 0.4783487046997797, 0.4640893569680379, 0.4560111043609412, 0.44875355543729384, 0.4361107318534544, 0.42781870704222474, 0.42573931891573985, 0.4093810948225265, 0.4191132962955633, 0.41091270863088747], "accuracy": [0.24118345975875854, 0.48091402649879456, 0.6227710843086243, 0.6705851554870605, 0.681547999382019, 0.7063795924186707, 0.7250033020973206, 0.7433628439903259, 0.7626469135284424, 0.7687227725982666, 0.7718927264213562, 0.7777044177055359, 0.7884030938148499, 0.7972526550292969, 0.8057059645652771, 0.8042530417442322, 0.8145555257797241, 0.8260467648506165, 0.8260467648506165, 0.8293488025665283, 0.8294808864593506, 0.8355567455291748, 0.8422929644584656, 0.8454629778862, 0.8436138033866882, 0.8490291833877563, 0.845859169960022], "val_loss": [1.5991827760423933, 0.8046634367534092, 0.7493419306618827, 0.6134796142578125, 0.632561343056815, 0.5505689212254116, 0.5068562030792236, 0.4900330475398472, 0.46592983177730013, 0.4428133623940604, 0.44276862485068186, 0.4331573929105486, 0.42202078444617136, 0.41809100764138357, 0.405456006526947, 0.4045196516173227, 0.39078802721840994, 0.3919032982417515, 0.3894008142607553, 0.37860396078654696, 0.38062396219798494, 0.37246126788003103, 0.37340240819113596, 0.3747485705784389, 0.3834777815001352, 0.3880754964692252, 0.3997216054371425], "val_accuracy": [0.4896666705608368, 0.6930000185966492, 0.7070000171661377, 0.7176666855812073, 0.7379999756813049, 0.7519999742507935, 0.765666663646698, 0.7716666460037231, 0.7799999713897705, 0.8009999990463257, 0.8026666641235352, 0.8106666803359985, 0.8176666498184204, 0.8169999718666077, 0.8270000219345093, 0.8316666483879089, 0.8366666436195374, 0.8383333086967468, 0.8353333473205566, 0.8366666436195374, 0.8423333168029785, 0.843999981880188, 0.8423333168029785, 0.8423333168029785, 0.843999981880188, 0.8426666855812073, 0.8363333344459534]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 1, 0, 0, 1, 1], [1, 3, 9, 3, 0], [0, 1, 2], [16, 52, 13]], "fitness": -0.15457142889499664, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.2740760064317156, 2.2458510595998584, 2.3034093960983846, 2.302994763074912, 2.302982101980816, 2.3030430472616694], "accuracy": [0.12481838464736938, 0.12059172987937927, 0.09998679161071777, 0.09708096832036972, 0.09615638852119446, 0.09866596013307571], "val_loss": [1.8724501473563058, 1.9747470446995325, 1.9738356726510184, 1.973813738141741, 1.9737424850463867, 1.9737098557608468], "val_accuracy": [0.12833333015441895, 0.1003333330154419, 0.09933333098888397, 0.10066666454076767, 0.09933333098888397, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 1, 0, 1], [7, 3, 9, 6, 0], [3, 0, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302771947733746, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 3, 9, 6, 0, 7, 2, 2, 8, 7, 2, 1, 1, 0, 3, 0, 9, 8, 8, 1, 9], [3, 1, 2, 0, 1, 3, 3, 2, 2, 0], [16, 52, 13, 80, 21]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 31, 21, 10, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, alpha)), tf.math.negative(tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)), tf.math.add(tf.math.add(sigma, tf.math.subtract(tf.math.subtract(sigma, tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), tf.math.sqrt(beta))), tf.math.sqrt(tf.math.subtract(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1], [6, 8, 0, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [2, 2, 8, 4], [5], [64], [0, 1, 0, 0, 0, 1, 1, 1], [1, 3, 7, 9, 0], [3, 0, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1], [0, 2, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [4, 2, 6, 6, 5, 7, 1, 1, 9, 7, 2, 8, 7], [3, 2, 5, 3, 1, 3, 2], [25, 78], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [1, 1, 1, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 16, 16, 9, 7, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, beta)), grad), tf.math.square(grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(alpha, grad)), tf.math.subtract(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1085436637.479857, 20426115496.42372, 94730035361.2215, 262945005718.40128, 569119334628.307, 1041596401959.663], "accuracy": [0.09589222073554993, 0.09866596013307571, 0.10342095047235489, 0.09866596013307571, 0.1018359512090683, 0.09642054885625839], "val_loss": [4014164114.285714, 32103179410.285713, 108336559835.42857, 256784381659.42856, 501519670125.7143, 866606214582.8572], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [1, 1, 0, 0, 1, 1], [1, 3, 9, 6, 0], [0, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302771947733746, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 4, 3, 6, 0, 1, 7, 4, 7, 3], [3, 0, 2, 3, 2, 0, 0, 1, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 20, 10, 10, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.negative(tf.math.subtract(tf.math.add(sigma, tf.math.pow(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), alpha), alpha)))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4, 6, 9, 3, 6, 6, 9, 0], [0, 0, 2, 0, 3, 1, 0, 0, 0, 3, 2], [31, 87, 55, 22, 11, 97, 54, 38], [1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 3, 7, 6, 0, 0, 2, 4], [3, 0, 2, 0, 1, 3, 1], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 19, 11, 8, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 15, 8, 7, 2], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))))))), grad)), tf.math.add(alpha, tf.math.negative(grad)))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.pow(sigma, alpha))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1, 1], [1, 3, 8, 6, 0], [3, 2, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.math.sqrt(beta), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 3, 8, 6, 0, 8, 2, 1, 2, 0, 4, 1, 5, 7], [3, 2, 2, 3, 1, 3, 2, 3, 2, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 24, 14, 10, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(sigma, tf.math.negative(tf.math.sqrt(beta)))), tf.math.add(beta, tf.math.subtract(sigma, tf.math.add(alpha, tf.math.negative(sigma))))), tf.math.pow(tf.math.subtract(beta, tf.math.square(tf.math.add(sigma, beta))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 70], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [2, 5, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 0, 1, 1], [1, 7, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 1, 0, 1, 1], [1, 9, 9, 6, 0], [2, 0, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0816272646188736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 48, 47, 43], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1], [6, 8, 6, 6, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 1, 0, 1], [5, 3, 1, 6, 0, 4, 3, 3, 7, 7, 8, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.08028571307659149, "mapping_values": [1, 16, 16, 9, 7, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), alpha)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3029438490093566, 2.3023039622943573, 2.3009908236469716, 2.3017552312433507, 2.301372657094917, 2.300679610783571, 2.299681887918255, 2.300200378417717, 2.299515171325627, 2.298959739739475, 2.299335435995289, 2.2988488702820655, 2.2996818274239885, 2.2998501250237173, 2.300042777375743, 2.2998344263679646, 2.300433292774366], "accuracy": [0.09087307006120682, 0.08981640636920929, 0.09259014576673508, 0.0882314071059227, 0.08717474341392517, 0.09430722147226334, 0.09787346422672272, 0.09932637959718704, 0.09906221181154251, 0.09417514503002167, 0.10289261490106583, 0.1006472036242485, 0.09655263274908066, 0.09945846349000931, 0.09800554811954498, 0.09774138033390045, 0.09602430462837219], "val_loss": [1.9698833056858607, 1.9693422317504883, 1.9691579001290458, 1.969057287488665, 1.9691290855407715, 1.969226905277797, 1.9691225460597448, 1.9689688682556152, 1.9689368520464217, 1.9690110342843192, 1.969151428767613, 1.9693603515625, 1.9696194103785925, 1.9699391637529646, 1.970179762159075, 1.9704058510916573, 1.9706497873578752], "val_accuracy": [0.04833333194255829, 0.052000001072883606, 0.05700000002980232, 0.057999998331069946, 0.059333331882953644, 0.06199999898672104, 0.06700000166893005, 0.06966666877269745, 0.07466666400432587, 0.07733333110809326, 0.0793333351612091, 0.08100000023841858, 0.0793333351612091, 0.0793333351612091, 0.07733333110809326, 0.07466666400432587, 0.0689999982714653]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [1, 1, 0, 0, 1, 1], [1, 3, 8, 6, 0], [3, 1, 2, 0, 2], [16, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30335981693754, 2.303665759588324, 2.302866782652089, 2.304149147856741, 2.3039686784075393, 2.3031143154277305], "accuracy": [0.09100515395402908, 0.08730682730674744, 0.08915598690509796, 0.08374059200286865, 0.0866464152932167, 0.0866464152932167], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1], [3, 2, 6, 5, 5, 7, 3, 9], [3, 2, 5, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [0], [64], [1, 1, 1, 0, 1], [1, 3, 8, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), grad))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30335981693754, 2.303665759588324, 2.302866782652089, 2.304149147856741, 2.3039686784075393, 2.3031143154277305], "accuracy": [0.09100515395402908, 0.08730682730674744, 0.08915598690509796, 0.08374059200286865, 0.0866464152932167, 0.0866464152932167], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1], [6, 4, 6, 5, 5, 7, 3, 9], [2, 3, 5, 4, 1], [31], [0, 1, 0, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 6, 9, 6, 4, 2, 5, 6, 4, 9], [3, 1, 2, 0, 2, 0], [16, 52, 6, 7]], "fitness": -0.04285714402794838, "mapping_values": [1, 1, 1, 0, 1, 1, 7, 7, 3, 4, 0, 5, 3, 2, 1, 0, 16, 10, 6, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.pow(alpha, beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303378270995332, 2.3037321756481575, 2.302969517756321, 2.3042922116321045, 2.304165549738658, 2.3033256536745013], "accuracy": [0.09074098616838455, 0.08730682730674744, 0.08915598690509796, 0.08360850811004639, 0.08532558381557465, 0.08677849918603897], "val_loss": [1.970609256199428, 1.9706272397722517, 1.9706458364214217, 1.9706642968314034, 1.9706836427961076, 1.97070346559797], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03766666725277901, 0.03733333200216293, 0.03733333200216293, 0.03799999877810478]}}]