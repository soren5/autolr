[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8351428508758545, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1252739209036675, 1.6722496830791986, 1.1115518659412302, 0.7970528554576278, 0.7312761468185709, 0.6957757636194201, 0.6506458161497916, 0.6136115116686349, 0.5592303031770356, 0.5544608626399042, 0.5535649984598695, 0.5308633796519386, 0.49200501945497116, 0.4973077670324275, 0.4824329041227011, 0.48509403047245475, 0.4364075262580235, 0.43236590979546763, 0.41942676183821864, 0.4154729497564971, 0.41353376873212483], "accuracy": [0.2937524616718292, 0.44406285881996155, 0.5956941246986389, 0.6985867023468018, 0.7283053994178772, 0.7360982894897461, 0.7519482374191284, 0.7614582180976868, 0.7895918488502502, 0.7910447716712952, 0.7893276810646057, 0.7987055778503418, 0.816008448600769, 0.8214238286018372, 0.8177255392074585, 0.8177255392074585, 0.8364813327789307, 0.835160493850708, 0.8444063067436218, 0.8422929644584656, 0.8462554216384888], "val_loss": [1.85829039982387, 1.006305251802717, 0.6159573112215314, 0.5674242462430682, 0.5390359503882272, 0.5089459930147443, 0.4780841214316232, 0.4613229376929147, 0.43727093083517893, 0.42700271947043283, 0.4362929122788565, 0.409604012966156, 0.3865547946521214, 0.43861918789999826, 0.4045951877321516, 0.36005925280707224, 0.3813268882887704, 0.35395972217832294, 0.3886036532265799, 0.35712977818080355, 0.3537177698952811], "val_accuracy": [0.46133333444595337, 0.531000018119812, 0.7213333249092102, 0.7509999871253967, 0.749666690826416, 0.7710000276565552, 0.7866666913032532, 0.7910000085830688, 0.8090000152587891, 0.8130000233650208, 0.8100000023841858, 0.8209999799728394, 0.8353333473205566, 0.7956666946411133, 0.8216666579246521, 0.8519999980926514, 0.8356666564941406, 0.8483333587646484, 0.824999988079071, 0.843666672706604, 0.8489999771118164]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 0, 4, 6, 1, 0, 5, 2, 4, 5, 8, 2, 5, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 87, 7, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [0, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8328571319580078, "mapping_values": [1, 4, 4, 2, 2, 1, 56, 56, 35, 21, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.subtract(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(grad, tf.math.add(beta, grad))))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, beta), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.square(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.multiply(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(grad, grad))))))))))))))))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1218602502697164, 1.6797281993992688, 1.058875448573708, 0.789477997404977, 0.7101212707351243, 0.6945394136335368, 0.6436976967486471, 0.6075506256067867, 0.5664441930052626, 0.5678593508477036, 0.5378671369776513, 0.5367477170511905, 0.5030121366739304, 0.5135078574089783, 0.5095329775849291, 0.46833068257183713, 0.44244970580637494, 0.4777787986991743, 0.43425467068713497, 0.42054362217385804, 0.4400714672614775, 0.42420387517632807, 0.3943524195761839, 0.41077829580328423, 0.3709160225022313, 0.38652800847636615, 0.35490864301952846, 0.37902360447976313, 0.3629535729024452, 0.3512142504431458, 0.3410763566433525, 0.3356439716402471, 0.3314730248486188, 0.3220581123070269, 0.31106616843409624, 0.318585710636676, 0.2943141705536997, 0.2845975945571694, 0.2882519870811465, 0.286111476694226, 0.27210407422565436, 0.2704422913325414, 0.2640862478170381], "accuracy": [0.294148713350296, 0.44591203331947327, 0.6256769299507141, 0.7047945857048035, 0.7265883088111877, 0.7376832365989685, 0.7560427784919739, 0.7651565074920654, 0.7902522683143616, 0.78113853931427, 0.8012151718139648, 0.802271842956543, 0.8136309385299683, 0.8094043135643005, 0.8053097128868103, 0.8259146809577942, 0.8378021121025085, 0.8193105459213257, 0.8381983637809753, 0.8459912538528442, 0.8366134166717529, 0.8430854678153992, 0.8544445633888245, 0.8451988101005554, 0.8580108284950256, 0.8590674996376038, 0.869502067565918, 0.8520671129226685, 0.8638224601745605, 0.867520809173584, 0.8741249442100525, 0.8714832663536072, 0.873860776424408, 0.8742570281028748, 0.8804649114608765, 0.8786157965660095, 0.887201189994812, 0.891559898853302, 0.891559898853302, 0.8874653577804565, 0.8948619961738586, 0.8973715305328369, 0.896446943283081], "val_loss": [1.8592338562011719, 1.1250342641557967, 0.6615694420678275, 0.5419248683112008, 0.5284527880804879, 0.49949993406023296, 0.46672070026397705, 0.4595667975289481, 0.43219579117638723, 0.43366687638419016, 0.4101020523480007, 0.4073282480239868, 0.39813791854040964, 0.5079957587378365, 0.3844908220427377, 0.36822632380894255, 0.43067660502025057, 0.360481185572488, 0.3876947930880955, 0.3831185443060739, 0.35954118626458303, 0.3429398366383144, 0.39298492670059204, 0.3385957734925406, 0.3695968304361616, 0.342079758644104, 0.3534450786454337, 0.32498787130628315, 0.329815149307251, 0.324707099369594, 0.32919892242976595, 0.3705492104802813, 0.33961616243634907, 0.3333062699862889, 0.3288223998887198, 0.3826676181384495, 0.31930480684552875, 0.31712599311556133, 0.31373670271464754, 0.3085410850388663, 0.34174453360693796, 0.3169248529842922, 0.32267969846725464], "val_accuracy": [0.42500001192092896, 0.5106666684150696, 0.6963333487510681, 0.750333309173584, 0.7683333158493042, 0.7839999794960022, 0.7906666398048401, 0.7910000085830688, 0.8119999766349792, 0.8086666464805603, 0.8306666612625122, 0.8199999928474426, 0.8320000171661377, 0.7693333625793457, 0.8376666903495789, 0.8460000157356262, 0.8223333358764648, 0.8473333120346069, 0.8253333568572998, 0.8289999961853027, 0.8476666808128357, 0.8560000061988831, 0.8233333230018616, 0.8579999804496765, 0.8403333425521851, 0.8610000014305115, 0.8489999771118164, 0.862666666507721, 0.8636666536331177, 0.8633333444595337, 0.8610000014305115, 0.8426666855812073, 0.8653333187103271, 0.8706666827201843, 0.8663333058357239, 0.8479999899864197, 0.8679999709129333, 0.8723333477973938, 0.8666666746139526, 0.8693333268165588, 0.859666645526886, 0.8706666827201843, 0.8656666874885559]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [5, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 4, 1, 2, 2, 6, 1, 9, 8, 1, 9, 4, 8, 9, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 0, 3, 3, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 88, 71, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7054286003112793, "mapping_values": [1, 4, 4, 2, 2, 1, 22, 22, 15, 7, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(beta, grad)), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3024391837328526, 2.299830323023929, 2.2959980647545986, 2.2901806702876466, 2.281957092317907, 2.2723820890654127, 2.2584139023474603, 2.2478333079756654, 2.2320800958733438, 2.211633349579748, 2.1905592268862035, 2.1689522851806164, 2.1391648978227167, 2.103612063189602, 2.0656385361919973, 2.0113386767903467, 1.9516279029336037, 1.8890644924090507, 1.8082510946827037, 1.7320691869400906, 1.64707493064048, 1.5767077727797103, 1.5032962418314237, 1.449527702075206, 1.403386669262226, 1.379493268190232, 1.3704279644645798, 1.3481221577715266, 1.3793062171002641, 1.369072239884863, 1.3748228092707537, 1.3541392214057972, 1.292742265434376, 1.263416843423124, 1.1992321319867276, 1.1522260981150243, 1.0952130152234123, 1.0201812690165002, 0.9738184632075351, 0.9352239572675929, 0.911344068256021, 0.8964098467645455, 0.9058113098616897, 0.9080184770298042, 0.9074598789655962], "accuracy": [0.09100515395402908, 0.09417514503002167, 0.10738343745470047, 0.11847840249538422, 0.14370624721050262, 0.16721701622009277, 0.21080438792705536, 0.23959846794605255, 0.27024170756340027, 0.30022454261779785, 0.3265090584754944, 0.3365473449230194, 0.3603222966194153, 0.37828555703163147, 0.38422930240631104, 0.4007396697998047, 0.4084004759788513, 0.41909918189048767, 0.4295337498188019, 0.44445911049842834, 0.452119916677475, 0.4695548713207245, 0.48289525508880615, 0.49689605832099915, 0.5177651643753052, 0.5115572810173035, 0.5266147255897522, 0.5373134613037109, 0.5381059050559998, 0.5522388219833374, 0.5507858991622925, 0.5626733303070068, 0.5786554217338562, 0.5860520601272583, 0.609959065914154, 0.627129852771759, 0.6325452327728271, 0.6449610590934753, 0.6527539491653442, 0.6565843224525452, 0.6557918190956116, 0.6564522385597229, 0.6479989290237427, 0.6530181169509888, 0.6538106203079224], "val_loss": [1.9698478834969657, 1.9668392453874861, 1.9619483947753906, 1.9552595955984933, 1.946874005453927, 1.9369171687534876, 1.9253793443952287, 1.9122557640075684, 1.8973706790379115, 1.8802407128470284, 1.860041618347168, 1.8356823921203613, 1.8060601779392786, 1.7701059068952287, 1.7266150883265905, 1.6741992405482702, 1.6117208344595773, 1.539097820009504, 1.4572009699685233, 1.3687083721160889, 1.2779210635593958, 1.1899752616882324, 1.1091678483145577, 1.0372635977608817, 0.9742436068398612, 0.9189359801156181, 0.8703996453966413, 0.8303564786911011, 0.8033969402313232, 0.7898656811032977, 0.7752409662519183, 0.7518360614776611, 0.7354852642331805, 0.7359975916998727, 0.7417612246104649, 0.737688490322658, 0.7188176257269723, 0.6917391334261213, 0.6684663466044835, 0.6606460809707642, 0.6640410082680839, 0.6706069707870483, 0.6771646908351353, 0.6841757808412824, 0.6916030134473529], "val_accuracy": [0.04500000178813934, 0.06666667014360428, 0.10899999737739563, 0.17933332920074463, 0.2626666724681854, 0.33033332228660583, 0.3643333315849304, 0.375, 0.38966667652130127, 0.40166667103767395, 0.41499999165534973, 0.4246666729450226, 0.4346666634082794, 0.445333331823349, 0.46000000834465027, 0.47833332419395447, 0.49300000071525574, 0.5053333044052124, 0.5263333320617676, 0.5440000295639038, 0.5569999814033508, 0.5770000219345093, 0.5993333458900452, 0.6200000047683716, 0.6416666507720947, 0.6629999876022339, 0.6746666431427002, 0.6823333501815796, 0.6806666851043701, 0.6733333468437195, 0.6743333339691162, 0.6926666498184204, 0.7023333311080933, 0.7049999833106995, 0.7093333601951599, 0.7133333086967468, 0.7173333168029785, 0.718999981880188, 0.7229999899864197, 0.7279999852180481, 0.7193333506584167, 0.7106666564941406, 0.7026666402816772, 0.6983333230018616, 0.7013333439826965]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [4, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 4, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 6, 6, 3, 3, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, beta), tf.math.square(tf.math.subtract(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [4, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 4, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 14, 14, 10, 4, 2, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.square(tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(beta)))))), tf.math.add(beta, tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [4, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 1, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.square(tf.math.subtract(grad, tf.math.add(beta, tf.math.add(alpha, tf.math.sqrt(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [94572434.706814, 1825963047.7305508, 8416760645.3509445, 23133392414.770042, 50245448878.88205, 92312209784.81468], "accuracy": [0.09589222073554993, 0.09893012791872025, 0.1002509593963623, 0.10210011899471283, 0.10289261490106583, 0.10236428678035736], "val_loss": [353277037.71428573, 2825393883.428571, 9534781732.571428, 22599849106.285713, 44138929005.71429, 76270635300.57143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [4, 1, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 1, 3, 2, 3, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [7, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 9, 9, 4, 5, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.add(beta, alpha)), tf.math.add(beta, grad)), beta)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 3, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 4, 2, 3, 0, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [7, 7, 3, 4, 6], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.306114439510194, 2.4433366163075165, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08268392831087112, 0.08017434924840927, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9785335404532296, 211.7475847516741, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.043666668236255646, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [4, 5, 3, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 4, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.square(tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [63, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 2, 1, 2, 6, 2, 8, 1, 3, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [0, 2, 0, 2, 2, 0, 2, 2, 0, 1, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1019740738.7080028, 19692496855.694626, 90776592183.82565, 249506113640.14478, 541927871284.71484, 995649284808.242], "accuracy": [0.09536388516426086, 0.09906221181154251, 0.1002509593963623, 0.10210011899471283, 0.10289261490106583, 0.1022322028875351], "val_loss": [3810660498.285714, 30475603382.857143, 102844256841.14285, 243766441691.42856, 476091187200.0, 822672883712.0], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 0, 2, 6, 1, 0, 1, 2, 9, 3, 8, 2, 5, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 2, 3, 0, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [0, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [4, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 4, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [5, 7, 3, 4], [0, 4], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 6, 6, 3, 3, 0, 2, 2, 1, 1, 1, 7, 3, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.square(tf.math.subtract(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302545999602052, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [58, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 0, 2, 6, 1, 0, 1, 2, 9, 3, 8, 2, 5, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 1, 3, 2, 3, 0, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [99, 72, 7, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4, 6], [0, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 26, 26, 16, 10, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.subtract(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, grad)))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 1, 4, 2, 3, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 2, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [42, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 0, 2, 5, 1, 0, 1, 2, 1, 4, 8, 2, 5, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 2, 0, 0, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [4, 7, 3, 4, 6], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 27, 27, 16, 11, 2, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.subtract(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.add(beta, tf.math.add(tf.math.square(grad), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))))))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302545999602052, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [8.227250822340973e+31, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 9, 8, 0, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 1, 3, 0, 3, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [28, 19, 71, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 4], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.07028571516275406, "mapping_values": [1, 4, 4, 2, 2, 0, 8, 8, 7, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.square(beta))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302291768212218, 2.301196533848565, 2.30074080446566, 2.300829254892823, 2.3004905305219254, 2.3006947339407726, 2.2986269691254657, 2.3010762702393697, 2.300713328952409, 2.298857381141984, 2.2992698643988843, 2.3007393412035153, 2.3001244739219575, 2.2997960981329464], "accuracy": [0.09126931428909302, 0.09060890227556229, 0.09642054885625839, 0.09589222073554993, 0.09509972482919693, 0.08968432247638702, 0.09813763201236725, 0.10077928751707077, 0.09721305221319199, 0.09959053993225098, 0.09879804402589798, 0.09351472556591034, 0.09509972482919693, 0.09430722147226334], "val_loss": [1.9703046253749303, 1.9699818747384208, 1.9696838515145438, 1.9696345329284668, 1.9697839191981725, 1.9698079654148646, 1.9697886194501604, 1.9696997233799525, 1.9697415488106864, 1.9698148454938615, 1.970121247427804, 1.9703589848109655, 1.9706922939845495, 1.9709288052150182], "val_accuracy": [0.04533333331346512, 0.052666667848825455, 0.05833333358168602, 0.06199999898672104, 0.06266666948795319, 0.06466666609048843, 0.06833333522081375, 0.06966666877269745, 0.07199999690055847, 0.07066666334867477, 0.06966666877269745, 0.07000000029802322, 0.0663333311676979, 0.061666667461395264]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [6, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(beta, beta)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302754848577469, 2.3022238768291765, 2.302560518666848, 2.302910019834642, 2.3025200003252495, 2.303012562812107], "accuracy": [0.08994849026203156, 0.08849557489156723, 0.09074098616838455, 0.08928807079792023, 0.08849557489156723, 0.08334434032440186], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 5, 1, 2, 8, 2, 5, 1, 9, 9, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 4, 3, 2, 2, 0, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [36, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [3, 3], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, sigma))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302754848577469, 2.3022238768291765, 2.302560518666848, 2.302910019834642, 2.3025200003252495, 2.303012562812107], "accuracy": [0.08994849026203156, 0.08849557489156723, 0.09074098616838455, 0.08928807079792023, 0.08849557489156723, 0.08334434032440186], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]