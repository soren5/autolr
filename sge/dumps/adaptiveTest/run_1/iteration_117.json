[{"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.7125714421272278, "mapping_values": [1, 14, 14, 9, 5, 2, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(alpha)))))))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.square(grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.298807815207372, 2.251628030733646, 2.110744633726267, 1.741030586614522, 1.4193220582415855, 1.3484803642878334, 1.0657941411436194, 0.9040764339800603, 0.898295333734703, 0.8273677878753936, 0.8047494144566292, 0.7979380431160746, 0.7592413403795474, 0.7312837004141958, 0.7038845333991947, 0.6922755149282783, 0.6815228074643401, 0.6499772181978252, 0.6382009583284134, 0.6177615783690399, 0.6060603418370374, 0.5971579573661769, 0.5947751617623735, 0.570487235279257, 0.5664169505807339, 0.5673107398404988, 0.7273534871819879, 0.8422017441040269, 1.0560122754957697, 85.95957990701031], "accuracy": [0.09589222073554993, 0.2207106053829193, 0.36666226387023926, 0.4468366205692291, 0.5103685259819031, 0.5655791759490967, 0.648659348487854, 0.6612072587013245, 0.6734909415245056, 0.6954167485237122, 0.6984546184539795, 0.703209638595581, 0.7112666964530945, 0.7240787148475647, 0.7320036888122559, 0.7362303733825684, 0.739928662776947, 0.748249888420105, 0.7564390301704407, 0.7580240368843079, 0.7651565074920654, 0.7754589915275574, 0.7696473598480225, 0.7840443849563599, 0.7865539789199829, 0.7865539789199829, 0.7530049085617065, 0.7117950320243835, 0.6634526252746582, 0.4193633496761322], "val_loss": [1.9502808025905065, 1.8694205965314592, 1.638705117361886, 1.1396772180284773, 0.8214115755898612, 0.7107064894267491, 0.6501847164971488, 0.6869656188147408, 0.6500468594687325, 0.5912874255861554, 0.5885000569479806, 0.5794978141784668, 0.5603703771318708, 0.5444249595914569, 0.5397983108248029, 0.5149357659476144, 0.5161105734961373, 0.5021980660302299, 0.4852870873042515, 0.46448956217084614, 0.4678765024457659, 0.46660574844905306, 0.45793873923165457, 0.45557144709995817, 0.4422129733221872, 0.4673640387398856, 0.6077269486018589, 0.6769922971725464, 0.6367700781141009, 348818.09821428574], "val_accuracy": [0.20733332633972168, 0.43033334612846375, 0.492333322763443, 0.6019999980926514, 0.6823333501815796, 0.7129999995231628, 0.7296666502952576, 0.715666651725769, 0.7456666827201843, 0.7490000128746033, 0.7406666874885559, 0.753000020980835, 0.7543333172798157, 0.7609999775886536, 0.7603333592414856, 0.7693333625793457, 0.7646666765213013, 0.7793333530426025, 0.7833333611488342, 0.7973333597183228, 0.7993333339691162, 0.8003333210945129, 0.8016666769981384, 0.8069999814033508, 0.8143333196640015, 0.8119999766349792, 0.7676666378974915, 0.7326666712760925, 0.7739999890327454, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 2, 9, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 0, 2, 1, 2, 2, 0], [43, 67, 86, 49, 25], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1], [3, 6, 6, 5, 5, 7, 3, 9], [0, 3, 0, 4, 1], [98, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 0, 9, 1, 2], [1, 3, 2], [73, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 2, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 4, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 0, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [3, 7, 6, 1, 5, 7, 3, 6, 4, 1, 8, 5, 4, 8, 8, 0, 1, 3, 4, 5], [3, 3, 3, 3, 1, 0, 2, 0, 5, 5, 5, 3, 1, 5], [98, 61], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 0, 1, 1], [1, 3, 9, 1, 2], [1, 0, 2], [23, 79, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 12, 8, 3, 34, 34, 20, 14, 2, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(grad, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.add(grad, grad))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), beta)), tf.math.pow(tf.math.sqrt(tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, grad)))), alpha)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 0, 8, 6, 8, 4, 0, 3, 5, 8, 4, 4, 6, 3, 6], [2, 2, 0, 0, 2, 1, 2, 2, 0], [31, 67, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 3, 1, 5, 5, 7, 3, 9], [2, 3, 3, 3, 1, 0], [98, 55], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [0, 3, 1], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.3026438690589135, 2.3025846743958422, 2.3025849717026454, 2.302585983603874, 2.3025847880784562, 2.3025860695114004, 2.302582992806395, 2.3025856302430396, 2.3025843432991655, 2.302585815378798, 2.302586457102983, 2.3025851610267103], "accuracy": [0.09932637959718704, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.10077928751707077, 0.09509972482919693, 0.10500594228506088, 0.09893012791872025, 0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644529070173, 1.9736463001796178, 1.9736463682992118, 1.9736480031694685, 1.9736476625714983, 1.9736480712890625, 1.9736456189836775, 1.9736461639404297, 1.973648956843785, 1.9736503192356654, 1.9736503192356654, 1.973651681627546], "val_accuracy": [0.09666666388511658, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09666666388511658, 0.09566666930913925, 0.10066666454076767, 0.09799999743700027, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 2, 1, 0, 2, 1, 2, 2, 0], [31, 71, 29, 49, 25], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 1, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [8, 6, 9, 1, 2], [2, 0, 3], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(grad)))), tf.math.square(grad)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 2, 2, 4, 2, 8, 5, 8, 4, 4, 6, 3, 6], [3, 2, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 2, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [2, 9, 9, 1, 2], [1, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 12, 8, 1, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(alpha)))), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad)))))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))), tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, beta)), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 9, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 1, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [3, 7, 8, 3, 5, 7, 2, 9, 4, 1, 4, 6, 4, 8, 8, 0, 5, 3, 4], [2, 3, 3, 3, 1, 0, 4, 3, 5, 1, 5, 3, 3, 5], [98, 82], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.square(grad), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 8, 2, 1, 3, 7, 1, 9], [3, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [2, 8, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(grad, tf.math.add(beta, grad)))))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026440626657587, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 7, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 6, 6, 5, 8, 7, 3, 9, 7, 7], [1, 3, 3, 3, 1], [98, 55], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 0, 0, 0, 1, 1], [7, 3, 9, 5, 2, 8], [3, 0, 3, 1], [99, 84, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 9, 6, 3, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(grad)))))))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), sigma), tf.math.square(tf.math.add(tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), sigma)))", "other_info": {"loss": [2.3026440446843814, 2.3025852059329175, 2.30258518795154, 2.3025851744418886, 2.3025851744418886, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736443247113908, 1.973644529070173, 1.9736443247113908, 1.9736443247113908, 1.9736443247113908, 1.9736443247113908], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 7, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 2, 1, 2, 2, 1, 2, 2, 0], [43, 67, 86, 49, 25], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [3, 6, 6, 5, 5, 7, 3, 9], [1, 3, 0, 4, 1], [98, 85], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 9, 9, 1, 2], [1, 0, 1], [22, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 13, 13, 8, 5, 2, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.square(grad))), tf.math.square(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 2, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [3, 7, 6, 6, 5, 7, 3, 9, 4, 1, 4, 6, 4, 8, 8, 0, 3, 3, 4], [2, 3, 3, 3, 1, 0, 3, 3, 5, 5, 5, 3, 1, 5], [98, 92], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [2, 9, 9, 1, 2], [1, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [574402.7717555488, 89853441.47985736, 1567608085.9109762, 11120573947.604279, 49639551804.288994, 165867016973.762], "accuracy": [0.09906221181154251, 0.09787346422672272, 0.10579843819141388, 0.10355303436517715, 0.09972262382507324, 0.09972262382507324], "val_loss": [4629717.714285715, 265366710.85714287, 2913082294.857143, 16067515538.285715, 60615332425.14286, 179658691145.14285], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 6, 5, 5, 8, 4, 4, 6, 3, 6], [2, 2, 2, 0, 2, 1, 2, 2, 0], [31, 82, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [9, 7, 6, 5, 5, 1, 3, 9], [3, 4, 5, 4, 1], [14, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [6, 3, 9, 1, 2], [1, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), grad))), tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 8, 6, 8, 4, 0, 3, 5, 8, 4, 4, 6, 3, 6], [0, 2, 1, 0, 0, 1, 2, 2, 0], [31, 73, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 7, 6, 9, 5, 7, 3, 9], [3, 3, 3, 3, 1, 0], [98, 55], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 3, 2, 1, 8, 0], [2, 3, 2, 0, 0, 0], [73, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 10, 5, 5, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.multiply(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))), tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(sigma, beta)), tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 2, 2, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [0, 2, 1, 1, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9, 5], [2, 3, 3, 3, 1], [98, 85], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 2, 1, 2, 0], [3, 0, 1], [22, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.negative(alpha), grad)))), alpha)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 9, 5, 5, 8, 4, 4, 6, 3, 6], [0, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 68, 22, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 7, 6, 8, 5, 7, 3, 9], [2, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [9, 3, 9, 1, 2], [3, 0, 2], [49, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 9, 4, 4, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.square(alpha)))), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.square(grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026440626657587, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [8, 8, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 1, 3, 9], [3, 4, 5, 4, 1], [88, 55], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 0, 1, 0, 1, 1], [8, 3, 9, 1, 2], [1, 0, 2, 1], [30, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 8, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 2, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(grad)))))))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.square(grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [311669443.9531147, 5789540180.499273, 26752443226.044643, 73787674318.32835, 158331773056.7608, 293980201054.13605], "accuracy": [0.09932637959718704, 0.09787346422672272, 0.10579843819141388, 0.10355303436517715, 0.09972262382507324, 0.09972262382507324], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [1, 0, 2, 0, 2, 1, 2, 2, 0], [31, 71, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [9, 7, 6, 5, 5, 1, 3, 9], [2, 3, 5, 3, 1, 0], [98, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [2, 3, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [53781703704.92233, 7773213693244.086, 131714431041023.12, 920722798978219.6, 4074028020977928.5, 1.3536764352253222e+16], "accuracy": [0.09932637959718704, 0.09800554811954498, 0.10606260597705841, 0.10342095047235489, 0.09998679161071777, 0.09945846349000931], "val_loss": [419645058486.8571, 22622543656667.43, 242809873966226.28, 1323847701757952.0, 4960336726870309.0, 1.4631330693400868e+16], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 2, 6, 6, 4, 0, 6, 5, 8, 4, 4, 6, 3, 6], [2, 2, 1, 0, 2, 1, 2, 2, 0], [31, 73, 29, 49, 25], [0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 4, 9, 9, 5, 7, 3, 9], [5, 2, 3, 4, 1], [98, 55], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 3, 2, 1, 2, 0], [2, 3, 2, 0, 0, 0], [73, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 1, 4, 4, 4, 0, 2, 3, 1, 1, 0, 0, 12, 6, 6, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad)), alpha), tf.math.square(tf.math.add(alpha, tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.math.add(sigma, beta)), tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3026440626657587, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 2, 1, 0, 2, 1, 2, 2, 0], [31, 71, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 6, 1, 5, 7, 9, 9], [0, 3, 3, 2, 1], [98, 23], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [4, 6, 9, 1, 2], [3, 0, 1], [2, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 5, 5, 3, 2, 0, 12, 12, 7, 5, 2, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(grad, grad))), tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), beta), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.divide_no_nan(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302809693416222, 2.3034878688764895, 2.30271004248037, 2.2999296363444612, 2.303023725374106, 2.3028521183191777], "accuracy": [0.0874389111995697, 0.08968432247638702, 0.09153348207473755, 0.09074098616838455, 0.09047681838274002, 0.08757099509239197], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]