[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 7, 4, 0, 0, 0, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [2, 7, 3, 4], [6, 0], [67, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8414285778999329, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(alpha, sigma)))", "other_info": {"loss": [1.913565440751684, 1.3188522198984038, 0.8366635738583037, 0.7018904823983555, 0.6335329087639309, 0.5896851842224857, 0.5533524174590105, 0.520238211543537, 0.511297036572974, 0.4877799732369234, 0.4679791037637355, 0.45612970209864895, 0.4462076198029685, 0.43217611403402917, 0.4118955484935243, 0.39260857153830037, 0.38235118646647526, 0.3734033951480958, 0.3699392511852193], "accuracy": [0.35503897070884705, 0.5698058605194092, 0.6845859289169312, 0.7395324110984802, 0.7647602558135986, 0.7779685854911804, 0.8005547523498535, 0.8067626357078552, 0.8049134612083435, 0.8197067975997925, 0.8216879963874817, 0.8305375576019287, 0.834632158279419, 0.8397833704948425, 0.8451988101005554, 0.852859616279602, 0.8601241707801819, 0.8560295701026917, 0.8644828796386719], "val_loss": [1.3771564960479736, 0.7133883578436715, 0.5497090986796788, 0.5093549319675991, 0.4681459494999477, 0.4466892310551235, 0.42195372922079905, 0.4031573874609811, 0.40301463433674406, 0.38506518942969187, 0.3727549229349409, 0.36568181003843037, 0.3635016850062779, 0.346606297152383, 0.34490484850747244, 0.33798215218952726, 0.3457690647670201, 0.34483106647218975, 0.34214985370635986], "val_accuracy": [0.500333309173584, 0.6673333048820496, 0.7596666812896729, 0.7670000195503235, 0.7976666688919067, 0.7990000247955322, 0.8146666884422302, 0.8299999833106995, 0.8246666789054871, 0.8386666774749756, 0.8410000205039978, 0.8510000109672546, 0.8526666760444641, 0.862666666507721, 0.8619999885559082, 0.8610000014305115, 0.8519999980926514, 0.8550000190734863, 0.8573333621025085]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 7, 4, 0, 0, 0, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [5, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4, 6, 0], [4, 5, 5], [67, 2], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.multiply(alpha, alpha)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 7, 2, 0, 0, 0, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 47, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0], [4, 7, 3, 4], [2, 0], [67, 2], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 5, 4, 2, 2, 1, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1738529294441875, 2.304977443759562, 2.3035110131766205, 2.3031965761987085, 2.3029537866962992, 2.3029340302010475, 2.3029193170570412, 2.3030135859241416, 2.302952615733884, 2.303144915543842, 2.3029171271079156], "accuracy": [0.2670717239379883, 0.09470347315073013, 0.09126931428909302, 0.09325055778026581, 0.09470347315073013, 0.09140139818191528, 0.09668471664190292, 0.09430722147226334, 0.09721305221319199, 0.09179764986038208, 0.09391097724437714], "val_loss": [1.9770034381321497, 1.9749328749520438, 1.9740841729300362, 1.9737587656293596, 1.9736566543579102, 1.9736741610935755, 1.973665714263916, 1.973653725215367, 1.9738458905901228, 1.9738247735159737, 1.9736475944519043], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.10199999809265137, 0.10233332961797714, 0.10366666316986084, 0.09799999743700027, 0.09799999743700027, 0.09566666930913925, 0.09566666930913925, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 5, 4, 0, 0, 0, 4, 2, 0, 0, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0], [4, 7, 8, 4], [7, 0], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 0, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 5, 4, 0, 0, 0, 4, 2, 0, 0, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 47, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0], [6, 7, 3, 4], [7, 0], [67, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 5, 3, 2, 1, 7, 3, 4, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(tf.math.add(beta, sigma), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08532558381557465, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 8, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 7, 4, 0, 0, 0, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0], [0, 7, 3, 4, 6, 0], [6, 0], [12, 2], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 6, 5, 3, 2, 1, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 7, 4, 0, 0, 0, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 47, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [2, 7, 3, 4], [2, 0], [67, 2], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.30313566168459, 2.3025737813340674, 2.302570650873876, 2.30256640122252, 2.302573469383936, 2.302572132211871], "accuracy": [0.09615638852119446, 0.10249637067317963, 0.10513802617788315, 0.10276053100824356, 0.10157178342342377, 0.10157178342342377], "val_loss": [1.9736395563398088, 1.9736358097621374, 1.9736334936959403, 1.9736326762608118, 1.9736270223345076, 1.9736270904541016], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 7, 4, 0, 0, 0, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [2, 7, 3, 4], [6, 0], [67, 2], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 8, 3, 9, 3, 0, 1, 3, 2, 2, 5, 6, 8], [2, 1, 3, 2, 0, 2, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 21, 13, 8, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.square(beta), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), beta), tf.math.divide_no_nan(tf.math.sqrt(beta), beta)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 5, 4, 0, 0, 0, 4, 2, 0, 0, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [4, 0], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 4, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [52, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 7, 4, 0, 0, 0, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [5, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [4, 5, 5], [67, 2], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 1, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 3, 2, 0, 2, 2], [64, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 7, 6, 3, 3, 0, 7, 4, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 5, 4, 0, 0, 0, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0], [4, 7, 3, 4], [6, 5, 5], [67, 2], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.30313566168459, 2.3025737813340674, 2.302570619382847, 2.302566383241143, 2.302573469383936, 2.302572069229813], "accuracy": [0.09615638852119446, 0.10249637067317963, 0.10513802617788315, 0.10276053100824356, 0.10157178342342377, 0.10157178342342377], "val_loss": [1.9736395563398088, 1.9736358097621374, 1.9736334936959403, 1.9736326762608118, 1.9736270223345076, 1.9736270904541016], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 7, 4, 0, 0, 0, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [2, 7, 3, 4], [6, 0], [67, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 6, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(alpha, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 7, 4, 0, 0, 0, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0], [4, 7, 3, 4, 6, 0], [7, 0], [67, 2], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 5, 6, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 5, 4, 0, 0, 0, 4, 2, 0, 0, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 47, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0], [4, 7, 3, 4], [2, 0], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 1, 0, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302313903193385, 2.302446642666445, 2.3028668852498613, 2.3051036720845235, 2.3161650567148593, 2.371308456653176], "accuracy": [0.10434553027153015, 0.10381719470024109, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736503873552596, 1.9738126482282365, 1.9746497017996651, 1.9790406908307756, 1.9994776589529855, 2.1227711268833707], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [82, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 5, 4, 0, 0, 0, 4, 2, 0, 0, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [6, 0, 6], [67, 2], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 6, 3, 3, 1, 6, 4, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), alpha)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3027247426815634, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.1002509593963623, 0.10540219396352768, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [58, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 5, 4, 0, 0, 0, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0], [4, 7, 3, 4], [6, 5, 5], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), grad)), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 5, 4, 0, 0, 0, 4, 2, 0, 0, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0], [2, 7, 3, 4], [6, 7, 5], [67, 2], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 3, 3, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 7, 4, 0, 0, 0, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0], [2, 7, 3, 4], [0, 0, 6], [67, 2], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 7, 6, 3, 3, 2, 6, 4, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.add(sigma, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 7, 4, 0, 0, 0, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0], [4, 4, 5, 4], [7, 0], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 4, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302313903193385, 2.302446642666445, 2.3028668852498613, 2.3051037800672614, 2.316165164697597, 2.371308632089698], "accuracy": [0.10434553027153015, 0.10381719470024109, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736503873552596, 1.9738126482282365, 1.9746497017996651, 1.9790406908307756, 1.9994776589529855, 2.122771671840123], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 7, 4, 0, 0, 0, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 5, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 95, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [2, 7, 3, 4], [6, 0], [67, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 3, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(alpha, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]