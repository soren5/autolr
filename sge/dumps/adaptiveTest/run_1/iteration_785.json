[{"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8225714564323425, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.03421630076508, 1.7760806128553914, 1.3063599190077746, 1.0651127605106947, 0.8239974886308871, 0.8169595482893875, 0.7437187068183047, 0.6880099657834907, 0.6784635467016623, 0.6582883043044184, 0.6170182796029083, 0.596445615391422, 0.6289440435016034, 0.5543441031634485, 0.5664743700866387, 0.5328709335768652, 0.5261419880990071, 0.5174746352171995, 0.519689572387289, 0.4952338819789723, 0.49981545593445376, 0.4786716906693098, 0.5054375106364729, 0.4667335419669962, 0.4351241702708145, 0.4429896566507571, 0.46285065071316067, 0.43274055877775486, 0.4481189182649876, 0.4134572621121493, 0.4192132157947818, 0.3916198361771785, 0.4091346909727135, 0.3753547722227963, 0.3881755466230352, 0.37878527588234], "accuracy": [0.32162198424339294, 0.4213446080684662, 0.5330867767333984, 0.6165632009506226, 0.6925109028816223, 0.7021529674530029, 0.7234182953834534, 0.7366266250610352, 0.744419515132904, 0.7567031979560852, 0.7647602558135986, 0.7758552432060242, 0.7675340175628662, 0.7893276810646057, 0.78113853931427, 0.7948752045631409, 0.8021397590637207, 0.8061022162437439, 0.8112534880638123, 0.8132346868515015, 0.8095363974571228, 0.8251221776008606, 0.8120459914207458, 0.8227446675300598, 0.8380662798881531, 0.8338396549224854, 0.8255184292793274, 0.8364813327789307, 0.8323867321014404, 0.8436138033866882, 0.8459912538528442, 0.8506141901016235, 0.8467837572097778, 0.8638224601745605, 0.8556333184242249, 0.8613129258155823], "val_loss": [1.7568783078874861, 1.0608501774924142, 0.7990878650120327, 0.6521099976130894, 0.6269813094820295, 0.6157258578709194, 0.5516309567860195, 0.5677489553179059, 0.6254578488213676, 0.48567923477717806, 0.5320432015827724, 0.5572872502463204, 0.4478254999433245, 0.46479768412453787, 0.43235957622528076, 0.4469199521200998, 0.41716669287000385, 0.4147900768688747, 0.39710672412599834, 0.42877265385219027, 0.4337345702307565, 0.4188564590045384, 0.38687074184417725, 0.38371872901916504, 0.3862958720752171, 0.3911241037505014, 0.3682668123926435, 0.4199510046413967, 0.3882426108632769, 0.39307236671447754, 0.35510198559079853, 0.35636113371167866, 0.35190753425870624, 0.41935603959219797, 0.34133265699659077, 0.34402598653520855], "val_accuracy": [0.38499999046325684, 0.5276666879653931, 0.6803333163261414, 0.7263333201408386, 0.7260000109672546, 0.7283333539962769, 0.7540000081062317, 0.7390000224113464, 0.7319999933242798, 0.7793333530426025, 0.7506666779518127, 0.7429999709129333, 0.7983333468437195, 0.7896666526794434, 0.8100000023841858, 0.8053333163261414, 0.8173333406448364, 0.8220000267028809, 0.8270000219345093, 0.8116666674613953, 0.7903333306312561, 0.8133333325386047, 0.8389999866485596, 0.8320000171661377, 0.831333339214325, 0.8353333473205566, 0.8446666598320007, 0.8096666932106018, 0.8266666531562805, 0.8323333263397217, 0.8553333282470703, 0.8463333249092102, 0.8456666469573975, 0.8080000281333923, 0.8539999723434448, 0.8550000190734863]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [9, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7094285488128662, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2997029484570097, 2.2958574899671698, 2.2880141452602376, 2.2730721840375385, 2.257564843527598, 2.2349456367145013, 2.2092528082140053, 2.179872621178013, 2.140044499476509, 2.0820351848040497, 2.015406062054738, 1.9276431689188702, 1.820469140644323, 1.709716993079855, 1.6025484086909487, 1.5170701611169561, 1.4552357451255373, 1.4046287458995708, 1.3560845997071835, 1.2951362282451055, 1.287934908871921, 1.2629161985905226, 1.2173488818580416, 1.165437172904951, 1.1305004571643347, 1.0739925004046875, 1.0246869018600286, 1.002580219925261, 0.9668234348249882, 0.9338138226457575, 0.9136898446753827, 0.905802452962601, 0.90157312326396, 0.8874472532652121, 0.873714526670169, 0.8554465916682354, 0.847804768895429, 0.8205454054919248, 0.817122871991335, 0.803853070369061, 0.8023120482300786, 0.7904511023317236, 0.7827477742573525, 0.7658049656557228, 0.758818995163756, 0.7592052400639627, 0.7639625566967128, 0.7648386801506283, 0.7406335097372634, 0.7354780533105596, 0.7300788524632347, 0.7269585192195649, 0.7169039071417126, 0.7114506534628817, 0.7057681036600111, 0.6956114769769209, 0.6885506952317509, 0.682383717366056, 0.6565548808520197, 0.6675773942632729, 0.678872606986077, 0.6763164251550723, 0.6705952505740381], "accuracy": [0.09417514503002167, 0.10830801725387573, 0.1306300312280655, 0.16761326789855957, 0.22044643759727478, 0.2616563141345978, 0.31118741631507874, 0.33747193217277527, 0.3646810054779053, 0.3796063959598541, 0.4060229957103729, 0.4171179533004761, 0.4283449947834015, 0.44010037183761597, 0.46149781346321106, 0.4776119291782379, 0.48831066489219666, 0.5103685259819031, 0.5420684218406677, 0.5532954931259155, 0.5638620853424072, 0.5716549754142761, 0.5774666666984558, 0.590278685092926, 0.6012415885925293, 0.6197332143783569, 0.6387531161308289, 0.6501122713088989, 0.6626601219177246, 0.6682076454162598, 0.6717738509178162, 0.6723021864891052, 0.6709813475608826, 0.6705851554870605, 0.6762647032737732, 0.6783780455589294, 0.6794346570968628, 0.694360077381134, 0.6917183995246887, 0.6960771083831787, 0.7022850513458252, 0.7041342258453369, 0.7061154246330261, 0.7185312509536743, 0.7166820764541626, 0.7108704447746277, 0.7073041796684265, 0.707568347454071, 0.7202483415603638, 0.7169462442398071, 0.7150970697402954, 0.7169462442398071, 0.7223616242408752, 0.7250033020973206, 0.735569953918457, 0.7382115721702576, 0.7374191284179688, 0.7383436560630798, 0.7495707273483276, 0.7433628439903259, 0.7366266250610352, 0.7441553473472595, 0.7429665923118591], "val_loss": [1.9685000692095076, 1.9618121555873327, 1.9511092730930872, 1.9367649895804269, 1.9190564836774553, 1.8978849819728307, 1.8720458575657435, 1.8390545163835799, 1.7959239823477608, 1.739605290549142, 1.6655826228005546, 1.570873430797032, 1.456681489944458, 1.3353783743722099, 1.224447386605399, 1.1276539734431676, 1.0369501113891602, 0.9518816811697823, 0.8833191735403878, 0.8361964055470058, 0.7982571465628487, 0.7588767664773124, 0.7282224552971976, 0.7144161803381783, 0.7057128463472638, 0.6910898515156337, 0.7035973242350987, 0.6996721540178571, 0.6846576247896466, 0.6775366067886353, 0.6804592609405518, 0.6841899837766375, 0.6829890012741089, 0.6757149696350098, 0.6642359495162964, 0.6503164087023053, 0.6363035610743931, 0.6235124043055943, 0.6140322685241699, 0.6086299249104091, 0.6043795687811715, 0.5972660439355033, 0.5865928445543561, 0.5773175954818726, 0.5734765870230538, 0.5710812636784145, 0.5663560458592006, 0.5603377648762294, 0.5554229021072388, 0.5526579448154995, 0.5520190341132027, 0.5523786204201835, 0.55207017489842, 0.5497421366827828, 0.544544015611921, 0.5376446076801845, 0.5311180182865688, 0.527290906224932, 0.5268609012876239, 0.5277166536876133, 0.5280930144446236, 0.5270147493907383, 0.5244081020355225], "val_accuracy": [0.054666668176651, 0.1080000028014183, 0.218666672706604, 0.3323333263397217, 0.37599998712539673, 0.40166667103767395, 0.41866666078567505, 0.4326666593551636, 0.44566667079925537, 0.46533334255218506, 0.49033331871032715, 0.5040000081062317, 0.5173333287239075, 0.5346666574478149, 0.5483333468437195, 0.574999988079071, 0.606333315372467, 0.6466666460037231, 0.6710000038146973, 0.6803333163261414, 0.6863333582878113, 0.6903333067893982, 0.6909999847412109, 0.6926666498184204, 0.6966666579246521, 0.7080000042915344, 0.7093333601951599, 0.7139999866485596, 0.7193333506584167, 0.7183333039283752, 0.7239999771118164, 0.7310000061988831, 0.7253333330154419, 0.7253333330154419, 0.7300000190734863, 0.7323333621025085, 0.7319999933242798, 0.7390000224113464, 0.734333336353302, 0.7326666712760925, 0.7336666584014893, 0.7350000143051147, 0.7406666874885559, 0.7459999918937683, 0.750333309173584, 0.7476666569709778, 0.7493333220481873, 0.7493333220481873, 0.7573333382606506, 0.7536666393280029, 0.7573333382606506, 0.7549999952316284, 0.7603333592414856, 0.7639999985694885, 0.7633333206176758, 0.765999972820282, 0.7693333625793457, 0.7720000147819519, 0.7699999809265137, 0.7703333497047424, 0.7699999809265137, 0.768666684627533, 0.7639999985694885]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [11, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [57, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.427142858505249, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.300038542304734, 2.299910598505978, 2.300396873053149, 2.2979494952853203, 2.298281339653699, 2.2970413591694507, 2.296399342558718, 2.298205196770852, 2.29686823749051, 2.292971497308844, 2.2932077226952443, 2.2917871418220965, 2.291016785885286, 2.2913982591703346, 2.2888012884031936, 2.288806306341179, 2.2887461288116078, 2.288749444722468, 2.287364044618991, 2.2845234257465403, 2.2855649484131297, 2.28387773088917, 2.2830825231456644, 2.279956441624069, 2.280434718394654, 2.280191294599943, 2.279778992070057, 2.2766330771206267, 2.275716039467135, 2.2759039222824105, 2.274653697105179, 2.274138255598617, 2.2751716955258248, 2.2713546018558897, 2.270759689085173, 2.272483618535606, 2.270432618693779, 2.2698994107360395, 2.2695898327293995, 2.268479689221577, 2.267028751563497, 2.264347755740489, 2.2655353716194133, 2.2627364210779515, 2.2634427315995773, 2.2629689056765305, 2.261573246646126, 2.259992767177033, 2.2580553340307237, 2.257169921274403, 2.258520933552315, 2.2560240615864378, 2.255755559942427, 2.255695983293176, 2.254986214048874, 2.2523868150714836, 2.2512887729991933, 2.250542559250235, 2.248660251653709, 2.246580064540778, 2.247958819092446, 2.2469416530676143, 2.2453339597127377, 2.2453284823836244, 2.2440887446637166, 2.241269697397928, 2.2419138019268523, 2.239006848524842, 2.23704435091292, 2.2391150176895134, 2.235887238850541, 2.235545675783834, 2.2358082234820102, 2.2333993123522715, 2.2324890705257783, 2.2302043843247303, 2.229895397310228, 2.227882636111442, 2.226374209690812, 2.2269490167307673, 2.2242196170236017, 2.2239175357712795, 2.221907595790782, 2.22189754549192, 2.2205719781227398, 2.2208104260514805, 2.2186218919755287, 2.2162728350884597, 2.2157907185222587, 2.2133948278622366, 2.214101356333273, 2.2086420950085306, 2.2077616579292347, 2.2088806003139254, 2.2051703363062605, 2.2039668089237194, 2.2054058398867893, 2.201027271281837, 2.19897616279596, 2.1998433750287623], "accuracy": [0.0936468094587326, 0.1010434553027153, 0.09840179979801178, 0.09945846349000931, 0.10091137140989304, 0.10196803510189056, 0.1014397069811821, 0.09932637959718704, 0.1088363528251648, 0.11015717685222626, 0.11134592443704605, 0.11253467202186584, 0.11610091477632523, 0.11927089840173721, 0.12679962813854218, 0.1224408894777298, 0.13261127471923828, 0.12996962666511536, 0.12349755316972733, 0.14317791163921356, 0.13380002975463867, 0.14000792801380157, 0.13498876988887787, 0.1488574892282486, 0.14119666814804077, 0.14238542318344116, 0.15017831325531006, 0.15400871634483337, 0.16338661313056946, 0.1542728841304779, 0.15942411124706268, 0.16378284990787506, 0.16180160641670227, 0.16840575635433197, 0.17923656105995178, 0.16959451138973236, 0.17117950320243835, 0.17699114978313446, 0.17474573850631714, 0.18095363676548004, 0.18333113193511963, 0.18742570281028748, 0.190859854221344, 0.19574692845344543, 0.18795403838157654, 0.20103025436401367, 0.20103025436401367, 0.204860657453537, 0.20657773315906525, 0.20816272497177124, 0.2008981704711914, 0.2141064554452896, 0.2145027071237564, 0.21793685853481293, 0.21503104269504547, 0.22123894095420837, 0.22678641974925995, 0.22401267290115356, 0.22956016659736633, 0.23563598096370697, 0.23180557787418365, 0.23576806485652924, 0.23193766176700592, 0.22652225196361542, 0.2359001487493515, 0.24897634983062744, 0.23959846794605255, 0.25003302097320557, 0.2557125985622406, 0.24263638257980347, 0.2561088502407074, 0.24844802916049957, 0.2506934404373169, 0.2596750855445862, 0.2591467499732971, 0.26997753977775574, 0.2639017403125763, 0.2642979919910431, 0.2677321434020996, 0.26878878474235535, 0.27037379145622253, 0.2627129852771759, 0.27380794286727905, 0.2769779562950134, 0.2785629332065582, 0.2782987654209137, 0.27143046259880066, 0.28820499777793884, 0.28120461106300354, 0.2847708463668823, 0.2933562397956848, 0.2957337200641632, 0.2915070652961731, 0.2917712330818176, 0.29058247804641724, 0.30603620409965515, 0.3039228618144989, 0.30603620409965515, 0.3073570132255554, 0.3074890971183777], "val_loss": [1.9701298304966517, 1.9693151882716589, 1.9685087203979492, 1.9677009582519531, 1.9669070925031389, 1.966103962489537, 1.9652955191476005, 1.9644955226353236, 1.963702610560826, 1.96290499823434, 1.9621032306126185, 1.9613028253827776, 1.9605026245117188, 1.9597069876534599, 1.958913734980992, 1.9581138065883092, 1.9573243004935128, 1.9565322058541434, 1.9557387488228934, 1.9549365043640137, 1.9541402544294084, 1.953329426901681, 1.952526365007673, 1.9517205102103097, 1.9509164946419852, 1.9501026698521204, 1.9493019921439034, 1.948493140084403, 1.9476714815412248, 1.9468591553824288, 1.9460420608520508, 1.945221219744001, 1.9444125720432825, 1.943586826324463, 1.9427644865853446, 1.9419362885611398, 1.9411046164376395, 1.9402617727007185, 1.9394207681928362, 1.938579831804548, 1.9377294267926897, 1.936873163495745, 1.9360171045575822, 1.9351629529680525, 1.934302806854248, 1.9334368705749512, 1.9325641223362513, 1.9316778864179338, 1.9307891300746374, 1.9298973764692033, 1.9290035111563546, 1.9280968393598283, 1.927189554486956, 1.9262821333748954, 1.9253643580845423, 1.9244352068219865, 1.923504080091204, 1.922565119607108, 1.9216132845197404, 1.920652253287179, 1.9196938105991908, 1.9187309401375907, 1.917764663696289, 1.9167770658220564, 1.9157895360674178, 1.9147770064217704, 1.9137684277125768, 1.9127519471304757, 1.9117309706551688, 1.9107017517089844, 1.9096641540527344, 1.9086146354675293, 1.9075666155133928, 1.9064980234418596, 1.905430793762207, 1.904338768550328, 1.9032389095851354, 1.902121135166713, 1.9010022027151925, 1.899871553693499, 1.8987295286996024, 1.8975776263645716, 1.8964049475533622, 1.8952336311340332, 1.8940649713788713, 1.8928771700177873, 1.891669409615653, 1.890462943485805, 1.889230455671038, 1.8879811423165458, 1.8867440904889787, 1.8854737281799316, 1.8841906956263952, 1.8829139981951033, 1.8815936361040388, 1.8802706854684013, 1.878955636705671, 1.8776027134486608, 1.8762204987662179, 1.8748486382620675], "val_accuracy": [0.0430000014603138, 0.046666666865348816, 0.054666668176651, 0.059333331882953644, 0.06433333456516266, 0.07100000232458115, 0.07633333653211594, 0.0820000022649765, 0.08866667002439499, 0.0963333323597908, 0.10633333027362823, 0.11500000208616257, 0.12033333629369736, 0.12999999523162842, 0.13866665959358215, 0.14866666495800018, 0.1586666703224182, 0.16633333265781403, 0.1720000058412552, 0.17866666615009308, 0.18533332645893097, 0.195333331823349, 0.20366667211055756, 0.2123333364725113, 0.21966665983200073, 0.22766666114330292, 0.23600000143051147, 0.2436666637659073, 0.2516666650772095, 0.2606666684150696, 0.26600000262260437, 0.2720000147819519, 0.27900001406669617, 0.28299999237060547, 0.289000004529953, 0.29466667771339417, 0.2983333468437195, 0.304666668176651, 0.31066668033599854, 0.31566667556762695, 0.3213333189487457, 0.3256666660308838, 0.3323333263397217, 0.3356666564941406, 0.33766666054725647, 0.34200000762939453, 0.34833332896232605, 0.3529999852180481, 0.35633334517478943, 0.3583333194255829, 0.3619999885559082, 0.367000013589859, 0.3683333396911621, 0.3720000088214874, 0.37566667795181274, 0.3773333430290222, 0.3790000081062317, 0.3813333213329315, 0.3843333423137665, 0.3863333463668823, 0.3880000114440918, 0.38966667652130127, 0.390666663646698, 0.3916666805744171, 0.3930000066757202, 0.3943333327770233, 0.3946666717529297, 0.3970000147819519, 0.3986666798591614, 0.40066665410995483, 0.40166667103767395, 0.4046666622161865, 0.40566667914390564, 0.40666666626930237, 0.4073333442211151, 0.4099999964237213, 0.41100001335144043, 0.41200000047683716, 0.4116666615009308, 0.41200000047683716, 0.414000004529953, 0.41466665267944336, 0.41733333468437195, 0.41866666078567505, 0.41966667771339417, 0.4216666519641876, 0.4243333339691162, 0.42633333802223206, 0.4269999861717224, 0.4273333251476288, 0.4286666810512543, 0.4313333332538605, 0.4313333332538605, 0.4323333203792572, 0.43299999833106995, 0.4336666762828827, 0.4346666634082794, 0.43566668033599854, 0.43799999356269836, 0.44066667556762695]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [11, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.1257142871618271, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [5.138621305194372, 2.3087632353153715, 2.2439250512413453, 2.22003881759049, 2.196750272581559, 2.4998869386410214, 2.344051274578128, 2.3464931541697824, 2.3503715876716713, 2.80008546494537], "accuracy": [0.16616034507751465, 0.13168670237064362, 0.15229164063930511, 0.15493330359458923, 0.16431118547916412, 0.12759213149547577, 0.10117553919553757, 0.09866596013307571, 0.10210011899471283, 0.10460969805717468], "val_loss": [1.997089045388358, 1.8632896287100655, 1.8789988926478796, 1.8252959251403809, 1.858954974583217, 2.0210441180637906, 2.0292690822056363, 2.022289208003453, 1.9934312956673759, 1.986337525503976], "val_accuracy": [0.10366666316986084, 0.1850000023841858, 0.1446666717529297, 0.18700000643730164, 0.19233334064483643, 0.10233332961797714, 0.10199999809265137, 0.10233332961797714, 0.09799999743700027, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 5, 4, 2, 2, 9, 6, 8, 6, 2, 3, 1, 9, 6, 2, 8, 2, 6, 6, 0, 9, 9, 6, 3, 5, 3, 2, 9, 9], [4, 3, 3, 1, 1, 1, 3, 3, 3, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 56, 12, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.11400000005960464, "mapping_values": [1, 2, 2, 1, 1, 0, 44, 44, 30, 14, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))))), alpha)))), tf.math.add(beta, grad)), tf.math.add(beta, grad))))), tf.math.add(beta, grad))))), tf.math.add(beta, grad)))), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.54782537689078, 2.304021557198382, 2.5018002666644197, 2.312164645861987, 2.3034288380612407, 2.302884918870927], "accuracy": [0.1566503793001175, 0.10289261490106583, 0.1736890822649002, 0.09932637959718704, 0.09589222073554993, 0.09959053993225098], "val_loss": [1.9765519414629256, 1.9711622510637556, 2.005021435873849, 1.9741907800946916, 1.9736715725490026, 1.9736533164978027], "val_accuracy": [0.10366666316986084, 0.0976666659116745, 0.10233332961797714, 0.0949999988079071, 0.0949999988079071, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [11, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 5, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 3, 1, 1, 1, 3, 2, 1, 0, 0, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [57, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 33, 33, 22, 11, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(alpha, tf.math.square(tf.math.sqrt(alpha)))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, beta))))), tf.math.add(beta, alpha)))))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 4, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [11, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 5, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 3, 1, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [12.86857521919731, 2684.395525378952, 4805.216609527627, 13.622248148134025, 43.921131115390516, 114.55364375932578], "accuracy": [0.10011887550354004, 0.10777968913316727, 0.1018359512090683, 0.10130762308835983, 0.09655263274908066, 0.09932637959718704], "val_loss": [63.4620361328125, 28223.332589285714, 5.1439345223563055, 21.8538088117327, 63.632010323660715, 146.7740696498326], "val_accuracy": [0.10366666316986084, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [9, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 5, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 3, 1, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [57, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.negative(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [6, 3, 5, 4, 2, 0, 9, 6, 8, 6, 2, 3, 1, 9, 6, 2, 3, 2, 6, 6, 9, 6, 9, 9, 5, 5, 3, 2, 9], [4, 3, 3, 1, 1, 1, 3, 3, 2, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 17, 12, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 38, 38, 26, 12, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(grad))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), grad)))))), tf.math.add(beta, grad)), tf.math.add(beta, beta)), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.square(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [654.2801123790265, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16761326789855957, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2876385792.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [6, 3, 5, 4, 4, 3, 5, 6, 8, 6, 9, 3, 1, 9, 6, 2, 8, 2, 6, 6, 6, 6, 9, 6, 8, 5, 3, 2, 5, 4, 9, 0, 2, 0, 6], [4, 3, 0, 3, 1, 1, 3, 3, 1, 3, 3, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 17, 12, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 54, 54, 35, 19, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 65, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(beta, alpha)), alpha)), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, grad), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), grad)))))))), tf.math.add(beta, alpha))), grad), alpha)), tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)))), tf.math.add(beta, grad))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301883883873674, 2.316459947966975, 25241270898838.58, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09192973375320435, 0.08585391938686371, 0.08968432247638702, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9747210230146135, 1.991468838282994, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.025333333760499954, 0.09433333575725555, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 9, 5, 2, 9, 2, 5, 8, 2, 4, 2, 9, 2, 9, 9, 8], [4, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 33, 33, 25, 8, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.pow(tf.math.add(grad, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))))))))), grad))), tf.math.add(beta, alpha)), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [649.7543087287775, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16761326789855957, 0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2839724763.428571, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [11, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 5, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 5, 3, 1, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [359292199.74247336, 7091514865.866068, 32757788631.424118, 90625409167.90913, 198739333419.1795, 356273041273.2881], "accuracy": [0.10077928751707077, 0.10553427785634995, 0.10210011899471283, 0.10077928751707077, 0.1010434553027153, 0.10368511080741882], "val_loss": [1384812178.2857144, 11073545362.285715, 37367543515.42857, 88568606134.85715, 172977590857.14285, 298895605760.0], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 6, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [81, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 0, 5, 9, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 3, 1, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(grad))), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3020145884909256, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [9, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 5, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302125423528641, 2.32143897560562, 5720175977505190.0, 19.214433356393297, 81.27835359524238, 189.37621439484212, 343.5800572129414, 543.610979238663], "accuracy": [0.09140139818191528, 0.08374059200286865, 0.0886276587843895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9759791919163294, 2.005098342895508, 4.584727014814105, 41.43748583112444, 117.70646449497768, 233.45930698939733, 388.6803065708705, 583.459943498884], "val_accuracy": [0.024000000208616257, 0.0989999994635582, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 17, 12, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07409853488206863, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [11, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 3, 1, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.08628571778535843, "mapping_values": [1, 5, 5, 2, 3, 1, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(grad))), tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, alpha))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [25750035.49454125, 781544996.7042663, 11354416089.993925, 72536555075.28833, 213145076666.34473, 356285827744.2071, 477277079276.3545], "accuracy": [0.08321225643157959, 0.0672302171587944, 0.08149518072605133, 0.07660810649394989, 0.0742306187748909, 0.06432439386844635, 0.07026813179254532], "val_loss": [95875657.14285715, 1731655899.4285715, 25452206957.714287, 103868820918.85715, 205289469659.42856, 293754784036.5714, 392106091666.2857], "val_accuracy": [0.02500000037252903, 0.07066666334867477, 0.06666667014360428, 0.05366666615009308, 0.057999998331069946, 0.04533333331346512, 0.029666665941476822]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [9, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 5, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [57, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.06142857298254967, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1337710597347.7651, 138464049741588.12, 1240209974263708.5, 4729342416493909.0, 1.4397376454773958e+16, 3.422072918446892e+16, 6.805902125392307e+16, 1.2236274603239061e+17], "accuracy": [0.08294808864593506, 0.07224937528371811, 0.06155065447092056, 0.06868313252925873, 0.052569013088941574, 0.04913485795259476, 0.052569013088941574, 0.056795667856931686], "val_loss": [13503077585481.143, 423514214048914.3, 2110495849821915.5, 7465009796125257.0, 1.9806153945457812e+16, 4.2878744642940344e+16, 8.091985164489757e+16, 1.3816353163470438e+17], "val_accuracy": [0.0430000014603138, 0.045666664838790894, 0.05833333358168602, 0.027000000700354576, 0.025333333760499954, 0.024000000208616257, 0.02500000037252903, 0.025333333760499954]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [9, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 5, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [1, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.300400879341834, 2.301162128482497, 2.302534326759422, 2.300968140879359, 2.3021197521832986, 2.3018360097001116], "accuracy": [0.09298639744520187, 0.09813763201236725, 0.09285431355237961, 0.09232597798109055, 0.0944393053650856, 0.08968432247638702], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [53, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [0, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 2, 3, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3007352432759367, 2.3022874620659572, 2.3048679235667726, 2.30424413660876, 2.3068200360987055, 2.3077921977274296], "accuracy": [0.09206181764602661, 0.09747721254825592, 0.09140139818191528, 0.08426892012357712, 0.08875974267721176, 0.0820235088467598], "val_loss": [1.9715266227722168, 1.972223894936698, 1.9731924874441964, 1.9739976610456194, 1.9750028337751115, 1.976142133985247], "val_accuracy": [0.035999998450279236, 0.03233333304524422, 0.02666666731238365, 0.024000000208616257, 0.02199999988079071, 0.020666666328907013]}}]