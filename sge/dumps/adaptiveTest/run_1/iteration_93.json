[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82, 51], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 5, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7931428551673889, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.2269208352831233, 2.368065137432362, 2.299633483026384, 2.1760356692023297, 2.172901223537519, 2.260093248342369, 1.8111595609137379, 1.3477743436726188, 0.9780265091905, 0.9412454823697516, 0.8572822287964106, 0.7607331198550739, 0.7567458384859879, 0.7076198669189098, 0.6898149530082378, 0.6681981008633205, 0.6363443386293343, 0.6168707127678805, 0.599707503777611, 0.5812246904491575, 0.5322559528961126, 0.5361834829430838, 0.5398613869584925], "accuracy": [0.2067098170518875, 0.20657773315906525, 0.13934750854969025, 0.21714437007904053, 0.2102760523557663, 0.17316074669361115, 0.41262713074684143, 0.5694096088409424, 0.659490168094635, 0.6848500967025757, 0.6983225345611572, 0.717870831489563, 0.7244749665260315, 0.7360982894897461, 0.7469290494918823, 0.7549861073493958, 0.7728173136711121, 0.7728173136711121, 0.774798572063446, 0.7845727205276489, 0.7992339134216309, 0.7980451583862305, 0.7971205711364746], "val_loss": [1.8542272022792272, 1.9862091200692313, 1.9421392849513464, 1.5807744434901647, 1.9730809075491769, 1.3427355289459229, 1.182928936822074, 0.7302625179290771, 0.8554510048457554, 0.7076329163142613, 0.6076083864484515, 0.5449764898845127, 0.5542939049857003, 0.5472905465534755, 0.6322325468063354, 0.5023632219859532, 0.4816045250211443, 0.46491098403930664, 0.5157968146460397, 0.452127890927451, 0.4783247879573277, 0.4990506172180176, 0.4717704568590437], "val_accuracy": [0.289000004529953, 0.10366666316986084, 0.17733334004878998, 0.4256666600704193, 0.10100000351667404, 0.5193333625793457, 0.5546666383743286, 0.6956666707992554, 0.6836666464805603, 0.7003333568572998, 0.7110000252723694, 0.7473333477973938, 0.7676666378974915, 0.7613333463668823, 0.7386666536331177, 0.7929999828338623, 0.7913333177566528, 0.8096666932106018, 0.7796666622161865, 0.8040000200271606, 0.7683333158493042, 0.7753333449363708, 0.777999997138977]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7325714230537415, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.295126614207211, 2.25585782954627, 2.166271408929045, 1.9884639512971407, 1.6546914169517852, 1.4071755443880853, 1.3749471353171383, 1.194470068624605, 0.9875676062254779, 0.9000815821755217, 0.8984435780441064, 0.8536929136033639, 0.8060828252884816, 0.8033648643038922, 0.8177484664950373, 0.7829344991081347, 0.7554187348742039, 0.7263828253450018, 0.7324292579693581, 0.7214226010862579, 0.7119398353799239, 0.6827207169024511, 0.6771907990461548, 0.6624246595510795, 0.6491133662467431, 0.6392927943770566, 0.6161921459528528, 0.5994036952817224, 0.5995996953190562, 0.6114974066865064, 0.6057918684719702, 0.5858862061211462, 0.5704226505644585, 0.5691627833538083, 0.5618235910841031, 0.5476324096205937, 0.5410413206009392, 0.5279609509124386, 0.5377042007610042, 0.5155466576262456, 0.5189931533906942], "accuracy": [0.10698718577623367, 0.2082948088645935, 0.3439439833164215, 0.4015321731567383, 0.4484215974807739, 0.5120856165885925, 0.5468233823776245, 0.6045436263084412, 0.6485272645950317, 0.6609430909156799, 0.6693964004516602, 0.6909258961677551, 0.6966054439544678, 0.6934354901313782, 0.6951525807380676, 0.71100252866745, 0.7082287669181824, 0.7169462442398071, 0.718399167060852, 0.7281733155250549, 0.733060359954834, 0.7349095344543457, 0.7429665923118591, 0.7475894689559937, 0.752740740776062, 0.752212405204773, 0.7622507214546204, 0.7670056819915771, 0.7714964747428894, 0.7701756954193115, 0.7692511081695557, 0.7807422876358032, 0.783119797706604, 0.7884030938148499, 0.7911768555641174, 0.7976489067077637, 0.7989697456359863, 0.7996301651000977, 0.7960638999938965, 0.8024039268493652, 0.7993659973144531], "val_loss": [1.948817184993199, 1.8913234983171736, 1.7744231224060059, 1.5039444650922502, 1.1055162634168352, 0.8480056183678764, 0.7461896453584943, 0.7129533631461007, 0.6728817735399518, 0.6856325694492885, 0.6785413537706647, 0.6129082441329956, 0.5956488166536603, 0.5956377131598336, 0.5819281169346401, 0.5709195988518851, 0.5565929583140782, 0.5645972490310669, 0.5590188843863351, 0.5543031011308942, 0.5410525969096592, 0.5314902067184448, 0.5202239922114781, 0.505928499358041, 0.4913351024900164, 0.4820582015173776, 0.478405237197876, 0.47209610257829937, 0.47344865117754253, 0.4681215797151838, 0.4504800694329398, 0.4485574620110648, 0.4575627361025129, 0.45516899653843473, 0.4522571734019688, 0.451603855405535, 0.4423245532172067, 0.4358898571559361, 0.4323779344558716, 0.43008412633623394, 0.4327941707202366], "val_accuracy": [0.23933333158493042, 0.39666667580604553, 0.4490000009536743, 0.512333333492279, 0.6056666374206543, 0.6776666641235352, 0.6943333148956299, 0.7160000205039978, 0.7110000252723694, 0.7229999899864197, 0.7229999899864197, 0.7419999837875366, 0.734333336353302, 0.7300000190734863, 0.7453333139419556, 0.7526666522026062, 0.7419999837875366, 0.7473333477973938, 0.7630000114440918, 0.7603333592414856, 0.7633333206176758, 0.765333354473114, 0.7776666879653931, 0.7820000052452087, 0.7866666913032532, 0.7839999794960022, 0.7833333611488342, 0.7929999828338623, 0.7990000247955322, 0.8019999861717224, 0.8066666722297668, 0.8043333292007446, 0.8050000071525574, 0.809333324432373, 0.8180000185966492, 0.8226666450500488, 0.8186666369438171, 0.8166666626930237, 0.8190000057220459, 0.8220000267028809, 0.8206666707992554]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 2, 6, 5, 2, 2, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7319999933242798, "mapping_values": [1, 20, 20, 12, 8, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.295126614207211, 2.25585782954627, 2.1662713909476676, 1.988462178997785, 1.6546887737995188, 1.4071775708042982, 1.3749582162229, 1.1944510537430815, 0.9875050780086974, 0.8999380139296222, 0.8982025918833347, 0.8535325848399656, 0.806369714103339, 0.8042243018346834, 0.8181103561863278, 0.7822269964070132, 0.7549478482135676, 0.7265212538771074, 0.7322698420364119, 0.7212036571025912, 0.7122815724739293, 0.6829167171602221, 0.6774663160096354, 0.6622035624549184, 0.6487369315971583, 0.6392433730335032, 0.6169632266950551, 0.5994125754841724, 0.5982258798754557, 0.6113046615304193, 0.6058375243308632, 0.5859265715344361, 0.5697681555390878, 0.5676806680262758, 0.5596036127199036, 0.5471899519664516, 0.5405344889305995, 0.528895168921825, 0.5378232863223028, 0.5147319771295304, 0.5179715517599821, 0.5042123222836036, 0.5159034635790462, 0.48955056914847367, 0.4859522429707343, 0.49913977960223266, 0.4858599584557046, 0.48968932740739657, 0.47531177855170936, 0.4700188011682863, 0.4761930078980536, 0.47397403760498635], "accuracy": [0.10698718577623367, 0.2082948088645935, 0.3439439833164215, 0.4015321731567383, 0.44828951358795166, 0.5120856165885925, 0.5464271306991577, 0.6044115424156189, 0.648659348487854, 0.661471426486969, 0.6687359809875488, 0.6909258961677551, 0.6960771083831787, 0.6921146512031555, 0.6955488324165344, 0.7113987803459167, 0.7098137736320496, 0.7164179086685181, 0.7191916704177856, 0.728701651096344, 0.7325320243835449, 0.7364945411682129, 0.7434949278831482, 0.7471932172775269, 0.7541936039924622, 0.7510236501693726, 0.7621186375617981, 0.7667415142059326, 0.7709681391716003, 0.7701756954193115, 0.7700436115264893, 0.78113853931427, 0.7840443849563599, 0.7877426743507385, 0.7923656105995178, 0.7969884872436523, 0.8000264167785645, 0.8006868362426758, 0.7969884872436523, 0.8013472557067871, 0.800290584564209, 0.8101968169212341, 0.8049134612083435, 0.8133667707443237, 0.8175934553146362, 0.8103289008140564, 0.8198388814926147, 0.8206313848495483, 0.8248580098152161, 0.8216879963874817, 0.8178576231002808, 0.8189142942428589], "val_loss": [1.948817184993199, 1.8913235664367676, 1.7744229861668177, 1.5039411272321428, 1.105508736201695, 0.8479785408292498, 0.7461503744125366, 0.7129078762871879, 0.6728619337081909, 0.6855469260896955, 0.6786183970315116, 0.6129216466631208, 0.5957276139940534, 0.5960460560662406, 0.5817349127360752, 0.570939472743443, 0.556928242955889, 0.5646929230008807, 0.5588819129126412, 0.5541745935167585, 0.5413742406027657, 0.5319811957223075, 0.520625284739903, 0.5062048264912197, 0.49170053005218506, 0.4827146189553397, 0.47901897771017893, 0.47189336163657053, 0.47304391860961914, 0.46853978293282644, 0.4512284653527396, 0.44893390791756765, 0.45762811388288227, 0.4547089508601597, 0.4517026288168771, 0.451607278415135, 0.44287960869925364, 0.4367447240012033, 0.43285612549100605, 0.4308405007634844, 0.43365005935941425, 0.43247778926576885, 0.4241366812161037, 0.41543385812214445, 0.41014513799122404, 0.4082897816385542, 0.41414910554885864, 0.41966784851891653, 0.41559817109789166, 0.41024772609983173, 0.41242378098624094, 0.40762168169021606], "val_accuracy": [0.23933333158493042, 0.39666667580604553, 0.4490000009536743, 0.5120000243186951, 0.6056666374206543, 0.6776666641235352, 0.6949999928474426, 0.7153333425521851, 0.7113333344459534, 0.7223333120346069, 0.7233333587646484, 0.7409999966621399, 0.734666645526886, 0.7303333282470703, 0.7440000176429749, 0.7540000081062317, 0.7419999837875366, 0.7459999918937683, 0.7630000114440918, 0.7616666555404663, 0.762333333492279, 0.765666663646698, 0.778333306312561, 0.781333327293396, 0.7873333096504211, 0.784333348274231, 0.7826666831970215, 0.7929999828338623, 0.7979999780654907, 0.8016666769981384, 0.8063333630561829, 0.8016666769981384, 0.8046666383743286, 0.8103333115577698, 0.8196666836738586, 0.8206666707992554, 0.8196666836738586, 0.8176666498184204, 0.8163333535194397, 0.8220000267028809, 0.8203333616256714, 0.8246666789054871, 0.8273333311080933, 0.8259999752044678, 0.8240000009536743, 0.8286666870117188, 0.8346666693687439, 0.8320000171661377, 0.8299999833106995, 0.8326666951179504, 0.828000009059906, 0.8286666870117188]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 5, 8, 4, 4, 3, 2, 9], [3, 0, 0, 0, 3, 1, 2, 0, 0], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7319999933242798, "mapping_values": [1, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.295126614207211, 2.25585782954627, 2.1662714719111027, 1.9884628110069877, 1.6546908814153494, 1.4071759898759244, 1.3749653607500605, 1.1944511260464836, 0.9875876638694383, 0.9000571061748918, 0.8984275741458112, 0.8535983948785678, 0.8057953670056048, 0.8036581901290932, 0.8177881695811365, 0.7822858102805642, 0.7553252315933773, 0.7258954367239587, 0.7317628821503485, 0.72085483608591, 0.7118767334280894, 0.6826240634008122, 0.6767382288826235, 0.6622933064705628, 0.6488536576065231, 0.639195228682659, 0.616586484275773, 0.5990877788080405, 0.5991912046837343, 0.6115865135835288, 0.6054528929916088, 0.58575330361903, 0.570338412141126, 0.5690484836416128, 0.5608969174041063, 0.5467473088380226, 0.5413094237968356, 0.527974658630559, 0.5374109057733931, 0.5150969492335755, 0.5194270663005707], "accuracy": [0.10698718577623367, 0.2082948088645935, 0.3439439833164215, 0.4015321731567383, 0.4484215974807739, 0.5120856165885925, 0.5468233823776245, 0.6045436263084412, 0.648659348487854, 0.6609430909156799, 0.6695284843444824, 0.6910579800605774, 0.6970016956329346, 0.6926429867744446, 0.6951525807380676, 0.7107383608818054, 0.7078325152397156, 0.7157574892044067, 0.7195879220962524, 0.7284374833106995, 0.7338528633117676, 0.7357020378112793, 0.7430986762046814, 0.7474573850631714, 0.7526086568832397, 0.7503632307052612, 0.7623828053474426, 0.767401933670044, 0.7707040309906006, 0.7696473598480225, 0.7703077793121338, 0.7803460359573364, 0.7832518815994263, 0.7884030938148499, 0.7926297783851624, 0.7971205711364746, 0.7992339134216309, 0.8014793395996094, 0.7951393723487854, 0.8010830879211426, 0.798309326171875], "val_loss": [1.948817184993199, 1.8913234983171736, 1.7744229861668177, 1.5039428302219935, 1.1055117334638322, 0.84800842830113, 0.7461975983210972, 0.712965726852417, 0.6728487525667463, 0.6856047085353306, 0.6787466321672712, 0.6129352876118251, 0.595678414617266, 0.5958484070641654, 0.5817964417593819, 0.5712437289101737, 0.5565251622881208, 0.5642228637422834, 0.5586968660354614, 0.5541214942932129, 0.5412314449037824, 0.5311504772731236, 0.5199540512902396, 0.5061628137316022, 0.49146279266902376, 0.48254924161093576, 0.4783597503389631, 0.4716710022517613, 0.47337242535182406, 0.4685335159301758, 0.4505627155303955, 0.4487630810056414, 0.45794345651354107, 0.4548391784940447, 0.45135935715266634, 0.4515260798590524, 0.44286819866725374, 0.436152492250715, 0.43274758543287006, 0.431026177746909, 0.43344136646815706], "val_accuracy": [0.23933333158493042, 0.39666667580604553, 0.4490000009536743, 0.512333333492279, 0.6056666374206543, 0.6776666641235352, 0.6943333148956299, 0.715666651725769, 0.7103333473205566, 0.7229999899864197, 0.7223333120346069, 0.7413333058357239, 0.734000027179718, 0.7310000061988831, 0.7453333139419556, 0.7523333430290222, 0.7429999709129333, 0.7456666827201843, 0.7636666893959045, 0.7613333463668823, 0.7633333206176758, 0.765333354473114, 0.778333306312561, 0.7803333401679993, 0.7863333225250244, 0.7829999923706055, 0.7829999923706055, 0.7926666736602783, 0.7990000247955322, 0.8003333210945129, 0.8056666851043701, 0.8029999732971191, 0.8063333630561829, 0.8080000281333923, 0.8176666498184204, 0.8216666579246521, 0.8176666498184204, 0.8166666626930237, 0.8173333406448364, 0.8193333148956299, 0.8199999928474426]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4, 4, 2, 8, 7, 6, 6, 4, 4, 5], [0, 0, 1, 1, 3, 1, 0, 0, 0, 3, 3, 3, 3], [31, 32, 92, 66, 93], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7137143015861511, "mapping_values": [1, 34, 34, 21, 13, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.add(alpha, tf.math.sqrt(alpha))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.pow(grad, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2992730295621895, 2.295203396168997, 2.2870464315818775, 2.284704711884083, 2.2774929178389325, 2.2737336782274813, 2.267814112660624, 2.2615694356962925, 2.2562774946472004, 2.248813239008035, 2.2424444367526277, 2.237240842210303, 2.230559238935931, 2.2226342392824328, 2.2135444365755723, 2.205452397074036, 2.1957496036675157, 2.188068564541824, 2.1772641652232827, 2.1654750870329402, 2.1536968676106425, 2.1398802177702287, 2.1291337587955903, 2.1156318768093283, 2.0987130635765014, 2.0839618533089994, 2.065043132696579, 2.0465546113121165, 2.0285481414648805, 2.0122971238713334, 1.990760145516774, 1.9667779748402945, 1.9459868607472561, 1.9192417825390997, 1.8983023155319725, 1.8692820848585388, 1.8437549102544124, 1.8230185290810108, 1.79723304759683, 1.7681114129134614, 1.7345859631886178, 1.712137168141215, 1.6829342029476053, 1.6588712924381115, 1.6342753501474392, 1.6056134708647904, 1.5784965037449303, 1.5547041580614365, 1.527026049307608, 1.509267009732714, 1.4904372523946061, 1.4586864911554165, 1.449725017366849, 1.424831120455506, 1.4010991536552218, 1.3785288239892102, 1.364660773609828, 1.3502575724021932, 1.3401286055021093, 1.3247916204833934, 1.3087904044209124, 1.2936433629746513, 1.2767106932955112, 1.2676482019391688, 1.2579561352902997, 1.2379723123004487, 1.2184182625751547, 1.2173842828287313, 1.213920275942367, 1.1952468367174647, 1.183529275865949, 1.179061570045986, 1.160697206593051, 1.158272035700408, 1.142607479094829, 1.1349409251023497, 1.1298911622833063, 1.1199733063277473, 1.1171871507015085, 1.1063299438248315, 1.1046987573279523, 1.0946944129937801, 1.088512963638361, 1.0658359396427755, 1.0603740109176747, 1.0800931218309393, 1.0536253204938995, 1.0574316931060592, 1.0418196906975437, 1.0402485671816186, 1.0293446880494757, 1.0226421768261285, 1.0210832559106655, 1.014763403467892, 1.012651433766463, 0.9993684195949417, 0.989286812871848, 0.9928104854562201, 0.9812033683112773, 0.9873307039945227], "accuracy": [0.09615638852119446, 0.1088363528251648, 0.12878087162971497, 0.13591335713863373, 0.16021661460399628, 0.16629242897033691, 0.1802932173013687, 0.19363360106945038, 0.21080438792705536, 0.22586184740066528, 0.2366926372051239, 0.2483159452676773, 0.261260062456131, 0.2771100103855133, 0.2919033169746399, 0.3000924587249756, 0.3097345232963562, 0.313300758600235, 0.32743361592292786, 0.3377360999584198, 0.34288734197616577, 0.35966187715530396, 0.3707568347454071, 0.3723418414592743, 0.3803988993167877, 0.38924846053123474, 0.39043718576431274, 0.40628713369369507, 0.40668338537216187, 0.40787214040756226, 0.419759601354599, 0.42768457531929016, 0.43349623680114746, 0.4291374981403351, 0.4391758143901825, 0.4493461847305298, 0.45410117506980896, 0.4496103525161743, 0.4617619812488556, 0.46030908823013306, 0.4745740294456482, 0.48170650005340576, 0.48051777482032776, 0.4876502454280853, 0.48632940649986267, 0.4947827160358429, 0.5081230998039246, 0.5001981258392334, 0.5159159898757935, 0.5192180871963501, 0.5205389261245728, 0.5301809310913086, 0.5259543061256409, 0.5369172096252441, 0.5341434478759766, 0.5440496802330017, 0.5484083890914917, 0.5488046407699585, 0.548540472984314, 0.5461629629135132, 0.5638620853424072, 0.561880886554718, 0.5645225048065186, 0.565711259841919, 0.5712587237358093, 0.5739004015922546, 0.5875049233436584, 0.5806366205215454, 0.5830141305923462, 0.5871087312698364, 0.5869766473770142, 0.5959582328796387, 0.6000528335571289, 0.6008453369140625, 0.6017699241638184, 0.6020340919494629, 0.6046757102012634, 0.6118082404136658, 0.6089023947715759, 0.6172236204147339, 0.6110157370567322, 0.616299033164978, 0.6193369626998901, 0.6269977688789368, 0.6277902722358704, 0.6199973821640015, 0.6279223561286926, 0.6194690465927124, 0.6347906589508057, 0.6313564777374268, 0.6357152462005615, 0.6382247805595398, 0.6395456194877625, 0.6453573107719421, 0.6411306262016296, 0.6444327235221863, 0.6527539491653442, 0.6516972780227661, 0.6534143686294556, 0.6472064256668091], "val_loss": [1.9659457206726074, 1.9610058239528112, 1.956061703818185, 1.9511642456054688, 1.9461867468697684, 1.941139084952218, 1.9359619276864188, 1.9305380412510462, 1.9250004632132394, 1.9192418370928084, 1.9131178174700056, 1.9067222050258092, 1.90004791532244, 1.8929375920976912, 1.8853306089128767, 1.877246652330671, 1.8685346330915178, 1.859311785016741, 1.849400588444301, 1.8387656211853027, 1.8275036130632674, 1.8155061176845007, 1.8027602604457311, 1.7891879762922014, 1.7747368131365096, 1.7593295914786202, 1.7428349767412459, 1.7253872326442175, 1.707132169178554, 1.6878857953207833, 1.66751309803554, 1.6462108067103796, 1.623901060649327, 1.600609404700143, 1.576704978942871, 1.5518721171787806, 1.5262809821537562, 1.5004244531903947, 1.4741361141204834, 1.4472912039075578, 1.4199677194867815, 1.3928772721971785, 1.3655894143240792, 1.3382212775094169, 1.3116209166390556, 1.285134724208287, 1.2589609282357352, 1.2338714259011405, 1.209270375115531, 1.1856063774653844, 1.163058076586042, 1.1411360331944056, 1.1202848638807024, 1.1001392432621546, 1.0805695738111223, 1.0620190075465612, 1.0441654750279017, 1.0270854064396449, 1.011024100439889, 0.9958617687225342, 0.9814513751438686, 0.9676158768790108, 0.9545227800096784, 0.9417625495365688, 0.9296809945787702, 0.917851482118879, 0.9064663137708392, 0.8961023262568882, 0.8862829548971993, 0.8764759813036237, 0.867110048021589, 0.8582484892436436, 0.8493631056376866, 0.8415337971278599, 0.8333128690719604, 0.825820803642273, 0.8186488662447248, 0.8115872314998082, 0.8050957918167114, 0.798500623021807, 0.7924506323678153, 0.7863520213535854, 0.780826381274632, 0.7749585594449725, 0.769300069127764, 0.7643228258405413, 0.7592946972165789, 0.7541860171726772, 0.749320251601083, 0.7446614674159459, 0.7398393835340228, 0.7351404258183071, 0.7309872763497489, 0.7267604896000454, 0.7230266502925328, 0.7190148149217878, 0.7150143044335502, 0.7112326281411308, 0.7078141484941755, 0.7043309892926898], "val_accuracy": [0.07266666740179062, 0.11599999666213989, 0.17000000178813934, 0.21666666865348816, 0.2633333206176758, 0.2926666736602783, 0.32600000500679016, 0.34933334589004517, 0.36800000071525574, 0.38066667318344116, 0.39100000262260437, 0.3996666669845581, 0.40833333134651184, 0.4183333218097687, 0.42766666412353516, 0.43566668033599854, 0.4410000145435333, 0.4490000009536743, 0.453000009059906, 0.46000000834465027, 0.4673333466053009, 0.47566667199134827, 0.4819999933242798, 0.492000013589859, 0.4970000088214874, 0.5019999742507935, 0.5080000162124634, 0.5136666893959045, 0.5213333368301392, 0.5273333191871643, 0.5346666574478149, 0.5376666784286499, 0.5389999747276306, 0.5463333129882812, 0.550000011920929, 0.5546666383743286, 0.5576666593551636, 0.5603333115577698, 0.5659999847412109, 0.5709999799728394, 0.5770000219345093, 0.5826666951179504, 0.5860000252723694, 0.5899999737739563, 0.5923333168029785, 0.6010000109672546, 0.6046666502952576, 0.606333315372467, 0.6119999885559082, 0.6176666617393494, 0.6243333220481873, 0.628333330154419, 0.6356666684150696, 0.6413333415985107, 0.6453333497047424, 0.6499999761581421, 0.6549999713897705, 0.6586666703224182, 0.6646666526794434, 0.6663333177566528, 0.6696666479110718, 0.67166668176651, 0.6733333468437195, 0.6743333339691162, 0.675000011920929, 0.6769999861717224, 0.6786666512489319, 0.6823333501815796, 0.6823333501815796, 0.6840000152587891, 0.6869999766349792, 0.687666654586792, 0.6899999976158142, 0.6909999847412109, 0.6926666498184204, 0.6933333277702332, 0.6940000057220459, 0.6959999799728394, 0.6976666450500488, 0.6983333230018616, 0.6990000009536743, 0.7009999752044678, 0.7020000219345093, 0.703000009059906, 0.70333331823349, 0.7043333053588867, 0.7043333053588867, 0.706333339214325, 0.7066666483879089, 0.7086666822433472, 0.7080000042915344, 0.7093333601951599, 0.7106666564941406, 0.7126666903495789, 0.7133333086967468, 0.7146666646003723, 0.7183333039283752, 0.7179999947547913, 0.7200000286102295, 0.7213333249092102]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [8, 5, 8, 6, 3, 2, 0, 5, 6, 8, 4, 4, 1, 0, 0, 2, 8, 0, 3, 4, 8, 2, 2], [0, 0, 2, 1, 2, 0, 2, 0, 0, 3, 3, 0, 2], [31, 2, 3, 66, 21, 47], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [0, 0, 2], [20, 52, 13]], "fitness": -0.11571428924798965, "mapping_values": [1, 36, 36, 23, 13, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(grad, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))), tf.math.multiply(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(alpha, tf.math.pow(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3030618436269443, 2.304352182423072, 2.303316593264639, 2.299010839255699, 2.2575141033869945, 2.2744851794776317, 2.3202267328289286, 2.3340019745487246, 2.3156430082015076, 2.329092895885453], "accuracy": [0.08625016361474991, 0.09787346422672272, 0.10091137140989304, 0.12455421686172485, 0.12970545887947083, 0.1224408894777298, 0.09734513610601425, 0.09998679161071777, 0.10117553919553757, 0.09932637959718704], "val_loss": [1.9739574704851424, 1.9745843751089913, 1.9710654531206404, 1.970505918775286, 1.8001258713858468, 2.0016725403921947, 1.9921155657087053, 1.9799048560006278, 2.0019211087908064, 1.9773648125784737], "val_accuracy": [0.09566666930913925, 0.0949999988079071, 0.1236666664481163, 0.11133333295583725, 0.18733333051204681, 0.10199999809265137, 0.09666666388511658, 0.10366666316986084, 0.10199999809265137, 0.09566666930913925]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82, 51], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 5, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.11371428519487381, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3012098903905414, 2.3014694326794016, 2.299363796311977, 2.3003072791237478, 2.30008430302088, 2.300682291299943, 2.300997263845782, 2.301241953359414, 2.301360204250994, 2.30175642865823, 2.3020301703149615, 2.3021927549067174, 2.302350188699837, 2.302348234618518, 2.3024683258458216, 2.3024875296105356, 2.3025515052101095], "accuracy": [0.09113723784685135, 0.09179764986038208, 0.1002509593963623, 0.09721305221319199, 0.09998679161071777, 0.10289261490106583, 0.09721305221319199, 0.09694888442754745, 0.10117553919553757, 0.09509972482919693, 0.10276053100824356, 0.1002509593963623, 0.10236428678035736, 0.10553427785634995, 0.10421344637870789, 0.1006472036242485, 0.10249637067317963], "val_loss": [1.9706080981663294, 1.9705345290047782, 1.9707996504647392, 1.971285615648542, 1.971754687173026, 1.972193990434919, 1.9725544793265206, 1.9728190558297294, 1.9730158533368791, 1.9731970514569963, 1.9733613559177943, 1.9734885351998466, 1.973562444959368, 1.9736051559448242, 1.9736268860953194, 1.9736415999276298, 1.9736443247113908], "val_accuracy": [0.052666667848825455, 0.06499999761581421, 0.08399999886751175, 0.09266666322946548, 0.09933333098888397, 0.10266666859388351, 0.09733333438634872, 0.08933333307504654, 0.08566666394472122, 0.0963333323597908, 0.11100000143051147, 0.11866666376590729, 0.1133333370089531, 0.11566666513681412, 0.11166666448116302, 0.10499999672174454, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [0, 0, 2, 1, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82, 51], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [3, 7, 6, 0, 4, 7, 4, 8], [3, 3, 3, 4, 1, 4], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [0, 3, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 12, 12, 6, 6, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), grad), tf.math.pow(grad, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022824196909335, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4], [0, 2, 2, 1, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [3, 3, 9, 1, 2], [0, 0, 2], [85, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), grad)), tf.math.square(grad)), tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82, 51], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 7, 6, 5, 6, 5, 3, 9, 8, 2, 8, 2], [1, 3, 3, 1, 1, 4, 4], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [9, 5, 9, 1, 2], [3, 0, 2], [85, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 12, 7, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad)))))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022824196909335, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82, 51], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [3, 7, 6, 4, 5, 0, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [7], [64], [0, 0, 0, 1, 1, 1], [1, 2, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.multiply(grad, tf.math.add(beta, alpha))))))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 5, 8, 9, 3, 2, 0, 5, 6, 8, 4, 4, 3, 0, 1], [0, 0, 2, 1, 1, 1, 1, 0, 2], [31, 32, 3, 66, 93], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 4, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [17.231688062985025, 162.2433136151593, 581.7166168329785, 1491.0907385668277, 3053.287628645438, 5421.246670323026], "accuracy": [0.10011887550354004, 0.09985470771789551, 0.1022322028875351, 0.09866596013307571, 0.1018359512090683, 0.1010434553027153], "val_loss": [42.454268319266184, 216.1512930733817, 626.6127406529018, 1393.974574497768, 2631.2282366071427, 4454.309849330357], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 2, 6, 6, 2, 0, 5, 6, 8, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 1, 1, 1, 1], [1, 4, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [8, 5, 8, 8, 3, 2, 0, 5, 6, 8, 4, 4, 3, 0, 1], [0, 0, 2, 1, 3, 1, 0, 0, 0], [79, 24, 3, 66, 61], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [2, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 8, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07647603005170822, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 93], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3022736732466282, 2.302609380178637, 2.3027528893001294, 2.3028964434537937, 2.3032638252907267, 2.303612339246259], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.97367525100708, 1.9737988880702428, 1.9739884649004256, 1.9742721830095564, 1.9746742248535156, 1.975271361214774], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 41, 51], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [3, 7, 6, 5, 5, 7, 3, 2], [1, 3, 1, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 9, 9, 1, 2], [0, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 3, 3, 0, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [298622885.11032796, 5685138952.453309, 25975860772.99168, 73443816110.54391, 157531105929.48462, 287185787606.8493], "accuracy": [0.10157178342342377, 0.10091137140989304, 0.10210011899471283, 0.09866596013307571, 0.1018359512090683, 0.1006472036242485], "val_loss": [1104333494.857143, 8830381202.285715, 29797680274.285713, 70625820672.0, 137934564790.85715, 238343197257.14285], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 8, 8, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [0, 0, 2, 1, 3, 2, 0, 0, 0], [28, 32, 3, 66, 82, 51], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 7, 6, 2, 5, 7, 3, 9], [1, 3, 3, 0, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 6, 9, 1, 2], [0, 0, 2], [20, 47, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 13, 8, 4, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.square(grad)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.pow(tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [8, 5, 2, 6, 0, 2, 0, 5, 6, 6, 4, 4, 1, 0, 8], [0, 0, 2, 0, 3, 1, 0, 0, 0], [36, 23, 3, 66, 97, 88], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1, 0], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [7, 5, 9, 1, 2], [1, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 15, 9, 6, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad))))))), tf.math.divide_no_nan(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(grad, tf.math.subtract(alpha, tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), alpha), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 2, 6, 2, 2, 0, 5, 6, 8, 4, 4], [0, 0, 1, 1, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [6, 3, 9, 1, 2], [0, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(alpha))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022824196909335, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [0, 0, 2, 1, 3, 1, 0, 0, 0], [31, 32, 3, 66, 93], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [5, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.301521990576661, 2.3029239333269538, 2.300145789443573, 2.3030675979511472, 2.301283403268627, 2.3029141625109726], "accuracy": [0.09219389408826828, 0.09206181764602661, 0.09259014576673508, 0.09008057415485382, 0.09034473448991776, 0.09325055778026581], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]