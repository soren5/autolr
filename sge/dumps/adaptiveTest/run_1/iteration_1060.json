[{"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 5, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8428571224212646, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 10, 5, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(alpha, tf.math.square(tf.math.sqrt(beta))), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), tf.math.sqrt(grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9494352687886836, 1.4134268922545041, 0.974946149509376, 0.7685815034415255, 0.7206487700829275, 0.7009059155716353, 0.6634713191759979, 0.6394392041057219, 0.6131283168496079, 0.5890320698819093, 0.5711280955630302, 0.5494812264528729, 0.5402365256420232, 0.5310358140352396, 0.5056397436380292, 0.49836893600322285, 0.47902076001243504, 0.48641645188785704, 0.46184724267006805, 0.47202968761559094, 0.44489549529267464, 0.43183142768708455, 0.43209387518868014, 0.40965186587540137, 0.42610304689977335, 0.4175243231252263, 0.4000098720210623, 0.39542060859797573, 0.3956194387183229, 0.3749740152523707, 0.3651676823032877, 0.36732308239260403, 0.3599191149542943, 0.351917356343207, 0.3534621847831594, 0.34046669529334916, 0.3373747632771498], "accuracy": [0.35266146063804626, 0.5495971441268921, 0.6429798007011414, 0.7124554514884949, 0.7215691208839417, 0.7357020378112793, 0.7464007139205933, 0.7555144429206848, 0.7663452625274658, 0.7759873270988464, 0.7800818681716919, 0.7864218950271606, 0.7960638999938965, 0.7985734939575195, 0.8094043135643005, 0.81112140417099, 0.8193105459213257, 0.8125742673873901, 0.828820526599884, 0.8207634687423706, 0.8281601071357727, 0.837537944316864, 0.8379341959953308, 0.8450667262077332, 0.8403117060661316, 0.8387266993522644, 0.850350022315979, 0.8514066934585571, 0.8499537706375122, 0.8574824929237366, 0.8640866279602051, 0.8615770936012268, 0.8650112152099609, 0.8654074668884277, 0.8660678863525391, 0.8739928603172302, 0.8721436858177185], "val_loss": [1.4248600006103516, 0.8404969147273472, 0.6542853287288121, 0.6140237535749163, 0.5955403702599662, 0.5555835451398577, 0.5813114643096924, 0.4862360954284668, 0.488312874521528, 0.46088974816458567, 0.4607737064361572, 0.45388145106179373, 0.4549498217446463, 0.44467590536390034, 0.44479572772979736, 0.4099374668938773, 0.46767546449388775, 0.39167189598083496, 0.3793897203036717, 0.38340108735220774, 0.3905766861779349, 0.39077575717653545, 0.3671091113771711, 0.3925033211708069, 0.3636329855237688, 0.38589032207216534, 0.371667742729187, 0.3707205057144165, 0.3660283088684082, 0.34140942777906147, 0.34369020802634104, 0.33518487215042114, 0.3500907165663583, 0.3604638321059091, 0.3361456649644034, 0.33546416248594013, 0.3489656448364258], "val_accuracy": [0.5883333086967468, 0.609000027179718, 0.7123333215713501, 0.6953333616256714, 0.7253333330154419, 0.7406666874885559, 0.7213333249092102, 0.7789999842643738, 0.7666666507720947, 0.796999990940094, 0.7896666526794434, 0.7993333339691162, 0.7960000038146973, 0.7929999828338623, 0.8019999861717224, 0.8220000267028809, 0.7696666717529297, 0.8223333358764648, 0.8363333344459534, 0.8293333053588867, 0.828000009059906, 0.8296666741371155, 0.8423333168029785, 0.8276666402816772, 0.8500000238418579, 0.8263333439826965, 0.8333333134651184, 0.8349999785423279, 0.8366666436195374, 0.8579999804496765, 0.8556666374206543, 0.8586666584014893, 0.8460000157356262, 0.8463333249092102, 0.8566666841506958, 0.8526666760444641, 0.8453333377838135]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 8, 2, 9, 3, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 3, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8125714063644409, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 5, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9585459618725245, 1.428595063204873, 0.9648062916810345, 0.7816938117368898, 0.7394547937663004, 0.7071289793690198, 0.6642305402865326, 0.6380623545566051, 0.6130138884650687, 0.5977626439209045, 0.5753700676186052, 0.5535073990142262, 0.5459429367012777, 0.5376765873249196, 0.5042376470383148, 0.5107778474332287, 0.4754546851592844, 0.48124992296743263, 0.4633625770336318, 0.48190877920900116, 0.4438401528707569, 0.43755378924372207, 0.43995150564337576, 0.4138668594366965, 0.433219190810445, 0.4137154603402817, 0.40632551464469535, 0.3944490715544442, 0.39640507318513457, 0.37648594988382816, 0.3679816696929138, 0.3623016530284005, 0.3669826803095919, 0.35714096262738093, 0.35443374734623334, 0.3351227936452138, 0.32809631514464227, 0.3468983522763326, 0.38213303966245726, 0.3240562420416628, 0.3126937296679936, 0.3230526786572614, 0.30369193826164503, 0.30020863536153375, 0.30230959641336685], "accuracy": [0.35385021567344666, 0.547087550163269, 0.6375643610954285, 0.7080966830253601, 0.7124554514884949, 0.7272487282752991, 0.7475894689559937, 0.7548540234565735, 0.7666094303131104, 0.7681944370269775, 0.7795535326004028, 0.7869502305984497, 0.7907806038856506, 0.7944789528846741, 0.8112534880638123, 0.8068947196006775, 0.8228767514228821, 0.811649739742279, 0.8301413059234619, 0.8185180425643921, 0.8330471515655518, 0.8347642421722412, 0.8345000743865967, 0.8444063067436218, 0.8370096683502197, 0.8455950617790222, 0.850350022315979, 0.852859616279602, 0.8520671129226685, 0.8581429123878479, 0.8651432991027832, 0.8646149635314941, 0.8581429123878479, 0.86553955078125, 0.8673887252807617, 0.8729361891746521, 0.8755778670310974, 0.86553955078125, 0.8548408150672913, 0.8761062026023865, 0.8850878477096558, 0.8766345381736755, 0.886672854423523, 0.8865407705307007, 0.8845595121383667], "val_loss": [1.4603276593344552, 0.7880918639046806, 0.6773963826043266, 0.6086042438234601, 0.5921599694660732, 0.545547638620649, 0.5416899578911918, 0.49568346568516325, 0.5158002887453351, 0.4608395780835833, 0.46352664061955046, 0.45558743817465647, 0.46575037070683073, 0.43830897978373934, 0.4531644582748413, 0.40231703008924213, 0.4460064853940691, 0.3907926934106009, 0.38599460465567453, 0.3755625571523394, 0.3930521011352539, 0.3915161575589861, 0.36882443938936504, 0.39318908963884625, 0.3604969467435564, 0.38620940276554655, 0.3751210229737418, 0.35159486532211304, 0.354277423449925, 0.3384771602494376, 0.33878043719700407, 0.3331413609640939, 0.3446183460099356, 0.3587539621761867, 0.3319264990942819, 0.33012138094220844, 0.33271884066717966, 0.41717017548424856, 0.35081335476466585, 0.32780704327992033, 0.3350845149585179, 0.3217707361493792, 0.33728370496204924, 0.37827965191432406, 0.33165535756519865], "val_accuracy": [0.6156666874885559, 0.6230000257492065, 0.690666675567627, 0.6966666579246521, 0.7106666564941406, 0.7440000176429749, 0.7336666584014893, 0.7746666669845581, 0.7396666407585144, 0.7856666445732117, 0.7883333563804626, 0.8026666641235352, 0.7886666655540466, 0.7976666688919067, 0.7886666655540466, 0.8259999752044678, 0.7806666493415833, 0.8226666450500488, 0.8266666531562805, 0.8366666436195374, 0.8306666612625122, 0.828000009059906, 0.8416666388511658, 0.8216666579246521, 0.8516666889190674, 0.8186666369438171, 0.831333339214325, 0.8510000109672546, 0.843666672706604, 0.8586666584014893, 0.8546666502952576, 0.8616666793823242, 0.8503333330154419, 0.8453333377838135, 0.8603333234786987, 0.8583333492279053, 0.8640000224113464, 0.8103333115577698, 0.8453333377838135, 0.8646666407585144, 0.8579999804496765, 0.8616666793823242, 0.8556666374206543, 0.8456666469573975, 0.859000027179718]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 6, 4, 5, 2, 4, 2, 2, 2, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 0, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8122857213020325, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9452074086582656, 1.3753786684972042, 1.1463351247962819, 0.8834194046647054, 0.8207722538419135, 0.7598467197998907, 0.7457031195961394, 0.689802835543772, 0.6497489401472558, 0.6631846073643406, 0.6273512901678502, 0.5938403272058796, 0.5952512767683041, 0.5846708054083403, 0.56590027575952, 0.553542730397615, 0.5304872225603454, 0.526719167216453, 0.5202799444390074, 0.5194161579695833, 0.4930898069060001, 0.5043098621947213, 0.4886533946109848, 0.4626739482680615, 0.47791024644959634, 0.46439101931488574, 0.4697807405713275, 0.44976645015281475, 0.4516300168437036, 0.43308747111924367, 0.42406437474471104, 0.4226439783814372, 0.4183091098574788, 0.4058917323320518, 0.4012193041014051, 0.3863043551077507, 0.39022282277667025, 0.39041772792997803, 0.4208357936796527, 0.3729652463326979, 0.3631193302940809, 0.374713975578456, 0.35862962763228545, 0.3581607130500918, 0.3509595680860339, 0.34582367445720014, 0.340701140180917, 0.35301615958909127, 0.3469912376283828, 0.33870681498769, 0.34252301983120986, 0.3172582654535117, 0.3334466242527272, 0.3228701516275377, 0.30415008357329815, 0.30010966140013706, 0.3172578469613571, 0.2921329735922319, 0.2944240802826426, 0.29145918876471977], "accuracy": [0.34381189942359924, 0.5226522088050842, 0.6052040457725525, 0.6688680648803711, 0.6903975605964661, 0.7193237543106079, 0.7217012047767639, 0.7420420050621033, 0.7532690763473511, 0.7452120184898376, 0.7559106945991516, 0.7681944370269775, 0.7718927264213562, 0.7779685854911804, 0.7861577272415161, 0.7924976944923401, 0.7976489067077637, 0.8004226684570312, 0.8035926818847656, 0.8006868362426758, 0.8092722296714783, 0.8079513907432556, 0.8136309385299683, 0.8278959393501282, 0.8161405324935913, 0.8244617581367493, 0.8224804997444153, 0.8296129703521729, 0.8293488025665283, 0.8384625315666199, 0.8453308939933777, 0.8396512866020203, 0.8422929644584656, 0.8469158411026001, 0.8487650156021118, 0.858671247959137, 0.8515387773513794, 0.8502179384231567, 0.8383304476737976, 0.8565579056739807, 0.8659358024597168, 0.8551049828529358, 0.863029956817627, 0.8639545440673828, 0.8701624870300293, 0.8704266548156738, 0.870030403137207, 0.86553955078125, 0.8685774803161621, 0.8749174475669861, 0.8709549307823181, 0.8816536664962769, 0.8742570281028748, 0.8782195448875427, 0.8868049383163452, 0.8882578015327454, 0.8767666220664978, 0.8883898854255676, 0.8893144726753235, 0.8914278149604797], "val_loss": [1.569901636668614, 0.8247827972684588, 0.7224161795207432, 0.7095038720539638, 0.722271374293736, 0.6114425999777657, 0.5600278036934989, 0.5440976790019444, 0.5072008541652134, 0.506477815764291, 0.4848067930766514, 0.49941694736480713, 0.4905366897583008, 0.4641117538724627, 0.46412566729954313, 0.46735048294067383, 0.43645112003598896, 0.44403008052280973, 0.42868090527398245, 0.4180940474782671, 0.4148680056844439, 0.4407937356403896, 0.407843325819288, 0.46619764396122526, 0.3930026718548366, 0.42530551127025057, 0.41089290380477905, 0.3994238461766924, 0.3914839029312134, 0.37693314041410175, 0.36830615997314453, 0.3686661890574864, 0.36275520495006014, 0.374157863003867, 0.3611709305218288, 0.3655614938054766, 0.36817480836595806, 0.4313415459224156, 0.3689711349351065, 0.34344135011945454, 0.35775961194719585, 0.35323337997709003, 0.3385991539273943, 0.36375635862350464, 0.36091205903462004, 0.338183445589883, 0.37285241058894564, 0.35533798592431204, 0.33545425108500887, 0.3329694611685617, 0.3594863074166434, 0.3270212071282523, 0.3361272556441171, 0.33570133788245066, 0.32105477367128643, 0.3838413783482143, 0.32006363357816425, 0.3253900238445827, 0.33599082061222624, 0.36236999716077534], "val_accuracy": [0.33033332228660583, 0.6393333077430725, 0.6916666626930237, 0.6626666784286499, 0.640999972820282, 0.7293333411216736, 0.722000002861023, 0.746999979019165, 0.7806666493415833, 0.7733333110809326, 0.7756666541099548, 0.7710000276565552, 0.7753333449363708, 0.7883333563804626, 0.79666668176651, 0.7863333225250244, 0.8033333420753479, 0.8009999990463257, 0.8040000200271606, 0.8080000281333923, 0.8143333196640015, 0.809333324432373, 0.8176666498184204, 0.7820000052452087, 0.8320000171661377, 0.8029999732971191, 0.8066666722297668, 0.8223333358764648, 0.8190000057220459, 0.8333333134651184, 0.8426666855812073, 0.8376666903495789, 0.8389999866485596, 0.8349999785423279, 0.8460000157356262, 0.8339999914169312, 0.8383333086967468, 0.7876666784286499, 0.8389999866485596, 0.8529999852180481, 0.8456666469573975, 0.8399999737739563, 0.8576666712760925, 0.843999981880188, 0.8426666855812073, 0.8583333492279053, 0.8303333520889282, 0.8379999995231628, 0.8546666502952576, 0.8603333234786987, 0.8416666388511658, 0.8629999756813049, 0.8523333072662354, 0.8603333234786987, 0.8659999966621399, 0.8253333568572998, 0.8643333315849304, 0.859666645526886, 0.859333336353302, 0.8479999899864197]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 9, 3, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8119999766349792, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 7, 5, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9580610181834672, 1.426542567161285, 0.9625114651955098, 0.7751463564978047, 0.7362887517273182, 0.7046621890745741, 0.672918122505326, 0.6423406668106767, 0.6080220056609896, 0.6045145635135012, 0.5844062870566903, 0.5536021095823697, 0.5498608143306631, 0.5402247283704654, 0.5024133089778761, 0.5193913287931288, 0.47922223068703873, 0.47492528484875673, 0.47001737359335016, 0.48806138298278784, 0.44770090626593295, 0.4411080312955617, 0.43991531636563463, 0.4168968664703903, 0.4383770526124659, 0.41608765685106425, 0.40353089494239763, 0.3981670773717406, 0.40129366684756684, 0.3796561370869323, 0.373121850994584, 0.36830091828746314, 0.36953226353010216, 0.35968108200645876, 0.36339118104049667, 0.3449221737845195, 0.33575695554310414, 0.35664865249781924, 0.382730904854898, 0.32497021439383766], "accuracy": [0.3541143834590912, 0.5468233823776245, 0.6383568644523621, 0.7106062769889832, 0.7202483415603638, 0.7269845604896545, 0.7433628439903259, 0.7511557340621948, 0.7713643908500671, 0.7655527591705322, 0.7737419009208679, 0.7866860628128052, 0.787082314491272, 0.7944789528846741, 0.8092722296714783, 0.8026680946350098, 0.819970965385437, 0.8150838613510132, 0.8247259259223938, 0.8187822103500366, 0.829216718673706, 0.8337075710296631, 0.8348963260650635, 0.8403117060661316, 0.8358209133148193, 0.8437458872795105, 0.8500858545303345, 0.8504821062088013, 0.8469158411026001, 0.8540483713150024, 0.8614450097084045, 0.8615770936012268, 0.8615770936012268, 0.8632941246032715, 0.8622375130653381, 0.870030403137207, 0.8717474341392517, 0.8636903762817383, 0.8552370667457581, 0.8772949576377869], "val_loss": [1.4591622012002128, 0.7852843829563686, 0.6483093670436314, 0.5804448298045567, 0.6029373918260846, 0.5570510285241264, 0.5727450847625732, 0.4916679688862392, 0.5205049855368478, 0.4592902660369873, 0.4669287715639387, 0.4547607047217233, 0.4638372319085257, 0.44192573002406527, 0.44973123925072805, 0.41437971591949463, 0.4209670424461365, 0.3952769466808864, 0.3921316862106323, 0.3848478027752468, 0.3967302782194955, 0.39503646748406546, 0.366534948348999, 0.40180384261267527, 0.36566661085401264, 0.3785268408911569, 0.3770056196621486, 0.35607196603502544, 0.36408322198050364, 0.33993507283074514, 0.34758330242974417, 0.3345002957752773, 0.34126366887773785, 0.3721060071672712, 0.3358639819281442, 0.3349428262029375, 0.3395489369119917, 0.4261813759803772, 0.3460572787693569, 0.3314743297440665], "val_accuracy": [0.6156666874885559, 0.6233333349227905, 0.706333339214325, 0.7203333377838135, 0.7139999866485596, 0.737666666507721, 0.7226666808128357, 0.7770000100135803, 0.7403333187103271, 0.7943333387374878, 0.7853333353996277, 0.79666668176651, 0.7923333048820496, 0.79666668176651, 0.7933333516120911, 0.8136666417121887, 0.8006666898727417, 0.8213333487510681, 0.8206666707992554, 0.8306666612625122, 0.8226666450500488, 0.8266666531562805, 0.8420000076293945, 0.8143333196640015, 0.847000002861023, 0.8293333053588867, 0.8303333520889282, 0.8456666469573975, 0.8379999995231628, 0.8569999933242798, 0.8506666421890259, 0.856333315372467, 0.8526666760444641, 0.8333333134651184, 0.8603333234786987, 0.8523333072662354, 0.8560000061988831, 0.8080000281333923, 0.8429999947547913, 0.8566666841506958]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 9, 3, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8094285726547241, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 9, 6, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))))), tf.math.add(beta, grad))), tf.math.negative(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9580569822459788, 1.425794323579337, 0.96326845972498, 0.7687835224772867, 0.7511403116063828, 0.6967705969702787, 0.6730244828567938, 0.644440776730856, 0.6179899723302136, 0.5878972021611675, 0.5795036482143364, 0.5501889277679132, 0.5437807427374064, 0.536734164957798, 0.5044722875048534, 0.5097234240730504, 0.4822252684887516, 0.47544114130079596, 0.46473729694681615, 0.48361246771013194, 0.44712828650623815, 0.4386993069076236, 0.44028122937438385, 0.41261827420596325, 0.43305485812018907, 0.4135121829859915, 0.41034732294703014, 0.3956873736377122, 0.3933551423600982, 0.37793283777592157, 0.3712132421892081, 0.3651775566499625, 0.36811607551376313, 0.3591805820404625, 0.3527295419395466, 0.34056105381540885, 0.33575811307065917, 0.3439352044757205, 0.3849543414300443, 0.323302077709361], "accuracy": [0.3541143834590912, 0.5464271306991577, 0.637432336807251, 0.7132478952407837, 0.7123233675956726, 0.7294940948486328, 0.7449478507041931, 0.7516840696334839, 0.7621186375617981, 0.7741381525993347, 0.7765156626701355, 0.7901201844215393, 0.7902522683143616, 0.7922335267066956, 0.8115176558494568, 0.8063663840293884, 0.8173292875289917, 0.8161405324935913, 0.8261788487434387, 0.8173292875289917, 0.8269713521003723, 0.8347642421722412, 0.8352925777435303, 0.844010055065155, 0.8381983637809753, 0.8454629778862, 0.8462554216384888, 0.8506141901016235, 0.8519350290298462, 0.8551049828529358, 0.8636903762817383, 0.8639545440673828, 0.8588033318519592, 0.8628978729248047, 0.8691058158874512, 0.8709549307823181, 0.8729361891746521, 0.8679170608520508, 0.8556333184242249, 0.876370370388031], "val_loss": [1.4583256244659424, 0.7890260219573975, 0.6467097997665405, 0.576545000076294, 0.582978333745684, 0.5519426890781948, 0.5471280642918178, 0.4876930202756609, 0.4863489695957729, 0.4574909380504063, 0.4607877561024257, 0.4540881940296718, 0.46062094824654715, 0.4383349674088614, 0.45626888956342426, 0.40891391038894653, 0.4303257805960519, 0.3965615289551871, 0.3821938633918762, 0.38048213720321655, 0.3948271019118173, 0.39278797592435566, 0.3687283141272409, 0.4078966464315142, 0.36565243346350534, 0.38719972542354036, 0.3704959579876491, 0.3584405779838562, 0.3719660724912371, 0.34168880326407297, 0.3458343318530491, 0.33727426188332693, 0.3425618154661996, 0.34566616160529, 0.3338941420827593, 0.3358782870428903, 0.33812045199530466, 0.4286787509918213, 0.34800181218556, 0.33516555173056467], "val_accuracy": [0.6193333268165588, 0.6236666440963745, 0.7023333311080933, 0.7336666584014893, 0.7176666855812073, 0.7409999966621399, 0.731333315372467, 0.777999997138977, 0.768666684627533, 0.7916666865348816, 0.7906666398048401, 0.7943333387374878, 0.7900000214576721, 0.7993333339691162, 0.7853333353996277, 0.8186666369438171, 0.7913333177566528, 0.8203333616256714, 0.8330000042915344, 0.8356666564941406, 0.824999988079071, 0.8270000219345093, 0.8383333086967468, 0.8130000233650208, 0.8433333039283752, 0.8199999928474426, 0.8343333601951599, 0.8473333120346069, 0.8343333601951599, 0.8556666374206543, 0.8546666502952576, 0.8539999723434448, 0.8523333072662354, 0.8519999980926514, 0.859666645526886, 0.8586666584014893, 0.8566666841506958, 0.8046666383743286, 0.8413333296775818, 0.8556666374206543]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 5, 2, 1, 8, 1, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [20, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.776285707950592, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 9, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha))))))), grad), tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9919766092250029, 1.5226825760529104, 1.0972980927750262, 0.8590778759079776, 0.846391446287165, 0.7600973972696685, 0.7215569507664756, 0.6863716267922204, 0.7165332011590151, 0.6703348179944297, 0.6342465257553329, 0.626422494118476, 0.6261877799156934, 0.5914711484646422, 0.5625931231683634], "accuracy": [0.34328359365463257, 0.4803856909275055, 0.602562427520752, 0.677189290523529, 0.6839255094528198, 0.7108704447746277, 0.718399167060852, 0.7392682433128357, 0.7263241410255432, 0.7495707273483276, 0.7588165402412415, 0.7584202885627747, 0.7576277852058411, 0.7730814814567566, 0.7874785661697388], "val_loss": [1.4103993688310896, 1.0964878967830114, 0.7167094094412667, 0.6825442484446934, 0.6552678516932896, 0.6189488002232143, 0.539338197026934, 0.7247964143753052, 0.5201036078589303, 0.49729139464242117, 0.5101629836218697, 0.48737222807747976, 0.5050373588289533, 0.5148007188524518, 0.49229977812085834], "val_accuracy": [0.4830000102519989, 0.5770000219345093, 0.6710000038146973, 0.6639999747276306, 0.6919999718666077, 0.706333339214325, 0.7586666941642761, 0.659333348274231, 0.7680000066757202, 0.7799999713897705, 0.746999979019165, 0.7763333320617676, 0.7603333592414856, 0.7486666440963745, 0.7760000228881836]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 4, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [60, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [4, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7748571634292603, "mapping_values": [1, 4, 4, 2, 2, 1, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, beta)))), tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))), tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, grad))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9919436204198833, 1.524811100603929, 1.082087632183543, 0.8733570454946016, 0.8277619506358281, 0.7674849979188764, 0.7248037225298516, 0.7173707122343596, 0.7288448136511921, 0.6540810780722971, 0.6556160487062376, 0.6204410713220616, 0.6096302147601904, 0.5976602925269863, 0.5708504434841782], "accuracy": [0.3435477614402771, 0.4788006842136383, 0.609959065914154, 0.6699247360229492, 0.6861709356307983, 0.7043983340263367, 0.7231541275978088, 0.7210407853126526, 0.7214370369911194, 0.7556465268135071, 0.7483819723129272, 0.757099449634552, 0.7726852297782898, 0.7721568942070007, 0.7835160493850708], "val_loss": [1.4108620030539376, 1.1268927029200964, 0.7122091565813337, 0.6250806195395333, 0.6392768280846732, 0.6049461875643048, 0.5562815325600761, 0.7574999673025948, 0.5113526071820941, 0.49813151359558105, 0.4992597443716867, 0.4948206458772932, 0.5131670577185494, 0.4966064180646624, 0.4853814499718802], "val_accuracy": [0.48266667127609253, 0.5686666369438171, 0.6740000247955322, 0.70333331823349, 0.6923333406448364, 0.70333331823349, 0.7513333559036255, 0.6586666703224182, 0.768666684627533, 0.7793333530426025, 0.7789999842643738, 0.7716666460037231, 0.750333309173584, 0.7646666765213013, 0.777999997138977]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 6, 9, 8, 5, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [60, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7574285864830017, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 8, 4, 3, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.295782195767549, 2.2826066022819265, 2.271268035064615, 2.256671514808384, 2.242508215249852, 2.224532285780246, 2.2045133450500183, 2.181009446530688, 2.1547722533362936, 2.1228399395139665, 2.087080687579698, 2.0409248734288887, 1.9936615741169448, 1.9381516845612683, 1.874056068834706, 1.8081613736240194, 1.7510946153917364, 1.6809183472986187, 1.618911208619594, 1.5515621679019085, 1.4965454912015617, 1.4446681511479282, 1.3950069144007993, 1.3487598298326884, 1.3186422299085403, 1.2747233173142114, 1.2451880858039277, 1.221989212460002, 1.1916338768082209, 1.1642148613441639, 1.1519895284214607, 1.1276838422026285, 1.1111355877004485, 1.0844461843715825, 1.0707264216568775, 1.0587462698542573, 1.0459756564313016, 1.0328650498638976, 1.014506609101951, 1.0100041088914953, 0.9898375132930687, 0.9841310968016117, 0.9703138343819601, 0.9588192065378395, 0.9534385500960677, 0.9585670244267053, 0.9313365021055526, 0.9323475698926555, 0.9288330160552768, 0.9036836472280021, 0.9081964324793212, 0.8931005987209683, 0.9020417249434187, 0.8896929064935083, 0.8888037416125962, 0.8830436387664811, 0.873778368771399, 0.8621172298372319, 0.860198274910206, 0.8506886187466994, 0.8445306514720592, 0.8499550269248699, 0.8521233916739274, 0.850747798262586, 0.8381153120340814, 0.8257748033896162, 0.8272410852719198, 0.8260330106084373, 0.8153014944576238, 0.8175116610360136, 0.8184361967664463, 0.8178376599923888, 0.803758355407919, 0.7989328034628557, 0.7900936249586978, 0.7945362596054591, 0.7924288812094298, 0.7826618471984551, 0.7771906181097251, 0.794399173811458, 0.7841380125952592, 0.7663073241907482, 0.7791574517450218, 0.7738648086270604, 0.7702335065397777, 0.7676092702809295, 0.7674346597770013, 0.7527621153669743, 0.755004303731844, 0.7551245336771295, 0.7620009967144281, 0.7566044815558768, 0.7549833497193669, 0.746129920509088, 0.7421260510358859, 0.7387927116624683, 0.7403800185755527, 0.7412863970117767, 0.737392003470723, 0.7398738382735257], "accuracy": [0.10751552134752274, 0.14357416331768036, 0.17117950320243835, 0.20314356684684753, 0.23405098915100098, 0.26865673065185547, 0.30022454261779785, 0.32043322920799255, 0.339321106672287, 0.37088891863822937, 0.3835688829421997, 0.4027208983898163, 0.4081363081932068, 0.43547746539115906, 0.44591203331947327, 0.4621582329273224, 0.46770572662353516, 0.4810461103916168, 0.4920089840888977, 0.5101043581962585, 0.522520124912262, 0.533350944519043, 0.5419363379478455, 0.5488046407699585, 0.5550125241279602, 0.5694096088409424, 0.5806366205215454, 0.5732399821281433, 0.5925241112709045, 0.5945053696632385, 0.5938449501991272, 0.6034870147705078, 0.6077136397361755, 0.6145819425582886, 0.6250165104866028, 0.6320168972015381, 0.6343944072723389, 0.6306960582733154, 0.6436402201652527, 0.64667809009552, 0.6458855867385864, 0.6485272645950317, 0.6583014130592346, 0.6610751748085022, 0.6583014130592346, 0.6610751748085022, 0.6720380187034607, 0.6691322326660156, 0.6639809608459473, 0.6763967871665955, 0.6773213744163513, 0.67666095495224, 0.6749438643455505, 0.6843217611312866, 0.6816800832748413, 0.6910579800605774, 0.6861709356307983, 0.6919825673103333, 0.6909258961677551, 0.6931713223457336, 0.7034738063812256, 0.6952846646308899, 0.6955488324165344, 0.693831741809845, 0.6984546184539795, 0.7120591998100281, 0.6996433734893799, 0.7004358768463135, 0.7087571024894714, 0.7131158113479614, 0.7051908373832703, 0.707040011882782, 0.7084929347038269, 0.7153612375259399, 0.7156254053115845, 0.7132478952407837, 0.7172104120254517, 0.7160216569900513, 0.722757875919342, 0.7117950320243835, 0.7149649858474731, 0.7224937081336975, 0.719852089881897, 0.720380425453186, 0.7232862114906311, 0.7232862114906311, 0.7246070504188538, 0.724739134311676, 0.7230220437049866, 0.7279091477394104, 0.7230220437049866, 0.7272487282752991, 0.728701651096344, 0.7288337349891663, 0.7235503792762756, 0.7334566116333008, 0.733588695526123, 0.7280412316322327, 0.7305507659912109, 0.7265883088111877], "val_loss": [1.9591357367379325, 1.9469884463718958, 1.9345144544328963, 1.920804228101458, 1.9056619916643416, 1.88814149584089, 1.8680246216910226, 1.844093186514718, 1.8162897654942103, 1.7839916093008858, 1.7462806701660156, 1.7026020799364363, 1.6525601659502303, 1.5969525064740862, 1.5360068253108434, 1.47077557018825, 1.4044678551810128, 1.3382414409092493, 1.2739044257572718, 1.212395225252424, 1.1566644396100725, 1.1054620742797852, 1.0597663266318185, 1.0188438211168562, 0.9831970078604562, 0.9505914619990757, 0.9220475469316755, 0.8971763338361468, 0.8738983358655658, 0.8530944585800171, 0.8355942964553833, 0.819040128162929, 0.8035857847758702, 0.7900353840419224, 0.7777217285973685, 0.765383073261806, 0.7532943316868373, 0.7444990873336792, 0.7345759187425885, 0.725128207887922, 0.7169797590800694, 0.7090678555624825, 0.7008203438350132, 0.6942484378814697, 0.686851007597787, 0.6820903846195766, 0.6755083799362183, 0.6714572736195156, 0.6662605490003314, 0.6603418588638306, 0.6557105609348842, 0.6497488703046527, 0.6474760941096714, 0.6421687773295811, 0.6392403330121722, 0.6352585894720895, 0.63131126335689, 0.6278549262455532, 0.6227529730115619, 0.6194286516734532, 0.6165231125695365, 0.6130024024418422, 0.6123036316462925, 0.6079878977366856, 0.6046571731567383, 0.6023165668760028, 0.5998223338808332, 0.5982146603720528, 0.5943881954465594, 0.5919650452477592, 0.590195723942348, 0.58975579057421, 0.585270779473441, 0.5829988718032837, 0.5802153689520699, 0.5787438494818551, 0.5784820829119001, 0.574167285646711, 0.5718616587775094, 0.5707091603960309, 0.5686307294028146, 0.566922834941319, 0.5653234379632133, 0.5632189341953823, 0.5624816587993077, 0.5624139308929443, 0.5592219659260341, 0.5569351230348859, 0.5558302913393293, 0.5541943992887225, 0.5523815325328282, 0.55283066204616, 0.5500837223870414, 0.5486099379403251, 0.5480266468865531, 0.5458384241376605, 0.5442622218813215, 0.542228068624224, 0.5413858720234462, 0.5404029914311], "val_accuracy": [0.13300000131130219, 0.24899999797344208, 0.3226666748523712, 0.36633333563804626, 0.390666663646698, 0.41466665267944336, 0.4403333365917206, 0.46000000834465027, 0.4776666760444641, 0.4946666657924652, 0.5120000243186951, 0.5243333578109741, 0.5326666831970215, 0.543666660785675, 0.5529999732971191, 0.5619999766349792, 0.5723333358764648, 0.5816666483879089, 0.5899999737739563, 0.6043333411216736, 0.6153333187103271, 0.6326666474342346, 0.6443333625793457, 0.6516666412353516, 0.656000018119812, 0.6610000133514404, 0.6666666865348816, 0.6690000295639038, 0.6729999780654907, 0.6796666383743286, 0.6816666722297668, 0.6836666464805603, 0.6890000104904175, 0.687333345413208, 0.6866666674613953, 0.6926666498184204, 0.6976666450500488, 0.6949999928474426, 0.7013333439826965, 0.7046666741371155, 0.7020000219345093, 0.7020000219345093, 0.7083333134651184, 0.7073333263397217, 0.7129999995231628, 0.7110000252723694, 0.7136666774749756, 0.715666651725769, 0.7163333296775818, 0.7170000076293945, 0.718999981880188, 0.7233333587646484, 0.7176666855812073, 0.722000002861023, 0.7213333249092102, 0.7236666679382324, 0.7246666550636292, 0.7273333072662354, 0.7306666374206543, 0.734000027179718, 0.734666645526886, 0.7350000143051147, 0.7336666584014893, 0.7366666793823242, 0.7383333444595337, 0.737666666507721, 0.7386666536331177, 0.7403333187103271, 0.7406666874885559, 0.7429999709129333, 0.7443333268165588, 0.7366666793823242, 0.7450000047683716, 0.7426666617393494, 0.7443333268165588, 0.7433333396911621, 0.7413333058357239, 0.7456666827201843, 0.7473333477973938, 0.7486666440963745, 0.7506666779518127, 0.7506666779518127, 0.7519999742507935, 0.7509999871253967, 0.7490000128746033, 0.7483333349227905, 0.7519999742507935, 0.753000020980835, 0.7536666393280029, 0.7559999823570251, 0.7590000033378601, 0.7553333044052124, 0.7586666941642761, 0.7573333382606506, 0.7573333382606506, 0.7609999775886536, 0.7603333592414856, 0.762666642665863, 0.762666642665863, 0.7633333206176758]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [65, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 6, 8, 2, 4, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [60, 44, 9, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [9.621140391488732, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18253862857818604, 0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [520231.875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.017000000923871994, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 2, 0, 8, 2, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.302270682858533, 2.302492082803918, 2.302487045593423, 2.3024864931777955, 2.302503406001655, 2.3025087037059406], "accuracy": [0.10487385839223862, 0.10896842926740646, 0.10579843819141388, 0.11240258812904358, 0.10210011899471283, 0.10408136248588562], "val_loss": [1.97365631375994, 1.9736526353018624, 1.9736642837524414, 1.9736663273402624, 1.9736796106610979, 1.9736859457833427], "val_accuracy": [0.10000000149011612, 0.09733333438634872, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [82, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 8, 2, 9, 6, 0, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302340709585256, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 5, 8, 4, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 1, 3, 1, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, alpha)))))), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.2383980338500201e+22, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06326773017644882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [79, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 1, 4, 5, 8, 4, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 2, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, beta)))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07713644206523895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 5, 8, 4, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 2, 0, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [7, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 15, 15, 9, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.sqrt(beta))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.negative(grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06445647776126862, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [20, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 5, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [65, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta)", "other_info": {"loss": [1094814591.936169, 20952760945.9506, 98017365733.05086, 270236329309.08783, 586072818170.387, 1077710658641.5575], "accuracy": [0.10170386731624603, 0.09879804402589798, 0.10302469879388809, 0.09959053993225098, 0.10130762308835983, 0.0956280529499054], "val_loss": [4120799963.428571, 32956191305.142857, 111214959469.71428, 263608046153.14285, 514838944621.7143, 889625079222.8572], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 0, 9, 3, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 13, 13, 8, 5, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 5, 8, 8, 9, 2, 0, 2, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [36, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 9, 9, 7, 2, 2, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 5, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [52318.52278348927, 984785.6918174614, 4585598.2483159425, 12617099.658169331, 27332248.526218466, 50225298.5492009], "accuracy": [0.10170386731624603, 0.09893012791872025, 0.10302469879388809, 0.09972262382507324, 0.1014397069811821, 0.0956280529499054], "val_loss": [194918.50892857142, 1544412.0714285714, 5196418.428571428, 12298892.857142856, 23999791.42857143, 41447099.428571425], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 6, 9, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 3, 3, 1, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 63, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.add(grad, alpha)), beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301246038186725, 2.30101088428258, 2.302735753362331, 2.3021587263308088, 2.303061941815972, 2.3029973186348816], "accuracy": [0.0952318087220192, 0.09576013684272766, 0.08479725569486618, 0.08572183549404144, 0.09008057415485382, 0.09232597798109055], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 5, 2, 1, 8, 1, 2, 6, 2, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 3, 0, 1, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 4, 4, 2, 2, 1, 19, 19, 11, 8, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(grad, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, beta))), tf.math.add(beta, grad))), tf.math.add(beta, grad)), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301246038186725, 2.30101088428258, 2.302735753362331, 2.3021587263308088, 2.303061941815972, 2.3029973186348816], "accuracy": [0.0952318087220192, 0.09576013684272766, 0.08479725569486618, 0.08572183549404144, 0.09008057415485382, 0.09232597798109055], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}]