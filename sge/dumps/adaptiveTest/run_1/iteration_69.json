[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.7419999837875366, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3025594788645676, 2.29730597031729, 2.292728439912253, 2.2844363014380913, 2.2726262646139634, 2.2582937497441415, 2.2402960792461393, 2.2199721533498584, 2.195261286769671, 2.1655020827488767, 2.1278872615263493, 2.0829856722913225, 2.0252218670329207, 1.9544750282147525, 1.8648568901482228, 1.7759971447656058, 1.677286890251856, 1.5851386314716323, 1.508182987261757, 1.4631338274757608, 1.4231553987788486, 1.4064350142187336, 1.3862847138421095, 1.3750094962614465, 1.3920128715036726, 1.3692440306741989, 1.3148264592239618, 1.255458188582846, 1.1754162024040862, 1.1284763935046536, 1.062893138758778, 0.9887073964978789, 0.961605929514326, 0.945945247234276, 0.9208864334662199, 0.9317721419519579, 0.9333176810066571, 0.9370781487682319, 0.9371190530717523, 0.9444167976287441, 0.9325549313027263, 0.9042663070598472, 0.8759974422487584, 0.8604957524181719, 0.8302367084912179, 0.8273948319851683, 0.8258796233101733, 0.8330217837389859, 0.8369549926734006], "accuracy": [0.09047681838274002, 0.09681680053472519, 0.11411966383457184, 0.1356491893529892, 0.1674811840057373, 0.20235107839107513, 0.2479196935892105, 0.2851670980453491, 0.32043322920799255, 0.3439439833164215, 0.36243560910224915, 0.3761722445487976, 0.40364548563957214, 0.40628713369369507, 0.4275524914264679, 0.4361378848552704, 0.45145952701568604, 0.46453574299812317, 0.47972527146339417, 0.4881785809993744, 0.4987452030181885, 0.5111610293388367, 0.5336151123046875, 0.5386342406272888, 0.5408796668052673, 0.5562012791633606, 0.5709945559501648, 0.5871087312698364, 0.616299033164978, 0.6207898855209351, 0.6349227428436279, 0.6464139223098755, 0.64231938123703, 0.6472064256668091, 0.6551313996315002, 0.6477347612380981, 0.6530181169509888, 0.6613393425941467, 0.6596222519874573, 0.6659622192382812, 0.670320987701416, 0.6800950765609741, 0.6861709356307983, 0.677189290523529, 0.6853784322738647, 0.685510516166687, 0.6882842183113098, 0.6894729733467102, 0.6884163022041321], "val_loss": [1.9689562661307198, 1.9644125529697962, 1.9571188517979212, 1.9471915790012904, 1.9348134994506836, 1.920050961630685, 1.9028092793055944, 1.8825428145272392, 1.858112130846296, 1.8277287483215332, 1.7893468311854772, 1.7407001767839705, 1.6794896466391427, 1.6037768295833044, 1.5130276339394706, 1.4101735183170863, 1.301913091114589, 1.1980852399553572, 1.106193951198033, 1.0276604720524378, 0.9600230966295514, 0.9014366694859096, 0.8543379306793213, 0.8285340922219413, 0.8138125453676496, 0.7810615130833217, 0.7501776559012276, 0.7466525520597186, 0.7461515665054321, 0.7269723585673741, 0.6950595208576748, 0.6700384446552822, 0.6664032425199237, 0.6768972192491803, 0.689231412751334, 0.7008252314158848, 0.711525525365557, 0.7198092596871513, 0.7214879308428083, 0.7138872827802386, 0.6974172421864101, 0.6745719569069999, 0.6502076387405396, 0.628562160900661, 0.6132098947252546, 0.6049879108156476, 0.6024044922419957, 0.6024397441319057, 0.6024086475372314], "val_accuracy": [0.04766666516661644, 0.07900000363588333, 0.1469999998807907, 0.2486666738986969, 0.3306666612625122, 0.37466666102409363, 0.39766666293144226, 0.421999990940094, 0.4429999887943268, 0.45399999618530273, 0.46833333373069763, 0.47733333706855774, 0.49133333563804626, 0.503000020980835, 0.5149999856948853, 0.5296666622161865, 0.5513333082199097, 0.5793333053588867, 0.6026666760444641, 0.6269999742507935, 0.6473333239555359, 0.6570000052452087, 0.6656666398048401, 0.668666660785675, 0.6513333320617676, 0.6783333420753479, 0.6976666450500488, 0.7026666402816772, 0.7023333311080933, 0.7053333520889282, 0.7086666822433472, 0.7133333086967468, 0.7196666598320007, 0.706333339214325, 0.6883333325386047, 0.6886666417121887, 0.7046666741371155, 0.7253333330154419, 0.7323333621025085, 0.7273333072662354, 0.7260000109672546, 0.7273333072662354, 0.7276666760444641, 0.7329999804496765, 0.7326666712760925, 0.7289999723434448, 0.7283333539962769, 0.7279999852180481, 0.7286666631698608]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4, 5, 7, 4, 6, 6], [2, 2, 2, 0, 3, 1, 0, 0, 0, 2, 3, 1, 0], [31, 32, 21, 42, 90], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.33228570222854614, "mapping_values": [1, 30, 30, 17, 13, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), alpha)), tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.30286152399668, 2.3002655046679923, 2.3014123531112802, 2.3020313531494945, 2.3016838024100608, 2.301748186070386, 2.3008821429735193, 2.299968588605706, 2.3003058146964355, 2.2988788087401706, 2.2990235490034348, 2.299075535212557, 2.297528237021752, 2.297803501616128, 2.2966813270867132, 2.2974548847479133, 2.296388181413815, 2.2958897049432387, 2.294530424191857, 2.29639916967297, 2.2946591273022996, 2.295503963143708, 2.2943891891950092, 2.2931856331241414, 2.29269050944042, 2.293768527627133, 2.2920617816974427, 2.291426082690945, 2.291905955080469, 2.2911263368133192, 2.2915433578644886, 2.2910540676104345, 2.2901220387471524, 2.291121961260831, 2.2887131261504354, 2.2891986204128947, 2.2905371206437497, 2.2891442107486686, 2.2875900855547466, 2.2868316678039746, 2.287173027155217, 2.2864088498527315, 2.286032920059448, 2.2865825118862357, 2.285691847402532, 2.284327206374191, 2.2850769417649013, 2.2845199693227096, 2.284674925370192, 2.2840185469293703, 2.2827452273337974, 2.2829896304680135, 2.2839465951245645, 2.283005723517411, 2.282107432032494, 2.2814744952300976, 2.2809390354748524, 2.2805048456722328, 2.2784314529062213, 2.2796697765214806, 2.2796942617726, 2.278497372982351, 2.2797225495969395, 2.2781595963024746, 2.2782926376170454, 2.278036056335151, 2.2773490820609976, 2.276457637135127, 2.27547181482407, 2.276989463140558, 2.2750901851860634, 2.2751861634806807, 2.2755941301682654, 2.274571418478788, 2.272951937055607, 2.2725574796414882, 2.2729864339346046, 2.2717491038613047, 2.272518731221673, 2.2723807363682704, 2.2712295076488394, 2.269553148357576, 2.2716122874022004, 2.2712310400652833, 2.2698831884789508, 2.2698004017763007, 2.2695321436524156, 2.267634846861525, 2.268382634563595, 2.267965148232475, 2.2683233703053496, 2.2657719640652454, 2.2660687882052186, 2.2662338489050784, 2.2660627003910205, 2.2651988412599837, 2.265646505318046, 2.2654631912527208, 2.2642069416212416, 2.2636782068696712], "accuracy": [0.08942015469074249, 0.09060890227556229, 0.09166556596755981, 0.0870426595211029, 0.09338264167308807, 0.0940430611371994, 0.08955223858356476, 0.09576013684272766, 0.0952318087220192, 0.10328886657953262, 0.10619468986988068, 0.10117553919553757, 0.09813763201236725, 0.09708096832036972, 0.10500594228506088, 0.09932637959718704, 0.10976093262434006, 0.10474177449941635, 0.11345925182104111, 0.10619468986988068, 0.10962884873151779, 0.10408136248588562, 0.10976093262434006, 0.11676132678985596, 0.11662924289703369, 0.10685510188341141, 0.11781799048185349, 0.1200634017586708, 0.1138555034995079, 0.11332716792821884, 0.11372341960668564, 0.12230881303548813, 0.1216483935713768, 0.11861048638820648, 0.11861048638820648, 0.11927089840173721, 0.12429005652666092, 0.13247919082641602, 0.12732796370983124, 0.12481838464736938, 0.12798838317394257, 0.1294412910938263, 0.1274600476026535, 0.13617752492427826, 0.13142253458499908, 0.13670584559440613, 0.1320829540491104, 0.13710209727287292, 0.137630432844162, 0.13829085230827332, 0.13934750854969025, 0.14515915513038635, 0.1426495909690857, 0.14740456640720367, 0.13974376022815704, 0.14410249888896942, 0.14714039862155914, 0.14753665030002594, 0.15242372453212738, 0.146479994058609, 0.146479994058609, 0.14991414546966553, 0.14476291835308075, 0.15757495164871216, 0.15453705191612244, 0.15691454708576202, 0.15097081661224365, 0.15889579057693481, 0.16457535326480865, 0.15902787446975708, 0.16074495017528534, 0.16338661313056946, 0.16180160641670227, 0.16734910011291504, 0.16880200803279877, 0.17263241112232208, 0.16549994051456451, 0.17461365461349487, 0.17223615944385529, 0.16880200803279877, 0.1678774207830429, 0.177255317568779, 0.17038699984550476, 0.17117950320243835, 0.1728965789079666, 0.17263241112232208, 0.18055738508701324, 0.1850482076406479, 0.17580240964889526, 0.1846519559621811, 0.177255317568779, 0.1842557191848755, 0.18570862710475922, 0.1888786107301712, 0.18319904804229736, 0.186104878783226, 0.18201030790805817, 0.18570862710475922, 0.1912561058998108, 0.19535067677497864], "val_loss": [1.9702266965593611, 1.969862597329276, 1.969501154763358, 1.969134739467076, 1.968771185193743, 1.9684069497244698, 1.9680428504943848, 1.9676814760480608, 1.9673187392098563, 1.9669592039925712, 1.966594627925328, 1.9662317548479353, 1.9658726964678084, 1.9655137062072754, 1.9651502200535365, 1.9647925240652901, 1.9644317626953125, 1.9640747479030065, 1.9637152126857214, 1.9633571079799108, 1.963003499167306, 1.962650912148612, 1.9622932161603654, 1.9619358607700892, 1.9615797996520996, 1.9612236704145158, 1.9608681542532784, 1.9605131149291992, 1.9601565088544572, 1.9598024913242884, 1.9594486781529017, 1.9590955461774553, 1.9587356022426061, 1.958380903516497, 1.9580234118870325, 1.957667350769043, 1.9573134694780623, 1.9569546154567175, 1.956597123827253, 1.9562430381774902, 1.9558878626142229, 1.95553377696446, 1.9551762172154017, 1.9548217909676688, 1.9544619832720076, 1.9541008131844657, 1.9537454332624162, 1.9533886228288924, 1.9530326298304967, 1.9526746613638741, 1.9523189408438546, 1.9519617898123605, 1.9516021183558874, 1.9512487820216589, 1.9508946282523019, 1.9505389758518763, 1.9501779420035226, 1.949817453111921, 1.9494566236223494, 1.9490951810564314, 1.948735577719552, 1.948373522077288, 1.9480139868600028, 1.9476538385663713, 1.9472947801862444, 1.9469314302716936, 1.9465702601841517, 1.9462088176182337, 1.9458505766732352, 1.9454877035958427, 1.9451216970171248, 1.944755962916783, 1.9443911143711634, 1.9440204756600517, 1.9436556952340263, 1.943288734980992, 1.9429216384887695, 1.9425524302891322, 1.9421850613185339, 1.9418151038033622, 1.9414431027003698, 1.9410689217703683, 1.940699849809919, 1.940328938620431, 1.9399586405072893, 1.9395890917096819, 1.939218384878976, 1.9388446807861328, 1.9384692737034388, 1.938094207218715, 1.9377226829528809, 1.9373462540762765, 1.9369727543422155, 1.9365941456386022, 1.9362152644566126, 1.9358374731881278, 1.9354585920061385, 1.9350770541599818, 1.9346960612705775, 1.9343092100960868], "val_accuracy": [0.03999999910593033, 0.04266666620969772, 0.04333333298563957, 0.046666666865348816, 0.04833333194255829, 0.05000000074505806, 0.05299999937415123, 0.0560000017285347, 0.05833333358168602, 0.061000000685453415, 0.06533333659172058, 0.06666667014360428, 0.0689999982714653, 0.07066666334867477, 0.07233333587646484, 0.07566666603088379, 0.07833333313465118, 0.08233333379030228, 0.08566666394472122, 0.08766666799783707, 0.09000000357627869, 0.09266666322946548, 0.09399999678134918, 0.09566666930913925, 0.0989999994635582, 0.10400000214576721, 0.10766666382551193, 0.10999999940395355, 0.1146666631102562, 0.11766666918992996, 0.12166666984558105, 0.12533333897590637, 0.12833333015441895, 0.13199999928474426, 0.13633333146572113, 0.13966666162014008, 0.14499999582767487, 0.14900000393390656, 0.1536666601896286, 0.15833333134651184, 0.16033333539962769, 0.16233333945274353, 0.16633333265781403, 0.16966666281223297, 0.1733333319425583, 0.1756666600704193, 0.179666668176651, 0.1850000023841858, 0.1889999955892563, 0.19233334064483643, 0.19566667079925537, 0.20133332908153534, 0.20499999821186066, 0.20800000429153442, 0.21166667342185974, 0.2150000035762787, 0.2163333296775818, 0.21833333373069763, 0.22100000083446503, 0.22766666114330292, 0.22966666519641876, 0.23333333432674408, 0.23800000548362732, 0.24066667258739471, 0.24433332681655884, 0.24766667187213898, 0.2486666738986969, 0.25200000405311584, 0.25433334708213806, 0.25866666436195374, 0.26100000739097595, 0.2630000114440918, 0.2669999897480011, 0.2720000147819519, 0.2746666669845581, 0.2763333320617676, 0.27900001406669617, 0.28066667914390564, 0.2840000092983246, 0.2863333225250244, 0.28833332657814026, 0.2913333475589752, 0.2933333218097687, 0.2953333258628845, 0.2996666729450226, 0.3023333251476288, 0.30433332920074463, 0.3059999942779541, 0.3083333373069763, 0.31033334136009216, 0.312333345413208, 0.3149999976158142, 0.31566667556762695, 0.31700000166893005, 0.31966665387153625, 0.3226666748523712, 0.3256666660308838, 0.3283333480358124, 0.32899999618530273, 0.3310000002384186]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4, 8, 7, 8], [1, 2, 2, 0, 3, 1, 0, 0, 0, 3], [31, 32, 49, 35], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [5, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [0, 0, 1, 1, 1, 1], [1, 0, 9, 1, 2], [2, 2, 2], [7, 52, 13]], "fitness": -0.11999999731779099, "mapping_values": [1, 25, 25, 15, 10, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), alpha)))))), tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(beta), beta)", "other_info": {"loss": [1.9295796625603876e+27, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14581957459449768, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [0, 0, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 1, 2], [7, 52, 13]], "fitness": -0.11885714530944824, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, alpha), beta)", "other_info": {"loss": [4.422480156518969, 2.360038829848058, 2.2146133695374925, 2.176452148040965, 2.1779711617139887, 2.1946898856104453, 2.2215835089854212, 302721.16223322647, NaN, NaN], "accuracy": [0.16972659528255463, 0.1278562992811203, 0.17342491447925568, 0.20552106201648712, 0.19191652536392212, 0.18201030790805817, 0.1632545292377472, 0.1302337795495987, 0.10302469879388809, 0.09998679161071777], "val_loss": [2.0207996368408203, 1.8569115911211287, 1.764187949044364, 1.8505804198128837, 1.8645680291312081, 1.8807075364249093, 1.8832196508135115, 4.991463146365536e+18, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.1770000010728836, 0.24966666102409363, 0.19599999487400055, 0.2529999911785126, 0.17933332920074463, 0.1666666716337204, 0.1003333330154419, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4, 6, 6, 7, 3], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32, 75, 82, 37], [0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [3, 2, 2], [7, 52, 13]], "fitness": -0.10857142508029938, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301498871658299, 2.302252297577148, 2.3108715771715542, 2.3073940306701175, 2.304523692328176, 2.3043815698826458, 2.3009656818079014, 2.3022893573850167, 2.3020380582823305, 2.301668011202174, 2.3046742747756137, 2.362298495985844, 2.3922668491545416, 2.3122180116300997, 2.3154066307764203, 2.3140881369536217], "accuracy": [0.0948355570435524, 0.09774138033390045, 0.09417514503002167, 0.09298639744520187, 0.1014397069811821, 0.09800554811954498, 0.10091137140989304, 0.10474177449941635, 0.10659094154834747, 0.10553427785634995, 0.10289261490106583, 0.10170386731624603, 0.1026284471154213, 0.09760929644107819, 0.09655263274908066, 0.09985470771789551], "val_loss": [1.9708240372794015, 1.9768002373831612, 1.9748835563659668, 1.9740307671683175, 1.9710782596043177, 1.9683309282575334, 1.9694586481366838, 1.9696693420410156, 1.9695640291486467, 1.9704489707946777, 1.9709844589233398, 2.299301896776472, 1.9727468490600586, 1.9790593555995397, 1.9787297930036272, 1.979036808013916], "val_accuracy": [0.08833333104848862, 0.07433333247900009, 0.05966666713356972, 0.0689999982714653, 0.08233333379030228, 0.0963333323597908, 0.08966666460037231, 0.09966666996479034, 0.09700000286102295, 0.09433333575725555, 0.10899999737739563, 0.0949999988079071, 0.10700000077486038, 0.08366666734218597, 0.08633333444595337, 0.0806666687130928]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32, 12], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [299842127.0736697, 5748157020.851143, 26880023524.81416, 74564334668.95892, 160032611452.83847, 292492849051.91284], "accuracy": [0.1002509593963623, 0.10513802617788315, 0.10527011007070541, 0.10553427785634995, 0.09866596013307571, 0.09708096832036972], "val_loss": [1138605385.142857, 9104505709.714285, 30722843794.285713, 72818966528.0, 142217244086.85715, 245744393069.7143], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 1, 1, 1, 1], [1, 0, 9, 1, 2], [2, 0, 2], [71, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 1, 5, 4, 4, 5, 6, 8, 3, 2], [2, 0, 2, 0, 3, 1, 1, 0, 0, 3, 2, 1, 3], [31, 32, 75, 82, 50], [0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 0, 1, 1], [1, 4, 9, 1, 2], [2, 2, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 17, 12, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9, 3, 0, 6, 7, 7, 4, 0, 9, 9, 5, 7, 1, 8, 2, 4, 9], [4, 3, 3, 4, 1, 0, 4, 0, 2, 4, 5], [98, 48, 72, 24, 99, 10], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 35, 35, 24, 11, 6, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.multiply(tf.math.negative(alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.subtract(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(grad, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, beta))))), grad), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [299842127.0736697, 5748157020.851143, 26880023524.81416, 74564334668.95892, 160032611452.83847, 292492849051.91284], "accuracy": [0.1002509593963623, 0.10513802617788315, 0.10527011007070541, 0.10553427785634995, 0.09866596013307571, 0.09708096832036972], "val_loss": [1138605385.142857, 9104505709.714285, 30722843794.285713, 72818966528.0, 142217244086.85715, 245744393069.7143], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 8, 5, 4, 4, 6, 6, 7, 3], [2, 0, 2, 0, 2, 1, 0, 0, 0, 1, 2, 1, 3], [31, 32, 75, 82, 37], [1, 1, 1, 1, 1, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1], [3, 3, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 0, 1, 1], [1, 0, 9, 1, 2], [3, 0, 3], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.401611786319469, 3.4839177860355237, 6.447878767675365, 11.276923537112625, 17.90819721073286, 26.4808362049591, 36.916391155770455], "accuracy": [0.09166556596755981, 0.10276053100824356, 0.10474177449941635, 0.10487385839223862, 0.09893012791872025, 0.09747721254825592, 0.09879804402589798], "val_loss": [2.183520930153983, 3.3617442675999234, 5.781754902430943, 9.353759765625, 14.13108389718192, 20.22251456124442, 27.75063214983259], "val_accuracy": [0.09966666996479034, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [9, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [2, 3, 9, 1, 2], [0, 2, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021415603190776, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 8, 8, 6, 3, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [92, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 1, 0, 1, 1], [1, 3, 9, 1, 2], [1, 2, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 8, 0, 0, 1, 2, 6, 2, 3, 5, 4, 5, 5, 8, 8, 2], [2, 0, 2, 0, 0, 2, 0, 0, 0, 3, 2, 1, 3], [31, 55, 75, 82, 37], [0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 7, 6, 5, 5, 7, 3, 9], [5, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 0, 6, 1, 2, 9], [3, 0, 2, 1], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 0, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 10, 6, 4, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [9, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 1, 1, 1, 1], [5, 3, 9, 1, 2], [0, 2, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(alpha))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021415603190776, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [1, 0, 2, 3, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 0, 1, 1], [8, 3, 9, 1, 2], [2, 2, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 1, 9, 9, 5, 4, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.336679304312123, 2.66116524085928, 3.6570205998348286, 5.412112184503626, 7.848258018871545, 10.971688111980027, 14.681164266001579, 19.57182591173391], "accuracy": [0.09008057415485382, 0.10051512718200684, 0.10434553027153015, 0.10460969805717468, 0.09893012791872025, 0.09668471664190292, 0.09853387624025345, 0.09813763201236725], "val_loss": [2.0308243887765065, 2.3596223422459195, 3.1377385003226146, 4.411685126168387, 6.144138199942453, 8.320453098842076, 10.954773221697126, 14.072442735944476], "val_accuracy": [0.0976666659116745, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [5, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [1, 1, 0, 1, 1, 1], [4, 3, 9, 1, 2], [1, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [1, 1, 0, 1, 1, 1], [8, 3, 9, 1, 2], [1, 0, 1, 3, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 3], [7, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3030233596687886, 2.300824421712704, 2.302355076705838, 2.3033810988582277, 2.3034264021671804, 2.3039000207847846], "accuracy": [0.08902391046285629, 0.08928807079792023, 0.08981640636920929, 0.08374059200286865, 0.09047681838274002, 0.08942015469074249], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]