[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 5, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 60, 4, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [1, 7, 2, 4], [3, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8108571171760559, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.222585394114488, 1.750130760214663, 1.2311000551419755, 1.059486593804607, 0.9381238684804133, 0.8822395840514338, 0.8312349243722084, 0.7897563995607714, 0.7710935414396398, 0.7390537971377042, 0.7330260330486638, 0.7185308897673194, 0.6968861731791997, 0.6968382982892163, 0.6764895667442162, 0.6669946614194776, 0.6559964433920586, 0.6526075990570692, 0.6321235697157017, 0.6385727516333535, 0.6260820515261917, 0.6174279677633281, 0.6241084677337608, 0.6142719102699397, 0.6018914477133307, 0.6002322591968169, 0.587168056888351, 0.5851526771711557, 0.5759507061042932, 0.57901492431069, 0.5648684583996989, 0.5771536051778273, 0.5640568492781327, 0.5589611658157532, 0.546640383277697, 0.5593381370409778, 0.5568333818628772, 0.5378946457414926, 0.5511425972110827, 0.550114523355184], "accuracy": [0.251750111579895, 0.4476291239261627, 0.5698058605194092, 0.6287148594856262, 0.6629242897033691, 0.6819442510604858, 0.6980583667755127, 0.7174745798110962, 0.7164179086685181, 0.7275128960609436, 0.7317395210266113, 0.7351737022399902, 0.7372870445251465, 0.7382115721702576, 0.750759482383728, 0.7559106945991516, 0.7559106945991516, 0.763967752456665, 0.7626469135284424, 0.7627789974212646, 0.7701756954193115, 0.7758552432060242, 0.7697794437408447, 0.7773081660270691, 0.7778365015983582, 0.7810064554214478, 0.7897239327430725, 0.7847048044204712, 0.7891955971717834, 0.7844406366348267, 0.7951393723487854, 0.7881389260292053, 0.7881389260292053, 0.7921014428138733, 0.798309326171875, 0.7959318161010742, 0.7942147850990295, 0.8005547523498535, 0.7926297783851624, 0.7965922355651855], "val_loss": [1.71987669808524, 1.0497420174734933, 0.7991827556065151, 0.7083366768700736, 0.6451777730669294, 0.6238064595631191, 0.6001671212060111, 0.5639186927250454, 0.543827908379691, 0.5647075857434954, 0.5397859300885882, 0.537575261933463, 0.5067591667175293, 0.5051819256373814, 0.5059318542480469, 0.5052566187722343, 0.48595740113939556, 0.48369790826525005, 0.483130829674857, 0.4847684417452131, 0.4704331840787615, 0.46841256959097727, 0.48439276218414307, 0.4637910638536726, 0.45403834751674105, 0.459968055997576, 0.45058129514966694, 0.4500598907470703, 0.46749002592904226, 0.4452080726623535, 0.445616398538862, 0.4608555350984846, 0.4398378985268729, 0.4415477854864938, 0.4325240509850638, 0.43278729915618896, 0.44431841373443604, 0.4286085878099714, 0.44235202244349886, 0.42123405422483173], "val_accuracy": [0.47066667675971985, 0.6489999890327454, 0.6733333468437195, 0.703000009059906, 0.7319999933242798, 0.7269999980926514, 0.7506666779518127, 0.7553333044052124, 0.7696666717529297, 0.7523333430290222, 0.7663333415985107, 0.7663333415985107, 0.7853333353996277, 0.7803333401679993, 0.7863333225250244, 0.7730000019073486, 0.7929999828338623, 0.7996666431427002, 0.7996666431427002, 0.7990000247955322, 0.7953333258628845, 0.8026666641235352, 0.7886666655540466, 0.8026666641235352, 0.8113333582878113, 0.8036666512489319, 0.8069999814033508, 0.8036666512489319, 0.7923333048820496, 0.8140000104904175, 0.8100000023841858, 0.7990000247955322, 0.8146666884422302, 0.809333324432373, 0.8223333358764648, 0.8173333406448364, 0.8059999942779541, 0.8166666626930237, 0.8159999847412109, 0.8206666707992554]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 9, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [1, 7, 2, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.7925714254379272, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 9, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.521982866397324, 2.090221473900177, 2.3845773383437714, 2.2835591882683772, 1.727303176366453, 1.9986841610913673, 1.6880581901215481, 1.2142215058819619, 1.0667362762023398, 0.9414421189746144, 0.9181739925204518, 0.868232641812439, 0.8192932796736498, 0.7898399162018509, 0.7503214699559759, 0.7368965441713622, 0.7062823622769305, 0.6772780892493435, 0.7440861856397337, 0.6626178982660613, 0.6390946451399887, 0.6337236577588112, 0.610806615888608, 0.5846457039171505, 0.5936833481117246, 0.5929580513732844, 0.5746107879505024, 0.546396764537772, 0.5469612592735059, 0.519229640979273, 0.5076314368897961], "accuracy": [0.25676923990249634, 0.2641659080982208, 0.09866596013307571, 0.16721701622009277, 0.3863426148891449, 0.30762118101119995, 0.45172369480133057, 0.54655921459198, 0.5988640785217285, 0.6497160196304321, 0.6453573107719421, 0.6660943031311035, 0.6837934255599976, 0.69673752784729, 0.71100252866745, 0.7140403985977173, 0.7296261787414551, 0.7408532500267029, 0.717870831489563, 0.7380794882774353, 0.7523444890975952, 0.7584202885627747, 0.7646281719207764, 0.7730814814567566, 0.774798572063446, 0.7794214487075806, 0.7843085527420044, 0.7907806038856506, 0.7936864495277405, 0.7998943328857422, 0.8088759779930115], "val_loss": [1.9602941104343958, 2.3604374613080705, 1.973177705492292, 1.6855663231440954, 1.3952177592686243, 1.3656080450330461, 1.1635105950491769, 0.9474220957074847, 0.6687908172607422, 0.7295681919370379, 0.5981275865009853, 0.6099715743746076, 0.590054988861084, 0.5591239077704293, 0.5635943412780762, 0.5634543214525495, 0.5355982439858573, 0.541753751891, 0.5220319543566022, 0.49920340946742464, 0.5048818417957851, 0.49159978117261616, 0.4798475333622524, 0.4729335478373936, 0.46172245911189486, 0.4656015634536743, 0.47648968015398296, 0.47059394632067, 0.4518969740186419, 0.44299391337803434, 0.4470468248639788], "val_accuracy": [0.12733332812786102, 0.16033333539962769, 0.1576666682958603, 0.37299999594688416, 0.45100000500679016, 0.5053333044052124, 0.5546666383743286, 0.5983333587646484, 0.6893333196640015, 0.6420000195503235, 0.7200000286102295, 0.7103333473205566, 0.7283333539962769, 0.7379999756813049, 0.734000027179718, 0.7429999709129333, 0.7480000257492065, 0.7546666860580444, 0.7573333382606506, 0.7743333578109741, 0.7693333625793457, 0.7730000019073486, 0.7876666784286499, 0.7879999876022339, 0.7960000038146973, 0.8066666722297668, 0.7923333048820496, 0.7943333387374878, 0.8063333630561829, 0.8013333082199097, 0.8029999732971191]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [10, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 4, 5, 0, 5, 4, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 1, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.4051428437232971, "mapping_values": [1, 4, 4, 2, 2, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.multiply(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3017282706399116, 2.3008374350969394, 2.299668584312698, 2.2996824889560306, 2.300560621112455, 2.297785858420837, 2.298127655182469, 2.296277150816811, 2.2947835518841133, 2.2957410412441863, 2.294029323447886, 2.293640810091419, 2.2922530924056765, 2.2913423858975626, 2.292890044345737, 2.2917389394490315, 2.289731095637376, 2.2900073803206475, 2.2891067882586213, 2.28757558116477, 2.2866769305246697, 2.2875021960142976, 2.2851035750505866, 2.285968983540241, 2.2860607645845747, 2.2840369133791194, 2.283163388706611, 2.282280224535711, 2.282373276085602, 2.2820823476960426, 2.280926003290473, 2.2793123169723772, 2.2775025509131535, 2.279137392809929, 2.2787155546390654, 2.2758842789659157, 2.275404520196024, 2.27562070006251, 2.274902709108916, 2.2734931215964695, 2.27403787325213, 2.269792505967666, 2.2718809276382292, 2.271994839569896, 2.27098873344631, 2.2698004604125965, 2.267562255536907, 2.2683517495481453, 2.2674698474432073, 2.2665054807258618, 2.2647876621725507, 2.2649668275152672, 2.265577270811134, 2.2629878335798326, 2.264193255935032, 2.2614168792022236, 2.2611526796421306, 2.2618256379206736, 2.2592585799779403, 2.259416904431828, 2.258029626518303, 2.2586692149502774, 2.257918918609871, 2.2549942944579198, 2.255057324602336, 2.253238896211345, 2.253622738629473, 2.2533542983929684, 2.2524430748336526, 2.2524424944225006, 2.2487110103425287, 2.2498272176054033, 2.2485548230273107, 2.247267957943589, 2.2463899709922983, 2.246401543095127, 2.2456176962126295, 2.2421501368705417, 2.243913111197336, 2.244405404435897, 2.2427274758836866, 2.240490465872103, 2.240258325659415, 2.2389858002360974, 2.237286151785971, 2.2384758429551845, 2.237170932441261, 2.2343840618899407, 2.2344802635819163, 2.2337526395855924, 2.2327106750683776, 2.23198778039476, 2.2308444684569895, 2.2296792147670046, 2.22975155715504, 2.2276722635685604, 2.2253128236484185, 2.2258832256602825, 2.223720459150144, 2.2233854443279664], "accuracy": [0.09377889335155487, 0.09496764093637466, 0.09734513610601425, 0.09668471664190292, 0.09232597798109055, 0.10011887550354004, 0.09800554811954498, 0.10302469879388809, 0.10394927859306335, 0.10328886657953262, 0.11055342853069305, 0.11240258812904358, 0.11411966383457184, 0.12072381377220154, 0.11187426000833511, 0.11861048638820648, 0.120459645986557, 0.12455421686172485, 0.12574297189712524, 0.12389380484819412, 0.12917712330818176, 0.13129045069217682, 0.13181878626346588, 0.13221503794193268, 0.12838461995124817, 0.13630960881710052, 0.14000792801380157, 0.13974376022815704, 0.1406683325767517, 0.1472724825143814, 0.1488574892282486, 0.1538766324520111, 0.15057456493377686, 0.14938580989837646, 0.15691454708576202, 0.15968827903270721, 0.15757495164871216, 0.1582353711128235, 0.15810328722000122, 0.17276449501514435, 0.16642451286315918, 0.17434948682785034, 0.1678774207830429, 0.16999074816703796, 0.1698586642742157, 0.17923656105995178, 0.17910447716712952, 0.17434948682785034, 0.18016114830970764, 0.1802932173013687, 0.1884823739528656, 0.18663319945335388, 0.1868973672389984, 0.19653943181037903, 0.19257694482803345, 0.19680359959602356, 0.19244486093521118, 0.2036719024181366, 0.20604939758777618, 0.20538897812366486, 0.2094835489988327, 0.21133272349834442, 0.20684190094470978, 0.2118610441684723, 0.2133139669895172, 0.21635186672210693, 0.2122572958469391, 0.21463479101657867, 0.22084268927574158, 0.21635186672210693, 0.22678641974925995, 0.22493726015090942, 0.22916391491889954, 0.23563598096370697, 0.23444722592830658, 0.22612600028514862, 0.23682472109794617, 0.2390701323747635, 0.24356095492839813, 0.2374851405620575, 0.23999471962451935, 0.24395720660686493, 0.25042927265167236, 0.24237221479415894, 0.25082552433013916, 0.2401268035173416, 0.24607053399085999, 0.25756174325942993, 0.26139214634895325, 0.2608638107776642, 0.2619204819202423, 0.2604675590991974, 0.26297715306282043, 0.25901466608047485, 0.2662792205810547, 0.2595430016517639, 0.27037379145622253, 0.26865673065185547, 0.2767137885093689, 0.27763834595680237], "val_loss": [1.970271383013044, 1.9696099417550224, 1.9689569473266602, 1.9682908058166504, 1.9676363127572196, 1.9669760295322962, 1.9663263729640417, 1.965665067945208, 1.965010302407401, 1.964357784816197, 1.963698250906808, 1.9630355153764998, 1.9623792512076241, 1.9617226464407784, 1.961075782775879, 1.960415976388114, 1.9597605296543665, 1.9591046742030553, 1.958456107548305, 1.9578021594456263, 1.9571491650172643, 1.9564975329807825, 1.9558468546186174, 1.9551922934395927, 1.9545454297746931, 1.9538929803030831, 1.953237806047712, 1.9525840623038155, 1.9519337926592146, 1.9512786184038435, 1.9506227629525321, 1.9499592099870955, 1.9493038994925362, 1.9486496789114816, 1.947986262185233, 1.9473272051130022, 1.9466586794172014, 1.945995807647705, 1.9453228541782923, 1.9446546009608678, 1.9439849172319685, 1.9433026313781738, 1.9426243645804269, 1.9419561113630022, 1.941281454903739, 1.940601212637765, 1.939915384565081, 1.9392283303397042, 1.9385388919285365, 1.937845025743757, 1.937145505632673, 1.9364423751831055, 1.9357455798557825, 1.9350345475333077, 1.9343371391296387, 1.933626583644322, 1.9329210690089635, 1.9321987288338798, 1.9314791815621513, 1.9307567051478796, 1.9300245557512556, 1.9292962891714913, 1.9285596438816615, 1.927825995853969, 1.9270731381007604, 1.9263269560677665, 1.925567286355155, 1.924813951764788, 1.9240500586373466, 1.9232894352504186, 1.9225106920514787, 1.9217373984200614, 1.9209538868495397, 1.9201705796378, 1.9193803923470634, 1.918590477534703, 1.917792797088623, 1.9169885090419225, 1.9161783627101354, 1.9153693062918526, 1.9145569801330566, 1.9137277603149414, 1.9128997666495187, 1.9120705468314034, 1.9112215723310197, 1.9103930337088448, 1.9095396314348494, 1.9086742401123047, 1.9078093256269182, 1.9069435255868095, 1.9060700280325753, 1.9051900591169084, 1.904299191066197, 1.9034043039594377, 1.9025114604404993, 1.9016010420663017, 1.9006808144705636, 1.899759224482945, 1.8988212176731654, 1.8978868893214635], "val_accuracy": [0.04233333468437195, 0.045666664838790894, 0.05000000074505806, 0.0560000017285347, 0.05900000035762787, 0.06466666609048843, 0.070333331823349, 0.07333333045244217, 0.07866666465997696, 0.08299999684095383, 0.08900000154972076, 0.09566666930913925, 0.10400000214576721, 0.109333336353302, 0.11666666716337204, 0.12166666984558105, 0.12966667115688324, 0.13633333146572113, 0.14399999380111694, 0.15433333814144135, 0.16099999845027924, 0.1666666716337204, 0.17166666686534882, 0.17666666209697723, 0.18299999833106995, 0.1886666715145111, 0.195333331823349, 0.20233333110809326, 0.20900000631809235, 0.2160000056028366, 0.22166666388511658, 0.22766666114330292, 0.23366667330265045, 0.2409999966621399, 0.24699999392032623, 0.25466665625572205, 0.25999999046325684, 0.26499998569488525, 0.2706666588783264, 0.2746666669845581, 0.28033334016799927, 0.28466665744781494, 0.28866666555404663, 0.2933333218097687, 0.2956666648387909, 0.30033332109451294, 0.3050000071525574, 0.3109999895095825, 0.3149999976158142, 0.3186666667461395, 0.32233333587646484, 0.32633334398269653, 0.3323333263397217, 0.33500000834465027, 0.33799999952316284, 0.3413333296775818, 0.3449999988079071, 0.3490000069141388, 0.3529999852180481, 0.35600000619888306, 0.35766667127609253, 0.36033332347869873, 0.3636666536331177, 0.367000013589859, 0.3686666786670685, 0.3696666657924652, 0.3736666738986969, 0.3763333261013031, 0.37700000405311584, 0.3773333430290222, 0.38066667318344116, 0.3813333213329315, 0.3840000033378601, 0.38600000739097595, 0.38733333349227905, 0.3893333375453949, 0.38999998569488525, 0.39133334159851074, 0.3919999897480011, 0.39233332872390747, 0.39366665482521057, 0.3943333327770233, 0.39633333683013916, 0.39666667580604553, 0.39899998903274536, 0.4000000059604645, 0.40033334493637085, 0.40166667103767395, 0.40400001406669617, 0.40566667914390564, 0.4059999883174896, 0.4073333442211151, 0.4086666703224182, 0.4103333353996277, 0.4113333225250244, 0.41200000047683716, 0.4116666615009308, 0.4126666784286499, 0.414000004529953, 0.4143333435058594]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 4, 5, 0, 1, 4, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 1, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.23171427845954895, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.5219964088308435, 2.1283756058843712, 2.3592770374556573, 2.303229612397826, 2.3030160051279567, 2.302893834673985], "accuracy": [0.25676923990249634, 0.2620525658130646, 0.09602430462837219, 0.09549596905708313, 0.09945846349000931, 0.0940430611371994], "val_loss": [1.9603742871965681, 2.2580466951642717, 1.974114077431815, 1.9738247735159737, 1.9737866946629115, 1.9737341744559151], "val_accuracy": [0.12800000607967377, 0.10233332961797714, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 5, 4, 3, 5, 1, 2, 1, 1, 8, 6, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [27, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.14142857491970062, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.7866877461814954, 7.132833090346204, 29.568811822986213, 360.49285433991804, 5948.122876224863, 101046.51028183199], "accuracy": [0.240919291973114, 0.11213842034339905, 0.09800554811954498, 0.10817593336105347, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0649637494768416, 24.565690721784318, 74.18674577985492, 1218.9652273995537, 20619.852120535714, 350050.08035714284], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.09799999743700027, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 9, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [1, 7, 2, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06577730923891068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [59, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 9, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 13, 13, 8, 5, 3, 7, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), grad)))), tf.math.subtract(grad, tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3022693194229493, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 8, 4, 5, 2, 1, 9, 2, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 1, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 61, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [94608365.65581748, 1818665271.2846386, 8537029233.274336, 23676504991.294147, 51033945091.381325, 92721542840.95839], "accuracy": [0.0956280529499054, 0.09602430462837219, 0.10196803510189056, 0.10460969805717468, 0.09721305221319199, 0.09800554811954498], "val_loss": [353571172.5714286, 2826568411.428571, 9537417508.571428, 22604607488.0, 44146286592.0, 76281317668.57143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [72, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 4, 3, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 1, 3, 3, 3, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [84, 66, 89, 50, 85, 46], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 6, 3, 3, 2, 5, 2, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 1, 7, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.subtract(grad, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))))), grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 4, 5, 0, 1, 4, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 1, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 61, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7374232650.198415, 1122528604657.1897, 19352804810465.266, 136236549604998.64, 604701848975107.6, 1967330657905765.5], "accuracy": [0.0956280529499054, 0.09602430462837219, 0.10196803510189056, 0.10460969805717468, 0.09747721254825592, 0.09760929644107819], "val_loss": [60821305051.42857, 3278608643803.4287, 35189823485659.43, 191847052719835.44, 718569484283318.9, 2119780495374043.5], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 6, 1, 3, 2, 2, 3, 1, 8, 8, 2, 3, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 0, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06472064554691315, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 8, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [72, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 1, 4, 3, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 1, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 6, 7, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, grad), grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 3, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [67, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 4, 5, 0, 1, 4, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 6, 1, 3, 2, 2, 3, 1, 8, 8, 2, 3, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 0, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [84, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 4, 5, 0, 1, 4, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 1, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022693194229493, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 5, 2, 3, 2, 1, 9, 6, 0, 8, 1, 6, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 0, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 3, 20, 20, 14, 6, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), alpha))), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), grad))), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.negative(grad))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.080042265355587, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [88, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 4, 5, 0, 1, 4, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 1, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3020271461684834, 2.301860128395656, 2.3013857451128907, 2.3021660806197124, 2.3037436378472957, 2.3017112713731778], "accuracy": [0.09325055778026581, 0.09232597798109055, 0.09391097724437714, 0.08981640636920929, 0.08374059200286865, 0.09074098616838455], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 4, 5, 0, 1, 4, 1, 3, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 0, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [92, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 9, 8, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), beta)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3020271461684834, 2.301860128395656, 2.3013857451128907, 2.3021660806197124, 2.3037436378472957, 2.3017112713731778], "accuracy": [0.09325055778026581, 0.09232597798109055, 0.09391097724437714, 0.08981640636920929, 0.08374059200286865, 0.09074098616838455], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 0, 3, 3, 2, 5, 9, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [27, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0], [1, 7, 6, 4, 8], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 7, 3, 2, 10, 6, 5, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3020271461684834, 2.301860128395656, 2.3013857451128907, 2.3021660806197124, 2.3037436378472957, 2.3017112713731778], "accuracy": [0.09325055778026581, 0.09232597798109055, 0.09391097724437714, 0.08981640636920929, 0.08374059200286865, 0.09074098616838455], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]