[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [34, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8334285616874695, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 2, 0, 1, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9829960625484366, 1.3956089853815288, 0.9008718298064435, 0.8171199420109054, 0.7628167905607213, 0.6999567444723485, 0.6944098460943534, 0.6670922386159734, 0.6368140190930304, 0.5996321862982469, 0.5917749552915061, 0.5904724186343162, 0.5481675096577531, 0.5601454091708201, 0.5263032862507452, 0.5133509940404177, 0.5149251237686804, 0.5008575209474142, 0.5025409427238352, 0.4681869472896481, 0.4699136313430354, 0.47371818853674813, 0.46672716130984854, 0.4418885887944546, 0.4608115348180114, 0.4286277011330133, 0.4180892583692803, 0.41169891409303344, 0.4092045208686977, 0.38933020313701544, 0.39080213381708445, 0.3864891365014992, 0.3754020612694253], "accuracy": [0.3399814963340759, 0.5308413505554199, 0.6684718132019043, 0.6915863156318665, 0.7150970697402954, 0.7297582626342773, 0.7293620109558105, 0.7407211661338806, 0.7563069462776184, 0.7700436115264893, 0.7687227725982666, 0.7750627398490906, 0.7903843522071838, 0.7852331399917603, 0.8021397590637207, 0.8045172095298767, 0.8031964302062988, 0.8107251524925232, 0.8096684813499451, 0.8239334225654602, 0.8232730031013489, 0.8212917447090149, 0.8222163319587708, 0.8370096683502197, 0.8264430165290833, 0.8360850811004639, 0.8462554216384888, 0.8408400416374207, 0.8457271456718445, 0.8562937378883362, 0.8495575189590454, 0.8540483713150024, 0.8585391640663147], "val_loss": [1.5417053699493408, 0.7403956821986607, 0.6605114255632673, 0.5902098076684135, 0.5865627867834908, 0.5439263582229614, 0.5329471485955375, 0.5341222967420306, 0.4806577478136335, 0.4651921306337629, 0.5030772856303624, 0.4375453165599278, 0.48591128417423796, 0.445515513420105, 0.4207479783466884, 0.4210426551955087, 0.41205471754074097, 0.45445477962493896, 0.3953395060130528, 0.3877593619482858, 0.3958279660769871, 0.4260883160999843, 0.3995399134499686, 0.37306987387793406, 0.3667451909610203, 0.3643289293561663, 0.3610894339425223, 0.35491358382361277, 0.3616745301655361, 0.3614288142749241, 0.3772693020956857, 0.34941074677876066, 0.3612114361354283], "val_accuracy": [0.49033331871032715, 0.6723333597183228, 0.6856666803359985, 0.7166666388511658, 0.7113333344459534, 0.7366666793823242, 0.750333309173584, 0.7379999756813049, 0.7836666703224182, 0.7850000262260437, 0.7736666798591614, 0.8013333082199097, 0.7693333625793457, 0.7856666445732117, 0.8130000233650208, 0.8076666593551636, 0.8233333230018616, 0.781000018119812, 0.8220000267028809, 0.8240000009536743, 0.8230000138282776, 0.7879999876022339, 0.8153333067893982, 0.8403333425521851, 0.8363333344459534, 0.8496666550636292, 0.8446666598320007, 0.8529999852180481, 0.840666651725769, 0.843999981880188, 0.8306666612625122, 0.8460000157356262, 0.8403333425521851]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [31, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 2, 3, 4, 6, 7], [0, 3, 2, 1], [34, 95, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7797142863273621, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2823205623077505, 2.224937747324998, 2.131601254764628, 1.9764415212925226, 1.7430479938737342, 1.5109399603248004, 1.3373290209202735, 1.2243788829017954, 1.1249044396700625, 1.0655040083276661, 1.014547225616832, 0.9748933668134078, 0.9344285592316731, 0.9134196536636403, 0.8926361466065027, 0.8656261749649249, 0.8356249082231755, 0.8323065438889052, 0.8203183096303223, 0.8085868710051942, 0.7939049000312403, 0.776628104490359, 0.7750458749467041, 0.7625779477108613, 0.7626338730461767, 0.7506715990076479, 0.7450422685868421, 0.7359059439548145, 0.7229982807635946, 0.7281003884981967, 0.7170703646419008, 0.7084925772412861, 0.7001076984509438, 0.6911653395987709, 0.6948528653909942, 0.6889778546149531, 0.6851607687311748, 0.6754142267356664, 0.6800990041457052, 0.675387206740147, 0.6704817617479616, 0.6661751447667409, 0.6623040013592933, 0.6525718647774578, 0.6584932486993006, 0.6530816300733135, 0.640987169630791, 0.6342898045532802, 0.6430551050959828, 0.6342731474601928], "accuracy": [0.14938580989837646, 0.2674679756164551, 0.3607185184955597, 0.42464667558670044, 0.4675736427307129, 0.5134063959121704, 0.5546162724494934, 0.5709945559501648, 0.6098269820213318, 0.6215823292732239, 0.6370360851287842, 0.6561880707740784, 0.6690001487731934, 0.6719059348106384, 0.6866992712020874, 0.6884163022041321, 0.6996433734893799, 0.7013604640960693, 0.7058512568473816, 0.7112666964530945, 0.7127195596694946, 0.7166820764541626, 0.7152291536331177, 0.7252674698829651, 0.7264562249183655, 0.7252674698829651, 0.7292299270629883, 0.7359662055969238, 0.7359662055969238, 0.7395324110984802, 0.7390040755271912, 0.7416457533836365, 0.7401928305625916, 0.7465327978134155, 0.7469290494918823, 0.7516840696334839, 0.7504953145980835, 0.7524765729904175, 0.752212405204773, 0.7547219395637512, 0.7560427784919739, 0.7514199018478394, 0.7597411274909973, 0.7644960880279541, 0.7629110813140869, 0.7652885913848877, 0.7660810947418213, 0.763967752456665, 0.7630431652069092, 0.7685906887054443], "val_loss": [1.9245947429112025, 1.8582704407828194, 1.7388807024274553, 1.5432151726314, 1.2989801679338728, 1.087982143674578, 0.9473231179373605, 0.8604105540684291, 0.7972064869744437, 0.7557365724018642, 0.7232474429266793, 0.6951017379760742, 0.667458210672651, 0.6548256533486503, 0.6485387427466256, 0.6295689003808158, 0.6132271800722394, 0.600182124546596, 0.5944913625717163, 0.5847975867135184, 0.5779561826160976, 0.5756922449384417, 0.560871924672808, 0.5563264233725411, 0.5562125614711216, 0.5512002536228725, 0.5430448055267334, 0.5363071475710187, 0.52983329977308, 0.5275138105664935, 0.530573913029262, 0.5222567660467965, 0.5158970355987549, 0.5120604719434466, 0.5116492509841919, 0.5117192268371582, 0.5092675174985614, 0.5036382504871914, 0.49873621123177664, 0.4996746948787144, 0.4943056447165353, 0.4981884445462908, 0.4917138304029192, 0.48864022323063444, 0.4875926119940622, 0.4870590312140329, 0.4844419275011335, 0.4790925809315273, 0.47855688844408306, 0.477334839957101], "val_accuracy": [0.34700000286102295, 0.4546666741371155, 0.5019999742507935, 0.5506666898727417, 0.581333339214325, 0.6263333559036255, 0.6506666541099548, 0.6703333258628845, 0.6903333067893982, 0.7053333520889282, 0.7053333520889282, 0.7036666870117188, 0.7223333120346069, 0.718666672706604, 0.7076666951179504, 0.721666693687439, 0.7266666889190674, 0.7403333187103271, 0.737333357334137, 0.737666666507721, 0.7416666746139526, 0.7386666536331177, 0.7546666860580444, 0.7516666650772095, 0.7540000081062317, 0.7613333463668823, 0.7596666812896729, 0.7643333077430725, 0.7643333077430725, 0.7666666507720947, 0.762333333492279, 0.7689999938011169, 0.7730000019073486, 0.7710000276565552, 0.7736666798591614, 0.7796666622161865, 0.7699999809265137, 0.7793333530426025, 0.7756666541099548, 0.7773333191871643, 0.7829999923706055, 0.7756666541099548, 0.7806666493415833, 0.7789999842643738, 0.7889999747276306, 0.7823333144187927, 0.781333327293396, 0.7846666574478149, 0.7876666784286499, 0.7873333096504211]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [31, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 3, 4, 9, 7], [0, 0, 2, 1], [34, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7797142863273621, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2823205982705055, 2.224939006871677, 2.1316006785102917, 1.9764374673106746, 1.7429956729937035, 1.5108461205387127, 1.3372393062227768, 1.2242839059116755, 1.1248505998989846, 1.0654945134518248, 1.0145620693226438, 0.9749046924202087, 0.9345004552107572, 0.913528777675669, 0.8927007791010648, 0.8657060606746374, 0.8355225623165691, 0.8323427484240499, 0.8202411733944623, 0.8086446699858688, 0.7941401609025375, 0.7767584555105935, 0.7750442800678046, 0.7626403441376863, 0.7628249674818975, 0.7507269009544298, 0.7451273227695303, 0.7360125634931948, 0.7230880046958355, 0.7280845753174447, 0.7171437235682191, 0.7085871801101111, 0.7001529165766637, 0.6911524577131991, 0.6949356413788217, 0.6892417581357567, 0.6852715809693851, 0.6754483994223958, 0.6801718245045761, 0.6754686873523771, 0.6705849042280144, 0.6663674784610457, 0.6622932344190889, 0.6522885815436893, 0.6584752549301317, 0.6527129443267145, 0.6406825057362143, 0.6343896243440288, 0.6431673639139652, 0.6341927021470257], "accuracy": [0.14938580989837646, 0.2674679756164551, 0.3607185184955597, 0.42425042390823364, 0.46849822998046875, 0.5131422281265259, 0.5544841885566711, 0.5711266398429871, 0.6095628142356873, 0.6217144131660461, 0.637432336807251, 0.6563201546669006, 0.6696605682373047, 0.6720380187034607, 0.6861709356307983, 0.6880200505256653, 0.6995112895965576, 0.7004358768463135, 0.7061154246330261, 0.7112666964530945, 0.7124554514884949, 0.7173424959182739, 0.7152291536331177, 0.7252674698829651, 0.726192057132721, 0.7252674698829651, 0.7294940948486328, 0.7357020378112793, 0.7368907928466797, 0.7405890822410583, 0.7386078238487244, 0.7417778372764587, 0.7415136694908142, 0.7460044622421265, 0.7474573850631714, 0.7503632307052612, 0.748778223991394, 0.7520803213119507, 0.7530049085617065, 0.754589855670929, 0.7560427784919739, 0.7516840696334839, 0.7598732113838196, 0.7643640041351318, 0.7621186375617981, 0.7646281719207764, 0.7642319202423096, 0.7644960880279541, 0.7626469135284424, 0.7700436115264893], "val_loss": [1.924595832824707, 1.858271871294294, 1.738880021231515, 1.5431783880506242, 1.2989119802202498, 1.0878480161939348, 0.9472500937325614, 0.8603092432022095, 0.7972015142440796, 0.755688990865435, 0.7231959785733905, 0.6952201468603951, 0.6674281699316842, 0.6547258240836007, 0.648553694997515, 0.6295650005340576, 0.613278865814209, 0.6002734218324933, 0.5945186955588204, 0.5850033930369786, 0.5780216796057565, 0.5757075377873012, 0.5608623538698468, 0.5564191681998116, 0.5561060394559588, 0.5511845520564488, 0.5428576639720372, 0.5363856213433402, 0.5300324133464268, 0.5277281148093087, 0.5304691110338483, 0.5220655373164585, 0.5159498793738229, 0.511899641581944, 0.5113764830998012, 0.5118342297417777, 0.5091308355331421, 0.5036771638052804, 0.49897146224975586, 0.5000525883265904, 0.4942574330738613, 0.49824871335710796, 0.49200708525521414, 0.48903489112854004, 0.4876666409628732, 0.48725167342594694, 0.48440841266087126, 0.4791652815682547, 0.47838989325932096, 0.47754200867244173], "val_accuracy": [0.34700000286102295, 0.4546666741371155, 0.5019999742507935, 0.5513333082199097, 0.581333339214325, 0.6259999871253967, 0.6506666541099548, 0.6703333258628845, 0.6903333067893982, 0.7046666741371155, 0.7053333520889282, 0.703000009059906, 0.7223333120346069, 0.718666672706604, 0.7080000042915344, 0.722000002861023, 0.7266666889190674, 0.7396666407585144, 0.737666666507721, 0.737333357334137, 0.7413333058357239, 0.737666666507721, 0.7546666860580444, 0.7516666650772095, 0.753000020980835, 0.7616666555404663, 0.7590000033378601, 0.7643333077430725, 0.7649999856948853, 0.7663333415985107, 0.7613333463668823, 0.7693333625793457, 0.7720000147819519, 0.7726666927337646, 0.7743333578109741, 0.781333327293396, 0.7696666717529297, 0.7786666750907898, 0.7753333449363708, 0.7766666412353516, 0.7823333144187927, 0.7756666541099548, 0.7816666960716248, 0.7789999842643738, 0.7883333563804626, 0.7823333144187927, 0.781333327293396, 0.7829999923706055, 0.7879999876022339, 0.7876666784286499]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 1, 3, 0, 9, 7], [0, 3, 2, 1], [34, 75, 82], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [5, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.6639999747276306, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 2, 0, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3012002147404496, 2.296395249795668, 2.2925664987137067, 2.2903280495306158, 2.284843626968329, 2.282296023710828, 2.2796608057665773, 2.276642975727203, 2.271079425058502, 2.2686220633434093, 2.2648844443386604, 2.2604536093174112, 2.2561895551934708, 2.2525232435926044, 2.2481959098208266, 2.2433435489567373, 2.2397398166117366, 2.234796866544281, 2.22896441142982, 2.224768989483883, 2.219064394150113, 2.2149935498323896, 2.208905090698083, 2.2024906173814887, 2.1976375132976287, 2.1914814003486014, 2.1853975211435603, 2.1782297035643547, 2.1679521524013388, 2.1615631360860315, 2.153810001556443, 2.1472530421674088, 2.138429386173934, 2.1288894814995256, 2.1207038401423697, 2.1085893604277053, 2.0978871751628327, 2.08477480539698, 2.0789092124303603, 2.0677739114903693, 2.053557505523839, 2.039342723707119, 2.0266146943585244, 2.014450019864894, 1.9990639396867007, 1.9877023327509646, 1.9713157345322476, 1.9543187561729218, 1.9385801668196085, 1.9249296940832625, 1.9069716158701744, 1.8860497810049868, 1.8721162284354271, 1.8549355322170598, 1.840025831805622, 1.8188820604509004, 1.7998042801635423, 1.7826067612958765, 1.7618002633156635, 1.7428493777821643, 1.7289929258636023, 1.710634937879668, 1.6911519091316045, 1.6638974446378694, 1.6506181084610578, 1.633303832777928, 1.6180223282286361, 1.597823198130417, 1.5722355018155199, 1.5699024494408207, 1.5493560402605275, 1.5332168836036866, 1.5209945460918983, 1.5037388023431386, 1.4826454459998932, 1.4660088910623201, 1.454491233561159, 1.4420418724518065, 1.4353158138589048, 1.4164585052716214, 1.395560086001778, 1.400243864319564, 1.3698675796387612, 1.3730309555448987, 1.360651045600736, 1.342746135612536, 1.3367353074853887, 1.328205835392541, 1.3138915735417827, 1.3025641743501637, 1.2900257753012692, 1.2895235299056373, 1.2799224374222167, 1.2655808135203839, 1.2604372712363183, 1.2527858330478852, 1.2373573027581681, 1.2394470963354014, 1.2332010614306714, 1.2224831450742863], "accuracy": [0.09959053993225098, 0.10447761416435242, 0.11002509295940399, 0.1220446452498436, 0.136045441031456, 0.14449875056743622, 0.15189538896083832, 0.1604807823896408, 0.1732928305864334, 0.18597279489040375, 0.19284109771251678, 0.19957733154296875, 0.20274733006954193, 0.2215031087398529, 0.2308809906244278, 0.23537181317806244, 0.24461762607097626, 0.25280675292015076, 0.2619204819202423, 0.26865673065185547, 0.287280410528183, 0.2810725271701813, 0.2907145619392395, 0.29665830731391907, 0.2975828945636749, 0.3129045069217682, 0.31726324558258057, 0.3222824037075043, 0.3415665030479431, 0.33205652236938477, 0.3443402349948883, 0.34684982895851135, 0.34883105754852295, 0.3564918637275696, 0.36481308937072754, 0.3727380931377411, 0.3743230700492859, 0.3907013535499573, 0.38409721851348877, 0.37921014428138733, 0.39664509892463684, 0.40470215678215027, 0.4031171500682831, 0.40562674403190613, 0.41368380188941956, 0.4099854826927185, 0.41725003719329834, 0.4213446080684662, 0.4221371114253998, 0.42742040753364563, 0.442609965801239, 0.4403645396232605, 0.4472328722476959, 0.4519878625869751, 0.45344075560569763, 0.4504028558731079, 0.46466779708862305, 0.4621582329273224, 0.4671773910522461, 0.4702152907848358, 0.476951539516449, 0.4737815260887146, 0.48170650005340576, 0.4861973226070404, 0.48606523871421814, 0.48487651348114014, 0.49253731966018677, 0.5036323070526123, 0.5134063959121704, 0.5079910159111023, 0.5060097575187683, 0.5079910159111023, 0.5111610293388367, 0.5143309831619263, 0.5172368288040161, 0.528992235660553, 0.5297846794128418, 0.5334830284118652, 0.5237088799476624, 0.538237988948822, 0.5455026030540466, 0.5337471961975098, 0.5444459319114685, 0.5468233823776245, 0.5439175963401794, 0.5477479696273804, 0.5503896474838257, 0.5493329763412476, 0.5555408596992493, 0.5568616986274719, 0.5617488026618958, 0.5608242154121399, 0.5671641826629639, 0.5704662799835205, 0.5653150081634521, 0.5778629183769226, 0.5716549754142761, 0.5733720660209656, 0.5787875056266785, 0.579447865486145], "val_loss": [1.9680461883544922, 1.9646949086870467, 1.9613464900425501, 1.9579695292881556, 1.9546402522495814, 1.9513041632516044, 1.9479237965175085, 1.9444825308663505, 1.9410117694309779, 1.9375128746032715, 1.933945996420724, 1.9303124972752161, 1.926569870540074, 1.9227184568132674, 1.9187721524919783, 1.9146607262747628, 1.9104119028363908, 1.9059863771711076, 1.9013744762965612, 1.8966484069824219, 1.8917216573442732, 1.886552129473005, 1.8811823981148856, 1.8755858966282435, 1.8697970254080636, 1.863720280783517, 1.857372420174735, 1.850743021283831, 1.8437238420758928, 1.836489200592041, 1.8289030620029993, 1.8210432188851493, 1.8127707072666712, 1.8040692465645927, 1.795053550175258, 1.7855916704450334, 1.775676931653704, 1.7652841295514787, 1.7546411922999792, 1.7435809544154577, 1.7320074353899275, 1.719890866960798, 1.707275492804391, 1.6943161828177316, 1.680807113647461, 1.6669446740831648, 1.6525094849722726, 1.637610639844622, 1.6222409861428397, 1.6065878527505058, 1.5904692922319685, 1.573859759739467, 1.5570333003997803, 1.5398451600755965, 1.5223605292184013, 1.5046728338514055, 1.4866573129381453, 1.4685618877410889, 1.4501346860613142, 1.431621449334281, 1.4131384917667933, 1.3947145598275321, 1.3761583055768694, 1.3576197624206543, 1.3391142572675432, 1.320857116154262, 1.3030715329306466, 1.2852142878941126, 1.2673871176583427, 1.25034533228193, 1.2333811351231165, 1.2168592384883337, 1.2008339336940221, 1.1850999423435755, 1.1698102951049805, 1.1547054563249861, 1.1400865486689977, 1.1257755756378174, 1.11236344064985, 1.0990519864218575, 1.0859739099230086, 1.0735503264835902, 1.0611004148210799, 1.049605369567871, 1.0380972453526087, 1.0269977024623327, 1.0165056160518102, 1.0064329419817244, 0.9965348584311349, 0.986731733594622, 0.9773831367492676, 0.9684625693729946, 0.9596609047480992, 0.9512301513126918, 0.9430475916181292, 0.9350748402731759, 0.9271198340824672, 0.9197192192077637, 0.9126178537096296, 0.9056226525987897], "val_accuracy": [0.05900000035762787, 0.0820000022649765, 0.10866666585206985, 0.14399999380111694, 0.17800000309944153, 0.21533332765102386, 0.24400000274181366, 0.26733332872390747, 0.2913333475589752, 0.31033334136009216, 0.3243333399295807, 0.33933332562446594, 0.3513333201408386, 0.3616666793823242, 0.37033334374427795, 0.37700000405311584, 0.38199999928474426, 0.3889999985694885, 0.39500001072883606, 0.4026666581630707, 0.4073333442211151, 0.41499999165534973, 0.4256666600704193, 0.43033334612846375, 0.43533334136009216, 0.4423333406448364, 0.4493333399295807, 0.45366665720939636, 0.4593333303928375, 0.46566668152809143, 0.4703333377838135, 0.476666659116745, 0.4793333411216736, 0.4866666793823242, 0.4906666576862335, 0.49566665291786194, 0.49966666102409363, 0.5019999742507935, 0.5070000290870667, 0.5093333125114441, 0.5143333077430725, 0.5163333415985107, 0.5196666717529297, 0.5233333110809326, 0.5256666541099548, 0.527999997138977, 0.534333348274231, 0.5366666913032532, 0.5413333177566528, 0.5446666479110718, 0.5490000247955322, 0.5490000247955322, 0.5513333082199097, 0.5533333420753479, 0.5546666383743286, 0.5576666593551636, 0.562666654586792, 0.5666666626930237, 0.5680000185966492, 0.5703333616256714, 0.5743333101272583, 0.574999988079071, 0.5786666870117188, 0.5809999704360962, 0.5830000042915344, 0.5849999785423279, 0.5860000252723694, 0.5879999995231628, 0.593666672706604, 0.5976666808128357, 0.6000000238418579, 0.6023333072662354, 0.6060000061988831, 0.6100000143051147, 0.6150000095367432, 0.6200000047683716, 0.621999979019165, 0.624666690826416, 0.628000020980835, 0.6313333511352539, 0.6359999775886536, 0.6416666507720947, 0.6453333497047424, 0.6460000276565552, 0.6466666460037231, 0.6506666541099548, 0.6516666412353516, 0.6523333191871643, 0.6556666493415833, 0.656333327293396, 0.6579999923706055, 0.6603333353996277, 0.6610000133514404, 0.6613333225250244, 0.6639999747276306, 0.6633333563804626, 0.6669999957084656, 0.6666666865348816, 0.6683333516120911, 0.6696666479110718]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 8, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 4, 4, 4, 9, 7], [1, 0, 2], [34, 75, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.6620000004768372, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 8, 3, 3, 8, 6, 5, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, alpha))))), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3011997469412164, 2.2963941836668877, 2.2925658598552054, 2.290328287854722, 2.2848477294621072, 2.2823036665205376, 2.279672092214284, 2.2766584009148616, 2.271101535098774, 2.268650785932892, 2.2649189067664732, 2.260499237456326, 2.2562438600240617, 2.252589977774811, 2.24827436817604, 2.24343729170322, 2.2398477247157795, 2.2349292866668176, 2.2291157659428107, 2.224940776541532, 2.219261102231738, 2.215229115009371, 2.209171372098599, 2.2027953631527404, 2.1979758741675806, 2.1918676445560057, 2.1858340380702272, 2.178720794475436, 2.1685213029282266, 2.1621934043701376, 2.1545202590691463, 2.148047442795846, 2.1393214672500775, 2.1298990092493555, 2.1218236843356526, 2.1098543365381777, 2.099292346499363, 2.086357090908066, 2.080612387592294, 2.069645323096454, 2.05562927048708, 2.0416449809260198, 2.0291495933162382, 2.0172125265000282, 2.0020860047970843, 1.990937886347057, 1.9748510532469845, 1.9581171937858612, 1.9427100957077665, 1.9293631410491685, 1.9117043266647826, 1.891166435256689, 1.877513005607211, 1.860638385183697, 1.8460371670013154, 1.825249370063033, 1.806525070023905, 1.7895552562983943, 1.7691255611372567, 1.750526920994275, 1.7367988674159787, 1.7187011716955012, 1.6995233330728512, 1.6724870741690123, 1.6594718058253197, 1.642217741052252, 1.6270630576622847, 1.6070198512836265, 1.5816977600364197, 1.5790952394163258, 1.558701893499483, 1.5425434681749173, 1.5303232994975196, 1.5130161962898385, 1.491878898608891, 1.4753788551083173, 1.4637709902797502, 1.4512584120794894, 1.4441133590186073, 1.4254451825429484, 1.404419374550968, 1.408915733018839, 1.3785685855541499, 1.3815454912380913, 1.3689738203427102, 1.3510326741472636, 1.3446810667178792, 1.3359979459748466, 1.3217479018896736, 1.3102286917075914, 1.2974667349952544, 1.296758710668859, 1.287449207036345, 1.2728901506178825, 1.2674313587613975, 1.2597520769925685, 1.244260378249837, 1.2461124039313514, 1.2398580691723413, 1.2289625929016337], "accuracy": [0.09959053993225098, 0.10447761416435242, 0.11002509295940399, 0.1220446452498436, 0.13578127324581146, 0.14436666667461395, 0.15189538896083832, 0.16034869849681854, 0.1732928305864334, 0.18597279489040375, 0.19297318160533905, 0.19931316375732422, 0.2024831622838974, 0.22123894095420837, 0.23061682283878326, 0.2355038970708847, 0.2440892904996872, 0.252938836812973, 0.2619204819202423, 0.2685246467590332, 0.287280410528183, 0.28080835938453674, 0.2903183102607727, 0.29679039120674133, 0.29718664288520813, 0.3123761713504791, 0.31699907779693604, 0.322150319814682, 0.34143441915512085, 0.3319244384765625, 0.3440760672092438, 0.34645357728004456, 0.3490952253341675, 0.3556993901729584, 0.36481308937072754, 0.37287017703056335, 0.3747193217277527, 0.3901730179786682, 0.3831726312637329, 0.3797384798526764, 0.39585259556770325, 0.40443798899650574, 0.40245673060417175, 0.40523049235343933, 0.41328755021095276, 0.409721314907074, 0.41645753383636475, 0.4205521047115326, 0.4212125241756439, 0.4263637661933899, 0.4422137141227722, 0.4399682879447937, 0.4461762011051178, 0.4505349397659302, 0.45291242003440857, 0.4497424364089966, 0.46268656849861145, 0.46189406514167786, 0.4659886360168457, 0.4687623679637909, 0.47589486837387085, 0.47391360998153687, 0.48012152314186096, 0.4858010709285736, 0.4854048490524292, 0.48329150676727295, 0.4900277256965637, 0.5036323070526123, 0.5115572810173035, 0.5062739253044128, 0.5031039714813232, 0.5068022608757019, 0.5102364420890808, 0.5128780603408813, 0.5153876543045044, 0.5284639000892639, 0.5285959839820862, 0.5320301055908203, 0.5227842926979065, 0.5350680351257324, 0.5443138480186462, 0.5325584411621094, 0.5424646735191345, 0.5451063513755798, 0.5419363379478455, 0.5461629629135132, 0.5484083890914917, 0.5484083890914917, 0.5538238286972046, 0.5534275770187378, 0.5604279637336731, 0.5609562993049622, 0.5650508403778076, 0.5676925182342529, 0.5647866725921631, 0.5781270861625671, 0.570730447769165, 0.572579562664032, 0.5781270861625671, 0.5775987505912781], "val_loss": [1.9680451665605818, 1.9646940231323242, 1.9613468987601144, 1.9579718453543526, 1.9546467917306083, 1.9513143130711146, 1.9479387828281947, 1.9445022174290247, 1.9410370418003626, 1.937544618334089, 1.9339867319379533, 1.9303622926984514, 1.9266292708260673, 1.9227893011910575, 1.91885587147304, 1.9147593634469169, 1.9105284554617745, 1.9061240468706404, 1.901533876146589, 1.89683198928833, 1.8919343948364258, 1.886798586164202, 1.8814635957990373, 1.8759046963282995, 1.8701574461800712, 1.8641272953578405, 1.857832976749965, 1.851264817374093, 1.8443119866507394, 1.83714873450143, 1.8296478816441126, 1.8218821798052107, 1.8137074198041643, 1.8051165853227888, 1.7962298393249512, 1.7869064467293876, 1.7771320343017578, 1.7669074194771903, 1.7564313071114677, 1.7455554689679826, 1.7341787474496024, 1.7222787993294852, 1.7099007197788783, 1.6971839836665563, 1.6839392185211182, 1.6703451020377023, 1.6562022481645857, 1.6416191373552596, 1.6265768664223808, 1.611245972769601, 1.5954653535570418, 1.5792079312460763, 1.5627235344478063, 1.5458930219922746, 1.5287694590432304, 1.5114456585475378, 1.4937832014901298, 1.4760337216513497, 1.4579526356288366, 1.4397961412157332, 1.4216321195874895, 1.403501033782959, 1.3852342878069197, 1.3669701303754533, 1.3487145900726318, 1.3306634426116943, 1.3130675724574499, 1.2953674793243408, 1.2776833261762346, 1.2607166767120361, 1.243816580091204, 1.227330037525722, 1.2113323892865862, 1.195587090083531, 1.180274827139718, 1.1651420593261719, 1.1504840850830078, 1.1361093521118164, 1.1225823674883162, 1.1091760567256383, 1.095970664705549, 1.0834277016775948, 1.0708478859492712, 1.0591820308140345, 1.0475317750658308, 1.0362848554338728, 1.0256208351680212, 1.015378815787179, 1.0053165299551827, 0.9953523363385882, 0.9858502660478864, 0.976750203541347, 0.9678153991699219, 0.9592398575374058, 0.9508970124380929, 0.942774772644043, 0.9346928255898612, 0.9271458557673863, 0.9199139390672956, 0.9127812385559082], "val_accuracy": [0.05900000035762787, 0.0820000022649765, 0.10899999737739563, 0.14399999380111694, 0.1783333271741867, 0.21533332765102386, 0.24433332681655884, 0.26766666769981384, 0.2913333475589752, 0.31033334136009216, 0.3243333399295807, 0.33899998664855957, 0.351666659116745, 0.3616666793823242, 0.37033334374427795, 0.37700000405311584, 0.3816666603088379, 0.3883333206176758, 0.39500001072883606, 0.4020000100135803, 0.4076666533946991, 0.41466665267944336, 0.42500001192092896, 0.43033334612846375, 0.43566668033599854, 0.4423333406448364, 0.4483333230018616, 0.45366665720939636, 0.4586666524410248, 0.4659999907016754, 0.47099998593330383, 0.47566667199134827, 0.47866666316986084, 0.48533332347869873, 0.4893333315849304, 0.4959999918937683, 0.49933332204818726, 0.5019999742507935, 0.5059999823570251, 0.5093333125114441, 0.5143333077430725, 0.515999972820282, 0.5189999938011169, 0.5233333110809326, 0.5263333320617676, 0.5273333191871643, 0.5326666831970215, 0.5360000133514404, 0.5386666655540466, 0.5423333048820496, 0.5460000038146973, 0.5486666560173035, 0.5506666898727417, 0.5526666641235352, 0.5540000200271606, 0.5563333630561829, 0.5590000152587891, 0.5633333325386047, 0.5669999718666077, 0.5686666369438171, 0.5699999928474426, 0.5716666579246521, 0.5756666660308838, 0.5806666612625122, 0.5806666612625122, 0.5820000171661377, 0.5853333473205566, 0.5870000123977661, 0.5903333425521851, 0.593999981880188, 0.597000002861023, 0.5996666550636292, 0.6036666631698608, 0.6066666841506958, 0.6106666922569275, 0.6156666874885559, 0.6196666955947876, 0.6233333349227905, 0.625333309173584, 0.6276666522026062, 0.6330000162124634, 0.6380000114440918, 0.6433333158493042, 0.6446666717529297, 0.6456666588783264, 0.6499999761581421, 0.6506666541099548, 0.6513333320617676, 0.652999997138977, 0.6553333401679993, 0.6573333144187927, 0.6596666574478149, 0.6603333353996277, 0.6606666445732117, 0.6610000133514404, 0.6623333096504211, 0.6646666526794434, 0.6663333177566528, 0.668666660785675, 0.6683333516120911]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [5, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 3, 4, 4, 7], [0, 0, 2, 1], [1, 72, 64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 11, 9, 5, 4, 2, 7, 3, 4, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, beta))), tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.302204464089995, 2.3023611528368644, 2.303694984239279, 2.3087716830987595, 2.3388733131349237, 2.638486471599387], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9738401004246302, 1.9745072637285506, 1.9769325256347656, 1.9883029801504952, 2.060201440538679, 3.16530248097011], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 6, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 3, 4, 9, 7], [0, 0, 2, 1], [1, 72, 64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 9, 4, 3, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08321225643157959, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 3, 4, 9, 7], [0, 0, 2, 1], [34, 2, 82], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 11, 11, 8, 3, 4, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [5, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [24, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 3, 4, 9, 7], [0, 0, 2, 1], [34, 2, 82], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 2, 2, 2, 0, 1, 9, 7, 5, 2, 3, 3, 1, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 9, 3, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [94, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 4, 3, 4, 9, 7], [1, 0, 2], [34, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026683107579404, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [34, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [31, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 1, 1, 1, 1], [3, 4, 3, 4, 9, 7], [4, 0, 2], [34, 75, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 2, 2, 2, 0, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3251695514528303, 2.4032208194916573, 2.694944905094766, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05824857950210571, 0.014925372786819935, 0.012547880411148071, 0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.025863919939314, 2.136826378958566, 3.397530896323068, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.003666666569188237, 0.004666666500270367, 0.08033332973718643, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 4, 3, 4, 9, 7], [1, 0, 2], [34, 2, 82], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 2, 2, 2, 0, 1, 5, 3, 2, 1, 0, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [31, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 3, 4, 9, 7], [1, 0, 2], [34, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 2, 2, 2, 0, 1, 9, 7, 5, 2, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, alpha))), tf.math.add(sigma, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3247110413805903, 2.399328683928224, 2.6406447738153176, 103799.22927021304, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05877691134810448, 0.015321621671319008, 0.01109496783465147, 0.08691058307886124, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0244341577802385, 2.1279797554016113, 2.8530592237200056, 157425200304713.16, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.003666666569188237, 0.004666666500270367, 0.03333333507180214, 0.10133333504199982, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 3, 4, 9, 7], [1, 0, 2], [34, 2, 82], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.3020686732936984, 2.3151191413961523, 3.0603065936005804, 13.125182747730662, 27.52166590894045, 41.919588696388224], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9757593018668038, 2.033642905099051, 6.177502904619489, 18.518710000174387, 30.872957502092635, 43.23118591308594], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 3, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [34, 2, 82], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 0, 3, 4, 9, 7], [0, 0, 2, 1], [34, 2, 82], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [2.3029318187435495, 2.3028745488436497, 2.30271995374634, 2.3028195562489895, 2.3027997317331153, 2.3027906096953097], "accuracy": [0.08889182657003403, 0.09509972482919693, 0.09496764093637466, 0.09998679161071777, 0.09417514503002167, 0.09668471664190292], "val_loss": [1.9735994338989258, 1.973628384726388, 1.9736171449933733, 1.973644801548549, 1.9736482075282507, 1.973625796181815], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10199999809265137, 0.10199999809265137, 0.10466666519641876]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [34, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302713572246807, 2.301512249740139, 2.30133851471043, 2.302763235677644, 2.3006557574629265, 2.301735865142383], "accuracy": [0.09589222073554993, 0.09377889335155487, 0.08981640636920929, 0.09338264167308807, 0.09602430462837219, 0.09391097724437714], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [67, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 0, 3, 4, 9, 7], [1, 0, 2], [34, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 5, 5, 2, 3, 1, 11, 11, 8, 3, 4, 8, 7, 5, 2, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, alpha))), tf.math.add(sigma, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302713572246807, 2.301512249740139, 2.30133851471043, 2.302763235677644, 2.3006557574629265, 2.302252695151387], "accuracy": [0.09589222073554993, 0.09377889335155487, 0.08981640636920929, 0.09338264167308807, 0.09602430462837219, 0.09259014576673508], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.9730078152247839], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03433333337306976]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 9, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [52, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 1, 1], [3, 7, 3, 4, 9, 7], [0, 0, 2, 1], [49, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.02857142873108387, "mapping_values": [1, 5, 5, 3, 2, 1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3042319618621128, 2.3067077594646737, 2.3103393741555265, 2.3157399100335265, 2.31728613837961, 2.32250344726498], "accuracy": [0.09272222965955734, 0.08558975160121918, 0.07040020823478699, 0.06947562843561172, 0.06406023353338242, 0.055210672318935394], "val_loss": [1.974860327584403, 1.9783246857779366, 1.9818545750209264, 1.985517910548619, 1.98920134135655, 1.9929684911455428], "val_accuracy": [0.02133333310484886, 0.013333333656191826, 0.007666666526347399, 0.00566666666418314, 0.005333333276212215, 0.004999999888241291]}}]