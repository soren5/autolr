[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8402857184410095, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.095337575468578, 1.1634812415031914, 0.8316382306866941, 0.723826379477466, 0.6709023270120773, 0.63205294080178, 0.5954047145151963, 0.5602485026350866, 0.5316814996578658, 0.5185721219255153, 0.5051283861242659, 0.4896044842972653, 0.46960940116258926, 0.44839846389546545, 0.4352473915646719, 0.4188909557721933, 0.40450914181092823, 0.3842160148651152, 0.3786106036323771, 0.3749713488754705, 0.35857144587421935, 0.3556198541199479, 0.3523727005593387, 0.32981503465235146, 0.33347800309474457, 0.31917771965899033, 0.3181056813785287, 0.31156556326180024, 0.29946490411335813, 0.2897074466698898, 0.29100419164664393, 0.2784659015134089, 0.27688364989060643], "accuracy": [0.2969224750995636, 0.5890899300575256, 0.6888125538825989, 0.7250033020973206, 0.7490423917770386, 0.7622507214546204, 0.7784969210624695, 0.7951393723487854, 0.8055738806724548, 0.8033285140991211, 0.8150838613510132, 0.817989706993103, 0.8215559124946594, 0.83119797706604, 0.8370096683502197, 0.8467837572097778, 0.8492933511734009, 0.8576145768165588, 0.8599920868873596, 0.86118084192276, 0.8685774803161621, 0.8656716346740723, 0.8681812286376953, 0.8739928603172302, 0.8735966086387634, 0.8809932470321655, 0.8808611631393433, 0.8804649114608765, 0.8857482671737671, 0.8907673954963684, 0.8878615498542786, 0.8938053250312805, 0.8960506916046143], "val_loss": [1.0350869723728724, 0.6759180341448102, 0.5708942924227033, 0.5246755395616803, 0.4912290062223162, 0.47247748715536936, 0.45335960388183594, 0.43423105989183697, 0.416949851172311, 0.40244542700903757, 0.41786214283534456, 0.3907335656029837, 0.38659457649503437, 0.3726619482040405, 0.3576612387384687, 0.3521316221782139, 0.3404000401496887, 0.3512245161192758, 0.3388304454939706, 0.3351307681628636, 0.32996441636766705, 0.3361387423106602, 0.3296059455190386, 0.32416332619530813, 0.3228419934000288, 0.3257326824324472, 0.31489081042153494, 0.3136124866349356, 0.320429938180106, 0.3233549083982195, 0.32121011189052034, 0.3196605784552438, 0.327130811555045], "val_accuracy": [0.6506666541099548, 0.7239999771118164, 0.734666645526886, 0.7676666378974915, 0.7886666655540466, 0.7926666736602783, 0.809333324432373, 0.8096666932106018, 0.8276666402816772, 0.8330000042915344, 0.8183333277702332, 0.8296666741371155, 0.8296666741371155, 0.8423333168029785, 0.8510000109672546, 0.8553333282470703, 0.8600000143051147, 0.8550000190734863, 0.8629999756813049, 0.8640000224113464, 0.8663333058357239, 0.8613333106040955, 0.8650000095367432, 0.8679999709129333, 0.8666666746139526, 0.8669999837875366, 0.8703333139419556, 0.8740000128746033, 0.8726666569709778, 0.871999979019165, 0.8709999918937683, 0.871666669845581, 0.8706666827201843]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [42, 58, 13, 96, 41]], "fitness": -0.8317142724990845, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.144404884626081, 1.2420717690126724, 0.8661125470083214, 0.7481115803490572, 0.6894311536698372, 0.6531675165402749, 0.6226456725224213, 0.5816594185121874, 0.560673311614499, 0.5490342628497646, 0.5437021179048691, 0.5193023532845514, 0.5090693507873466, 0.48344895053911263, 0.46690560413027293, 0.4485035425384425, 0.43997776809857897, 0.414146193679707, 0.4133913515384376, 0.4064850563213196, 0.3945158049257566, 0.3834554814250005, 0.37310650908495097, 0.354286443886425, 0.3573122113931291, 0.34255126629208277, 0.3434806241768384, 0.3371234034676326, 0.32610284379523397, 0.32132274373379743, 0.3231247236912576], "accuracy": [0.2797516882419586, 0.5643904209136963, 0.685510516166687, 0.7169462442398071, 0.7388719916343689, 0.7561748623847961, 0.7664773464202881, 0.7835160493850708, 0.7847048044204712, 0.7897239327430725, 0.7944789528846741, 0.8074230551719666, 0.8061022162437439, 0.8190463781356812, 0.8293488025665283, 0.8329150676727295, 0.8363492488861084, 0.8481045961380005, 0.8471800088882446, 0.850350022315979, 0.857218325138092, 0.8617091774940491, 0.8607845902442932, 0.868049144744873, 0.8660678863525391, 0.8696341514587402, 0.8692378997802734, 0.8737286925315857, 0.8813894987106323, 0.8761062026023865, 0.878879964351654], "val_loss": [1.2159382615770613, 0.6951042413711548, 0.5889984198978969, 0.5460711547306606, 0.5096461262021746, 0.48508056572505404, 0.4670577900750296, 0.4502455336706979, 0.43439553465162006, 0.42465078830718994, 0.4270173055785043, 0.4068482092448643, 0.39960265159606934, 0.3816886118480137, 0.3813741888318743, 0.37504386050360544, 0.3578371320452009, 0.36037950004850117, 0.34975665807724, 0.3501852069582258, 0.34483327184404644, 0.339286812714168, 0.33662366015570505, 0.3319737911224365, 0.3296283653804234, 0.32815816572734285, 0.3237763132367815, 0.32600354296820505, 0.3297637871333531, 0.3304158960069929, 0.3295832191194807], "val_accuracy": [0.5910000205039978, 0.7163333296775818, 0.7289999723434448, 0.7616666555404663, 0.781333327293396, 0.7873333096504211, 0.7973333597183228, 0.7993333339691162, 0.8186666369438171, 0.8213333487510681, 0.8140000104904175, 0.8233333230018616, 0.831333339214325, 0.8399999737739563, 0.8399999737739563, 0.8429999947547913, 0.8523333072662354, 0.8543333411216736, 0.8586666584014893, 0.8560000061988831, 0.8573333621025085, 0.8629999756813049, 0.8610000014305115, 0.8656666874885559, 0.8653333187103271, 0.8679999709129333, 0.8673333525657654, 0.8656666874885559, 0.8636666536331177, 0.8656666874885559, 0.8669999837875366]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [40, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [4, 7, 8, 4], [1, 1], [64], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [42, 58, 13, 96, 41]], "fitness": -0.7934285998344421, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.157653184536032, 1.5382505044835102, 1.1877677256735701, 1.0028237988369073, 0.8805459486872937, 0.8525278587713533, 0.8067018656903223, 0.7829976715605099, 0.7490357371164492, 0.7089283164733783, 0.6867775781720526, 0.7004201135788423, 0.6836437763885626, 0.6529432588863713, 0.6330300003483059, 0.6386469827194602, 0.6360958784783222, 0.6032833627359568, 0.6251925492267788, 0.6113217376195177, 0.5884532947282687, 0.572070170395158], "accuracy": [0.2879408299922943, 0.48751816153526306, 0.5753533244132996, 0.6337339878082275, 0.6774534583091736, 0.68101966381073, 0.6980583667755127, 0.7030775547027588, 0.7220974564552307, 0.7312111854553223, 0.7372870445251465, 0.7320036888122559, 0.7408532500267029, 0.7506273984909058, 0.7604015469551086, 0.7548540234565735, 0.7611940503120422, 0.7757231593132019, 0.763439416885376, 0.7670056819915771, 0.772288978099823, 0.7828556299209595], "val_loss": [1.4402275766645158, 0.9427850927625384, 0.933084521974836, 0.6791185821805682, 0.7117114918572562, 0.6539027520588466, 0.647557292665754, 0.5889384065355573, 0.5366744824818203, 0.5278216430119106, 0.5178748028618949, 0.5703013624463763, 0.5202038628714425, 0.5103885275976998, 0.5310095378330776, 0.5348597254071917, 0.4822010653359549, 0.483225805418832, 0.4793812206813267, 0.5045159203665597, 0.4820458548409598, 0.4828019142150879], "val_accuracy": [0.5903333425521851, 0.6140000224113464, 0.5600000023841858, 0.7043333053588867, 0.6549999713897705, 0.7093333601951599, 0.703000009059906, 0.734333336353302, 0.7730000019073486, 0.7710000276565552, 0.7763333320617676, 0.7576666474342346, 0.7763333320617676, 0.7786666750907898, 0.7630000114440918, 0.7543333172798157, 0.8016666769981384, 0.7836666703224182, 0.7919999957084656, 0.7596666812896729, 0.7850000262260437, 0.7929999828338623]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [89, 97, 13, 96, 41]], "fitness": -0.7365714311599731, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 4, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3013756475145035, 2.2968912525829497, 2.2858156060750505, 2.2757857742090395, 2.258165411709196, 2.234794528461356, 2.208298137710394, 2.1758839442918583, 2.1355326065786007, 2.0756427058926694, 2.006401248186681, 1.9151335321853913, 1.792923203611796, 1.6764039405978446, 1.5655775261340974, 1.472409844225298, 1.4090646177849135, 1.3753540045108779, 1.3713011712981347, 1.3528696862446115, 1.3569410320254773, 1.3449027841873078, 1.238365094313107, 1.1546361008340404, 1.0905985366068403, 1.0014409782580727, 0.9482759246264372, 0.9139858855311236, 0.8982380293363814, 0.9059036433925057, 0.909376626497467, 0.9227985513208722, 0.9090534073408049, 0.8992349020069018, 0.8652495865131555, 0.8457706800903453, 0.8181873766532931], "accuracy": [0.08849557489156723, 0.10051512718200684, 0.13380002975463867, 0.16761326789855957, 0.21080438792705536, 0.2689208686351776, 0.30880993604660034, 0.337339848279953, 0.3571522831916809, 0.38568219542503357, 0.40126800537109375, 0.41804254055023193, 0.44445911049842834, 0.45872408151626587, 0.47008320689201355, 0.49293357133865356, 0.505877673625946, 0.5227842926979065, 0.5344076156616211, 0.54220050573349, 0.5473517179489136, 0.5632016658782959, 0.6044115424156189, 0.6192048788070679, 0.6367719173431396, 0.648659348487854, 0.6561880707740784, 0.6580372452735901, 0.6608110070228577, 0.6559239029884338, 0.6622639298439026, 0.6654338836669922, 0.6789063811302185, 0.6719059348106384, 0.6890767216682434, 0.6833971738815308, 0.6906617283821106], "val_loss": [1.96853848866054, 1.9619592257908411, 1.9513749395098006, 1.9370721408299036, 1.9191865239824568, 1.8975422041756767, 1.8707528795514787, 1.8361856596810477, 1.7902402196611678, 1.7291560854230608, 1.6487021786825997, 1.5456975528172083, 1.4219743183680944, 1.287337132862636, 1.157719305583409, 1.0453155381338937, 0.9524071897779193, 0.8759284700666156, 0.8177810055868966, 0.7919146333421979, 0.7698622601372855, 0.7358860799244472, 0.7340587547847203, 0.7339272499084473, 0.7055734736578805, 0.6718857969556536, 0.6616080318178449, 0.6672295672552926, 0.67591621194567, 0.6853181294032505, 0.6960209267480033, 0.7013227769306728, 0.6930723190307617, 0.6720312663487026, 0.6453272274562291, 0.6230035679680961, 0.6111270359584263], "val_accuracy": [0.05400000140070915, 0.109333336353302, 0.21533332765102386, 0.32633334398269653, 0.37433332204818726, 0.4023333191871643, 0.41600000858306885, 0.43033334612846375, 0.44433334469795227, 0.4663333296775818, 0.4906666576862335, 0.5113333463668823, 0.5360000133514404, 0.5586666464805603, 0.5873333215713501, 0.6163333058357239, 0.6499999761581421, 0.6690000295639038, 0.6779999732971191, 0.6759999990463257, 0.6786666512489319, 0.7006666660308838, 0.7076666951179504, 0.7146666646003723, 0.7203333377838135, 0.7246666550636292, 0.7273333072662354, 0.722000002861023, 0.7116666436195374, 0.7146666646003723, 0.722000002861023, 0.7316666841506958, 0.7293333411216736, 0.7273333072662354, 0.7289999723434448, 0.7316666841506958, 0.7296666502952576]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [87, 58, 13, 96, 41]], "fitness": -0.6817142963409424, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.265746206954454, 1.8781827304184067, 1.7925582882467122, 1.4064448139907157, 1.4890978782247197, 1.5851412847955009, 2.2310053753956764, 321.7993360843641], "accuracy": [0.18544445931911469, 0.4089288115501404, 0.5410117506980896, 0.6044115424156189, 0.44023245573043823, 0.47127196192741394, 0.42926958203315735, 0.22295601665973663], "val_loss": [1.8358755111694336, 1.0649138518742152, 1.1365354401724679, 1.057567800794329, 0.8616095781326294, 1.0239709786006383, 1.6035441671098982, 11.490744454520089], "val_accuracy": [0.4386666715145111, 0.6169999837875366, 0.6963333487510681, 0.5163333415985107, 0.6359999775886536, 0.5766666531562805, 0.6036666631698608, 0.2770000100135803]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 0, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 0, 0, 2, 2], [76, 58, 13, 96, 41]], "fitness": -0.11857143044471741, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(sigma))", "other_info": {"loss": [2.3020161242139277, 2.3008624732360516, 2.296555811025841, 2.3007646071487304, 2.3030019521618783, 2.3129273211998536, 2.4372667042240095, 3.500388498272264, 9.133221425117046, 32.5848206925811, 123.54972904050638], "accuracy": [0.08691058307886124, 0.09113723784685135, 0.11279883980751038, 0.08558975160121918, 0.07172103971242905, 0.0882314071059227, 0.10077928751707077, 0.09893012791872025, 0.09893012791872025, 0.09893012791872025, 0.10038304328918457], "val_loss": [1.9706539426531111, 1.9681990487234933, 1.9704412732805525, 1.9738805634634835, 1.9747304916381836, 2.008765629359654, 2.36614922114781, 4.7554987498692105, 15.42556871686663, 57.90684291294643, 222.77737426757812], "val_accuracy": [0.04100000113248825, 0.07400000095367432, 0.08533333241939545, 0.058666665107011795, 0.0806666687130928, 0.12533333897590637, 0.09166666865348816, 0.09099999815225601, 0.09600000083446503, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 3, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [9, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [3, 0, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.11057142913341522, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3007698937051915, 2.302013410285574, 2.3025299886497668, 2.3025848595316005, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.08638224750757217, 0.09747721254825592, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.972515310559954, 1.9735964366367884, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09666666388511658, 0.11599999666213989, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [9, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [4, 7, 8, 4], [1, 1], [86], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 9, 3, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(alpha), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [31194.760367139486, 2.6764219261321096, 2.471531061338254, 2.5847474930387495, 2.614649316559473, 2.4702523306706925], "accuracy": [0.09787346422672272, 0.10249637067317963, 0.10157178342342377, 0.09919429570436478, 0.09998679161071777, 0.09496764093637466], "val_loss": [2.320394652230399, 2.2636331830705916, 2.327997548239572, 2.1959099088396346, 2.285844257899693, 2.3179988179888045], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.09799999743700027, 0.10366666316986084, 0.10366666316986084, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [4, 7, 8, 4], [1, 1], [86], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 0, 9, 4, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [42, 88, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 0, 0, 2, 2], [42, 58, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7156741.027158884, 138082179.2967904, 639857509.7440232, 1802757107.6919825, 3841713834.3510766, 6999549866.925901], "accuracy": [0.0956280529499054, 0.10170386731624603, 0.10130762308835983, 0.09470347315073013, 0.09972262382507324, 0.10394927859306335], "val_loss": [27027793.14285714, 215857206.85714287, 728112877.7142857, 1725414912.0, 3369396224.0, 5821665426.285714], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [4, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 8, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [11], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 2, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3426442784624424, 3.9583736184628697, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04253070801496506, 0.01228371448814869, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1185180800301686, 29.792505536760604, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004666666500270367, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [91], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [42, 58, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [9, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 0, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022512750634427, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [9, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 7, 3, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.301828337320326, 2.3023296734282463, 2.30282757159757, 2.305230349534538, 2.316791699499801, 2.4013734823677124], "accuracy": [0.1002509593963623, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735890116010393, 1.9737645557948522, 1.9745094435555595, 1.9785330636160714, 2.0026869092668806, 2.2558446611676897], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 1, 2, 2, 5, 8, 8, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [28, 32, 5, 49, 25], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 8, 0, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [78, 44], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 2, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.sqrt(beta), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022512750634427, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [3, 8, 9, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 0, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [0, 70, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302068176774647, 2.3021116606264287, 2.3000770809942974, 2.3033500157327165, 2.3030048991553365, 2.301210898859248], "accuracy": [0.0870426595211029, 0.08717474341392517, 0.09377889335155487, 0.09391097724437714, 0.09219389408826828, 0.09734513610601425], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 0, 0, 2, 2], [42, 97, 19, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha), sigma)", "other_info": {"loss": [2.302068176774647, 2.3021116606264287, 2.3000770809942974, 2.3033500157327165, 2.3030048991553365, 2.301210898859248], "accuracy": [0.0870426595211029, 0.08717474341392517, 0.09377889335155487, 0.09391097724437714, 0.09219389408826828, 0.09734513610601425], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 2, 1, 1, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 8, 9, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [78, 44], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 0, 0, 0, 0, 2, 2], [89, 97, 13, 96, 41]], "fitness": -0.041428569704294205, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 3], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3020809514883753, 2.3021502533860887, 2.3001245720480035, 2.303447806178587, 2.3031527083768126, 2.301370542976189], "accuracy": [0.0870426595211029, 0.0874389111995697, 0.0936468094587326, 0.09351472556591034, 0.09259014576673508, 0.09655263274908066], "val_loss": [1.9709527833121163, 1.9709668159484863, 1.9709813254220145, 1.9709957667759486, 1.971010344369071, 1.9710253987993513], "val_accuracy": [0.03766666725277901, 0.03733333200216293, 0.036666665226221085, 0.03633333370089531, 0.035999998450279236, 0.03500000014901161]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 4, 9, 3, 0, 1, 3, 2, 2, 5], [0, 0, 0, 0, 0, 2, 2], [42, 58, 13, 96, 41]], "fitness": -0.03228571265935898, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 4], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302358445742064, 2.3029861550021873, 2.30139205887522, 2.3061803278118753, 2.307729872289256, 2.306442368378524], "accuracy": [0.08585391938686371, 0.08968432247638702, 0.09192973375320435, 0.08479725569486618, 0.08770307898521423, 0.09140139818191528], "val_loss": [1.9712879317147392, 1.9717137472970145, 1.9721690586635046, 1.9726826122828893, 1.9732230050223214, 1.9737371717180525], "val_accuracy": [0.03233333304524422, 0.02566666714847088, 0.023666666820645332, 0.024666666984558105, 0.025333333760499954, 0.029999999329447746]}}]