[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 8, 2, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8159999847412109, "mapping_values": [1, 4, 4, 2, 2, 1, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(grad)), tf.math.add(beta, grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1140836908234393, 1.7138709201001536, 1.3979539018596214, 1.051535905549051, 0.8836946405077718, 0.8264993787000775, 0.747263948088545, 0.7023061368569659, 0.7216592678666635, 0.6674536178140686, 0.623518142339938, 0.6373982399509189, 0.5956125518098215, 0.5666561538454186, 0.6074990617632158, 0.5393977215410996, 0.5563710408912375, 0.5256976796462473, 0.5424508558618961, 0.5127514640668663, 0.5130411077011783, 0.5075956922338907, 0.4806213875637866, 0.4656630568122662, 0.4650614123696491, 0.4644860777368698, 0.44786493320191745, 0.4510652165623263, 0.4246285628798521, 0.4195800914685362, 0.44127591004492567, 0.40989336955580397, 0.3966807878335485, 0.4130667007130056, 0.40366317728774703, 0.3890216802609138, 0.3982674968815782, 0.4008844207345912, 0.36484432926645305, 0.3854637550419631], "accuracy": [0.3077532649040222, 0.4443270266056061, 0.49610355496406555, 0.6128648519515991, 0.6812838315963745, 0.6914542317390442, 0.7152291536331177, 0.7301545143127441, 0.7257958054542542, 0.7454761862754822, 0.7667415142059326, 0.7568352818489075, 0.7755910754203796, 0.7824593782424927, 0.7701756954193115, 0.8014793395996094, 0.7947431206703186, 0.8061022162437439, 0.7921014428138733, 0.8038568496704102, 0.8086118102073669, 0.805177628993988, 0.8226125836372375, 0.8294808864593506, 0.8251221776008606, 0.8286884427070618, 0.8300092220306396, 0.8310658931732178, 0.8442742228507996, 0.8407079577445984, 0.8356888294219971, 0.8473120927810669, 0.8560295701026917, 0.8437458872795105, 0.8510104417800903, 0.8520671129226685, 0.8502179384231567, 0.8465195894241333, 0.8619733452796936, 0.8531237840652466], "val_loss": [1.8801422800336565, 1.3195947919573103, 0.72577965259552, 0.7669699702944074, 0.6163595233644757, 0.5473626000540597, 0.5290473018373761, 0.540941766330174, 0.5180488995143345, 0.5208069256373814, 0.5520589692252023, 0.4814229352133615, 0.44270479679107666, 0.467259338923863, 0.445868764604841, 0.4589719261441912, 0.42945339850017, 0.4050217866897583, 0.4187889780317034, 0.4225453904696873, 0.4366556065423148, 0.3889346718788147, 0.39140299388340544, 0.3963479569980076, 0.41807602984564646, 0.43542282921927317, 0.3748444063322885, 0.38540659632001606, 0.37760983194623676, 0.4129082645688738, 0.37441145522253855, 0.3584990075656346, 0.3822662489754813, 0.39989955936159405, 0.3495224714279175, 0.3502940961292812, 0.3911448802266802, 0.3839944771357945, 0.3542746305465698, 0.34638173239571707], "val_accuracy": [0.3630000054836273, 0.4690000116825104, 0.6713333129882812, 0.6933333277702332, 0.7103333473205566, 0.7593333125114441, 0.7649999856948853, 0.7580000162124634, 0.765333354473114, 0.7593333125114441, 0.7596666812896729, 0.768666684627533, 0.8130000233650208, 0.784333348274231, 0.8013333082199097, 0.7950000166893005, 0.8153333067893982, 0.8230000138282776, 0.8186666369438171, 0.8159999847412109, 0.8053333163261414, 0.8339999914169312, 0.8343333601951599, 0.8216666579246521, 0.8193333148956299, 0.8220000267028809, 0.8446666598320007, 0.8403333425521851, 0.8366666436195374, 0.8256666660308838, 0.8366666436195374, 0.8479999899864197, 0.8349999785423279, 0.8196666836738586, 0.8610000014305115, 0.8533333539962769, 0.8333333134651184, 0.831333339214325, 0.859333336353302, 0.8536666631698608]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [42, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 1, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [5, 0], [23], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8048571348190308, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), tf.math.add(beta, beta)), grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0185273456189297, 1.472692270052825, 1.054578465233547, 0.8732196449713857, 0.8684085153270596, 0.7563185072326232, 0.7449537590116542, 0.7162463149579131, 0.6862481308965919, 0.7236567088767538, 0.6666105237335908, 0.6434678031846816, 0.6460184915080566, 0.6135637872900237, 0.6307116938840286, 0.6029832183157432, 0.5980501833876536, 0.579778891804196, 0.5915684131362954, 0.5660173087906702, 0.5653437601419378, 0.5660269554453976, 0.5337438866399645, 0.5372106492117869, 0.5253633006200689, 0.5331913979219455, 0.529084402607763, 0.5076247098313315, 0.4921215067387194], "accuracy": [0.3369435966014862, 0.49385812878608704, 0.614317774772644, 0.6870955228805542, 0.683000922203064, 0.7226257920265198, 0.7185312509536743, 0.7298903465270996, 0.7452120184898376, 0.7308149337768555, 0.750759482383728, 0.7565711140632629, 0.7537974119186401, 0.7714964747428894, 0.7574957013130188, 0.7778365015983582, 0.7728173136711121, 0.783119797706604, 0.7800818681716919, 0.7869502305984497, 0.7821952104568481, 0.7824593782424927, 0.8049134612083435, 0.7996301651000977, 0.8043851256370544, 0.7991018295288086, 0.8024039268493652, 0.8092722296714783, 0.8175934553146362], "val_loss": [1.3897887979234969, 0.8371234110423497, 0.7269118343080793, 0.6603480066571917, 0.5689061880111694, 0.5468020439147949, 0.5419069017682757, 0.5378543819699969, 0.5508921657289777, 0.5656695876802716, 0.5097389221191406, 0.503466146332877, 0.5118243524006435, 0.474777204649789, 0.48120990821293425, 0.4874049595424107, 0.5042497430528913, 0.46414475781576975, 0.4540848731994629, 0.46004678521837505, 0.46398561341421946, 0.4328174420765468, 0.4374119894845145, 0.4163920709065029, 0.4674544504710606, 0.4751162528991699, 0.41374872412000385, 0.42003136021750315, 0.4108559318951198], "val_accuracy": [0.3386666774749756, 0.6623333096504211, 0.6943333148956299, 0.7233333587646484, 0.7443333268165588, 0.7519999742507935, 0.762666642665863, 0.7723333239555359, 0.7576666474342346, 0.737666666507721, 0.7836666703224182, 0.7639999985694885, 0.7826666831970215, 0.7893333435058594, 0.7879999876022339, 0.7823333144187927, 0.7676666378974915, 0.7906666398048401, 0.8073333501815796, 0.7929999828338623, 0.7919999957084656, 0.8173333406448364, 0.8130000233650208, 0.8270000219345093, 0.7906666398048401, 0.809333324432373, 0.8263333439826965, 0.8113333582878113, 0.8256666660308838]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [38, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [5, 0], [23], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7817142605781555, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1967949769941257, 1.5832465574363785, 1.132914708794667, 0.9907682265398949, 0.9030502005937219, 0.8249771565242199, 0.8025811429131442, 0.7504145445730456, 0.7462365308599607, 0.7383741965036917, 0.7030136851570972, 0.6867459075105441, 0.6822925092852458, 0.661629150517156, 0.657738879710739, 0.6488315332299603, 0.6446896111960456, 0.6269076041352747, 0.6362947667311085, 0.6151133550471476], "accuracy": [0.2759212851524353, 0.48448026180267334, 0.599128246307373, 0.6510368585586548, 0.6778497099876404, 0.6985867023468018, 0.7079645991325378, 0.7224937081336975, 0.724210798740387, 0.7205125093460083, 0.7386078238487244, 0.746268630027771, 0.7430986762046814, 0.7556465268135071, 0.7549861073493958, 0.7638356685638428, 0.7582882046699524, 0.7693831920623779, 0.7635715007781982, 0.7691190242767334], "val_loss": [1.6142984117780412, 0.9138173375810895, 0.8364128725869315, 0.7005769865853446, 0.6082146338054112, 0.5865884508405413, 0.5821780647550311, 0.5718236650739398, 0.5307885578700474, 0.545432414327349, 0.532416820526123, 0.507287996155875, 0.5215957505362374, 0.4931517669132778, 0.49223664828709196, 0.4936061075755528, 0.5048006091799054, 0.47992747170584543, 0.47474850927080425, 0.4649570328848703], "val_accuracy": [0.5113333463668823, 0.6613333225250244, 0.6713333129882812, 0.7099999785423279, 0.749666690826416, 0.7573333382606506, 0.734000027179718, 0.7590000033378601, 0.7746666669845581, 0.7633333206176758, 0.7733333110809326, 0.7753333449363708, 0.7773333191871643, 0.7870000004768372, 0.7993333339691162, 0.7816666960716248, 0.7736666798591614, 0.7926666736602783, 0.7990000247955322, 0.7983333468437195]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [30, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 9, 2, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [10, 34, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.75685715675354, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2862605351372607, 2.2416143930662167, 2.1841245824634723, 2.089036303960951, 1.9437279233276221, 1.7573513334705342, 1.5578196010632428, 1.4069600597175516, 1.2825283170014072, 1.200318695547527, 1.1267911401076514, 1.0633782191661372, 1.0332755492096013, 0.9919073920775209, 0.9601235539055677, 0.9255394331609977, 0.9144247440677105, 0.8931064584613901, 0.8729785069766187, 0.8554106399273246, 0.8403684927125759, 0.8263385894591105, 0.8216920152961964, 0.8046852624285663, 0.8050423415975327, 0.7934464146794581, 0.7663511281803284, 0.7713646509895834, 0.7554075008590602, 0.7510288927328663], "accuracy": [0.13142253458499908, 0.24276845157146454, 0.3203011453151703, 0.3800026476383209, 0.4212125241756439, 0.46347907185554504, 0.5087835192680359, 0.5329546928405762, 0.5629374980926514, 0.5831462144851685, 0.6038832664489746, 0.6284506916999817, 0.6321489810943604, 0.6498481035232544, 0.6586976647377014, 0.6723021864891052, 0.6701889038085938, 0.6781138777732849, 0.6843217611312866, 0.6881521344184875, 0.6973979473114014, 0.7037379741668701, 0.7005679607391357, 0.7084929347038269, 0.7058512568473816, 0.7037379741668701, 0.7218332886695862, 0.7252674698829651, 0.7271166443824768, 0.7277770638465881], "val_loss": [1.9339618682861328, 1.8871426582336426, 1.81547669001988, 1.6996749128614153, 1.5322270052773612, 1.336585589817592, 1.1511268615722656, 1.0121326446533203, 0.9123455456324986, 0.8423532588141305, 0.7912738834108625, 0.7496101685932705, 0.7194421461650303, 0.6946829898016793, 0.6764795780181885, 0.6577136857169015, 0.6429624216897147, 0.6286416734967913, 0.6187222344534737, 0.6113841703959874, 0.6013965606689453, 0.5949252332959857, 0.5865346363612584, 0.5767641578401838, 0.5719814641135079, 0.566912020955767, 0.559960058757237, 0.557317989213126, 0.5539367028645107, 0.5476906640189034], "val_accuracy": [0.3426666557788849, 0.43566668033599854, 0.48233333230018616, 0.5326666831970215, 0.5659999847412109, 0.5866666436195374, 0.6269999742507935, 0.6536666750907898, 0.675000011920929, 0.6899999976158142, 0.7013333439826965, 0.7070000171661377, 0.7176666855812073, 0.7263333201408386, 0.7253333330154419, 0.7319999933242798, 0.7413333058357239, 0.7406666874885559, 0.7446666955947876, 0.7433333396911621, 0.7513333559036255, 0.7483333349227905, 0.7513333559036255, 0.7566666603088379, 0.7693333625793457, 0.7599999904632568, 0.7583333253860474, 0.7566666603088379, 0.7683333158493042, 0.7639999985694885]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [41, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0], [4, 7, 6, 4], [7, 0], [23], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.6908571720123291, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9076387266425598, 1.0258895462498674, 0.8906672280289163, 0.7274822481571959, 0.6898808813743807, 0.6608350678221456, 0.6236225652216039, 0.6092681061590132, 0.5836539489245764, 0.5540053309655507, 0.5648993830072441, 0.5722118906923777, 0.5697443135001042, 0.5788149681105165, 0.5921299809934661, 0.624347816699563, 0.6858335949284698, 0.7259194986569237], "accuracy": [0.3691718280315399, 0.6337339878082275, 0.6675472259521484, 0.7194558382034302, 0.7417778372764587, 0.7508915662765503, 0.7588165402412415, 0.7724210619926453, 0.7771760821342468, 0.7930260300636292, 0.7878747582435608, 0.7861577272415161, 0.7992339134216309, 0.7755910754203796, 0.7800818681716919, 0.7680623531341553, 0.755118191242218, 0.739400327205658], "val_loss": [0.928980895451137, 0.6791447741644723, 0.5889227049691337, 0.5492444719587054, 0.554208789552961, 0.4804415873118809, 0.482218725340707, 0.44868292127336773, 0.43597251176834106, 0.43717122077941895, 0.45704032693590435, 0.45771827016557964, 0.4431466630526951, 0.4585472345352173, 0.4995145968028477, 0.5237729719706944, 0.5588012593133109, 0.536831089428493], "val_accuracy": [0.6413333415985107, 0.6729999780654907, 0.7149999737739563, 0.7559999823570251, 0.7743333578109741, 0.8016666769981384, 0.8019999861717224, 0.8059999942779541, 0.8103333115577698, 0.8176666498184204, 0.8059999942779541, 0.8159999847412109, 0.8266666531562805, 0.8130000233650208, 0.8100000023841858, 0.8083333373069763, 0.7836666703224182, 0.7716666460037231]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.5688571333885193, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), tf.math.add(beta, beta)), grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.240030622816105, 2.1319330886150034, 2.3542713938199014, 2.0610436492545054, 2.3471325152680196, 2.265950729251459, 1.6714306257309899, 1.488680603686514, 1.9723815678479475, 2.137346850189755, 2.311214407059369, 2.3051020394006443], "accuracy": [0.26218464970588684, 0.24197596311569214, 0.21754062175750732, 0.26680755615234375, 0.17263241112232208, 0.16378284990787506, 0.4111742079257965, 0.48831066489219666, 0.2981112003326416, 0.27261921763420105, 0.10157178342342377, 0.1014397069811821], "val_loss": [1.9516331808907645, 1.9423871040344238, 1.790738310132708, 1.6800906658172607, 1.9764090265546526, 1.5703046321868896, 0.9019327504294259, 1.5314382484980993, 1.4110568250928606, 1.979999269757952, 1.9738098553248815, 1.9737937109810966], "val_accuracy": [0.24966666102409363, 0.10433333367109299, 0.3073333203792572, 0.445333331823349, 0.10366666316986084, 0.3096666634082794, 0.5839999914169312, 0.4153333306312561, 0.49033331871032715, 0.10366666316986084, 0.10366666316986084, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [14, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 3, 3, 8, 5, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.5180000066757202, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 8, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3019586516377664, 2.299073951087844, 2.299162782808384, 2.2967336131219205, 2.296186504488718, 2.292644159558616, 2.290184630378992, 2.2912986673116524, 2.2894531334584904, 2.2871315116187003, 2.285442091234293, 2.283696536484994, 2.282862979281517, 2.2808903802293026, 2.2780293186091005, 2.277654490183058, 2.2756337265470137, 2.2748820464908013, 2.2727327246030464, 2.272150482972064, 2.267956179241069, 2.267305721774975, 2.2674235550010398, 2.264851179231254, 2.2640200482226005, 2.260944527185289, 2.2596900605758607, 2.259211185664675, 2.2556661890324916, 2.2553749760899957, 2.2519648476299468, 2.2513223379011937, 2.246888722159119, 2.2465153128762902, 2.244842290815314, 2.2433499048225727, 2.2418262875075383, 2.2403479894988996, 2.236577104127103, 2.23768829490058, 2.2321771806367496, 2.229762326520054, 2.2287795526665497, 2.2251868317581014, 2.2254503035605184, 2.2200380344715858, 2.2191487440044506, 2.2178481215924286, 2.2154434249700574, 2.2117662672605403, 2.208934335849698, 2.206509706665732, 2.203421896443375, 2.2024855636382035, 2.198347632438751, 2.1982418652837934, 2.1940524787824733, 2.1921069225882652, 2.187672484646919, 2.1848401222813476, 2.1825288697760326, 2.1813584782302247, 2.176845458394359, 2.173033625269295, 2.1705471355492145, 2.1668054370076475, 2.1615959376454934, 2.159443810820312, 2.1567070349379773, 2.1545115679860696, 2.1503586212342616, 2.146382346680419, 2.141324716741068, 2.1398468311389425, 2.1317717047131937, 2.1288209234199127, 2.125710772202078, 2.1205527115460194, 2.115592609385867, 2.1135908230940395, 2.109054800163816, 2.1043077532043073, 2.0988943841967207, 2.0958876293317408, 2.0902302702262716, 2.07999761714565, 2.081156154208573, 2.074097301855756, 2.068660478865261, 2.06629195718434, 2.06156174284104, 2.051866534584155, 2.0505851519625846, 2.0384250603268854, 2.0365541186299323, 2.0347048752910317, 2.0257987139042672, 2.0195497735112555, 2.01575148141836, 2.0088638957024503], "accuracy": [0.09311848133802414, 0.09734513610601425, 0.09906221181154251, 0.09879804402589798, 0.10566636174917221, 0.11610091477632523, 0.12323339283466339, 0.11755382269620895, 0.1216483935713768, 0.12878087162971497, 0.1320829540491104, 0.13908334076404572, 0.13802668452262878, 0.15559370815753937, 0.15638621151447296, 0.15057456493377686, 0.16272619366645813, 0.16140536963939667, 0.1732928305864334, 0.1686699241399765, 0.1834632158279419, 0.18174614012241364, 0.177255317568779, 0.18702945113182068, 0.19653943181037903, 0.1982565075159073, 0.20723815262317657, 0.20723815262317657, 0.21714437007904053, 0.21080438792705536, 0.21925769746303558, 0.22520142793655396, 0.22863557934761047, 0.22823932766914368, 0.23840972781181335, 0.23457930982112885, 0.23457930982112885, 0.24937260150909424, 0.25161802768707275, 0.24382512271404266, 0.2592788338661194, 0.2716946303844452, 0.2674679756164551, 0.27327960729599, 0.2690529525279999, 0.27763834595680237, 0.275260865688324, 0.2782987654209137, 0.28305375576019287, 0.2942807972431183, 0.2895258367061615, 0.2999603748321533, 0.29626205563545227, 0.3051116168498993, 0.31158366799354553, 0.30841368436813354, 0.31303659081459045, 0.3131686747074127, 0.3237352967262268, 0.3195086419582367, 0.3213578164577484, 0.32162198424339294, 0.31805574893951416, 0.3346982002258301, 0.3345661163330078, 0.33747193217277527, 0.35028398036956787, 0.3465856611728668, 0.3357548415660858, 0.34367984533309937, 0.3413023352622986, 0.34803855419158936, 0.3551710546016693, 0.35464271903038025, 0.35622772574424744, 0.36560559272766113, 0.3663980960845947, 0.37102100253105164, 0.36983224749565125, 0.3671905994415283, 0.37326639890670776, 0.3695680797100067, 0.37524765729904175, 0.3803988993167877, 0.3789459764957428, 0.38805970549583435, 0.38145554065704346, 0.3945317566394806, 0.39585259556770325, 0.39387133717536926, 0.3863426148891449, 0.39189010858535767, 0.39941883087158203, 0.39849424362182617, 0.40430590510368347, 0.40774005651474, 0.40589091181755066, 0.4080042243003845, 0.40443798899650574, 0.4123629629611969], "val_loss": [1.9694600105285645, 1.9679742540631975, 1.9664969444274902, 1.9650434766496931, 1.9635765211922782, 1.9621245520455497, 1.960662909916469, 1.959205150604248, 1.9577528408595495, 1.9562911306108748, 1.9548338481358118, 1.953369072505406, 1.9519218036106654, 1.9504566192626953, 1.9489938872201102, 1.9475107192993164, 1.9460289818899972, 1.9445345742361886, 1.943042482648577, 1.9415346554347448, 1.9399899074009486, 1.9384634835379464, 1.9369171687534876, 1.9353581837245397, 1.9337821687970842, 1.9321838787623815, 1.93056058883667, 1.928917748587472, 1.9272546768188477, 1.9255858148847307, 1.9238647052219935, 1.922157151358468, 1.920393466949463, 1.9186229705810547, 1.9168166433061873, 1.915001324244908, 1.913165841783796, 1.911301817212786, 1.909397874559675, 1.9074785368783134, 1.9055143083844865, 1.9035162244524275, 1.9014779499598913, 1.899390356881278, 1.8973089626857214, 1.8951594488961356, 1.8929956299918038, 1.8908058575221471, 1.888566017150879, 1.88627290725708, 1.8839636530194963, 1.8815690449305944, 1.8791259356907435, 1.8766633442470007, 1.8741305215018136, 1.8715729032244002, 1.8689547266278947, 1.866307054247175, 1.8635569981166296, 1.8607543536594935, 1.8579396520342146, 1.8550618035452706, 1.852106707436698, 1.8490945271083288, 1.8460136822291784, 1.8428873334612166, 1.8396709987095423, 1.8364028249468123, 1.8330689838954382, 1.829711982182094, 1.8262638364519392, 1.8227686200823103, 1.819180624825614, 1.8155725342886788, 1.8118137632097517, 1.8079946381705148, 1.8041173389979772, 1.80017123903547, 1.7961277961730957, 1.792055334363665, 1.7879014015197754, 1.7836580957685197, 1.7793421745300293, 1.7749740736825126, 1.7704896926879883, 1.765862260546003, 1.7612216132027763, 1.7564893450055803, 1.7516311236790247, 1.7467248099190849, 1.7417658397129603, 1.7366643633161272, 1.7314961297171456, 1.7262178829738073, 1.720830065863473, 1.715482473373413, 1.7099689756120955, 1.7043369156973702, 1.6986626897539412, 1.6928764751979284], "val_accuracy": [0.04633333161473274, 0.05666666850447655, 0.06833333522081375, 0.07800000160932541, 0.08933333307504654, 0.10599999874830246, 0.11966666579246521, 0.13366666436195374, 0.15399999916553497, 0.1666666716337204, 0.18000000715255737, 0.19499999284744263, 0.21033333241939545, 0.22333332896232605, 0.23800000548362732, 0.25433334708213806, 0.265666663646698, 0.2783333361148834, 0.2879999876022339, 0.2953333258628845, 0.30666667222976685, 0.31700000166893005, 0.3269999921321869, 0.33633333444595337, 0.34166666865348816, 0.35233333706855774, 0.35866665840148926, 0.3656666576862335, 0.3709999918937683, 0.37533333897590637, 0.3779999911785126, 0.38333332538604736, 0.38733333349227905, 0.3889999985694885, 0.3919999897480011, 0.39399999380111694, 0.39666667580604553, 0.3986666798591614, 0.40166667103767395, 0.4059999883174896, 0.4076666533946991, 0.4099999964237213, 0.41066667437553406, 0.41200000047683716, 0.4143333435058594, 0.4180000126361847, 0.4203333258628845, 0.4230000078678131, 0.4259999990463257, 0.42800000309944153, 0.43066665530204773, 0.4323333203792572, 0.43533334136009216, 0.4386666715145111, 0.4423333406448364, 0.4429999887943268, 0.445333331823349, 0.4449999928474426, 0.44699999690055847, 0.4493333399295807, 0.45100000500679016, 0.45233333110809326, 0.45533332228660583, 0.45899999141693115, 0.4593333303928375, 0.4620000123977661, 0.46399998664855957, 0.46666666865348816, 0.468666672706604, 0.4713333249092102, 0.47433334589004517, 0.47733333706855774, 0.47966668009757996, 0.4806666672229767, 0.48233333230018616, 0.4846666753292084, 0.48500001430511475, 0.48633334040641785, 0.4880000054836273, 0.4906666576862335, 0.49266666173934937, 0.4963333308696747, 0.49799999594688416, 0.5006666779518127, 0.5016666650772095, 0.5036666393280029, 0.5056666731834412, 0.5096666812896729, 0.5103333592414856, 0.5120000243186951, 0.512666642665863, 0.5136666893959045, 0.5166666507720947, 0.5203333497047424, 0.5213333368301392, 0.5246666669845581, 0.5273333191871643, 0.527999997138977, 0.5296666622161865, 0.5306666493415833]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [62, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 2, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.30885714292526245, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta)), grad), beta)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.479991244948567, 2.0361442620239996, 2.6060565254864927, 7.934907164036432, 2.3338123547512826, 2.5677749001197276, 2.3413018954507177], "accuracy": [0.19323734939098358, 0.31026285886764526, 0.21872936189174652, 0.1216483935713768, 0.10421344637870789, 0.11108175665140152, 0.10091137140989304], "val_loss": [1.9395116397312708, 2.16703040259225, 2.0297320229666576, 2.0201196670532227, 1.921520165034703, 2.014654976981027, 1.976907457624163], "val_accuracy": [0.11533333361148834, 0.43066665530204773, 0.09666666388511658, 0.10066666454076767, 0.19033333659172058, 0.10366666316986084, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.243428573012352, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 8, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), tf.math.add(beta, beta)), grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.240065810356347, 2.124145208647726, 2.3684268563320576, 2.6667566877928675, 2.3032411123232173, 2.2799873959197816], "accuracy": [0.26218464970588684, 0.24461762607097626, 0.22322018444538116, 0.12402588874101639, 0.09893012791872025, 0.13049794733524323], "val_loss": [1.9519851548331124, 1.9507480348859514, 3.5161514282226562, 1.9744867597307478, 1.9708572115216936, 1.677398409162249], "val_accuracy": [0.24933333694934845, 0.1289999932050705, 0.18833333253860474, 0.10366666316986084, 0.10366666316986084, 0.20399999618530273]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [42, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [5, 0], [23], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 9, 2, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 9, 8, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024584745702614, 2.3024602743770313, 2.3027163919220355, 2.305034973208521, 2.3157191631454186, 2.3816852478571007], "accuracy": [0.10434553027153015, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735772950308663, 1.9736679622105189, 1.9743009294782365, 1.9780237334115165, 1.9989193507603236, 2.170774664197649], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [42, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 3, 0, 2, 13, 13, 8, 5, 3, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), tf.math.add(beta, beta)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028417948356408, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [68, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [5, 0], [23], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.2575172551036307, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19257694482803345, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [38587.904017857145, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.06566666811704636, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), tf.math.add(beta, beta)), grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3038016147522833, 2.303713847271062, 2.3051492293371325, 2.3046694591359973, 2.306927589991656, 2.30705986157101, 2.310373693204685], "accuracy": [0.09245806187391281, 0.09800554811954498, 0.09747721254825592, 0.1006472036242485, 0.10038304328918457, 0.1018359512090683, 0.09919429570436478], "val_loss": [1.973884173801967, 1.973956721169608, 1.9749136652265276, 1.9769838196890694, 1.978846754346575, 1.9772389275687081, 1.9769228526524134], "val_accuracy": [0.10233332961797714, 0.10366666316986084, 0.09799999743700027, 0.09666666388511658, 0.09799999743700027, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [41, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 9, 2, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 0], [64], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 8, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [63, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302780344375703, 2.3025469487731516, 2.302518295904806, 2.3025364668897397, 2.302510034737255, 2.302518690203978, 2.3025211865293227], "accuracy": [0.10540219396352768, 0.107647605240345, 0.10328886657953262, 0.10553427785634995, 0.11081759631633759, 0.10447761416435242, 0.10527011007070541], "val_loss": [1.9736285209655762, 1.9736240250723702, 1.973623548235212, 1.9736157826014928, 1.9736123085021973, 1.9736084938049316, 1.973602226802281], "val_accuracy": [0.10066666454076767, 0.10366666316986084, 0.10199999809265137, 0.10366666316986084, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 8, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [40, 76, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [365116062101.9744, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2740721106529236, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [23], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), tf.math.add(beta, beta)), grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.050080082944626e+30, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06498481333255768, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [42, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 0, 4, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [5, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3038016147522833, 2.3037138337614103, 2.3051493103005676, 2.3046694231732427, 2.3069276799930165, 2.307059780513102, 2.3103744806693514], "accuracy": [0.09245806187391281, 0.09800554811954498, 0.09747721254825592, 0.1006472036242485, 0.10038304328918457, 0.1018359512090683, 0.09919429570436478], "val_loss": [1.973884173801967, 1.973956721169608, 1.9749135971069336, 1.9769838878086634, 1.978846209389823, 1.9772390638078963, 1.976921694619315], "val_accuracy": [0.10233332961797714, 0.10366666316986084, 0.09799999743700027, 0.09666666388511658, 0.09799999743700027, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [42, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [23, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [5, 0], [23], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [42, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 6, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 12, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.07571428269147873, "mapping_values": [1, 4, 4, 2, 2, 0, 13, 13, 8, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, grad)))))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302194929866113, 2.2999704706670427, 2.3009544224739704, 2.299633913162346, 2.3005555360355965, 2.2986064423596493, 2.298420110068159, 2.2997293052829537, 2.2995381813795026, 2.2992146048232818, 2.29900548694597, 2.2991082131382403, 2.2993603162698744, 2.2999206705966313, 2.2995988794557802], "accuracy": [0.09272222965955734, 0.09615638852119446, 0.09734513610601425, 0.09615638852119446, 0.09576013684272766, 0.10421344637870789, 0.10302469879388809, 0.09879804402589798, 0.09708096832036972, 0.09615638852119446, 0.09840179979801178, 0.10606260597705841, 0.10236428678035736, 0.10328886657953262, 0.10077928751707077], "val_loss": [1.9700645038059779, 1.9696214539664132, 1.9692695481436593, 1.9691284043448312, 1.9690815380641393, 1.9691644396100725, 1.969306332724435, 1.9691742488316126, 1.9690839903695243, 1.9691616467067175, 1.9693925721304757, 1.969735894884382, 1.9700371878487724, 1.9703489712306432, 1.9706153869628906], "val_accuracy": [0.04899999871850014, 0.05366666615009308, 0.06266666948795319, 0.07100000232458115, 0.07533333450555801, 0.07733333110809326, 0.0820000022649765, 0.08666666597127914, 0.09133332967758179, 0.09166666865348816, 0.09166666865348816, 0.08866667002439499, 0.08299999684095383, 0.08033332973718643, 0.07800000160932541]}}]