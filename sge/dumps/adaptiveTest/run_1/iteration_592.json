[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8360000252723694, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, grad))))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.09547937258029, 2.131204644245888, 2.3346971138798094, 1.5833739206035455, 1.1649262372292641, 0.8662356901335726, 0.7573352773286222, 0.7679946202454613, 0.7080751108046237, 0.6830901913418668, 0.6727560972257328, 0.6376476344210739, 0.6712979274403229, 0.6043447665235449, 0.5789489815374014, 0.5669509195664209, 0.5465389411399991, 0.5333093640873886, 0.5204464724318636, 0.5388431603197471, 0.5088033653316465, 0.4964757535309918, 0.48289138858879815, 0.46744300040271636, 0.4760121229916453, 0.45157991818716625, 0.45226106958508316, 0.443896304736788, 0.429985166902886, 0.42925369539958075, 0.41599808657142573, 0.45575841775565273, 0.40412736203156885, 0.4098602540740846, 0.3854099473602437, 0.3841165376140961, 0.3795030842666943, 0.36565374669114187, 0.3683183265951064, 0.3589597979730005, 0.3496565028440526, 0.3529636786480338, 0.34596868837750455, 0.33248031831389135, 0.33315658649244423, 0.3299589931350799, 0.3223794171279841], "accuracy": [0.2911108136177063, 0.2907145619392395, 0.2786950170993805, 0.4593845009803772, 0.6180161237716675, 0.6778497099876404, 0.7152291536331177, 0.7176066637039185, 0.7290979027748108, 0.746268630027771, 0.7471932172775269, 0.7559106945991516, 0.7470611333847046, 0.7736098170280457, 0.7821952104568481, 0.7828556299209595, 0.7965922355651855, 0.798309326171875, 0.7993659973144531, 0.7967243194580078, 0.8072909712791443, 0.8121780753135681, 0.8219521641731262, 0.8256505131721497, 0.8212917447090149, 0.8317263126373291, 0.83119797706604, 0.8360850811004639, 0.8407079577445984, 0.8364813327789307, 0.8411042094230652, 0.8224804997444153, 0.8469158411026001, 0.845859169960022, 0.8555012345314026, 0.8540483713150024, 0.8588033318519592, 0.8651432991027832, 0.8569541573524475, 0.8643507957458496, 0.8709549307823181, 0.8652753829956055, 0.8671245574951172, 0.8782195448875427, 0.8757099509239197, 0.8722757697105408, 0.8794082403182983], "val_loss": [1.9655818939208984, 3.365004130772182, 1.7921041761125838, 1.3004148687635149, 0.7203585590635028, 0.5872081688472203, 0.5902997766222272, 0.5344212906701225, 0.5214154720306396, 0.5370147739137922, 0.492594838142395, 0.53934645652771, 0.4792275939668928, 0.4503325734819685, 0.43560502358845304, 0.4370771731649126, 0.4223876340048654, 0.41433675800051006, 0.47701583589826313, 0.41399102551596506, 0.42480288233075825, 0.3880146827016558, 0.38950673171452116, 0.3987811122621809, 0.3830066578728812, 0.38876086473464966, 0.38907872779028757, 0.384992207799639, 0.36419168540409635, 0.35099022729056223, 0.3977384396961757, 0.35353392362594604, 0.3534598435674395, 0.35363214356558664, 0.3492353473390852, 0.3445113812174116, 0.3432399034500122, 0.3408211725098746, 0.3505966237613133, 0.33827158382960726, 0.35705381631851196, 0.32739971365247456, 0.3287135362625122, 0.34055506331580027, 0.34218636580875944, 0.3358124239104135, 0.3255606549126761], "val_accuracy": [0.10000000149011612, 0.22166666388511658, 0.33933332562446594, 0.5986666679382324, 0.675000011920929, 0.7233333587646484, 0.7413333058357239, 0.7736666798591614, 0.768666684627533, 0.7369999885559082, 0.7883333563804626, 0.7586666941642761, 0.7826666831970215, 0.800000011920929, 0.8119999766349792, 0.8186666369438171, 0.8273333311080933, 0.8223333358764648, 0.7839999794960022, 0.8146666884422302, 0.8046666383743286, 0.8360000252723694, 0.8330000042915344, 0.8286666870117188, 0.8386666774749756, 0.8346666693687439, 0.8306666612625122, 0.8379999995231628, 0.8460000157356262, 0.8566666841506958, 0.8320000171661377, 0.8543333411216736, 0.8506666421890259, 0.856333315372467, 0.8573333621025085, 0.8506666421890259, 0.8583333492279053, 0.8566666841506958, 0.8510000109672546, 0.8610000014305115, 0.859333336353302, 0.8673333525657654, 0.8610000014305115, 0.862333357334137, 0.8600000143051147, 0.856333315372467, 0.8669999837875366]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 4, 2, 2, 8, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8322857022285461, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 8, 6, 2, 8, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.square(sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0954714666630347, 2.159333107541061, 1.972881999974395, 1.1208128755150248, 0.9260323886165309, 0.7730804556128749, 0.7380505402987864, 0.6824121249271595, 0.6457900490743168, 0.6217020488197872, 0.617835122124079, 0.577173603705254, 0.6125491414607366, 0.5654906495498266, 0.5123892050409172, 0.520311187279144, 0.4954507655676062, 0.4921049626275706, 0.4810810286323896, 0.5056013381161537, 0.46153766184498085, 0.45590970532265257, 0.44212389554424436, 0.4245266153150782, 0.41800792650886104, 0.411059922364882, 0.41464611843450744, 0.4010998529410712, 0.38176226186446854, 0.3844186892055675, 0.3809778381844144, 0.38909820401594547, 0.38594085238298265], "accuracy": [0.2911108136177063, 0.28780874609947205, 0.3144895136356354, 0.5881653428077698, 0.6498481035232544, 0.7099458575248718, 0.7149649858474731, 0.7405890822410583, 0.7578919529914856, 0.7703077793121338, 0.7662131786346436, 0.7792893648147583, 0.7687227725982666, 0.7868181467056274, 0.802800178527832, 0.8012151718139648, 0.8121780753135681, 0.8128384351730347, 0.8230088353157043, 0.8096684813499451, 0.8272355198860168, 0.8265751004219055, 0.8310658931732178, 0.8400475382804871, 0.8417646288871765, 0.8471800088882446, 0.8418967127799988, 0.8506141901016235, 0.8599920868873596, 0.8537842035293579, 0.8560295701026917, 0.8504821062088013, 0.8555012345314026], "val_loss": [1.9655797822134835, 1.9733505249023438, 1.0474931853158134, 0.8264276300157819, 0.645318763596671, 0.5834813969475883, 0.5593962328774589, 0.5093494824000767, 0.4769043581826346, 0.5483727625438145, 0.46780385289873394, 0.512427636555263, 0.4362850785255432, 0.44696511541094097, 0.40817724806921823, 0.41144505568913053, 0.4249152626310076, 0.39055303164890837, 0.42546881096703665, 0.4121658631733486, 0.4066295198031834, 0.39766678639820646, 0.38452515431812834, 0.37407933814185007, 0.3681858777999878, 0.35794797113963533, 0.38527877841676983, 0.3655517356736319, 0.3646285193307059, 0.35549665348870413, 0.4033163785934448, 0.35739810126168386, 0.36832060132707867], "val_accuracy": [0.10066666454076767, 0.32199999690055847, 0.5830000042915344, 0.6053333282470703, 0.7139999866485596, 0.7300000190734863, 0.7486666440963745, 0.7606666684150696, 0.7876666784286499, 0.7353333234786987, 0.7910000085830688, 0.7816666960716248, 0.8103333115577698, 0.8069999814033508, 0.824999988079071, 0.8213333487510681, 0.815666675567627, 0.8296666741371155, 0.8146666884422302, 0.8096666932106018, 0.8096666932106018, 0.8213333487510681, 0.8389999866485596, 0.8399999737739563, 0.8383333086967468, 0.8450000286102295, 0.8353333473205566, 0.8496666550636292, 0.8463333249092102, 0.8476666808128357, 0.8233333230018616, 0.8403333425521851, 0.8403333425521851]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8291428685188293, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 9, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.09549430745263, 2.1632775544584892, 2.046849961451504, 2.1415425816610143, 1.719525977919965, 1.324514611207294, 1.0933983878310898, 0.947354481456743, 0.8188216106971304, 0.782897996722967, 0.7413488237723352, 0.7055909284007327, 0.6872805560883781, 0.6428162043183755, 0.6032849858623092, 0.626676412211937, 0.5906568559846386, 0.5665539991523391, 0.5452942263023524, 0.551379741135684, 0.5292093442919515, 0.5291455921290998, 0.5084138434986003, 0.48636040987827994, 0.49611137398576316, 0.4743052302980152, 0.4684622927569222, 0.459926515160267, 0.4480014227644611, 0.44401768473444553, 0.4426457334141044, 0.4440818339165065, 0.4315023767146704, 0.4247352143698176, 0.41779296410129435, 0.4169463809289795, 0.41864117410409374, 0.3827199354037601, 0.387247694273194, 0.38910831009722846], "accuracy": [0.2911108136177063, 0.2863558232784271, 0.29612997174263, 0.22916391491889954, 0.39664509892463684, 0.5379738211631775, 0.5923920273780823, 0.6406022906303406, 0.6972658634185791, 0.7020208835601807, 0.7279091477394104, 0.7401928305625916, 0.7424382567405701, 0.7577598690986633, 0.7729493975639343, 0.7644960880279541, 0.7821952104568481, 0.787082314491272, 0.7923656105995178, 0.7918372750282288, 0.8010830879211426, 0.8075551390647888, 0.8086118102073669, 0.8170651197433472, 0.8113855719566345, 0.8226125836372375, 0.8255184292793274, 0.829216718673706, 0.8305375576019287, 0.8314621448516846, 0.832650899887085, 0.8333113193511963, 0.8359529972076416, 0.8400475382804871, 0.8417646288871765, 0.8418967127799988, 0.8444063067436218, 0.8525954484939575, 0.8495575189590454, 0.8529917001724243], "val_loss": [1.965583665030343, 1.8776961735316686, 1.941662379673549, 1.6291407176426478, 1.1799772466932024, 0.8834898471832275, 0.8150687558310372, 0.6773842232567924, 0.5540924412863595, 0.540160059928894, 0.5385204383305141, 0.5237058571406773, 0.5080687659127372, 0.48385727405548096, 0.44275571618761334, 0.45318429810660227, 0.4349274975912912, 0.4219139303479876, 0.43158683606556486, 0.4258930853434971, 0.4179319909640721, 0.40357261896133423, 0.4081017885889326, 0.41327305350984844, 0.38633602006094797, 0.3977430888584682, 0.39639306919915335, 0.3724339689527239, 0.3707933170454843, 0.3637240614209856, 0.38068962948662893, 0.3626218949045454, 0.3718413880893162, 0.3616178461483547, 0.35830221857343403, 0.363240693296705, 0.3593971984727042, 0.34678246293749126, 0.36673864296504427, 0.34760791063308716], "val_accuracy": [0.09966666996479034, 0.3323333263397217, 0.12166666984558105, 0.4413333237171173, 0.5429999828338623, 0.6103333234786987, 0.6293333172798157, 0.7126666903495789, 0.762666642665863, 0.7570000290870667, 0.7710000276565552, 0.7573333382606506, 0.7556666731834412, 0.7933333516120911, 0.8133333325386047, 0.7993333339691162, 0.8136666417121887, 0.8220000267028809, 0.8146666884422302, 0.8146666884422302, 0.8143333196640015, 0.82833331823349, 0.8183333277702332, 0.8213333487510681, 0.8316666483879089, 0.8286666870117188, 0.8393333554267883, 0.8416666388511658, 0.8339999914169312, 0.8479999899864197, 0.8373333215713501, 0.8486666679382324, 0.8396666646003723, 0.8460000157356262, 0.8553333282470703, 0.8413333296775818, 0.8489999771118164, 0.8513333201408386, 0.8533333539962769, 0.8486666679382324]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 3, 0, 8, 3, 7, 0, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.824571430683136, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 8, 8, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0954862713829527, 2.1347503847276625, 2.223834792620722, 1.6600042343328594, 1.3959912631363995, 0.9064352179341989, 0.7892358393213138, 0.7467497399281265, 0.7007130408378373, 0.6702729742587785, 0.656097045545927, 0.6480346313793236, 0.7043833689855908, 0.5959340988715816, 0.5714529467658785, 0.569369659620962, 0.5400802904761872, 0.5254787246722115, 0.5156848363872564, 0.5157974382999976, 0.5001881700843128, 0.4718115375325696, 0.4834030156303406, 0.4560615702619201, 0.451312554782455, 0.43478447128800257, 0.43515008958402235, 0.4297590782149215, 0.42629698677432065, 0.4004437419338753, 0.3982295314940668, 0.41022169847435497, 0.38420989006076744, 0.3842411162657682, 0.3766006763545734, 0.3683130128303964, 0.36563244906430387, 0.3345098590192668, 0.33669954175804867, 0.3442120793441724, 0.3500436778278588, 0.32637200329864596, 0.3275507372234318, 0.31368942686500895, 0.31237899098634375, 0.31084672725038476, 0.2986294144747075, 0.30324448112719693, 0.2937321395976999, 0.29733930240217815, 0.2923286067708892, 0.28959330422586027, 0.2876396406485719], "accuracy": [0.2911108136177063, 0.294148713350296, 0.2977149784564972, 0.4419495463371277, 0.5190860033035278, 0.6682076454162598, 0.703209638595581, 0.7194558382034302, 0.7313432693481445, 0.7466648817062378, 0.7547219395637512, 0.754589855670929, 0.7382115721702576, 0.7757231593132019, 0.7833839654922485, 0.7815347909927368, 0.7993659973144531, 0.7980451583862305, 0.8013472557067871, 0.8094043135643005, 0.8090080618858337, 0.8220842480659485, 0.8131026029586792, 0.8272355198860168, 0.8260467648506165, 0.835160493850708, 0.8360850811004639, 0.8389908671379089, 0.8338396549224854, 0.8461233377456665, 0.8488970994949341, 0.8441421389579773, 0.8520671129226685, 0.852331280708313, 0.8573504090309143, 0.8602562546730042, 0.8597279191017151, 0.8761062026023865, 0.8671245574951172, 0.8710870146751404, 0.8667283058166504, 0.8771628737449646, 0.8805969953536987, 0.8776912093162537, 0.8768987059593201, 0.8792761564254761, 0.884691596031189, 0.8819178342819214, 0.8886540532112122, 0.8858803510665894, 0.8891823887825012, 0.886672854423523, 0.8868049383163452], "val_loss": [1.9654737881251745, 2.8223351751055037, 1.637429986681257, 1.0219297749655587, 0.7346521615982056, 0.6095355919429234, 0.5765766075679234, 0.5439954144614083, 0.5107239484786987, 0.49738803931644987, 0.5277225800922939, 0.5585463387625558, 0.4539405107498169, 0.4510561227798462, 0.43533337116241455, 0.42944003854479107, 0.4200621928487505, 0.42222724642072407, 0.44603330748421804, 0.4286106824874878, 0.3954844389642988, 0.3873226302010672, 0.39610306705747333, 0.3988813502447946, 0.36253773314612253, 0.3672798275947571, 0.406889660017831, 0.3598307967185974, 0.3546712398529053, 0.35026006187711445, 0.3950468727520534, 0.3368339794022696, 0.3351437449455261, 0.34726825782230925, 0.34291977541787283, 0.3440431697028024, 0.3339683413505554, 0.32154202461242676, 0.3594191755567278, 0.3313108767781939, 0.3346025858606611, 0.3237529056412833, 0.3246753896985735, 0.3288258399282183, 0.32729980775288176, 0.32784066029957365, 0.32795636143003193, 0.3188472730772836, 0.3333911384854998, 0.32303243024008615, 0.33082189730235506, 0.3317995412009103, 0.31717423030308317], "val_accuracy": [0.10066666454076767, 0.2536666691303253, 0.41066667437553406, 0.6050000190734863, 0.7009999752044678, 0.7269999980926514, 0.7409999966621399, 0.7580000162124634, 0.7803333401679993, 0.7726666927337646, 0.7506666779518127, 0.7583333253860474, 0.8066666722297668, 0.8013333082199097, 0.8066666722297668, 0.8203333616256714, 0.8180000185966492, 0.8136666417121887, 0.7946666479110718, 0.8059999942779541, 0.8259999752044678, 0.8393333554267883, 0.8233333230018616, 0.8326666951179504, 0.8460000157356262, 0.8386666774749756, 0.8140000104904175, 0.8486666679382324, 0.8456666469573975, 0.8500000238418579, 0.8346666693687439, 0.856333315372467, 0.8610000014305115, 0.8579999804496765, 0.8619999885559082, 0.8523333072662354, 0.8606666922569275, 0.8653333187103271, 0.8519999980926514, 0.8569999933242798, 0.859666645526886, 0.8700000047683716, 0.8569999933242798, 0.859000027179718, 0.871999979019165, 0.8643333315849304, 0.8656666874885559, 0.8726666569709778, 0.8666666746139526, 0.8676666617393494, 0.8653333187103271, 0.8606666922569275, 0.8653333187103271]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 8, 2, 1, 3, 8, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8094285726547241, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 7, 7, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.095490196235837, 2.1158508783664685, 2.347914014336865, 1.474607226445832, 1.1577037061603865, 1.003996045361767, 0.8790790147832388, 0.8951165188320908, 0.8091989782555323, 0.7146596852594033, 0.7441229822062199, 0.6602684925764842, 0.635080102443884, 0.62915091695031, 0.5785416513937276, 0.591277440509713, 0.5566651645573989, 0.5401876258213979, 0.530565297842939, 0.5285237198925573, 0.5207013294382212, 0.4988818127701799, 0.48675573304376235, 0.47672593419609477, 0.4652331191212384, 0.45567448692094414, 0.4453660304189563, 0.4420473417585804, 0.4337414079346378, 0.4146158875585815, 0.40904305144512676, 0.41694884282282046, 0.39497605071264946, 0.4045504032896337, 0.3938253519557423, 0.37605279775784395, 0.3811180603786026, 0.3688689786224884, 0.3545101881302768, 0.36035181496751434, 0.35614668295572716, 0.3394919616781473, 0.3621605802772697], "accuracy": [0.2911108136177063, 0.29322415590286255, 0.2903183102607727, 0.5106326937675476, 0.5970149040222168, 0.6411306262016296, 0.6762647032737732, 0.6622639298439026, 0.6942279934883118, 0.728701651096344, 0.713908314704895, 0.7514199018478394, 0.7618544697761536, 0.7640998363494873, 0.7808743715286255, 0.7732135653495789, 0.789459764957428, 0.7975168228149414, 0.7993659973144531, 0.8000264167785645, 0.809140145778656, 0.8067626357078552, 0.8171972036361694, 0.819970965385437, 0.8206313848495483, 0.8333113193511963, 0.8269713521003723, 0.8342359066009521, 0.8380662798881531, 0.843481719493866, 0.8469158411026001, 0.8378021121025085, 0.8508783578872681, 0.8449346423149109, 0.8556333184242249, 0.8576145768165588, 0.8507462739944458, 0.8623695969581604, 0.8659358024597168, 0.8558974862098694, 0.8621054291725159, 0.8739928603172302, 0.8595958352088928], "val_loss": [1.9655145917619978, 3.61982604435512, 1.4278908116476876, 1.121810027531215, 0.7948108570916312, 0.6690750632967267, 0.6671256167548043, 0.6313820225851876, 0.5342121975762504, 0.5628963708877563, 0.5061261143003192, 0.5130842583520072, 0.46395948954990934, 0.4598179885319301, 0.4249583567891802, 0.43272750718253, 0.4210806403841291, 0.404497035912105, 0.428135165146419, 0.4271400656018938, 0.4132441537720816, 0.4170032739639282, 0.3953408088002886, 0.3865349292755127, 0.36948271308626446, 0.38229525089263916, 0.39709082671574186, 0.385312591280256, 0.3575628229549953, 0.34890174865722656, 0.3628060988017491, 0.339886086327689, 0.3522297058786665, 0.3453840783664158, 0.3328354614121573, 0.33214363881519865, 0.3474398170198713, 0.3241380623408726, 0.3511430025100708, 0.3321448990276882, 0.34884061983653475, 0.3272822158677237, 0.32312075580869404], "val_accuracy": [0.1003333330154419, 0.20666666328907013, 0.47200000286102295, 0.5786666870117188, 0.6553333401679993, 0.7116666436195374, 0.7059999704360962, 0.7146666646003723, 0.7633333206176758, 0.7260000109672546, 0.7823333144187927, 0.7753333449363708, 0.7923333048820496, 0.7993333339691162, 0.8143333196640015, 0.8100000023841858, 0.8100000023841858, 0.8246666789054871, 0.7996666431427002, 0.7983333468437195, 0.8083333373069763, 0.8159999847412109, 0.8316666483879089, 0.8343333601951599, 0.8456666469573975, 0.8293333053588867, 0.824999988079071, 0.8289999961853027, 0.8416666388511658, 0.8503333330154419, 0.8376666903495789, 0.8550000190734863, 0.8456666469573975, 0.8536666631698608, 0.8613333106040955, 0.8583333492279053, 0.8556666374206543, 0.8656666874885559, 0.8510000109672546, 0.8600000143051147, 0.8489999771118164, 0.8636666536331177, 0.8610000014305115]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8088571429252625, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 7, 7, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(alpha, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0954828644945103, 2.160013700347173, 2.0812262760067126, 1.3794190352382818, 0.9871082592948931, 0.8096636627186811, 0.7559581227337822, 0.7009085998118215, 0.6656262497183292, 0.6201752051543786, 0.6345168173415486, 0.58869169937259, 0.6147255571274914, 0.5762103679094804, 0.528612842078474, 0.5281863871889501, 0.5024333946803431, 0.4974444334013524, 0.4857807527120953, 0.49840264437835075, 0.46909542903530443, 0.45500329308080917, 0.46178342630488134, 0.43707326691479115, 0.42870812132814856, 0.42235134927950296], "accuracy": [0.2911108136177063, 0.28939375281333923, 0.29718664288520813, 0.5171047449111938, 0.6320168972015381, 0.6936996579170227, 0.7135120630264282, 0.7345132827758789, 0.7489103078842163, 0.769911527633667, 0.7580240368843079, 0.7725531458854675, 0.7670056819915771, 0.7837802171707153, 0.7969884872436523, 0.7975168228149414, 0.8157442808151245, 0.8119139075279236, 0.817989706993103, 0.81112140417099, 0.8226125836372375, 0.8302733898162842, 0.8208954930305481, 0.837141752243042, 0.8355567455291748, 0.8399154543876648], "val_loss": [1.9654252869742257, 2.081294059753418, 1.4479852403913225, 0.898073843547276, 0.6057785749435425, 0.6235889196395874, 0.5715485470635551, 0.5380620275224958, 0.49127519130706787, 0.5210167169570923, 0.4769860506057739, 0.4954405001231602, 0.4351203867367336, 0.44167968205043245, 0.4129967519215175, 0.4067215153149196, 0.42331203392573763, 0.39503921781267437, 0.4182471036911011, 0.38920276505606516, 0.3824091638837542, 0.4013006942612784, 0.39549891437803, 0.38234702178410124, 0.3826325365475246, 0.3702734283038548], "val_accuracy": [0.10133333504199982, 0.3293333351612091, 0.5519999861717224, 0.5786666870117188, 0.734333336353302, 0.7106666564941406, 0.7379999756813049, 0.7406666874885559, 0.7746666669845581, 0.7483333349227905, 0.7853333353996277, 0.7789999842643738, 0.8143333196640015, 0.8059999942779541, 0.8180000185966492, 0.82833331823349, 0.8190000057220459, 0.8296666741371155, 0.8133333325386047, 0.8303333520889282, 0.8410000205039978, 0.8236666917800903, 0.8266666531562805, 0.8349999785423279, 0.8339999914169312, 0.8360000252723694]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 6, 2, 2, 8, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8080000281333923, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.sqrt(grad), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0954899917330962, 2.104942975625575, 2.4129737889399823, 1.7077561652482445, 1.1487559233327755, 0.8633293495469829, 0.778802506841169, 0.7568239278450712, 0.6921755020817777, 0.6530588767343052, 0.6491189140055426, 0.6512182480891178, 0.629017331990363, 0.5908763155236835, 0.5482794532544735, 0.5484446605371998, 0.5243080040608982, 0.5524443308627837, 0.5003033072925467, 0.5249700772685145, 0.48296848356353766, 0.4809533166351603, 0.467316635816073, 0.4618506950473017, 0.46413993190670405], "accuracy": [0.2911108136177063, 0.2945449650287628, 0.2926958203315735, 0.4243825078010559, 0.5861841440200806, 0.6778497099876404, 0.7092854380607605, 0.7162858247756958, 0.7367587089538574, 0.7556465268135071, 0.7564390301704407, 0.7567031979560852, 0.7631752490997314, 0.7788931727409363, 0.7918372750282288, 0.7930260300636292, 0.8063663840293884, 0.791969358921051, 0.8076872229576111, 0.8004226684570312, 0.8162726163864136, 0.8191784620285034, 0.8290846943855286, 0.8215559124946594, 0.8259146809577942], "val_loss": [1.965489115033831, 3.8990027563912526, 1.7237068584987096, 0.9905052525656564, 0.7049394845962524, 0.6241140535899571, 0.6094975982393537, 0.5563126972743443, 0.4868600198200771, 0.5213700022016253, 0.594757046018328, 0.5206504719597953, 0.4501242297036307, 0.4411471571241106, 0.4179439970425197, 0.4146855814116342, 0.4129376070840018, 0.4060779469353812, 0.4612795284816197, 0.3919478569711958, 0.3997367535318647, 0.3858270985739572, 0.40512561798095703, 0.4108729362487793, 0.3740054028374808], "val_accuracy": [0.1003333330154419, 0.18466666340827942, 0.31333333253860474, 0.624666690826416, 0.6803333163261414, 0.7133333086967468, 0.7126666903495789, 0.731333315372467, 0.7789999842643738, 0.7473333477973938, 0.7403333187103271, 0.781333327293396, 0.8086666464805603, 0.8106666803359985, 0.8173333406448364, 0.8196666836738586, 0.8206666707992554, 0.8226666450500488, 0.7913333177566528, 0.8366666436195374, 0.8223333358764648, 0.8363333344459534, 0.8276666402816772, 0.8220000267028809, 0.8343333601951599]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 57, 85, 46], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 3, 3, 3, 3, 1, 2, 1, 4, 4, 3, 1, 4, 1, 3], [75, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8065714240074158, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.206574788261729, 1.8546152351838157, 1.5858431265354471, 1.2747583293077134, 1.1747865572644578, 1.1230375353906763, 0.9207512518796214, 0.8205661508290996, 0.7827679758153147, 0.7904640717938466, 0.7524494435950639, 0.7237279710516465, 0.707016515898714, 0.6599857165844623, 0.6337022019604084, 0.6395074298762532, 0.6144032550840614, 0.5819825216165355, 0.5864572760892219, 0.5786394037748167, 0.599274434260468, 0.5805031780112673, 0.554038390082265, 0.5436994017406525, 0.5419696768387323, 0.5217094894381972], "accuracy": [0.27063795924186707, 0.3877955377101898, 0.4391758143901825, 0.5251618027687073, 0.579051673412323, 0.5980715751647949, 0.6493197679519653, 0.6911900639533997, 0.6985867023468018, 0.700700044631958, 0.7238145470619202, 0.7322678565979004, 0.7325320243835449, 0.7481178045272827, 0.7574957013130188, 0.7490423917770386, 0.7689869403839111, 0.7778365015983582, 0.7717606425285339, 0.7821952104568481, 0.7827235460281372, 0.7869502305984497, 0.7881389260292053, 0.7909126877784729, 0.7931581139564514, 0.7991018295288086], "val_loss": [1.5528389726366316, 1.563835825238909, 1.0098755700247628, 0.917778560093471, 0.9909239837101528, 0.8303017275674003, 0.6638045821871076, 0.6504189457212176, 0.6138204676764352, 0.5892505645751953, 0.5815663678305489, 0.5804921729224068, 0.5204066719327655, 0.5288927384785244, 0.5065199307032994, 0.481383068220956, 0.4885246753692627, 0.4561340297971453, 0.46927850587027414, 0.4635843549455915, 0.45343971252441406, 0.47906019006456646, 0.4583590200969151, 0.4917826311928885, 0.4401911497116089, 0.43758019379207064], "val_accuracy": [0.406333327293396, 0.4506666660308838, 0.6076666712760925, 0.5983333587646484, 0.5993333458900452, 0.6136666536331177, 0.6866666674613953, 0.6980000138282776, 0.7239999771118164, 0.7473333477973938, 0.734333336353302, 0.734666645526886, 0.7549999952316284, 0.7553333044052124, 0.7680000066757202, 0.7893333435058594, 0.7713333368301392, 0.7996666431427002, 0.7960000038146973, 0.7929999828338623, 0.8043333292007446, 0.7733333110809326, 0.7873333096504211, 0.7996666431427002, 0.8006666898727417, 0.7990000247955322]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 3, 4, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8054285645484924, "mapping_values": [1, 4, 4, 2, 2, 1, 38, 38, 22, 16, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, alpha))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.square(tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.095490595069717, 2.1593026350580895, 2.1829440824548723, 2.1542021487886878, 2.48507325306954, 1.6983231585086564, 1.250661378995759, 1.0069145075696382, 0.81474965420287, 0.7332043309316281, 0.7002771783970949, 0.6601434383394224, 0.6481351817619405, 0.6249268591018196, 0.581491587554396, 0.5863031544044206, 0.557001783941967, 0.5494582165485801, 0.5360691651983378, 0.5469829286283207, 0.5144288710095485, 0.5018569743195544, 0.49710143319037237, 0.502571840930089, 0.48719615659000787, 0.47260205582494763], "accuracy": [0.2911108136177063, 0.29084664583206177, 0.29097872972488403, 0.24633470177650452, 0.2413155436515808, 0.4227975308895111, 0.5828820466995239, 0.6415268778800964, 0.6930392384529114, 0.7264562249183655, 0.7334566116333008, 0.7471932172775269, 0.7576277852058411, 0.7666094303131104, 0.7779685854911804, 0.7720248103141785, 0.7891955971717834, 0.796328067779541, 0.7936864495277405, 0.7936864495277405, 0.8059701323509216, 0.8105930685997009, 0.8096684813499451, 0.8178576231002808, 0.817989706993103, 0.8202351331710815], "val_loss": [1.965604645865304, 2.366614614214216, 1.874145575932094, 1.6780354976654053, 1.4559856823512487, 1.1371205193655831, 0.8473501205444336, 0.6636747462408883, 0.5720582689557757, 0.5414668321609497, 0.531714814049857, 0.5138266086578369, 0.48055922985076904, 0.47372826508113314, 0.46172521795545307, 0.4411810977118356, 0.4492746761866978, 0.4461967774799892, 0.4483163186482021, 0.43611899444035124, 0.41054363761629376, 0.41566778080804007, 0.40998196601867676, 0.4316555602209909, 0.3947727680206299, 0.39178333963666645], "val_accuracy": [0.10000000149011612, 0.2996666729450226, 0.10266666859388351, 0.4286666810512543, 0.38066667318344116, 0.5413333177566528, 0.6693333387374878, 0.7206666469573975, 0.7426666617393494, 0.7480000257492065, 0.7639999985694885, 0.7806666493415833, 0.7893333435058594, 0.7883333563804626, 0.7919999957084656, 0.8196666836738586, 0.809333324432373, 0.8083333373069763, 0.7986666560173035, 0.8136666417121887, 0.8306666612625122, 0.8203333616256714, 0.8240000009536743, 0.8119999766349792, 0.828000009059906, 0.8289999961853027]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 2, 9, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.803428590297699, "mapping_values": [1, 4, 4, 2, 2, 1, 26, 26, 17, 9, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))), tf.math.add(beta, grad))), grad), tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), tf.math.square(tf.math.add(beta, beta))))))), tf.math.sqrt(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0954765638324484, 2.174882966797224, 1.9073677497249568, 1.2799963859629402, 1.1365641333470806, 0.7941529276962719, 0.7217334719255947, 0.687166807784097, 0.6397961574444099, 0.6023193498360656, 0.6046587064470582, 0.5670901144484581, 0.5612958644154742, 0.5448114823482575, 0.5056461761805832, 0.5309060799990505, 0.4902023187623347, 0.4774342276369497, 0.4668235931776266, 0.47764112842774203, 0.45371651168449634, 0.4342461008799468], "accuracy": [0.29097872972488403, 0.28278958797454834, 0.3085457682609558, 0.5385021567344666, 0.598599910736084, 0.6946242451667786, 0.7280412316322327, 0.7371549606323242, 0.7582882046699524, 0.7703077793121338, 0.7666094303131104, 0.7840443849563599, 0.7874785661697388, 0.7959318161010742, 0.8014793395996094, 0.798309326171875, 0.8193105459213257, 0.8195747137069702, 0.8239334225654602, 0.8215559124946594, 0.8277638554573059, 0.8366134166717529], "val_loss": [1.9655801228114538, 1.607088872364589, 1.1399726186479842, 1.0255156925746374, 0.6200249705995832, 0.5615542445863996, 0.5646070241928101, 0.5075266531535557, 0.4856499603816441, 0.4879404476710728, 0.45052696977342876, 0.45695602893829346, 0.40708753892353605, 0.4284237963812692, 0.3908660496984209, 0.38844129868916105, 0.3845787388937814, 0.3824077418872288, 0.39413452999932425, 0.38085360186440603, 0.38243123463221956, 0.3831291539328439], "val_accuracy": [0.10100000351667404, 0.27900001406669617, 0.5253333449363708, 0.5613333582878113, 0.7356666922569275, 0.7379999756813049, 0.7303333282470703, 0.7710000276565552, 0.777999997138977, 0.7639999985694885, 0.8006666898727417, 0.8053333163261414, 0.8256666660308838, 0.8106666803359985, 0.828000009059906, 0.8383333086967468, 0.8416666388511658, 0.8309999704360962, 0.8270000219345093, 0.8299999833106995, 0.8353333473205566, 0.8309999704360962]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [85, 66, 89, 57, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 1, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.19057142734527588, "mapping_values": [1, 4, 4, 2, 2, 1, 23, 23, 14, 9, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.math.multiply(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, alpha))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [5.287494323131131, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16219785809516907, 0.11015717685222626, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.8884214673723494, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.16633333265781403, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 9, 2, 2, 2, 1, 3, 6, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 2, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad))))))), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [85, 66, 89, 57, 85, 46], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), alpha)))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 2, 2, 8, 1, 3, 9, 8, 3, 7, 2, 2, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 1, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 80, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 3, 14, 14, 9, 5, 2, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 3, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 6, 7, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad)))), tf.math.add(beta, grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30194123262711, 2.302381933483355, 2.3026086583412746, 2.30239654862728, 2.302375644441483, 2.3032555683114824, 2.303229096259864, 2.304029043907062, 2.305845487607453, 2.3107875553907546, 2.3213373487966567], "accuracy": [0.09866596013307571, 0.10170386731624603, 0.1002509593963623, 0.10381719470024109, 0.09919429570436478, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737224578857422, 1.9737368311200822, 1.9736906460353307, 1.9737659181867326, 1.9739762714930944, 1.9740093776157923, 1.9741995675223214, 1.975151811327253, 1.977757181440081, 1.9839019775390625, 1.9986348833356584], "val_accuracy": [0.10199999809265137, 0.10066666454076767, 0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [77, 66, 89, 57, 85, 46], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 9, 3, 8, 3, 7, 0, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 0, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 23, 23, 14, 9, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, grad), alpha), grad)), tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.multiply(grad, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), alpha))))))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [85, 66, 89, 57, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [5.36462554533594, 12080321970861.69, Infinity, 2.91706711435677, 2.900942967253244, 3.101349541382342, 3.101956561131012, 2.9757019288472812], "accuracy": [0.160084530711174, 0.1302337795495987, 0.1010434553027153, 0.10434553027153015, 0.09998679161071777, 0.09945846349000931, 0.10355303436517715, 0.10051512718200684], "val_loss": [2.0684561729431152, Infinity, 2.3419906752450124, 2.69555595942906, 2.3565246718270436, 2.7651284081595287, 2.1242996624537875, 2.6710543632507324], "val_accuracy": [0.0963333323597908, 0.09066666662693024, 0.10366666316986084, 0.10066666454076767, 0.09566666930913925, 0.10199999809265137, 0.09566666930913925, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 0, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 1, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 7, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, beta)))), tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 8, 2, 2, 8, 0, 2, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 0, 2, 1, 4, 4, 3, 1, 4, 1, 3], [32, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 8, 8, 4, 4, 3, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301520260239101, 2.3028345481515826, 2.3030540105484385, 2.302585214120585, 2.3011936942080244, 2.3025232261087853], "accuracy": [0.08915598690509796, 0.09034473448991776, 0.09206181764602661, 0.08585391938686371, 0.09140139818191528, 0.08730682730674744], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [5, 66, 89, 57, 85, 46], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 5, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 0, 3, 3, 3, 2, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 70, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0], [6, 1, 4, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 1, 14, 14, 8, 6, 2, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.add(grad, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301520260239101, 2.3028345481515826, 2.3030540105484385, 2.302585214120585, 2.3011936942080244, 2.3025232261087853], "accuracy": [0.08915598690509796, 0.09034473448991776, 0.09206181764602661, 0.08585391938686371, 0.09140139818191528, 0.08730682730674744], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]