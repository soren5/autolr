[{"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 2, 0, 2, 2, 0, 2, 0, 0], [31, 32, 29, 49, 25], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1], [4, 7, 6, 5, 0, 7, 3, 9], [3, 3, 0, 3, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [3, 1, 2], [23, 52, 13]], "fitness": -0.7525714039802551, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2998415766894746, 2.2895512784303627, 2.2803943353385154, 2.2696324407211965, 2.2588711144224747, 2.248352741473985, 2.2362890378941698, 2.2219336123876503, 2.207729845062113, 2.1917031761709063, 2.1732477305697855, 2.149373375366487, 2.1290913280982857, 2.102726870996447, 2.0716147078278673, 2.038426329478328, 2.0042264510328427, 1.965202624724447, 1.923194916618971, 1.8794404800463158, 1.8291429112127917, 1.7758102319842364, 1.7338550380664715, 1.6766343010635487, 1.624988974912087, 1.5802050983239757, 1.5447752422203775, 1.496779101698894, 1.457293239220526, 1.421733763554565, 1.3888764794413535, 1.352900646507874, 1.329892220529882, 1.306750768872615, 1.265434843170298, 1.2473501855860045, 1.225967791936716, 1.2028811416133456, 1.1953154931593062, 1.1766081215006061, 1.1571271439364494, 1.1258587284079318, 1.1134831359153095, 1.095647112332189, 1.0883961217341374, 1.0822734998721393, 1.0674297465403886, 1.0559435430503303, 1.0445171553681414, 1.0328732013796866, 1.0120266414573558, 1.0202337553189054, 1.0069687078815048, 1.004530110095927, 1.002096255583581, 0.9813659106105814, 0.9714570910136114, 0.9719618388044836, 0.9526406608757136, 0.942206873791077, 0.9413102946702153, 0.9375279426039359, 0.9236024032573124, 0.9253308037331611, 0.9279821000126265, 0.9132938560257341, 0.9068851446305536, 0.9048854814953792, 0.8976337729491074, 0.8850437608991458, 0.8858644379096937, 0.8774084048799599, 0.868042499413501, 0.86893499847007, 0.8779320188280991, 0.8672481631527267, 0.8573185346145766, 0.8645691015401993, 0.8607029110417627, 0.8580829790790776, 0.8457825708823858, 0.8422776295792047, 0.8351519920759513, 0.8306022542122254, 0.8401492319527776, 0.8235086397865838, 0.8189092356027188, 0.8294249891904146, 0.8116337764595384, 0.812449208261346, 0.8162996469156821, 0.8113657263968803, 0.8091128998901141, 0.8062444628977646, 0.7979975275517203, 0.809572169289786, 0.8018076553352285, 0.803006122983316, 0.8013236210992103], "accuracy": [0.10038304328918457, 0.11900673806667328, 0.14700831472873688, 0.17699114978313446, 0.2052568942308426, 0.22705058753490448, 0.25637298822402954, 0.2740721106529236, 0.2985074520111084, 0.31660282611846924, 0.3343019485473633, 0.35926562547683716, 0.36243560910224915, 0.37300223112106323, 0.390569269657135, 0.4061550796031952, 0.4076079726219177, 0.42108044028282166, 0.4278166592121124, 0.4375908076763153, 0.454629510641098, 0.4714040458202362, 0.47193238139152527, 0.48949941992759705, 0.4954431354999542, 0.5003302097320557, 0.5024435520172119, 0.5268788933753967, 0.527010977268219, 0.5300488471984863, 0.5440496802330017, 0.5484083890914917, 0.5569937825202942, 0.5632016658782959, 0.5729758143424988, 0.5733720660209656, 0.5786554217338562, 0.5864483118057251, 0.5815612077713013, 0.5842028856277466, 0.5945053696632385, 0.6082419753074646, 0.6110157370567322, 0.6205257177352905, 0.6156386137008667, 0.627129852771759, 0.6218464970588684, 0.6284506916999817, 0.6306960582733154, 0.6338660717010498, 0.6409985423088074, 0.6350548267364502, 0.6413947939872742, 0.6473385095596313, 0.6439043879508972, 0.6542068123817444, 0.6559239029884338, 0.6510368585586548, 0.6583014130592346, 0.6584334969520569, 0.6662263870239258, 0.6645092964172363, 0.6700568199157715, 0.6634526252746582, 0.6701889038085938, 0.6779817938804626, 0.6742834448814392, 0.6767930388450623, 0.6737551093101501, 0.6839255094528198, 0.6841896772384644, 0.6800950765609741, 0.6913221478462219, 0.6872276067733765, 0.6863030195236206, 0.6933034062385559, 0.6877558827400208, 0.6889446377754211, 0.6882842183113098, 0.6931713223457336, 0.6972658634185791, 0.69673752784729, 0.700700044631958, 0.6963412761688232, 0.6934354901313782, 0.7038700580596924, 0.7036058902740479, 0.7037379741668701, 0.7065116763114929, 0.7040021419525146, 0.7046625018119812, 0.7082287669181824, 0.7014925479888916, 0.7062475085258484, 0.7092854380607605, 0.7049266695976257, 0.7045304179191589, 0.7082287669181824, 0.7057191729545593], "val_loss": [1.961942264011928, 1.953033719744001, 1.944075243813651, 1.934800148010254, 1.9248362268720354, 1.9141895430428642, 1.902451515197754, 1.8893143108912878, 1.8747998646327428, 1.8583498682294572, 1.839944566999163, 1.8188753809247697, 1.79559782573155, 1.7692222595214844, 1.7396747725350517, 1.706875937325614, 1.671182291848319, 1.6318916593279158, 1.589496033532279, 1.5449135644095284, 1.4977260998317175, 1.4485774380820138, 1.3991090570177351, 1.3491878509521484, 1.2994751249040877, 1.251706838607788, 1.2068559782845634, 1.1645419938223702, 1.124530281339373, 1.0879872185843331, 1.0545386586870467, 1.0234804153442383, 0.9948817321232387, 0.9687868527003697, 0.9442885603223529, 0.9222918237958636, 0.9018041065761021, 0.8829263278416225, 0.8666708469390869, 0.850433213370187, 0.8358011586325509, 0.821212785584586, 0.8077464784894671, 0.7954378979546683, 0.784489359174456, 0.7742655106953212, 0.7641590322766986, 0.7549392325537545, 0.7469350951058524, 0.7381354400089809, 0.7297613280160087, 0.7231623785836356, 0.7161401680537632, 0.7102957963943481, 0.7053521190370832, 0.6992240462984357, 0.6943926811218262, 0.6886116777147565, 0.6827647175107684, 0.6770162241799491, 0.6729176725660052, 0.667799847466605, 0.6637172528675624, 0.6594861575535366, 0.6562847069331578, 0.6520449944904873, 0.6482904979160854, 0.6447584969656808, 0.641956993511745, 0.6377715042659214, 0.6355846098491124, 0.6318122148513794, 0.6281490325927734, 0.6254259858812604, 0.6227740730558123, 0.6199313061577933, 0.6168476854051862, 0.6145787579672677, 0.6124790906906128, 0.6098858458655221, 0.6069098370415824, 0.6047391721180507, 0.6029911892754691, 0.6003818171364921, 0.5992388895579747, 0.5967085361480713, 0.5943478516169957, 0.5928481817245483, 0.5904009512492588, 0.5890822069985526, 0.5870856727872577, 0.5848685332706997, 0.5832234450748989, 0.5808356830051967, 0.5796505042484829, 0.5776585851396833, 0.5769200154713222, 0.5749269212995257, 0.5744925396783012], "val_accuracy": [0.1080000028014183, 0.2006666660308838, 0.28299999237060547, 0.3440000116825104, 0.3773333430290222, 0.4009999930858612, 0.41366666555404663, 0.429666668176651, 0.4436666667461395, 0.4546666741371155, 0.46666666865348816, 0.47466665506362915, 0.4880000054836273, 0.49799999594688416, 0.5109999775886536, 0.5226666927337646, 0.5383333563804626, 0.5463333129882812, 0.5513333082199097, 0.5576666593551636, 0.5619999766349792, 0.5696666836738586, 0.5776666402816772, 0.5873333215713501, 0.5960000157356262, 0.6069999933242798, 0.6140000224113464, 0.6226666569709778, 0.6343333125114441, 0.6433333158493042, 0.6543333530426025, 0.6620000004768372, 0.6660000085830688, 0.6713333129882812, 0.6753333210945129, 0.6790000200271606, 0.6823333501815796, 0.6823333501815796, 0.6853333115577698, 0.6913333535194397, 0.6930000185966492, 0.6946666836738586, 0.6990000009536743, 0.6996666789054871, 0.6986666917800903, 0.7036666870117188, 0.7036666870117188, 0.7059999704360962, 0.7066666483879089, 0.7093333601951599, 0.7129999995231628, 0.715666651725769, 0.7170000076293945, 0.718666672706604, 0.7200000286102295, 0.7226666808128357, 0.7223333120346069, 0.7260000109672546, 0.7276666760444641, 0.7289999723434448, 0.7286666631698608, 0.7306666374206543, 0.7296666502952576, 0.7329999804496765, 0.7329999804496765, 0.7329999804496765, 0.7363333106040955, 0.737666666507721, 0.7386666536331177, 0.7390000224113464, 0.737333357334137, 0.7386666536331177, 0.7419999837875366, 0.7423333525657654, 0.7433333396911621, 0.7419999837875366, 0.7409999966621399, 0.7446666955947876, 0.7456666827201843, 0.7476666569709778, 0.7493333220481873, 0.7493333220481873, 0.746666669845581, 0.7516666650772095, 0.7490000128746033, 0.7506666779518127, 0.7523333430290222, 0.753000020980835, 0.7536666393280029, 0.753333330154419, 0.7526666522026062, 0.7549999952316284, 0.7559999823570251, 0.7570000290870667, 0.7570000290870667, 0.7570000290870667, 0.7540000081062317, 0.7566666603088379, 0.7566666603088379]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 2, 0, 2, 2, 0, 2, 0, 0], [31, 32, 29, 49, 25], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1], [4, 7, 6, 8, 0, 7, 3, 9], [3, 3, 0, 3, 1], [75], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [3, 1, 2], [23, 52, 13]], "fitness": -0.7525714039802551, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2998416081805035, 2.2895513099213916, 2.2803943038474865, 2.2696324227398192, 2.258871163894881, 2.248352597528492, 2.236289055875547, 2.2219337698427943, 2.207730195935156, 2.191704183789355, 2.1732488731902744, 2.149375021748964, 2.1290935008848, 2.102729354127051, 2.071618562959614, 2.038430553464495, 2.0042313139719843, 1.9652081083990027, 1.9232009759810245, 1.8794473019006497, 1.8291524526638645, 1.7758246428458573, 1.7338693273884667, 1.6766470926092316, 1.6249999243742943, 1.58021467578504, 1.5447855082012958, 1.4967970505461103, 1.4573106327864316, 1.4217452263362875, 1.3888833263153098, 1.3529093163030148, 1.3299031123949978, 1.3067641196044963, 1.265444435621092, 1.2473636950011802, 1.2259774184922942, 1.2028841392128868, 1.1953318802561852, 1.1766222772534025, 1.1571400358597868, 1.125858883816159, 1.1135008691749426, 1.0956622050060745, 1.0884176145030082, 1.0822857998271171, 1.0674452248534128, 1.0559575419778033, 1.0445319182522277, 1.0328842407330356, 1.0120267615956307, 1.0202343339665596, 1.0069773429577864, 1.00453116835195, 1.002090302007766, 0.9813773438537189, 0.9714491784202581, 0.9719744305868253, 0.9526261040059378, 0.9422005717906465, 0.9413311620193812, 0.9375204213968342, 0.9235995345741703, 0.9253175227696538, 0.9279667306585618, 0.913288580947753, 0.9068781036931322, 0.9048920173088258, 0.897610370036775, 0.8851161104750088, 0.8858257813413366, 0.8773703310845818, 0.868026421841944, 0.8688405512062912, 0.8779426512307558, 0.8672070362469965, 0.8573850854796315, 0.8645296995949358, 0.8606614179583494, 0.8581288708608856, 0.8457578613993955, 0.842291683293195, 0.8352095164627273, 0.8306365210964947, 0.8401771203685258, 0.8235271155338214, 0.8189658833028712, 0.829445939888461, 0.8116829325147923, 0.812457797093052, 0.816334970032676, 0.8113048055137011, 0.8091792975670594, 0.8062838938777568, 0.7980056435298831, 0.8095867417633668, 0.8018489579530267, 0.8030299439862923, 0.8013426431921794], "accuracy": [0.10038304328918457, 0.11900673806667328, 0.14700831472873688, 0.17699114978313446, 0.2052568942308426, 0.22705058753490448, 0.25637298822402954, 0.2740721106529236, 0.2985074520111084, 0.31660282611846924, 0.3343019485473633, 0.35926562547683716, 0.36243560910224915, 0.37300223112106323, 0.3907013535499573, 0.4061550796031952, 0.4076079726219177, 0.42108044028282166, 0.42768457531929016, 0.43745872378349304, 0.454629510641098, 0.4714040458202362, 0.47193238139152527, 0.4896314740180969, 0.4954431354999542, 0.5003302097320557, 0.5024435520172119, 0.5267468094825745, 0.527010977268219, 0.5299167633056641, 0.544181764125824, 0.5484083890914917, 0.5569937825202942, 0.5632016658782959, 0.5729758143424988, 0.5733720660209656, 0.5789195895195007, 0.5865803956985474, 0.581429123878479, 0.5843349695205688, 0.5946374535560608, 0.6081098914146423, 0.6110157370567322, 0.6206578016281128, 0.6159027814865112, 0.627129852771759, 0.6217144131660461, 0.6281865239143372, 0.6304318904876709, 0.6337339878082275, 0.6408664584159851, 0.6351869106292725, 0.6413947939872742, 0.6472064256668091, 0.6439043879508972, 0.6542068123817444, 0.655527651309967, 0.6509047746658325, 0.6577730774879456, 0.6586976647377014, 0.6662263870239258, 0.6642451286315918, 0.6701889038085938, 0.6637167930603027, 0.6699247360229492, 0.6781138777732849, 0.6748117804527283, 0.6770572066307068, 0.6738871932029724, 0.6839255094528198, 0.6839255094528198, 0.6799629926681519, 0.6914542317390442, 0.6873596906661987, 0.6860388517379761, 0.6926429867744446, 0.687491774559021, 0.6889446377754211, 0.6884163022041321, 0.6936996579170227, 0.6971337795257568, 0.6973979473114014, 0.7013604640960693, 0.696209192276001, 0.6931713223457336, 0.7038700580596924, 0.7029454708099365, 0.7034738063812256, 0.7061154246330261, 0.7042662501335144, 0.7045304179191589, 0.7084929347038269, 0.7013604640960693, 0.7065116763114929, 0.7098137736320496, 0.7049266695976257, 0.705058753490448, 0.7082287669181824, 0.7063795924186707], "val_loss": [1.961942264011928, 1.953033787863595, 1.944075243813651, 1.93480007989066, 1.9248362268720354, 1.914189338684082, 1.902451719556536, 1.8893146514892578, 1.8748012270246233, 1.8583512987409319, 1.8399457931518555, 1.8188770157950265, 1.795600141797747, 1.7692255973815918, 1.7396787234715052, 1.7068802288600378, 1.671187230518886, 1.6318981647491455, 1.589501244681222, 1.5449225902557373, 1.4977378164018904, 1.4485924243927002, 1.3991255078996931, 1.3491987841469901, 1.2994922229221888, 1.2517204965863908, 1.2068713051932198, 1.1645582062857491, 1.1245460850851876, 1.088003056389945, 1.054551294871739, 1.0234939030238561, 0.9948973315102714, 0.968801770891462, 0.9443040234701974, 0.9223113400595528, 0.9018189225878034, 0.8829458441053119, 0.8666911465781075, 0.8504461220332554, 0.8358111211231777, 0.821223395211356, 0.807756747518267, 0.7954496826444354, 0.7845078025545392, 0.7742867469787598, 0.7641777651650565, 0.754956807409014, 0.7469408341816494, 0.7381478718348912, 0.7297730616160801, 0.7231723581041608, 0.7161559377397809, 0.710307138306754, 0.7053670542580741, 0.6992399181638446, 0.6943870612553188, 0.6886036736624581, 0.6827614818300519, 0.6770227125712803, 0.6729249443326678, 0.6678105422428676, 0.6636954545974731, 0.6594550779887608, 0.6562128237315586, 0.6520029817308698, 0.648229718208313, 0.6447091272899083, 0.6418764250619071, 0.6377402884619576, 0.6355529853275844, 0.6317544324057442, 0.6280514853341239, 0.6253775187901088, 0.6227283648082188, 0.6199024404798236, 0.6168267556599208, 0.6145376988819667, 0.6124111584254673, 0.609834977558681, 0.6068493809018817, 0.6046850511005947, 0.6030032975333077, 0.6003669330051967, 0.5992443561553955, 0.596717187336513, 0.5943048681531634, 0.5928130320140294, 0.5903886216027396, 0.5890856470380511, 0.5871024131774902, 0.584888219833374, 0.5832489047731672, 0.5808577707835606, 0.5796516793114799, 0.5776676791054862, 0.5769443341663906, 0.5749448537826538, 0.5745122943605695], "val_accuracy": [0.1080000028014183, 0.2006666660308838, 0.28299999237060547, 0.3440000116825104, 0.3773333430290222, 0.4009999930858612, 0.41366666555404663, 0.429666668176651, 0.4436666667461395, 0.4546666741371155, 0.46666666865348816, 0.47466665506362915, 0.4880000054836273, 0.49799999594688416, 0.5109999775886536, 0.5226666927337646, 0.5383333563804626, 0.5463333129882812, 0.5513333082199097, 0.5576666593551636, 0.5619999766349792, 0.5696666836738586, 0.5776666402816772, 0.5873333215713501, 0.5960000157356262, 0.6069999933242798, 0.6140000224113464, 0.6226666569709778, 0.6343333125114441, 0.6433333158493042, 0.6546666622161865, 0.6620000004768372, 0.6660000085830688, 0.67166668176651, 0.6753333210945129, 0.6790000200271606, 0.6823333501815796, 0.6826666593551636, 0.6853333115577698, 0.6916666626930237, 0.6926666498184204, 0.6946666836738586, 0.6990000009536743, 0.6996666789054871, 0.6986666917800903, 0.70333331823349, 0.7036666870117188, 0.7059999704360962, 0.7066666483879089, 0.7093333601951599, 0.7129999995231628, 0.7160000205039978, 0.7170000076293945, 0.7183333039283752, 0.7200000286102295, 0.7226666808128357, 0.7223333120346069, 0.7260000109672546, 0.7276666760444641, 0.7289999723434448, 0.7286666631698608, 0.7306666374206543, 0.7296666502952576, 0.7329999804496765, 0.7329999804496765, 0.7329999804496765, 0.7353333234786987, 0.737666666507721, 0.7386666536331177, 0.7393333315849304, 0.737333357334137, 0.7393333315849304, 0.7423333525657654, 0.7419999837875366, 0.7433333396911621, 0.7413333058357239, 0.7409999966621399, 0.7456666827201843, 0.7456666827201843, 0.746999979019165, 0.7493333220481873, 0.749666690826416, 0.746666669845581, 0.7513333559036255, 0.7490000128746033, 0.7506666779518127, 0.7523333430290222, 0.753333330154419, 0.7536666393280029, 0.7526666522026062, 0.7526666522026062, 0.7549999952316284, 0.7563333511352539, 0.7573333382606506, 0.7566666603088379, 0.7570000290870667, 0.7546666860580444, 0.7570000290870667, 0.7563333511352539]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 8, 6, 2, 2, 0, 1, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 95, 29, 49, 25], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1], [3, 0, 6, 6, 3, 7, 3, 9, 2, 3, 0, 2, 1, 6, 4, 3, 3, 8], [3, 3, 3, 1, 1, 5, 3, 2, 1, 4, 4, 0], [70], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 6, 2, 1, 9, 6, 1], [3, 1, 0, 2, 3, 3, 0, 3], [92, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 9, 5, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [55735775.79890765, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 1, 6, 2, 3, 7, 3, 9], [2, 3, 3, 3, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 0, 1, 0, 1, 1, 1], [3, 0, 6, 8, 2, 7], [1, 1, 2, 3], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 9, 5, 4, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(grad, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.add(alpha, beta))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 1, 9, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [1, 0, 1, 0, 2, 0, 2, 2, 0, 2, 0, 0], [31, 32, 29, 49, 25], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1], [4, 9, 6, 5, 0, 7, 3, 9], [3, 1, 0, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [0, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 8, 6, 2, 2, 0, 1, 5, 8, 4, 4, 6, 3, 6], [1, 2, 1, 0, 2, 1, 2, 2, 0], [31, 95, 29, 49, 25], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 3, 6, 6, 3, 3, 3, 9, 2, 3, 0, 2, 1, 6, 4, 3, 3, 8], [2, 3, 3, 3, 3, 0, 0], [98, 85, 73], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [0, 3, 2], [92, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 15, 15, 8, 7, 3, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, grad), grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.302974088647661, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 2, 8, 6, 2, 2, 0, 1, 5, 8, 4, 4, 6, 3, 6], [3, 3, 1, 0, 2, 1, 2, 2, 0], [31, 95, 29, 49, 25], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 2, 6, 6, 3, 7, 3, 9, 2, 3, 0, 2, 1, 6, 4, 3, 3, 8], [2, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1, 1], [1, 3, 2, 1, 2], [0, 2, 0, 2], [92, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.302974088647661, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 0, 6, 2, 3, 7, 3, 9], [2, 4, 3, 3, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [3, 8, 9, 1, 2], [2, 1, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 2, 0, 2, 2, 0, 2, 0, 0], [31, 32, 29, 49, 25], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0], [4, 0, 6, 5, 0, 7, 3, 9], [3, 0, 0, 3, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [3, 0, 9, 1, 2], [1, 1, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(alpha))", "other_info": {"loss": [2.3148518403476146, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08360850811004639, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0483641624450684, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1], [4, 7, 8, 5, 0, 7, 3, 9], [2, 2, 3, 3, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [9, 1, 1, 1, 2, 4, 2, 6, 6, 8], [1, 3, 2, 3, 1, 2, 0], [23, 1, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302974088647661, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 2, 6, 6, 3, 7, 4, 9, 2, 3, 0, 2, 1, 6, 4, 3, 3, 8], [1, 3, 3, 1, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1, 1], [3, 9, 9, 2, 2, 7], [1, 3, 2], [97, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(alpha, grad)), grad), tf.math.add(beta, alpha))), tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), alpha)), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 3, 6, 2, 2, 6, 1, 5, 9, 4, 2, 6, 3, 6, 5, 9], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 6, 2, 3, 7, 3, 9], [2, 1, 3, 3, 1, 3], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [3, 0, 9, 2, 2, 7], [1, 3, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(alpha, tf.math.multiply(grad, grad))), tf.math.add(beta, alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(sigma))", "other_info": {"loss": [2.306086025564284, 2.330510153604804, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08625016361474991, 0.07555144280195236, 0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9777124949863978, 2.042529787336077, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.017666665837168694, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 2, 0, 2, 2, 0, 2, 0, 0], [31, 32, 29, 49, 25], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1], [4, 7, 6, 5, 0, 7, 3, 9], [3, 3, 0, 3, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [3, 2, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [3, 2, 2, 6, 3, 7, 3, 9, 2, 3, 0, 2, 1, 6, 4, 3, 3, 8, 2], [3, 1, 3, 1, 1, 5, 1, 2, 1, 4, 4, 0, 5, 2, 3, 3], [98, 85, 73], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 0, 1, 0, 1, 1], [3, 0, 9, 2, 2, 7], [1, 0, 2, 2], [92, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 35, 35, 19, 16, 2, 1, 0, 0, 0, 0, 8, 5, 3, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(grad, alpha)), grad)), tf.math.add(beta, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha))))), tf.math.add(beta, grad)), tf.math.multiply(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(alpha, grad)), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 4, 6, 2, 3, 7, 3, 9], [2, 3, 3, 3, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [1], [64], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 0, 1, 2, 2, 7], [2, 3, 2, 0, 3, 0], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 12, 6, 6, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(grad, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.add(sigma, beta)), tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), sigma))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 1, 9, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [1, 2, 1, 2, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [3, 7, 3, 2, 5, 7, 3, 9, 2, 6, 5, 4, 6], [3, 1, 0, 3, 1, 1, 5, 0, 3, 4], [98, 85, 73], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 1, 2], [0, 0, 2], [23, 87, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 23, 23, 13, 10, 3, 1, 1, 0, 1, 0, 5, 3, 2, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, alpha))), grad)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302974088647661, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 4, 6, 5, 8, 4, 4, 6, 3, 6, 9, 4, 9, 7, 2, 1, 1, 2, 2, 9, 8, 6, 6], [1, 0, 1, 0, 2, 2, 2, 2, 0, 2, 0, 0, 2, 3, 3, 1, 2, 0], [31, 32, 29, 43, 25, 55, 38, 96, 33], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1], [4, 7, 6, 5, 0, 7, 3, 9], [2, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [4, 1, 9, 1, 2], [3, 1, 2], [22, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 46, 46, 28, 18, 9, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), alpha)))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, grad)))))), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.subtract(tf.math.subtract(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(alpha, grad)))))))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.add(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.subtract(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 8, 6, 2, 2, 0, 1, 5, 8, 4, 4, 6, 3, 6], [2, 1, 1, 0, 2, 0, 2, 2, 0, 2], [31, 95, 29, 49, 25], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1], [3, 2, 6, 6, 3, 7, 3, 9, 2, 3, 0, 2, 1, 6, 4, 3, 3, 8], [2, 3, 3, 3, 1], [98, 85, 73], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1, 1], [1, 4, 9, 1, 2, 7], [3, 2, 2, 2, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [1230411409.925443, 23903328604.141064, 110309910190.67917, 305983500560.1289, 659343735092.1062, 1202981952725.5645], "accuracy": [0.09800554811954498, 0.09351472556591034, 0.09945846349000931, 0.09919429570436478, 0.09734513610601425, 0.09430722147226334], "val_loss": [4608057197.714286, 36853353910.85714, 124367943387.42857, 294785047405.7143, 575737954304.0, 994847265353.1428], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 1, 0, 2, 1, 2, 2, 0], [31, 95, 29, 49, 25], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [4, 7, 6, 5, 4, 7, 3, 9, 4, 7, 3, 5], [3, 3, 0, 3, 1, 4, 5, 1, 3], [98, 99], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 4, 8, 1, 2], [3, 0, 2], [54, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 11, 9, 2, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.pow(tf.math.sqrt(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 8, 6, 2, 2, 0, 1, 5, 8, 4, 4, 6, 3, 6], [1, 0, 1, 0, 2, 0, 2, 2, 0, 2, 0, 0], [31, 95, 29, 49, 25], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 6, 6, 3, 7, 3, 9, 2, 3, 0, 2, 1, 6, 4, 3, 3, 8], [3, 3, 0, 3, 1, 2], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1, 1], [3, 8, 9, 1, 2], [3, 0, 2, 2], [23, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))), beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303926217982703, 2.3033237463573597, 2.303924058516894, 2.302718742821809, 2.302581808869676, 2.302722705558401], "accuracy": [0.09153348207473755, 0.08611807972192764, 0.08625016361474991, 0.08968432247638702, 0.09126931428909302, 0.08928807079792023], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]