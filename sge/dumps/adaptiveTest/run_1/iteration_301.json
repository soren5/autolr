[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8328571319580078, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0892721355992725, 1.163191431541138, 0.8243330328015132, 0.738714657675683, 0.6785182240238877, 0.6325730750227271, 0.600289554698923, 0.5623000145918973, 0.5440926606455783, 0.5340546110066535, 0.4949628610290383, 0.4808744172677703, 0.45518981151183396, 0.4411264449975998, 0.4226101864212461, 0.4201602181620239, 0.4172566893542873, 0.39486052312981323, 0.3795783327177232, 0.36441994986010107, 0.3664443300715401, 0.3592593408870092, 0.35047949677161755, 0.3356191956560767, 0.3331486761506995, 0.3245370519742234, 0.31713504723790237, 0.30321685743684607, 0.3057801846806966, 0.2850132238249249, 0.2903329625090021, 0.27828588113415087, 0.2685784634471869, 0.2678182985820098, 0.25497146301722373, 0.248941560144107, 0.2398981087440198, 0.2453221683477162, 0.24690805782991204, 0.23817159193161377, 0.23332363891603136], "accuracy": [0.29903578758239746, 0.5868445634841919, 0.691850483417511, 0.7160216569900513, 0.7387399077415466, 0.7617223858833313, 0.776251494884491, 0.7874785661697388, 0.7932901978492737, 0.8020076751708984, 0.816008448600769, 0.8207634687423706, 0.8341038227081299, 0.8341038227081299, 0.843481719493866, 0.8428213000297546, 0.8409721255302429, 0.8520671129226685, 0.8565579056739807, 0.8661999702453613, 0.8640866279602051, 0.863558292388916, 0.8673887252807617, 0.8776912093162537, 0.8722757697105408, 0.8792761564254761, 0.8786157965660095, 0.8864086866378784, 0.8870691061019897, 0.8949940800666809, 0.8914278149604797, 0.8923524022102356, 0.8973715305328369, 0.8992207050323486, 0.9058248400688171, 0.901862382888794, 0.9097873568534851, 0.9060890078544617, 0.9045040011405945, 0.9111081957817078, 0.9121648669242859], "val_loss": [1.030221734728132, 0.6559478214808873, 0.5708978687013898, 0.5301599161965507, 0.5010239907673427, 0.47396269866398405, 0.4557572432926723, 0.44560939925057547, 0.43571507930755615, 0.40763806445258005, 0.39393737486430574, 0.3780024988310678, 0.371600295816149, 0.3657084107398987, 0.36431446245738436, 0.37196905272347586, 0.3417814373970032, 0.34184879064559937, 0.3376657026154654, 0.3264934505735125, 0.33774841683251516, 0.3290524993624006, 0.3244576709611075, 0.3264177697045462, 0.32101999861853464, 0.32260434116636005, 0.32162074531827656, 0.319087701184409, 0.3174534184592111, 0.31917753389903475, 0.3149872933115278, 0.3143815738814218, 0.31912191425051006, 0.3119090029171535, 0.32169016769954134, 0.31627663544246126, 0.31781082493918283, 0.3183300495147705, 0.3199504017829895, 0.3222710405077253, 0.3155550871576582], "val_accuracy": [0.6150000095367432, 0.7279999852180481, 0.7523333430290222, 0.7683333158493042, 0.781000018119812, 0.7923333048820496, 0.8013333082199097, 0.8036666512489319, 0.8119999766349792, 0.8289999961853027, 0.8336666822433472, 0.8423333168029785, 0.8456666469573975, 0.8463333249092102, 0.8516666889190674, 0.8399999737739563, 0.8556666374206543, 0.8583333492279053, 0.8619999885559082, 0.8653333187103271, 0.8606666922569275, 0.862666666507721, 0.8706666827201843, 0.8656666874885559, 0.8696666955947876, 0.8659999966621399, 0.8636666536331177, 0.8713333606719971, 0.8679999709129333, 0.8673333525657654, 0.8740000128746033, 0.8683333396911621, 0.8730000257492065, 0.8706666827201843, 0.8773333430290222, 0.8799999952316284, 0.8763333559036255, 0.8740000128746033, 0.8759999871253967, 0.8796666860580444, 0.8759999871253967]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 4, 4, 2, 6, 3, 6, 5, 8], [2, 2, 1, 0, 1, 0, 1, 2, 0, 2, 3, 3, 0, 3], [38, 68, 95, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [20, 73], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [61, 33, 5, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 17, 14, 4, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.multiply(grad, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [91, 68], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [3, 0, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [61, 6, 5, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 8, 8, 6, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302320870237107, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 4, 5, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [39, 32, 57, 49, 25], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [76], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 1, 8, 3, 0, 1, 2, 2, 2, 5, 5, 9, 7, 8, 5, 3, 3, 1, 6, 7, 4, 4, 4, 7], [0, 0, 2, 0, 0, 3, 2, 0, 0, 2, 0, 2, 2, 2], [17, 90, 13, 96, 63, 90, 27, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302320870237107, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 3, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [73, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 4, 3, 0, 1, 3, 2, 2, 5], [0, 0, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [61, 6, 5, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [39, 32, 57, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [8, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 4, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), alpha))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7395782.849131134, 138390239.41249505, 644217641.8945978, 1800905849.3895125, 3820303235.7701755, 7139827278.649584], "accuracy": [0.0956280529499054, 0.10117553919553757, 0.09959053993225098, 0.1014397069811821, 0.10117553919553757, 0.09549596905708313], "val_loss": [27027793.14285714, 215857206.85714287, 728112877.7142857, 1725414912.0, 3369396224.0, 5821665426.285714], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [8, 1, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 0, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302320870237107, 2.3025851114598312, 2.3025850619874246, 2.3025851744418886, 2.3025852059329175, 2.3025852374239464], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644529070173, 1.9736443247113908, 1.9736443247113908, 1.9736443247113908, 1.9736443247113908], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 1, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 1, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 0, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [61, 6, 5, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 11, 9, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 3], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302320870237107, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 4, 5, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [3, 1, 1, 8, 3, 0, 1, 3, 2, 2, 5, 5, 9, 7, 8, 5, 3, 3, 1, 6, 4, 4, 4, 4, 7], [0, 0, 2, 0, 3, 3, 2, 0, 0, 2, 0, 2, 2, 2], [14, 90, 13, 96, 63, 90, 70, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 21, 13, 8, 5], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(sigma, sigma), beta)), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [8410.201757551704, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [473748.33928571426, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 4, 5, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [25], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 1, 0, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [14, 90, 13, 96, 63, 90, 27, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(alpha, alpha), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.negative(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 0, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 4, 7, 7, 6, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 3], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302320870237107, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 3, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 0, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [42, 50, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302320870237107, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 3, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 3, 0, 1, 0, 1, 2, 0, 2, 3, 3, 0], [38, 32, 5, 39, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 0, 3, 0, 1, 3, 2, 2, 5], [0, 0, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [61, 6, 5, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.301845418684172, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 3, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [39, 32, 57, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [3, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 0, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [30, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 4, 1, 3], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302320870237107, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 3, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 8, 2, 6, 0, 0, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [61, 6, 5, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.negative(grad))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 4, 5, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 6, 5, 8, 3, 0, 1, 2, 2, 2, 5, 5, 9, 7, 8, 5, 8, 3, 1, 6, 7, 4, 4, 4, 7], [0, 0, 2, 0, 0, 3, 2, 0, 0, 2, 0, 2, 2, 2], [14, 90, 13, 96, 63, 90, 27, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [5.267685048757464, 31.76693381703903, 97.24015051313064, 217.23363306531502, 405.8391213810691, 700.5878688664626], "accuracy": [0.09760929644107819, 0.10157178342342377, 0.09959053993225098, 0.10157178342342377, 0.10130762308835983, 0.09589222073554993], "val_loss": [9.696300779070173, 38.50211879185268, 96.11135864257812, 193.08783394949776, 341.51145717075894, 554.618181501116], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 3, 4, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 3, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 19, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 0, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [35, 6, 5, 96, 41]], "fitness": -0.0965714305639267, "mapping_values": [1, 14, 14, 7, 7, 3, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3012334766357707, 2.301767469633367, 2.302035863798497, 2.3011441277065736, 2.301506109430396, 2.3023142217566326, 2.301236546003367, 2.3007584783332127, 2.301166358042576, 2.3006780580869046, 2.300599438655079, 2.300248410487298, 2.300765075892694, 2.3006507143951, 2.300502815140772, 2.300664938388956, 2.3006245949485313, 2.300314859014382, 2.3007141323515357, 2.3004450911717282, 2.300341578900397, 2.300354381861578, 2.300123079310256, 2.300553702218516, 2.3006409425084238, 2.301032782545683, 2.301220005907324, 2.3009515656393282, 2.3003885612165327, 2.3017317864873137, 2.3007442955296225, 2.3010997608148536], "accuracy": [0.08981640636920929, 0.09047681838274002, 0.09074098616838455, 0.09206181764602661, 0.0886276587843895, 0.09100515395402908, 0.09311848133802414, 0.09470347315073013, 0.09338264167308807, 0.09628847241401672, 0.0948355570435524, 0.09509972482919693, 0.09549596905708313, 0.09338264167308807, 0.09113723784685135, 0.1006472036242485, 0.09536388516426086, 0.09932637959718704, 0.09589222073554993, 0.09589222073554993, 0.0952318087220192, 0.10249637067317963, 0.10315678268671036, 0.09826971590518951, 0.09959053993225098, 0.09998679161071777, 0.09866596013307571, 0.0956280529499054, 0.1018359512090683, 0.09760929644107819, 0.09853387624025345, 0.09694888442754745], "val_loss": [1.9708456311907088, 1.9707673617771693, 1.9707047598702567, 1.9706473350524902, 1.970590455191476, 1.9705464499337333, 1.970525128500802, 1.9705186571393694, 1.970524856022426, 1.9705539430890764, 1.9705949510846819, 1.9706484930855888, 1.9707109587533134, 1.9707952908107214, 1.9708960396902901, 1.971000807625907, 1.9711048943655831, 1.9712093898228236, 1.9713130678449358, 1.9714136123657227, 1.9715095928737096, 1.9716067995343889, 1.9717124530247279, 1.9718153136117118, 1.9719112260001046, 1.9720077514648438, 1.9720984867640905, 1.9721858842032296, 1.972269126347133, 1.9723504611424036, 1.9724298885890417, 1.9725032533918108], "val_accuracy": [0.041333332657814026, 0.043666668236255646, 0.04699999839067459, 0.050333332270383835, 0.05299999937415123, 0.05700000002980232, 0.058666665107011795, 0.061666667461395264, 0.06433333456516266, 0.06866666674613953, 0.070333331823349, 0.07666666805744171, 0.08166666328907013, 0.08366666734218597, 0.08566666394472122, 0.09033333510160446, 0.09266666322946548, 0.09233333170413971, 0.09366666525602341, 0.09666666388511658, 0.09700000286102295, 0.0989999994635582, 0.09933333098888397, 0.10100000351667404, 0.10333333164453506, 0.10233332961797714, 0.10466666519641876, 0.10333333164453506, 0.10333333164453506, 0.10166666656732559, 0.09933333098888397, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 0, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [26, 6, 5, 96, 41]], "fitness": -0.09200000017881393, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 4, 1, 3], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3013128208966065, 2.3020601182203757, 2.3025198583322006, 2.3017257182920265, 2.302247064334999, 2.303269818253946, 2.3020523479349815, 2.301510517229698, 2.3023986064085573, 2.301772476864403, 2.3017352692691357, 2.301799602449342, 2.3021999467963856, 2.3018920313586113, 2.3018377540196884, 2.3021026235514186, 2.3022176730335193, 2.3016350593990134, 2.301833906603244, 2.3011947273971884, 2.301125953383591, 2.301150706717839, 2.300730283879774, 2.3011664280471327, 2.3010610804156606, 2.3014261042988298, 2.3021392502001863, 2.3012375273897883, 2.2999696810924775, 2.3031809672923877, 2.30065224700049, 2.3016059358027694, 2.3023774009795788, 2.3012116568798024, 2.2996666684929785, 2.301028491704062, 2.3016784189557042, 2.3014476466503253, 2.3005590015288435, 2.3001857678714823, 2.301148828844809, 2.301457826755208, 2.299699593843675, 2.3012756585539482, 2.301149314782875, 2.300401898108107, 2.30103817182588, 2.300922524518089, 2.3011112684870376, 2.300677663787733, 2.30095281088908, 2.3006775942870323, 2.3003620705537164, 2.3014861934645743, 2.300690670212451, 2.2993262722633614, 2.300396418354184, 2.299616760250883, 2.299741574408214, 2.3015225500462786, 2.300520686834968, 2.300694965494307, 2.3010392698865636, 2.30007159742996, 2.3003812611866716, 2.30033888415008, 2.300630177489172, 2.301157900465478, 2.300454031978663, 2.3004806125168757, 2.2996841447858163, 2.3009504019198497, 2.3007889133103694, 2.300764193388103, 2.300326861064227, 2.301375321078499, 2.299826903287147, 2.300505496255474, 2.3009504577849347, 2.300183759310683, 2.299570500811314, 2.2998390011641927, 2.3012461882729682, 2.2993828971954997, 2.3002657280968415, 2.300809004051401, 2.3008906947717755, 2.300162174981646, 2.30066661009022, 2.300588829736857, 2.300699757295215, 2.2997886831293393, 2.3002953040932055, 2.30025550730555, 2.300338111738125, 2.30034879513263, 2.3002826597208457, 2.3004332519305017, 2.3009222201572954, 2.2997777268020876], "accuracy": [0.09008057415485382, 0.09087307006120682, 0.08955223858356476, 0.09179764986038208, 0.08492933213710785, 0.08942015469074249, 0.09192973375320435, 0.09298639744520187, 0.09166556596755981, 0.09192973375320435, 0.09259014576673508, 0.09047681838274002, 0.08928807079792023, 0.09021265059709549, 0.08638224750757217, 0.09113723784685135, 0.08849557489156723, 0.09536388516426086, 0.09074098616838455, 0.09140139818191528, 0.08955223858356476, 0.09034473448991776, 0.08875974267721176, 0.0956280529499054, 0.09311848133802414, 0.09496764093637466, 0.08809932321310043, 0.09087307006120682, 0.09391097724437714, 0.08955223858356476, 0.09087307006120682, 0.08757099509239197, 0.0940430611371994, 0.09166556596755981, 0.08915598690509796, 0.0952318087220192, 0.08928807079792023, 0.09589222073554993, 0.09338264167308807, 0.09232597798109055, 0.09285431355237961, 0.0944393053650856, 0.10051512718200684, 0.09430722147226334, 0.09047681838274002, 0.09774138033390045, 0.09589222073554993, 0.10117553919553757, 0.09351472556591034, 0.09206181764602661, 0.09391097724437714, 0.09285431355237961, 0.0940430611371994, 0.08558975160121918, 0.09919429570436478, 0.09721305221319199, 0.09140139818191528, 0.09972262382507324, 0.09840179979801178, 0.09219389408826828, 0.09536388516426086, 0.09774138033390045, 0.09377889335155487, 0.09496764093637466, 0.09430722147226334, 0.0952318087220192, 0.09774138033390045, 0.1018359512090683, 0.09166556596755981, 0.09272222965955734, 0.09800554811954498, 0.09470347315073013, 0.09826971590518951, 0.09219389408826828, 0.1026284471154213, 0.09602430462837219, 0.0944393053650856, 0.09325055778026581, 0.09232597798109055, 0.09272222965955734, 0.09893012791872025, 0.10196803510189056, 0.09509972482919693, 0.10091137140989304, 0.09536388516426086, 0.09589222073554993, 0.08942015469074249, 0.09734513610601425, 0.09813763201236725, 0.09774138033390045, 0.09232597798109055, 0.1010434553027153, 0.0948355570435524, 0.09721305221319199, 0.09549596905708313, 0.09840179979801178, 0.09708096832036972, 0.1010434553027153, 0.09945846349000931, 0.09615638852119446], "val_loss": [1.9709209033421107, 1.9709036690848214, 1.9708880015781947, 1.9708731515066964, 1.9708586420331682, 1.970844064440046, 1.9708290781293596, 1.9708148411342077, 1.9708013534545898, 1.9707887513296944, 1.9707766941615514, 1.9707647732325964, 1.9707540103367396, 1.9707437242780412, 1.970733710697719, 1.9707230840410506, 1.9707121849060059, 1.970701013292585, 1.9706898416791643, 1.9706799643380302, 1.970670223236084, 1.970660890851702, 1.9706521034240723, 1.9706435203552246, 1.9706337792532784, 1.970623356955392, 1.97061368397304, 1.9706042153494698, 1.970594814845494, 1.9705860274178642, 1.9705777168273926, 1.9705699511936732, 1.9705630029950822, 1.9705560547964913, 1.9705489022391183, 1.9705422946384974, 1.9705369131905692, 1.9705322810581751, 1.9705291475568498, 1.970526831490653, 1.9705253328595842, 1.9705234255109514, 1.9705215181623186, 1.97052001953125, 1.9705191339765276, 1.9705185890197754, 1.9705186571393694, 1.9705186571393694, 1.9705183846609933, 1.9705189977373396, 1.9705202238900321, 1.970522063119071, 1.970524719783238, 1.9705287388392858, 1.9705333709716797, 1.9705384118216378, 1.970543316432408, 1.970548221043178, 1.9705542836870467, 1.9705608912876673, 1.9705675670078822, 1.970573834010533, 1.9705808503287179, 1.970588207244873, 1.9705960409981864, 1.9706041472298759, 1.9706128665379115, 1.9706221989222936, 1.9706315994262695, 1.9706412042890276, 1.970651081630162, 1.970660890851702, 1.9706707000732422, 1.9706811223711287, 1.9706920896257674, 1.9707037380763464, 1.9707155908857072, 1.970729078565325, 1.9707424981253487, 1.9707565988813127, 1.9707715170724052, 1.9707869802202498, 1.9708030564444405, 1.9708192689078194, 1.9708353451320104, 1.9708520344325475, 1.970869541168213, 1.9708880015781947, 1.9709067344665527, 1.9709254673549108, 1.9709438596452986, 1.9709618432181222, 1.9709790093558175, 1.9709954942975725, 1.9710125241960799, 1.9710300990513392, 1.9710477420261927, 1.9710655893598283, 1.971083164215088, 1.9711010796683175], "val_accuracy": [0.039000000804662704, 0.03999999910593033, 0.03999999910593033, 0.03999999910593033, 0.04066666588187218, 0.04100000113248825, 0.041999999433755875, 0.04266666620969772, 0.04266666620969772, 0.043666668236255646, 0.043666668236255646, 0.04333333298563957, 0.044333335012197495, 0.04500000178813934, 0.04500000178813934, 0.04500000178813934, 0.04600000008940697, 0.04699999839067459, 0.04800000041723251, 0.04866666719317436, 0.049666665494441986, 0.05000000074505806, 0.05066666752099991, 0.05066666752099991, 0.05000000074505806, 0.050999999046325684, 0.05233333259820938, 0.052666667848825455, 0.05299999937415123, 0.05400000140070915, 0.05433333292603493, 0.054999999701976776, 0.05533333495259285, 0.0573333315551281, 0.05700000002980232, 0.0573333315551281, 0.057999998331069946, 0.0573333315551281, 0.05766666680574417, 0.0573333315551281, 0.05833333358168602, 0.059333331882953644, 0.06066666543483734, 0.06133333221077919, 0.06133333221077919, 0.06199999898672104, 0.061666667461395264, 0.06199999898672104, 0.06266666948795319, 0.06266666948795319, 0.06300000101327896, 0.06366666406393051, 0.06433333456516266, 0.06499999761581421, 0.06499999761581421, 0.06566666811704636, 0.06599999964237213, 0.06833333522081375, 0.06866666674613953, 0.06933332979679108, 0.07000000029802322, 0.07066666334867477, 0.07066666334867477, 0.06966666877269745, 0.070333331823349, 0.0716666653752327, 0.0729999989271164, 0.07433333247900009, 0.07599999755620956, 0.07633333653211594, 0.07699999958276749, 0.07833333313465118, 0.07966666668653488, 0.0806666687130928, 0.08166666328907013, 0.08166666328907013, 0.08166666328907013, 0.08133333176374435, 0.0820000022649765, 0.08233333379030228, 0.08299999684095383, 0.08399999886751175, 0.08366666734218597, 0.08500000089406967, 0.08533333241939545, 0.08433333039283752, 0.08533333241939545, 0.08533333241939545, 0.08566666394472122, 0.08666666597127914, 0.08766666799783707, 0.08900000154972076, 0.08966666460037231, 0.09066666662693024, 0.09033333510160446, 0.09099999815225601, 0.09066666662693024, 0.09166666865348816, 0.09200000017881393, 0.09300000220537186]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 4, 3, 2, 2, 4, 2, 1, 5, 6, 4, 2, 6, 3, 6, 5, 8], [3, 0, 3, 2, 1, 0, 2, 2, 0, 2, 3, 3, 0, 1, 0], [38, 32, 5, 37, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [3, 0, 2, 2, 2, 2, 2, 3, 2, 3, 2, 3, 1, 0, 3, 3, 1, 0, 2], [61, 6, 74, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 30, 30, 15, 15, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.add(grad, grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3013306281916486, 2.3021230435941384, 2.302624897792465, 2.301868316283583, 2.3024228514776004, 2.303500310667061], "accuracy": [0.09008057415485382, 0.09074098616838455, 0.08915598690509796, 0.09100515395402908, 0.08479725569486618, 0.08915598690509796], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 4, 5, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 3, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [81, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 0, 2, 0, 0, 3, 2, 0, 0, 2, 0, 2, 2, 2], [14, 22, 13, 96, 63, 90, 27, 52]], "fitness": -0.03771428391337395, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 3], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301484720944067, 2.302676756809322, 2.303589053079043, 2.303354022556749, 2.3041096758360657, 2.3059856378958132], "accuracy": [0.08955223858356476, 0.08889182657003403, 0.08651433140039444, 0.09153348207473755, 0.08532558381557465, 0.09245806187391281], "val_loss": [1.9711055755615234, 1.9713093893868583, 1.971531936100551, 1.9717584337506975, 1.9719900403703963, 1.9722463744027274], "val_accuracy": [0.03500000014901161, 0.03200000151991844, 0.028999999165534973, 0.02500000037252903, 0.025333333760499954, 0.024000000208616257]}}]