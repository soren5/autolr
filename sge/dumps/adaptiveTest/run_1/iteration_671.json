[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 6, 9, 4, 1, 1, 6, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 0, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8414285778999329, "mapping_values": [1, 4, 4, 3, 1, 1, 14, 14, 8, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), grad)), tf.math.add(beta, grad))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1101589369940768, 1.8996897517981357, 1.5692215386225548, 1.1100731300340905, 0.9200511061677591, 0.8204060070203862, 0.7342060359556284, 0.7103712914673691, 0.6658584962998398, 0.6422880586301174, 0.6111481799551556, 0.5877057051756253, 0.5880245778696365, 0.5851208576987905, 0.5473793600615162, 0.5394576380690879, 0.5361494559023626, 0.5362858464531753, 0.5247850798581176, 0.5028283587772423, 0.5003744956406588, 0.4889894885165643, 0.44963759165776324, 0.47792417085748606, 0.4653721009625294, 0.43128296919486875, 0.4576427373218814, 0.45028801430658877, 0.4318660957434426, 0.40806973602840724, 0.4032790637200519, 0.39317159559575243, 0.3899677306582915, 0.38939774078526723, 0.3824716178480629, 0.38708410438938917, 0.3666485666819315, 0.37230877970125004, 0.36631390679120357, 0.3501822450818828, 0.33820692976987626, 0.3502096686073818, 0.34764239987944723, 0.3301390616719938, 0.32122835316567955, 0.3408128353685294, 0.31792149736566033, 0.34107346942380373, 0.31703965813649754, 0.3219049041690985, 0.3118616517555948, 0.2985456022509589, 0.2874689233254259, 0.3220000702982739, 0.2744574408095983, 0.2696188901157553, 0.2923444532514359, 0.28820846233039155, 0.2661144094948346, 0.2653946662268792, 0.2776092685460887, 0.24490485328252462], "accuracy": [0.29705455899238586, 0.37247392535209656, 0.4760269522666931, 0.5980715751647949, 0.6524897813796997, 0.6876237988471985, 0.724739134311676, 0.7302865982055664, 0.7497028112411499, 0.7572315335273743, 0.7646281719207764, 0.7841764688491821, 0.7788931727409363, 0.780610203742981, 0.7895918488502502, 0.7972526550292969, 0.7944789528846741, 0.7988376617431641, 0.7998943328857422, 0.8113855719566345, 0.8092722296714783, 0.8161405324935913, 0.8300092220306396, 0.8227446675300598, 0.8240655064582825, 0.8422929644584656, 0.8278959393501282, 0.8255184292793274, 0.8385946154594421, 0.8485008478164673, 0.8486329317092896, 0.8556333184242249, 0.8576145768165588, 0.8494254350662231, 0.8543124794960022, 0.8569541573524475, 0.8647470474243164, 0.8619733452796936, 0.8617091774940491, 0.8717474341392517, 0.8732003569602966, 0.8679170608520508, 0.8692378997802734, 0.8787478804588318, 0.8796724081039429, 0.8665962219238281, 0.8795403242111206, 0.8713511824607849, 0.8804649114608765, 0.8768987059593201, 0.8820499181747437, 0.8919561505317688, 0.8931449055671692, 0.8767666220664978, 0.8986923694610596, 0.8961827754974365, 0.886672854423523, 0.8887861371040344, 0.89552241563797, 0.9021265506744385, 0.8923524022102356, 0.9064852595329285], "val_loss": [1.2167509964534216, 1.5703127043587821, 0.9199227264949253, 0.7639380693435669, 0.7331556933266776, 0.5564311402184623, 0.5517423152923584, 0.5245741776057652, 0.4906461920057024, 0.5014568737574986, 0.47287772383008686, 0.48352391379220144, 0.49545061588287354, 0.45330422265189035, 0.43246088709150043, 0.4473204953329904, 0.4960180180413382, 0.4529220887592861, 0.43828455039433073, 0.397863575390407, 0.3929730142865862, 0.3899040477616446, 0.39933355365480694, 0.38166663476399015, 0.3819959078516279, 0.44730894906180246, 0.3687374251229422, 0.38044232981545584, 0.37608847447804045, 0.37655528102602276, 0.3551572390965053, 0.41519988434655325, 0.41708993911743164, 0.35506377049854826, 0.3533054675374712, 0.3543505753789629, 0.357751054423196, 0.3536847233772278, 0.3467041083744594, 0.3484353082520621, 0.348628716809409, 0.3563598224094936, 0.36120391743523733, 0.34394136496952604, 0.3371023620877947, 0.3422689948763166, 0.33676970856530325, 0.35518764598029, 0.35721057653427124, 0.3368058374949864, 0.3472380382674081, 0.3274598717689514, 0.35595281635011944, 0.3462453399385725, 0.3317787732396807, 0.32486681427274433, 0.32276049682072233, 0.34238380193710327, 0.3462347388267517, 0.35408685888562885, 0.3592786703790937, 0.3575087700571333], "val_accuracy": [0.5239999890327454, 0.4000000059604645, 0.6309999823570251, 0.6486666798591614, 0.6693333387374878, 0.75, 0.7400000095367432, 0.7680000066757202, 0.7793333530426025, 0.7683333158493042, 0.7889999747276306, 0.7796666622161865, 0.7720000147819519, 0.7956666946411133, 0.8066666722297668, 0.7950000166893005, 0.777999997138977, 0.7983333468437195, 0.8080000281333923, 0.8370000123977661, 0.8343333601951599, 0.8303333520889282, 0.8253333568572998, 0.8330000042915344, 0.8399999737739563, 0.8083333373069763, 0.8460000157356262, 0.8413333296775818, 0.8446666598320007, 0.8456666469573975, 0.8539999723434448, 0.8159999847412109, 0.8289999961853027, 0.8479999899864197, 0.8560000061988831, 0.8503333330154419, 0.8560000061988831, 0.8579999804496765, 0.8556666374206543, 0.8586666584014893, 0.8536666631698608, 0.8556666374206543, 0.8476666808128357, 0.8543333411216736, 0.8610000014305115, 0.856333315372467, 0.8629999756813049, 0.8543333411216736, 0.8510000109672546, 0.8566666841506958, 0.8556666374206543, 0.8666666746139526, 0.8519999980926514, 0.8610000014305115, 0.8676666617393494, 0.8653333187103271, 0.8696666955947876, 0.8610000014305115, 0.859000027179718, 0.8526666760444641, 0.859333336353302, 0.859000027179718]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 1, 9, 4, 5, 4, 6, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [0, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8391428589820862, "mapping_values": [1, 4, 4, 3, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.110060343070352, 1.9016793499911198, 1.4988781073782753, 1.0752197192912214, 0.9493083885521889, 0.8493968411727022, 0.7359492706978531, 0.6955675809311908, 0.6623630164447729, 0.6524862421187175, 0.633705635757935, 0.5887225238859, 0.5749863704292293, 0.5809925314284523, 0.5452309169860297, 0.5470635499527206, 0.5239759767650692, 0.546914661754124, 0.5167736540444067, 0.49531171445786093, 0.5108349970334619, 0.4898529310252263, 0.451416529546781, 0.4756404348706777, 0.462627038109682, 0.4336172190592384, 0.44346928470532465, 0.41900423615915017, 0.4496085999735027, 0.40901443882231636, 0.4193202073760493, 0.39570596805495545, 0.3881381654688994, 0.38957440201648236, 0.4027618078499926, 0.386041480863351], "accuracy": [0.29705455899238586, 0.3727380931377411, 0.4880464971065521, 0.6156386137008667, 0.6507726907730103, 0.677189290523529, 0.719852089881897, 0.733060359954834, 0.748249888420105, 0.7516840696334839, 0.7552502751350403, 0.7839123010635376, 0.7792893648147583, 0.7781006693840027, 0.7906485199928284, 0.7910447716712952, 0.8006868362426758, 0.7951393723487854, 0.8017435073852539, 0.8153480291366577, 0.8068947196006775, 0.8133667707443237, 0.8304054737091064, 0.8227446675300598, 0.8264430165290833, 0.8374059200286865, 0.8381983637809753, 0.8425571322441101, 0.8298771381378174, 0.8488970994949341, 0.8385946154594421, 0.8535200357437134, 0.8570862412452698, 0.8524633646011353, 0.8479725122451782, 0.8545766472816467], "val_loss": [1.2149499143872942, 1.549729313169207, 0.9617508820125035, 0.7742281470979963, 0.7047804934637887, 0.5570025273731777, 0.5546409572873797, 0.524335367338998, 0.5239484650748116, 0.4874007190976824, 0.5229348966053554, 0.46506396361759733, 0.46344922270093647, 0.45193183422088623, 0.4366431406566075, 0.43932952199663433, 0.5028710535594395, 0.44031604698726107, 0.43517848423549105, 0.393268951347896, 0.41001599175589426, 0.38337881224496023, 0.41023583923067364, 0.3920431307383946, 0.3788564886365618, 0.4137159926550729, 0.3715650865009853, 0.39500841924122404, 0.3760014091219221, 0.37275233439036776, 0.3514148082051958, 0.40177925143923077, 0.41354394810540335, 0.3636030980518886, 0.35963187898908344, 0.3717571071216038], "val_accuracy": [0.5226666927337646, 0.4026666581630707, 0.5613333582878113, 0.6746666431427002, 0.6613333225250244, 0.7596666812896729, 0.7523333430290222, 0.768666684627533, 0.7553333044052124, 0.7860000133514404, 0.7676666378974915, 0.7986666560173035, 0.7976666688919067, 0.7960000038146973, 0.8059999942779541, 0.7913333177566528, 0.7760000228881836, 0.8083333373069763, 0.8086666464805603, 0.8273333311080933, 0.8266666531562805, 0.8370000123977661, 0.8180000185966492, 0.8330000042915344, 0.8396666646003723, 0.8193333148956299, 0.840666651725769, 0.8339999914169312, 0.8483333587646484, 0.843666672706604, 0.8586666584014893, 0.8206666707992554, 0.8149999976158142, 0.8496666550636292, 0.8550000190734863, 0.8489999771118164]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 8, 0, 6, 4, 6, 1, 4, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [4, 7, 5, 4], [7, 0], [67], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8368571400642395, "mapping_values": [1, 4, 4, 3, 1, 1, 16, 16, 9, 7, 0, 6, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad)), grad)), tf.math.add(beta, grad)), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.110162248984304, 1.8967584846923853, 1.4623923869952393, 1.0334613463504203, 0.9270277074803261, 0.8232678335734236, 0.7466227905452054, 0.7247934888114924, 0.6831881208599928, 0.6598716307908253, 0.6274993710703051, 0.5957636602361677, 0.5792777154109009, 0.5656135694273018, 0.5699391145794982, 0.5384892423658985, 0.5268464071670969, 0.5413553106424248, 0.5208863697787632, 0.5085890694002134, 0.5107488598861022, 0.5031519986973494, 0.4510357101571999, 0.48311397856441646, 0.45615411728222954, 0.44341080928554216, 0.455535837310007, 0.4252639411777758, 0.4277774233741531, 0.4065719624166208, 0.4283345244060245, 0.4052222290366254, 0.39500390061486934, 0.40677727309546813, 0.41101705546565515, 0.3909280797934819], "accuracy": [0.29705455899238586, 0.37326639890670776, 0.502971887588501, 0.6243560910224915, 0.6551313996315002, 0.6910579800605774, 0.7129837274551392, 0.7253995537757874, 0.7407211661338806, 0.7528728246688843, 0.7589486241340637, 0.7790252566337585, 0.7808743715286255, 0.7884030938148499, 0.7814027070999146, 0.7967243194580078, 0.7979130744934082, 0.7977809906005859, 0.8026680946350098, 0.8096684813499451, 0.8063663840293884, 0.8088759779930115, 0.8274996876716614, 0.8185180425643921, 0.8318583965301514, 0.8348963260650635, 0.8298771381378174, 0.8438779711723328, 0.844010055065155, 0.8494254350662231, 0.8363492488861084, 0.8461233377456665, 0.8519350290298462, 0.8469158411026001, 0.8459912538528442, 0.8518029451370239], "val_loss": [1.2167774949754988, 1.5100868770054408, 0.987457275390625, 0.8723540135792324, 0.723845396723066, 0.5706711326326642, 0.5538273709160941, 0.5467055014201573, 0.5032120091574532, 0.5145235742841449, 0.4910339798246111, 0.47265900884355816, 0.482914856501988, 0.43317365646362305, 0.4384978839329311, 0.42462559257234844, 0.4790968724659511, 0.4363088607788086, 0.445075443812779, 0.4125876086098807, 0.3953479954174587, 0.38487727301461355, 0.4090102655547006, 0.37890866824558805, 0.37839274747031076, 0.43282536949430195, 0.36146860463278635, 0.39835965633392334, 0.372405435357775, 0.43240428822381155, 0.3508974484034947, 0.4197536962372916, 0.41072486128125874, 0.39017891032355173, 0.3555739181382315, 0.3464293735367911], "val_accuracy": [0.5239999890327454, 0.4020000100135803, 0.5826666951179504, 0.6443333625793457, 0.671999990940094, 0.7463333606719971, 0.7300000190734863, 0.7593333125114441, 0.765666663646698, 0.7666666507720947, 0.7839999794960022, 0.7856666445732117, 0.778333306312561, 0.8050000071525574, 0.8013333082199097, 0.8143333196640015, 0.7793333530426025, 0.8086666464805603, 0.8056666851043701, 0.8163333535194397, 0.8330000042915344, 0.8326666951179504, 0.8240000009536743, 0.8399999737739563, 0.8386666774749756, 0.8009999990463257, 0.8476666808128357, 0.8256666660308838, 0.8433333039283752, 0.7950000166893005, 0.8576666712760925, 0.815666675567627, 0.8273333311080933, 0.824999988079071, 0.8546666502952576, 0.8576666712760925]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.834857165813446, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad)), grad)), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9748302586657134, 1.2777476110132127, 1.005222714446429, 0.8530609025821049, 0.8064671556679738, 0.7605868257535935, 0.7107677052695249, 0.7062490389347391, 0.6797614647743488, 0.6508110196142306, 0.6587453451076, 0.5999394362203638, 0.5946068131314324, 0.5990774503095574, 0.56558169037391, 0.5714858603625486, 0.5266350956719549, 0.5638166865605279, 0.5390014250627079, 0.5165623346961894, 0.5140471225322718, 0.5159176888797797, 0.48208780604236395, 0.4803094741863865, 0.4898709095881647, 0.4640701665004105, 0.46182965009266974, 0.45751624164989424, 0.44742375626036235, 0.43491296005869395, 0.428142449501058, 0.4259733857535069, 0.4105906384440933, 0.42926623062797115, 0.42985691464556647, 0.41093011053404266, 0.3925379571653612, 0.4065537468915634, 0.39006859223919144, 0.3795192387039163, 0.395401366099296, 0.3722000373250631, 0.3763806151006956, 0.37370205180220806, 0.3549939106641555, 0.36160231362464895, 0.3458723466409873, 0.3557208869136351, 0.351101626159965, 0.3482024132685812, 0.3610216190613114, 0.3353716544172216, 0.33623407924998755, 0.3367677962483983, 0.31847832901933487, 0.3142843458197766, 0.31518321891250456, 0.32749988266804814, 0.3013963558694013, 0.3014455265010652], "accuracy": [0.3473781645298004, 0.5424646735191345, 0.6386210322380066, 0.6762647032737732, 0.6988508701324463, 0.7065116763114929, 0.7302865982055664, 0.7345132827758789, 0.7441553473472595, 0.7534011602401733, 0.748778223991394, 0.7823272943496704, 0.7693831920623779, 0.7753269076347351, 0.7911768555641174, 0.7824593782424927, 0.7991018295288086, 0.7873464822769165, 0.793950617313385, 0.8067626357078552, 0.8050455451011658, 0.8030643463134766, 0.817989706993103, 0.8219521641731262, 0.8132346868515015, 0.8267071843147278, 0.8293488025665283, 0.8294808864593506, 0.8392550349235535, 0.8397833704948425, 0.8407079577445984, 0.8407079577445984, 0.8510104417800903, 0.8372738361358643, 0.8384625315666199, 0.8438779711723328, 0.8544445633888245, 0.850350022315979, 0.8556333184242249, 0.8603883385658264, 0.8521991968154907, 0.863029956817627, 0.8598600029945374, 0.8627657890319824, 0.871879518032074, 0.8648791313171387, 0.872407853603363, 0.8683133125305176, 0.8673887252807617, 0.8668603897094727, 0.8668603897094727, 0.8802007436752319, 0.8768987059593201, 0.8755778670310974, 0.8838990926742554, 0.8813894987106323, 0.8854840993881226, 0.8742570281028748, 0.8862766027450562, 0.8887861371040344], "val_loss": [1.2594031265803747, 0.743705187525068, 0.6513652801513672, 0.6628918136869159, 0.6033052035740444, 0.5582737071173531, 0.5329639230455671, 0.5474563837051392, 0.5446043355124337, 0.5186818497521537, 0.4884064197540283, 0.5356178283691406, 0.48609582015446257, 0.46883654594421387, 0.44043891770499094, 0.45694819518498014, 0.48552187851497103, 0.45336524077824186, 0.4409641708646502, 0.4178760477474758, 0.42248823813029696, 0.4007078579493931, 0.4278055088860648, 0.4035275748797825, 0.4032921961375645, 0.42287103618894306, 0.37387015989848543, 0.39702365228108, 0.37523021016802105, 0.3844102791377476, 0.3709818550518581, 0.37709520544324604, 0.37776935952050344, 0.40415854113442556, 0.356662460735866, 0.3476370998791286, 0.3591597931725638, 0.3443097472190857, 0.3500989930970328, 0.3641558885574341, 0.3435533217021397, 0.3579984051840646, 0.3551367606435503, 0.3380975297519139, 0.34013899735042025, 0.3608667850494385, 0.33769941329956055, 0.35294422081538607, 0.3242582082748413, 0.3374461020742144, 0.3267125402178083, 0.32859056336539133, 0.3388587236404419, 0.33501177174704416, 0.326175936630794, 0.33362152746745516, 0.34749943017959595, 0.3355803234236581, 0.3315071974481855, 0.3223003149032593], "val_accuracy": [0.46166667342185974, 0.731333315372467, 0.7116666436195374, 0.7006666660308838, 0.7133333086967468, 0.7429999709129333, 0.7649999856948853, 0.7590000033378601, 0.7400000095367432, 0.7713333368301392, 0.7853333353996277, 0.7483333349227905, 0.7910000085830688, 0.7893333435058594, 0.8133333325386047, 0.7946666479110718, 0.7763333320617676, 0.7979999780654907, 0.8056666851043701, 0.8226666450500488, 0.8149999976158142, 0.8303333520889282, 0.8119999766349792, 0.8299999833106995, 0.8243333101272583, 0.8066666722297668, 0.8473333120346069, 0.8303333520889282, 0.8463333249092102, 0.843666672706604, 0.8476666808128357, 0.8410000205039978, 0.8366666436195374, 0.8209999799728394, 0.8506666421890259, 0.859333336353302, 0.8489999771118164, 0.8583333492279053, 0.8539999723434448, 0.8433333039283752, 0.8603333234786987, 0.843999981880188, 0.8453333377838135, 0.859333336353302, 0.8610000014305115, 0.8423333168029785, 0.859333336353302, 0.8519999980926514, 0.8640000224113464, 0.8553333282470703, 0.8669999837875366, 0.8659999966621399, 0.8606666922569275, 0.859666645526886, 0.8673333525657654, 0.8583333492279053, 0.8586666584014893, 0.8610000014305115, 0.8566666841506958, 0.8666666746139526]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8271428346633911, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 8, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1101589437489023, 1.9000293254505893, 1.5015805329566052, 1.0810332855512563, 0.936941616980155, 0.8169694040524189, 0.7282176715130063, 0.7172509958998812, 0.660565027298157, 0.6448033532099937, 0.6390601563305667, 0.5899408715134362, 0.57610812878108, 0.5761617330622443, 0.5510684206753107, 0.5446316778242565, 0.5245491912210338, 0.5369328491644632, 0.5150085294314379, 0.504577524563451, 0.5017168181148172, 0.502741667435012, 0.451732958497593, 0.4691657624570937, 0.4595021087661033, 0.43955950340763644, 0.4449915021063551, 0.4202984075394478, 0.44270188592176524, 0.414619375512805, 0.4049702645206275, 0.41015014573961217, 0.3834075468831358, 0.4022364815614164, 0.3915089420819752, 0.3833360068865141], "accuracy": [0.29705455899238586, 0.37339848279953003, 0.4939902126789093, 0.6001849174499512, 0.6565843224525452, 0.685510516166687, 0.7250033020973206, 0.7288337349891663, 0.7523444890975952, 0.7516840696334839, 0.7543256878852844, 0.7819310426712036, 0.77677983045578, 0.7837802171707153, 0.7848368883132935, 0.7905164361000061, 0.7991018295288086, 0.7936864495277405, 0.8042530417442322, 0.8137630224227905, 0.8072909712791443, 0.8105930685997009, 0.8333113193511963, 0.8255184292793274, 0.8248580098152161, 0.8323867321014404, 0.8368775844573975, 0.8411042094230652, 0.8366134166717529, 0.8444063067436218, 0.8479725122451782, 0.8444063067436218, 0.8556333184242249, 0.8438779711723328, 0.8533879518508911, 0.8543124794960022], "val_loss": [1.2167528016226632, 1.549851383481707, 1.0126029423304967, 0.6991804838180542, 0.653963599886213, 0.5614612783704486, 0.5700775895799909, 0.5158123459134784, 0.5439881597246442, 0.4928624289376395, 0.4896219457898821, 0.47456445012773785, 0.4750786508832659, 0.4677124193736485, 0.4445481981549944, 0.45971219880240305, 0.4841747794832502, 0.4401469741548811, 0.46315268107822966, 0.4091642754418509, 0.4208072083336966, 0.3885364702769688, 0.3897428171975272, 0.38482718808310373, 0.37812442438943045, 0.43368870871407644, 0.3920723795890808, 0.41339240755353657, 0.3753162281853812, 0.3710871253694807, 0.35187165226255146, 0.36311272212437223, 0.38733541113989695, 0.39077168703079224, 0.3569485204560416, 0.3782478911536081], "val_accuracy": [0.5239999890327454, 0.4000000059604645, 0.5423333048820496, 0.7003333568572998, 0.6863333582878113, 0.7396666407585144, 0.7450000047683716, 0.7726666927337646, 0.7396666407585144, 0.7850000262260437, 0.778333306312561, 0.7839999794960022, 0.7816666960716248, 0.7829999923706055, 0.8009999990463257, 0.7846666574478149, 0.7816666960716248, 0.8096666932106018, 0.7990000247955322, 0.8256666660308838, 0.8180000185966492, 0.8303333520889282, 0.8366666436195374, 0.8389999866485596, 0.8413333296775818, 0.809333324432373, 0.8276666402816772, 0.8236666917800903, 0.8473333120346069, 0.8429999947547913, 0.8560000061988831, 0.8476666808128357, 0.8366666436195374, 0.8306666612625122, 0.8556666374206543, 0.840666651725769]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 1, 9, 4, 6, 4, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8202857375144958, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9811439127292867, 1.2724433592707016, 1.0235634610527273, 0.9050609509249908, 0.7789629660876451, 0.7438669615118747, 0.735624416408884, 0.7236642871298542, 0.6947456614735923, 0.6523129515140252, 0.6812887073287465, 0.6028082495226348, 0.5944959414066687, 0.6185788299350564, 0.5778936972754775, 0.5679711633984439, 0.5472319957334856, 0.5562158582579301, 0.5557950392548497, 0.5279651492058625, 0.5435566743485223, 0.5164967351869238, 0.48446608009339637, 0.49463790220953546, 0.501776715527751, 0.476226684723107, 0.47065837592134513, 0.46330326842814545, 0.46586973994100384, 0.44805701090564914, 0.4373779612730019, 0.4517301007260925, 0.4232231684097005, 0.4414435796269399], "accuracy": [0.3461894094944, 0.5506538152694702, 0.6272619366645813, 0.6643772125244141, 0.705058753490448, 0.7168141603469849, 0.7219653725624084, 0.733060359954834, 0.7450799345970154, 0.7547219395637512, 0.7371549606323242, 0.7788931727409363, 0.7695152759552002, 0.7655527591705322, 0.7836481332778931, 0.7843085527420044, 0.7942147850990295, 0.7922335267066956, 0.7849689722061157, 0.800290584564209, 0.7923656105995178, 0.8013472557067871, 0.8190463781356812, 0.8161405324935913, 0.8112534880638123, 0.8212917447090149, 0.8244617581367493, 0.8284242749214172, 0.8310658931732178, 0.8347642421722412, 0.8401796221733093, 0.8281601071357727, 0.8446704745292664, 0.8343679904937744], "val_loss": [1.1936333860669817, 1.0567604473658971, 0.6700371844427926, 0.6359630482537406, 0.5704823391778129, 0.6250443458557129, 0.5433478014809745, 0.5623211520058768, 0.5021397726876395, 0.5339748178209577, 0.49096242019108366, 0.5148225852421352, 0.49546618121010916, 0.4710679735456194, 0.4435638189315796, 0.45646047592163086, 0.45322188309260775, 0.47406930582863943, 0.4440500736236572, 0.4316508684839521, 0.4332388298852103, 0.4038169043404715, 0.43491242613111225, 0.410060601575034, 0.4113886611802237, 0.405823860849653, 0.38106616905757357, 0.4164732439177377, 0.3789725388799395, 0.39930184398378643, 0.38829960993358065, 0.3889957240649632, 0.39249521493911743, 0.40609319720949444], "val_accuracy": [0.4986666738986969, 0.5673333406448364, 0.7056666612625122, 0.718999981880188, 0.7566666603088379, 0.7196666598320007, 0.7609999775886536, 0.75, 0.7799999713897705, 0.7649999856948853, 0.7836666703224182, 0.7566666603088379, 0.7913333177566528, 0.7940000295639038, 0.8083333373069763, 0.7929999828338623, 0.8029999732971191, 0.7870000004768372, 0.8026666641235352, 0.8140000104904175, 0.8076666593551636, 0.8270000219345093, 0.8100000023841858, 0.824999988079071, 0.8220000267028809, 0.8180000185966492, 0.840666651725769, 0.8130000233650208, 0.8446666598320007, 0.8356666564941406, 0.8349999785423279, 0.8306666612625122, 0.8259999752044678, 0.8240000009536743]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 8, 6, 9, 3, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 0, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [35, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8168571591377258, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 8, 4, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), grad))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.110153113783248, 1.894305271621173, 1.463324126188293, 1.043501729954818, 0.9501427527447701, 0.8278855860524599, 0.7098420289655198, 0.7068706914623101, 0.6763758302411982, 0.6393252231299743, 0.6188786074532935, 0.5939755070211078, 0.6004138314067381, 0.5810697409833002, 0.5549587623798427, 0.5438971254630662, 0.5252541765450581, 0.539956448753953, 0.5235232173758821, 0.49562330032462504, 0.4705324742055887, 0.5098209632716836, 0.4455651262094316, 0.47173654800865233, 0.4806934185094837, 0.4436160714052231, 0.4509727875152835, 0.4606850647324852, 0.4292119524427267, 0.41361841204742383, 0.4082343029371263, 0.41481405978016395, 0.3842162485285489, 0.4157593005353182, 0.3825985883102913, 0.3874197554641853, 0.3785687997443187, 0.38698751917210994, 0.35576400598908425, 0.352713124717562], "accuracy": [0.29705455899238586, 0.3755118250846863, 0.5135384798049927, 0.6071853041648865, 0.6616035103797913, 0.6831330060958862, 0.733588695526123, 0.7322678565979004, 0.7404569983482361, 0.7613261342048645, 0.7617223858833313, 0.780610203742981, 0.7677981853485107, 0.7824593782424927, 0.7873464822769165, 0.7917051911354065, 0.8033285140991211, 0.7957997918128967, 0.8010830879211426, 0.8204993009567261, 0.8240655064582825, 0.8090080618858337, 0.8318583965301514, 0.8261788487434387, 0.8142913579940796, 0.8380662798881531, 0.83119797706604, 0.8259146809577942, 0.8438779711723328, 0.8451988101005554, 0.8444063067436218, 0.8471800088882446, 0.8573504090309143, 0.8403117060661316, 0.8585391640663147, 0.8506141901016235, 0.8607845902442932, 0.8569541573524475, 0.8691058158874512, 0.8691058158874512], "val_loss": [1.215684073311942, 1.4468028204781669, 0.823541351727077, 0.6379634993416923, 0.6641489607947213, 0.5587451798575265, 0.55155120577131, 0.5201172828674316, 0.5092763389859881, 0.5142805235726493, 0.49082895687648226, 0.4653371913092477, 0.4600011961800711, 0.4777092933654785, 0.4430017130715506, 0.4399078743798392, 0.4468009982790266, 0.43142126287732807, 0.4595398562295096, 0.39555186884743826, 0.39033292872565134, 0.3875521847179958, 0.4151809300695147, 0.3947751522064209, 0.3730714576584952, 0.42824859278542654, 0.40381056921822683, 0.405078044959477, 0.37445770842688425, 0.3746510829244341, 0.36106797627040316, 0.36469726051603046, 0.37545653751918245, 0.36421688965388704, 0.357522930417742, 0.3760432941573007, 0.385605445929936, 0.36952524525778635, 0.35974779299327303, 0.3453691857201712], "val_accuracy": [0.5236666798591614, 0.39633333683013916, 0.6596666574478149, 0.734333336353302, 0.6926666498184204, 0.7396666407585144, 0.7453333139419556, 0.7693333625793457, 0.7643333077430725, 0.7590000033378601, 0.7823333144187927, 0.7910000085830688, 0.793666660785675, 0.7799999713897705, 0.8056666851043701, 0.7940000295639038, 0.796999990940094, 0.812666654586792, 0.7993333339691162, 0.8270000219345093, 0.8339999914169312, 0.8293333053588867, 0.8203333616256714, 0.8299999833106995, 0.8433333039283752, 0.8003333210945129, 0.8263333439826965, 0.8266666531562805, 0.8476666808128357, 0.8376666903495789, 0.8533333539962769, 0.8489999771118164, 0.8383333086967468, 0.8456666469573975, 0.8619999885559082, 0.8420000076293945, 0.8416666388511658, 0.8476666808128357, 0.8453333377838135, 0.8493333458900452]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 2, 1, 3, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8131428360939026, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.multiply(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad)), grad)), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.110140023797085, 1.8987748726499771, 1.4344083790954834, 1.0563037334463428, 0.9215233537184327, 0.8423790326680269, 0.744529081900925, 0.704815084876606, 0.6817850967628798, 0.6493711774816224, 0.6390791795729583, 0.6091333808065673, 0.560893152856304, 0.5800223077340227, 0.5570935925763785, 0.5410728093230288, 0.5314375479554204, 0.5395485606994674, 0.5178266903034936, 0.5022923957914205, 0.5031624256879614, 0.49604390867634096, 0.44877465906758524, 0.4697264054227483, 0.46770988257333446, 0.4392018117224142, 0.4428777231469115, 0.43321987793288447, 0.4291413190767608, 0.42485942661549675, 0.4157434236639605, 0.41012413857037033, 0.3867768595333916, 0.41292049313706336, 0.40425469698671024, 0.38495089767741614, 0.374679467264278, 0.39017890587994264, 0.3664315946704251, 0.3466240349321034, 0.353917145040986, 0.3567430172708481, 0.3495182102902092, 0.35026617978211516, 0.340981896365906, 0.3252965926872095, 0.3108095920018201, 0.34936849471994, 0.31625645961098275], "accuracy": [0.29705455899238586, 0.3763043284416199, 0.5070664286613464, 0.6165632009506226, 0.6622639298439026, 0.683000922203064, 0.7211728692054749, 0.7357020378112793, 0.7371549606323242, 0.7518161535263062, 0.7532690763473511, 0.7689869403839111, 0.7881389260292053, 0.7849689722061157, 0.7860256433486938, 0.7906485199928284, 0.7972526550292969, 0.7948752045631409, 0.8042530417442322, 0.8145555257797241, 0.8090080618858337, 0.8128384351730347, 0.8310658931732178, 0.8244617581367493, 0.82683926820755, 0.8350284099578857, 0.8359529972076416, 0.8384625315666199, 0.8422929644584656, 0.8407079577445984, 0.8424250483512878, 0.8469158411026001, 0.852331280708313, 0.8470479249954224, 0.8502179384231567, 0.8549728989601135, 0.8594637513160706, 0.856689989566803, 0.8625016212463379, 0.8720116019248962, 0.8684453964233398, 0.8651432991027832, 0.8701624870300293, 0.871879518032074, 0.8677849769592285, 0.8751816153526306, 0.8837670087814331, 0.8665962219238281, 0.8831065893173218], "val_loss": [1.217146737234933, 1.4396824155535017, 0.9635986260005406, 0.7893719843455723, 0.7664369515010289, 0.5505998134613037, 0.5411146538598197, 0.5344814232417515, 0.5494496311460223, 0.5175025633403233, 0.4863426855632237, 0.5063158614294869, 0.5082349606922695, 0.4626615728650774, 0.4330748660223825, 0.4378637245723179, 0.47909573146275114, 0.4260187404496329, 0.47162789957863943, 0.4100008010864258, 0.4031021424702236, 0.3871392011642456, 0.3953032238142831, 0.38343467882701326, 0.38363432032721384, 0.4190265025411333, 0.3630348869732448, 0.4069175549915859, 0.37700298002787996, 0.3798529420580183, 0.3593031167984009, 0.3768658552850996, 0.3979665126119341, 0.38099072660718647, 0.3586726358958653, 0.37389215401240755, 0.35701803650174824, 0.35114032881600515, 0.34739623750959125, 0.33849514382226126, 0.3602119599069868, 0.35917445591517855, 0.3953472546168736, 0.3271981307438442, 0.3324569548879351, 0.3426799603870937, 0.3397090179579599, 0.34676192487989155, 0.3335507001195635], "val_accuracy": [0.5220000147819519, 0.4000000059604645, 0.6553333401679993, 0.624666690826416, 0.6539999842643738, 0.753000020980835, 0.7633333206176758, 0.7616666555404663, 0.7383333444595337, 0.7706666588783264, 0.7873333096504211, 0.7646666765213013, 0.7616666555404663, 0.7846666574478149, 0.8130000233650208, 0.8046666383743286, 0.7839999794960022, 0.8149999976158142, 0.7950000166893005, 0.8169999718666077, 0.8259999752044678, 0.8303333520889282, 0.8333333134651184, 0.8379999995231628, 0.8366666436195374, 0.8109999895095825, 0.8500000238418579, 0.8180000185966492, 0.843999981880188, 0.8460000157356262, 0.8523333072662354, 0.843666672706604, 0.8330000042915344, 0.8370000123977661, 0.859333336353302, 0.8450000286102295, 0.8523333072662354, 0.8553333282470703, 0.8569999933242798, 0.8606666922569275, 0.8460000157356262, 0.8516666889190674, 0.82833331823349, 0.8643333315849304, 0.8629999756813049, 0.8569999933242798, 0.8636666536331177, 0.8576666712760925, 0.8566666841506958]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 3, 1, 9, 4, 6, 4, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8080000281333923, "mapping_values": [1, 4, 4, 3, 1, 1, 12, 12, 8, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.110158962013699, 1.8994885115906264, 1.5017392416325355, 1.1503171271746264, 0.9053338051566578, 0.8175405963159051, 0.7347762945967107, 0.7159060333320225, 0.6884283347215477, 0.6542421780194998, 0.6303969950345938, 0.613780587206994, 0.5780316177391971, 0.5890126090244359, 0.5576173227697142, 0.5484378364470027, 0.533647741490131, 0.5355247102235964, 0.5533741375379999, 0.5086376546136518, 0.492907140705611, 0.5015563892296292, 0.45137944849427697, 0.4779065265167092, 0.47823460521541805, 0.4373022192000965, 0.4613414328481858, 0.4341050225667131, 0.44685544980720143, 0.4096026634299256, 0.419215665411058, 0.40195705121172226, 0.3949455389603648, 0.3979904460451937, 0.38866159808775846, 0.393833410643851, 0.3781555923866385, 0.36618531659971754, 0.36424569911362237, 0.34694890279370594], "accuracy": [0.29705455899238586, 0.3739268183708191, 0.4950468838214874, 0.5815612077713013, 0.6639809608459473, 0.6886804699897766, 0.720380425453186, 0.7279091477394104, 0.737022876739502, 0.7500990629196167, 0.7593448758125305, 0.7643640041351318, 0.7757231593132019, 0.7728173136711121, 0.7860256433486938, 0.7927618622779846, 0.7971205711364746, 0.8006868362426758, 0.7927618622779846, 0.8152159452438354, 0.8129705190658569, 0.8090080618858337, 0.8302733898162842, 0.8224804997444153, 0.8211596608161926, 0.8368775844573975, 0.8251221776008606, 0.8379341959953308, 0.8358209133148193, 0.8499537706375122, 0.8388587832450867, 0.850350022315979, 0.8552370667457581, 0.8506141901016235, 0.8543124794960022, 0.8500858545303345, 0.8545766472816467, 0.8654074668884277, 0.863558292388916, 0.8726720213890076], "val_loss": [1.217308691569737, 1.5394488402775355, 1.2263128076280867, 0.7655399186270577, 0.635756356375558, 0.6243975332805088, 0.5528253657477242, 0.537747825895037, 0.5181418997900826, 0.5144615343638829, 0.47961391721452984, 0.5070004122597831, 0.46815461771828787, 0.4466533660888672, 0.44707909652165007, 0.4337536096572876, 0.5271373816898891, 0.4484361410140991, 0.4449113777705601, 0.4024605325290135, 0.4221635546003069, 0.38974141223090036, 0.40453543833323885, 0.3822789192199707, 0.3852276546614511, 0.4347681828907558, 0.38765524114881245, 0.41189879179000854, 0.37327416454042706, 0.37200312103543964, 0.35261863470077515, 0.3866962024143764, 0.40792542695999146, 0.3679893527712141, 0.3592655062675476, 0.35814651421138216, 0.3577662706375122, 0.3568125622613089, 0.3562135781560625, 0.3446806328637259], "val_accuracy": [0.5236666798591614, 0.39266666769981384, 0.43799999356269836, 0.6510000228881836, 0.7020000219345093, 0.7193333506584167, 0.7319999933242798, 0.7593333125114441, 0.7556666731834412, 0.7593333125114441, 0.7850000262260437, 0.7609999775886536, 0.7919999957084656, 0.796999990940094, 0.8029999732971191, 0.8026666641235352, 0.7666666507720947, 0.8006666898727417, 0.8009999990463257, 0.8263333439826965, 0.812333345413208, 0.8289999961853027, 0.8226666450500488, 0.8356666564941406, 0.8346666693687439, 0.8019999861717224, 0.8306666612625122, 0.8266666531562805, 0.847000002861023, 0.8446666598320007, 0.8536666631698608, 0.8366666436195374, 0.8246666789054871, 0.8463333249092102, 0.8560000061988831, 0.8493333458900452, 0.843666672706604, 0.8546666502952576, 0.8446666598320007, 0.8550000190734863]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 6, 3, 8, 3, 2, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7605714201927185, "mapping_values": [1, 4, 4, 3, 1, 1, 14, 14, 7, 7, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(grad, grad)))), tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, alpha))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1615000047294486, 1.7756532089915873, 1.4542984729744677, 1.102533537005358, 1.0048466922269756, 0.9680485899075856, 0.9329912475134482, 0.8194144746457676, 0.746687267576431, 0.7501898496898253, 0.7583187628006497, 0.693061480440594, 0.6619648230294699, 0.6339030079774853], "accuracy": [0.2592788338661194, 0.4275524914264679, 0.4826310873031616, 0.6095628142356873, 0.625148594379425, 0.6287148594856262, 0.6460176706314087, 0.6790384650230408, 0.7148329019546509, 0.7028133869171143, 0.7251353859901428, 0.7244749665260315, 0.7425703406333923, 0.7458723783493042], "val_loss": [1.540740864617484, 1.5774359021868025, 0.9372809955051967, 0.7792819908687046, 0.8600110156195504, 0.6762178114482335, 0.6737350395747593, 0.6184400490352085, 0.5646098170961652, 0.5957860776356289, 0.562239578792027, 0.560671295438494, 0.542048488344465, 0.545837232044765], "val_accuracy": [0.4390000104904175, 0.35733333230018616, 0.6133333444595337, 0.6506666541099548, 0.628000020980835, 0.6963333487510681, 0.7013333439826965, 0.7480000257492065, 0.7583333253860474, 0.7416666746139526, 0.737666666507721, 0.7440000176429749, 0.7459999918937683, 0.7440000176429749]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [9, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 2, 3, 8, 8, 2, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.38342857360839844, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 7, 6, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, grad)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), grad)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3008947043355272, 2.3012208382781973, 2.2999421510997466, 2.299745513180133, 2.30105195793698, 2.2991705004722687, 2.2972803134739346, 2.2968222617851097, 2.2978896167315765, 2.29536885456906, 2.297118654875881, 2.297429317528026, 2.2938083373261104, 2.2932718897287825, 2.2940641763644556, 2.292331479559674, 2.291830762817308, 2.292308443242281, 2.2912759239553004, 2.290694817859326, 2.2907823233981692, 2.289427791714369, 2.288776156987654, 2.288936486538328, 2.287765307023997, 2.2872373062968174, 2.2866138808873067, 2.2875070222348994, 2.285621051475939, 2.285286664269966, 2.2832653368815237, 2.283623221716971, 2.283753916351566, 2.2824869120613838, 2.2798918848260676, 2.28162856269522, 2.281806945265434, 2.2807113290730565, 2.2788407130248323, 2.2790359242748766, 2.2796732865430425, 2.278921185073883, 2.278592807174973, 2.277230170834035, 2.277099270657494, 2.275169328219225, 2.2754277544975157, 2.2737539044744097, 2.2733571956406777, 2.2743951736455736, 2.2729717581704496, 2.2716892798185317, 2.270917335096336, 2.271412086272677, 2.2703227635624073, 2.2696805451571618, 2.2698599788979172, 2.2685710176453537, 2.26754204402778, 2.268976790195506, 2.2665157954548927, 2.266762754526971, 2.2646134691373185, 2.2668063665157483, 2.2640526529946237, 2.264347569534036, 2.2633251697002166, 2.2630943274847537, 2.2618164109547596, 2.262333808432103, 2.2609705810045537, 2.2605763317146446, 2.259232944359538, 2.259527898719676, 2.2572038227525195, 2.256897457649585, 2.257574033680499, 2.2555916552782342, 2.2544784075737376, 2.2543143256465443, 2.2565422809796325, 2.2528981712468785, 2.252051374679543, 2.252425164216545, 2.2503228841629705, 2.2537544594937153, 2.250306733516481, 2.25117156241375, 2.249493162566802, 2.246559356040234, 2.248440536982222, 2.245650067069291, 2.245963338816155, 2.2442859342746635, 2.2437358500541493, 2.2445836752759405, 2.2435889523090107, 2.242604481183527, 2.23985490108037, 2.240511490511085], "accuracy": [0.09074098616838455, 0.0936468094587326, 0.09668471664190292, 0.09615638852119446, 0.09536388516426086, 0.09826971590518951, 0.0956280529499054, 0.1010434553027153, 0.1022322028875351, 0.10487385839223862, 0.1006472036242485, 0.1006472036242485, 0.10791176557540894, 0.11161009222269058, 0.11134592443704605, 0.10830801725387573, 0.11728965491056442, 0.11715757846832275, 0.11451591551303864, 0.1154404953122139, 0.11649715900421143, 0.11821424216032028, 0.12178047746419907, 0.1208558976650238, 0.12310130894184113, 0.12402588874101639, 0.13181878626346588, 0.12442214041948318, 0.1302337795495987, 0.13578127324581146, 0.14000792801380157, 0.1426495909690857, 0.13657376170158386, 0.14529123902320862, 0.148064985871315, 0.14581957459449768, 0.1438383311033249, 0.14621582627296448, 0.15149913728237152, 0.1488574892282486, 0.1550653874874115, 0.15149913728237152, 0.14793290197849274, 0.15176330506801605, 0.15678246319293976, 0.1624620258808136, 0.15902787446975708, 0.16616034507751465, 0.16840575635433197, 0.15995244681835175, 0.16853784024715424, 0.16959451138973236, 0.17197199165821075, 0.17223615944385529, 0.17263241112232208, 0.1760665625333786, 0.1748778223991394, 0.18095363676548004, 0.17897239327430725, 0.18333113193511963, 0.18716153502464294, 0.18623696267604828, 0.187689870595932, 0.18451987206935883, 0.18993528187274933, 0.19178444147109985, 0.1954827606678009, 0.19138818979263306, 0.1982565075159073, 0.19719983637332916, 0.2001056671142578, 0.19984149932861328, 0.19970941543579102, 0.20353981852531433, 0.20737022161483765, 0.20684190094470978, 0.21291771531105042, 0.21635186672210693, 0.21371020376682281, 0.21542729437351227, 0.21304979920387268, 0.2188614457845688, 0.2230881005525589, 0.22282393276691437, 0.2156914472579956, 0.21621978282928467, 0.22242768108844757, 0.22454100847244263, 0.22440892457962036, 0.23312640190124512, 0.22216351330280304, 0.24157971143722534, 0.23735305666923523, 0.23814556002616882, 0.23656055331230164, 0.23880596458911896, 0.24342887103557587, 0.23999471962451935, 0.24501386284828186, 0.24197596311569214], "val_loss": [1.9703965868268694, 1.9698551041739327, 1.969315869467599, 1.9687767710004533, 1.968240397317069, 1.967703138078962, 1.9671691485813685, 1.9666336604527064, 1.9660989897591727, 1.9655588013785226, 1.9650238582066126, 1.9644855771745955, 1.9639485904148646, 1.9634156908307756, 1.9628795896257674, 1.9623494148254395, 1.9618185588291712, 1.961282730102539, 1.960756846836635, 1.9602266720363073, 1.9596915245056152, 1.95916291645595, 1.9586333547319685, 1.9581044060843331, 1.957570961543492, 1.9570400374276298, 1.956504958016532, 1.9559759412493025, 1.9554448127746582, 1.954916068485805, 1.9543777874537878, 1.9538450922284807, 1.9533131463187081, 1.952775342123849, 1.952242306300572, 1.9517081805637904, 1.9511726243155343, 1.95063202721732, 1.9500908170427596, 1.9495509011404855, 1.94901670728411, 1.9484813553946358, 1.9479431424822127, 1.9474022729056222, 1.9468580654689245, 1.9463137217930384, 1.9457686288016183, 1.9452263968331474, 1.9446804182870048, 1.944133690425328, 1.943584782736642, 1.943037646157401, 1.942488738468715, 1.9419409206935339, 1.941389901297433, 1.9408369064331055, 1.9402783938816615, 1.9397238322666712, 1.9391602788652693, 1.938600812639509, 1.9380406652178084, 1.9374750001089913, 1.9368993895394462, 1.9363305909293038, 1.9357550484793526, 1.9351848874773299, 1.9346083913530623, 1.9340328489031111, 1.9334445680890764, 1.9328630311148507, 1.9322780200413294, 1.9316879681178503, 1.931103229522705, 1.9305113383701868, 1.929905687059675, 1.9293078013828822, 1.9287100519452776, 1.9281065804617745, 1.9274945940290178, 1.9268834931509835, 1.9262732097080775, 1.9256569317408971, 1.9250352042061942, 1.9244116374424525, 1.9237891605922155, 1.9231714521135603, 1.9225462504795618, 1.9219164848327637, 1.9212841987609863, 1.9206457138061523, 1.920008659362793, 1.919356073651995, 1.9187045778547014, 1.918050697871617, 1.9173908914838518, 1.916738782610212, 1.916074616568429, 1.9154106548854284, 1.914738655090332, 1.9140663146972656], "val_accuracy": [0.041999999433755875, 0.04466666653752327, 0.046666666865348816, 0.050333332270383835, 0.05533333495259285, 0.058666665107011795, 0.06233333423733711, 0.06666667014360428, 0.07066666334867477, 0.07500000298023224, 0.07833333313465118, 0.08266666531562805, 0.08666666597127914, 0.09066666662693024, 0.0963333323597908, 0.10333333164453506, 0.1080000028014183, 0.1146666631102562, 0.11766666918992996, 0.12300000339746475, 0.12933333218097687, 0.13500000536441803, 0.14133332669734955, 0.14933332800865173, 0.15666666626930237, 0.16033333539962769, 0.16466666758060455, 0.1693333387374878, 0.1733333319425583, 0.17900000512599945, 0.18333333730697632, 0.1886666715145111, 0.19466666877269745, 0.20000000298023224, 0.20466665923595428, 0.21166667342185974, 0.21566666662693024, 0.22166666388511658, 0.22733333706855774, 0.23266667127609253, 0.23766666650772095, 0.24300000071525574, 0.24899999797344208, 0.25433334708213806, 0.2590000033378601, 0.2633333206176758, 0.26766666769981384, 0.2720000147819519, 0.2763333320617676, 0.27933332324028015, 0.2836666703224182, 0.28733333945274353, 0.289000004529953, 0.29233333468437195, 0.2953333258628845, 0.2983333468437195, 0.30266666412353516, 0.3076666593551636, 0.31200000643730164, 0.3140000104904175, 0.3173333406448364, 0.32066667079925537, 0.3256666660308838, 0.3269999921321869, 0.33266666531562805, 0.33500000834465027, 0.3383333384990692, 0.3409999907016754, 0.3453333377838135, 0.3476666808128357, 0.3503333330154419, 0.35333332419395447, 0.3553333282470703, 0.3566666543483734, 0.35899999737739563, 0.3616666793823242, 0.36533331871032715, 0.3683333396911621, 0.3686666786670685, 0.3700000047683716, 0.37166666984558105, 0.37466666102409363, 0.3766666650772095, 0.37700000405311584, 0.3779999911785126, 0.37966665625572205, 0.3813333213329315, 0.382666677236557, 0.3853333294391632, 0.3856666684150696, 0.3863333463668823, 0.3869999945163727, 0.38866665959358215, 0.39133334159851074, 0.39233332872390747, 0.39233332872390747, 0.39266666769981384, 0.3930000066757202, 0.39366665482521057, 0.39500001072883606]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 8, 0, 6, 4, 6, 1, 4, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.37314286828041077, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 7, 6, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.add(beta, grad))), tf.math.add(beta, grad)), grad))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4262368604097984, 2.294263028670233, 2.1432375356490034, 2.272163228052734, 2.2394246755574025, 2.3758832329787976, 2.226904265994897, 2.3876410082677384, 2.305051449062865, 2.303293617221075, 2.303618344868872, 2.3027913645667613], "accuracy": [0.19495442509651184, 0.15955619513988495, 0.2533350884914398, 0.18134988844394684, 0.14449875056743622, 0.18319904804229736, 0.18253862857818604, 0.12653546035289764, 0.09906221181154251, 0.09972262382507324, 0.09668471664190292, 0.1072513535618782], "val_loss": [1.973186833517892, 1.9217895099094935, 1.8335582188197546, 1.9812034198216029, 1.9999326297215052, 1.9733400344848633, 2.134665216718401, 1.9771622930254256, 1.9748646191188268, 1.9741871697562081, 1.9738830157688685, 1.973090376172747], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.27900001406669617, 0.0949999988079071, 0.3330000042915344, 0.12600000202655792, 0.33399999141693115, 0.09666666388511658, 0.10166666656732559, 0.10199999809265137, 0.10199999809265137, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 6, 6, 9, 6, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 2, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [Infinity, 14.041134445942184, 26.06857276501326, 38.09733747261359, 50.12588647346865, 62.154304354245305], "accuracy": [0.08413683623075485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7.776725224086216, 18.07719475882394, 28.379674639020646, 38.682203020368306, 48.98473794119699, 59.28606523786272], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 4, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 4, 9, 3, 3, 8, 2, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 27, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.pow(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 1, 9, 4, 6, 4, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 8, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 8, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 1, 9, 4, 6, 4, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [Infinity, 76.569953627228, 243.1340393098653, 505.9574995865959, 864.1980574132587, 1320.3225747429542], "accuracy": [0.08374059200286865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [27.618729727608816, 136.1670401436942, 327.09454345703125, 600.4048723493304, 956.2868303571429, 1394.415492466518], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 1, 9, 4, 6, 4, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 8, 6, 9, 3, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 55, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 0, 12, 12, 7, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301137817093347, 2.3020579549126605, 2.301366914926251, 2.3017449287958214, 2.3036486662893783, 2.3023529096821815], "accuracy": [0.09021265059709549, 0.09087307006120682, 0.09298639744520187, 0.09047681838274002, 0.08942015469074249, 0.09113723784685135], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 2, 3, 8, 8, 2, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.04085714370012283, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 8, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), grad)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301264341024596, 2.302563223242366, 2.30218293798787, 2.3030351054131506, 2.305596974484594, 2.3045986798366678], "accuracy": [0.09034473448991776, 0.08942015469074249, 0.09153348207473755, 0.08730682730674744, 0.08598599582910538, 0.08374059200286865], "val_loss": [1.9711790084838867, 1.9714828899928503, 1.9717653819492884, 1.972130502973284, 1.9725283214024134, 1.9728802953447615], "val_accuracy": [0.03799999877810478, 0.035999998450279236, 0.03400000184774399, 0.03166666626930237, 0.028999999165534973, 0.026333333924412727]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 4, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [23, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 1, 9, 4, 6, 4, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.009142857044935226, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3052569247507666, 2.3166274111489136, 2.326967513761217, 2.3395224934508536, 2.3558410768416955, 2.370103726407808], "accuracy": [0.080042265355587, 0.06406023353338242, 0.049927353858947754, 0.034605734050273895, 0.029322413727641106, 0.021793685853481293], "val_loss": [1.9801984514508928, 1.9900368281773158, 2.0005784715924944, 2.0124237877982005, 2.0257507732936313, 2.040951728820801], "val_accuracy": [0.011666666716337204, 0.006666666828095913, 0.004999999888241291, 0.004333333112299442, 0.004666666500270367, 0.004666666500270367]}}]