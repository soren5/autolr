[{"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [4, 7, 0, 5, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.8197143077850342, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 4, 3, 1, 3, 1, 1, 0, 0, 5, 3, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2685663712700173, 1.9787693882914361, 1.3764141802743064, 1.0348684577705083, 0.8947692912693399, 0.8125741907303533, 0.7557705072301049, 0.7031696148127172, 0.6844257810773662, 0.6599537650151039, 0.6378703668699792, 0.6127646772018466, 0.5902705862143918, 0.5663045508167794, 0.5507396603650925, 0.532165147648543, 0.5151322045740026, 0.4948452736376897, 0.4872813707786135, 0.4798728672741049, 0.46172452507128003, 0.45533969611413666, 0.4381996708507661, 0.43221401320771613, 0.42003865316638134, 0.4136679300015172, 0.40328722371873665, 0.3999076652890577, 0.39019063315087965, 0.3774091871092427], "accuracy": [0.1732928305864334, 0.4015321731567383, 0.5209351181983948, 0.6275261044502258, 0.6641130447387695, 0.6902654767036438, 0.7128516435623169, 0.7296261787414551, 0.7450799345970154, 0.7503632307052612, 0.7637035846710205, 0.7677981853485107, 0.7777044177055359, 0.7884030938148499, 0.7938185334205627, 0.8041210174560547, 0.8107251524925232, 0.8150838613510132, 0.8181217908859253, 0.8244617581367493, 0.8285563588142395, 0.8304054737091064, 0.835160493850708, 0.8376700282096863, 0.841500461101532, 0.8516708612442017, 0.8525954484939575, 0.8524633646011353, 0.8564258217811584, 0.8607845902442932], "val_loss": [1.855459213256836, 1.2211664404187883, 0.7432646921702794, 0.6749849489756993, 0.624683005469186, 0.5779551778520856, 0.5487604141235352, 0.5329515423093524, 0.517880950655256, 0.49870240688323975, 0.48819684982299805, 0.46556384222848074, 0.44905957153865267, 0.43395744051252094, 0.4291403293609619, 0.4132127676691328, 0.40643575361796785, 0.39546594449451994, 0.3877603667122977, 0.37801101378032137, 0.37734525544302805, 0.3655059337615967, 0.3607447402817862, 0.35478317737579346, 0.3506466746330261, 0.34954897846494404, 0.3425460968698774, 0.3455862658364432, 0.3407840388161795, 0.33887567690440584], "val_accuracy": [0.4726666808128357, 0.5870000123977661, 0.6863333582878113, 0.7146666646003723, 0.734333336353302, 0.7296666502952576, 0.7573333382606506, 0.7746666669845581, 0.7760000228881836, 0.7876666784286499, 0.7826666831970215, 0.8023333549499512, 0.8059999942779541, 0.8190000057220459, 0.8186666369438171, 0.8259999752044678, 0.8289999961853027, 0.840666651725769, 0.8429999947547913, 0.8486666679382324, 0.8483333587646484, 0.8529999852180481, 0.8496666550636292, 0.8556666374206543, 0.8606666922569275, 0.8576666712760925, 0.8606666922569275, 0.8579999804496765, 0.859666645526886, 0.859666645526886]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [4, 7, 0, 5, 0, 9, 3, 9], [1, 4, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [51], [0, 0, 0, 0, 1], [0, 1, 1], [1, 9, 8, 4], [2, 7], [64], [0, 1, 1, 1, 0, 1, 1], [2, 1, 9, 1, 2], [2, 1, 2], [15, 52, 13]], "fitness": -0.44028571248054504, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, alpha)", "other_info": {"loss": [2.2436616530334628, 4.122882089122348, 8.313644262368511, 3.016580502748521, 6.330596810932787, 46.82074278434821], "accuracy": [0.2016906589269638, 0.4027208983898163, 0.11689341068267822, 0.11768590658903122, 0.11068551242351532, 0.1208558976650238], "val_loss": [1.6722410065787179, 18.730484008789062, 2.0942002705165317, 3.978327206202916, 23.387676239013672, 2853.8860909598216], "val_accuracy": [0.4606666564941406, 0.1860000044107437, 0.10233332961797714, 0.1993333399295807, 0.14433333277702332, 0.10700000077486038]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [4, 7, 0, 5, 0, 9, 3, 9], [1, 1, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 1], [0, 0, 1], [1, 9, 8, 4], [2], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.27314284443855286, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 3, 1, 1, 0, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.325526825771702, 2.1480878331736486, 2.303028336133089, 2.280388021922587, 2.230672428526379, 2.3061442583653715, 2.304155145071249], "accuracy": [0.21423853933811188, 0.2300885021686554, 0.13195087015628815, 0.1372341811656952, 0.23206974565982819, 0.09642054885625839, 0.09919429570436478], "val_loss": [1.9390081678118025, 1.9176356451851981, 1.940394469669887, 1.9641282217843192, 1.976454394204276, 1.9742690495082311, 1.973881380898612], "val_accuracy": [0.14399999380111694, 0.31466665863990784, 0.13899999856948853, 0.22233332693576813, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [6, 7, 0, 5, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [51], [0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1], [7, 3, 8, 4, 8], [2, 5, 4], [64], [0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.12285714596509933, "mapping_values": [1, 1, 1, 0, 1, 1, 7, 7, 4, 3, 1, 9, 8, 5, 3, 0, 5, 2, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), tf.math.add(sigma, grad))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.0982549215547295e+25, 2796.6559585855466, 2796.958076691694, 2797.0906120948252, 2797.184176127452, 2797.2679511561387, 2797.3492007756263], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.5382569150021065e+29, 2386.0235770089284, 2386.1746651785716, 2386.265555245536, 2386.340890066964, 2386.412179129464, 2386.4820731026784], "val_accuracy": [0.09466666728258133, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [4, 7, 0, 5, 0, 9, 3, 9], [1, 5, 4, 3, 1, 5, 3, 2, 1, 4, 4, 0], [51], [0, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 0, 1, 1], [3, 8, 9, 1, 2], [1, 0, 2], [4, 30, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.312243517599936, 2.3356181750790697, 2.3682984063779955, 2.41095832231542, 2.481931695187364, 2.631080728590591, 3.594409351288414, 2.7078489266430332e+20, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06696605682373047, 0.03817197307944298, 0.02285034954547882, 0.014132875017821789, 0.011755382642149925, 0.01241579744964838, 0.04068154841661453, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.991595676967076, 2.0161709785461426, 2.0487397738865445, 2.0965747152056013, 2.1792963572910855, 2.3994389942714145, 8.1115414755685, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.00566666666418314, 0.005333333276212215, 0.004333333112299442, 0.004999999888241291, 0.006666666828095913, 0.013000000268220901, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [7, 7, 0, 4, 0, 9, 3, 9], [3, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [74], [0, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 1, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 8, 8, 4, 4, 1, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303244695089056, 2.3022854498521985, 2.3032078597492402, 2.301634812792767, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08400475233793259, 0.08770307898521423, 0.09087307006120682, 0.0956280529499054, 0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9709410667419434, 1.9709394999912806, 1.9709181785583496, 1.97064174924578, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03866666555404663, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 7, 0, 6, 0, 9, 3, 9], [4, 1, 0, 3, 1, 5, 3, 2, 1, 4, 4, 0], [51], [0, 1, 1, 0, 1], [0, 0, 1], [1, 2, 8, 4], [2], [64], [1, 1, 0, 1, 0, 1, 1], [3, 1, 9, 1, 2], [0, 1, 2], [12, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028880236659304, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [4, 7, 0, 5, 0, 9, 3, 9], [1, 4, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 0, 0, 0, 1], [0, 0, 1, 1], [7, 2, 8, 4], [2, 4], [64], [0, 1, 0, 1, 0, 1, 1], [3, 1, 6, 1, 2], [1, 0, 2, 2], [97, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [4, 7, 0, 5, 0, 9, 3, 9], [1, 5, 4, 3, 1, 5, 3, 2, 1, 4, 4, 0], [51], [0, 0, 1, 1, 1], [0, 0, 1], [2, 9, 8, 4], [2], [64], [0, 1, 0, 1, 0, 1, 1], [3, 8, 9, 1, 2], [3, 0, 2], [1, 30, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [11752.758882750579, 160370991548.51013, 2.5347178514015734e+18, 1.1386087497326207e+26, NaN, NaN], "accuracy": [0.09998679161071777, 0.10315678268671036, 0.10130762308835983, 0.09602430462837219, 0.09972262382507324, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [83, 32, 29, 49, 25], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [9, 7, 0, 5, 0, 9, 3, 9], [1, 5, 4, 3, 1, 5, 3, 2, 1, 4, 4, 0], [76], [0, 0, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 1, 0, 1, 1], [3, 8, 9, 1, 2], [0, 0, 2], [97, 7, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 3, 2, 1, 0, 4, 2, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303025670952848, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 3, 6, 2, 2, 0, 0, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 82, 25], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [4, 7, 0, 5, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 1], [0, 0, 1, 0], [7, 2, 8, 4], [2], [64], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 4, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), alpha)), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09100515395402908, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [4, 7, 0, 5, 0, 9, 3, 9], [1, 5, 4, 3, 1, 5, 3, 2, 1, 4, 4, 0], [51], [0, 1, 0, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 5, 3, 1, 2, 0, 2, 9, 3, 9, 8, 6], [1, 0, 1, 3, 1, 3, 2], [59, 17, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07172103971242905, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 2, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 0, 2, 2, 2, 3, 2, 0], [31, 94, 29, 71, 25, 6], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [4, 7, 8, 5, 0, 9, 3, 9], [2, 0, 2, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 0, 0, 1], [0, 1, 1], [7, 2, 8, 4], [2], [64], [0, 1, 1, 1, 1, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [71, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 17, 12, 5, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.sqrt(tf.math.add(alpha, grad))))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [4, 7, 3, 4, 0, 9, 3, 9], [1, 0, 2, 3, 1, 5, 3, 2, 1, 4, 4, 0], [76], [0, 1, 0, 0, 1], [0, 0, 1], [7, 2, 8, 4], [4], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 2, 3, 1, 2, 5, 0, 1, 3, 9, 8, 6], [1, 0, 2, 0, 1, 2, 2], [59, 13, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 4, 5, 1, 5, 3, 2, 1, 0, 7, 3, 4, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(alpha, tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, grad)))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 2, 9, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 3, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 79, 49, 25], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [8, 7, 0, 5, 0, 9, 3, 9], [1, 0, 2, 3, 1, 5, 3, 2, 1, 4, 4, 0], [76], [0, 1, 0, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 2, 3, 1, 2, 0, 1, 9, 4, 9, 8, 6], [1, 1, 2, 2, 0, 1, 3], [59, 13, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 3, 5, 5, 3, 2, 1, 5, 3, 2, 1, 0, 16, 9, 7, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(alpha, tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(beta, tf.math.subtract(tf.math.add(tf.math.negative(beta), tf.math.subtract(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), alpha))), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [8, 7, 0, 1, 0, 9, 3, 9], [1, 4, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 1, 0, 1, 1], [3, 1, 1, 1, 2], [1, 1, 2, 0], [15, 52, 13]], "fitness": -0.08142857253551483, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(alpha, tf.math.subtract(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3012907072663573, 2.303072127053892, 2.3549512066247207, 4.512318462129471, 21.69278906491045, 87.51931536967618, 258.391888426122, 611.2731593228633, 1273.9126265493949, 2376.104821072751], "accuracy": [0.08968432247638702, 0.06458856165409088, 0.08572183549404144, 0.09787346422672272, 0.09655263274908066, 0.09721305221319199, 0.09800554811954498, 0.09945846349000931, 0.1026284471154213, 0.10091137140989304], "val_loss": [1.9737020901271276, 1.9765096391950334, 2.305525439126151, 8.570498057774135, 41.60174778529576, 141.58258056640625, 368.634530203683, 811.7710832868304, 1576.711390904018, 2799.19873046875], "val_accuracy": [0.020999999716877937, 0.05000000074505806, 0.0949999988079071, 0.10233332961797714, 0.10366666316986084, 0.10199999809265137, 0.0949999988079071, 0.10066666454076767, 0.10066666454076767, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [4, 7, 0, 5, 0, 9, 3, 9], [1, 4, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [51], [0, 0, 0, 0, 1], [1, 0, 1], [1, 9, 8, 4], [2], [64], [0, 1, 0, 1, 0, 1, 1], [3, 1, 8, 1, 2], [1, 2, 2], [15, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.math.sqrt(beta)))", "other_info": {"loss": [2.303243575110616, 2.3022809286537016, 2.303208465983036, 2.3016965547021764, 2.302561842297771, 2.30116044660963], "accuracy": [0.08400475233793259, 0.08757099509239197, 0.09074098616838455, 0.0948355570435524, 0.08955223858356476, 0.09074098616838455], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 3, 0, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [8, 6, 0, 5, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 1, 3, 1, 1, 0, 0, 5, 3, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.square(alpha)), tf.math.add(beta, tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303243575110616, 2.3022809286537016, 2.303208465983036, 2.3016965547021764, 2.302561842297771, 2.30116044660963], "accuracy": [0.08400475233793259, 0.08757099509239197, 0.09074098616838455, 0.0948355570435524, 0.08955223858356476, 0.09074098616838455], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 3, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [4, 7, 0, 5, 0, 9, 3, 9], [4, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 1, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.03999999910593033, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 4, 3, 1, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303296592934351, 2.3026598214378855, 2.3042107489067787, 2.303546469146392, 2.3054302832107534, 2.305265807677191], "accuracy": [0.08400475233793259, 0.08638224750757217, 0.08928807079792023, 0.08981640636920929, 0.08413683623075485, 0.08281600475311279], "val_loss": [1.9711204937526159, 1.9715819358825684, 1.972276074545724, 1.9731668744768416, 1.9742191178458077, 1.9754057611737932], "val_accuracy": [0.03766666725277901, 0.035999998450279236, 0.033666666597127914, 0.030666666105389595, 0.02566666714847088, 0.02133333310484886]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [4, 7, 0, 5, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [3, 8, 9, 1, 2], [1, 1, 2, 0, 0, 2, 1], [15, 52, 13]], "fitness": -0.017714286223053932, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 2, 3, 1, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304980797396675, 2.3149117070922225, 2.3375322735304875, 2.3689294533407717, 2.416542969895014, 2.4904195283933355], "accuracy": [0.08030643314123154, 0.06234315037727356, 0.03817197307944298, 0.022057851776480675, 0.012812046334147453, 0.010302470065653324], "val_loss": [1.9769047328404017, 1.9925075939723425, 2.017253807612828, 2.0523692539760043, 2.1031247547694614, 2.184403896331787], "val_accuracy": [0.016333334147930145, 0.005333333276212215, 0.005333333276212215, 0.004666666500270367, 0.004999999888241291, 0.004666666500270367]}}]