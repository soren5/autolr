[{"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 86, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.727142870426178, "mapping_values": [1, 14, 14, 10, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.295924888358156, 2.256068919549261, 2.170700635671962, 1.9855510578210942, 1.660693686525851, 1.4152727815469086, 1.3611853151682929, 1.22683848909273, 0.9640051424778873, 0.9069681892132384, 0.8939757020544965, 0.8590467914440975, 0.8093167363361298, 0.7894533342689083, 0.8096359036365882, 0.7937151662598921, 0.7589169096606613, 0.7392617240794157, 0.7245461149080916, 0.7367469576040925, 0.7275841494970758, 0.6973188324627103, 0.6809321791898022, 0.6863432280643504, 0.6413473894236787, 0.6515798254602574, 0.6291983901013661, 0.6185214110196086, 0.6217879406087324, 0.6142705655793913, 0.5936790224410256, 0.5713621655617093, 0.562885796097937, 0.5765480156414671, 0.5690287915218964, 0.5614693548543626, 0.5473461729731337, 0.5408293330485181, 0.5484342180254469, 0.5397730532961278, 0.5304043056580369, 0.5159737072947035, 0.5222850204096683, 0.5271705002785358, 0.5007188668608146, 0.4961213262058158, 0.49813930844397764, 0.5020270346138754, 0.48326555127874576, 0.4822479240205609, 0.4847932035629193, 0.475176851853498, 0.4628435019071564, 0.45896583659348783, 0.47453526533542767, 0.46280631751290496, 0.4588720887454588], "accuracy": [0.11134592443704605, 0.2110685557126999, 0.33984941244125366, 0.4019284248352051, 0.45410117506980896, 0.5140668153762817, 0.548540472984314, 0.6077136397361755, 0.6477347612380981, 0.6516972780227661, 0.6803592443466187, 0.6778497099876404, 0.6954167485237122, 0.700171709060669, 0.6901333928108215, 0.7059833407402039, 0.7153612375259399, 0.7182670831680298, 0.7251353859901428, 0.7141724824905396, 0.7264562249183655, 0.7421740889549255, 0.7412495017051697, 0.7454761862754822, 0.7544577717781067, 0.7454761862754822, 0.7544577717781067, 0.7627789974212646, 0.7656848430633545, 0.7692511081695557, 0.7746664881706238, 0.7860256433486938, 0.7835160493850708, 0.785629391670227, 0.7860256433486938, 0.7860256433486938, 0.7921014428138733, 0.7989697456359863, 0.789988100528717, 0.7948752045631409, 0.7987055778503418, 0.8083476424217224, 0.8080834746360779, 0.800818920135498, 0.8121780753135681, 0.8124422430992126, 0.8177255392074585, 0.8146876096725464, 0.8170651197433472, 0.8187822103500366, 0.8197067975997925, 0.8195747137069702, 0.8247259259223938, 0.8273676037788391, 0.822348415851593, 0.8248580098152161, 0.8201030492782593], "val_loss": [1.9489869390215193, 1.8929226739065987, 1.7770458630153112, 1.5087712151663644, 1.1117735930851527, 0.8462633746010917, 0.7485757384981427, 0.7217483520507812, 0.6650212321962629, 0.6810499429702759, 0.6742900269372123, 0.6229508604322161, 0.5991759640829903, 0.5898628575461251, 0.5925396510532924, 0.5795494658606393, 0.5665662288665771, 0.5586523328508649, 0.567912186895098, 0.5693091324397496, 0.539290223802839, 0.5248274632862636, 0.5264092343194144, 0.5026678017207554, 0.48520965235573904, 0.4814781972340175, 0.47167876788548063, 0.46881219318934847, 0.47045608929225374, 0.4643775224685669, 0.45172882080078125, 0.44676690442221506, 0.4541406290871756, 0.45812906537737164, 0.4551417997905186, 0.44744077750614714, 0.4406874861036028, 0.4412630796432495, 0.44062106949942453, 0.43341641766684397, 0.42664348227637156, 0.4281217966760908, 0.4333478552954538, 0.42467257806233, 0.41958151544843403, 0.41690878357206074, 0.4141818710735866, 0.40971935646874563, 0.40512015989848543, 0.40206179448536467, 0.3973181588309152, 0.39663176025663105, 0.39994568484170095, 0.4016123243740627, 0.4016565680503845, 0.3984037297112601, 0.39107489585876465], "val_accuracy": [0.24533332884311676, 0.4009999930858612, 0.4546666741371155, 0.5090000033378601, 0.6000000238418579, 0.6793333292007446, 0.6946666836738586, 0.7153333425521851, 0.6963333487510681, 0.7406666874885559, 0.7316666841506958, 0.7369999885559082, 0.7356666922569275, 0.7353333234786987, 0.7426666617393494, 0.7446666955947876, 0.750333309173584, 0.7590000033378601, 0.7559999823570251, 0.7546666860580444, 0.7666666507720947, 0.7770000100135803, 0.7786666750907898, 0.7883333563804626, 0.7923333048820496, 0.7893333435058594, 0.7879999876022339, 0.7886666655540466, 0.793666660785675, 0.8013333082199097, 0.8069999814033508, 0.8143333196640015, 0.8069999814033508, 0.8066666722297668, 0.8106666803359985, 0.8133333325386047, 0.8199999928474426, 0.815666675567627, 0.812333345413208, 0.8186666369438171, 0.8220000267028809, 0.82833331823349, 0.8203333616256714, 0.8253333568572998, 0.8289999961853027, 0.8323333263397217, 0.8343333601951599, 0.8349999785423279, 0.8353333473205566, 0.8339999914169312, 0.8370000123977661, 0.8393333554267883, 0.8336666822433472, 0.8363333344459534, 0.8339999914169312, 0.8320000171661377, 0.8356666564941406]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7257142663002014, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.295924888358156, 2.2560689870030446, 2.1707006176905845, 1.985550520284978, 1.6606915813820662, 1.415271454499209, 1.3611952500210431, 1.226857212036671, 0.96401472119072, 0.9069880691139595, 0.893985425161569, 0.8590136786115609, 0.8094430895623844, 0.7893251834874927, 0.8096403346920152, 0.7938384201627098, 0.7587930007365716, 0.738809489822816, 0.724229623691643, 0.7365255675153993, 0.7271914691295858, 0.6979584644703959, 0.6817683259478146, 0.6861414040446581, 0.641992055697448, 0.6514055952577386, 0.6277288061170184, 0.6170675595438696, 0.621044864468429, 0.6140686456380251, 0.5934065386934397, 0.5709001060332668, 0.5629672727659157, 0.5765507250351125, 0.5687183022278647, 0.5599966991169735, 0.5461991426691545, 0.540860209380316, 0.5465970777438663, 0.5378712850153297, 0.5292462870161752, 0.5145508092014371, 0.5209884936106345, 0.5264989973342713, 0.49997440360367434, 0.49412878755376227, 0.4980173487515891, 0.5007604864397541, 0.4805846123167269, 0.480556226637952, 0.4842095988033911, 0.47618301673147106, 0.46284584933898043, 0.4575272355616888, 0.4708874859412774, 0.4614014479588398, 0.4576223380041948], "accuracy": [0.11134592443704605, 0.2110685557126999, 0.3399814963340759, 0.4019284248352051, 0.45410117506980896, 0.5140668153762817, 0.548540472984314, 0.6077136397361755, 0.6476026773452759, 0.6519614458084106, 0.6800950765609741, 0.6775855422019958, 0.6951525807380676, 0.7005679607391357, 0.6900013089179993, 0.7057191729545593, 0.7144366502761841, 0.718399167060852, 0.7250033020973206, 0.7148329019546509, 0.7275128960609436, 0.7409853339195251, 0.741909921169281, 0.7448157668113708, 0.7528728246688843, 0.7466648817062378, 0.7553823590278625, 0.7617223858833313, 0.7660810947418213, 0.7696473598480225, 0.7746664881706238, 0.7844406366348267, 0.7829877138137817, 0.7852331399917603, 0.7868181467056274, 0.7864218950271606, 0.7915731072425842, 0.7981772422790527, 0.7901201844215393, 0.7956677079200745, 0.7987055778503418, 0.8059701323509216, 0.8090080618858337, 0.8009510040283203, 0.8128384351730347, 0.8104609847068787, 0.8191784620285034, 0.8141592741012573, 0.8208954930305481, 0.817989706993103, 0.8197067975997925, 0.8177255392074585, 0.8204993009567261, 0.8277638554573059, 0.8234050869941711, 0.8284242749214172, 0.8210275769233704], "val_loss": [1.9489869390215193, 1.8929226057870048, 1.777045794895717, 1.508769886834281, 1.111769369670323, 0.8462563242231097, 0.7485746145248413, 0.7217328548431396, 0.665035537311009, 0.6810859441757202, 0.6743269988468715, 0.6229123217718942, 0.5990545579365322, 0.5894909926823207, 0.5926343543188912, 0.5795614549091884, 0.5664187840053013, 0.5583575112479073, 0.5678361994879586, 0.5689094066619873, 0.5393318619046893, 0.5254979985100883, 0.5264276095799038, 0.5029337576457432, 0.48609585421425955, 0.4813000644956316, 0.4710123538970947, 0.46830553667885916, 0.46979866709027973, 0.46361405508858816, 0.451113224029541, 0.44671433312552317, 0.45361505235944477, 0.45686466353280203, 0.4534740447998047, 0.4458153077534267, 0.4405935151236398, 0.44069860662732807, 0.4392249584197998, 0.4329770122255598, 0.42594248056411743, 0.4271330748285566, 0.4322432449885777, 0.4242243085588728, 0.4193782125200544, 0.4172668627330235, 0.4142216273716518, 0.4088139533996582, 0.40380825315202984, 0.4023333021572658, 0.39914150748934063, 0.39803777422223774, 0.4000305448259626, 0.39978013719831196, 0.40034828015736174, 0.39773752859660555, 0.3912900686264038], "val_accuracy": [0.24533332884311676, 0.4009999930858612, 0.4546666741371155, 0.5090000033378601, 0.6000000238418579, 0.6793333292007446, 0.6946666836738586, 0.715666651725769, 0.6963333487510681, 0.7406666874885559, 0.7316666841506958, 0.737333357334137, 0.7360000014305115, 0.734666645526886, 0.7429999709129333, 0.7446666955947876, 0.7506666779518127, 0.7586666941642761, 0.7559999823570251, 0.7546666860580444, 0.7666666507720947, 0.7773333191871643, 0.7789999842643738, 0.7883333563804626, 0.7916666865348816, 0.7900000214576721, 0.7883333563804626, 0.7896666526794434, 0.7963333129882812, 0.8029999732971191, 0.8059999942779541, 0.812666654586792, 0.8090000152587891, 0.8056666851043701, 0.8096666932106018, 0.8149999976158142, 0.8173333406448364, 0.8153333067893982, 0.8133333325386047, 0.8176666498184204, 0.8236666917800903, 0.8286666870117188, 0.8206666707992554, 0.8243333101272583, 0.8296666741371155, 0.8330000042915344, 0.8349999785423279, 0.8353333473205566, 0.8373333215713501, 0.8370000123977661, 0.8376666903495789, 0.8389999866485596, 0.8346666693687439, 0.8353333473205566, 0.8346666693687439, 0.8330000042915344, 0.8363333344459534]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7231428623199463, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.295924856867127, 2.256068919549261, 2.1707006806726423, 1.9855502548943327, 1.6606888665404727, 1.4152630469141194, 1.3611893734171752, 1.2268299282250577, 0.9639827981522338, 0.9069154030611297, 0.8940834812185217, 0.8588753866560471, 0.8090684922175118, 0.7890110953908162, 0.8093844179023195, 0.794014521215759, 0.7588042529062935, 0.7389651954748753, 0.7243599959210855, 0.736742451631508, 0.7275075815561944, 0.6975936104419634, 0.6810891992537856, 0.6858554292884028, 0.6415692620730246, 0.6512803243938895, 0.6281418253984654, 0.6183768651189743, 0.6220356747143934, 0.61441213111395, 0.5938199968889736, 0.571004944494167, 0.5631404893903086, 0.5775665677124404, 0.5692271820353542, 0.5604077248194781, 0.5470203833848636, 0.5414922058054831, 0.546930774572015, 0.5387470685196527, 0.5304525793504091, 0.5147725840160293, 0.5213623376192433, 0.5272322378579289, 0.49931849618991603, 0.4937960278277762, 0.4968311093848978, 0.5010829512091393, 0.48368752648282154, 0.4819516598540621, 0.485405623660883, 0.4770454903595861, 0.46193547295525783, 0.4567607751596149, 0.47174463442067555, 0.4608675481274521], "accuracy": [0.11134592443704605, 0.2110685557126999, 0.3399814963340759, 0.4019284248352051, 0.45410117506980896, 0.5140668153762817, 0.5484083890914917, 0.6077136397361755, 0.6478668451309204, 0.6519614458084106, 0.6803592443466187, 0.6773213744163513, 0.6950204968452454, 0.700700044631958, 0.6902654767036438, 0.7049266695976257, 0.7143045663833618, 0.717870831489563, 0.724739134311676, 0.7150970697402954, 0.7269845604896545, 0.7420420050621033, 0.741909921169281, 0.7446836829185486, 0.7532690763473511, 0.7475894689559937, 0.7541936039924622, 0.7626469135284424, 0.76542067527771, 0.7680623531341553, 0.776251494884491, 0.7864218950271606, 0.7828556299209595, 0.7840443849563599, 0.7865539789199829, 0.7854973077774048, 0.791441023349762, 0.7976489067077637, 0.791441023349762, 0.7951393723487854, 0.7980451583862305, 0.8067626357078552, 0.8072909712791443, 0.8006868362426758, 0.8128384351730347, 0.8128384351730347, 0.8197067975997925, 0.8138951063156128, 0.8168009519577026, 0.8185180425643921, 0.8195747137069702, 0.8197067975997925, 0.8204993009567261, 0.826310932636261, 0.8220842480659485, 0.82683926820755], "val_loss": [1.9489869390215193, 1.8929227420261927, 1.7770459311349052, 1.5087698527744837, 1.111762455531529, 0.846257243837629, 0.7485877445765904, 0.7217791421072823, 0.6650126150676182, 0.6811492272785732, 0.6743087938853672, 0.6228519678115845, 0.598921503339495, 0.5894396305084229, 0.5928962741579328, 0.579717755317688, 0.5664276225226266, 0.5583161967141288, 0.567881737436567, 0.5692344563347953, 0.5393187659127372, 0.5248756408691406, 0.5259539229529244, 0.5024904864174979, 0.4853938136781965, 0.48091183389936176, 0.47126877307891846, 0.4685668093817575, 0.47007904733930317, 0.4639734540666853, 0.4515511819294521, 0.44666504859924316, 0.45389413833618164, 0.4573284217289516, 0.45362028053828646, 0.4465030772345407, 0.4411473274230957, 0.44109741279057096, 0.4400575842176165, 0.433475136756897, 0.42596652678080965, 0.4263975364821298, 0.43190817322049824, 0.42458945512771606, 0.4191012382507324, 0.4165047322000776, 0.4130017246518816, 0.4091160637991769, 0.404353175844465, 0.4018098626817976, 0.3990782839911325, 0.397348267691476, 0.3992998514856611, 0.39941450527736116, 0.4002310718808855, 0.3997721331460135], "val_accuracy": [0.24533332884311676, 0.4009999930858612, 0.4546666741371155, 0.5090000033378601, 0.6000000238418579, 0.6793333292007446, 0.6946666836738586, 0.715666651725769, 0.6963333487510681, 0.7400000095367432, 0.7316666841506958, 0.737333357334137, 0.7353333234786987, 0.7353333234786987, 0.7429999709129333, 0.7450000047683716, 0.75, 0.7586666941642761, 0.7549999952316284, 0.7556666731834412, 0.7673333287239075, 0.7776666879653931, 0.7796666622161865, 0.7883333563804626, 0.7896666526794434, 0.7900000214576721, 0.7886666655540466, 0.7903333306312561, 0.796999990940094, 0.8019999861717224, 0.8066666722297668, 0.8146666884422302, 0.8086666464805603, 0.8040000200271606, 0.8113333582878113, 0.8143333196640015, 0.8176666498184204, 0.8159999847412109, 0.8106666803359985, 0.8173333406448364, 0.8246666789054871, 0.8276666402816772, 0.8199999928474426, 0.8226666450500488, 0.8306666612625122, 0.8320000171661377, 0.8353333473205566, 0.8316666483879089, 0.8343333601951599, 0.8363333344459534, 0.8399999737739563, 0.8373333215713501, 0.8363333344459534, 0.8349999785423279, 0.8323333263397217, 0.8316666483879089]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7222856879234314, "mapping_values": [1, 14, 14, 10, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.295924888358156, 2.256068919549261, 2.1707005861995556, 1.98554950595894, 1.6606867184429246, 1.4152596256185312, 1.3611673775476283, 1.2268221566485313, 0.9640143888029109, 0.9069429459100733, 0.8940664448002468, 0.8589174041438176, 0.8091711814629324, 0.7890499383073363, 0.809388530819628, 0.7939175320827352, 0.7589432995049489, 0.7392229663461285, 0.7245010778164237, 0.737029026646136, 0.7274360711532671, 0.6974636399278299, 0.6814250568073849, 0.6856299669451922, 0.6414688321435928, 0.6511444790315131, 0.628038467472539, 0.6179038493813714, 0.6219194541360409, 0.6139714708496409, 0.5933120006410249, 0.5709286194672092, 0.5629510047838531, 0.577280737287443, 0.5689644327473568, 0.560082217327844, 0.5470273330927745, 0.5411923941509709, 0.5468148469468307, 0.5384589757122273, 0.5295201075185701, 0.5133247740941671, 0.520629522311075, 0.5268576818962044, 0.49932306638058105, 0.4930906402216045, 0.4964328286843356, 0.5005600760484085, 0.48231226683702166, 0.48137693232108164, 0.48455278300464333, 0.47531325354819853, 0.4611723060896683, 0.4563598432923195, 0.47107683038116366, 0.4604724741307988], "accuracy": [0.11134592443704605, 0.2110685557126999, 0.33984941244125366, 0.4019284248352051, 0.45410117506980896, 0.5140668153762817, 0.5484083890914917, 0.6077136397361755, 0.6477347612380981, 0.6518293619155884, 0.6802271604537964, 0.6775855422019958, 0.6951525807380676, 0.7004358768463135, 0.6901333928108215, 0.7047945857048035, 0.7150970697402954, 0.7180029153823853, 0.7257958054542542, 0.7152291536331177, 0.7276449799537659, 0.7424382567405701, 0.7423061728477478, 0.7449478507041931, 0.7530049085617065, 0.7470611333847046, 0.7543256878852844, 0.7633073329925537, 0.7662131786346436, 0.7681944370269775, 0.7750627398490906, 0.7864218950271606, 0.7833839654922485, 0.7833839654922485, 0.7861577272415161, 0.7849689722061157, 0.7911768555641174, 0.7988376617431641, 0.7913089394569397, 0.7960638999938965, 0.7992339134216309, 0.807158887386322, 0.8090080618858337, 0.8009510040283203, 0.8124422430992126, 0.8125742673873901, 0.8189142942428589, 0.8120459914207458, 0.8182538747787476, 0.8178576231002808, 0.8201030492782593, 0.819442629814148, 0.8216879963874817, 0.8272355198860168, 0.8211596608161926, 0.8264430165290833], "val_loss": [1.9489869390215193, 1.8929226739065987, 1.777045590536935, 1.5087671279907227, 1.1117613656180245, 0.8462569713592529, 0.7485877616064889, 0.721787554877145, 0.6650269372122628, 0.6811535017830985, 0.6743108034133911, 0.6229210070201329, 0.5989923477172852, 0.5894940750939506, 0.5929328714098249, 0.5797795568193708, 0.5665176595960345, 0.5584216799054827, 0.5680849552154541, 0.5692119598388672, 0.5391355071749006, 0.5250743797847203, 0.526127747126988, 0.5022598334721157, 0.4853243998118809, 0.48083928653172087, 0.47121741090502056, 0.46873278277260916, 0.4698531287057059, 0.46355572768620085, 0.4512441158294678, 0.4466913087027414, 0.4536445311137608, 0.45695124353681293, 0.4533252034868513, 0.44618228503635954, 0.4405972957611084, 0.44047478267124723, 0.4395723342895508, 0.43295817715781076, 0.4251330409731184, 0.42599148409707205, 0.43196527447019306, 0.4247325658798218, 0.4194223625319345, 0.4167085289955139, 0.41335723229816984, 0.4088267343384879, 0.4042284829275949, 0.40241269554410664, 0.398666901247842, 0.3974790743419102, 0.3992799605642046, 0.39906824486596243, 0.39943147557122366, 0.39709876264844624], "val_accuracy": [0.24533332884311676, 0.4009999930858612, 0.4546666741371155, 0.5090000033378601, 0.6000000238418579, 0.6793333292007446, 0.6946666836738586, 0.715666651725769, 0.6963333487510681, 0.7400000095367432, 0.7316666841506958, 0.7369999885559082, 0.7353333234786987, 0.734000027179718, 0.7429999709129333, 0.7446666955947876, 0.7506666779518127, 0.7583333253860474, 0.7553333044052124, 0.7553333044052124, 0.7676666378974915, 0.777999997138977, 0.7793333530426025, 0.7876666784286499, 0.7910000085830688, 0.7900000214576721, 0.7879999876022339, 0.7903333306312561, 0.7953333258628845, 0.8026666641235352, 0.8073333501815796, 0.8136666417121887, 0.8083333373069763, 0.8043333292007446, 0.8103333115577698, 0.8130000233650208, 0.8190000057220459, 0.8153333067893982, 0.8133333325386047, 0.8193333148956299, 0.8243333101272583, 0.8266666531562805, 0.8203333616256714, 0.824999988079071, 0.8323333263397217, 0.8323333263397217, 0.8343333601951599, 0.8330000042915344, 0.8330000042915344, 0.8376666903495789, 0.840666651725769, 0.8389999866485596, 0.8360000252723694, 0.8363333344459534, 0.8330000042915344, 0.8320000171661377]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7120000123977661, "mapping_values": [1, 14, 14, 10, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.295924888358156, 2.256068955512016, 2.1707008111084836, 1.985551307466225, 1.6606911091111072, 1.4152651166619878, 1.361183923768676, 1.2268706868904424, 0.9640524426329767, 0.9070150126571338, 0.8940414494810607, 0.8590122691990756, 0.8091889989374493, 0.7893635027948042, 0.8095305762538474, 0.7936511603108392, 0.7589509083830748, 0.739480393083419, 0.7245034959652893, 0.7366776252702999, 0.7274442391861006, 0.6971069634425217, 0.6808969047736845, 0.6859730012255291, 0.6412607397322705, 0.6518066886582662, 0.6285189727530142, 0.61847671359805, 0.6218166190635385, 0.6135189622353254, 0.5932733978121083, 0.5711527123443045, 0.5630274022323045, 0.5769378913549494, 0.5686160310573424, 0.5605637943267571, 0.5469328674736622, 0.5407807888954449, 0.5468692996750387, 0.5386061975827164, 0.530119834929063, 0.5148359132779824, 0.5217500403651377, 0.5274302562261538, 0.5001259616038204, 0.49525779316438234, 0.49718285206050417, 0.5003693515889759, 0.48271953021184155, 0.4821304238436166, 0.4847924645786918, 0.47511733167159825, 0.4627563067832564, 0.4579589003112732, 0.47469765229735944, 0.4611607500393912, 0.4589661689498059, 0.44275162040423627, 0.43510259638498994, 0.43965220400575694, 0.4504731506829595, 0.4265399547757537, 0.42378009373737663, 0.42302597366177946, 0.41343828100869057, 0.40715420480732434, 0.4120235859820273], "accuracy": [0.11134592443704605, 0.2110685557126999, 0.3399814963340759, 0.4019284248352051, 0.45410117506980896, 0.5140668153762817, 0.548540472984314, 0.6075815558433533, 0.6476026773452759, 0.6514331102371216, 0.6802271604537964, 0.6777176260948181, 0.6951525807380676, 0.7000396251678467, 0.6900013089179993, 0.7058512568473816, 0.7143045663833618, 0.7186633348464966, 0.7251353859901428, 0.7149649858474731, 0.72672039270401, 0.7416457533836365, 0.7425703406333923, 0.7452120184898376, 0.7548540234565735, 0.7467969655990601, 0.7547219395637512, 0.763439416885376, 0.7650244235992432, 0.7681944370269775, 0.7741381525993347, 0.7847048044204712, 0.7841764688491821, 0.785629391670227, 0.785629391670227, 0.7865539789199829, 0.793422281742096, 0.7989697456359863, 0.7907806038856506, 0.7952714562416077, 0.7979130744934082, 0.8072909712791443, 0.8067626357078552, 0.8017435073852539, 0.8137630224227905, 0.8136309385299683, 0.8166688680648804, 0.8148196935653687, 0.8182538747787476, 0.8189142942428589, 0.8189142942428589, 0.8189142942428589, 0.8240655064582825, 0.8276317715644836, 0.8211596608161926, 0.8260467648506165, 0.8189142942428589, 0.8342359066009521, 0.8362171649932861, 0.8362171649932861, 0.8313300609588623, 0.8396512866020203, 0.8354246616363525, 0.8376700282096863, 0.844010055065155, 0.8450667262077332, 0.8457271456718445], "val_loss": [1.9489869390215193, 1.8929227420261927, 1.7770462036132812, 1.5087714195251465, 1.1117722306932722, 0.8462560517447335, 0.7485900095530919, 0.7217962741851807, 0.665076664515904, 0.6810965878622872, 0.6743476901735578, 0.6229099716459002, 0.5989984273910522, 0.5898240634373256, 0.5924415588378906, 0.5795618976865496, 0.5665773323604039, 0.558692216873169, 0.5677460942949567, 0.5691710029329572, 0.5392945834568569, 0.5249828781400409, 0.5262841837746757, 0.5022869450705392, 0.4854020391191755, 0.4813840218952724, 0.4717373677662441, 0.46908092498779297, 0.4699770041874477, 0.4637306588036673, 0.451496992792402, 0.4466475078037807, 0.4538186618259975, 0.45737145628247944, 0.4543647936412266, 0.4470627648489816, 0.4408231122153146, 0.44074555805751253, 0.4396831137793405, 0.4332235540662493, 0.42632247720445904, 0.42756108726773945, 0.4331113525799343, 0.42437179599489483, 0.4202955961227417, 0.4174725413322449, 0.4147507974079677, 0.40942321504865375, 0.40556509154183523, 0.4034877674920218, 0.3983012352670942, 0.397979131766728, 0.40021735429763794, 0.4018174580165318, 0.4010766659464155, 0.39781019517353605, 0.3916578207697187, 0.38478612899780273, 0.380715012550354, 0.37866155590329853, 0.3742166076387678, 0.37188936131341116, 0.3753188933644976, 0.38205202988215853, 0.38591294629233225, 0.3904869726725987, 0.3917534521647862], "val_accuracy": [0.24533332884311676, 0.4009999930858612, 0.4546666741371155, 0.5090000033378601, 0.6000000238418579, 0.6793333292007446, 0.6946666836738586, 0.7153333425521851, 0.6963333487510681, 0.7406666874885559, 0.7316666841506958, 0.737333357334137, 0.7360000014305115, 0.7353333234786987, 0.7426666617393494, 0.7446666955947876, 0.75, 0.7583333253860474, 0.7559999823570251, 0.7556666731834412, 0.7676666378974915, 0.7763333320617676, 0.7789999842643738, 0.7883333563804626, 0.7926666736602783, 0.7896666526794434, 0.7873333096504211, 0.7886666655540466, 0.793666660785675, 0.8019999861717224, 0.8069999814033508, 0.8133333325386047, 0.8076666593551636, 0.8053333163261414, 0.8113333582878113, 0.8130000233650208, 0.8193333148956299, 0.8180000185966492, 0.8140000104904175, 0.8196666836738586, 0.8246666789054871, 0.8286666870117188, 0.8193333148956299, 0.8266666531562805, 0.831333339214325, 0.8330000042915344, 0.8363333344459534, 0.8343333601951599, 0.8333333134651184, 0.8343333601951599, 0.8356666564941406, 0.8373333215713501, 0.8376666903495789, 0.8366666436195374, 0.8370000123977661, 0.8356666564941406, 0.8363333344459534, 0.8403333425521851, 0.8443333506584167, 0.8510000109672546, 0.847000002861023, 0.8516666889190674, 0.8516666889190674, 0.8503333330154419, 0.8513333201408386, 0.8473333120346069, 0.8486666679382324]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [44, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [0, 0, 2], [13, 52, 13]], "fitness": -0.23999999463558197, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.153037092956837, 3.4671679628586585, 2.3879015201968667, 2.370344547878372, 2.3698744146878363, 2.3844579836916315], "accuracy": [0.2405230551958084, 0.12389380484819412, 0.09589222073554993, 0.1014397069811821, 0.1018359512090683, 0.1018359512090683], "val_loss": [1.931281498500279, 2.0400592940194264, 2.022641113826207, 2.049744129180908, 2.024878774370466, 2.0385415894644603], "val_accuracy": [0.17000000178813934, 0.10199999809265137, 0.10066666454076767, 0.10233332961797714, 0.10199999809265137, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [51, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 8, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [8, 0, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4, 5, 7, 3, 4, 2, 4], [3, 0, 2, 1, 3, 1, 0, 0, 0, 2, 2], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 1], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 18, 11, 4, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.pow(tf.math.square(alpha), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad)))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [68, 32, 3, 66], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [3, 7, 6, 8, 5, 7, 3, 9], [4, 1, 5, 4, 1, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [3, 3, 7, 1, 2, 2, 4, 7], [3, 0, 2, 2, 3, 3, 3, 3, 0], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 0, 1, 0, 0, 0, 0, 17, 8, 9, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))))), grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, alpha))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.add(sigma, tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta)), beta), tf.math.add(sigma, tf.math.add(tf.math.pow(sigma, sigma), tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [6], [1], [0, 0, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.302225231982619, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [0, 0, 2], [20, 52, 90]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302225231982619, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 0, 1, 1, 1, 1], [8, 3, 9, 1, 2], [1, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 2, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 2, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.square(grad)))))))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [298991421.9606208, 5668299217.134856, 26280320183.26773, 73137204209.79845, 157308464623.43152, 288941866904.12573], "accuracy": [0.09906221181154251, 0.09893012791872025, 0.1022322028875351, 0.09708096832036972, 0.09945846349000931, 0.09681680053472519], "val_loss": [1104333494.857143, 8830381202.285715, 29797680274.285713, 70625820672.0, 137934564790.85715, 238343197257.14285], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [2, 9, 8, 5, 9, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 77, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [1], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [2, 2, 3], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.multiply(beta, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08136309683322906, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4, 2, 7, 0, 0, 0, 3], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 78], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 18, 9, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))), tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.897307710971311, 18.597220273333424, 53.29620255215954, 114.32332947760871, 208.20617380722908, 344.2735626418215], "accuracy": [0.09906221181154251, 0.09972262382507324, 0.10342095047235489, 0.09760929644107819, 0.09998679161071777, 0.09694888442754745], "val_loss": [6.1298554284232, 21.830366952078684, 51.77951267787388, 100.12700762067523, 171.72908673967635, 271.85672433035717], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 4, 9, 1, 2], [0, 1, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [1, 7, 9, 1, 2], [1, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 3], [1, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3023152004033345, 2.302624977590732, 2.3020538627164493, 2.301273263535243, 2.301416424680868, 2.3025576735783595], "accuracy": [0.09536388516426086, 0.0882314071059227, 0.09034473448991776, 0.09615638852119446, 0.09747721254825592, 0.09100515395402908], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3023152004033345, 2.302624977590732, 2.3020538627164493, 2.301273263535243, 2.301416424680868, 2.3025576735783595], "accuracy": [0.09536388516426086, 0.0882314071059227, 0.09034473448991776, 0.09615638852119446, 0.09747721254825592, 0.09100515395402908], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]