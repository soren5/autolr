[{"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 1, 2, 6, 2, 8, 5, 2, 2, 9, 3, 5, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [4, 3, 3, 1, 0, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [47, 9, 52, 66, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8399999737739563, "mapping_values": [1, 4, 4, 2, 2, 1, 26, 26, 16, 10, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(grad, tf.math.add(beta, grad))), tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))))), tf.math.negative(grad))))))), tf.math.negative(tf.math.add(beta, grad))), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.950304296321841, 1.2600268364865876, 0.9492469999878681, 0.7963080292585079, 0.738702108477085, 0.7173576575338942, 0.6803511891697597, 0.6478372928000649, 0.6525542929723294, 0.6092933402116887, 0.6061769185159437, 0.5839194292248107, 0.5706658319254845, 0.5522012865192241, 0.5280001020828305, 0.5284806562019551, 0.5183222846127677, 0.5125715956318223, 0.482833823653386, 0.4723644784223985, 0.4879824519118046, 0.4676103004020801, 0.44825114641821284, 0.4522025609265198, 0.43303392497839127, 0.4339312095297893, 0.4199045527022292, 0.4117974093278102, 0.45055866461105004, 0.40691406265336133, 0.4075502069233242, 0.3856614705924549, 0.3874674080353781, 0.37374019138234527, 0.3793589406757622, 0.3635600048395715, 0.36851675446873344, 0.3617953815204813, 0.3438904796687761, 0.35214274970138265, 0.35913605294238937, 0.34207306657217246, 0.3511289346447994, 0.32621689533450426, 0.3247441211593559, 0.3192514239552943, 0.3135177648424898, 0.3205638130217212, 0.3072051345955631, 0.3234848562067589, 0.3025467400702944, 0.2901457786646659, 0.28553096025989294, 0.31011532168929384, 0.2795268629504516, 0.284444304032805, 0.2770181031841817, 0.27899799504300243, 0.2791029922856064], "accuracy": [0.3603222966194153, 0.574560821056366, 0.6457535624504089, 0.7040021419525146, 0.7160216569900513, 0.7302865982055664, 0.7403249144554138, 0.7490423917770386, 0.7549861073493958, 0.7711002230644226, 0.7689869403839111, 0.7804781198501587, 0.7869502305984497, 0.7913089394569397, 0.8025360107421875, 0.8014793395996094, 0.8095363974571228, 0.8076872229576111, 0.8190463781356812, 0.8259146809577942, 0.8166688680648804, 0.8277638554573059, 0.8330471515655518, 0.8289526104927063, 0.839519202709198, 0.8404437899589539, 0.8441421389579773, 0.8495575189590454, 0.8293488025665283, 0.8514066934585571, 0.8477083444595337, 0.8535200357437134, 0.8574824929237366, 0.860652506351471, 0.8533879518508911, 0.8627657890319824, 0.8576145768165588, 0.8638224601745605, 0.8747853636741638, 0.8701624870300293, 0.8648791313171387, 0.8759741187095642, 0.869502067565918, 0.8787478804588318, 0.8792761564254761, 0.8840311765670776, 0.8829745054244995, 0.8815215826034546, 0.8870691061019897, 0.8758420348167419, 0.8850878477096558, 0.8918240666389465, 0.8930128216743469, 0.8813894987106323, 0.8922203183174133, 0.8903711438179016, 0.8939374089241028, 0.8948619961738586, 0.8936732411384583], "val_loss": [1.4239344596862793, 0.7567157404763358, 0.6372863224574498, 0.5577626739229474, 0.5547810452325004, 0.5338245970862252, 0.5245909350258964, 0.48619912351880756, 0.4969487871442522, 0.4703525815691267, 0.49345840726579937, 0.4467785358428955, 0.4493015153067453, 0.459169728415353, 0.4248250722885132, 0.4154449701309204, 0.4065071514674595, 0.4128530876977103, 0.40141589300973074, 0.41059428453445435, 0.38410844121660503, 0.38799218620572773, 0.37970147814069477, 0.3732501949582781, 0.37229142018726896, 0.39369341305324007, 0.36272644996643066, 0.41139020238603863, 0.3518341098512922, 0.35954179082598003, 0.3553792919431414, 0.34908526284354074, 0.35885798931121826, 0.382629999092647, 0.3327944874763489, 0.3419321264539446, 0.3331060068947928, 0.3467117633138384, 0.3214988963944571, 0.32496648175375803, 0.3438607284000942, 0.3230735829898289, 0.32396680968148367, 0.319382233279092, 0.3258397579193115, 0.34919874157224384, 0.3373574359076364, 0.31744117396218435, 0.3347424439021519, 0.31591321740831646, 0.31717799391065327, 0.3139219880104065, 0.3272341234343393, 0.3126430596624102, 0.32440834386008127, 0.34401575156620573, 0.3316302554947989, 0.32191639287131174, 0.3403350966317313], "val_accuracy": [0.534333348274231, 0.6423333287239075, 0.7223333120346069, 0.7493333220481873, 0.7486666440963745, 0.7636666893959045, 0.7513333559036255, 0.7879999876022339, 0.7820000052452087, 0.7906666398048401, 0.7730000019073486, 0.8026666641235352, 0.8059999942779541, 0.8053333163261414, 0.8083333373069763, 0.8243333101272583, 0.8240000009536743, 0.8186666369438171, 0.8240000009536743, 0.8206666707992554, 0.8473333120346069, 0.8343333601951599, 0.8410000205039978, 0.8476666808128357, 0.8410000205039978, 0.8223333358764648, 0.8500000238418579, 0.8159999847412109, 0.8516666889190674, 0.8489999771118164, 0.8519999980926514, 0.8543333411216736, 0.8493333458900452, 0.8443333506584167, 0.8643333315849304, 0.8523333072662354, 0.8586666584014893, 0.8503333330154419, 0.8706666827201843, 0.859000027179718, 0.8536666631698608, 0.8659999966621399, 0.8629999756813049, 0.8709999918937683, 0.862666666507721, 0.8560000061988831, 0.8603333234786987, 0.871999979019165, 0.8616666793823242, 0.871999979019165, 0.8726666569709778, 0.8703333139419556, 0.8723333477973938, 0.8733333349227905, 0.8709999918937683, 0.8650000095367432, 0.8600000143051147, 0.8679999709129333, 0.8693333268165588]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 1, 2, 6, 2, 8, 1, 3, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [0, 1, 3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [44, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [2, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8305714130401611, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9594380500813864, 1.2668736057668204, 0.9635063761323907, 0.7957746320633038, 0.7600950322934051, 0.7223437860846251, 0.68120687497747, 0.6414666917062376, 0.646764118917677, 0.6071684498119946, 0.6084963936595364, 0.585142996899755, 0.5850439170694559, 0.557831033597832, 0.5327987368742017, 0.5328438687381207, 0.5251052788361709, 0.5192724228566585, 0.49074408860333196, 0.48370942806822825, 0.4874391619988468, 0.47387067809269934, 0.44992988928906463, 0.45872603892382535, 0.43546999066087944, 0.43964870711595405, 0.4196640718937424, 0.4187605950487855, 0.4449255492913646], "accuracy": [0.35847312211990356, 0.5724474787712097, 0.6322810649871826, 0.7013604640960693, 0.7157574892044067, 0.7312111854553223, 0.7429665923118591, 0.7540615797042847, 0.7552502751350403, 0.7676661014556885, 0.7681944370269775, 0.7770439982414246, 0.7777044177055359, 0.789459764957428, 0.8010830879211426, 0.7992339134216309, 0.8039889335632324, 0.8058380484580994, 0.8170651197433472, 0.821820080280304, 0.8165367841720581, 0.8228767514228821, 0.8354246616363525, 0.82683926820755, 0.8385946154594421, 0.8413683772087097, 0.8441421389579773, 0.8466516733169556, 0.8304054737091064], "val_loss": [1.3928325176239014, 0.7043497221810477, 0.6301861831120082, 0.5707613229751587, 0.5649510281426566, 0.5386631488800049, 0.5129013402121407, 0.4859450033732823, 0.4888970511300223, 0.48914570467812674, 0.46804748262677875, 0.4453344685690744, 0.46779896531786236, 0.4655621222087315, 0.42398667335510254, 0.41508703572409494, 0.40870092596326557, 0.42291554382869173, 0.3977289455277579, 0.39860442706516813, 0.38783975158418926, 0.39478265387671335, 0.3984780992780413, 0.3713506375040327, 0.3722999095916748, 0.3876696825027466, 0.3658795782497951, 0.3913894125393459, 0.3589206337928772], "val_accuracy": [0.5273333191871643, 0.6830000281333923, 0.7383333444595337, 0.7450000047683716, 0.7546666860580444, 0.7699999809265137, 0.7673333287239075, 0.7889999747276306, 0.7816666960716248, 0.7726666927337646, 0.7866666913032532, 0.8046666383743286, 0.7919999957084656, 0.8046666383743286, 0.8113333582878113, 0.8240000009536743, 0.8216666579246521, 0.8166666626930237, 0.8270000219345093, 0.8270000219345093, 0.8399999737739563, 0.8273333311080933, 0.8240000009536743, 0.8489999771118164, 0.8403333425521851, 0.828000009059906, 0.8463333249092102, 0.8253333568572998, 0.8473333120346069]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 1, 2, 6, 2, 8, 1, 3, 2, 9, 3, 5, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [4, 0, 3, 1, 0, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [47, 9, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8288571238517761, "mapping_values": [1, 4, 4, 2, 2, 1, 26, 26, 15, 11, 3, 5, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), alpha)), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, grad))))), tf.math.add(grad, tf.math.negative(tf.math.add(beta, grad)))))), tf.math.add(beta, grad))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9502771955833238, 1.2591570120886915, 0.9432271068374226, 0.791385655712694, 0.7422576543204993, 0.7146326216566816, 0.6706208060320263, 0.6468331760513689, 0.644574911390329, 0.6090631941841452, 0.5990473498064907, 0.5873175259153557, 0.5766686810919354, 0.555369455359946, 0.5291481571521237, 0.5291651640751138, 0.5214922755873986, 0.5220166870064786, 0.4851846515565516, 0.47717366623541524, 0.4893703269975816, 0.46926364279804195, 0.4490465750279853, 0.46126529340966976, 0.434014170299101, 0.43623224653036935], "accuracy": [0.3603222966194153, 0.5727116465568542, 0.6456214785575867, 0.7022850513458252, 0.7164179086685181, 0.7305507659912109, 0.7434949278831482, 0.750759482383728, 0.754589855670929, 0.7692511081695557, 0.7738739848136902, 0.7795535326004028, 0.780610203742981, 0.7901201844215393, 0.8043851256370544, 0.8000264167785645, 0.804649293422699, 0.8049134612083435, 0.8208954930305481, 0.8261788487434387, 0.8173292875289917, 0.8240655064582825, 0.8343679904937744, 0.8228767514228821, 0.8399154543876648, 0.8425571322441101], "val_loss": [1.4240976061139787, 0.744274343763079, 0.6212050063269479, 0.569625803402492, 0.5452877793993268, 0.520688670022147, 0.5287652867180961, 0.4826138530458723, 0.4893161228724888, 0.47644964286259245, 0.4903729132243565, 0.4448470558438982, 0.46774734769548687, 0.46898884432656424, 0.42721169335501535, 0.41442390850612093, 0.4080327068056379, 0.41280857154301237, 0.40620299748011995, 0.3983778272356306, 0.38448853152138845, 0.39109520401273457, 0.38232220922197613, 0.3754292385918753, 0.3723783322743007, 0.3958304694720677], "val_accuracy": [0.534333348274231, 0.6476666927337646, 0.734000027179718, 0.7283333539962769, 0.7596666812896729, 0.7676666378974915, 0.7476666569709778, 0.7910000085830688, 0.7806666493415833, 0.7926666736602783, 0.7733333110809326, 0.8050000071525574, 0.7929999828338623, 0.7896666526794434, 0.8090000152587891, 0.8246666789054871, 0.8246666789054871, 0.8173333406448364, 0.8236666917800903, 0.8266666531562805, 0.8450000286102295, 0.8309999704360962, 0.8383333086967468, 0.8410000205039978, 0.8403333425521851, 0.8240000009536743]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 9, 2, 6, 2, 8, 0, 3, 2, 9, 2, 5, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [4, 0, 3, 1, 0, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [47, 18, 76, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 0], [14, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8285714387893677, "mapping_values": [1, 4, 4, 2, 2, 1, 20, 20, 13, 7, 4, 5, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), tf.math.add(tf.math.sqrt(alpha), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.950333896172659, 1.2599124560628852, 0.9478889432534124, 0.7968525209084887, 0.743472197658555, 0.7129789187278037, 0.6711152333152639, 0.6453052411509574, 0.6319111066566183, 0.6072283188003386, 0.61115862144345, 0.5847497923877087, 0.578985943746699, 0.5545270644347776, 0.5309951786099959, 0.5268098516762454, 0.5171131884196746, 0.5162373187047238, 0.4856477102048015, 0.47454694538950337, 0.4855362747237037, 0.4676693314535113, 0.4434166383418929, 0.4557658329678879, 0.4295025424926729, 0.4342464875386077, 0.4159825635057131, 0.41709445235263465, 0.44152355723928355, 0.4026889858535882, 0.40653465372334224, 0.3842961325771096, 0.3884513585905373, 0.3668478876214537, 0.3737956170967431, 0.3642049054538317, 0.3740667675928968, 0.360895894825057, 0.34075051166236264, 0.3506815493217061, 0.35630376780462963, 0.3376493258617022, 0.34650825836544796, 0.32724518972995054, 0.32447321686400177, 0.3161947110294115, 0.31536349048782664, 0.3144828854786832, 0.30554641185892006, 0.3148765658870932, 0.29795775586241474, 0.2900874756385842, 0.2897498902194709, 0.3045686141705516, 0.2734629905864689], "accuracy": [0.3603222966194153, 0.5744287371635437, 0.6440364718437195, 0.7014925479888916, 0.7140403985977173, 0.7312111854553223, 0.7453441023826599, 0.7537974119186401, 0.7618544697761536, 0.7714964747428894, 0.767401933670044, 0.7754589915275574, 0.7810064554214478, 0.7887993454933167, 0.8013472557067871, 0.7996301651000977, 0.8101968169212341, 0.8049134612083435, 0.8220842480659485, 0.826310932636261, 0.8182538747787476, 0.8261788487434387, 0.8363492488861084, 0.8272355198860168, 0.8437458872795105, 0.842028796672821, 0.8457271456718445, 0.8459912538528442, 0.8310658931732178, 0.8494254350662231, 0.8498216867446899, 0.8524633646011353, 0.8574824929237366, 0.8625016212463379, 0.8552370667457581, 0.8636903762817383, 0.8565579056739807, 0.8656716346740723, 0.8751816153526306, 0.8712190985679626, 0.86553955078125, 0.8745211958885193, 0.8726720213890076, 0.8771628737449646, 0.8808611631393433, 0.8856161832809448, 0.8820499181747437, 0.8838990926742554, 0.8858803510665894, 0.8803328275680542, 0.8891823887825012, 0.8906353116035461, 0.8924844861030579, 0.8844274282455444, 0.8948619961738586], "val_loss": [1.4244343893868583, 0.7515994310379028, 0.6286297014781407, 0.5635615587234497, 0.5510272639138358, 0.5319797822407314, 0.5312727349145072, 0.48367626326424734, 0.5030422551291329, 0.49229608263288227, 0.4822653191430228, 0.4471644503729684, 0.4762136765888759, 0.4618284361703055, 0.4274384379386902, 0.416998096874782, 0.4098720805985587, 0.42029494047164917, 0.4141190562929426, 0.3988018291337149, 0.37961300781794954, 0.3864886931010655, 0.3812388437134879, 0.37094477244785856, 0.3708763378007071, 0.39026072195598055, 0.3645203283854893, 0.40343141555786133, 0.35189160278865267, 0.35990176030567717, 0.35232798542295185, 0.34871562889644075, 0.3478126696177891, 0.36786779335566927, 0.33025882073811125, 0.3489337052617754, 0.34043921743120464, 0.3358962961605617, 0.32494866847991943, 0.32343824420656475, 0.3413645199366978, 0.32211989164352417, 0.32154795953205656, 0.31952546324048725, 0.3291363801274981, 0.3508781279836382, 0.3365693432944162, 0.3181163583483015, 0.3408768517630441, 0.3139294981956482, 0.3169760363442557, 0.3123883434704372, 0.3260137864521572, 0.31508794001170565, 0.3247452974319458], "val_accuracy": [0.5339999794960022, 0.6433333158493042, 0.7223333120346069, 0.7400000095367432, 0.7576666474342346, 0.7633333206176758, 0.7486666440963745, 0.7893333435058594, 0.7699999809265137, 0.7713333368301392, 0.7820000052452087, 0.8026666641235352, 0.7903333306312561, 0.8003333210945129, 0.8106666803359985, 0.8236666917800903, 0.8293333053588867, 0.8166666626930237, 0.8226666450500488, 0.8266666531562805, 0.8476666808128357, 0.8336666822433472, 0.8346666693687439, 0.8486666679382324, 0.840666651725769, 0.8273333311080933, 0.8473333120346069, 0.8193333148956299, 0.8513333201408386, 0.8536666631698608, 0.8536666631698608, 0.8553333282470703, 0.8526666760444641, 0.8476666808128357, 0.8610000014305115, 0.8483333587646484, 0.856333315372467, 0.8576666712760925, 0.8643333315849304, 0.8663333058357239, 0.8519999980926514, 0.8669999837875366, 0.8633333444595337, 0.8686666488647461, 0.8579999804496765, 0.8560000061988831, 0.8560000061988831, 0.8713333606719971, 0.8610000014305115, 0.8740000128746033, 0.8709999918937683, 0.8713333606719971, 0.8686666488647461, 0.8713333606719971, 0.8693333268165588]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [4, 8, 1, 5, 6, 2, 1, 1, 3, 2, 3, 3, 5, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [0, 1, 3, 1, 3, 3, 3, 3, 1, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [44, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [2, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8271428346633911, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9596021555323784, 1.2671592666047549, 0.9552092387250796, 0.7937679959247298, 0.7489939578661845, 0.712023612861195, 0.6820253773199144, 0.6493109351592592, 0.6416531659277942, 0.6049027685964143, 0.6283406328452719, 0.5853018918766117, 0.5682514404513659, 0.5620167330507715, 0.5339014077262163, 0.5282803531162901, 0.5227425269179293, 0.5243665773823528, 0.48502755012762244, 0.476107710002357, 0.49186722013723927, 0.4724404601341603, 0.44894200438253945, 0.4550335945163216, 0.43337326160180745, 0.4339101794389229, 0.4199009208458132, 0.41666297899371424, 0.4434020125264458, 0.40612976039484144, 0.4157434128822195, 0.3879053779581141, 0.3935231401416147, 0.3709609540832073, 0.38381075884656285, 0.36898200412105814, 0.3850392271790286, 0.364255502892838, 0.3431723308073547, 0.35436065391290616, 0.35250179014343236, 0.35417881827659264, 0.3477677727309295, 0.32828304314846374], "accuracy": [0.3583410382270813, 0.5733720660209656, 0.6406022906303406, 0.698190450668335, 0.7145687341690063, 0.733588695526123, 0.7392682433128357, 0.7510236501693726, 0.7581561207771301, 0.7736098170280457, 0.7626469135284424, 0.77677983045578, 0.7910447716712952, 0.7860256433486938, 0.7989697456359863, 0.7988376617431641, 0.8042530417442322, 0.8042530417442322, 0.8189142942428589, 0.8245938420295715, 0.8149517774581909, 0.8228767514228821, 0.8354246616363525, 0.8276317715644836, 0.839519202709198, 0.8416325449943542, 0.8436138033866882, 0.8471800088882446, 0.8301413059234619, 0.8533879518508911, 0.8457271456718445, 0.8519350290298462, 0.854708731174469, 0.86118084192276, 0.852331280708313, 0.8636903762817383, 0.8545766472816467, 0.8636903762817383, 0.8728041052818298, 0.870030403137207, 0.8669924736022949, 0.8698983192443848, 0.8730682730674744, 0.8754457831382751], "val_loss": [1.3962228638785226, 0.6976736954280308, 0.6267777170453753, 0.5669148479189191, 0.5507076808384487, 0.5518500294004168, 0.534611736025129, 0.4844919272831508, 0.4758183445249285, 0.480549761227199, 0.4874240330287388, 0.4502887214933123, 0.45529655047825407, 0.4778972182955061, 0.43615799290793283, 0.41301725591932026, 0.40835595982415335, 0.41161103759493145, 0.3999603050095694, 0.4025477681841169, 0.3874079329626901, 0.39387759992054533, 0.39218415532793316, 0.370938811983381, 0.37404686212539673, 0.4006963627679007, 0.36706387996673584, 0.39338568278721403, 0.3562596525464739, 0.3650148596082415, 0.35566435541425434, 0.35096332005092074, 0.3544297899518694, 0.3576726658003671, 0.33523830345698763, 0.34430226257869173, 0.3392006243978228, 0.33908748626708984, 0.3251605544771467, 0.3255823680332729, 0.3560644728796823, 0.32484001772744314, 0.32159990072250366, 0.32173517772129606], "val_accuracy": [0.5263333320617676, 0.6899999976158142, 0.7400000095367432, 0.7369999885559082, 0.7549999952316284, 0.7433333396911621, 0.7463333606719971, 0.7916666865348816, 0.7960000038146973, 0.7850000262260437, 0.7733333110809326, 0.8019999861717224, 0.8063333630561829, 0.7950000166893005, 0.8056666851043701, 0.8259999752044678, 0.8266666531562805, 0.8193333148956299, 0.8256666660308838, 0.8236666917800903, 0.8443333506584167, 0.8299999833106995, 0.8306666612625122, 0.847000002861023, 0.8403333425521851, 0.8173333406448364, 0.8473333120346069, 0.824999988079071, 0.8476666808128357, 0.8479999899864197, 0.8510000109672546, 0.8533333539962769, 0.8506666421890259, 0.8516666889190674, 0.8603333234786987, 0.8523333072662354, 0.859333336353302, 0.8569999933242798, 0.8663333058357239, 0.8619999885559082, 0.8429999947547913, 0.8650000095367432, 0.8643333315849304, 0.8650000095367432]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 1, 2, 6, 3, 8, 1, 3, 2, 9, 3, 0, 6, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [4, 0, 3, 1, 0, 3, 3, 3, 3, 1, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8080000281333923, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 4, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, alpha)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9503338601626676, 1.2593572961183477, 0.94597121242204, 0.7950766589647554, 0.7357683068001354, 0.7313205583881881, 0.6718162467230612, 0.6469200744825411, 0.642993415012934, 0.616771437945131, 0.5975308584940195, 0.5884700875949268, 0.5774535204693153, 0.5539582278970651, 0.5288609444599078, 0.5279176080932297, 0.518294063958793, 0.520986530192225, 0.4847245795568376, 0.4776605899780182, 0.48709027343784517, 0.4706277958295916, 0.4466759597998506, 0.4521699062294066, 0.43620186178140385, 0.435530805923148, 0.41947410066035506, 0.4175879144043482, 0.4360059451047597, 0.40822500702554143, 0.41030240732806944, 0.3855710557785331, 0.3888821129620335, 0.36947016835433144, 0.3770525446696729, 0.3637163624071001, 0.3694848702481678, 0.36417064893404727, 0.3405600888948588, 0.3539785470401669, 0.3530575639032307, 0.3410944213027637, 0.3461209084292948, 0.3245427694460499, 0.3204311548860522, 0.3162637238355439, 0.3139769046054052], "accuracy": [0.3603222966194153, 0.5737683176994324, 0.6448289752006531, 0.7030775547027588, 0.7220974564552307, 0.7231541275978088, 0.744419515132904, 0.7563069462776184, 0.7581561207771301, 0.7695152759552002, 0.7750627398490906, 0.7798177003860474, 0.7798177003860474, 0.7887993454933167, 0.8038568496704102, 0.8033285140991211, 0.8068947196006775, 0.8026680946350098, 0.8210275769233704, 0.8260467648506165, 0.8170651197433472, 0.8240655064582825, 0.8354246616363525, 0.8264430165290833, 0.8387266993522644, 0.8379341959953308, 0.8407079577445984, 0.8474441766738892, 0.8304054737091064, 0.8496896028518677, 0.8475762605667114, 0.8515387773513794, 0.8603883385658264, 0.8625016212463379, 0.8544445633888245, 0.8618412613868713, 0.8584070801734924, 0.8639545440673828, 0.8757099509239197, 0.8709549307823181, 0.8677849769592285, 0.8735966086387634, 0.8721436858177185, 0.8804649114608765, 0.8808611631393433, 0.8856161832809448, 0.8811253309249878], "val_loss": [1.424454961504255, 0.7528249025344849, 0.6245310136250087, 0.5745298521859306, 0.5505729573113578, 0.5342999696731567, 0.5194698572158813, 0.4844622441700527, 0.4861846991947719, 0.477939248085022, 0.4977926186152867, 0.4432206153869629, 0.46827987262180876, 0.46317107336861746, 0.4262070485523769, 0.4153785024370466, 0.408388546534947, 0.41387317861829487, 0.4101095710481916, 0.4027129241398403, 0.3831942932946341, 0.3931944966316223, 0.3801328199250357, 0.37166285514831543, 0.3712602938924517, 0.39291443143572125, 0.36300856726510183, 0.38810633761542185, 0.35576649223055157, 0.35972546679633005, 0.3539106675556728, 0.35278813328061787, 0.35051327092306955, 0.3666919895580837, 0.32969508852277485, 0.3448412162917001, 0.3375715357916696, 0.34203533615384785, 0.32083886010306223, 0.3289612020765032, 0.3462264282362802, 0.3211875557899475, 0.31825957127979826, 0.32058038881846834, 0.32948942695345196, 0.35477037940706524, 0.3359370742525373], "val_accuracy": [0.5339999794960022, 0.640999972820282, 0.7300000190734863, 0.7310000061988831, 0.7490000128746033, 0.7620000243186951, 0.7603333592414856, 0.7933333516120911, 0.7823333144187927, 0.7906666398048401, 0.7689999938011169, 0.8103333115577698, 0.7956666946411133, 0.7990000247955322, 0.812666654586792, 0.8243333101272583, 0.8266666531562805, 0.8176666498184204, 0.8236666917800903, 0.8259999752044678, 0.8453333377838135, 0.8289999961853027, 0.8363333344459534, 0.846666693687439, 0.8393333554267883, 0.8253333568572998, 0.8486666679382324, 0.824999988079071, 0.8513333201408386, 0.8506666421890259, 0.8523333072662354, 0.8523333072662354, 0.8519999980926514, 0.8460000157356262, 0.8616666793823242, 0.8500000238418579, 0.8546666502952576, 0.8500000238418579, 0.8659999966621399, 0.8606666922569275, 0.8496666550636292, 0.8669999837875366, 0.8643333315849304, 0.8663333058357239, 0.8600000143051147, 0.8566666841506958, 0.862666666507721]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 8, 1, 2, 2, 4, 8, 1, 3, 2, 9, 3, 5, 1, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [4, 0, 3, 1, 0, 3, 3, 3, 0, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [70, 9, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7931428551673889, "mapping_values": [1, 4, 4, 2, 2, 1, 22, 22, 13, 9, 4, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), alpha)))), tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), tf.math.square(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9495956834438628, 1.4148669878977669, 1.0109465219451452, 0.9033451856654854, 0.8066846241158675, 0.7349612928337472, 0.735602824584982, 0.6839222516822714, 0.6452864201439528, 0.6448283701556439, 0.6277138277162037, 0.6405867767167082, 0.591037949385534, 0.5781285685004024, 0.5696300141579282, 0.5357181240444437], "accuracy": [0.3475102484226227, 0.5204068422317505, 0.6244881749153137, 0.6542068123817444, 0.6988508701324463, 0.724739134311676, 0.7230220437049866, 0.7390040755271912, 0.759080708026886, 0.7543256878852844, 0.7611940503120422, 0.7548540234565735, 0.778232753276825, 0.7825914621353149, 0.7902522683143616, 0.8030643463134766], "val_loss": [1.3404943943023682, 0.7543333939143589, 0.6718729223523822, 0.6059251001902989, 0.5768671546663556, 0.6121441466467721, 0.5314568962369647, 0.542258756501334, 0.526012659072876, 0.5142228433064052, 0.48005410603114534, 0.48732287543160574, 0.49928280285426546, 0.4935124601636614, 0.4812200239726475, 0.5181119782584054], "val_accuracy": [0.5260000228881836, 0.6980000138282776, 0.7009999752044678, 0.7333333492279053, 0.7536666393280029, 0.7210000157356262, 0.7559999823570251, 0.7563333511352539, 0.7516666650772095, 0.7770000100135803, 0.7960000038146973, 0.7846666574478149, 0.7796666622161865, 0.7833333611488342, 0.7766666412353516, 0.7643333077430725]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 5, 2, 2, 6, 2, 1, 1, 3, 2, 3, 3, 5, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [44, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7300000190734863, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2992422908225696, 2.2925180858546055, 2.286371692422674, 2.2797109450268596, 2.2736016042228417, 2.266876970630485, 2.2593793750927196, 2.252696184607513, 2.246086161512315, 2.2362144191456257, 2.227674303116532, 2.218713429499737, 2.210314949852144, 2.1988979959532005, 2.185459628506359, 2.1726633978715078, 2.15998603532091, 2.146251373444692, 2.1301458205970176, 2.1137754130813784, 2.0962376516130794, 2.0731254829438983, 2.052349261131584, 2.0274529157140235, 2.0113878465520707, 1.9793293334395106, 1.954051494393697, 1.9248861068621792, 1.8908030761152668, 1.8602613989923609, 1.8316611930159152, 1.7941309132706362, 1.769515398880431, 1.734150945927725, 1.6959342027872528, 1.666177871488325, 1.6256879510943758, 1.5975987870128572, 1.57353338908998, 1.532077453076926, 1.5069992365287264, 1.478689538536606, 1.448764427541789, 1.4266941317351833, 1.408831836241678, 1.38054872521194, 1.3623658254272226, 1.3410070956642948, 1.3092903936260396, 1.3036064361426902, 1.292842283618606, 1.273086403969052, 1.265523528457554, 1.2433811675729123, 1.21542647043633, 1.2050365138567198, 1.2097079406844595, 1.1810189752751306, 1.1835218789381925, 1.1602206846600462, 1.15254112458925, 1.144981206541977, 1.1108658695737401, 1.1215609050996866, 1.106549445081617, 1.1075480278409657, 1.0968525373798714, 1.0855423638439923, 1.0673566934313237, 1.0620081219706536, 1.0497554127629312, 1.0578796933465993, 1.0468736796913807, 1.0397721530424053, 1.030942038412123, 1.030370322641774, 1.02011121177497, 1.0123762330044026, 1.0116786311693384, 1.0021021434927282, 0.9985972669193569, 0.9941012924845822, 0.9807543107515723, 0.9773968392044499, 0.9629819543448894, 0.9607585869319152, 0.957818992850236, 0.9621070737316624, 0.9491707934616516, 0.9450931308953171, 0.9420161423366996, 0.9369095045231305, 0.9404497727143561, 0.9222822533055635, 0.9278949136117415, 0.9152232832943901, 0.9245055188844232, 0.9139330737531901, 0.9105831942679844, 0.9021088812471207], "accuracy": [0.09906221181154251, 0.11094967275857925, 0.1332716941833496, 0.14753665030002594, 0.17183992266654968, 0.18201030790805817, 0.20182274281978607, 0.21542729437351227, 0.2316734939813614, 0.24739135801792145, 0.2639017403125763, 0.2810725271701813, 0.2934883236885071, 0.3055078685283661, 0.3121120035648346, 0.33945319056510925, 0.34183067083358765, 0.3547748029232025, 0.36243560910224915, 0.36943599581718445, 0.37828555703163147, 0.3887201249599457, 0.39624884724617004, 0.41209879517555237, 0.4031171500682831, 0.4220050275325775, 0.418570876121521, 0.4266279339790344, 0.44591203331947327, 0.45304450392723083, 0.46070531010627747, 0.46691322326660156, 0.4671773910522461, 0.47391360998153687, 0.4791969358921051, 0.490159809589386, 0.499009370803833, 0.4970281422138214, 0.49927353858947754, 0.514198899269104, 0.5153876543045044, 0.5196143388748169, 0.535860538482666, 0.5322942733764648, 0.5436534285545349, 0.5432571768760681, 0.5495971441268921, 0.5497292280197144, 0.5556729435920715, 0.5585787892341614, 0.561880886554718, 0.5669000148773193, 0.5665037631988525, 0.5736362338066101, 0.5835424661636353, 0.5869766473770142, 0.5807687044143677, 0.5927882790565491, 0.5893540978431702, 0.6034870147705078, 0.5963544845581055, 0.5978074073791504, 0.6144498586654663, 0.6033549308776855, 0.6123365759849548, 0.6082419753074646, 0.615770697593689, 0.6161669492721558, 0.6225069165229797, 0.6238277554512024, 0.6312243938446045, 0.6305639743804932, 0.6254127621650696, 0.6320168972015381, 0.6350548267364502, 0.6363756656646729, 0.6453573107719421, 0.6408664584159851, 0.6450931429862976, 0.6413947939872742, 0.6428477168083191, 0.6450931429862976, 0.6497160196304321, 0.6460176706314087, 0.6552634835243225, 0.6597543358802795, 0.6552634835243225, 0.6543388962745667, 0.6601505875587463, 0.6623960137367249, 0.666358470916748, 0.6696605682373047, 0.6617355942726135, 0.6695284843444824, 0.6670188903808594, 0.672698438167572, 0.6693964004516602, 0.6733588576316833, 0.6656980514526367, 0.6770572066307068], "val_loss": [1.964947019304548, 1.9589157785688127, 1.952934946332659, 1.9469010489327567, 1.9407222611563546, 1.934366089957101, 1.9277120317731584, 1.9207681247166224, 1.9134437697274345, 1.905618122645787, 1.8972213608878, 1.8882709230695451, 1.8787144933428084, 1.868264947618757, 1.8569214003426688, 1.8445549692426408, 1.831256593976702, 1.8168585641043526, 1.8013178961617606, 1.7845202854701452, 1.7664828300476074, 1.7469235828944616, 1.7259174074445451, 1.7031422683170863, 1.679673365184239, 1.654156173978533, 1.6272791453770228, 1.5990959235600062, 1.5693023204803467, 1.5384069510868617, 1.5068682602473669, 1.474419219153268, 1.4418154444013322, 1.4088261127471924, 1.3753927435193742, 1.3423782416752406, 1.309321335383824, 1.276806422642299, 1.2455615316118513, 1.2149087020329066, 1.1858456475394112, 1.1577676704951696, 1.1311490195138114, 1.105978216443743, 1.081991127559117, 1.0588837351117815, 1.0374242918831962, 1.0171316691807337, 0.9978625433785575, 0.979776109967913, 0.9629719938550677, 0.9469398430415562, 0.932408366884504, 0.917799574988229, 0.9037011691502163, 0.890669413975307, 0.8792496068137032, 0.8676919937133789, 0.8573051520756313, 0.8470029830932617, 0.8374525478907994, 0.8280191421508789, 0.8188218218939645, 0.8102855852672032, 0.8018794570650373, 0.7943340199334281, 0.7866960082735334, 0.7796410492488316, 0.7725484882082257, 0.7657220533915928, 0.7591843434742519, 0.7531423909323556, 0.7480286189488002, 0.742656946182251, 0.7366691487176078, 0.7322580473763602, 0.7271813665117536, 0.7222346918923515, 0.7178061008453369, 0.713376658303397, 0.7092905555452619, 0.7053548608507428, 0.7009914602552142, 0.6974187748772758, 0.6934209380831037, 0.6892322812761579, 0.6855233056204659, 0.6821498019354684, 0.6787195205688477, 0.6760840586253575, 0.672634652682713, 0.66997572353908, 0.6669125216347831, 0.6638873645237514, 0.6612137726375035, 0.6581649609974453, 0.6554008722305298, 0.6528189863477435, 0.6509123529706683, 0.6479219709123883], "val_accuracy": [0.07900000363588333, 0.13899999856948853, 0.19733333587646484, 0.257999986410141, 0.2993333339691162, 0.3346666693687439, 0.367333322763443, 0.38600000739097595, 0.3986666798591614, 0.4086666703224182, 0.4153333306312561, 0.4269999861717224, 0.43566668033599854, 0.4466666579246521, 0.45500001311302185, 0.46299999952316284, 0.46966665983200073, 0.47866666316986084, 0.4880000054836273, 0.4973333477973938, 0.5036666393280029, 0.5099999904632568, 0.5196666717529297, 0.5273333191871643, 0.5336666703224182, 0.5389999747276306, 0.5426666736602783, 0.546999990940094, 0.5523333549499512, 0.5576666593551636, 0.5603333115577698, 0.5676666498184204, 0.5713333487510681, 0.5759999752044678, 0.5833333134651184, 0.5899999737739563, 0.5946666598320007, 0.6013333201408386, 0.6043333411216736, 0.6113333106040955, 0.6169999837875366, 0.6236666440963745, 0.6303333044052124, 0.637666642665863, 0.6426666378974915, 0.6496666669845581, 0.6536666750907898, 0.6613333225250244, 0.6643333435058594, 0.6683333516120911, 0.6723333597183228, 0.6723333597183228, 0.6710000038146973, 0.6726666688919067, 0.6806666851043701, 0.6830000281333923, 0.6840000152587891, 0.6853333115577698, 0.6880000233650208, 0.6899999976158142, 0.6923333406448364, 0.6946666836738586, 0.6953333616256714, 0.6966666579246521, 0.6966666579246521, 0.6983333230018616, 0.6993333101272583, 0.7013333439826965, 0.703000009059906, 0.7049999833106995, 0.7056666612625122, 0.7056666612625122, 0.7066666483879089, 0.7080000042915344, 0.7103333473205566, 0.7099999785423279, 0.7113333344459534, 0.7126666903495789, 0.715666651725769, 0.715666651725769, 0.7183333039283752, 0.7206666469573975, 0.7226666808128357, 0.7223333120346069, 0.7243333458900452, 0.7256666421890259, 0.7263333201408386, 0.7283333539962769, 0.7279999852180481, 0.7276666760444641, 0.7279999852180481, 0.7273333072662354, 0.7300000190734863, 0.7300000190734863, 0.731333315372467, 0.7316666841506958, 0.7336666584014893, 0.734666645526886, 0.7350000143051147, 0.7356666922569275]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 1, 2, 6, 2, 8, 1, 9, 4, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 1, 0, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [44, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [2, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 21, 21, 13, 8, 3, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), grad), tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, grad))))))))))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 1, 2, 6, 2, 8, 1, 3, 2, 9, 3, 5, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [4, 0, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [47, 9, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 0], [67, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 4, 5, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(grad, tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06868313252925873, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 3, 0, 3, 1, 5, 2, 1, 3, 2, 9, 3, 1, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [4, 1, 2, 3, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [44, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, alpha))), tf.math.negative(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07000396400690079, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 1, 8, 6, 2, 8, 1, 3, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [44, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [2, 7, 3, 4], [0, 0], [67, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(grad, tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 1, 2, 6, 2, 8, 1, 3, 2, 9, 3, 5, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [4, 0, 3, 1, 0, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [30, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 1, 2, 6, 2, 8, 1, 3, 2, 9, 3, 5, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [4, 0, 3, 1, 0, 3, 3, 2, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [47, 9, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 0], [50, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 25, 25, 14, 11, 3, 5, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), grad), alpha)), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, beta)))))), tf.math.square(grad)))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 1, 2, 6, 2, 8, 1, 3, 2, 9, 3, 5, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [4, 0, 3, 1, 0, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [44, 19, 7, 66, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), grad)), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 9, 1, 2, 6, 2, 8, 1, 3, 2, 9, 3, 5, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 0, 2, 5, 3, 3, 2, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [47, 9, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 0], [61, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 1, 5, 3, 2, 1, 1, 6, 3, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3031724352390066, 2.302679806117132, 2.3026886841309557, 2.3027119479080502, 2.302728034438805, 2.3027656857741587], "accuracy": [0.08955223858356476, 0.09377889335155487, 0.09536388516426086, 0.09893012791872025, 0.09417514503002167, 0.0952318087220192], "val_loss": [1.9736465045383997, 1.9736308370317732, 1.9736572674342565, 1.9736975261143275, 1.973700863974435, 1.973721640450614], "val_accuracy": [0.10366666316986084, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 5, 1, 2, 6, 2, 1, 1, 3, 2, 3, 3, 5, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [5, 1, 3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [44, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302501400054611, 2.302528515404966, 2.303374805911468, 2.3076798904211357, 2.3294619061549766, 2.45595662922293, 3.416658992953761, 8.364113111222629], "accuracy": [0.1010434553027153, 0.10210011899471283, 0.10302469879388809, 0.10117553919553757, 0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736030442374093, 1.9737732069832938, 1.9751390729631697, 1.9828408786228724, 2.025659901755197, 2.3156493731907437, 4.70863151550293, 10.736316953386579], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10366666316986084, 0.10366666316986084, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 1, 2, 6, 2, 8, 1, 3, 2, 9, 2, 5, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [4, 0, 3, 1, 0, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [98, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [2, 7, 3, 4], [0, 0], [95, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 56, 56, 34, 22, 6, 5, 4, 2, 2, 2, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.negative(grad))))), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, beta), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.sqrt(grad))), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 8, 2, 2, 6, 2, 1, 1, 3, 2, 3, 3, 5, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 1, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [44, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [0, 0], [67, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 3, 1, 1, 0, 0, 6, 3, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha))), grad))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 1, 2, 6, 2, 2, 1, 3, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [44, 19, 7, 66, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0], [6, 7, 3, 4], [4, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.08314285427331924, "mapping_values": [1, 4, 4, 2, 2, 0, 17, 17, 8, 9, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, grad)))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3017853439413183, 2.301392545222669, 2.3014517641653236, 2.3010593892529405, 2.3016987955408044, 2.302566212906168, 2.3058031265997947, 2.3097264987130317, 2.3148932129148605, 2.319056596423436, 2.325730252716252, 2.331516077080423, 2.3402510509357444, 2.3513619496664586, 2.361807167191531, 2.37128629780181], "accuracy": [0.09325055778026581, 0.08968432247638702, 0.09509972482919693, 0.09589222073554993, 0.09985470771789551, 0.10091137140989304, 0.10381719470024109, 0.09417514503002167, 0.09126931428909302, 0.09576013684272766, 0.1022322028875351, 0.10645885765552521, 0.11306300014257431, 0.1080438494682312, 0.09959053993225098, 0.09219389408826828], "val_loss": [1.9707942690168108, 1.9708498546055384, 1.971301555633545, 1.9722280502319336, 1.9733361516680037, 1.9760430199759347, 1.9796366010393416, 1.9841693469456263, 1.9883745057242257, 1.9934424672807967, 1.9988585880824499, 2.0047753197806224, 2.014751706804548, 2.024263858795166, 2.032877581460135, 2.0414462770734514], "val_accuracy": [0.04266666620969772, 0.05066666752099991, 0.06366666406393051, 0.07566666603088379, 0.0716666653752327, 0.06466666609048843, 0.07466666400432587, 0.0833333358168602, 0.10866666585206985, 0.12333333492279053, 0.12533333897590637, 0.1133333370089531, 0.10433333367109299, 0.09833333641290665, 0.08766666799783707, 0.07866666465997696]}}]