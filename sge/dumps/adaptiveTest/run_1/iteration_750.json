[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 4, 8, 4, 3, 3, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8411428332328796, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.21131449396962, 2.0674516171858595, 1.851783661432333, 1.1371077853517604, 0.7632070832784071, 0.6977228866655121, 0.6605675739068019, 0.6069031723533498, 0.596909276380389, 0.574580658452071, 0.5351314263462847, 0.5299172981807884, 0.5125752926392405, 0.505982058568795, 0.495648180504737, 0.47898977773694346, 0.47698040001301983, 0.4660539969382678, 0.4460929266772864, 0.43764649667539585, 0.4300537594061297, 0.4205602421114678, 0.42428540619388627, 0.4071592972570202, 0.39178976374468577, 0.3792099245173064, 0.388194405580666, 0.38527953234630224, 0.35980343111297314, 0.35476848552365897, 0.3576255528808128, 0.3570825765555199, 0.34137668142843364, 0.3557347350305712], "accuracy": [0.2665433883666992, 0.2934883236885071, 0.37670058012008667, 0.601109504699707, 0.7232862114906311, 0.7363624572753906, 0.7574957013130188, 0.770439863204956, 0.772288978099823, 0.789459764957428, 0.8030643463134766, 0.8057059645652771, 0.8104609847068787, 0.8104609847068787, 0.8099326491355896, 0.8211596608161926, 0.8239334225654602, 0.8259146809577942, 0.8329150676727295, 0.8310658931732178, 0.8392550349235535, 0.8374059200286865, 0.8389908671379089, 0.8504821062088013, 0.8540483713150024, 0.8562937378883362, 0.8543124794960022, 0.8545766472816467, 0.8642187118530273, 0.8679170608520508, 0.8661999702453613, 0.8652753829956055, 0.8739928603172302, 0.8646149635314941], "val_loss": [1.936725343976702, 1.3104416983468192, 1.2674424307686942, 0.6488064527511597, 0.5755623068128314, 0.4983383928026472, 0.497080854007176, 0.48625154154641287, 0.47191265651157926, 0.42432395049503874, 0.42536258697509766, 0.4370282462665013, 0.44092856134687153, 0.4227736677442278, 0.4086132730756487, 0.4584355354309082, 0.3837559052876064, 0.3912216680390494, 0.394193308694022, 0.4019991329738072, 0.37143722602299284, 0.37906213317598614, 0.3613517795290266, 0.3722033756119864, 0.3941319499697004, 0.36217680999210905, 0.3556056533540998, 0.3515795128686087, 0.35306598458971294, 0.37706213338034494, 0.3536466530391148, 0.3440992065838405, 0.3566709245954241, 0.38114592858723234], "val_accuracy": [0.23199999332427979, 0.4623333215713501, 0.6140000224113464, 0.7210000157356262, 0.7210000157356262, 0.7829999923706055, 0.7796666622161865, 0.7846666574478149, 0.7923333048820496, 0.8116666674613953, 0.815666675567627, 0.8103333115577698, 0.8036666512489319, 0.82833331823349, 0.8230000138282776, 0.8013333082199097, 0.8413333296775818, 0.8386666774749756, 0.8226666450500488, 0.8203333616256714, 0.8429999947547913, 0.8423333168029785, 0.8429999947547913, 0.8429999947547913, 0.82833331823349, 0.8506666421890259, 0.8583333492279053, 0.8553333282470703, 0.859666645526886, 0.8389999866485596, 0.8536666631698608, 0.8583333492279053, 0.8513333201408386, 0.8383333086967468]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 4, 8, 4, 3, 3, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 1, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [18, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8360000252723694, "mapping_values": [1, 4, 4, 3, 1, 1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.pow(grad, tf.math.add(beta, alpha))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.217059361826018, 2.0991904976786464, 1.909126049035324, 1.2189841408692395, 0.8679812123762571, 0.71070189139689, 0.6611136486501648, 0.6200817815616004, 0.5848874146628767, 0.5665211757144845, 0.5399063070767339, 0.5084165825961587, 0.5333439867730468, 0.5001397198768512, 0.4849590860093668, 0.46895395972158427, 0.46126311178598517, 0.4441302513890436, 0.44655524416055503, 0.4389742268090707, 0.43644182185817465, 0.411527410167288, 0.4387816748701271, 0.40816006023083, 0.3956660244521873, 0.37971841176943993], "accuracy": [0.26561880111694336, 0.2813366651535034, 0.32333904504776, 0.5531634092330933, 0.6802271604537964, 0.7333245277404785, 0.7508915662765503, 0.7693831920623779, 0.7807422876358032, 0.7880068421363831, 0.7984414100646973, 0.8095363974571228, 0.7985734939575195, 0.8074230551719666, 0.8219521641731262, 0.8269713521003723, 0.82683926820755, 0.8355567455291748, 0.8348963260650635, 0.8342359066009521, 0.8380662798881531, 0.8491612672805786, 0.8388587832450867, 0.8473120927810669, 0.8553691506385803, 0.8553691506385803], "val_loss": [1.9408314568655831, 1.9446648870195662, 1.2998707294464111, 0.7835542985371181, 0.6119167464120048, 0.5300576516560146, 0.48619251591818674, 0.4957066774368286, 0.45826164313725065, 0.42881663356508526, 0.4162875499044146, 0.48006090096064974, 0.44399573121752056, 0.39698491777692524, 0.40166561944144114, 0.4270991427557809, 0.38400561468941824, 0.38665062189102173, 0.3896902799606323, 0.4223431944847107, 0.3651910424232483, 0.42616623640060425, 0.35749123777662006, 0.37236463172095163, 0.3655998025621687, 0.37414564405168804], "val_accuracy": [0.21133333444595337, 0.14533333480358124, 0.45500001311302185, 0.6846666932106018, 0.7173333168029785, 0.7710000276565552, 0.7833333611488342, 0.7723333239555359, 0.7986666560173035, 0.8096666932106018, 0.8149999976158142, 0.8006666898727417, 0.8013333082199097, 0.8303333520889282, 0.8256666660308838, 0.8136666417121887, 0.8453333377838135, 0.8376666903495789, 0.8246666789054871, 0.8143333196640015, 0.8506666421890259, 0.8183333277702332, 0.8483333587646484, 0.8349999785423279, 0.8483333587646484, 0.8420000076293945]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 4, 0, 5, 3, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 2, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [4, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8337143063545227, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1842137324953312, 2.0845872973406934, 1.6462562329198203, 1.3007913742397974, 0.9714776763606144, 0.8464743174723725, 0.7790218205216413, 0.7036751407390384, 0.6614395327666306, 0.632331573511269, 0.6046473514197636, 0.6185320007361756, 0.574117099013799, 0.5664638471153072, 0.5545371446343713, 0.5381634611306236, 0.5542456074917337, 0.511562051254729, 0.5083610081929321, 0.5200034257537732, 0.48321012073047503, 0.47397265654229975, 0.48699280545617357, 0.47588425447613003, 0.44068232717971917, 0.45928699096211856, 0.42144599131794025, 0.45064837297491345, 0.4201105732361024, 0.41468880992083107, 0.4390852791821212, 0.40679802171558266, 0.4207326203895645, 0.39987103202323776], "accuracy": [0.2538634240627289, 0.29745081067085266, 0.4562145173549652, 0.5716549754142761, 0.6439043879508972, 0.6884163022041321, 0.707568347454071, 0.7386078238487244, 0.7493065595626831, 0.7617223858833313, 0.772288978099823, 0.7662131786346436, 0.785101056098938, 0.7864218950271606, 0.7868181467056274, 0.8009510040283203, 0.7932901978492737, 0.8054417967796326, 0.8096684813499451, 0.7998943328857422, 0.8182538747787476, 0.8226125836372375, 0.813498854637146, 0.8301413059234619, 0.8392550349235535, 0.8247259259223938, 0.8442742228507996, 0.8329150676727295, 0.8430854678153992, 0.8474441766738892, 0.8379341959953308, 0.8520671129226685, 0.8381983637809753, 0.8535200357437134], "val_loss": [1.9262898308890206, 1.384068420955113, 1.448401689529419, 0.9537523474012103, 0.666563732283456, 0.6173838547297886, 0.5367064816611153, 0.5136758259364537, 0.5301089286804199, 0.47361360277448383, 0.4855383975165231, 0.48792268548692974, 0.4524249349321638, 0.45480895042419434, 0.49515373366219656, 0.5546772139413017, 0.4222409895488194, 0.4272215962409973, 0.4121138538633074, 0.4156577331679208, 0.3991774320602417, 0.45300744261060444, 0.40086724928447176, 0.3916423150471279, 0.415226800101144, 0.382469722202846, 0.40507526057107107, 0.36508709192276, 0.3593595964568002, 0.40136344943727764, 0.3784660356385367, 0.3562585115432739, 0.36903272356305805, 0.3890668749809265], "val_accuracy": [0.25466665625572205, 0.48266667127609253, 0.3423333466053009, 0.5476666688919067, 0.6803333163261414, 0.7089999914169312, 0.7540000081062317, 0.7733333110809326, 0.7613333463668823, 0.7926666736602783, 0.7753333449363708, 0.8013333082199097, 0.7986666560173035, 0.7976666688919067, 0.7706666588783264, 0.7576666474342346, 0.8196666836738586, 0.8109999895095825, 0.8266666531562805, 0.8190000057220459, 0.8293333053588867, 0.7993333339691162, 0.8259999752044678, 0.8333333134651184, 0.8169999718666077, 0.8376666903495789, 0.8243333101272583, 0.8476666808128357, 0.8506666421890259, 0.8256666660308838, 0.8366666436195374, 0.8500000238418579, 0.8423333168029785, 0.8263333439826965]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 4, 0, 4, 8, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 0, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.824571430683136, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.217127356594107, 1.9861836518121512, 1.6384808286589527, 1.1786436317556208, 0.8516997580341832, 0.6888852446480135, 0.6480890845011695, 0.6148253609680339, 0.5856555661174521, 0.5541705815878054, 0.5200311477315613, 0.5175808863066065, 0.5016442328128581, 0.48246208213937913, 0.48835143039113477, 0.4616898819440077, 0.46765993689627866, 0.4499452584226921, 0.433227851414142, 0.42171741197563006, 0.420677633345198, 0.4099863603398186, 0.4147319443048566, 0.3862263782621768, 0.38489033752003554, 0.3713013788555056], "accuracy": [0.2658829689025879, 0.32122573256492615, 0.40747588872909546, 0.6081098914146423, 0.6929071545600891, 0.7416457533836365, 0.7536653280258179, 0.7677981853485107, 0.7802139520645142, 0.7957997918128967, 0.807158887386322, 0.8090080618858337, 0.8121780753135681, 0.8208954930305481, 0.8206313848495483, 0.8274996876716614, 0.8269713521003723, 0.8297450542449951, 0.8407079577445984, 0.8409721255302429, 0.8383304476737976, 0.8471800088882446, 0.843481719493866, 0.8553691506385803, 0.854708731174469, 0.8614450097084045], "val_loss": [1.9409840447562081, 1.800717898777553, 1.0945803437914168, 0.7738481760025024, 0.6048024722508022, 0.503095167023795, 0.4707339491162981, 0.47580976145608084, 0.4489930697849819, 0.41742338453020367, 0.4289719632693699, 0.45299874033246723, 0.41884282657078337, 0.41781976393290926, 0.39585607392447336, 0.43807385648999897, 0.3727629780769348, 0.37868341377803255, 0.3775227240153721, 0.3982570001057216, 0.36122848306383404, 0.3966222660882132, 0.3578251600265503, 0.3810161863054548, 0.37869197130203247, 0.36382706676210674], "val_accuracy": [0.21266666054725647, 0.3319999873638153, 0.5929999947547913, 0.6883333325386047, 0.7306666374206543, 0.7803333401679993, 0.7986666560173035, 0.784333348274231, 0.8076666593551636, 0.8213333487510681, 0.8056666851043701, 0.8103333115577698, 0.8163333535194397, 0.8203333616256714, 0.82833331823349, 0.8140000104904175, 0.846666693687439, 0.8476666808128357, 0.8320000171661377, 0.8246666789054871, 0.8526666760444641, 0.8333333134651184, 0.8486666679382324, 0.8386666774749756, 0.8366666436195374, 0.8453333377838135]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 4, 0, 4, 3, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [85, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8182857036590576, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.pow(grad, grad), tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.184066562289811, 2.1316188073287377, 1.6007856046676383, 1.8068546585954175, 1.2277318041842014, 0.8746993384341113, 0.7437506895873998, 0.6871549095444281, 0.6458322350469642, 0.6306326952765977, 0.6098569060329275, 0.6181761203125845, 0.5658811528322766, 0.5846646520534385, 0.5628410909807583, 0.5294187466592175, 0.5392736070081464, 0.5352076370765536, 0.5205095816345073, 0.5325175866695239, 0.4984966585617559, 0.46393565731813186], "accuracy": [0.2534671723842621, 0.3007528781890869, 0.488971084356308, 0.4171179533004761, 0.6019020080566406, 0.6770572066307068, 0.7201162576675415, 0.7417778372764587, 0.752740740776062, 0.7640998363494873, 0.7734777331352234, 0.7664773464202881, 0.7944789528846741, 0.7740060687065125, 0.7886672616004944, 0.8014793395996094, 0.7985734939575195, 0.7976489067077637, 0.8054417967796326, 0.7936864495277405, 0.8105930685997009, 0.8277638554573059], "val_loss": [1.9253827503749303, 1.4051781722477503, 0.9859485626220703, 1.3255672114236015, 0.8736073970794678, 0.6470486266272408, 0.5344854252679008, 0.5116152422768729, 0.5297559159142631, 0.5566948141370501, 0.5491578578948975, 0.5174688100814819, 0.4926518883023943, 0.45892274379730225, 0.45460074288504465, 0.5127195290156773, 0.4394217218671526, 0.4286035895347595, 0.48645343099321636, 0.44599878787994385, 0.42049058846064974, 0.4419479710715158], "val_accuracy": [0.2563333213329315, 0.48766666650772095, 0.628000020980835, 0.5713333487510681, 0.5826666951179504, 0.7093333601951599, 0.7630000114440918, 0.7676666378974915, 0.7553333044052124, 0.7426666617393494, 0.7443333268165588, 0.7770000100135803, 0.7896666526794434, 0.796999990940094, 0.8033333420753479, 0.781000018119812, 0.8130000233650208, 0.812333345413208, 0.7739999890327454, 0.7943333387374878, 0.8130000233650208, 0.8033333420753479]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 4, 0, 3, 3, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8145714402198792, "mapping_values": [1, 4, 4, 3, 1, 1, 18, 18, 11, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), grad)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.184125114724841, 2.089819329273998, 1.6526429185840856, 1.373936316891747, 0.9558029073639758, 0.8834464853591828, 0.7218768412662834, 0.7001029234032636, 0.6734794851197164, 0.6127916313417521, 0.6261716792848305, 0.6078107711929042, 0.5972251785728894, 0.5761953298016751, 0.561355458865029, 0.532887429975169, 0.5421274670866801, 0.5170178017312699, 0.5114233023132142, 0.5005268677508181, 0.5067876105877891, 0.4824792583384581, 0.4896261637803822, 0.4816566547500679, 0.44737547321909094, 0.45140275318609047, 0.44144805706077955, 0.4425726485345279, 0.4281071483411841, 0.42661206141407493, 0.4475224287935677, 0.3989549401280052, 0.42889882083487724, 0.4133951809065862], "accuracy": [0.2538634240627289, 0.29626205563545227, 0.4616298973560333, 0.5711266398429871, 0.6527539491653442, 0.6741513609886169, 0.7248712182044983, 0.7314753532409668, 0.7464007139205933, 0.7692511081695557, 0.7614582180976868, 0.7688548564910889, 0.7794214487075806, 0.7825914621353149, 0.7866860628128052, 0.8013472557067871, 0.7922335267066956, 0.8034605979919434, 0.8109893202781677, 0.8112534880638123, 0.8107251524925232, 0.8166688680648804, 0.8177255392074585, 0.8224804997444153, 0.8318583965301514, 0.8305375576019287, 0.834632158279419, 0.8314621448516846, 0.8421608805656433, 0.8399154543876648, 0.8338396549224854, 0.8518029451370239, 0.8333113193511963, 0.8473120927810669], "val_loss": [1.9263231413705009, 1.3945448398590088, 0.8774917125701904, 0.7487550462995257, 0.779523423739842, 0.5801725387573242, 0.5493631022317069, 0.5752735308238438, 0.5279019389833722, 0.5404354504176548, 0.5043968302862984, 0.5243133987699237, 0.4520355463027954, 0.45794687952314106, 0.4442618063517979, 0.4871962411063058, 0.4765526737485613, 0.4233745847429548, 0.40796293531145367, 0.5181612116949899, 0.39619393008095877, 0.4376187835420881, 0.42645497832979473, 0.38719782658985685, 0.3999993290219988, 0.424515894481114, 0.39165189436503817, 0.3640966500554766, 0.35927317823682514, 0.42368015221187044, 0.3681313565799168, 0.36292228528431486, 0.3586165819849287, 0.3611007162502834], "val_accuracy": [0.25566667318344116, 0.4776666760444641, 0.637333333492279, 0.6696666479110718, 0.675000011920929, 0.7310000061988831, 0.7396666407585144, 0.7333333492279053, 0.753000020980835, 0.7446666955947876, 0.7753333449363708, 0.784333348274231, 0.8006666898727417, 0.7983333468437195, 0.8133333325386047, 0.7916666865348816, 0.777999997138977, 0.8149999976158142, 0.8286666870117188, 0.7509999871253967, 0.8333333134651184, 0.8019999861717224, 0.8176666498184204, 0.8363333344459534, 0.8230000138282776, 0.8140000104904175, 0.8346666693687439, 0.8446666598320007, 0.8513333201408386, 0.8116666674613953, 0.843666672706604, 0.847000002861023, 0.8479999899864197, 0.840666651725769]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 4, 8, 4, 3, 3, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8131428360939026, "mapping_values": [1, 4, 4, 3, 1, 1, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.multiply(grad, grad), tf.math.add(beta, grad))), tf.math.multiply(grad, tf.math.add(beta, alpha))), tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1840679179786013, 2.168793694391353, 1.7855183923595601, 1.5656875996400084, 1.2787698756875363, 0.9175330794026052, 0.7822205264885443, 0.6893804043968356, 0.6789620608118909, 0.6396860341118186, 0.61852207474815, 0.6012123828519369, 0.5996827124100729, 0.5608804606569442, 0.5526337235547989, 0.5285202580325875, 0.538437125138351, 0.5061412970419211, 0.5219384287255803, 0.5108541004441401, 0.5028935856964641, 0.46916664089146953, 0.5017304072613414, 0.496284334371591, 0.4541334984379989, 0.4489677958146157, 0.44973667786499577, 0.4477320086521448, 0.44481649009180957, 0.42433415493630083, 0.4564297571118954, 0.41524090284779086, 0.4241573713585024, 0.4111090479525656, 0.3898801485411385, 0.39032235189735015, 0.39228442803727887, 0.3899050434866066, 0.39150452117059586, 0.39909153722847585, 0.3641592147501153, 0.37108293893299144, 0.36112420158757197, 0.3641095939384491, 0.3567896368615049, 0.34599617021651613, 0.36003813031421694, 0.332601645973459], "accuracy": [0.2533350884914398, 0.30339452624320984, 0.445779949426651, 0.486989825963974, 0.5905428528785706, 0.6606789231300354, 0.7091533541679382, 0.7405890822410583, 0.7452120184898376, 0.7600052952766418, 0.7707040309906006, 0.7755910754203796, 0.7707040309906006, 0.7903843522071838, 0.7897239327430725, 0.8057059645652771, 0.7971205711364746, 0.8138951063156128, 0.7981772422790527, 0.807158887386322, 0.8034605979919434, 0.8280280232429504, 0.8125742673873901, 0.8132346868515015, 0.8293488025665283, 0.83119797706604, 0.8343679904937744, 0.8274996876716614, 0.8319904804229736, 0.8442742228507996, 0.8354246616363525, 0.8477083444595337, 0.8399154543876648, 0.8520671129226685, 0.8504821062088013, 0.8576145768165588, 0.8548408150672913, 0.8529917001724243, 0.8510104417800903, 0.8459912538528442, 0.8639545440673828, 0.8614450097084045, 0.8628978729248047, 0.8628978729248047, 0.8651432991027832, 0.8704266548156738, 0.8638224601745605, 0.8728041052818298], "val_loss": [1.9254657200404577, 1.4276442187173026, 1.1107179096766882, 0.9821915626525879, 0.6580464158739362, 0.6825915575027466, 0.5601028544562203, 0.5872598375592913, 0.5783958775656564, 0.48152123178754536, 0.5069540057863507, 0.4973817893436977, 0.48762708050864084, 0.4640021324157715, 0.4365593535559518, 0.43630857127053396, 0.43908912794930594, 0.4505303416933332, 0.41100023474012104, 0.4731874465942383, 0.4296093157359532, 0.4419381448200771, 0.4558631181716919, 0.4010827200753348, 0.40673506259918213, 0.39197094099862234, 0.39938184193202425, 0.38295483589172363, 0.37334554536002024, 0.43981145109449116, 0.37540626525878906, 0.3746797612735203, 0.37670660870415823, 0.3712217552321298, 0.3596427355493818, 0.38576264892305645, 0.37245887517929077, 0.4086954593658447, 0.3589738351958139, 0.3575311814035688, 0.3764501554625375, 0.36373428787503925, 0.3486844301223755, 0.34465343611580984, 0.3583853840827942, 0.34694734641483854, 0.34889778920582365, 0.34851729018347605], "val_accuracy": [0.25699999928474426, 0.503000020980835, 0.528333306312561, 0.6546666622161865, 0.7036666870117188, 0.7183333039283752, 0.7416666746139526, 0.7329999804496765, 0.7310000061988831, 0.7913333177566528, 0.762666642665863, 0.7836666703224182, 0.7720000147819519, 0.7940000295639038, 0.8146666884422302, 0.812666654586792, 0.8069999814033508, 0.796999990940094, 0.8196666836738586, 0.7796666622161865, 0.8106666803359985, 0.8006666898727417, 0.7923333048820496, 0.8263333439826965, 0.8186666369438171, 0.8373333215713501, 0.831333339214325, 0.8393333554267883, 0.8423333168029785, 0.812666654586792, 0.8416666388511658, 0.8429999947547913, 0.840666651725769, 0.8343333601951599, 0.8476666808128357, 0.8360000252723694, 0.8423333168029785, 0.8236666917800903, 0.8473333120346069, 0.8526666760444641, 0.8396666646003723, 0.8363333344459534, 0.8573333621025085, 0.8573333621025085, 0.8443333506584167, 0.8566666841506958, 0.8553333282470703, 0.8519999980926514]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 4, 8, 4, 3, 3, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7662857174873352, "mapping_values": [1, 4, 4, 3, 1, 1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.pow(grad, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1840706307732782, 2.1829046917440333, 1.838129191193299, 1.2452850915720874, 1.0794206617325997, 0.7992799891976475, 0.7892343511733837, 0.7165016578314815, 0.6678693434266587, 0.6329628314796834, 0.6338379846398919, 0.6381702322954231, 0.5994282348942306], "accuracy": [0.2534671723842621, 0.30339452624320984, 0.419759601354599, 0.5795799493789673, 0.6564522385597229, 0.6977941989898682, 0.6993792057037354, 0.7362303733825684, 0.7544577717781067, 0.76542067527771, 0.7642319202423096, 0.7630431652069092, 0.7700436115264893], "val_loss": [1.9254064559936523, 1.4443559646606445, 1.3114467007773263, 1.1787782396589006, 0.6154681614467076, 0.5928588594709124, 0.56000098160335, 0.5086691379547119, 0.5310360363551548, 0.5013441698891776, 0.5569148915154594, 0.4979231187275478, 0.48943614959716797], "val_accuracy": [0.25566667318344116, 0.49166667461395264, 0.5320000052452087, 0.6266666650772095, 0.7099999785423279, 0.7223333120346069, 0.7450000047683716, 0.781000018119812, 0.7713333368301392, 0.7416666746139526, 0.7473333477973938, 0.7770000100135803, 0.7713333368301392]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 9, 4, 9, 4, 3, 8, 0, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [38, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 2, 4, 8, 4, 3, 3, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08479725569486618, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 4, 0, 4, 3, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [4, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.pow(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), grad)), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 4, 4, 4, 3, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 0, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [4, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 3, 0, 1, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(alpha, grad))), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [16160743.036229817, 257474124.14740458, 1124018923.3401136, 3040339257.9896975, 6516323835.469027, 12034533826.257034], "accuracy": [0.09298639744520187, 0.10421344637870789, 0.10051512718200684, 0.10672302544116974, 0.09747721254825592, 0.09747721254825592], "val_loss": [44259536.0, 353571172.5714286, 1192737572.5714285, 2826568411.428571, 5519858688.0, 9537417508.571428], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 9, 4, 9, 0, 3, 0, 2, 1, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 0, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [16, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [77.00727920320607, 989.0282516429106, 4136.030377659201, 11057.575369703267, 23597.901340745113, 43468.31472012862], "accuracy": [0.09259014576673508, 0.10447761416435242, 0.10077928751707077, 0.10659094154834747, 0.09747721254825592, 0.09760929644107819], "val_loss": [223.44767543247767, 1446.7550223214287, 4627.789899553572, 10724.07142857143, 20685.33816964286, 35462.77790178572], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [3, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 4, 0, 4, 3, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [31, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.negative(beta)), grad), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 4, 8, 4, 3, 3, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [31, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [2, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.pow(tf.math.pow(grad, tf.math.sqrt(tf.math.pow(grad, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1011524269565.3267, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.27182671427726746, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [89, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 4, 0, 4, 3, 5, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [79, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [1, 0], [53, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.pow(beta, grad), grad), tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 4, 3, 4, 1, 3, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [31, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 2, 17, 17, 8, 9, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), alpha)))))))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.pow(beta, grad), tf.math.multiply(tf.math.pow(grad, tf.math.add(beta, tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [67, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 5, 9, 4, 8, 0, 2, 1, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 1, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [79, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 10, 10, 7, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [209011398.79240468, 3604047018.0805707, 15367627894.616827, 43261686658.07951, 93179878206.72356, 176023423814.8387], "accuracy": [0.09298639744520187, 0.10434553027153015, 0.10051512718200684, 0.10672302544116974, 0.09747721254825592, 0.09747721254825592], "val_loss": [575843931.4285715, 4982068516.571428, 17344207725.714287, 41281794633.14286, 81758605897.14285, 151305902957.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 4, 2, 4, 3, 0, 2, 1, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 79, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302416188637216, 2.301740789835432, 2.3011259078475637, 2.3009260009702137, 2.302541804650614, 2.302439920811873], "accuracy": [0.0886276587843895, 0.09721305221319199, 0.0940430611371994, 0.09219389408826828, 0.09166556596755981, 0.08492933213710785], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 4, 0, 9, 3, 3, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302416188637216, 2.301740789835432, 2.3011259078475637, 2.3009260009702137, 2.302541804650614, 2.302439920811873], "accuracy": [0.0886276587843895, 0.09721305221319199, 0.0940430611371994, 0.09219389408826828, 0.09166556596755981, 0.08492933213710785], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]