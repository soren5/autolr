[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 4, 0, 8, 5, 1, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [32, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8371428847312927, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, beta))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0470190672999786, 1.4679021786830964, 0.9605871790498711, 0.8074751084648528, 0.7785564243769869, 0.7160887906674491, 0.6618341187428741, 0.6552485977464962, 0.6996224524873736, 0.6141072090952828, 0.5923417307650015, 0.5615365060486451, 0.5589284843473292, 0.5372868968259231, 0.5384956103597162, 0.5045971717769601, 0.48475799014886073, 0.4713024517776881, 0.4673341945288062, 0.46627525838217193, 0.46187684463078493, 0.4410075353491245, 0.4425902554364079, 0.430101811909452, 0.4143217649591786, 0.41812591412363115, 0.4051612102399649, 0.3874356656333695, 0.3960748608353871, 0.39388598523529184, 0.3693134092879947, 0.37510129623582505, 0.36260409945462907, 0.3761082230864767, 0.35748070039926755, 0.35827680769975645, 0.3384087814190101, 0.33199428854255064, 0.3407874524380789, 0.32777265417278245, 0.3183704214034032, 0.3324181355222058, 0.3120640258133419, 0.30539268696501803, 0.30401388338575464], "accuracy": [0.3387927711009979, 0.4859331548213959, 0.6391493678092957, 0.6954167485237122, 0.7077004313468933, 0.7284374833106995, 0.7511557340621948, 0.7453441023826599, 0.7313432693481445, 0.7667415142059326, 0.7779685854911804, 0.7824593782424927, 0.7880068421363831, 0.7943468689918518, 0.7857614755630493, 0.8047813773155212, 0.8208954930305481, 0.8236692547798157, 0.8236692547798157, 0.8212917447090149, 0.8228767514228821, 0.8368775844573975, 0.8314621448516846, 0.8383304476737976, 0.8428213000297546, 0.8400475382804871, 0.8515387773513794, 0.8560295701026917, 0.8521991968154907, 0.8535200357437134, 0.8614450097084045, 0.863029956817627, 0.860652506351471, 0.8577466607093811, 0.863029956817627, 0.8648791313171387, 0.8722757697105408, 0.8771628737449646, 0.870030403137207, 0.8728041052818298, 0.8808611631393433, 0.871879518032074, 0.8836349248886108, 0.8844274282455444, 0.8850878477096558], "val_loss": [1.5521089008876257, 0.8508786133357457, 0.6200511796133858, 0.6645119360515049, 0.5585083109991891, 0.5285316365105766, 0.5108867032187325, 0.6177933897290911, 0.49782279559544157, 0.5054856879370553, 0.4648604563304356, 0.47193184920719694, 0.442965635231563, 0.4307065520967756, 0.4168750217982701, 0.4266514267240252, 0.39732859815870014, 0.3933782492365156, 0.39861027683530537, 0.39102604559489657, 0.3861150400979178, 0.3871475798743112, 0.3766619052205767, 0.3813545022691999, 0.38011029788425993, 0.3749440738133022, 0.3618265049798148, 0.355292694909232, 0.38286599942616056, 0.3431481548718044, 0.3481250320162092, 0.35671377182006836, 0.3403921297618321, 0.346846946648189, 0.3608717407499041, 0.32770285436085295, 0.344038154397692, 0.33996338503701345, 0.3320483480181013, 0.32113652569907053, 0.3787862913949149, 0.35900201967784334, 0.3286494186946324, 0.319840065070561, 0.32922974654606413], "val_accuracy": [0.34166666865348816, 0.6326666474342346, 0.7176666855812073, 0.6833333373069763, 0.7486666440963745, 0.75, 0.7613333463668823, 0.6983333230018616, 0.7676666378974915, 0.7683333158493042, 0.7873333096504211, 0.781000018119812, 0.8063333630561829, 0.8013333082199097, 0.8183333277702332, 0.8193333148956299, 0.8230000138282776, 0.8373333215713501, 0.8273333311080933, 0.8240000009536743, 0.8389999866485596, 0.8356666564941406, 0.8323333263397217, 0.831333339214325, 0.8320000171661377, 0.8423333168029785, 0.843666672706604, 0.8513333201408386, 0.8253333568572998, 0.8523333072662354, 0.8576666712760925, 0.8450000286102295, 0.8516666889190674, 0.8516666889190674, 0.840666651725769, 0.8606666922569275, 0.8536666631698608, 0.8506666421890259, 0.8573333621025085, 0.8656666874885559, 0.8363333344459534, 0.8453333377838135, 0.8640000224113464, 0.8643333315849304, 0.8643333315849304]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 3, 4, 5, 8, 5, 0, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8191428780555725, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 7, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, grad)))))), tf.math.negative(alpha)), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0468839511674832, 1.4676420932999534, 0.9589193155973059, 0.803154049343547, 0.7892283486526372, 0.7151493217809373, 0.6628102787481622, 0.6483028966201815, 0.6915359091465861, 0.6077409416472577, 0.5903416454217312, 0.5610590472654061, 0.5540482017027467, 0.536750049796386, 0.5335709846188222, 0.5004360314924577, 0.48333533845321297, 0.4695614491117125, 0.46308051651778426, 0.4651900205228307, 0.46203757369239584, 0.4385511860981625, 0.4437077119050954, 0.4315245359085019, 0.41006062248001607, 0.41463665109757086, 0.4063654451708138, 0.38602058944716633, 0.3906318764479688, 0.3976555148159524, 0.3659129035849188, 0.3769086714213503, 0.35445490653063594, 0.3670129412909414, 0.36269221976133714, 0.35261318955549303, 0.34248192676652645, 0.33031976882729, 0.3375822541901401, 0.3259196380866029, 0.3185203682162333, 0.3533118249812319, 0.31376023817103316, 0.30697903804665055, 0.30103487380192406], "accuracy": [0.3385286033153534, 0.4858010709285736, 0.6399418711662292, 0.6955488324165344, 0.7022850513458252, 0.728701651096344, 0.7495707273483276, 0.7477215528488159, 0.7396644949913025, 0.7676661014556885, 0.7758552432060242, 0.7852331399917603, 0.7877426743507385, 0.7923656105995178, 0.789459764957428, 0.8094043135643005, 0.8219521641731262, 0.8226125836372375, 0.8245938420295715, 0.8249900937080383, 0.8234050869941711, 0.8383304476737976, 0.8322546482086182, 0.8367455005645752, 0.8469158411026001, 0.843481719493866, 0.848368763923645, 0.8570862412452698, 0.8552370667457581, 0.8512746095657349, 0.8634262084960938, 0.8593316674232483, 0.8668603897094727, 0.8617091774940491, 0.8628978729248047, 0.8685774803161621, 0.8697662353515625, 0.8762382864952087, 0.8684453964233398, 0.8750495314598083, 0.8815215826034546, 0.868049144744873, 0.8836349248886108, 0.883238673210144, 0.8835028409957886], "val_loss": [1.5505407197134835, 0.8394045148577008, 0.6282798392432076, 0.6643552098955426, 0.5683363165174212, 0.5260258742741176, 0.5144353253500802, 0.6008349316460746, 0.49523704392569406, 0.49501167024884907, 0.4575968640191214, 0.4798309973308018, 0.45542309965406147, 0.4382433720997402, 0.4123119115829468, 0.42905087981905254, 0.3981192111968994, 0.39041636671338764, 0.3916466236114502, 0.39209052494594027, 0.3855231319155012, 0.3937597530228751, 0.37912645510264803, 0.3868309770311628, 0.3701921360833304, 0.3769923448562622, 0.36045623677117483, 0.351509119783129, 0.3790675401687622, 0.3438092385019575, 0.34610497100012644, 0.35439146416527884, 0.33900571720940725, 0.3399303044591631, 0.36091093506131855, 0.3299116918018886, 0.34503057173320223, 0.3360105497496469, 0.32847354241779875, 0.3226536086627415, 0.4078502058982849, 0.3484898124422346, 0.3249144128390721, 0.3199911543301174, 0.3288045951298305], "val_accuracy": [0.3409999907016754, 0.6443333625793457, 0.718999981880188, 0.6813333630561829, 0.7426666617393494, 0.7513333559036255, 0.7573333382606506, 0.7059999704360962, 0.7716666460037231, 0.7760000228881836, 0.7926666736602783, 0.7773333191871643, 0.8009999990463257, 0.7910000085830688, 0.8153333067893982, 0.8159999847412109, 0.8216666579246521, 0.8379999995231628, 0.8330000042915344, 0.8253333568572998, 0.8383333086967468, 0.828000009059906, 0.8339999914169312, 0.8243333101272583, 0.8383333086967468, 0.8426666855812073, 0.847000002861023, 0.8519999980926514, 0.8339999914169312, 0.8473333120346069, 0.8569999933242798, 0.8496666550636292, 0.8553333282470703, 0.8573333621025085, 0.8386666774749756, 0.8586666584014893, 0.8550000190734863, 0.856333315372467, 0.8576666712760925, 0.8679999709129333, 0.8240000009536743, 0.8536666631698608, 0.8633333444595337, 0.8679999709129333, 0.8659999966621399]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 3, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8171428442001343, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0473950266318472, 1.5229210420102648, 1.004373069523411, 0.812704957794315, 0.7614471814840571, 0.7414817046007507, 0.671202068646287, 0.6692405760233129, 0.6670955631238846, 0.6120078792157599, 0.5932716674981667, 0.5634364754044227, 0.5527499152794962, 0.5405010035513194, 0.5287922868135346, 0.5030428503939284, 0.48538218328603555, 0.4706251234221594, 0.46577133573104584, 0.4650243584191117, 0.45843799845055344, 0.4407552400434872, 0.43921219531838857, 0.42680570925263017, 0.4123463603003528, 0.4231872674992465, 0.40300465757112147, 0.3880247465529068, 0.39277965999109365, 0.3959650227564075, 0.37288867256597613, 0.37821104631306174, 0.3614587385412598, 0.3697331645713585, 0.3543106654119876, 0.3505182617320959, 0.3405799239562912, 0.33256488614125795, 0.33890635834441224, 0.33036194975743627, 0.3198459666867408, 0.3591576760053918, 0.3110173950302697, 0.3089342134590272, 0.3103098517490211], "accuracy": [0.3366794288158417, 0.46572446823120117, 0.622639000415802, 0.6925109028816223, 0.7136441469192505, 0.7194558382034302, 0.7427024245262146, 0.7417778372764587, 0.748249888420105, 0.767930269241333, 0.7765156626701355, 0.7847048044204712, 0.7884030938148499, 0.7942147850990295, 0.7922335267066956, 0.8079513907432556, 0.8157442808151245, 0.8235371708869934, 0.8253863453865051, 0.8235371708869934, 0.8249900937080383, 0.8345000743865967, 0.8342359066009521, 0.8404437899589539, 0.8448025584220886, 0.8378021121025085, 0.8481045961380005, 0.8574824929237366, 0.8569541573524475, 0.8508783578872681, 0.8615770936012268, 0.8581429123878479, 0.8622375130653381, 0.8619733452796936, 0.8660678863525391, 0.8706908226013184, 0.8691058158874512, 0.8730682730674744, 0.8705587387084961, 0.8708229064941406, 0.8779553771018982, 0.8617091774940491, 0.8844274282455444, 0.8849557638168335, 0.8811253309249878], "val_loss": [1.5492165769849504, 0.8838686943054199, 0.6279267583574567, 0.5878530059541974, 0.5849914380482265, 0.5329840523856026, 0.5233361550739833, 0.5541901418140956, 0.48726931640080046, 0.48574176856449675, 0.4583651338304792, 0.4652407339641026, 0.43724818740572247, 0.43998936244419645, 0.4118308850697109, 0.4422822083745684, 0.389956602028438, 0.38943337542670114, 0.39543075220925467, 0.3897437197821481, 0.3803942458970206, 0.3938475932393755, 0.3817035896437509, 0.36806764772960116, 0.38327062129974365, 0.37341329881123136, 0.3733124051775251, 0.35382436003003803, 0.3833523988723755, 0.35612575496946064, 0.3486588256699698, 0.3517694813864572, 0.3429540140288217, 0.3495119980403355, 0.3566392830439976, 0.3312494158744812, 0.3516146881239755, 0.3422536679676601, 0.34275877475738525, 0.32103382689612253, 0.4231147680963789, 0.33809625250952585, 0.33071665252958027, 0.32486601386751446, 0.32491531542369295], "val_accuracy": [0.31299999356269836, 0.5983333587646484, 0.7049999833106995, 0.7350000143051147, 0.7336666584014893, 0.7509999871253967, 0.7586666941642761, 0.7369999885559082, 0.7749999761581421, 0.7853333353996277, 0.7960000038146973, 0.7796666622161865, 0.8063333630561829, 0.7893333435058594, 0.8180000185966492, 0.8166666626930237, 0.8270000219345093, 0.8356666564941406, 0.8320000171661377, 0.8289999961853027, 0.8386666774749756, 0.8320000171661377, 0.8309999704360962, 0.8399999737739563, 0.8299999833106995, 0.8403333425521851, 0.8373333215713501, 0.8486666679382324, 0.8240000009536743, 0.8416666388511658, 0.8556666374206543, 0.8476666808128357, 0.8553333282470703, 0.8533333539962769, 0.8423333168029785, 0.8600000143051147, 0.8526666760444641, 0.856333315372467, 0.8500000238418579, 0.8653333187103271, 0.8236666917800903, 0.8529999852180481, 0.8586666584014893, 0.8616666793823242, 0.8650000095367432]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 3, 4, 0, 8, 5, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [32, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8154285550117493, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 9, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, alpha)))))), grad), tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.054871239477633, 1.4720013606754576, 1.1160803461402335, 0.8746283561357371, 0.8024497572394127, 0.7568458813276935, 0.7449688369083745, 0.70362591323064, 0.6959250042577383, 0.6581726279304075, 0.6353923597387461, 0.6227904839160467, 0.6039233590476092, 0.5823033637516156, 0.579555186132918, 0.5475082223158093, 0.5391979533463044, 0.5262938793765839, 0.5233476210138062, 0.5272707579756583, 0.5186615239722051, 0.5041221341106161, 0.5060201647369507, 0.48322899981874595, 0.4760224808909401, 0.4639645253646769, 0.4565709131489246, 0.44308272304079555, 0.4451930625776274, 0.4642767369778653, 0.4257010187667831, 0.42828199529943844, 0.40891612344067785, 0.43432340454573426, 0.4152617464645302, 0.4005571355468262, 0.39256485562912774, 0.37419009739696674, 0.4024016289560786, 0.3728228539381958, 0.3775467056254071], "accuracy": [0.3280940353870392, 0.4893673360347748, 0.6071853041648865, 0.6676793098449707, 0.6996433734893799, 0.7136441469192505, 0.7194558382034302, 0.7243428826332092, 0.7321357727050781, 0.744419515132904, 0.7582882046699524, 0.7597411274909973, 0.7643640041351318, 0.7771760821342468, 0.7717606425285339, 0.7901201844215393, 0.7947431206703186, 0.8016114234924316, 0.8013472557067871, 0.7992339134216309, 0.8020076751708984, 0.807158887386322, 0.806630551815033, 0.8208954930305481, 0.8178576231002808, 0.8239334225654602, 0.8249900937080383, 0.8343679904937744, 0.8305375576019287, 0.8212917447090149, 0.8409721255302429, 0.8383304476737976, 0.843481719493866, 0.8343679904937744, 0.8422929644584656, 0.845859169960022, 0.8545766472816467, 0.8582749962806702, 0.842028796672821, 0.8562937378883362, 0.8638224601745605], "val_loss": [1.444842951638358, 0.9935978480747768, 0.7192733117512294, 0.6687561614172799, 0.5931653806141445, 0.5665899855749947, 0.5423764671598162, 0.5956852606364659, 0.523925815309797, 0.5141707488468715, 0.49528108324323383, 0.4956234523228237, 0.4715538535799299, 0.46188766615731375, 0.45069352218082975, 0.4461648804800851, 0.4325419408934457, 0.42441757236208233, 0.4341758830206735, 0.43605021068028044, 0.42861177240099224, 0.40821600811822073, 0.44039957012448994, 0.44412178652627127, 0.3940806303705488, 0.40444761514663696, 0.3968208517347063, 0.4019123486110142, 0.37949499913624357, 0.36871454545429777, 0.3760873334748404, 0.35984342438834055, 0.4040996517453875, 0.36640535082135883, 0.3857980966567993, 0.35180916104997906, 0.36602725301470074, 0.3552838478769575, 0.35628364767347065, 0.3514126368931362, 0.4056203195026943], "val_accuracy": [0.3973333239555359, 0.6046666502952576, 0.6549999713897705, 0.6726666688919067, 0.7286666631698608, 0.7360000014305115, 0.7540000081062317, 0.7260000109672546, 0.749666690826416, 0.7703333497047424, 0.7730000019073486, 0.7666666507720947, 0.777999997138977, 0.7870000004768372, 0.7933333516120911, 0.7953333258628845, 0.8043333292007446, 0.8169999718666077, 0.7976666688919067, 0.7976666688919067, 0.8119999766349792, 0.8240000009536743, 0.793666660785675, 0.7953333258628845, 0.8246666789054871, 0.8273333311080933, 0.8303333520889282, 0.8190000057220459, 0.8349999785423279, 0.8396666646003723, 0.843666672706604, 0.8433333039283752, 0.8013333082199097, 0.8429999947547913, 0.8256666660308838, 0.8526666760444641, 0.8410000205039978, 0.8420000076293945, 0.8396666646003723, 0.8496666550636292, 0.8166666626930237]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 3, 4, 5, 8, 5, 0, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8145714402198792, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 7, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, grad)))))), tf.math.negative(alpha)), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.046821805259665, 1.4680959891491971, 0.9588479012026526, 0.8096418973555922, 0.7676367386929537, 0.7299305017062812, 0.6630484441393921, 0.6518853734182313, 0.6657722518349903, 0.6223655941700182, 0.5898874870317802, 0.5556016772209992, 0.5591719000016095, 0.538506325619206, 0.5311466956166953, 0.5041310426235011, 0.48362623042733427, 0.47154280476408894, 0.46426268858192243, 0.471925551050359, 0.46328665746547887, 0.44032844548779015, 0.4402355468504622, 0.4280651268343711, 0.41152902847551287, 0.4211434819529542, 0.40040332612706653, 0.3918868602503088, 0.39341014324083556, 0.40184840980364644, 0.3699516862170288, 0.37539607976500416, 0.35986132904239665, 0.37375941336461976, 0.3547180729369918, 0.3544544239306195, 0.3370095174334005, 0.3341536673737744, 0.33997656931462716, 0.3234949142484774, 0.3245759121557001, 0.3447292041288879, 0.31611109837612156, 0.31075430719009434, 0.3076466687989037], "accuracy": [0.3387927711009979, 0.4861973226070404, 0.6384889483451843, 0.6944921612739563, 0.7131158113479614, 0.7235503792762756, 0.7489103078842163, 0.748778223991394, 0.7477215528488159, 0.7631752490997314, 0.7798177003860474, 0.7862898111343384, 0.7847048044204712, 0.7950072884559631, 0.7887993454933167, 0.8070268034934998, 0.8197067975997925, 0.8208954930305481, 0.8251221776008606, 0.8185180425643921, 0.8244617581367493, 0.8374059200286865, 0.8323867321014404, 0.8412362933158875, 0.8471800088882446, 0.8379341959953308, 0.8504821062088013, 0.8525954484939575, 0.8535200357437134, 0.8467837572097778, 0.8634262084960938, 0.8594637513160706, 0.8643507957458496, 0.8589354157447815, 0.8639545440673828, 0.8684453964233398, 0.8717474341392517, 0.8749174475669861, 0.868049144744873, 0.8754457831382751, 0.8779553771018982, 0.8684453964233398, 0.8809932470321655, 0.8833707571029663, 0.8815215826034546], "val_loss": [1.5489084039415633, 0.8461471966334752, 0.6221687282834735, 0.5844073295593262, 0.5811484200613839, 0.5285531452723912, 0.5217206989015851, 0.5518735987799508, 0.49078198841639925, 0.4980489867074149, 0.46402810301099506, 0.4856095484324864, 0.4429170915058681, 0.4240803207669939, 0.4147386040006365, 0.4300032768930708, 0.3958493982042585, 0.39388433524540495, 0.39871915749141146, 0.39479503461292814, 0.38317770617348806, 0.39093628951481413, 0.37481036356517244, 0.38206235000065397, 0.37724751234054565, 0.36057358980178833, 0.3744320869445801, 0.35173473187855314, 0.3741243737084525, 0.35072762625558035, 0.3473245246069772, 0.35784514461244854, 0.3450431908879961, 0.3479202389717102, 0.3572467139789036, 0.33109852245875765, 0.3398191588265555, 0.3459786432129996, 0.33091406311307636, 0.3226515310151236, 0.41210888964789255, 0.36063080174582346, 0.3316861391067505, 0.3223304067339216, 0.3316598960331508], "val_accuracy": [0.3426666557788849, 0.6430000066757202, 0.7239999771118164, 0.7366666793823242, 0.7353333234786987, 0.7516666650772095, 0.7526666522026062, 0.7409999966621399, 0.7720000147819519, 0.7770000100135803, 0.7850000262260437, 0.7763333320617676, 0.8103333115577698, 0.8033333420753479, 0.8176666498184204, 0.8253333568572998, 0.8259999752044678, 0.8339999914169312, 0.8289999961853027, 0.8256666660308838, 0.8396666646003723, 0.8299999833106995, 0.8343333601951599, 0.8276666402816772, 0.8370000123977661, 0.846666693687439, 0.8356666564941406, 0.8546666502952576, 0.8373333215713501, 0.8479999899864197, 0.8566666841506958, 0.846666693687439, 0.8496666550636292, 0.8483333587646484, 0.8456666469573975, 0.859666645526886, 0.8569999933242798, 0.8479999899864197, 0.8579999804496765, 0.8663333058357239, 0.8240000009536743, 0.8389999866485596, 0.8610000014305115, 0.8659999966621399, 0.8646666407585144]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [10, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7988571524620056, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 8, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, alpha))), tf.math.add(beta, grad)))))))), grad), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.030599620474202, 1.4995280228365273, 1.1375827540842423, 0.9873679967021678, 0.8998564552353862, 0.8639274938404757, 0.8126637753305371, 0.7517638708055295, 0.7391661371080678, 0.7161960563230131, 0.6875183287707334, 0.6502447882663493, 0.6494388952152589, 0.6377825102061644, 0.5990769783220177, 0.6361651256761184, 0.5858380203517264, 0.5870734820150507, 0.5573269031413431, 0.547039979114477, 0.5264382876417404, 0.5367887502868556, 0.5322542176931888, 0.5497376335185233], "accuracy": [0.3082816004753113, 0.47549861669540405, 0.5646545886993408, 0.6238277554512024, 0.6789063811302185, 0.669792652130127, 0.6885483860969543, 0.7096816897392273, 0.7193237543106079, 0.7209087014198303, 0.7412495017051697, 0.7511557340621948, 0.752740740776062, 0.7552502751350403, 0.767930269241333, 0.7569673657417297, 0.7854973077774048, 0.7713643908500671, 0.7876105904579163, 0.7969884872436523, 0.800290584564209, 0.7996301651000977, 0.7917051911354065, 0.7969884872436523], "val_loss": [1.4613062654222762, 1.0296341691698347, 0.7970212187085833, 0.686056409563337, 0.7683168309075492, 0.6815932818821498, 0.5761943544660296, 0.609454904283796, 0.5620165552411761, 0.6042027984346662, 0.5188226529530117, 0.5538625376565116, 0.6067995343889508, 0.49211491857256207, 0.5006321668624878, 0.4907617058072771, 0.49424651690891813, 0.5011440174920219, 0.44863011155809673, 0.456601755959647, 0.4401241626058306, 0.46870817456926617, 0.4541576930454799, 0.4453762684549604], "val_accuracy": [0.47333332896232605, 0.5246666669845581, 0.6336666941642761, 0.6816666722297668, 0.6256666779518127, 0.6769999861717224, 0.7356666922569275, 0.7333333492279053, 0.7333333492279053, 0.734666645526886, 0.7676666378974915, 0.734000027179718, 0.7103333473205566, 0.7646666765213013, 0.7593333125114441, 0.7850000262260437, 0.765999972820282, 0.7649999856948853, 0.8133333325386047, 0.7983333468437195, 0.8103333115577698, 0.781333327293396, 0.778333306312561, 0.7940000295639038]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 3, 4, 5, 8, 5, 0, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7902857065200806, "mapping_values": [1, 4, 4, 2, 2, 1, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(beta)))), tf.math.add(beta, alpha)), tf.math.square(grad))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9499526462534778, 1.2751657465004635, 0.8683504838717376, 0.7969023118937383, 0.7422454151353344, 0.7008265761289267, 0.6853471050377709, 0.63143208077744, 0.6048009531798065, 0.5727265717771941, 0.6078990643774875, 0.5445593836489858, 0.5420787834598404, 0.529869822636414], "accuracy": [0.3401135802268982, 0.5511821508407593, 0.6806234121322632, 0.6966054439544678, 0.7166820764541626, 0.7321357727050781, 0.7367587089538574, 0.7647602558135986, 0.7693831920623779, 0.7858935594558716, 0.769911527633667, 0.7989697456359863, 0.7971205711364746, 0.8017435073852539], "val_loss": [1.2599105153764998, 0.6836392027991158, 0.6100020749228341, 0.5818987233298165, 0.5809696061270577, 0.5216561215264457, 0.5029694523130145, 0.4932664803096226, 0.4515751770564488, 0.49511546748025076, 0.45823683057512554, 0.48001275743756977, 0.4666164943150112, 0.4490503328187125], "val_accuracy": [0.48899999260902405, 0.7059999704360962, 0.7316666841506958, 0.737666666507721, 0.7269999980926514, 0.762666642665863, 0.7713333368301392, 0.7786666750907898, 0.8013333082199097, 0.7803333401679993, 0.7916666865348816, 0.765999972820282, 0.7806666493415833, 0.7986666560173035]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 3, 4, 0, 1, 5, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [32, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [9, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.243428573012352, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 9, 7, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))))))), tf.math.add(tf.math.add(beta, grad), grad)), tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.390195310895217, 25.444003873670642, NaN, NaN, NaN, NaN], "accuracy": [0.28939375281333923, 0.18702945113182068, 0.07740060985088348, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.7356081690107072, 298.29404994419644, NaN, NaN, NaN, NaN], "val_accuracy": [0.38233333826065063, 0.038333334028720856, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 4, 0, 8, 5, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.1997142881155014, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 6, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4095774460871775, 16891668775730.479, NaN, NaN, NaN, NaN], "accuracy": [0.28424251079559326, 0.2082948088645935, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.890476976122175, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1340000033378601, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 5, 4, 0, 8, 5, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [66, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.19942857325077057, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4095923047512278, 1558060655829.595, NaN, NaN, NaN, NaN], "accuracy": [0.28424251079559326, 0.20882314443588257, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8904177120753698, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.13433332741260529, 0.09733333438634872, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 3, 4, 0, 8, 5, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 0, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 12, 12, 7, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1285284447.1116974, 180081495498.64273, 3174051411600.9233, 22338002285567.055, 98274348425764.58, 321401216721405.6], "accuracy": [0.09853387624025345, 0.10553427785634995, 0.1014397069811821, 0.09972262382507324, 0.09602430462837219, 0.10210011899471283], "val_loss": [10109189558.857143, 544850743881.1429, 5847865210587.429, 31880419363108.57, 119412501175149.72, 352233134452150.9], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 3, 4, 5, 8, 5, 0, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, grad)))))), tf.math.negative(tf.math.add(beta, alpha))), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 5, 4, 0, 8, 2, 8, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), beta))))), beta))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 3, 4, 0, 8, 2, 5, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 3, 8, 0, 9, 5, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [32, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [8, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 7, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 5, 4, 0, 8, 4, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.pow(beta, beta)))))), tf.math.add(beta, alpha)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06947562843561172, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [9, 3, 8, 0, 9, 5, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [32, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [8, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1214910087.9204745, 174996499386.61523, 3115433076052.4316, 22033906304625.004, 97219303753080.14, 318554368852368.4], "accuracy": [0.09853387624025345, 0.10553427785634995, 0.1014397069811821, 0.09972262382507324, 0.09615638852119446, 0.10210011899471283], "val_loss": [9667877156.571428, 532163086628.5714, 5754939207094.857, 31496841873700.57, 118260270741211.42, 349377345505572.56], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 3, 4, 0, 8, 5, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [65, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [7, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(grad, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.square(grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06617355346679688, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 3, 4, 5, 8, 1, 0, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, alpha))))), tf.math.subtract(tf.math.add(beta, grad), grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023642333837753, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 2, 4, 0, 8, 5, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [32, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 9, 6, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad)))))), grad), tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3036102085002677, 2.3027969004691884, 2.30239454617574, 2.302928699620128, 2.302882908515139, 2.3032344893189847], "accuracy": [0.08942015469074249, 0.09338264167308807, 0.08981640636920929, 0.08875974267721176, 0.08981640636920929, 0.08875974267721176], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}]