[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 6, 4, 0, 2, 1, 0, 1, 0, 2, 8, 5, 9, 3, 2, 5, 1, 2, 4, 6, 9, 3, 9, 9], [4, 5, 1, 3, 1, 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [70, 17, 7, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.322857141494751, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2673717973223138, 3.7426893293204135, 2.2978595144886302, 2.262811362452086, 2.3048635736794725, 2.3034911328586434, 2.3031167978970224, 2.3030473408115193], "accuracy": [0.19878484308719635, 0.11530841141939163, 0.14780081808567047, 0.1830669641494751, 0.09840179979801178, 0.09602430462837219, 0.09219389408826828, 0.09787346422672272], "val_loss": [3.773598943437849, 1.9700711795261927, 1.7150300230298723, 1.9762145451136999, 1.9739483424595423, 1.973592826298305, 1.9738319941929408, 1.9736980710710799], "val_accuracy": [0.1706666648387909, 0.10300000011920929, 0.30033332109451294, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.0949999988079071, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [2, 4, 5, 0, 3, 2, 4, 6, 4, 4, 3, 0, 2, 6, 2, 5, 1, 2, 4, 6, 9, 3, 8, 2, 6, 3, 4, 4, 9, 9, 0, 1, 4, 0, 0], [2, 5, 2, 3, 1, 3, 3, 3, 3, 3, 1, 3, 3, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 85, 93, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.24142856895923615, "mapping_values": [1, 2, 2, 1, 1, 0, 57, 57, 35, 22, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, beta)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), tf.math.square(tf.math.add(beta, tf.math.subtract(grad, grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.pow(alpha, tf.math.add(beta, tf.math.pow(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), alpha))), tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, grad)), grad)))), tf.math.add(beta, tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2672045401231946, 3.8778960350844303, 2.5072796506620967, 2.306978332651542, 2.280858892286616, 2.2465194762737175, 2.3040549968290702, 2.298407444470846, 2.306310169732393, 2.3041343011592814], "accuracy": [0.19891692698001862, 0.11530841141939163, 0.14000792801380157, 0.10130762308835983, 0.11530841141939163, 0.15215955674648285, 0.09338264167308807, 0.13247919082641602, 0.09576013684272766, 0.09179764986038208], "val_loss": [3.7405542646135603, 1.9553590502057756, 1.979752676827567, 1.9745581490652901, 1.5897511073521204, 1.974667957850865, 1.972651481628418, 1.9784128325326102, 1.9745204108101981, 1.973823070526123], "val_accuracy": [0.17366667091846466, 0.18133333325386047, 0.09566666930913925, 0.10233332961797714, 0.41999998688697815, 0.09666666388511658, 0.09666666388511658, 0.10199999809265137, 0.10199999809265137, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 6, 4, 0, 2, 1, 0, 1, 0, 2, 2, 5, 1, 3, 2, 5, 1, 2, 4, 6, 9, 3, 9, 9], [2, 5, 1, 3, 1, 3, 3, 3, 3, 3, 1, 3, 1, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [46, 19, 93, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.1882857084274292, "mapping_values": [1, 2, 2, 1, 1, 0, 37, 37, 24, 13, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.negative(beta), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.square(tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), grad))))))), tf.math.add(tf.math.add(beta, tf.math.square(grad)), grad)))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(grad, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, alpha))))))))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.267165236579523, 3.777765017270003, 2.5680951623396395, 2.3076631379495947, 2.30403071573429, 2.3033180827588104], "accuracy": [0.19865275919437408, 0.11755382269620895, 0.13551710546016693, 0.10091137140989304, 0.09826971590518951, 0.09919429570436478], "val_loss": [3.7552101952689037, 1.9636952536446708, 1.9810233797345842, 1.9752387319292342, 1.974038941519601, 1.9737511362348283], "val_accuracy": [0.17733334004878998, 0.13833333551883698, 0.09566666930913925, 0.10233332961797714, 0.10366666316986084, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 4, 5, 0, 3, 3, 4, 6, 4, 4, 3, 0, 2, 6, 2, 5, 1, 2, 4, 6, 9, 3, 9, 9], [2, 5, 2, 3, 1, 3, 3, 3, 3, 3, 1, 3, 1, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 93, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [5, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.1882857084274292, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2672449595514714, 3.7229220170260513, 2.7875148222793156, 2.4603590841196343, 2.3048289984507946, 2.303448094101063], "accuracy": [0.19878484308719635, 0.11821424216032028, 0.14410249888896942, 0.09774138033390045, 0.09708096832036972, 0.09721305221319199], "val_loss": [3.7398426873343333, 1.9685502733503069, 2.152559620993478, 1.977212837764195, 1.974600178854806, 1.9739409174237932], "val_accuracy": [0.17733334004878998, 0.13233333826065063, 0.10199999809265137, 0.10366666316986084, 0.10366666316986084, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 6, 4, 0, 2, 1, 0, 1, 0, 2, 8, 5, 9, 3, 2, 5, 1, 2, 4, 6, 9, 3, 9, 9], [3, 5, 2, 3, 3, 3, 3, 3, 3, 3, 1, 3, 1, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [70, 19, 93, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.18799999356269836, "mapping_values": [1, 2, 2, 1, 1, 0, 17, 17, 10, 7, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(grad, grad))))))), grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.267237771377745, 3.7140894063066074, 2.899407710381597, 2.31217630072324, 2.3049615035676183, 2.303516348859086], "accuracy": [0.19878484308719635, 0.11795007437467575, 0.151234969496727, 0.09615638852119446, 0.09721305221319199, 0.09708096832036972], "val_loss": [3.735999516078404, 1.9726377895900182, 1.9894254548209054, 1.9762350491115026, 1.9741856711251395, 1.973679678780692], "val_accuracy": [0.17633333802223206, 0.09566666930913925, 0.10233332961797714, 0.10233332961797714, 0.10366666316986084, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 6, 2, 0, 8, 1, 0, 1, 0, 2, 8, 5, 5, 3, 2, 5, 1, 2, 4, 6, 9, 3, 9, 9], [2, 0, 1, 1, 1, 2, 3, 0, 3, 3, 1, 3, 1, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [35, 19, 93, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.1874285787343979, "mapping_values": [1, 2, 2, 1, 1, 0, 17, 17, 11, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.subtract(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(alpha)), alpha))))))))))), alpha), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.267251889593235, 3.7803056109079107, 2.817506891751192, 6.096960633359392, 2.3052992394351217, 2.254387062144805], "accuracy": [0.19878484308719635, 0.11755382269620895, 0.15255580842494965, 0.10289261490106583, 0.10289261490106583, 0.14740456640720367], "val_loss": [3.7920799255371094, 1.9687799045017786, 9.232688358851842, 1.9846656663077218, 1.9461256435939245, 1.9751592363630022], "val_accuracy": [0.17399999499320984, 0.0949999988079071, 0.10199999809265137, 0.10366666316986084, 0.10899999737739563, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 5, 0, 3, 3, 4, 6, 4, 4, 0, 0, 2, 2, 6, 5, 1, 2, 0, 6, 9, 3, 9, 9, 9], [2, 5, 0, 3, 1, 3, 3, 3, 3, 1, 1, 3, 1, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [16, 19, 62, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.18571428954601288, "mapping_values": [1, 2, 2, 1, 1, 0, 37, 37, 24, 13, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.pow(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(tf.math.add(beta, alpha), tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), grad))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, alpha)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, alpha))))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.267155118228548, 3.7970233752097373, 2.4620999417930403, 2.306976154291115, 2.3037988834093905, 2.303204859630417, 2.3029980618546526], "accuracy": [0.19891692698001862, 0.11861048638820648, 0.12838461995124817, 0.09813763201236725, 0.09879804402589798, 0.09747721254825592, 0.09034473448991776], "val_loss": [3.784024102347238, 1.8842671258108956, 1.9798639161246163, 1.9751458849225725, 1.9739768845694405, 1.9736507279532296, 1.973731449672154], "val_accuracy": [0.17166666686534882, 0.18333333730697632, 0.0949999988079071, 0.0949999988079071, 0.10366666316986084, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 6, 4, 1, 2, 1, 0, 0, 0, 1, 8, 5, 9, 3, 2, 9, 3, 2, 4, 6, 2, 3, 9, 9], [2, 5, 0, 3, 3, 3, 1, 3, 3, 3, 1, 3, 1, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [70, 19, 15, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [3, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.18485714495182037, "mapping_values": [1, 2, 2, 1, 1, 0, 23, 23, 16, 7, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.negative(beta), tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), grad), tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2671852588275674, 3.858401538390116, 2.346102181899313, 2.30760806379317, 2.3034547127280427, 2.3031741813220807], "accuracy": [0.19891692698001862, 0.11927089840173721, 0.14053626358509064, 0.09681680053472519, 0.09496764093637466, 0.0944393053650856], "val_loss": [3.7770275388445174, 1.966707365853446, 1.98358120237078, 1.9745652335030692, 1.9738997731889998, 1.973735741206578], "val_accuracy": [0.1743333339691162, 0.12066666781902313, 0.09566666930913925, 0.10366666316986084, 0.10366666316986084, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 4, 5, 0, 3, 3, 4, 6, 4, 4, 0, 0, 2, 6, 6, 5, 1, 2, 4, 6, 9, 3, 9, 9], [4, 5, 1, 3, 1, 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 93, 73, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.1842857152223587, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2674711210978673, 3.745432764957011, 2.5271481964109817, 2.308081368634163, 2.304050474717333, 2.3032605664101196], "accuracy": [0.19878484308719635, 0.11279883980751038, 0.12429005652666092, 0.09774138033390045, 0.09800554811954498, 0.09615638852119446], "val_loss": [3.7371247155325755, 1.9688232966831751, 1.9816769872392928, 1.975555079323905, 1.974119050162179, 1.9737678936549596], "val_accuracy": [0.17399999499320984, 0.10333333164453506, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [2, 4, 5, 0, 3, 5, 4, 6, 4, 4, 3, 0, 2, 6, 2, 5, 1, 2, 4, 6, 9, 3, 8, 2, 6, 3, 5, 4, 9, 9, 0, 1], [2, 5, 2, 3, 1, 3, 3, 3, 3, 3, 1, 3, 1, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 85, 93, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.17142857611179352, "mapping_values": [1, 2, 2, 1, 1, 0, 51, 51, 32, 19, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.math.square(tf.math.add(beta, tf.math.subtract(grad, grad))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))))), tf.math.multiply(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.math.square(tf.math.pow(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)))))), grad)))), grad)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2675363276187754, 3.7106568618709415, 5.567616393994094, 2.3022997733262143, 2.3780966444951415, 2.3040213020265754, 2.3035280829832585], "accuracy": [0.19878484308719635, 0.12138422578573227, 0.15374454855918884, 0.1306300312280655, 0.11676132678985596, 0.09734513610601425, 0.09087307006120682], "val_loss": [3.77999210357666, 1.931938852582659, 1.9770265306745256, 2.191223008292062, 1.975161416190011, 1.9740594455174036, 1.9741619655064173], "val_accuracy": [0.17233332991600037, 0.2316666692495346, 0.10233332961797714, 0.2293333262205124, 0.10366666316986084, 0.10366666316986084, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [2, 4, 5, 0, 3, 5, 4, 8, 4, 4, 3, 0, 1, 6, 2, 3, 1, 2, 4, 6, 9, 3, 8, 1, 9, 3, 5, 4, 9, 9, 0, 1], [2, 5, 2, 3, 1, 3, 3, 3, 2, 3, 1, 3, 1, 3, 1, 0, 4, 0, 0, 0, 4, 1, 1, 1, 5], [21, 85, 77, 73, 35, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.17085714638233185, "mapping_values": [1, 2, 2, 1, 1, 0, 46, 46, 28, 18, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.square(tf.math.negative(tf.math.multiply(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, grad))))), tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.math.multiply(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, beta), grad)))))), tf.math.add(beta, alpha)))))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.add(beta, tf.math.multiply(tf.math.square(grad), tf.math.pow(alpha, tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))))))), grad)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2671662384351134, 3.927417842325612, 2.407148913716155, 2.3104382675746806, 2.3039531284839154, 2.303291788379577, 2.303152613872235], "accuracy": [0.19918107986450195, 0.11121384054422379, 0.17857614159584045, 0.10157178342342377, 0.09549596905708313, 0.09866596013307571, 0.08968432247638702], "val_loss": [3.8294273103986467, 1.9535865102495467, 1.991025720323835, 1.9751084191458566, 1.9740138053894043, 1.9737328120640345, 1.9739129883902413], "val_accuracy": [0.17466667294502258, 0.17633333802223206, 0.09566666930913925, 0.10366666316986084, 0.10366666316986084, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 4, 5, 0, 3, 3, 4, 6, 4, 4, 0, 0, 2, 6, 6, 5, 1, 2, 4, 6, 9, 3, 9, 9], [3, 5, 1, 3, 1, 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 93, 73, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0], [6, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.1697142869234085, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2671397665094597, 3.842273562197924, 3.7443321446197193, 2.3075163219551666, 2.3039559392786737, 2.3032959230256953, 2.303224409513029], "accuracy": [0.19891692698001862, 0.12495046854019165, 0.15480121970176697, 0.09813763201236725, 0.09325055778026581, 0.09708096832036972, 0.09192973375320435], "val_loss": [3.763207163129534, 1.936436312539237, 1.9812303951808385, 1.9751218387058802, 1.9740232058933802, 1.973790168762207, 1.9740089688982283], "val_accuracy": [0.17800000309944153, 0.18033333122730255, 0.10233332961797714, 0.10233332961797714, 0.10366666316986084, 0.0949999988079071, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 4, 5, 0, 3, 3, 4, 6, 4, 4, 3, 0, 2, 6, 2, 5, 1, 2, 4, 6, 9, 3, 9, 9], [2, 5, 2, 3, 1, 3, 3, 3, 3, 3, 1, 3, 1, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [70, 17, 7, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [5, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.12342856824398041, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.5335000193019854, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2176727056503296, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.98372220993042, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], [2, 4, 5, 0, 3, 5, 4, 6, 4, 4, 3, 0, 5, 6, 2, 5, 1, 2, 4, 6, 9, 0, 9, 2, 6, 3, 5, 4, 1, 9, 2, 1], [2, 0, 2, 3, 1, 3, 3, 3, 3, 3, 1, 3, 1, 0, 1, 2, 0, 3, 0, 0, 4, 1, 1, 1, 5], [21, 85, 35, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 36, 36, 23, 13, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.square(beta)), tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(beta, alpha))), tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [83267127.52073862, 1626195090.208427, 7602605019.61696, 21059473540.006866, 45112430569.277504, 82403995941.76938], "accuracy": [0.0944393053650856, 0.10130762308835983, 0.09655263274908066, 0.09893012791872025, 0.10342095047235489, 0.10434553027153015], "val_loss": [318294592.0, 2544485302.857143, 8585566208.0, 20348482121.142857, 39740231094.85714, 68668339931.42857], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [2, 4, 9, 0, 3, 5, 4, 1, 2, 4, 3, 0, 2, 6, 2, 5, 1, 2, 4, 6, 9, 3, 8, 2, 6, 3, 5, 4, 4, 9, 0, 1], [2, 5, 2, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 85, 44, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [5, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 50, 50, 31, 19, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.square(beta)), tf.math.add(beta, grad))))), tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.math.square(tf.math.pow(grad, tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)))))), grad)), grad)))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07885351777076721, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 4, 5, 0, 3, 3, 4, 6, 4, 4, 0, 0, 2, 6, 6, 5, 1, 2, 4, 6, 9, 3, 9, 9], [4, 5, 1, 3, 1, 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [70, 17, 7, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [4, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 38, 38, 24, 14, 4, 1, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(alpha))))))), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)))))))), tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 4, 5, 0, 3, 3, 4, 6, 4, 4, 3, 0, 2, 6, 2, 5, 1, 2, 4, 6, 9, 3, 9, 9], [2, 5, 2, 3, 1, 3, 3, 3, 3, 3, 1, 3, 1, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 85, 93, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [7, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09100515395402908, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 4, 5, 0, 3, 3, 4, 6, 4, 4, 3, 0, 2, 6, 2, 5, 1, 2, 4, 6, 9, 3, 9, 9], [4, 5, 2, 3, 1, 3, 3, 3, 3, 3, 1, 3, 1, 0, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [70, 19, 93, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303235905061167, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 4, 5, 0, 3, 3, 4, 6, 4, 4, 3, 0, 6, 6, 2, 5, 1, 2, 4, 6, 9, 3, 8, 2, 6, 3, 5, 4, 9, 9, 0, 1], [2, 5, 2, 3, 1, 3, 3, 2, 3, 3, 1, 3, 1, 1, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [9, 85, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [2, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 47, 47, 27, 20, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), alpha))))), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, tf.math.square(grad)), beta))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(grad, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.math.multiply(tf.math.sqrt(alpha), tf.math.add(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad)), grad))))))), tf.math.add(beta, tf.math.square(grad)))))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [92493029.78094202, 1806457358.0663056, 8445462277.511558, 23394379565.005417, 50114201074.94809, 91540252933.03818], "accuracy": [0.0944393053650856, 0.10130762308835983, 0.09655263274908066, 0.09906221181154251, 0.10342095047235489, 0.10434553027153015], "val_loss": [353571172.5714286, 2826568411.428571, 9537417508.571428, 22604607488.0, 44146286592.0, 76281317668.57143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 8, 4, 0, 3, 3, 4, 6, 3, 8, 3, 0, 0, 6, 2, 5, 1, 2, 4, 4, 9, 3, 2, 9, 3, 9, 6, 4], [1, 0, 2, 3, 1, 3, 3, 1, 3, 0, 1, 3, 1, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 93, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [8, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.09971428662538528, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 3, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.454505102399192, 1587001826059.8271, 1.554258818225982e+33, 4.2796919367269615, 3.2924728806087167, 4.303416725194465, 4.042037297013161], "accuracy": [0.21793685853481293, 0.09826971590518951, 0.10368511080741882, 0.10447761416435242, 0.1022322028875351, 0.10210011899471283, 0.09787346422672272], "val_loss": [1.9830001422337122, 9.118888451188874e+33, 3.844552993774414, 3.1503824506487166, 3.801946231297084, 3.4656459263392856, 3.96856689453125], "val_accuracy": [0.10733333230018616, 0.11299999803304672, 0.10066666454076767, 0.10199999809265137, 0.10366666316986084, 0.10066666454076767, 0.09799999743700027]}}]