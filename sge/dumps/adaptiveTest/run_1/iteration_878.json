[{"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 8, 0, 6, 1, 8, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8185714483261108, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 9, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.subtract(grad, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.subtract(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0559013173438774, 2.146098644474258, 1.6494195494023864, 1.480083600357775, 1.3563445202662818, 0.945532021954264, 0.816562031214783, 0.7436662669730397, 0.6997748282308104, 0.6863612122445012, 0.6129337411515071, 0.615675790253852, 0.6078811404475478, 0.5692423917299028, 0.5601690818982873, 0.5349899395235526, 0.5399896026271729, 0.5189375949258644, 0.5018629119018633, 0.4930727728731707, 0.48863879081957595, 0.4692798688143724, 0.48168100272392034, 0.4713263228789549, 0.4428788491598194, 0.43470904316884523], "accuracy": [0.3051116168498993, 0.25756174325942993, 0.4111742079257965, 0.5231805443763733, 0.5390304923057556, 0.6494518518447876, 0.6876237988471985, 0.7213049530982971, 0.7305507659912109, 0.7362303733825684, 0.7667415142059326, 0.7651565074920654, 0.7705719470977783, 0.7814027070999146, 0.7885351777076721, 0.798309326171875, 0.7932901978492737, 0.8059701323509216, 0.8103289008140564, 0.8146876096725464, 0.8241975903511047, 0.821820080280304, 0.8202351331710815, 0.822348415851593, 0.8327829837799072, 0.8364813327789307], "val_loss": [2.043527739388602, 1.4572913646697998, 1.2513949530465263, 1.5042363575526647, 0.9535816056387765, 0.6154607534408569, 0.5730257374899728, 0.577838625226702, 0.6076105833053589, 0.518203718321664, 0.4796694006238665, 0.46871825626918245, 0.4480924436024257, 0.4280772464615958, 0.4633889538901193, 0.4607217311859131, 0.41710203886032104, 0.43653611625943867, 0.4233759811946324, 0.415607682296208, 0.38177416154316496, 0.4479759761265346, 0.42162814310618807, 0.3854362027985709, 0.39833877767835346, 0.39279693365097046], "val_accuracy": [0.27533334493637085, 0.45233333110809326, 0.543666660785675, 0.5543333292007446, 0.6013333201408386, 0.7173333168029785, 0.7453333139419556, 0.7250000238418579, 0.7256666421890259, 0.7713333368301392, 0.7853333353996277, 0.7926666736602783, 0.7990000247955322, 0.812333345413208, 0.796999990940094, 0.8006666898727417, 0.8153333067893982, 0.8193333148956299, 0.8100000023841858, 0.8190000057220459, 0.8379999995231628, 0.7893333435058594, 0.8159999847412109, 0.8263333439826965, 0.8183333277702332, 0.8349999785423279]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [27, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 8, 0, 6, 1, 9, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07000396400690079, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [55, 35, 89, 50, 85, 46], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 0, 6, 1, 3, 3, 1, 0, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302320775764021, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [8, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 8, 0, 6, 1, 8, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 1, 3, 4, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 0, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 3, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(beta, beta)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.negative(beta), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 8, 0, 6, 9, 9, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 1, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [98, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [0, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 11, 11, 8, 3, 2, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(beta, alpha), tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 1, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 9, 0, 8, 0, 6, 1, 8, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 3, 3, 2, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [30, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.subtract(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2469027890109.7505, 2.325844968424938, 2.3130724043689304, 2.3073697484101694, 2.304922195709676, 2.303809741138231], "accuracy": [0.2522784173488617, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, 1.9876948084150041, 1.9803690910339355, 1.9771826607840401, 1.975585665021624, 1.974673066820417], "val_accuracy": [0.10233332961797714, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 8, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [42, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 5, 1, 6, 1, 8, 2, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 4, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(grad, tf.math.subtract(tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 1, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 8, 0, 6, 1, 8, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 1, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(alpha, tf.math.subtract(tf.math.add(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07000396400690079, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 3, 2, 4, 1, 5, 3, 8, 2, 6, 3, 6, 5, 8], [1, 0, 2, 2, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 65, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 5, 8, 0, 6, 1, 8, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [8, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [9, 1, 6, 4, 3, 3, 1, 8, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 1, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 3, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 2, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 7, 3, 4, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), grad)), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(tf.math.multiply(beta, sigma), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 8, 0, 6, 1, 8, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 0, 2, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [64, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 22, 22, 15, 7, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))))), tf.math.multiply(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.negative(grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [937702.6753275405, 2.3139919519518912, 2.3058107114345203, 2.3036195722632105, 2.303009188422406, 2.30304274362517, 2.3028780456704707], "accuracy": [0.1006472036242485, 0.09615638852119446, 0.09074098616838455, 0.09998679161071777, 0.09747721254825592, 0.09668471664190292, 0.09998679161071777], "val_loss": [1.988920075552804, 1.9776147433689661, 1.9745381219046456, 1.9739934376307897, 1.9738762038094657, 1.9736481394086565, 1.9737210273742676], "val_accuracy": [0.09666666388511658, 0.10366666316986084, 0.10366666316986084, 0.09666666388511658, 0.09566666930913925, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 3, 0, 6, 9, 8, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 3, 3, 3, 2, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [9, 1, 6, 4, 3, 3, 1, 8, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 2, 1, 3, 4, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [83, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [0, 0], [69, 2], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 8, 0, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 3, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 4, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [42, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 8, 0, 6, 1, 8, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 1, 3, 2, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [4, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.math.subtract(tf.math.sqrt(grad), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [27, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 8, 0, 6, 1, 8, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07000396400690079, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 8, 0, 6, 1, 8, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06392814964056015, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [42, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 6, 1, 6, 1, 8, 2, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 2, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2687246555.0806546, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05138026550412178, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.945860737304752e+31, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 7, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [17, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [9, 1, 6, 4, 3, 3, 1, 8, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 0, 3, 3, 2, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 3, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, sigma), beta))", "other_info": {"loss": [2.302320775764021, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [67, 3, 89, 50, 85, 46], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 8, 0, 6, 1, 8, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [4, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.subtract(grad, tf.math.subtract(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 8, 0, 6, 1, 4, 9, 3, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 2, 1, 0, 15, 15, 9, 6, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.subtract(grad, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3024498683555077, 2.3051257121517295, 2.308010498451724, 2.30999911538425, 2.312134244202339, 2.3135864958865784], "accuracy": [0.08915598690509796, 0.0886276587843895, 0.07924976944923401, 0.0754193663597107, 0.08215559273958206, 0.0870426595211029], "val_loss": [1.9720469883510046, 1.9735172816685267, 1.9750335557120187, 1.9770045961652483, 1.979205540248326, 1.981527669089181], "val_accuracy": [0.03099999949336052, 0.024666666984558105, 0.02133333310484886, 0.017666665837168694, 0.017000000923871994, 0.02866666577756405]}}]