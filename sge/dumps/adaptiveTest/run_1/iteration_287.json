[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.847428560256958, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.212250963949713, 1.4823331428698387, 0.9487819906475207, 0.7977797913513541, 0.7174945458870176, 0.6931807792197759, 0.6601702744903156, 0.6211818026482326, 0.6052396876417399, 0.5873661316884995, 0.5784332409999028, 0.5555751532170562, 0.5435225230953744, 0.5265000274058236, 0.5120376248275285, 0.495845373650552, 0.48420455233453363, 0.4724536873306722, 0.48038371976623917, 0.45971540264512695, 0.45032024281986355, 0.43254170295285543, 0.42012014783935586, 0.4188987588830486, 0.4061638609592421, 0.40307625107493744, 0.3917797207163152, 0.3870901586853234, 0.3757073090076761, 0.37016871777019794, 0.3682254984543828, 0.3591555075410209, 0.35168572576951984, 0.3461060418255687], "accuracy": [0.24659886956214905, 0.4967639744281769, 0.6563201546669006, 0.703209638595581, 0.7300224304199219, 0.7353057861328125, 0.7553823590278625, 0.7708360552787781, 0.7729493975639343, 0.7844406366348267, 0.7847048044204712, 0.7897239327430725, 0.7989697456359863, 0.8035926818847656, 0.8075551390647888, 0.8189142942428589, 0.8191784620285034, 0.8261788487434387, 0.8206313848495483, 0.8317263126373291, 0.8310658931732178, 0.8393871188163757, 0.8462554216384888, 0.845859169960022, 0.8502179384231567, 0.8486329317092896, 0.8524633646011353, 0.8569541573524475, 0.8634262084960938, 0.8640866279602051, 0.8601241707801819, 0.8671245574951172, 0.8665962219238281, 0.872407853603363], "val_loss": [1.5735699449266707, 0.7419574431010655, 0.6112055608204433, 0.555357677595956, 0.5242113045283726, 0.5054580995014736, 0.49646193640572683, 0.48500279017857145, 0.4663186924798148, 0.45097148418426514, 0.4528808423451015, 0.4398351567132132, 0.4262104460171291, 0.4145306348800659, 0.4055996026311602, 0.39867004326411654, 0.400544992515019, 0.3963668431554522, 0.3841535108430045, 0.37389074904578073, 0.369718747479575, 0.362468421459198, 0.35534268617630005, 0.35039263112204416, 0.34794685670307707, 0.34493533202580046, 0.3379461169242859, 0.33748886414936613, 0.34107892002378193, 0.33601249967302593, 0.335430988243648, 0.3361851062093462, 0.3284627880368914, 0.33907982281276156], "val_accuracy": [0.5320000052452087, 0.6916666626930237, 0.7473333477973938, 0.7540000081062317, 0.7633333206176758, 0.7776666879653931, 0.7823333144187927, 0.7860000133514404, 0.793666660785675, 0.8040000200271606, 0.7956666946411133, 0.8190000057220459, 0.8190000057220459, 0.8293333053588867, 0.8326666951179504, 0.8349999785423279, 0.8323333263397217, 0.8343333601951599, 0.8379999995231628, 0.846666693687439, 0.8506666421890259, 0.8533333539962769, 0.8573333621025085, 0.859666645526886, 0.8550000190734863, 0.8553333282470703, 0.859000027179718, 0.8610000014305115, 0.8650000095367432, 0.8616666793823242, 0.8643333315849304, 0.8633333444595337, 0.8650000095367432, 0.8643333315849304]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 3, 2, 8, 2, 0, 2, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [73, 84, 13, 96, 41]], "fitness": -0.4551428556442261, "mapping_values": [1, 16, 16, 10, 6, 4, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303250247618746, 2.301292827588818, 2.301028485185419, 2.299200267430231, 2.296567739764571, 2.296550315746841, 2.295025102371994, 2.292289350357479, 2.292417890848249, 2.2915159705576094, 2.29178577123805, 2.2882478555841312, 2.2887550706577464, 2.2872199358453273, 2.285447224523917, 2.2856643462555835, 2.2823648904969964, 2.2832424061850407, 2.2821563587622036, 2.2778649466180405, 2.280067129945081, 2.278771554442791, 2.2764058965245386, 2.275640885056191, 2.2751033753294436, 2.2718604237663906, 2.2724943189352667, 2.2729258323783306, 2.2700981741426425, 2.268977890869945, 2.2670861476794397, 2.267901140826962, 2.265183553845576, 2.263866034229245, 2.2622700990576865, 2.2608941200623156, 2.2604421986061047, 2.2589880831253257, 2.258299938172177, 2.2575998387521268, 2.2554830442944285, 2.2544789169411286, 2.2536689476519056, 2.251510465527727, 2.2491724046466057, 2.2495442672160637, 2.2491121157017746, 2.245715490216986, 2.246451023248177, 2.2436557035593543, 2.244750737104717, 2.241824995902992, 2.240118417757503, 2.236990169590144, 2.23935067699318, 2.2364790407799773, 2.234429286880705, 2.232946151724077, 2.2317677378071896, 2.230942734196957, 2.227810203785028, 2.2271621368344214, 2.2251299168250784, 2.222731790207538, 2.222866620999821, 2.219919150767782, 2.2183078950217623, 2.2164341157626763, 2.2145919815550204, 2.2142179579452015, 2.212872343355591, 2.2105842010456227, 2.2073496897396017, 2.2059862412450304, 2.2062342781290605, 2.2035779643131206, 2.202423622516546, 2.198839254981381, 2.1970567084448356, 2.1951778051229973, 2.193645602849654, 2.1912988035544396, 2.1891560741246194, 2.1883532093374596, 2.1836585123714376, 2.1829861763871152, 2.1801166106145837, 2.1771552550432123, 2.178393768864285, 2.175672798581237, 2.172865318978042, 2.169414295606672, 2.169586536135136, 2.1669250782281493, 2.162408078083698, 2.1602307033891517, 2.1605893680684365, 2.1519719557975656, 2.153679358063278, 2.150430985571544], "accuracy": [0.09628847241401672, 0.09153348207473755, 0.08849557489156723, 0.09853387624025345, 0.10777968913316727, 0.10936468094587326, 0.107647605240345, 0.11293092370033264, 0.11861048638820648, 0.11728965491056442, 0.11610091477632523, 0.12600713968276978, 0.13089419901371002, 0.12812046706676483, 0.136045441031456, 0.1348566859960556, 0.1422533392906189, 0.1368379294872284, 0.14449875056743622, 0.1550653874874115, 0.14780081808567047, 0.15321621298789978, 0.16655659675598145, 0.16563200950622559, 0.16391493380069733, 0.17012283205986023, 0.16840575635433197, 0.17012283205986023, 0.17342491447925568, 0.17553824186325073, 0.18002906441688538, 0.18319904804229736, 0.18478403985500336, 0.1938977688550949, 0.1962752640247345, 0.20235107839107513, 0.19680359959602356, 0.204860657453537, 0.21371020376682281, 0.20618148148059845, 0.21754062175750732, 0.21384228765964508, 0.21542729437351227, 0.22255976498126984, 0.2281072586774826, 0.2281072586774826, 0.22374852001667023, 0.23299431800842285, 0.23035265505313873, 0.2413155436515808, 0.23656055331230164, 0.24263638257980347, 0.24382512271404266, 0.24699510633945465, 0.2405230551958084, 0.25742965936660767, 0.26337340474128723, 0.2566371560096741, 0.25637298822402954, 0.25742965936660767, 0.2587504982948303, 0.26680755615234375, 0.2740721106529236, 0.27460044622421265, 0.27644962072372437, 0.27882710099220276, 0.28305375576019287, 0.28556331992149353, 0.29137498140335083, 0.2899220585823059, 0.28239333629608154, 0.2900541424751282, 0.29982829093933105, 0.29837536811828613, 0.3015453815460205, 0.2977149784564972, 0.30682867765426636, 0.31079116463661194, 0.3152819871902466, 0.31079116463661194, 0.31343284249305725, 0.31343284249305725, 0.31765949726104736, 0.316470742225647, 0.3238673806190491, 0.3191123902797699, 0.32505613565444946, 0.32479196786880493, 0.325320303440094, 0.325320303440094, 0.33020737767219543, 0.33483028411865234, 0.3329811096191406, 0.33284902572631836, 0.34103816747665405, 0.3416985869407654, 0.33483028411865234, 0.354510635137558, 0.3431515097618103, 0.34883105754852295], "val_loss": [1.9698854173932756, 1.9688429832458496, 1.9678006853376115, 1.9667659487043108, 1.9657258306230818, 1.9646930694580078, 1.9636533600943429, 1.962625299181257, 1.961611339024135, 1.9605840274265833, 1.9595675468444824, 1.9585345132010323, 1.9575131280081612, 1.956493922642299, 1.955458641052246, 1.954435212271554, 1.9534012249537878, 1.9523618561880929, 1.9513376780918665, 1.9502994673592704, 1.9492692266191756, 1.9482310158865792, 1.947188377380371, 1.946148259299142, 1.9450981276375907, 1.9440452711922782, 1.9429730687822615, 1.9419129235403878, 1.9408364295959473, 1.9397696086338587, 1.9386827605111259, 1.9376027243477958, 1.9365250723702567, 1.9354188101632255, 1.9343037605285645, 1.9331730433872767, 1.9320473670959473, 1.9309169905526298, 1.92977694102696, 1.9286176817757743, 1.9274413926260812, 1.9262807028634208, 1.9250916753496443, 1.9238900457109724, 1.9226737703595842, 1.921452590397426, 1.9202254159109933, 1.918971334184919, 1.9177216802324568, 1.9164654186793737, 1.915191990988595, 1.91389833177839, 1.912590571812221, 1.9112658500671387, 1.9099443299429757, 1.9086122512817383, 1.9072527204241072, 1.9058619226728166, 1.9044720785958427, 1.903073992047991, 1.9016491344996862, 1.900211947304862, 1.8987422670636858, 1.8972514016287667, 1.8957561084202357, 1.8942346572875977, 1.8927024432591029, 1.891146114894322, 1.889584745679583, 1.8879951068333216, 1.8863816261291504, 1.8847588811601912, 1.8830992834908622, 1.8814256531851632, 1.8797377858843123, 1.878011839730399, 1.8762764930725098, 1.874500070299421, 1.8727059364318848, 1.8708955219813757, 1.8690554755074638, 1.867166314806257, 1.8652639389038086, 1.8633383342197962, 1.8613739013671875, 1.8593996592930384, 1.8573650632585799, 1.8553224972316198, 1.8532732554844447, 1.8511929512023926, 1.8490728650774275, 1.8469113622392928, 1.8447397777012415, 1.8425339290073939, 1.8402910913739885, 1.8380311557224818, 1.835747241973877, 1.8333893503461565, 1.8310228756495885, 1.8286268370492118], "val_accuracy": [0.044333335012197495, 0.049666665494441986, 0.05766666680574417, 0.06733333319425583, 0.07233333587646484, 0.08133333176374435, 0.08933333307504654, 0.10233332961797714, 0.11133333295583725, 0.11999999731779099, 0.13233333826065063, 0.14266666769981384, 0.15733332931995392, 0.16566666960716248, 0.17399999499320984, 0.18433333933353424, 0.19499999284744263, 0.20533333718776703, 0.21533332765102386, 0.22366666793823242, 0.23499999940395355, 0.2446666657924652, 0.2563333213329315, 0.26366665959358215, 0.273333340883255, 0.28033334016799927, 0.28600001335144043, 0.29366666078567505, 0.2983333468437195, 0.3063333332538605, 0.31466665863990784, 0.32100000977516174, 0.32733333110809326, 0.33500000834465027, 0.33799999952316284, 0.3426666557788849, 0.34966665506362915, 0.3556666672229767, 0.35766667127609253, 0.3633333444595337, 0.36800000071525574, 0.3709999918937683, 0.37599998712539673, 0.3776666522026062, 0.37966665625572205, 0.38366666436195374, 0.3869999945163727, 0.3889999985694885, 0.39133334159851074, 0.39266666769981384, 0.3930000066757202, 0.3956666588783264, 0.39766666293144226, 0.3986666798591614, 0.40066665410995483, 0.40433332324028015, 0.40533334016799927, 0.40700000524520874, 0.40833333134651184, 0.41100001335144043, 0.4116666615009308, 0.41200000047683716, 0.41366666555404663, 0.41499999165534973, 0.4180000126361847, 0.4189999997615814, 0.42233332991600037, 0.42366665601730347, 0.42633333802223206, 0.4266666769981384, 0.4283333420753479, 0.4300000071525574, 0.4320000112056732, 0.43299999833106995, 0.4346666634082794, 0.4350000023841858, 0.437666654586792, 0.4403333365917206, 0.4416666626930237, 0.44333332777023315, 0.4440000057220459, 0.4440000057220459, 0.44466665387153625, 0.44699999690055847, 0.4483333230018616, 0.4493333399295807, 0.4506666660308838, 0.45233333110809326, 0.4543333351612091, 0.4546666741371155, 0.45533332228660583, 0.4566666781902313, 0.4580000042915344, 0.46033334732055664, 0.46133333444595337, 0.4636666774749756, 0.4650000035762787, 0.46533334255218506, 0.46700000762939453, 0.468666672706604]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 1, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [54, 32, 15, 76, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [2, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 2, 2, 9, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 8, 9, 3, 0, 1, 3, 2, 2, 5], [0, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021590693310943, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 5, 3, 2, 2, 2, 0, 8, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [12, 37, 17, 49, 25], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [9, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [4, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [19, 15, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 3, 2, 2, 9, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 8, 9, 3, 0, 1, 3, 2, 2, 5], [0, 0, 2, 0, 0, 2, 2], [57, 15, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302137340521217, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [72, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [16], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 5, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [73, 84, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.square(alpha), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [12, 37, 17, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 1, 1, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3021590693310943, 2.3025851249694824, 2.3025852374239464, 2.3025852374239464, 2.30258518795154, 2.3025850619874246, 2.3025849360233095, 2.302585030496396], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644460950579, 1.973644460950579, 1.9736443247113908, 1.9736443247113908, 1.9736443247113908, 1.9736443247113908], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [3, 0, 2, 0, 0, 2, 2], [73, 84, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 3, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [4, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [73, 84, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3054097744578055, 2.3207945954672113, 22869668.52276985, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.07885351777076721, 0.0866464152932167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9755102566310339, 1.9930825914655412, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.019333332777023315, 0.08100000023841858, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302848627286706, 2.3042482448653963, 2.3032948402381606, 2.3054588179562496, 2.306151236116044, 2.3063656373377315, 2.309458573764231, 2.3074502326462483, 2.3103474140356184, 2.310694343677491, 2.3107699883722628, 2.3112608505325105], "accuracy": [0.09721305221319199, 0.08994849026203156, 0.1006472036242485, 0.10011887550354004, 0.09800554811954498, 0.0956280529499054, 0.09681680053472519, 0.10474177449941635, 0.09826971590518951, 0.09734513610601425, 0.09813763201236725, 0.10460969805717468], "val_loss": [1.973848751613072, 1.9750676836286272, 1.9744725227355957, 1.9747165271214075, 1.9777161053248815, 1.9755191121782576, 1.978081498827253, 1.98177398954119, 1.9761721066066198, 1.9796245438711983, 1.9854095322745187, 1.9796568325587682], "val_accuracy": [0.10199999809265137, 0.10233332961797714, 0.10199999809265137, 0.10199999809265137, 0.10233332961797714, 0.10199999809265137, 0.10366666316986084, 0.10233332961797714, 0.10366666316986084, 0.10366666316986084, 0.10233332961797714, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [6, 37, 17, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [7, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 0, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.314956969399856, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08928807079792023, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.064133848462786, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 8, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 2, 0, 2, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [25, 32, 5, 49, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 4, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021590693310943, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [7, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [9], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 8, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 3, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 8, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [73, 84, 13, 96, 41]], "fitness": -0.07428571581840515, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30317754831139, 2.301392821713902, 2.301150378455355, 2.3001981461131575, 2.298728293557571, 2.2995268710301047, 2.2990155784665887, 2.2977528469421764, 2.2987419207334487, 2.2990033773934413, 2.2995924662447815, 2.298191824168451, 2.2992825266581485, 2.299054330035507, 2.2992661547556907, 2.300382180661731], "accuracy": [0.09576013684272766, 0.09192973375320435, 0.0886276587843895, 0.09509972482919693, 0.10210011899471283, 0.09893012791872025, 0.09866596013307571, 0.10500594228506088, 0.10540219396352768, 0.10249637067317963, 0.1010434553027153, 0.10513802617788315, 0.10910051316022873, 0.1014397069811821, 0.10210011899471283, 0.0948355570435524], "val_loss": [1.9700944764273507, 1.9695120538984026, 1.9690217290605818, 1.9688455036708288, 1.9688923699515206, 1.968937601361956, 1.968911852155413, 1.9689641680036272, 1.9690682547433036, 1.969181673867362, 1.9693074226379395, 1.969578811100551, 1.9698350088936942, 1.970163140978132, 1.9705096653529577, 1.9707130023411341], "val_accuracy": [0.04633333161473274, 0.052000001072883606, 0.06133333221077919, 0.06833333522081375, 0.07500000298023224, 0.07733333110809326, 0.08500000089406967, 0.08500000089406967, 0.08533333241939545, 0.08766666799783707, 0.08933333307504654, 0.08366666734218597, 0.0793333351612091, 0.07666666805744171, 0.07433333247900009, 0.07466666400432587]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.06199999898672104, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3031890818062175, 2.3010588336882103, 2.301043633220533, 2.301411056342205, 2.3019486950876975, 2.302882692959047, 2.3026482342193626, 2.3026997573843975, 2.3030157924375483, 2.303552444695072, 2.304356711557308, 2.306612486254191], "accuracy": [0.09576013684272766, 0.09430722147226334, 0.09391097724437714, 0.08902391046285629, 0.08545766770839691, 0.08889182657003403, 0.10170386731624603, 0.11200633645057678, 0.09655263274908066, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9699081012180872, 1.9704475402832031, 1.971775736127581, 1.9726181711469377, 1.9733317238943917, 1.9735491616385323, 1.9735381943838937, 1.9738425527300154, 1.974167960030692, 1.974696159362793, 1.9758389336722237, 1.9788661003112793], "val_accuracy": [0.05166666582226753, 0.070333331823349, 0.08233333379030228, 0.0716666653752327, 0.08100000023841858, 0.1066666692495346, 0.11933333426713943, 0.09033333510160446, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [7, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [3, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303726894508153, 2.3029072382950497, 2.3037867929642273, 2.3030899315147413, 2.3016373210532115, 2.3027047743146696], "accuracy": [0.09549596905708313, 0.08717474341392517, 0.08294808864593506, 0.08849557489156723, 0.09338264167308807, 0.0944393053650856], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 8, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [73, 84, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303726894508153, 2.3029072382950497, 2.3037867929642273, 2.3030899315147413, 2.3016373210532115, 2.3027047743146696], "accuracy": [0.09549596905708313, 0.08717474341392517, 0.08294808864593506, 0.08849557489156723, 0.09338264167308807, 0.0944393053650856], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 3, 2, 2, 9, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [21, 32, 5, 49, 25], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 8, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [73, 84, 13, 96, 41]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3042941944332425, 2.304947436430577, 2.3079713557957184, 2.3093154982112227, 2.310142778654329, 2.3153037161103422], "accuracy": [0.09325055778026581, 0.08347642421722412, 0.08057060092687607, 0.07938185334205627, 0.08096684515476227, 0.0796460211277008], "val_loss": [1.971923555646624, 1.9732048852103097, 1.9746999740600586, 1.9765024866376604, 1.9783246857779366, 1.9807947703770228], "val_accuracy": [0.03400000184774399, 0.027000000700354576, 0.021666666492819786, 0.01600000075995922, 0.01733333244919777, 0.026333333924412727]}}]