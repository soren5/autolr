[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [10, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8242856860160828, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.55328350652242, 2.194685531219928, 2.166404784552378, 1.7626225687430566, 1.207637425049059, 0.9477841203963169, 0.8680023317717448, 0.741382284549249, 0.7225081022578366, 0.6684051405452954, 0.6468267703824716, 0.6204154429151051, 0.6280939895101212, 0.584809948849782, 0.5980537510220527, 0.5663969161299163, 0.5687777680365669, 0.5549955021010855, 0.5659234879070726, 0.5415700895045301, 0.5277112496055081, 0.5316771208145646, 0.5227740454856415, 0.4925449047271586, 0.5001058313809114, 0.4688512246212892, 0.48282078946932605, 0.48837072964845757, 0.47166118748105196, 0.47339907918765545], "accuracy": [0.26139214634895325, 0.24659886956214905, 0.24765552580356598, 0.3829084634780884, 0.5605600476264954, 0.6472064256668091, 0.6737551093101501, 0.7218332886695862, 0.7239466309547424, 0.748778223991394, 0.7504953145980835, 0.7667415142059326, 0.7564390301704407, 0.7807422876358032, 0.7734777331352234, 0.7880068421363831, 0.7779685854911804, 0.7889314293861389, 0.7837802171707153, 0.7954035401344299, 0.802271842956543, 0.8018755912780762, 0.7998943328857422, 0.8150838613510132, 0.8124422430992126, 0.8273676037788391, 0.8247259259223938, 0.8153480291366577, 0.8249900937080383, 0.8285563588142395], "val_loss": [1.9570909227643694, 1.9667485100882394, 1.7696116992405482, 0.957451445715768, 0.6828700474330357, 0.7236044917787824, 0.5612280368804932, 0.5719497544424874, 0.5133322817938668, 0.5008870022637504, 0.5212713990892682, 0.4711780037198748, 0.46572174344744, 0.45454468045915875, 0.46126154490879606, 0.44424755232674734, 0.44840375014713835, 0.4291453276361738, 0.5028584854943412, 0.44933215209415983, 0.43066357714789255, 0.40429919958114624, 0.4213692120143345, 0.4459674188068935, 0.40172516448157175, 0.41632706778390066, 0.4413130964551653, 0.43108090332576204, 0.3845822981425694, 0.4063264642442976], "val_accuracy": [0.3086666762828827, 0.12566666305065155, 0.28999999165534973, 0.5823333263397217, 0.7006666660308838, 0.6923333406448364, 0.7509999871253967, 0.7363333106040955, 0.7666666507720947, 0.7733333110809326, 0.7643333077430725, 0.7956666946411133, 0.8023333549499512, 0.8053333163261414, 0.7953333258628845, 0.8053333163261414, 0.7960000038146973, 0.8096666932106018, 0.7703333497047424, 0.8003333210945129, 0.8056666851043701, 0.8253333568572998, 0.8090000152587891, 0.8133333325386047, 0.8346666693687439, 0.8163333535194397, 0.8016666769981384, 0.8173333406448364, 0.8343333601951599, 0.8220000267028809]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [10, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8159999847412109, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.552568549162613, 2.068435604246994, 1.9106341385491818, 2.031758773470158, 1.5221322703559905, 1.1476932279248957, 0.8911109446471535, 0.7990902108743663, 0.739608306272895, 0.6890379449379931, 0.695054667059929, 0.6443071252933472, 0.6686652161898378, 0.6101362680825165, 0.5932929603226228, 0.5964420619516041, 0.56084039519964, 0.5599622654877067, 0.5600416033243727, 0.55095635788111, 0.5521439996377872, 0.5255400927279997, 0.5113031382353519, 0.5085069636674432, 0.5147509027969694, 0.4708575936962569, 0.48758226558280704, 0.5095346984240073, 0.4660964222899706, 0.46518385552018465], "accuracy": [0.26139214634895325, 0.28239333629608154, 0.3593977093696594, 0.29705455899238586, 0.459780752658844, 0.5925241112709045, 0.6650376319885254, 0.698190450668335, 0.7230220437049866, 0.7396644949913025, 0.7341170310974121, 0.7574957013130188, 0.7425703406333923, 0.7734777331352234, 0.7758552432060242, 0.7783648371696472, 0.7864218950271606, 0.7843085527420044, 0.7874785661697388, 0.7913089394569397, 0.7923656105995178, 0.7976489067077637, 0.8068947196006775, 0.809140145778656, 0.8009510040283203, 0.8234050869941711, 0.8247259259223938, 0.8105930685997009, 0.8278959393501282, 0.8276317715644836], "val_loss": [1.9569844518389021, 1.9090470586504256, 1.8773397718157088, 1.1666511467524938, 0.831389239856175, 0.6288802453449794, 0.6449430499758039, 0.5551729542868478, 0.5408023766108921, 0.5476962327957153, 0.5241968972342355, 0.5006880589893886, 0.49691007818494526, 0.471827643258231, 0.49725779465266634, 0.4567603724343436, 0.43763256072998047, 0.4396815470286778, 0.5495521681649345, 0.41398775577545166, 0.45476278236934115, 0.4046991126877921, 0.42842550788606915, 0.4289889931678772, 0.4090706024851118, 0.42148872784205843, 0.48564112186431885, 0.4110113722937448, 0.4353975313050406, 0.3970915249415806], "val_accuracy": [0.3109999895095825, 0.15733332931995392, 0.2763333320617676, 0.4736666679382324, 0.6413333415985107, 0.734000027179718, 0.7043333053588867, 0.7443333268165588, 0.7509999871253967, 0.7436666488647461, 0.7666666507720947, 0.7786666750907898, 0.7889999747276306, 0.7940000295639038, 0.7746666669845581, 0.7960000038146973, 0.8046666383743286, 0.8113333582878113, 0.7450000047683716, 0.8230000138282776, 0.8050000071525574, 0.8209999799728394, 0.8019999861717224, 0.8056666851043701, 0.82833331823349, 0.8166666626930237, 0.7839999794960022, 0.8180000185966492, 0.8026666641235352, 0.8263333439826965]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [10, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 1, 5, 4], [7, 0], [23], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8154285550117493, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.5526471992037187, 2.124804326335689, 1.644378677965108, 1.3755867971389553, 1.3044388198959609, 1.003355992783519, 0.9020249028137222, 0.8098991708654092, 0.769495637559179, 0.7201551597399592, 0.6845456868933649, 0.6637884872448742, 0.6613325619064601, 0.6184200073954389, 0.6096966531786543, 0.6086598285563066, 0.5902370279451891, 0.5632397292265251, 0.555202136320319, 0.5445863744287034, 0.5293945702642356, 0.5242214579907202, 0.5188113215293678, 0.5251634670144705, 0.48829315384507194, 0.48460155760119256, 0.487630245936246, 0.4959859975994129, 0.46212304837479173, 0.4630568611536831, 0.4634099992873127, 0.44364301706616904, 0.44798495924672777, 0.44738529911681785, 0.42810899225113935, 0.4154008858396928, 0.4348820522594855, 0.41328833432576095, 0.4328575259493547], "accuracy": [0.261260062456131, 0.29137498140335083, 0.4476291239261627, 0.5031039714813232, 0.5322942733764648, 0.6161669492721558, 0.6616035103797913, 0.6894729733467102, 0.7071720957756042, 0.7259278893470764, 0.739400327205658, 0.7511557340621948, 0.7471932172775269, 0.7666094303131104, 0.7700436115264893, 0.767401933670044, 0.7753269076347351, 0.7881389260292053, 0.7858935594558716, 0.7948752045631409, 0.8035926818847656, 0.8074230551719666, 0.8083476424217224, 0.8001585006713867, 0.811649739742279, 0.8162726163864136, 0.8181217908859253, 0.8141592741012573, 0.8321225643157959, 0.8310658931732178, 0.8203672170639038, 0.8325188159942627, 0.8289526104927063, 0.8343679904937744, 0.8376700282096863, 0.8445383906364441, 0.8274996876716614, 0.842028796672821, 0.8376700282096863], "val_loss": [1.9569478716169084, 1.7835545539855957, 1.2755045209612166, 1.0321833406175887, 0.7529103245053973, 0.7703959601266044, 0.6285967997142247, 0.5890542949948993, 0.5530815976006644, 0.5761840343475342, 0.5117574078696114, 0.5038387945720127, 0.5155796323503766, 0.46771889073508127, 0.4831115518297468, 0.49585820947374615, 0.4367105109351022, 0.4501771756580898, 0.5310170139585223, 0.4656728506088257, 0.46128416061401367, 0.42348067249570576, 0.4826529026031494, 0.4151709164891924, 0.41445137773241314, 0.41865735394614084, 0.4742004360471453, 0.416848931993757, 0.421831020287105, 0.40549321685518536, 0.4083563004221235, 0.39080498048237394, 0.39799508026668, 0.3666673132351467, 0.4003741911479405, 0.37449405023029875, 0.3804150904927935, 0.38635534048080444, 0.3876024229185922], "val_accuracy": [0.3100000023841858, 0.47866666316986084, 0.44333332777023315, 0.5453333258628845, 0.6809999942779541, 0.6923333406448364, 0.7183333039283752, 0.722000002861023, 0.75, 0.7266666889190674, 0.7749999761581421, 0.7723333239555359, 0.7673333287239075, 0.7960000038146973, 0.7846666574478149, 0.7716666460037231, 0.8066666722297668, 0.8006666898727417, 0.746666669845581, 0.793666660785675, 0.7960000038146973, 0.8090000152587891, 0.7756666541099548, 0.8193333148956299, 0.8243333101272583, 0.8180000185966492, 0.7973333597183228, 0.8273333311080933, 0.8103333115577698, 0.8196666836738586, 0.8199999928474426, 0.8393333554267883, 0.8360000252723694, 0.8476666808128357, 0.8286666870117188, 0.8473333120346069, 0.8360000252723694, 0.8399999737739563, 0.8420000076293945]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 6, 4, 2, 8, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8005714416503906, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 8, 8, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad))), tf.math.add(beta, grad))), tf.math.add(beta, grad))), grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.227182224205913, 1.7578046669844765, 1.223612032672276, 1.0476389407261315, 0.9334591330396753, 0.8658535889331549, 0.8361441708511728, 0.7981073637412383, 0.7721028951857902, 0.7559756635202471, 0.7191855394136416, 0.7129774233133187, 0.7231635053663867, 0.6802046345193797, 0.6643128054898728, 0.665941574207906, 0.6567918488283703, 0.6473293424030542, 0.648439753316948, 0.6244445972675031, 0.6380211902631509, 0.6238259837737944, 0.6143472763478338, 0.6149278562916992, 0.6042404409097942, 0.5913592063755548, 0.5883835077742386, 0.6005100450180683, 0.579936085454603, 0.5798249387423029], "accuracy": [0.22903183102607727, 0.4589882493019104, 0.5774666666984558, 0.6330735683441162, 0.6676793098449707, 0.6885483860969543, 0.7018887996673584, 0.7120591998100281, 0.7177387475967407, 0.7201162576675415, 0.7298903465270996, 0.7326641082763672, 0.7271166443824768, 0.7498348951339722, 0.7563069462776184, 0.7549861073493958, 0.7655527591705322, 0.759080708026886, 0.7614582180976868, 0.7703077793121338, 0.7647602558135986, 0.7749306559562683, 0.776251494884491, 0.7718927264213562, 0.7800818681716919, 0.7854973077774048, 0.7853652238845825, 0.7754589915275574, 0.7866860628128052, 0.7903843522071838], "val_loss": [1.734682355608259, 1.0533480644226074, 0.818668178149632, 0.6868457283292498, 0.654828565461295, 0.651905723980495, 0.5857526915413993, 0.5802575349807739, 0.571600215775626, 0.549464396068028, 0.5581447567258563, 0.5497596434184483, 0.5199024166379657, 0.5025807448795864, 0.5196051256997245, 0.5117525373186383, 0.48503455093928743, 0.4857194423675537, 0.5175547770091465, 0.47384062835148405, 0.48035669326782227, 0.4641698769160679, 0.4863184860774449, 0.4738285882132394, 0.4579498256955828, 0.47021874359675814, 0.4868645327431815, 0.4526610715048654, 0.4544875792094639, 0.4489813872746059], "val_accuracy": [0.5716666579246521, 0.637333333492279, 0.6776666641235352, 0.7176666855812073, 0.7329999804496765, 0.7226666808128357, 0.7450000047683716, 0.737333357334137, 0.7383333444595337, 0.7553333044052124, 0.7486666440963745, 0.7453333139419556, 0.7839999794960022, 0.793666660785675, 0.7723333239555359, 0.7786666750907898, 0.7940000295639038, 0.7963333129882812, 0.7593333125114441, 0.79666668176651, 0.7916666865348816, 0.8090000152587891, 0.7900000214576721, 0.7993333339691162, 0.8140000104904175, 0.7953333258628845, 0.7793333530426025, 0.8019999861717224, 0.8036666512489319, 0.8096666932106018]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 5, 6, 6, 5, 8, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 2, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [8, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8002856969833374, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2273655468997795, 1.7626707972536753, 1.2276618021700627, 1.0456647254440998, 0.9334088325295796, 0.8656245137423005, 0.8361744441691328, 0.7973466062700082, 0.7730544352607012, 0.757018596670017, 0.7214100354572156, 0.7104360712690911, 0.7212052962578771, 0.681021705877984, 0.6642259359832107, 0.6714301724018847, 0.6552231338329287, 0.6478929769534634, 0.6493464481829022, 0.6236805943387169, 0.6361928393087839, 0.6240333739036834, 0.6148832723638086, 0.6134460304533218, 0.6043929656451609, 0.5916370840561372, 0.58717333427305, 0.602106568890792, 0.5780991387168855, 0.580118673580859], "accuracy": [0.2285034954547882, 0.45885616540908813, 0.5746929049491882, 0.6326773166656494, 0.6667547225952148, 0.6894729733467102, 0.7005679607391357, 0.7111346125602722, 0.7186633348464966, 0.7182670831680298, 0.7306828498840332, 0.7342491149902344, 0.7283053994178772, 0.7495707273483276, 0.7560427784919739, 0.7512878179550171, 0.7671377658843994, 0.7577598690986633, 0.7606657147407532, 0.7687227725982666, 0.7635715007781982, 0.7712323069572449, 0.776251494884491, 0.7713643908500671, 0.77677983045578, 0.7835160493850708, 0.7865539789199829, 0.7746664881706238, 0.7866860628128052, 0.7886672616004944], "val_loss": [1.7362029211861747, 1.0601979323795863, 0.817887442452567, 0.686379040990557, 0.6549227918897357, 0.6474935667855399, 0.5853606462478638, 0.583480988230024, 0.5685305595397949, 0.5532094921384539, 0.5554472889219012, 0.5502112763268607, 0.5196017026901245, 0.5013337135314941, 0.5238718816212246, 0.5018777847290039, 0.4856053590774536, 0.4848712853022984, 0.5135502644947597, 0.4733576944896153, 0.4794379472732544, 0.46589064598083496, 0.4854852131434849, 0.4762994050979614, 0.4573368855885097, 0.46741173948560444, 0.4805788142340524, 0.4502217769622803, 0.4523397173200335, 0.4510031427655901], "val_accuracy": [0.5716666579246521, 0.6359999775886536, 0.6786666512489319, 0.718999981880188, 0.7323333621025085, 0.7279999852180481, 0.7456666827201843, 0.737333357334137, 0.7429999709129333, 0.7549999952316284, 0.7506666779518127, 0.7463333606719971, 0.7833333611488342, 0.7953333258628845, 0.7683333158493042, 0.7853333353996277, 0.7916666865348816, 0.7990000247955322, 0.7630000114440918, 0.7986666560173035, 0.7913333177566528, 0.8053333163261414, 0.7923333048820496, 0.8003333210945129, 0.8140000104904175, 0.7979999780654907, 0.7829999923706055, 0.8069999814033508, 0.8056666851043701, 0.8073333501815796]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 6, 6, 8, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [10, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7968571186065674, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.232178502598648, 1.8109349886093473, 1.2715026261610929, 1.092964030023831, 0.9807844337471062, 0.8826295890985715, 0.8535579736001928, 0.8116714115376485, 0.7919828628646605, 0.7709009098165842, 0.7337340306076848, 0.7227627705463313, 0.7303947050337464, 0.6965579523496687, 0.6760536490524639, 0.6793069088652685, 0.6683502647980974, 0.6587099829338576, 0.6618948151894911, 0.6352764493706456, 0.645837338798003, 0.6340868884640725, 0.6270562138823218, 0.6251802661903562, 0.6142950109864869, 0.5987991673394343, 0.6028870083337541, 0.6087847326598887, 0.5913426783327035, 0.5888294382669104], "accuracy": [0.2250693440437317, 0.45225200057029724, 0.5614846348762512, 0.6184123754501343, 0.6524897813796997, 0.6824725866317749, 0.6942279934883118, 0.7080966830253601, 0.7111346125602722, 0.7150970697402954, 0.7264562249183655, 0.7318716049194336, 0.7252674698829651, 0.7427024245262146, 0.7512878179550171, 0.748778223991394, 0.7618544697761536, 0.7528728246688843, 0.7548540234565735, 0.7626469135284424, 0.761590301990509, 0.7712323069572449, 0.7684586048126221, 0.7660810947418213, 0.7750627398490906, 0.7819310426712036, 0.7786290049552917, 0.7721568942070007, 0.7803460359573364, 0.785101056098938], "val_loss": [1.7582411084856306, 1.116835015160697, 0.8619354282106672, 0.7330224854605538, 0.676768592425755, 0.6456680468150547, 0.6016795294625419, 0.5944972378867013, 0.5762980495180402, 0.5632577283041817, 0.5543220043182373, 0.5377059664045062, 0.5316128049577985, 0.5151693310056414, 0.5194162130355835, 0.5183390208653041, 0.4943170206887381, 0.49803437505449566, 0.5255776473454067, 0.48005878925323486, 0.4880446876798357, 0.47185220037187847, 0.49444733347211567, 0.4804568461009434, 0.4645416396004813, 0.47688993385859896, 0.5017350912094116, 0.45782768726348877, 0.45854055881500244, 0.45468102182660786], "val_accuracy": [0.5686666369438171, 0.6243333220481873, 0.6656666398048401, 0.6986666917800903, 0.7146666646003723, 0.7226666808128357, 0.7356666922569275, 0.7293333411216736, 0.7406666874885559, 0.7546666860580444, 0.7563333511352539, 0.7583333253860474, 0.7793333530426025, 0.778333306312561, 0.7749999761581421, 0.7696666717529297, 0.7916666865348816, 0.7870000004768372, 0.7556666731834412, 0.7900000214576721, 0.7889999747276306, 0.8069999814033508, 0.7846666574478149, 0.800000011920929, 0.809333324432373, 0.7916666865348816, 0.7723333239555359, 0.800000011920929, 0.8040000200271606, 0.8069999814033508]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [32, 66, 89, 50, 85, 46], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 6, 6, 4, 1, 5, 8, 6, 2, 1, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 2, 0, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [97, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7045714259147644, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 1, 2, 0, 6, 5, 3, 2, 1, 7, 3, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1722505366750253, 1.4150188414333456, 1.002221416693322, 0.8768813376019833, 0.8168028347512057, 0.7368933976507458, 0.6779514710822235, 0.6503631451173686, 0.5888968707233168, 0.6023369651303048, 0.5739667717224225, 0.5500643381179993, 0.5382075257950676, 0.5231989750756941, 0.4999701105183173, 0.49898838374939386, 0.4788693560427836, 0.4726933315799788, 0.45699318122744104, 0.44026871172979665, 0.44193536763918034, 0.4266099291801327, 0.43663737236500855, 0.4168709259086108, 0.43868118818992513, 0.424707710239094, 0.4219792525821185, 0.4508291106450166], "accuracy": [0.258090078830719, 0.5359926223754883, 0.6373002529144287, 0.6840575933456421, 0.6968696117401123, 0.7169462442398071, 0.7415136694908142, 0.7534011602401733, 0.7799497842788696, 0.7744023203849792, 0.7841764688491821, 0.8013472557067871, 0.7987055778503418, 0.8013472557067871, 0.8088759779930115, 0.8084797263145447, 0.8156121969223022, 0.8226125836372375, 0.8252542614936829, 0.8309338092803955, 0.8322546482086182, 0.8389908671379089, 0.8397833704948425, 0.8462554216384888, 0.8399154543876648, 0.839519202709198, 0.8397833704948425, 0.8363492488861084], "val_loss": [1.3322906153542655, 0.7551902532577515, 0.6128370421273368, 0.6204476015908378, 0.5631435428346906, 0.5181241376059396, 0.5170386178152901, 0.46793651580810547, 0.46265651498522076, 0.4487002747399466, 0.43083860192980084, 0.43332444769995554, 0.4472981350762503, 0.41765062298093525, 0.40646757398332867, 0.3964209726878575, 0.4084074922970363, 0.3944480674607413, 0.39415368863514494, 0.38955421107155935, 0.40108739478247507, 0.3792103018079485, 0.37950256041118074, 0.3931054983820234, 0.41101281132016865, 0.3873729535511562, 0.3892414655004229, 0.44603443145751953], "val_accuracy": [0.54666668176651, 0.6693333387374878, 0.7319999933242798, 0.7183333039283752, 0.750333309173584, 0.7770000100135803, 0.7746666669845581, 0.8026666641235352, 0.8080000281333923, 0.8046666383743286, 0.8096666932106018, 0.8163333535194397, 0.8193333148956299, 0.8309999704360962, 0.8326666951179504, 0.8333333134651184, 0.8429999947547913, 0.8433333039283752, 0.8450000286102295, 0.8450000286102295, 0.8476666808128357, 0.8453333377838135, 0.8600000143051147, 0.8483333587646484, 0.8363333344459534, 0.8496666550636292, 0.8539999723434448, 0.8539999723434448]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 6, 6, 6, 0, 1, 1, 8, 1, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 2, 2, 1, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.6957142949104309, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))), beta)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [1.9452878152689583, 1.274999915726858, 0.9269151228640325, 0.7617168311413962, 0.6999830414968286, 0.6773902414229568, 0.7089617761087423, 0.6833033491639003, 0.7046213024217755, 0.7249277924045895, 0.6910669993825199, 0.6873953614126596, 0.7058741787185034, 0.7273212837788722, 0.7124344888553485], "accuracy": [0.34764233231544495, 0.5801082849502563, 0.6469422578811646, 0.7066437602043152, 0.735569953918457, 0.7457403540611267, 0.7301545143127441, 0.7553823590278625, 0.7415136694908142, 0.735041618347168, 0.7460044622421265, 0.735569953918457, 0.7280412316322327, 0.7473253011703491, 0.7275128960609436], "val_loss": [1.3310153143746513, 0.7720074483326503, 0.5945990255900792, 0.5829897267477853, 0.5318369695118496, 0.5277106421334403, 0.528556193624224, 0.5256794350487846, 0.5517467430659703, 0.5577170167650495, 0.5156982285635812, 0.5002178464617048, 0.5217430250985282, 0.5258170195988247, 0.5325731209346226], "val_accuracy": [0.5210000276565552, 0.6323333382606506, 0.718666672706604, 0.7436666488647461, 0.7773333191871643, 0.7593333125114441, 0.7733333110809326, 0.7699999809265137, 0.7836666703224182, 0.7876666784286499, 0.7609999775886536, 0.7806666493415833, 0.7833333611488342, 0.7766666412353516, 0.7573333382606506]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 6, 6, 6, 8, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [10, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 1, 5, 4], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.6579999923706055, "mapping_values": [1, 4, 4, 3, 1, 1, 18, 18, 11, 7, 3, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [1.9497314727758261, 1.2927501439386906, 0.9684682098110166, 0.7625790019124145, 0.698186445584182, 0.6689415705548837, 0.6531244913159644, 0.6467788134268672, 0.6631827762791068, 0.6182557877658491, 0.6263484354300065, 0.6519881242286134, 0.6517355855209417, 0.6426786365305601, 0.6605935464241028, 0.7401578257254259, 0.7517929639420757, 0.7882877376573654, 0.8627122322077985, 0.884870711586589], "accuracy": [0.3481706380844116, 0.5818253755569458, 0.6366398334503174, 0.7058512568473816, 0.7433628439903259, 0.7516840696334839, 0.7506273984909058, 0.7640998363494873, 0.7547219395637512, 0.7751948237419128, 0.7712323069572449, 0.765949010848999, 0.76542067527771, 0.770439863204956, 0.76542067527771, 0.7437590956687927, 0.7182670831680298, 0.7296261787414551, 0.6820763349533081, 0.6954167485237122], "val_loss": [1.3046624660491943, 0.8531327077320644, 0.6176142862864903, 0.5478843450546265, 0.5334536348070417, 0.4920277084623064, 0.48823623997824533, 0.4978893314089094, 0.4853616952896118, 0.4741519178662981, 0.5145833321980068, 0.5031930719103131, 0.5193101167678833, 0.494974000113351, 0.5760500431060791, 0.549768328666687, 0.6640252726418632, 0.5518601792199271, 0.7014319045203072, 0.63556855065482], "val_accuracy": [0.5136666893959045, 0.5690000057220459, 0.7310000061988831, 0.7549999952316284, 0.7776666879653931, 0.7866666913032532, 0.7796666622161865, 0.8016666769981384, 0.8003333210945129, 0.8026666641235352, 0.8056666851043701, 0.7676666378974915, 0.8090000152587891, 0.7916666865348816, 0.812333345413208, 0.7593333125114441, 0.765666663646698, 0.7683333158493042, 0.7646666765213013, 0.7293333411216736]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 1, 5, 4], [1, 1], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.3668571412563324, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.6014874121296, 2.285597528181276, 2.2568781950596284, 2.1809826867455393, 2.2926712704687353, 2.3051141031414146, 2.303486213519069, 2.303108653246278], "accuracy": [0.2028794139623642, 0.14040417969226837, 0.1468762308359146, 0.22572976350784302, 0.14449875056743622, 0.09774138033390045, 0.09906221181154251, 0.09655263274908066], "val_loss": [1.9747989518301827, 1.7608564240591866, 1.9171621458871024, 1.6968224389212472, 1.9768011910574776, 1.9744007928030831, 1.9738966396876745, 1.9737787927900041], "val_accuracy": [0.13233333826065063, 0.32366666197776794, 0.32866665720939636, 0.2619999945163727, 0.10233332961797714, 0.09799999743700027, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [32, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 2, 0, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [10, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 7, 6, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad))), grad)), beta))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 2, 6, 8, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 2, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [97, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)), tf.math.add(beta, beta))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [502969.91571657587, 9685834.430326246, 45016245.481970675, 124313046.95918638, 265704224.2409193, 489669216.61286485], "accuracy": [0.09998679161071777, 0.10210011899471283, 0.09734513610601425, 0.10117553919553757, 0.09998679161071777, 0.1002509593963623], "val_loss": [1889946.5, 15055591.42857143, 50742561.14285714, 120196301.71428572, 234662701.7142857, 405386761.14285713], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 5, 6, 6, 5, 8, 1, 1, 3, 2, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 2, 2, 2, 1, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 16, 16, 9, 7, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, beta))), tf.math.add(beta, beta)))))))))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [1880.7330300073268, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04768194258213043, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7468104173860.571, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 8, 2, 6, 6, 3, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 0, 2, 2, 1, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [10, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 1, 5, 4], [0, 0], [23], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022565340652537, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 5, 6, 6, 5, 8, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 2, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [8, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 5, 6, 6, 6, 4, 1, 5, 8, 6, 2, 1, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 3, 0, 2, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [97, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [10, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.160084530711174, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 5, 4, 9, 9, 6, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 2, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 0, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07740060985088348, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [42, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 6, 6, 4, 1, 5, 5, 6, 2, 1, 0, 9, 2, 5, 3, 2, 4, 6, 2, 8, 9, 9, 9, 7, 2, 3, 0], [0, 3, 3, 3, 2, 0, 3, 3, 1, 3, 4, 3, 3, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 44, 44, 29, 15, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(grad, tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), grad)), grad), tf.math.add(beta, grad)))))), beta)), tf.math.add(tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.multiply(grad, tf.math.negative(grad)), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [39.25946701068951, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10434553027153015, 0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [885146.625, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [10, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), grad)), lambda shape,  alpha, beta, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300636567680229, 2.3015416280988057, 2.3033074027338456, 2.3035219555218553, 2.3015616125576153, 2.30285899599136], "accuracy": [0.09126931428909302, 0.09021265059709549, 0.08849557489156723, 0.08585391938686371, 0.09100515395402908, 0.08994849026203156], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]