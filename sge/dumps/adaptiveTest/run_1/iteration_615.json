[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 9, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8417142629623413, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 9, 5, 1, 7, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.sqrt(grad), grad))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1873172450578915, 1.7146023531096124, 1.3242791296547398, 0.9093698269781451, 0.7762951241539706, 0.7032218340003432, 0.6508913440963202, 0.6089733422251268, 0.5966210653123414, 0.557389773271969, 0.5867547418825253, 0.5390030759602112, 0.5121514089922187, 0.5169687354963028, 0.48002050342875985, 0.46452636089559246, 0.4629497784649329, 0.452003517792981, 0.45797857475271314, 0.4466433051302921, 0.4022058382159951, 0.417441985067391, 0.39299497103190395, 0.37949393609133475, 0.4026052208545737, 0.37984927136978974, 0.3629827068277464, 0.36499252944511584], "accuracy": [0.2793554365634918, 0.45291242003440857, 0.5407475829124451, 0.6679434776306152, 0.7136441469192505, 0.7425703406333923, 0.7549861073493958, 0.7705719470977783, 0.7771760821342468, 0.7954035401344299, 0.7794214487075806, 0.7989697456359863, 0.8123101592063904, 0.8009510040283203, 0.8274996876716614, 0.8302733898162842, 0.829216718673706, 0.8318583965301514, 0.8355567455291748, 0.8297450542449951, 0.8544445633888245, 0.8474441766738892, 0.8565579056739807, 0.8569541573524475, 0.850350022315979, 0.8577466607093811, 0.8647470474243164, 0.8643507957458496], "val_loss": [1.8210107258387975, 0.9627424648829869, 0.7424297843660627, 0.5994929586138044, 0.530919109072004, 0.5151531866618565, 0.46721347740718294, 0.4566261257444109, 0.4603299924305507, 0.500512957572937, 0.422522987638201, 0.4260567767279489, 0.40415292978286743, 0.4144631879670279, 0.4007313166345869, 0.37099976199013845, 0.3763827511242458, 0.44203312056405203, 0.38685240915843416, 0.3739648291042873, 0.3800395727157593, 0.36209031513759066, 0.3479868343898228, 0.4011176824569702, 0.3480895161628723, 0.3531655158315386, 0.3490756664957319, 0.34480464458465576], "val_accuracy": [0.4203333258628845, 0.5536666512489319, 0.6766666769981384, 0.7266666889190674, 0.765999972820282, 0.7480000257492065, 0.7926666736602783, 0.8016666769981384, 0.7963333129882812, 0.7706666588783264, 0.8223333358764648, 0.8153333067893982, 0.8286666870117188, 0.8153333067893982, 0.8303333520889282, 0.8460000157356262, 0.8420000076293945, 0.79666668176651, 0.8286666870117188, 0.8479999899864197, 0.8410000205039978, 0.846666693687439, 0.8600000143051147, 0.8266666531562805, 0.8586666584014893, 0.8529999852180481, 0.8556666374206543, 0.8546666502952576]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 4, 3, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8391428589820862, "mapping_values": [1, 4, 4, 2, 2, 1, 18, 18, 11, 7, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), grad))), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), alpha)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1405902155134355, 1.9774612196999266, 1.4515408677762573, 1.2151928710474582, 0.8909453834997365, 0.7958915189918258, 0.739458043490891, 0.6956230402307708, 0.6717336129802108, 0.621329049691863, 0.6244441436234875, 0.5710821147088472, 0.5774426608116493, 0.5686747027095346, 0.5467299420552373, 0.5258818387182208, 0.5319377324127991, 0.5143680895135356, 0.49805448079200515, 0.4878052738340791, 0.4696045730485892, 0.4892832911671145, 0.4764164412821509, 0.44733873340337504, 0.45593939707610176, 0.44967760462345874, 0.4265218420925236, 0.4224326845803171, 0.40769837781139384, 0.4235970030615374, 0.42125724300322925, 0.4031941896739212, 0.40016576543050814, 0.4006002685176918, 0.37215869935858503, 0.3676297649880914, 0.36942105095825173, 0.36045586298784604, 0.36563733127595505, 0.34414813059857335, 0.35299851664179244, 0.3612077069351812, 0.3317984353990571, 0.33834970210757725, 0.3306319716269267, 0.32436491784213667, 0.3234272171139103, 0.30768577858614743, 0.31745129433195934, 0.3028698782241576, 0.3066950434462868, 0.29213329424569634, 0.32147015390095696, 0.29239954042349664, 0.283425008151604, 0.2689719491819932, 0.2821660966267596, 0.27419701950771463, 0.2802341290358555], "accuracy": [0.29877161979675293, 0.35609564185142517, 0.4807819426059723, 0.5845991373062134, 0.6688680648803711, 0.7067758440971375, 0.720380425453186, 0.7436270117759705, 0.7486461400985718, 0.7716285586357117, 0.7646281719207764, 0.7906485199928284, 0.7821952104568481, 0.783119797706604, 0.7965922355651855, 0.8035926818847656, 0.7989697456359863, 0.805177628993988, 0.8168009519577026, 0.8168009519577026, 0.8239334225654602, 0.8182538747787476, 0.8210275769233704, 0.8301413059234619, 0.8318583965301514, 0.8338396549224854, 0.8396512866020203, 0.8417646288871765, 0.8449346423149109, 0.8455950617790222, 0.8384625315666199, 0.8486329317092896, 0.8507462739944458, 0.8512746095657349, 0.859199583530426, 0.8618412613868713, 0.8560295701026917, 0.8668603897094727, 0.8644828796386719, 0.8730682730674744, 0.8684453964233398, 0.8692378997802734, 0.876370370388031, 0.8673887252807617, 0.8758420348167419, 0.8812574148178101, 0.8780874609947205, 0.8854840993881226, 0.876370370388031, 0.8828424215316772, 0.887201189994812, 0.8894465565681458, 0.8758420348167419, 0.8899748921394348, 0.8934090733528137, 0.8996169567108154, 0.8922203183174133, 0.8953903317451477, 0.8942015767097473], "val_loss": [1.8925984246390206, 1.4855010168892997, 1.3128976140703474, 0.6891023942402431, 0.5824178116662162, 0.55402900491442, 0.5193714414324079, 0.5287389925548008, 0.5482626131602696, 0.4646524361201695, 0.4577055999210903, 0.4962587356567383, 0.4414616652897426, 0.45019165107182096, 0.4384533677782331, 0.4318135551043919, 0.40864308391298565, 0.4452278103147234, 0.41047950301851543, 0.3840172971997942, 0.41400795323508127, 0.42534387963158743, 0.3896863801138742, 0.4205682022230966, 0.42408931255340576, 0.3931599514825003, 0.3575560280254909, 0.3796143957546779, 0.39612445660999845, 0.39378548519951956, 0.3668310557092939, 0.348812426839556, 0.36907460008348736, 0.3627646735736302, 0.3509104677609035, 0.3444951857839312, 0.33539267097200665, 0.3727433170591082, 0.3456406848771231, 0.33085644245147705, 0.34876041752951487, 0.32258355617523193, 0.3391373412949698, 0.3360974703516279, 0.32001205001558575, 0.3277667931147984, 0.3258830564362662, 0.3250471864427839, 0.3208517091614859, 0.36438195194516865, 0.31689389262880596, 0.34330880641937256, 0.3381340673991612, 0.313728255884988, 0.3134695887565613, 0.32453384569713045, 0.336111204964774, 0.3346252271107265, 0.3363757814679827], "val_accuracy": [0.27000001072883606, 0.5236666798591614, 0.5120000243186951, 0.7066666483879089, 0.7506666779518127, 0.737666666507721, 0.7710000276565552, 0.7643333077430725, 0.7559999823570251, 0.7956666946411133, 0.800000011920929, 0.7726666927337646, 0.8046666383743286, 0.8019999861717224, 0.812666654586792, 0.8069999814033508, 0.8236666917800903, 0.8003333210945129, 0.8223333358764648, 0.8360000252723694, 0.8213333487510681, 0.8143333196640015, 0.8370000123977661, 0.8130000233650208, 0.8173333406448364, 0.8296666741371155, 0.8526666760444641, 0.8426666855812073, 0.8270000219345093, 0.8256666660308838, 0.8550000190734863, 0.8573333621025085, 0.8443333506584167, 0.8453333377838135, 0.8479999899864197, 0.859666645526886, 0.862333357334137, 0.8476666808128357, 0.8579999804496765, 0.8666666746139526, 0.859000027179718, 0.8643333315849304, 0.8643333315849304, 0.859666645526886, 0.8683333396911621, 0.8696666955947876, 0.862666666507721, 0.8676666617393494, 0.8700000047683716, 0.8479999899864197, 0.8610000014305115, 0.859666645526886, 0.859333336353302, 0.8756666779518127, 0.871666669845581, 0.8693333268165588, 0.8673333525657654, 0.8646666407585144, 0.8650000095367432]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 4, 3, 2, 1, 9, 2, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.834857165813446, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 10, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), grad))), tf.math.add(beta, grad))), tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1873284330016602, 1.635385938497535, 1.187581088470194, 0.8303185455425304, 0.7540415754848546, 0.6823478389283875, 0.63513476172175, 0.5942007780090819, 0.5920765593287778, 0.5591004474949386, 0.5835833952112315, 0.5211546630112093, 0.5045547284832437, 0.5034642819172009, 0.49561714024638864, 0.4656687007604132, 0.4548059537221475, 0.4655615462445627, 0.434518838748326, 0.433310062893787, 0.4074035335990023, 0.4195315144270198, 0.4091898144086622, 0.3818577123891251, 0.4012892044349479, 0.38075186419071316, 0.36731626587599936, 0.36859240359193096, 0.35132718969172394, 0.35586489409330324, 0.34041740081140537, 0.331855533436667, 0.3299295324391819, 0.3255327378895777, 0.3067879682644688, 0.31136421573286466], "accuracy": [0.2797516882419586, 0.4617619812488556, 0.5831462144851685, 0.6929071545600891, 0.7108704447746277, 0.7375511527061462, 0.7574957013130188, 0.7675340175628662, 0.7755910754203796, 0.7889314293861389, 0.7825914621353149, 0.8063663840293884, 0.8113855719566345, 0.8061022162437439, 0.8162726163864136, 0.8236692547798157, 0.8313300609588623, 0.8294808864593506, 0.8387266993522644, 0.8302733898162842, 0.8494254350662231, 0.8477083444595337, 0.844010055065155, 0.8557654023170471, 0.8488970994949341, 0.857218325138092, 0.8558974862098694, 0.8595958352088928, 0.8672566413879395, 0.8692378997802734, 0.8729361891746521, 0.8732003569602966, 0.871879518032074, 0.8780874609947205, 0.8831065893173218, 0.8782195448875427], "val_loss": [1.825988701411656, 0.914978163582938, 0.6331698553902763, 0.553513901574271, 0.5328620672225952, 0.4996321031025478, 0.46376807349068777, 0.47511758123125347, 0.460849438394819, 0.4839992182595389, 0.4189583233424595, 0.41665611948285786, 0.4022361551012312, 0.4236078773226057, 0.39488788161958965, 0.3745123403412955, 0.42947340863091604, 0.36918591601508005, 0.37862315348216463, 0.36240146841321674, 0.4002986380032131, 0.365301890032632, 0.348292418888637, 0.4191467251096453, 0.3836201940264021, 0.3651848946298872, 0.33725894348961966, 0.34245541266032625, 0.34311520201819284, 0.3402944377490452, 0.33373052733285086, 0.3362683653831482, 0.3348333665302822, 0.3381814275469099, 0.35002786772591726, 0.35658804859433857], "val_accuracy": [0.4166666567325592, 0.5799999833106995, 0.7206666469573975, 0.7416666746139526, 0.7546666860580444, 0.7643333077430725, 0.7889999747276306, 0.7853333353996277, 0.7950000166893005, 0.7883333563804626, 0.8236666917800903, 0.8246666789054871, 0.8270000219345093, 0.8180000185966492, 0.8316666483879089, 0.8413333296775818, 0.8023333549499512, 0.8423333168029785, 0.8303333520889282, 0.8473333120346069, 0.8306666612625122, 0.8453333377838135, 0.8550000190734863, 0.8100000023841858, 0.8296666741371155, 0.8429999947547913, 0.8536666631698608, 0.8569999933242798, 0.8539999723434448, 0.859000027179718, 0.871666669845581, 0.8676666617393494, 0.8579999804496765, 0.862666666507721, 0.8556666374206543, 0.8566666841506958]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 4, 3, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [55, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8317142724990845, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 10, 6, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))), tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.140503929905557, 1.9211647615236236, 1.4417909142080159, 1.0245168858578397, 0.9236128634985145, 0.7538512479973948, 0.720032827311881, 0.6705230965732095, 0.6413863248687143, 0.675518014419663, 0.6295729272353918, 0.5873265405530077, 0.5645067498999154, 0.577800511495076, 0.5439085132489037, 0.5193028367505712, 0.5314671641422096, 0.5106920834151966, 0.48910019452372533, 0.47047833459661653, 0.4819131795567387, 0.44755666182104464, 0.47969036666929066, 0.44507001479540237, 0.4477545284261289, 0.4457530346898953, 0.4323955894957255, 0.41631548164731963, 0.41083689689982633, 0.42100188714354786, 0.3977562243896563, 0.3996325426286852, 0.3877332360044431, 0.41327704904715873, 0.37021903923757327, 0.3624307778312735, 0.36557361103713376, 0.3592185354338283, 0.35163785150148424, 0.3510329029138424, 0.33782832804152585, 0.3500039485648418, 0.32566895701110227, 0.32873614230223336, 0.34023431431206386, 0.3170243363496319, 0.31956959419467146, 0.30726558160567724, 0.3087939663081987, 0.3024158968413432, 0.2920798783478027, 0.2844071317586633, 0.30569074963928133, 0.28539536444423785, 0.2901053636175782, 0.2653040463000776], "accuracy": [0.2989037036895752, 0.3663980960845947, 0.4931977391242981, 0.6174877882003784, 0.6622639298439026, 0.7162858247756958, 0.7341170310974121, 0.7478536367416382, 0.7643640041351318, 0.743891179561615, 0.7631752490997314, 0.7786290049552917, 0.7882710099220276, 0.7774402499198914, 0.7969884872436523, 0.8038568496704102, 0.8001585006713867, 0.8103289008140564, 0.8153480291366577, 0.8271034359931946, 0.8170651197433472, 0.8342359066009521, 0.8175934553146362, 0.8319904804229736, 0.8355567455291748, 0.8301413059234619, 0.8339717388153076, 0.8494254350662231, 0.8482366800308228, 0.8429533839225769, 0.8465195894241333, 0.8510104417800903, 0.8569541573524475, 0.8437458872795105, 0.8636903762817383, 0.8644828796386719, 0.8609166741371155, 0.8658037185668945, 0.8671245574951172, 0.867520809173584, 0.8712190985679626, 0.8708229064941406, 0.8771628737449646, 0.8758420348167419, 0.8705587387084961, 0.8817857503890991, 0.8754457831382751, 0.8840311765670776, 0.8795403242111206, 0.8870691061019897, 0.8881257176399231, 0.8952582478523254, 0.8828424215316772, 0.8919561505317688, 0.8927486538887024, 0.9000132083892822], "val_loss": [1.8917683873857771, 0.9769590241568429, 0.7370186192648751, 0.7904826402664185, 0.6156037705285209, 0.6459931646074567, 0.5774141890662057, 0.5112597601754325, 0.7266617672783988, 0.5628003563199725, 0.4490333114351545, 0.4728290012904576, 0.4365287848881313, 0.4748589481626238, 0.43187592710767475, 0.40659117698669434, 0.40846462760652813, 0.4427746023450579, 0.3958843861307417, 0.3829368693487985, 0.40019809348242624, 0.4533137083053589, 0.3779794829232352, 0.449467624936785, 0.4152274472372873, 0.4215785435267857, 0.37331725869859966, 0.3804119740213667, 0.38915579659598215, 0.3785180960382734, 0.36292894397463116, 0.346482515335083, 0.37309309414454866, 0.3590464677129473, 0.3433375358581543, 0.3538884094783238, 0.340013359274183, 0.37500353370394024, 0.35310700110026766, 0.32772122962134226, 0.356723427772522, 0.32855493681771414, 0.3417702998433794, 0.3426141142845154, 0.3285154529980251, 0.3268023303576878, 0.32458645956856863, 0.3274863617760794, 0.3304668835231236, 0.33379205635615755, 0.320376523903438, 0.3181394508906773, 0.34160560369491577, 0.3134484461375645, 0.310406642300742, 0.31950447389057707], "val_accuracy": [0.2709999978542328, 0.5946666598320007, 0.6776666641235352, 0.6183333396911621, 0.7143333554267883, 0.7093333601951599, 0.7283333539962769, 0.7796666622161865, 0.6576666831970215, 0.7323333621025085, 0.8023333549499512, 0.7896666526794434, 0.8069999814033508, 0.7746666669845581, 0.8153333067893982, 0.828000009059906, 0.8223333358764648, 0.7913333177566528, 0.8309999704360962, 0.8360000252723694, 0.831333339214325, 0.7993333339691162, 0.8389999866485596, 0.7946666479110718, 0.8209999799728394, 0.8103333115577698, 0.8403333425521851, 0.8500000238418579, 0.8299999833106995, 0.8373333215713501, 0.8536666631698608, 0.856333315372467, 0.8386666774749756, 0.847000002861023, 0.8513333201408386, 0.8513333201408386, 0.8636666536331177, 0.8433333039283752, 0.8483333587646484, 0.862666666507721, 0.8633333444595337, 0.8666666746139526, 0.8600000143051147, 0.8619999885559082, 0.8613333106040955, 0.8740000128746033, 0.8653333187103271, 0.8713333606719971, 0.8676666617393494, 0.862666666507721, 0.875333309173584, 0.871999979019165, 0.8519999980926514, 0.8723333477973938, 0.8730000257492065, 0.875333309173584]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 6, 1, 3, 2, 2, 3, 1, 8, 8, 2, 3, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 0, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8222857117652893, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.13181207085865, 2.0405570027252247, 1.795722343052194, 1.921813362089713, 1.294195695087784, 0.9025373738266458, 0.7366711396692986, 0.706746142120913, 0.6954763863206681, 0.6439229385444375, 0.6478908021200319, 0.5764061822127263, 0.5679300747543137, 0.5561310907223316, 0.5513776661681776, 0.5220030390465217, 0.5354693742428851, 0.5147910313111224, 0.5155141945008699, 0.4822020840729862, 0.47057450606114104, 0.47663837305983975, 0.46235459387152816, 0.4272805058630214, 0.4734734996647458], "accuracy": [0.2981112003326416, 0.328490287065506, 0.3909655213356018, 0.3649451732635498, 0.516708493232727, 0.666358470916748, 0.7253995537757874, 0.7357020378112793, 0.733588695526123, 0.7640998363494873, 0.7537974119186401, 0.7880068421363831, 0.7877426743507385, 0.7898560166358948, 0.7977809906005859, 0.8080834746360779, 0.7954035401344299, 0.8084797263145447, 0.8087438941001892, 0.8115176558494568, 0.8253863453865051, 0.8211596608161926, 0.826310932636261, 0.8407079577445984, 0.8204993009567261], "val_loss": [1.9287004470825195, 1.6982337066105433, 1.9653473581586565, 1.276899712426322, 0.7475066525595528, 0.5926758561815534, 0.5785665001188006, 0.5472554819924491, 0.6705364670072284, 0.5287516287394932, 0.4540694270815168, 0.46331305163247244, 0.4549377305167062, 0.4472060033253261, 0.4310876045908247, 0.43539565801620483, 0.41368802956172396, 0.4967702627182007, 0.4070492046219962, 0.3776927505220686, 0.43642120701926096, 0.4046796815735953, 0.3802717242922102, 0.45991853305271696, 0.46026575565338135], "val_accuracy": [0.24199999868869781, 0.33933332562446594, 0.3166666626930237, 0.4313333332538605, 0.6740000247955322, 0.7433333396911621, 0.7336666584014893, 0.746666669845581, 0.7013333439826965, 0.753000020980835, 0.8046666383743286, 0.7960000038146973, 0.7926666736602783, 0.8040000200271606, 0.8169999718666077, 0.796999990940094, 0.8199999928474426, 0.7716666460037231, 0.8213333487510681, 0.8426666855812073, 0.8106666803359985, 0.8149999976158142, 0.8356666564941406, 0.7976666688919067, 0.7960000038146973]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 4, 3, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8202857375144958, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 8, 6, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.140482171651568, 1.8976511977934771, 1.3536555194237512, 1.0572210670918867, 0.8632658941398412, 0.776032215308803, 0.702072146199934, 0.6732714403543206, 0.6717048080416875, 0.629859713531205, 0.6262486545700423, 0.5759171071919814, 0.5744261721562652, 0.563183746231136, 0.5458080780945433, 0.5325748455003269, 0.5333313416134113, 0.5067279325610438, 0.49226789582107894, 0.49402643441996474, 0.4623702415236235, 0.47078909979142436, 0.44018005607953525, 0.43601273207884295, 0.456572466833622, 0.4272178327363354, 0.44457712890748824], "accuracy": [0.29877161979675293, 0.3759080767631531, 0.5135384798049927, 0.6071853041648865, 0.674679696559906, 0.709021270275116, 0.7409853339195251, 0.7503632307052612, 0.7478536367416382, 0.7629110813140869, 0.7672698497772217, 0.7887993454933167, 0.7853652238845825, 0.7836481332778931, 0.796328067779541, 0.7964601516723633, 0.7992339134216309, 0.8076872229576111, 0.8191784620285034, 0.8098005652427673, 0.8239334225654602, 0.8206313848495483, 0.8380662798881531, 0.8363492488861084, 0.8264430165290833, 0.8383304476737976, 0.8272355198860168], "val_loss": [1.8916983604431152, 0.9664678233010429, 0.8247508151190621, 0.6296728679112026, 0.614205173083714, 0.5390654121126447, 0.5052674668175834, 0.5257183483668736, 0.6132114274161202, 0.5112556219100952, 0.4547657455716814, 0.4754760946546282, 0.4487637792314802, 0.4470881223678589, 0.433450664792742, 0.40677666664123535, 0.40821013280323576, 0.4511220284870693, 0.41913589409419466, 0.3737401451383318, 0.4187735744885036, 0.37813384192330496, 0.3951115608215332, 0.3935502256665911, 0.4115583896636963, 0.37808746099472046, 0.37618307556424824], "val_accuracy": [0.27000001072883606, 0.5533333420753479, 0.6203333139419556, 0.7149999737739563, 0.7076666951179504, 0.7646666765213013, 0.7766666412353516, 0.7649999856948853, 0.7116666436195374, 0.7540000081062317, 0.7983333468437195, 0.7823333144187927, 0.7990000247955322, 0.8050000071525574, 0.815666675567627, 0.8270000219345093, 0.8199999928474426, 0.7863333225250244, 0.8193333148956299, 0.843666672706604, 0.8146666884422302, 0.8446666598320007, 0.8256666660308838, 0.8233333230018616, 0.8220000267028809, 0.8379999995231628, 0.8373333215713501]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 4, 5, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8171428442001343, "mapping_values": [1, 4, 4, 2, 2, 1, 18, 18, 11, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), grad))), tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1873033774165176, 1.7031007468535082, 1.585954206778058, 1.0215779079926122, 0.8347586419808788, 0.8010294251690104, 0.7250351443770634, 0.6687398650280599, 0.6492548579584574, 0.6124979645789276, 0.5868139471895644, 0.5712076066318457, 0.5692006960804468, 0.5595568168149129, 0.5483802645796279, 0.503484450350537, 0.5071443726027316, 0.48653559635312504, 0.5048379626618621, 0.48792639351901973, 0.4423959734000235, 0.4450871264536178, 0.42957834919304216, 0.417714911185204, 0.42268870003534237, 0.4112046808378335, 0.39960359875567913, 0.42092425569551434], "accuracy": [0.2797516882419586, 0.44604411721229553, 0.49306565523147583, 0.6399418711662292, 0.6911900639533997, 0.6993792057037354, 0.733588695526123, 0.7518161535263062, 0.7586844563484192, 0.7721568942070007, 0.7794214487075806, 0.7936864495277405, 0.7869502305984497, 0.7884030938148499, 0.7989697456359863, 0.8133667707443237, 0.8090080618858337, 0.8198388814926147, 0.8201030492782593, 0.8173292875289917, 0.8352925777435303, 0.8329150676727295, 0.8438779711723328, 0.8421608805656433, 0.8426892161369324, 0.8467837572097778, 0.8479725122451782, 0.8459912538528442], "val_loss": [1.8237148012433733, 1.3469677993229456, 0.8651090519768851, 0.6168055364063808, 0.5832394020898002, 0.5228342499051776, 0.5133096320288522, 0.4775880915778024, 0.4780362163271223, 0.4667842047555106, 0.4345997912543161, 0.46437714781079975, 0.41801802601133076, 0.46067447321755545, 0.43088810784476145, 0.389876195362636, 0.38617447444370817, 0.46010765007564, 0.4064833266394479, 0.37848360197884695, 0.3954083238329206, 0.3847824590546744, 0.3628439392362322, 0.3687760404178074, 0.3694259098597935, 0.3680667536599295, 0.3537569727216448, 0.36747818333762033], "val_accuracy": [0.4193333387374878, 0.5053333044052124, 0.637666642665863, 0.7360000014305115, 0.718999981880188, 0.7773333191871643, 0.7713333368301392, 0.7866666913032532, 0.7910000085830688, 0.7933333516120911, 0.8146666884422302, 0.7986666560173035, 0.8213333487510681, 0.7906666398048401, 0.8209999799728394, 0.8420000076293945, 0.8389999866485596, 0.7850000262260437, 0.8180000185966492, 0.8429999947547913, 0.8320000171661377, 0.8393333554267883, 0.8513333201408386, 0.8389999866485596, 0.8360000252723694, 0.8500000238418579, 0.8500000238418579, 0.8363333344459534]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 8, 4, 5, 2, 1, 9, 1, 4, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.7760000228881836, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 10, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))), tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), grad), tf.math.add(beta, grad)))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2361189233880427, 2.0956082651092705, 1.7861748097390389, 1.3284623528893567, 1.0297808840038314, 0.9114493675015275, 0.7473416132319793, 0.719660183686181, 0.6927067839615948, 0.6420449043671217, 0.590428479784405, 0.6181830860730475, 0.5817088285819525, 0.5732617092138866], "accuracy": [0.2599392533302307, 0.3413023352622986, 0.4204200208187103, 0.518161416053772, 0.6239598393440247, 0.6695284843444824, 0.7205125093460083, 0.7293620109558105, 0.739928662776947, 0.7627789974212646, 0.7763835787773132, 0.76542067527771, 0.7754589915275574, 0.785101056098938], "val_loss": [1.818232536315918, 1.4667543002537318, 1.2478693553379603, 0.7487260273524693, 0.7588399478367397, 0.6449827636991229, 0.5383707625525338, 0.5385283742632184, 0.5023973499025617, 0.49505306993212017, 0.48341548442840576, 0.5533530541828701, 0.5110866342272077, 0.560977714402335], "val_accuracy": [0.2290000021457672, 0.5316666960716248, 0.4703333377838135, 0.6963333487510681, 0.6646666526794434, 0.6816666722297668, 0.765333354473114, 0.7730000019073486, 0.7863333225250244, 0.7823333144187927, 0.7863333225250244, 0.7433333396911621, 0.7606666684150696, 0.7423333525657654]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 4, 3, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0], [1, 7, 8, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.37857142090797424, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 8, 6, 3, 8, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.math.pow(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.251508364446285, 1.8849312496254582, 7.8539668655256945, 2.4486436162091296, 2.353233799848102, 2.3486911019849392, 2.4692744553411923], "accuracy": [0.27420419454574585, 0.31898030638694763, 0.12072381377220154, 0.10249637067317963, 0.09853387624025345, 0.09998679161071777, 0.09417514503002167], "val_loss": [1.8223235266549247, 7.670207159859793, 2.1307705470493863, 1.9932961463928223, 1.9963935443333216, 2.243649414607457, 2.008639063153948], "val_accuracy": [0.18700000643730164, 0.3033333420753479, 0.0949999988079071, 0.10066666454076767, 0.10233332961797714, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [72, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 4, 3, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3028335216070257, 2.3029242368374896, 2.3028958236158736, 2.3028158909766554, 2.302973763880681, 2.302897692576942, 2.302971252786044], "accuracy": [0.09206181764602661, 0.0952318087220192, 0.09536388516426086, 0.09708096832036972, 0.09417514503002167, 0.09430722147226334, 0.09285431355237961], "val_loss": [1.973783084324428, 1.973722185407366, 1.9736937114170618, 1.9736550194876534, 1.9736816542489188, 1.9736272948128837, 1.9736315863473075], "val_accuracy": [0.09799999743700027, 0.10366666316986084, 0.09566666930913925, 0.10233332961797714, 0.10233332961797714, 0.10366666316986084, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 4, 3, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [5, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3025053446838615, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 5, 4, 3, 2, 1, 9, 1, 8, 1, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 14, 14, 9, 5, 2, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.sqrt(grad), grad))), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3029427906903512, 2.3208738327845135, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0870426595211029, 0.08308017253875732, 0.09060890227556229, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9756402288164412, 2.004238877977644, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.017999999225139618, 0.09733333438634872, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [55, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 4, 3, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 67, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0], [2, 7, 6, 4], [4, 4], [64], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 3, 7, 4, 3, 1, 0, 5, 2, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302182371306807, 2.3023590393164657, 2.303056600559594, 2.306450604983073, 2.324589152204488, 2.4607434293865103, 4.275468987779941], "accuracy": [0.10130762308835983, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736041341509138, 1.973736354282924, 1.9746876444135393, 1.980898380279541, 2.0196778433663503, 2.4060277257646834, 6.601869583129883], "val_accuracy": [0.10066666454076767, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 4, 4, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 3, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 10, 6, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), grad))), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3023108748585996, 2.302691943326473, 2.3024399651197505, 2.3026072537784077, 2.3027383077256416, 2.303031135780023, 2.3038093873050314, 2.305570028304046, 2.309247062505748], "accuracy": [0.10196803510189056, 0.10051512718200684, 0.10302469879388809, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737137385777064, 1.9736559731619698, 1.973630087716239, 1.973750046321324, 1.9738872391836983, 1.9741851261683874, 1.975017479487828, 1.977222306387765, 1.9820060729980469], "val_accuracy": [0.10199999809265137, 0.09666666388511658, 0.10199999809265137, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 8, 4, 5, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 4, 0, 2, 1, 9, 1, 5, 3, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 4, 39, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 11, 11, 7, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), grad)))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07119271159172058, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 6, 1, 3, 2, 2, 3, 1, 8, 8, 2, 3, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.09771428257226944, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 7, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3008476915990577, 2.29919921137858, 2.2993907617965252, 2.3020378521105647, 2.302435817971694, 2.3026309644132006, 2.3029407310825944, 2.3032173906980553, 2.30360472156639], "accuracy": [0.09126931428909302, 0.10527011007070541, 0.10791176557540894, 0.09298639744520187, 0.0936468094587326, 0.09536388516426086, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9695335115705217, 1.970318385532924, 1.9722557067871094, 1.9736448696681432, 1.9739361490522112, 1.974294934953962, 1.9746554919651575, 1.9750652994428362, 1.9756153651646204], "val_accuracy": [0.06933332979679108, 0.08166666328907013, 0.09399999678134918, 0.11033333092927933, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 4, 3, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 0, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.09485714137554169, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [3.7861141987197104, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.22374852001667023, 0.11491216719150543, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.056738785334996, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.11766666918992996, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 4, 8, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 0, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [53, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.07114285975694656, "mapping_values": [1, 4, 4, 2, 2, 0, 14, 14, 9, 5, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3012602344684754, 2.300783947930911, 2.300280920880708, 2.301025185272001, 2.2999637475843207, 2.300535519991285, 2.300070179640861, 2.2999567630315862, 2.2990795607422605, 2.2988962720901958, 2.29947997229116, 2.2999309670293746, 2.2999657739690424, 2.3002638812109844], "accuracy": [0.08955223858356476, 0.0952318087220192, 0.09985470771789551, 0.09668471664190292, 0.09628847241401672, 0.09192973375320435, 0.1010434553027153, 0.09549596905708313, 0.10236428678035736, 0.1022322028875351, 0.09760929644107819, 0.10302469879388809, 0.1018359512090683, 0.10210011899471283], "val_loss": [1.9703857558114188, 1.9699596677507674, 1.9697178431919642, 1.96955292565482, 1.9696927751813615, 1.9697061266217912, 1.969594955444336, 1.9694435255868095, 1.9694619178771973, 1.9695700236729212, 1.9697718620300293, 1.9699478830610002, 1.9702036040169852, 1.970496722630092], "val_accuracy": [0.04466666653752327, 0.04933333396911621, 0.057999998331069946, 0.06233333423733711, 0.06566666811704636, 0.06733333319425583, 0.07100000232458115, 0.07800000160932541, 0.07833333313465118, 0.07800000160932541, 0.07766667008399963, 0.07333333045244217, 0.07433333247900009, 0.07199999690055847]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 8, 4, 5, 2, 1, 9, 1, 8, 8, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.06971428543329239, "mapping_values": [1, 4, 4, 2, 2, 0, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), tf.math.subtract(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3012821400689885, 2.3008680548004707, 2.3004145048486873, 2.3012145110377076, 2.300180538754658, 2.300743046626911, 2.300281701543312, 2.300149648511698, 2.299269561990535, 2.29908344780591, 2.2996656960814996, 2.300119956281947, 2.300162780585621], "accuracy": [0.08928807079792023, 0.09509972482919693, 0.09893012791872025, 0.09602430462837219, 0.09602430462837219, 0.09166556596755981, 0.10038304328918457, 0.09470347315073013, 0.10196803510189056, 0.10117553919553757, 0.09615638852119446, 0.10302469879388809, 0.10011887550354004], "val_loss": [1.9704471315656389, 1.9700656618390764, 1.9698786735534668, 1.9697414125714983, 1.9698875972202845, 1.969902174813407, 1.96977812903268, 1.9696245193481445, 1.9696383476257324, 1.9697456359863281, 1.969954150063651, 1.9701307160513741, 1.9703844615391322], "val_accuracy": [0.044333335012197495, 0.04866666719317436, 0.056333333253860474, 0.061666667461395264, 0.06433333456516266, 0.06700000166893005, 0.06966666877269745, 0.07633333653211594, 0.07633333653211594, 0.07599999755620956, 0.07599999755620956, 0.07233333587646484, 0.070333331823349]}}]