[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.8485714197158813, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 5, 2, 0, 5, 3, 2, 1, 0, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1593359400961205, 1.2957474627137073, 0.8723522190010984, 0.7609592489184737, 0.6906351663527504, 0.6585475833046596, 0.6156490043232768, 0.5871349249171417, 0.558042034559939, 0.5389233975992416, 0.5277667880341708, 0.5126848092814164, 0.5013130605889979, 0.4834581748282889, 0.4601112307298925, 0.46042388657521516, 0.44568063185089346, 0.43868057586655185, 0.41527433099606254, 0.4095353349057234, 0.39393246489949846, 0.38604133181237527, 0.37557621682246034, 0.3706668886400217, 0.35733510053326284, 0.35682930150099434, 0.3403124391497276, 0.337491789029936, 0.3339265800737954, 0.32501720686976654, 0.3302516615141998, 0.31521613204468196, 0.30907625681483875, 0.3019638556286864, 0.2887899377964523, 0.29082553994622545, 0.28932024002185414, 0.27672445572535787], "accuracy": [0.272090882062912, 0.5542200207710266, 0.6799629926681519, 0.7125874757766724, 0.7388719916343689, 0.7574957013130188, 0.7691190242767334, 0.7832518815994263, 0.7943468689918518, 0.7985734939575195, 0.805177628993988, 0.81112140417099, 0.8101968169212341, 0.8202351331710815, 0.83119797706604, 0.8305375576019287, 0.835160493850708, 0.8380662798881531, 0.845859169960022, 0.8477083444595337, 0.8556333184242249, 0.8577466607093811, 0.8601241707801819, 0.8679170608520508, 0.8676528930664062, 0.8639545440673828, 0.8761062026023865, 0.8774270415306091, 0.8759741187095642, 0.8819178342819214, 0.8755778670310974, 0.8860124349594116, 0.8856161832809448, 0.8885219693183899, 0.8920882344245911, 0.8938053250312805, 0.8887861371040344, 0.895918607711792], "val_loss": [1.2852656160082137, 0.7000866276877267, 0.5858286619186401, 0.544199926512582, 0.5093965189797538, 0.4938915627343314, 0.4694664478302002, 0.44933485984802246, 0.4308375971657889, 0.4208484632628305, 0.4132894277572632, 0.3938042266028268, 0.3926576631409781, 0.38624236413410734, 0.3732310448374067, 0.36798212357929777, 0.3609927552086966, 0.3561014873640878, 0.3540123190198626, 0.34823849371501375, 0.3442735416548593, 0.3373895117214748, 0.33705746276038034, 0.33186947447913034, 0.3250820551599775, 0.3280879259109497, 0.32640278339385986, 0.31948184967041016, 0.3231055225644793, 0.3237371359552656, 0.32329180410930086, 0.3145778349467686, 0.3154255747795105, 0.3157910534313747, 0.30998257228306364, 0.31290948390960693, 0.3042345217296055, 0.32938276869910105], "val_accuracy": [0.5913333296775818, 0.722000002861023, 0.7409999966621399, 0.7593333125114441, 0.7806666493415833, 0.7853333353996277, 0.7973333597183228, 0.8066666722297668, 0.8133333325386047, 0.815666675567627, 0.8243333101272583, 0.8389999866485596, 0.8413333296775818, 0.8420000076293945, 0.846666693687439, 0.8523333072662354, 0.8486666679382324, 0.8556666374206543, 0.8529999852180481, 0.856333315372467, 0.8569999933242798, 0.859000027179718, 0.8576666712760925, 0.8619999885559082, 0.8679999709129333, 0.8686666488647461, 0.8703333139419556, 0.8730000257492065, 0.8709999918937683, 0.8669999837875366, 0.8676666617393494, 0.8726666569709778, 0.8733333349227905, 0.871666669845581, 0.8709999918937683, 0.8709999918937683, 0.8693333268165588, 0.8683333396911621]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [30, 97, 31, 49, 25], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [5, 1, 0, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [0, 1, 5, 1, 2], [1, 0, 2, 0, 3, 1, 3, 0, 2, 0, 1, 0, 1, 3], [15, 52, 13, 20, 37]], "fitness": -0.8162857294082642, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.257055654974189, 1.822805205151673, 1.2932967571392822, 0.9451855769671973, 0.8504195341250176, 0.7890961979358518, 0.7294804522736418, 0.70626342806755, 0.6604950869355802, 0.6367842019934774, 0.6108165986785767, 0.5867337224867996, 0.5737496810015466, 0.5393076283332457, 0.5215011393436587, 0.521339409493216, 0.4922448842989345, 0.4880087196889917, 0.4614902746447514, 0.45234830983169105, 0.43224973762276275, 0.41902450765475086, 0.4092549916074859, 0.4049954716366642, 0.3966103653236387, 0.38364434996852315, 0.3678318602911879, 0.3659693561233565, 0.3610365543194167, 0.34856416156515235, 0.3444267422090731, 0.33355583830548, 0.32310527825257906, 0.3228774533382323, 0.30736122258807597, 0.3025530960030481, 0.29828338063844934, 0.29119467161366525, 0.29056980682401895, 0.2821921948405021, 0.27130403938373443, 0.2748147994319225, 0.2632041401662185, 0.2603863156695234, 0.2549064638293131, 0.25249336182031934, 0.24523713621071633, 0.23559125274392229, 0.22552620396638007, 0.23253535021801572, 0.22041579440537223, 0.21637134209104014, 0.21097307818251798, 0.20784816044731982, 0.20898365518790446, 0.20852739910573345], "accuracy": [0.190859854221344, 0.4341566562652588, 0.5638620853424072, 0.6536785364151001, 0.6884163022041321, 0.7028133869171143, 0.7236824631690979, 0.7364945411682129, 0.7464007139205933, 0.7606657147407532, 0.7671377658843994, 0.7860256433486938, 0.7821952104568481, 0.8001585006713867, 0.8049134612083435, 0.8068947196006775, 0.8120459914207458, 0.8202351331710815, 0.8305375576019287, 0.8342359066009521, 0.8401796221733093, 0.8448025584220886, 0.8467837572097778, 0.852859616279602, 0.8527275323867798, 0.8560295701026917, 0.8602562546730042, 0.86553955078125, 0.8647470474243164, 0.8705587387084961, 0.8737286925315857, 0.8737286925315857, 0.8798044919967651, 0.8775591254234314, 0.8803328275680542, 0.8891823887825012, 0.8889182209968567, 0.8920882344245911, 0.8848236799240112, 0.8916919827461243, 0.9001452922821045, 0.8976356983184814, 0.8986923694610596, 0.90423983335495, 0.9000132083892822, 0.8988244533538818, 0.904768168926239, 0.9119006991386414, 0.9133535623550415, 0.9122969508171082, 0.9144102334976196, 0.9145423173904419, 0.9167877435684204, 0.9154669046401978, 0.9173160791397095, 0.9190331697463989], "val_loss": [1.808605330330985, 0.9663666657039097, 0.7202222347259521, 0.6568990434919085, 0.595482519694737, 0.5697462558746338, 0.551403284072876, 0.5231818131038121, 0.4935038260051182, 0.4781853471483503, 0.4575768368584769, 0.44439571244376047, 0.42476544209889006, 0.42166680097579956, 0.4042234250477382, 0.39952909094946726, 0.38267020668302265, 0.38161568130765644, 0.3725630981581552, 0.3709362234388079, 0.35848026616232737, 0.3613349710191999, 0.349561836038317, 0.3514166133744376, 0.34209315265928, 0.3372454217502049, 0.34527517216546194, 0.3349008049283709, 0.3283018044063023, 0.3329185588019235, 0.3302466869354248, 0.3281280994415283, 0.32545832225254606, 0.3241459216390337, 0.32459029129573275, 0.32152930327824186, 0.3191888587815421, 0.31810624258858816, 0.31807284695761545, 0.31602818625313894, 0.3212004133633205, 0.3128886478287833, 0.3252285804067339, 0.3176485981260027, 0.3178946205547878, 0.3143472671508789, 0.32041083914893015, 0.3180216039930071, 0.3190117818968637, 0.31612696817943026, 0.31409204857689993, 0.31630739143916536, 0.3150919335229056, 0.3250780531338283, 0.3224234070096697, 0.3310199890817915], "val_accuracy": [0.4546666741371155, 0.6303333044052124, 0.7103333473205566, 0.7276666760444641, 0.7246666550636292, 0.7429999709129333, 0.7553333044052124, 0.7680000066757202, 0.7820000052452087, 0.7873333096504211, 0.8073333501815796, 0.8046666383743286, 0.8180000185966492, 0.8209999799728394, 0.8320000171661377, 0.8333333134651184, 0.843666672706604, 0.8403333425521851, 0.8473333120346069, 0.8416666388511658, 0.8539999723434448, 0.847000002861023, 0.8529999852180481, 0.8523333072662354, 0.8586666584014893, 0.8613333106040955, 0.8600000143051147, 0.8600000143051147, 0.8646666407585144, 0.8679999709129333, 0.8640000224113464, 0.8666666746139526, 0.871666669845581, 0.8703333139419556, 0.8693333268165588, 0.8693333268165588, 0.8726666569709778, 0.8709999918937683, 0.8673333525657654, 0.875, 0.8773333430290222, 0.8740000128746033, 0.8696666955947876, 0.878000020980835, 0.8776666522026062, 0.8769999742507935, 0.878333330154419, 0.8769999742507935, 0.875333309173584, 0.8790000081062317, 0.8823333382606506, 0.8793333172798157, 0.8793333172798157, 0.8743333220481873, 0.8820000290870667, 0.8820000290870667]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [15, 97, 31, 49, 25], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 4, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 0, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [0, 1, 5, 1, 2], [1, 0, 2], [15, 52, 13, 20, 37]], "fitness": -0.776285707950592, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2995566266198058, 2.2831452278932796, 2.254447355970746, 2.2086328870317073, 2.1362409692131186, 2.015505430610535, 1.818640077764395, 1.5987591266065242, 1.4417653389264249, 1.3743426714905846, 1.3135252842703484, 1.1658094843947704, 1.004599658269231, 0.9459664415626667, 0.9128550230283716, 0.906580736238439, 0.862046786240142, 0.837144728286974, 0.8301618837283634, 0.8219503367880883, 0.8110645461422562, 0.8200443467412406, 0.7958080851642794, 0.7802161982172532, 0.770291681436736, 0.7506276552057726, 0.7631698432867443, 0.7335705962305166, 0.730157325509013, 0.7243882470268851, 0.7054060752428659, 0.6940920393086852, 0.687179583537029, 0.6715054602796816, 0.669477488079469, 0.669913929876414, 0.6601506939511872, 0.6582351374887535, 0.6443165689569029, 0.633810748710388, 0.6220085956180856, 0.613468703222533, 0.6046638605365066, 0.5997439699166046, 0.5942421150465746, 0.5931824371563115, 0.5843030191557425, 0.5743690161751623, 0.5704848585489671, 0.5522219924926128, 0.5545515275634496, 0.5436739841425156, 0.5415517732672263, 0.5414887763773367, 0.5301923559971962, 0.5234461502195302, 0.5253834232772582, 0.5148467753880123, 0.5210250003494371, 0.5194531793387149, 0.5152658181671673, 0.502786912064369, 0.4984665068227853, 0.494959714051802, 0.49597146585947804, 0.4834753552471658, 0.48601383791151237, 0.48056399010947476, 0.4752874961264334, 0.47515039658659813, 0.47229405049603174, 0.47511341948598024, 0.46461147847759443, 0.46319940120174646, 0.464623221360209, 0.46352978352038554, 0.4553742203312842, 0.45399383903573204, 0.4390951149640948, 0.4370546699428382, 0.4447671129813425, 0.4251419792613333, 0.42474819551904863], "accuracy": [0.09668471664190292, 0.14093250036239624, 0.22493726015090942, 0.3086778521537781, 0.35860520601272583, 0.3879276216030121, 0.42926958203315735, 0.45264825224876404, 0.4928014874458313, 0.524501383304596, 0.5556729435920715, 0.6036190986633301, 0.6429798007011414, 0.6413947939872742, 0.6501122713088989, 0.6572447419166565, 0.6729626059532166, 0.6820763349533081, 0.6828688383102417, 0.6861709356307983, 0.689869225025177, 0.6827367544174194, 0.7022850513458252, 0.7073041796684265, 0.7098137736320496, 0.7074362635612488, 0.6985867023468018, 0.7065116763114929, 0.7127195596694946, 0.7176066637039185, 0.7289658188819885, 0.7313432693481445, 0.7387399077415466, 0.7371549606323242, 0.7473253011703491, 0.7437590956687927, 0.7498348951339722, 0.7508915662765503, 0.7512878179550171, 0.7553823590278625, 0.7593448758125305, 0.7630431652069092, 0.7695152759552002, 0.7738739848136902, 0.7791573405265808, 0.7821952104568481, 0.7761194109916687, 0.7808743715286255, 0.7865539789199829, 0.7880068421363831, 0.7878747582435608, 0.7918372750282288, 0.7932901978492737, 0.7998943328857422, 0.8004226684570312, 0.802271842956543, 0.8000264167785645, 0.804649293422699, 0.804649293422699, 0.8030643463134766, 0.8084797263145447, 0.8150838613510132, 0.8142913579940796, 0.8156121969223022, 0.8131026029586792, 0.8112534880638123, 0.8121780753135681, 0.8182538747787476, 0.8240655064582825, 0.8207634687423706, 0.8245938420295715, 0.8245938420295715, 0.8276317715644836, 0.8224804997444153, 0.8255184292793274, 0.8276317715644836, 0.8322546482086182, 0.8290846943855286, 0.8376700282096863, 0.8341038227081299, 0.8322546482086182, 0.8383304476737976, 0.8379341959953308], "val_loss": [1.9627795219421387, 1.9410668781825475, 1.9067491122654505, 1.8549883025033134, 1.766030720302037, 1.605933359691075, 1.3500196252550398, 1.07199798311506, 0.8760061264038086, 0.8067302192960467, 0.7496075119291034, 0.7269781146730695, 0.6755132675170898, 0.6862506866455078, 0.6907402276992798, 0.6704367228916713, 0.6332598073141915, 0.6182061433792114, 0.6126017570495605, 0.6028664112091064, 0.597699795450483, 0.5897466114589146, 0.5913617100034442, 0.587966765676226, 0.572691832269941, 0.5700795820781163, 0.5635402372905186, 0.5604369129453387, 0.5564273255211967, 0.5450539588928223, 0.5333481005259922, 0.5250600916998727, 0.520942040852138, 0.518525413104466, 0.5162219660622733, 0.5128553594861712, 0.5074902602604457, 0.5010524647576469, 0.49335786274501253, 0.485973630632673, 0.4808884688786098, 0.47545417717524935, 0.47089220796312603, 0.47093883582523893, 0.4690760884966169, 0.46313866547175814, 0.4580686092376709, 0.4525044986179897, 0.4463860307421003, 0.4434482881001064, 0.44200762680598665, 0.4409585680280413, 0.440405011177063, 0.43686117444719585, 0.4316303900309971, 0.4279942086764744, 0.4242599095617022, 0.4192922796521868, 0.4155422108513968, 0.416705242225102, 0.41930733408246723, 0.41790562868118286, 0.4171924761363438, 0.4135396480560303, 0.4088984302112034, 0.4056871107646397, 0.40395560434886385, 0.4019021562167576, 0.4042137435504368, 0.4084565298897879, 0.40615804706301006, 0.402348382132394, 0.40209297622953144, 0.4008110250745501, 0.39670256205967497, 0.3934143270765032, 0.3917363796915327, 0.3898458480834961, 0.39054425273622784, 0.39395993096487864, 0.39254153626305716, 0.3932070391518729, 0.39714585883276804], "val_accuracy": [0.1003333330154419, 0.3059999942779541, 0.38233333826065063, 0.4176666736602783, 0.44433334469795227, 0.4893333315849304, 0.5453333258628845, 0.6166666746139526, 0.6733333468437195, 0.6443333625793457, 0.6946666836738586, 0.7056666612625122, 0.718666672706604, 0.6940000057220459, 0.7213333249092102, 0.722000002861023, 0.7329999804496765, 0.7333333492279053, 0.7286666631698608, 0.7173333168029785, 0.7269999980926514, 0.7433333396911621, 0.7426666617393494, 0.7396666407585144, 0.749666690826416, 0.7536666393280029, 0.7563333511352539, 0.7509999871253967, 0.7509999871253967, 0.7593333125114441, 0.7706666588783264, 0.7739999890327454, 0.777999997138977, 0.7753333449363708, 0.7733333110809326, 0.7760000228881836, 0.781000018119812, 0.7806666493415833, 0.7863333225250244, 0.7900000214576721, 0.7960000038146973, 0.7963333129882812, 0.7919999957084656, 0.7953333258628845, 0.7986666560173035, 0.8050000071525574, 0.8056666851043701, 0.8063333630561829, 0.8059999942779541, 0.8119999766349792, 0.8133333325386047, 0.8146666884422302, 0.8163333535194397, 0.8173333406448364, 0.8230000138282776, 0.8226666450500488, 0.8230000138282776, 0.8236666917800903, 0.8259999752044678, 0.8276666402816772, 0.824999988079071, 0.82833331823349, 0.8323333263397217, 0.8273333311080933, 0.8323333263397217, 0.8303333520889282, 0.8323333263397217, 0.8356666564941406, 0.8373333215713501, 0.8376666903495789, 0.8429999947547913, 0.843666672706604, 0.8383333086967468, 0.8399999737739563, 0.843666672706604, 0.8426666855812073, 0.843999981880188, 0.8493333458900452, 0.847000002861023, 0.8429999947547913, 0.8443333506584167, 0.8426666855812073, 0.8396666646003723]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 4, 2, 2, 3, 1, 8, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [13, 73, 29, 49, 25], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 8, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 1, 1, 1], [3, 1, 9, 1, 2], [0, 3, 2], [81, 15, 13]], "fitness": -0.2531428635120392, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, beta))", "other_info": {"loss": [2.9800708849731454, 2.416058432739393, 2.233124444072493, 1.631767685433077e+32, 3.2911194879239374, 3.0210458633685864, 2.8767468219797894, 3.192742592465561], "accuracy": [0.1710474193096161, 0.107647605240345, 0.19442610442638397, 0.13089419901371002, 0.10830801725387573, 0.09919429570436478, 0.09959053993225098, 0.09959053993225098], "val_loss": [2.0357093129839217, 1.8440536090305872, 3.0058138029915944, 2.92545815876552, 2.6047073772975375, 2.179928575243269, 2.7336156708853587, 2.674046720777239], "val_accuracy": [0.10066666454076767, 0.2226666659116745, 0.3293333351612091, 0.10366666316986084, 0.10366666316986084, 0.10199999809265137, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 3, 6, 2, 2, 6, 1, 6, 9, 4, 2, 6, 3, 0, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 2, 2, 3, 3, 0], [31, 32, 49, 89, 25], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [9, 8, 0, 2, 0, 9, 3, 9], [3, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1, 0], [3, 1, 9, 1, 2], [2, 0, 2], [15, 52, 13]], "fitness": -0.1168571412563324, "mapping_values": [1, 23, 23, 12, 11, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))), tf.math.pow(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.341279744598072, 8.012286162159116, 2.5364703221044613, 2.4389710033007614, 2.408656788193523, 2.38377171532038], "accuracy": [0.2366926372051239, 0.16378284990787506, 0.1022322028875351, 0.10645885765552521, 0.09998679161071777, 0.10038304328918457], "val_loss": [1.9557982172284807, 2.1850895200456892, 2.0757364545549666, 1.99149261202131, 2.104370049067906, 2.0592174530029297], "val_accuracy": [0.12999999523162842, 0.10366666316986084, 0.10199999809265137, 0.10233332961797714, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 4, 2, 2, 3, 1, 8, 4, 4, 2, 0, 3, 6, 5, 8], [2, 0, 1, 0, 1, 1, 2, 2, 0, 2, 2, 3, 2, 3], [83, 32, 29, 49, 25, 20], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [4, 8, 6, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [31], [0, 1, 0, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [1, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 16, 14, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(alpha, alpha)), grad)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))), grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09192973375320435, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 68, 55, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [2], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 0, 0, 1, 1, 1, 0, 0, 0], [8, 2, 5, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 5, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(alpha), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30254056516372, 2.30258507102535, 2.302585156366038, 2.302585017081218, 2.302585151894312, 2.3025850395343213, 2.3025850482888273, 2.3025852239142948, 2.302585079874329, 2.302585079779856], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10038304328918457, 0.09998679161071777, 0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644597189767, 1.973644392830985, 1.973644597189767, 1.973644392830985, 1.973644529070173, 1.973644392830985, 1.973644597189767, 1.973644460950579, 1.9736446653093611, 1.973644597189767], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.10233332961797714, 0.10233332961797714, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 4, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 0], [0, 1, 0], [3, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1, 1], [3, 1, 6, 1, 2], [1, 0, 2, 3], [15, 93, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 5, 3, 0, 3, 2, 1, 1, 0, 7, 3, 4, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.negative(grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 0, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 2, 1, 2, 2, 0, 2, 3, 3, 0], [31, 32, 68, 55, 25], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 6, 0, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [25, 50], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [1, 0, 0, 0, 1, 1], [8, 1, 5, 1, 2], [0, 0, 2, 1], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302536079927978, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [7, 8, 0, 0, 0, 9, 3, 9], [0, 4, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 0, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [1], [64], [1, 0, 0, 0, 1, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [58, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 1, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [453.53839897898445, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04834235832095146, 0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [528639634.28571427, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 9, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 1], [1, 0, 0], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 8, 9, 1, 2], [3, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 5, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 0, 0, 1], [0, 0, 1, 1], [7, 2, 8, 4], [2, 5], [64], [0, 1, 1, 0, 1, 1], [4, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 5, 2, 0, 5, 4, 2, 2, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [0, 32, 5, 49, 25], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [7, 8, 0, 0, 0, 9, 3, 9], [0, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98, 28], [1, 0, 1, 0, 1], [0, 0, 1], [8, 2, 8, 4], [2], [64], [0, 0, 0, 1, 1, 1, 1], [0, 1, 5, 6, 2], [1, 0, 2], [58, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(alpha), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302525567151867, 2.302584944998253, 2.3025524639229906, 2.3026062001830567, 2.3025724564435035, 2.302699999455936], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736274991716658, 1.9736206190926688, 1.9736200060163225, 1.9736221177237374, 1.9736544745309013, 1.9736900329589844], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 68, 55, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [3], [64], [0, 1, 0, 1, 1, 1], [8, 1, 5, 1, 2], [0, 0, 2, 1], [76, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 7, 7, 5, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302540583145097, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 8, 0, 2, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 1, 0], [0, 0, 1], [7, 2, 8, 4], [2, 6], [64], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 7, 1, 2, 3, 8, 5, 0], [1, 0, 2, 3, 0, 1, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 7, 7, 4, 3, 1, 5, 3, 2, 1, 0, 16, 9, 7, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.sqrt(sigma), tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.negative(alpha)), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0, 3], [0, 97, 31, 49, 25], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [4, 4, 2, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [1, 1, 0, 0, 1, 1], [2, 1, 5, 1, 2], [0, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302536079927978, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 2, 3, 6, 2, 2, 0, 0, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 2, 1, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [4, 8, 0, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [2], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 0, 0, 1, 1, 1, 0, 0, 0], [3, 1, 9, 1, 2], [0, 0, 2, 1], [15, 72, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 3], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4.072823770105122, 20.615969575139527, 60.56768635679403, 131.0194340419807, 239.0601959006819, 399.7507740968506], "accuracy": [0.09549596905708313, 0.10302469879388809, 0.09721305221319199, 0.09840179979801178, 0.09642054885625839, 0.09932637959718704], "val_loss": [6.720157487051828, 24.531238555908203, 58.81192670549665, 114.63388497488839, 197.85233415876115, 314.9373256138393], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 5, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [19, 32, 29, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 2, 6, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 1, 1], [0, 0, 1], [7, 2, 8, 4], [3], [64], [1, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 5, 4, 0, 5, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(grad)), tf.math.add(beta, grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3072431629139594, 2.34401137179167, 2.4427791337421496, 2.7803636277435224, 8.912173089161053, 2.1457869136251984e+25, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.0334169864654541, 0.012679963372647762, 0.00713247898966074, 0.04213446006178856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.989908014025007, 2.0472217287336076, 2.1865246636526927, 2.90693507875715, 47.80818721226284, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.006666666828095913, 0.004666666500270367, 0.006000000052154064, 0.007666666526347399, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 0, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [0, 32, 29, 49, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 8, 0, 0, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [68], [1, 1, 1, 0, 0, 0], [0, 0, 1, 1], [7, 2, 8, 4], [2], [64], [0, 0, 1, 1, 1, 1], [3, 1, 7, 1, 2], [0, 0, 1, 1], [76, 59, 13]], "fitness": -0.09857142716646194, "mapping_values": [1, 14, 14, 7, 7, 5, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.302174132970251, 2.3018554330202785, 2.3040842115288602, 2.3055922152454102, 2.3068924463813993, 2.3093416229482844, 2.3122661736631565, 2.3166649959437238, 2.3194653804291825, 2.3197363013714813, 2.3270439181455673, 2.329766677811854, 2.333244645694747, 2.338858904729603, 2.342351708697479, 2.3490642636852996, 2.3555994740472164, 2.3681160378937927, 2.3798037781108876, 2.390354267216598, 2.402106834834105, 2.421242721171159, 2.4183822795148413, 2.4343315655639413, 2.45293072031757, 2.4628638347630267, 2.4890456102653626, 2.5056100193976474, 2.517500153842493, 2.537936885075688, 2.5651071619568655, 2.5821462712661387, 2.5992832724853767, 2.6259230746726603, 2.6608210330500093, 2.6810923050958655, 2.7089618957274153, 2.7402541472722572, 2.770769592131984, 2.791517927252684, 2.844613260108687, 2.8590590613093974, 2.9013305258646995], "accuracy": [0.08836349099874496, 0.09192973375320435, 0.0944393053650856, 0.08757099509239197, 0.08545766770839691, 0.0870426595211029, 0.08902391046285629, 0.0874389111995697, 0.08915598690509796, 0.09351472556591034, 0.08849557489156723, 0.09100515395402908, 0.09840179979801178, 0.09694888442754745, 0.09787346422672272, 0.09391097724437714, 0.0936468094587326, 0.0952318087220192, 0.09338264167308807, 0.09417514503002167, 0.09853387624025345, 0.09219389408826828, 0.09721305221319199, 0.09853387624025345, 0.10051512718200684, 0.09906221181154251, 0.09879804402589798, 0.09311848133802414, 0.09589222073554993, 0.10249637067317963, 0.09298639744520187, 0.1022322028875351, 0.09959053993225098, 0.1026284471154213, 0.09509972482919693, 0.09576013684272766, 0.0940430611371994, 0.10117553919553757, 0.10011887550354004, 0.09840179979801178, 0.09549596905708313, 0.09642054885625839, 0.10394927859306335], "val_loss": [1.971421786717006, 1.9720019612993513, 1.9726761409214564, 1.9733904429844447, 1.9740608079092843, 1.9746657780238561, 1.9752588272094727, 1.9758387974330358, 1.9765276908874512, 1.9773966925484794, 1.9785246849060059, 1.9799493380955286, 1.9817382267543249, 1.9838825634547643, 1.9863991737365723, 1.9892887387956892, 1.9925413812909807, 1.99615478515625, 2.0001321520124162, 2.0044828823634555, 2.009220600128174, 2.0143604278564453, 2.019918578011649, 2.0259154183523997, 2.032365526471819, 2.0392842292785645, 2.0466903277805875, 2.0545998300824846, 2.0630304472787038, 2.0720038414001465, 2.081540720803397, 2.0916565486363004, 2.1023708071027483, 2.1137112889971053, 2.1256974765232632, 2.1383472851344516, 2.151679107121059, 2.1657114028930664, 2.180462156023298, 2.1959561620439803, 2.212223870413644, 2.229276725224086, 2.2471466064453125], "val_accuracy": [0.03200000151991844, 0.025333333760499954, 0.024000000208616257, 0.02566666714847088, 0.032999999821186066, 0.041999999433755875, 0.04866666719317436, 0.05966666713356972, 0.07199999690055847, 0.08100000023841858, 0.08933333307504654, 0.09266666322946548, 0.09233333170413971, 0.09433333575725555, 0.09533333033323288, 0.09666666388511658, 0.09700000286102295, 0.09733333438634872, 0.0976666659116745, 0.09799999743700027, 0.09833333641290665, 0.0989999994635582, 0.10000000149011612, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.10100000351667404, 0.10066666454076767, 0.10100000351667404, 0.10100000351667404, 0.10133333504199982, 0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10266666859388351, 0.10300000011920929, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 9, 0, 0, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 5, 3, 2, 1, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), alpha), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301892903030289, 2.300720148870045, 2.3015915999842704, 2.3016984929435083, 2.301511822091968, 2.3011139029005436], "accuracy": [0.09047681838274002, 0.09430722147226334, 0.09642054885625839, 0.0886276587843895, 0.08836349099874496, 0.09338264167308807], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]