[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8417142629623413, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, grad))))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0699706096470303, 1.3203413635984371, 1.0920589436094097, 0.7674178752318476, 0.6980555136174479, 0.649252040652929, 0.6196713129275228, 0.6024530021946869, 0.5640645780898419, 0.5448525894461307, 0.5375236912709594, 0.5054725682683483, 0.49949040970766406, 0.4947018698300699, 0.46371121584322034, 0.4587216673864428, 0.4376163315921018, 0.43803145571029606, 0.4156401426391264, 0.4014269070004302, 0.4017601414654847, 0.3870416043291569, 0.39050498485108565, 0.36817776829323134, 0.36629856325584614, 0.36213625395743604, 0.34511511550760854, 0.3391008286262941, 0.3572351644815723, 0.31975090616273055, 0.3278546651844745, 0.3135148128537674, 0.32699066733545584, 0.3037990102710001, 0.295175808657902, 0.2858815305323696, 0.2922691835026306, 0.2735979933000874, 0.27622044086062664, 0.2590492977135217, 0.2678177199264827], "accuracy": [0.3032624423503876, 0.5437855124473572, 0.6032228469848633, 0.7145687341690063, 0.7367587089538574, 0.7547219395637512, 0.7656848430633545, 0.7778365015983582, 0.7841764688491821, 0.7971205711364746, 0.7977809906005859, 0.8092722296714783, 0.8161405324935913, 0.8144234418869019, 0.8241975903511047, 0.8327829837799072, 0.8366134166717529, 0.8318583965301514, 0.8481045961380005, 0.8508783578872681, 0.8521991968154907, 0.8541803956031799, 0.8564258217811584, 0.8659358024597168, 0.8631620407104492, 0.8638224601745605, 0.8759741187095642, 0.8750495314598083, 0.8658037185668945, 0.8791441321372986, 0.8735966086387634, 0.8845595121383667, 0.8786157965660095, 0.8862766027450562, 0.8879936337471008, 0.8912957310676575, 0.8897107243537903, 0.8961827754974365, 0.8957865834236145, 0.9034473896026611, 0.8996169567108154], "val_loss": [1.4528209481920515, 0.8266298430306571, 0.6232187747955322, 0.5428317104067121, 0.5081851652690342, 0.48792234488895964, 0.4740337474005563, 0.45276217801230295, 0.4530928475516183, 0.4110898290361677, 0.41035189798900057, 0.45855462551116943, 0.39295690400259836, 0.42084685393742155, 0.39011065449033466, 0.3862672107560294, 0.40103278841291157, 0.37296984025410246, 0.36396609885352, 0.3434045485087803, 0.3522154859134129, 0.35054672615868704, 0.3425845078059605, 0.3320507322038923, 0.34675472123282297, 0.3269510694912502, 0.337017936365945, 0.37200616938727243, 0.3325576526778085, 0.3232749955994742, 0.33975517749786377, 0.3670406767300197, 0.35297354630061556, 0.3231735484940665, 0.3184573139463152, 0.31988642045429777, 0.3206131713730948, 0.333186788218362, 0.3186796988759722, 0.3211829662322998, 0.3391441021646772], "val_accuracy": [0.4090000092983246, 0.6163333058357239, 0.7226666808128357, 0.750333309173584, 0.768666684627533, 0.7826666831970215, 0.7923333048820496, 0.7960000038146973, 0.7973333597183228, 0.8203333616256714, 0.8213333487510681, 0.8080000281333923, 0.8293333053588867, 0.8100000023841858, 0.8373333215713501, 0.8320000171661377, 0.8233333230018616, 0.8356666564941406, 0.8443333506584167, 0.8526666760444641, 0.8493333458900452, 0.8476666808128357, 0.8486666679382324, 0.8579999804496765, 0.8500000238418579, 0.859666645526886, 0.862666666507721, 0.8479999899864197, 0.8663333058357239, 0.8646666407585144, 0.8610000014305115, 0.8399999737739563, 0.8613333106040955, 0.8700000047683716, 0.8736666440963745, 0.875, 0.8666666746139526, 0.8686666488647461, 0.871666669845581, 0.871666669845581, 0.8656666874885559]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 2, 2, 8, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8417142629623413, "mapping_values": [1, 4, 4, 2, 2, 1, 22, 22, 14, 8, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), grad)))), beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0700471004427636, 1.3351933654383457, 0.9576305682396828, 0.7613046259109165, 0.6854603231118545, 0.6455769575487715, 0.6601430993857338, 0.5770243607759633, 0.5668563111787931, 0.5514960151543125, 0.5241835028535387, 0.5040166426202515, 0.5060747978260898, 0.4914971226714369, 0.4668354944601161, 0.46131596903302774, 0.4377549396939266, 0.4296246314281801, 0.4188813900651555, 0.39725339720514014, 0.3964025265607442, 0.3872931109695324, 0.3873492862097796, 0.36548164844308245, 0.364972414227682, 0.354505379399005, 0.3451391740080514, 0.34151061290778884, 0.36916172330830754, 0.32329429102894996, 0.3167231287135582, 0.31089141586232794, 0.3178365697650988, 0.2962502080215486, 0.28822334773426184, 0.29127429086203743, 0.2907364465391726, 0.27275253991566756, 0.26443473205291174, 0.260543134808934, 0.2765072049710099, 0.25963234316482364, 0.25031058431230657, 0.25059037364201536], "accuracy": [0.30339452624320984, 0.5346717834472656, 0.6408664584159851, 0.7174745798110962, 0.7428345084190369, 0.755118191242218, 0.7549861073493958, 0.7798177003860474, 0.7886672616004944, 0.7932901978492737, 0.8030643463134766, 0.8076872229576111, 0.8136309385299683, 0.819442629814148, 0.8191784620285034, 0.8244617581367493, 0.8378021121025085, 0.8370096683502197, 0.8475762605667114, 0.8545766472816467, 0.8535200357437134, 0.8580108284950256, 0.8582749962806702, 0.8660678863525391, 0.8638224601745605, 0.8698983192443848, 0.8721436858177185, 0.8772949576377869, 0.8621054291725159, 0.8799365758895874, 0.8812574148178101, 0.8831065893173218, 0.8795403242111206, 0.8874653577804565, 0.8903711438179016, 0.8899748921394348, 0.8911636471748352, 0.895918607711792, 0.8982961177825928, 0.9054285883903503, 0.8938053250312805, 0.9030511379241943, 0.9054285883903503, 0.9045040011405945], "val_loss": [1.4539666857038225, 0.7392292363303048, 0.6208638293402535, 0.5470504420144218, 0.5159085818699428, 0.5235633509499686, 0.46980409962790354, 0.4497462511062622, 0.4515026467187064, 0.40861840759004864, 0.41351646184921265, 0.45411230836595806, 0.3949660658836365, 0.4247458406857082, 0.397886974470956, 0.3827256049428667, 0.38761781794684275, 0.39848439182553974, 0.35077389648982454, 0.34732172318867277, 0.34749454259872437, 0.35811220748083933, 0.34283837250300814, 0.3306873781340463, 0.34068455014910015, 0.32511121886117117, 0.34071057183401926, 0.39131698438099455, 0.33093516315732685, 0.31451899664742605, 0.32805341482162476, 0.35789244515555246, 0.33728507586887907, 0.31618039097104755, 0.3218595726149423, 0.33188619783946444, 0.32646974495479036, 0.33020773955753874, 0.3161218932696751, 0.32780721357890535, 0.32130289929253714, 0.3201970713479178, 0.3255215287208557, 0.3510458895138332], "val_accuracy": [0.4099999964237213, 0.6453333497047424, 0.7250000238418579, 0.7456666827201843, 0.7639999985694885, 0.765999972820282, 0.7893333435058594, 0.8023333549499512, 0.7956666946411133, 0.8276666402816772, 0.82833331823349, 0.8053333163261414, 0.8316666483879089, 0.8073333501815796, 0.8256666660308838, 0.8426666855812073, 0.828000009059906, 0.8339999914169312, 0.8513333201408386, 0.8560000061988831, 0.8519999980926514, 0.843666672706604, 0.8529999852180481, 0.8603333234786987, 0.8546666502952576, 0.862666666507721, 0.8519999980926514, 0.8429999947547913, 0.8616666793823242, 0.8663333058357239, 0.8663333058357239, 0.8450000286102295, 0.8679999709129333, 0.8683333396911621, 0.8676666617393494, 0.8636666536331177, 0.8679999709129333, 0.8673333525657654, 0.874666690826416, 0.8723333477973938, 0.8713333606719971, 0.8653333187103271, 0.8736666440963745, 0.8726666569709778]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8399999737739563, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 9, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.070177903563953, 1.339470093347267, 0.888342151268992, 0.7613394068389946, 0.6939843568457368, 0.6541558418134106, 0.6421510543900081, 0.5783875716077401, 0.5842016059425544, 0.5433230171539307, 0.5366991224101254, 0.5028048472405424, 0.5110181490420161, 0.49219686829765097, 0.46647733710524175, 0.46167054940066743, 0.43786421072182324, 0.434462948371989, 0.4292718421600404, 0.40570095510940035, 0.3960687538392162, 0.39422953599605576, 0.38513571719892775, 0.3667109012249486, 0.367729099293458], "accuracy": [0.30339452624320984, 0.5359926223754883, 0.6690001487731934, 0.717870831489563, 0.7333245277404785, 0.7537974119186401, 0.7510236501693726, 0.7804781198501587, 0.7803460359573364, 0.7980451583862305, 0.7965922355651855, 0.8087438941001892, 0.8105930685997009, 0.8177255392074585, 0.8211596608161926, 0.8269713521003723, 0.834632158279419, 0.8350284099578857, 0.8368775844573975, 0.8473120927810669, 0.8549728989601135, 0.8537842035293579, 0.8593316674232483, 0.870030403137207, 0.8661999702453613], "val_loss": [1.4563748836517334, 0.7966465098517281, 0.5935814380645752, 0.5503101859773908, 0.5137307814189366, 0.5077997446060181, 0.4724680015019008, 0.457510028566633, 0.45276435783931185, 0.4143891589982169, 0.4129853674343654, 0.4484194006238665, 0.4133583903312683, 0.4127759848322187, 0.40414697783333914, 0.3760581357138498, 0.38560796635491507, 0.4205320818083627, 0.35231400387627737, 0.339349559375218, 0.3501425300325666, 0.35491734743118286, 0.34628695249557495, 0.33483061620167326, 0.34396020003727507], "val_accuracy": [0.4090000092983246, 0.6320000290870667, 0.7379999756813049, 0.7443333268165588, 0.7676666378974915, 0.7753333449363708, 0.7833333611488342, 0.7956666946411133, 0.7976666688919067, 0.8190000057220459, 0.8180000185966492, 0.8103333115577698, 0.8196666836738586, 0.8096666932106018, 0.8270000219345093, 0.8443333506584167, 0.8309999704360962, 0.8266666531562805, 0.8493333458900452, 0.8553333282470703, 0.8476666808128357, 0.8443333506584167, 0.8510000109672546, 0.8536666631698608, 0.8516666889190674]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8199999928474426, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, grad))))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0701576980066307, 1.3333585114999296, 0.9266604581733878, 0.7511421947462873, 0.6898785345369499, 0.6543290657752131, 0.6426870252289052, 0.6026006689192581, 0.5700215388204065, 0.5437808528536614, 0.5335827686405296, 0.5072821252940589, 0.49656946991554674, 0.490561766717979, 0.4752228445010714, 0.4604780257275674, 0.4437022793916522, 0.4285021828284054], "accuracy": [0.30339452624320984, 0.5387663245201111, 0.656980574131012, 0.7213049530982971, 0.737022876739502, 0.7500990629196167, 0.7565711140632629, 0.7729493975639343, 0.7837802171707153, 0.7991018295288086, 0.7965922355651855, 0.8107251524925232, 0.8169330358505249, 0.8149517774581909, 0.8191784620285034, 0.8290846943855286, 0.8329150676727295, 0.8363492488861084], "val_loss": [1.455944265638079, 0.8098582199641636, 0.6088445697511945, 0.534330027444022, 0.5008349248341152, 0.5046465056283134, 0.5196533032826015, 0.45253762177058626, 0.4495727505002703, 0.4109675884246826, 0.4188109976904733, 0.4466223887034825, 0.39181033202580046, 0.4196724721363613, 0.3959202255521502, 0.391895592212677, 0.38580965995788574, 0.3880023445401873], "val_accuracy": [0.40933331847190857, 0.625333309173584, 0.737666666507721, 0.7633333206176758, 0.7726666927337646, 0.7756666541099548, 0.7703333497047424, 0.7983333468437195, 0.8026666641235352, 0.8220000267028809, 0.8186666369438171, 0.8096666932106018, 0.8339999914169312, 0.8076666593551636, 0.8306666612625122, 0.8303333520889282, 0.8289999961853027, 0.8316666483879089]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 57, 85, 46], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 3, 3, 3, 3, 1, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.7877143025398254, "mapping_values": [1, 4, 4, 2, 2, 1, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, alpha))))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2026352618490432, 1.7930069094903403, 1.4404022926037825, 1.2018673312410528, 1.1336778921300645, 0.975081118728349, 0.8952257489925047, 0.8438524640373283, 0.8043623108433033, 0.7529842142399985, 0.7324062346026504, 0.6868436546090131, 0.6879207933300191, 0.6904220290313764, 0.6575110224669147, 0.6397885049669545, 0.6297701234358366, 0.6013437863810818, 0.6046526111301225], "accuracy": [0.23735305666923523, 0.39004093408584595, 0.490159809589386, 0.5572579503059387, 0.5762779116630554, 0.6347906589508057, 0.6807554960250854, 0.6796988248825073, 0.6860388517379761, 0.7021529674530029, 0.7049266695976257, 0.7236824631690979, 0.7260599732398987, 0.7374191284179688, 0.737022876739502, 0.7473253011703491, 0.755118191242218, 0.7626469135284424, 0.765949010848999], "val_loss": [1.7739357948303223, 1.1567093304225378, 1.3967925480433874, 0.9752764020647321, 0.7973212344305856, 0.7042171614510673, 0.6673026766095843, 0.6890204633985247, 0.6090063537870135, 0.5679360798427037, 0.567372032574245, 0.5171295404434204, 0.5977958951677594, 0.5090556996209281, 0.49288787160600933, 0.5080462864467076, 0.5094502483095441, 0.4941508599690029, 0.507982611656189], "val_accuracy": [0.2746666669845581, 0.5759999752044678, 0.43799999356269836, 0.5756666660308838, 0.67166668176651, 0.7016666531562805, 0.699999988079071, 0.6626666784286499, 0.7089999914169312, 0.7293333411216736, 0.737333357334137, 0.7736666798591614, 0.7366666793823242, 0.7820000052452087, 0.7806666493415833, 0.7620000243186951, 0.7643333077430725, 0.7733333110809326, 0.7573333382606506]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [85, 66, 89, 57, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.17171429097652435, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.7877785531584265, 2.3916557001762104, 3.129504524438042, 2.380018137512489, 2.359239931009575, 2.370385250694417], "accuracy": [0.16972659528255463, 0.11345925182104111, 0.10870426893234253, 0.10315678268671036, 0.09959053993225098, 0.09602430462837219], "val_loss": [1.9991677829197474, 1.964047568184989, 2.0224342346191406, 2.0451322964259555, 2.049527781350272, 2.0391950607299805], "val_accuracy": [0.10366666316986084, 0.10000000149011612, 0.0949999988079071, 0.10199999809265137, 0.10366666316986084, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [2, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 3, 2, 2, 1, 3, 2, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 0, 1, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [74, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.1477142870426178, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 6, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.multiply(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.300942655000799, 2.3018925258937277, 2.302430720896753, 2.3018004644847645, 2.3016701342013723, 2.300691922925577, 2.298944548120777, 2.3008306752641863, 2.3012147081400567, 2.301494007239079, 2.299516761024252, 2.3008601642508375, 2.301288096345159, 2.3006490650524665, 2.3012689211428077, 2.299647132592383, 2.30069218748171, 2.2994489493450043, 2.3008741434334357, 2.299460747049564, 2.3001946836115583, 2.3002226357100395, 2.298874687068356, 2.2989621817742862, 2.2980769934545275, 2.2984993133751503, 2.296763029490259, 2.299488608674319, 2.2982189810869635, 2.297215875869477, 2.2970834673671296, 2.298431794688434, 2.2981287494327383, 2.2985854895517037, 2.297262832299987, 2.2973341124011477, 2.297740939522873, 2.29760929851988, 2.2968596855662895, 2.295527244051922, 2.2960484810729525, 2.297659510587421, 2.29552044964202, 2.295801216821314, 2.295454053610481, 2.2949853485381015, 2.295048681846652, 2.2945552637170508, 2.294629316540316, 2.294349833943069, 2.29419040078453, 2.2947301009957504, 2.2953279265921585, 2.2947113475212566, 2.295127658229289, 2.2942344249278923, 2.291454543715943, 2.294327589530577, 2.293713117178011, 2.294545923918781, 2.293644256595576, 2.293940906873579, 2.293643031468591, 2.2938972896257996, 2.293018093481985, 2.293577177555113, 2.2927922499634885, 2.29265264579255, 2.292185401242596, 2.290607639260343, 2.2928423438137076, 2.2915043593429223, 2.291487326538243, 2.291155695269656, 2.2909638078977026, 2.2920499320956678, 2.292393731403313, 2.2920969541849727, 2.291156023469158, 2.291373864455923, 2.2906320910364992, 2.2902521285020665, 2.291373667699975, 2.290771870140103, 2.2897607101472675, 2.290015907681865, 2.290290661523245, 2.2917269605450925, 2.29041414553101, 2.2886862600830646, 2.288529194010688, 2.289371917496866, 2.289149616845075, 2.289977459277081, 2.2908289037313225, 2.289180994411706, 2.2884854981613008, 2.2878613520795956, 2.2886995961558725, 2.289496276419885], "accuracy": [0.09840179979801178, 0.09179764986038208, 0.09087307006120682, 0.08928807079792023, 0.09589222073554993, 0.0952318087220192, 0.0944393053650856, 0.0936468094587326, 0.08875974267721176, 0.08889182657003403, 0.09668471664190292, 0.09615638852119446, 0.09179764986038208, 0.09668471664190292, 0.0936468094587326, 0.10117553919553757, 0.09245806187391281, 0.0956280529499054, 0.09853387624025345, 0.09615638852119446, 0.09272222965955734, 0.09932637959718704, 0.09259014576673508, 0.09800554811954498, 0.09906221181154251, 0.1002509593963623, 0.10540219396352768, 0.10091137140989304, 0.09642054885625839, 0.10355303436517715, 0.1014397069811821, 0.09668471664190292, 0.09945846349000931, 0.1010434553027153, 0.10910051316022873, 0.10672302544116974, 0.10038304328918457, 0.10302469879388809, 0.10540219396352768, 0.10738343745470047, 0.11028926074504852, 0.10236428678035736, 0.10830801725387573, 0.1018359512090683, 0.11094967275857925, 0.10817593336105347, 0.11187426000833511, 0.11227050423622131, 0.10460969805717468, 0.11279883980751038, 0.11002509295940399, 0.11213842034339905, 0.10857218503952026, 0.11345925182104111, 0.10791176557540894, 0.1158367469906807, 0.11359133571386337, 0.11174217611551285, 0.11028926074504852, 0.10870426893234253, 0.11478008329868317, 0.11227050423622131, 0.11147800832986832, 0.1146479994058609, 0.11332716792821884, 0.11332716792821884, 0.11279883980751038, 0.1142517477273941, 0.10896842926740646, 0.11795007437467575, 0.11715757846832275, 0.12098798155784607, 0.11649715900421143, 0.12217672914266586, 0.11993131786584854, 0.11438383162021637, 0.11213842034339905, 0.11702549457550049, 0.11861048638820648, 0.12178047746419907, 0.12495046854019165, 0.12151630967855453, 0.11861048638820648, 0.11979923397302628, 0.12561088800430298, 0.11927089840173721, 0.12323339283466339, 0.11913882195949554, 0.11900673806667328, 0.1200634017586708, 0.1208558976650238, 0.11702549457550049, 0.1254788041114807, 0.1216483935713768, 0.11966715008020401, 0.12230881303548813, 0.1266675442457199, 0.12851670384407043, 0.12679962813854218, 0.12270505726337433], "val_loss": [1.9708057812282018, 1.970675264086042, 1.970543588910784, 1.9704105513436454, 1.970278331211635, 1.9701473372323173, 1.9700161388942175, 1.969883850642613, 1.9697514942714147, 1.9696202959333147, 1.969489506312779, 1.9693588529314314, 1.9692271777561732, 1.9690959112984794, 1.968963963644845, 1.9688341276986259, 1.968703133719308, 1.9685732977730888, 1.9684416907174247, 1.9683097430637904, 1.9681783403669084, 1.9680465970720564, 1.9679162842886788, 1.9677867889404297, 1.967656135559082, 1.9675252096993583, 1.9673940113612585, 1.9672649928501673, 1.96713502066476, 1.9670046397617884, 1.9668755531311035, 1.9667446953909737, 1.9666150638035365, 1.9664864540100098, 1.9663566861833846, 1.9662269864763533, 1.966097286769322, 1.9659655434744698, 1.965836524963379, 1.9657062121800013, 1.9655755587986536, 1.965444837297712, 1.9653154100690569, 1.965186323438372, 1.9650557381766183, 1.9649276052202498, 1.9647979055132185, 1.9646680014474052, 1.9645377567836217, 1.9644090788705009, 1.9642796516418457, 1.9641507693699427, 1.9640206609453474, 1.9638914380754744, 1.963761465890067, 1.963632243020194, 1.9635026114327567, 1.963372026171003, 1.963240419115339, 1.9631105150495256, 1.962981837136405, 1.9628526823861259, 1.9627223014831543, 1.9625938279288155, 1.9624641282217843, 1.9623353821890694, 1.9622063636779785, 1.9620778220040458, 1.9619483947753906, 1.961817741394043, 1.9616883822849818, 1.9615583419799805, 1.9614277567182268, 1.9612974439348494, 1.961167880467006, 1.9610389981951033, 1.960911546434675, 1.9607831409999303, 1.960653850010463, 1.9605251720973425, 1.960395336151123, 1.9602676800319128, 1.9601383209228516, 1.9600095067705428, 1.959881101335798, 1.959751878465925, 1.9596234049115862, 1.9594948632376534, 1.9593641417367118, 1.9592331477573939, 1.959104061126709, 1.9589767456054688, 1.958847999572754, 1.9587206840515137, 1.958592482975551, 1.9584633282252721, 1.9583355358668737, 1.958207334790911, 1.9580762045724052, 1.95794677734375], "val_accuracy": [0.038333334028720856, 0.03999999910593033, 0.04100000113248825, 0.041999999433755875, 0.04266666620969772, 0.04266666620969772, 0.04399999976158142, 0.04466666653752327, 0.045666664838790894, 0.045666664838790894, 0.04600000008940697, 0.046666666865348816, 0.04699999839067459, 0.04800000041723251, 0.049666665494441986, 0.05000000074505806, 0.052000001072883606, 0.05366666615009308, 0.054999999701976776, 0.054999999701976776, 0.0560000017285347, 0.056333333253860474, 0.05700000002980232, 0.05833333358168602, 0.05900000035762787, 0.05966666713356972, 0.06133333221077919, 0.06199999898672104, 0.06300000101327896, 0.06433333456516266, 0.06466666609048843, 0.06599999964237213, 0.06733333319425583, 0.06833333522081375, 0.07000000029802322, 0.07066666334867477, 0.07100000232458115, 0.07133333384990692, 0.07199999690055847, 0.0729999989271164, 0.07400000095367432, 0.07533333450555801, 0.07733333110809326, 0.07766667008399963, 0.07800000160932541, 0.07866666465997696, 0.08033332973718643, 0.08133333176374435, 0.08233333379030228, 0.0833333358168602, 0.08399999886751175, 0.0846666693687439, 0.0860000029206276, 0.08733333647251129, 0.08833333104848862, 0.08900000154972076, 0.09000000357627869, 0.09066666662693024, 0.09300000220537186, 0.09399999678134918, 0.09566666930913925, 0.09799999743700027, 0.09933333098888397, 0.10133333504199982, 0.10266666859388351, 0.10400000214576721, 0.10633333027362823, 0.10700000077486038, 0.10833333432674408, 0.10833333432674408, 0.10966666787862778, 0.11133333295583725, 0.1133333370089531, 0.11433333158493042, 0.11533333361148834, 0.11633333563804626, 0.11666666716337204, 0.11766666918992996, 0.11966666579246521, 0.12066666781902313, 0.12166666984558105, 0.12333333492279053, 0.12433333694934845, 0.12566666305065155, 0.12733332812786102, 0.1289999932050705, 0.1303333342075348, 0.1316666603088379, 0.13300000131130219, 0.13500000536441803, 0.1366666704416275, 0.1379999965429306, 0.13899999856948853, 0.14133332669734955, 0.14266666769981384, 0.14399999380111694, 0.1456666737794876, 0.1469999998807907, 0.1496666669845581, 0.15199999511241913]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 9, 9, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [82, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [59, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [96, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08030643314123154, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 2, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 6, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad)))), tf.math.add(beta, grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302359194819166, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 3, 8, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 0, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 14, 11, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(beta, tf.math.add(alpha, grad))), tf.math.add(tf.math.add(beta, grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08030643314123154, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [5, 66, 89, 57, 85, 46], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 2, 1, 2, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 5, 0, 3, 3, 3, 2, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 65, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 3, 15, 15, 8, 7, 2, 8, 5, 4, 1, 0, 1, 0, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(beta, beta)))))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.square(sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302359194819166, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 4, 1, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [28, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 3, 24, 24, 14, 10, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), grad)))))), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, alpha))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 8, 2, 8, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [37, 30, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 21, 21, 14, 7, 3, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(beta, tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), grad))))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 8, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 2, 4, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08030643314123154, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 57, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 9, 2, 0, 3, 9, 5, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 8, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.square(sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06868313252925873, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 8, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 1, 2, 6, 3, 3, 2, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 38, 38, 23, 15, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(grad, beta)), tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), grad))), beta)))))), tf.math.add(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, alpha))), tf.math.square(grad))), tf.math.add(beta, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [77, 66, 89, 57, 85, 46], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 8, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 8, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), beta))), tf.math.sqrt(tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302359194819166, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [2, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 9, 2, 2, 8, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [1, 7, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04085714370012283, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 1, 8, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.square(sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3010623604000173, 2.302296090198467, 2.3031252513802865, 2.302786376671217, 2.3029444414185907, 2.302243119170401], "accuracy": [0.09826971590518951, 0.09153348207473755, 0.08915598690509796, 0.08625016361474991, 0.09298639744520187, 0.09272222965955734], "val_loss": [1.9710721969604492, 1.9712027141026087, 1.9713350704738073, 1.971468108040946, 1.9716011456080846, 1.9717326845441545], "val_accuracy": [0.03766666725277901, 0.03733333200216293, 0.036666665226221085, 0.035999998450279236, 0.03566666692495346, 0.03566666692495346]}}]