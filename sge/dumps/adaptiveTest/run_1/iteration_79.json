[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7337142825126648, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.295014867472721, 2.2547979273926453, 2.1713202860629033, 1.9920121945599207, 1.6668749727892318, 1.409117107063221, 1.3739361629793436, 1.214857970970717, 0.9886209815799631, 0.9049844717415741, 0.9092781192764173, 0.8566536830479616, 0.8087361999286117, 0.8314604899981207, 0.8232866962273139, 0.7967783374761814, 0.7565011769836258, 0.7430864987970422, 0.7561097194364026, 0.7394261119970634, 0.702513325719817, 0.6926279323857774, 0.6886337042846826, 0.693076995857923, 0.6588094495999547, 0.6515377616885474, 0.6431402619945343, 0.6169138897395862, 0.6135231815923112, 0.6111359919665307, 0.5977328766795229, 0.5802495108934331, 0.5767591801915958, 0.581872943779418, 0.5646565933867437, 0.5604537496981195, 0.5634953423561028, 0.5396338900428926, 0.5495037321385581, 0.5433317058830528], "accuracy": [0.10857218503952026, 0.21701228618621826, 0.33245277404785156, 0.39426758885383606, 0.4535728394985199, 0.5115572810173035, 0.5451063513755798, 0.6033549308776855, 0.6473385095596313, 0.6523576974868774, 0.6723021864891052, 0.6853784322738647, 0.6985867023468018, 0.6885483860969543, 0.6880200505256653, 0.7042662501335144, 0.709021270275116, 0.7049266695976257, 0.7096816897392273, 0.7217012047767639, 0.7256637215614319, 0.7396644949913025, 0.7453441023826599, 0.7378153204917908, 0.7424382567405701, 0.7490423917770386, 0.7524765729904175, 0.7614582180976868, 0.7668735980987549, 0.7728173136711121, 0.7720248103141785, 0.7800818681716919, 0.7816668748855591, 0.778761088848114, 0.7940827012062073, 0.7854973077774048, 0.7878747582435608, 0.7959318161010742, 0.7921014428138733, 0.793422281742096], "val_loss": [1.9491573061261858, 1.8923485619681222, 1.7753475052969796, 1.508394377572196, 1.116077525275094, 0.8496912717819214, 0.7453544650759015, 0.7310070480619159, 0.6723337684358869, 0.69813791343144, 0.6890006916863578, 0.6143921613693237, 0.6081138849258423, 0.6000149760927472, 0.5904821157455444, 0.586128728730338, 0.5631677252905709, 0.5744001354490008, 0.578107305935451, 0.5576096432549613, 0.5419456447873797, 0.5374525615147182, 0.5310501371111188, 0.5141842876161847, 0.491990259715489, 0.4843024356024606, 0.47497236728668213, 0.47361687251499723, 0.4754520995276315, 0.46930743966783794, 0.45702408041272846, 0.45025501932416645, 0.45266919476645334, 0.4510726417813982, 0.44559359550476074, 0.4433628150394985, 0.44379970005580355, 0.4430866071156093, 0.43619816643851145, 0.42921253613063265], "val_accuracy": [0.24500000476837158, 0.39933332800865173, 0.4476666748523712, 0.5109999775886536, 0.5920000076293945, 0.6783333420753479, 0.6940000057220459, 0.7170000076293945, 0.7133333086967468, 0.7223333120346069, 0.7210000157356262, 0.7406666874885559, 0.7390000224113464, 0.7323333621025085, 0.7443333268165588, 0.7353333234786987, 0.7443333268165588, 0.7580000162124634, 0.7596666812896729, 0.7576666474342346, 0.7580000162124634, 0.7620000243186951, 0.7693333625793457, 0.7776666879653931, 0.7789999842643738, 0.7856666445732117, 0.7870000004768372, 0.7866666913032532, 0.7889999747276306, 0.7923333048820496, 0.7976666688919067, 0.8009999990463257, 0.8059999942779541, 0.809333324432373, 0.815666675567627, 0.8143333196640015, 0.8116666674613953, 0.8119999766349792, 0.8113333582878113, 0.8116666674613953]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7331428527832031, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2950148359816924, 2.2547979273926453, 2.171319831678849, 1.992010444571959, 1.6668736227688268, 1.4091077229570734, 1.373898157070751, 1.2148064896257689, 0.9886540975537298, 0.9051378462938443, 0.909447551214495, 0.8565760314614151, 0.8091157745014423, 0.8316358037911953, 0.8236723656289692, 0.7965430766363752, 0.7570325047301264, 0.7434363510898075, 0.7568625321619389, 0.7400043744137731, 0.7028367346256731, 0.6929021221598488, 0.6885558908736118, 0.6935729403553103, 0.6589564948333269, 0.6515609337480203, 0.6441644450944601, 0.6175250659025482, 0.6140498608378309, 0.612232597748743, 0.597787356348306, 0.5799174183363833, 0.576464101489131, 0.5840640864462318, 0.5662435489111195, 0.5608602842760596, 0.5638468762776793, 0.5396293030202727, 0.5493357510157958, 0.5445525778550765], "accuracy": [0.10857218503952026, 0.21701228618621826, 0.33245277404785156, 0.39426758885383606, 0.4535728394985199, 0.5115572810173035, 0.5451063513755798, 0.6032228469848633, 0.6474705934524536, 0.6527539491653442, 0.672170102596283, 0.6860388517379761, 0.6980583667755127, 0.6892088055610657, 0.6881521344184875, 0.7040021419525146, 0.7077004313468933, 0.705058753490448, 0.7080966830253601, 0.7202483415603638, 0.7260599732398987, 0.7397965788841248, 0.7461365461349487, 0.7371549606323242, 0.7434949278831482, 0.7490423917770386, 0.7536653280258179, 0.7625148296356201, 0.7651565074920654, 0.7718927264213562, 0.7714964747428894, 0.7812706232070923, 0.7814027070999146, 0.7781006693840027, 0.7951393723487854, 0.7840443849563599, 0.7869502305984497, 0.796328067779541, 0.789988100528717, 0.7927618622779846], "val_loss": [1.9491573061261858, 1.8923486300877161, 1.775346279144287, 1.5083943435123988, 1.1160899230412074, 0.8496713127408709, 0.7453091996056693, 0.7309752191816058, 0.6724391835076469, 0.6984122821262905, 0.6889444589614868, 0.6144372395106724, 0.6084509066173008, 0.5999646697725568, 0.590576171875, 0.586966838155474, 0.5639721836362567, 0.5749390636171613, 0.578538077218192, 0.5579319851739066, 0.5422064065933228, 0.5380715642656598, 0.5320066213607788, 0.5154927117483956, 0.4924046652657645, 0.48519512585231234, 0.47617101669311523, 0.47466957569122314, 0.4764742851257324, 0.46992877551487516, 0.4572171994618007, 0.4506755896977016, 0.4542466572352818, 0.4530636583055769, 0.4472602435520717, 0.44449377059936523, 0.4448153632027762, 0.44324001244136263, 0.4354298285075596, 0.428712146622794], "val_accuracy": [0.24500000476837158, 0.39933332800865173, 0.4476666748523712, 0.5113333463668823, 0.5920000076293945, 0.6783333420753479, 0.6940000057220459, 0.7170000076293945, 0.7120000123977661, 0.7223333120346069, 0.722000002861023, 0.7413333058357239, 0.7383333444595337, 0.7329999804496765, 0.7450000047683716, 0.7350000143051147, 0.7436666488647461, 0.7563333511352539, 0.7609999775886536, 0.7559999823570251, 0.7573333382606506, 0.7609999775886536, 0.7693333625793457, 0.7796666622161865, 0.7770000100135803, 0.7853333353996277, 0.7866666913032532, 0.7876666784286499, 0.7876666784286499, 0.7919999957084656, 0.7976666688919067, 0.8006666898727417, 0.8056666851043701, 0.8096666932106018, 0.8166666626930237, 0.8149999976158142, 0.8086666464805603, 0.8086666464805603, 0.8103333115577698, 0.8109999895095825]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 8, 8, 6, 5, 5, 4, 2, 3, 3, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 8, 1, 2, 1, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.7080000042915344, "mapping_values": [1, 8, 8, 6, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3009609234504667, 2.297899807732355, 2.2927938014634957, 2.284552035346212, 2.2718944109630876, 2.2577943594039094, 2.239927452190945, 2.2190342173679016, 2.1946512144696144, 2.1648054081671555, 2.129661881519016, 2.083812811150763, 2.0241282938367826, 1.9521815469315056, 1.8652954149271408, 1.7732793855912745, 1.6724842909918862, 1.5757365101568765, 1.507486266089059, 1.4364473760372076, 1.3824812462143752, 1.3562269650745102, 1.3716203953533, 1.374966123635979, 1.360544830265456, 1.3495726031775896, 1.3203039508784813, 1.2306177866787975, 1.160443485940468, 1.1058676826829499, 1.0457182375274046, 0.9683854233996586, 0.9229921754230644, 0.9126528853186684, 0.889247703994695, 0.9014094239055299, 0.9041325986393218, 0.9157159651637377], "accuracy": [0.09377889335155487, 0.10157178342342377, 0.11187426000833511, 0.13776251673698425, 0.1744815707206726, 0.2086910605430603, 0.25241050124168396, 0.2915070652961731, 0.31726324558258057, 0.33786818385124207, 0.3605864346027374, 0.37841764092445374, 0.39426758885383606, 0.41804254055023193, 0.4278166592121124, 0.4407607913017273, 0.45304450392723083, 0.47391360998153687, 0.4777440130710602, 0.5024435520172119, 0.5238409638404846, 0.5284639000892639, 0.533879280090332, 0.544710099697113, 0.5535596609115601, 0.5639941692352295, 0.5680887699127197, 0.6015057563781738, 0.6196011304855347, 0.6343944072723389, 0.6490556001663208, 0.6559239029884338, 0.656980574131012, 0.6524897813796997, 0.6664905548095703, 0.6561880707740784, 0.6619997620582581, 0.6654338836669922], "val_loss": [1.969308308192662, 1.9648220198495048, 1.957556997026716, 1.9477075168064661, 1.935434068952288, 1.9208174433026994, 1.9037536893572127, 1.8836442402430944, 1.8592815399169922, 1.8287461825779505, 1.7900613376072474, 1.7410595757620675, 1.6795554501669747, 1.6030499935150146, 1.511014768055507, 1.4061696529388428, 1.2947277000972204, 1.1857213633401054, 1.0873187269483293, 1.0024980817522322, 0.930253267288208, 0.868152277810233, 0.8199851172310966, 0.7948820420673915, 0.7826335941042218, 0.7556132589067731, 0.731743335723877, 0.7336660964148385, 0.7371314593723842, 0.7221826655524117, 0.6910205227988107, 0.6644413982118879, 0.6583059174673898, 0.6630236421312604, 0.6700534479958671, 0.6778759786060878, 0.6871971232550484, 0.6955949578966413], "val_accuracy": [0.046666666865348816, 0.0793333351612091, 0.15733332931995392, 0.2553333342075348, 0.3370000123977661, 0.37033334374427795, 0.38733333349227905, 0.406333327293396, 0.41999998688697815, 0.43166667222976685, 0.44566667079925537, 0.46033334732055664, 0.4793333411216736, 0.4973333477973938, 0.5163333415985107, 0.5383333563804626, 0.5583333373069763, 0.5806666612625122, 0.6053333282470703, 0.6346666812896729, 0.6556666493415833, 0.675000011920929, 0.6790000200271606, 0.6783333420753479, 0.6690000295639038, 0.6880000233650208, 0.7039999961853027, 0.7106666564941406, 0.7116666436195374, 0.7160000205039978, 0.7149999737739563, 0.7233333587646484, 0.7283333539962769, 0.7203333377838135, 0.7070000171661377, 0.7086666822433472, 0.7183333039283752, 0.7283333539962769]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [4, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4, 0, 2, 4, 6, 2, 6], [3, 0, 2, 0, 3, 1, 0, 0, 0, 0, 3, 0, 2], [85, 32, 3, 66, 3, 91], [1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [3, 3, 9, 1, 2], [3, 0, 1], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 8, 8, 6, 5, 2, 0, 2, 3, 5, 4, 4], [3, 1, 2, 0, 3, 1, 0, 0, 0], [11, 32, 3, 66], [0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [4, 3, 4, 1, 2], [3, 0, 2], [56, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 0, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 0, 0, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [44.51213902045298, 532.2481863585917, 2167.9061711242944, 5728.637764062706, 11886.79081646868, 21609.415119163586], "accuracy": [0.10038304328918457, 0.09879804402589798, 0.09787346422672272, 0.09272222965955734, 0.09655263274908066, 0.10051512718200684], "val_loss": [125.40030779157367, 752.2601143973214, 2355.3069893973216, 5407.592215401785, 10383.68247767857, 17753.565290178572], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [0, 2, 2, 0, 3, 1, 0, 0, 0], [44, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2, 0], [7, 56, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.351979051771858, 2.975074884614704, 4.711665207290095, 7.6296622546247255, 11.514437347339554, 16.730389250519885, 23.20722469283983], "accuracy": [0.09206181764602661, 0.09840179979801178, 0.09747721254825592, 0.09245806187391281, 0.09694888442754745, 0.10117553919553757, 0.09576013684272766], "val_loss": [2.077165263039725, 2.6874331065586636, 4.063149997166225, 6.177358218601772, 8.992959703717913, 12.541437149047852, 16.872853415352957], "val_accuracy": [0.10133333504199982, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 0, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [17, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 3, 8, 4, 2, 1, 2], [3, 0, 2, 0, 0, 0, 2], [7, 52, 89, 63]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(alpha))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.pow(sigma, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [295788645.9597402, 5809002211.427816, 26960043549.417515, 74683159895.1367, 158585954826.61737, 292158920431.0596], "accuracy": [0.10011887550354004, 0.09893012791872025, 0.09774138033390045, 0.09285431355237961, 0.09655263274908066, 0.10051512718200684], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 7, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4, 0], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 7, 6, 5, 2, 7, 3, 9, 9, 9, 5], [4, 3, 3, 4, 1], [98, 37, 43], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 7, 9, 1, 2], [1, 0, 2], [7, 59, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 13, 7, 2, 15, 15, 11, 4, 3, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))))), tf.math.pow(tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(alpha))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [8, 8, 8, 4, 6, 2, 0, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [85, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [9, 3, 4, 1, 2], [2, 0, 2, 0], [59, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302665476565348, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 8, 5, 5, 8, 6, 2, 3, 5, 2, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [0, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 6, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302667208571932, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 8, 8, 6, 5, 8, 6, 2, 3, 1, 2, 0, 7], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [4, 3, 4, 1, 2], [0, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 13, 8, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.303828240858014, 2.304203756323832, 2.303882288532864, 2.3042107533155227, 2.304020763624456, 2.3040332982505807, 2.30431561135597, 2.3036598529735057, 2.3041669263689823], "accuracy": [0.09417514503002167, 0.09615638852119446, 0.0940430611371994, 0.0936468094587326, 0.09470347315073013, 0.09338264167308807, 0.09536388516426086, 0.09985470771789551, 0.09536388516426086], "val_loss": [1.9747145516531808, 1.9741442544119698, 1.9743341718401228, 1.9742203439985002, 1.9746391432625907, 1.9741941860743932, 1.9745325360979353, 1.975013596670968, 1.9750137329101562], "val_accuracy": [0.0949999988079071, 0.10199999809265137, 0.10233332961797714, 0.10366666316986084, 0.09799999743700027, 0.10066666454076767, 0.09666666388511658, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 0, 1, 0, 0, 0], [47, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 1, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, alpha)", "other_info": {"loss": [10.692512943634126, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2277110069990158, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1370.6807338169642, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.044333335012197495, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [96, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 1, 2], [3, 0, 0], [1, 52, 13]], "fitness": -0.09885714203119278, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3050152344112274, 2.3240925009854325, 2.374090269871234, 2.4676085857746073, 2.592429087540225, 2.793829978024089, 3.061395854367997, 3.378200539382473, 3.7639216997871907, 4.227944092428711, 4.7603256339961355], "accuracy": [0.08889182657003403, 0.09232597798109055, 0.08915598690509796, 0.09047681838274002, 0.09576013684272766, 0.1002509593963623, 0.0948355570435524, 0.09655263274908066, 0.09655263274908066, 0.09787346422672272, 0.09985470771789551], "val_loss": [1.9752753802708216, 1.9847586495535714, 2.0122863224574496, 2.061229637690953, 2.1371230397905623, 2.2456625529697964, 2.391815389905657, 2.579298496246338, 2.810485907963344, 3.0861218316214427, 3.406003338950021], "val_accuracy": [0.050999999046325684, 0.09533333033323288, 0.0989999994635582, 0.10066666454076767, 0.10233332961797714, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 0], [2, 52, 13]], "fitness": -0.09857142716646194, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3113669580739993, 2.40173861180881, 2.6643572858201514, 3.161143546280151, 3.866271317579869, 4.874532841987393, 6.136698000435155, 7.613536440197188], "accuracy": [0.08889182657003403, 0.09642054885625839, 0.09509972482919693, 0.09259014576673508, 0.09747721254825592, 0.10038304328918457, 0.09628847241401672, 0.09708096832036972], "val_loss": [1.9840963227408273, 2.056687763759068, 2.2316281454903737, 2.548360960824149, 3.0309362411499023, 3.6833109174455916, 4.49720573425293, 5.46410151890346], "val_accuracy": [0.0949999988079071, 0.10066666454076767, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 8, 6, 4, 5, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 3, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(alpha)))))))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.3014335495653153, 2.301458669644085, 2.3024926984850222, 2.3034411878665173, 2.3023546192041713, 2.3032598072243973], "accuracy": [0.09192973375320435, 0.0936468094587326, 0.08730682730674744, 0.08638224750757217, 0.09060890227556229, 0.08902391046285629], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [47, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [8, 3, 9, 1, 2], [3, 2, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [2.3014335495653153, 2.301458669644085, 2.3024926984850222, 2.3034411878665173, 2.3023546192041713, 2.3032598072243973], "accuracy": [0.09192973375320435, 0.0936468094587326, 0.08730682730674744, 0.08638224750757217, 0.09060890227556229, 0.08902391046285629], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 4, 8, 5, 2, 2, 6, 2, 3, 5, 4, 4, 3, 5, 5, 3, 9, 0], [0, 0, 1, 0, 3, 1, 0, 0, 0, 0], [17, 32, 3, 66, 61, 60, 75, 29], [0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 9, 7, 3, 9], [1, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 6, 9, 1, 2], [3, 0, 3, 0], [7, 56, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 28, 28, 18, 10, 8, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, alpha))))), tf.math.add(alpha, tf.math.pow(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))))))))), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3014335495653153, 2.301458669644085, 2.3024926984850222, 2.3034411878665173, 2.3023546192041713, 2.3032598072243973], "accuracy": [0.09192973375320435, 0.0936468094587326, 0.08730682730674744, 0.08638224750757217, 0.09060890227556229, 0.08902391046285629], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [5, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 3, 8, 1, 2, 1, 2], [3, 2, 0, 1, 1, 2, 2], [63, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3014335495653153, 2.301458669644085, 2.3024926984850222, 2.3034411878665173, 2.3023546192041713, 2.3032598072243973], "accuracy": [0.09192973375320435, 0.0936468094587326, 0.08730682730674744, 0.08638224750757217, 0.09060890227556229, 0.08902391046285629], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 0, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 0, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3014335495653153, 2.301458669644085, 2.3024926984850222, 2.3034411878665173, 2.3023546192041713, 2.3032598072243973], "accuracy": [0.09192973375320435, 0.0936468094587326, 0.08730682730674744, 0.08638224750757217, 0.09060890227556229, 0.08902391046285629], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]