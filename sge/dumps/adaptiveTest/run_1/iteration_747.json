[{"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 4, 0, 4, 3, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8317142724990845, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 7, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, grad))), grad)), alpha), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3224473829361365, 2.1310595264681704, 1.8295744917947288, 1.2824615721594876, 0.966833107341723, 0.88870085170634, 0.7841909810410609, 0.7874263781109947, 0.73096675320765, 0.6990768623515804, 0.6888243302992227, 0.6581619375212758, 0.6327292641171879, 0.6411548768288392, 0.6123252548577527, 0.5939562405183914, 0.586273465599319, 0.5617862769861767, 0.5718901375375798, 0.5660439336288874, 0.5409499014357628, 0.5205131881760726, 0.5346330418846217, 0.5021562784449646, 0.5251563247861548, 0.4837256497860333, 0.4905460278954189, 0.4867494153489904, 0.47464458727644515, 0.4965494909873492, 0.46427330146801393, 0.45875636935470254, 0.44657625212897367, 0.45005049794939894, 0.44561606940812504, 0.424455736645807, 0.41998877632084175, 0.4175221046767199, 0.40747042799575406, 0.41572407252910415, 0.4124058118042551, 0.4091605521023092], "accuracy": [0.2429005354642868, 0.25703340768814087, 0.3679831027984619, 0.5480121374130249, 0.6371681690216064, 0.672170102596283, 0.7021529674530029, 0.7024171352386475, 0.7157574892044067, 0.7345132827758789, 0.735041618347168, 0.7536653280258179, 0.7646281719207764, 0.7576277852058411, 0.7652885913848877, 0.7677981853485107, 0.7763835787773132, 0.7913089394569397, 0.783119797706604, 0.7832518815994263, 0.7993659973144531, 0.8086118102073669, 0.7991018295288086, 0.8119139075279236, 0.8005547523498535, 0.8197067975997925, 0.81548011302948, 0.8164047002792358, 0.824329674243927, 0.8148196935653687, 0.8253863453865051, 0.8248580098152161, 0.8310658931732178, 0.8256505131721497, 0.8363492488861084, 0.8441421389579773, 0.8441421389579773, 0.8475762605667114, 0.8481045961380005, 0.8401796221733093, 0.8455950617790222, 0.8436138033866882], "val_loss": [1.962688786642892, 1.80592257635934, 1.255434581211635, 0.785185694694519, 0.67413330078125, 0.6094417742320469, 0.6532167707170758, 0.5521371875490461, 0.5184342350278582, 0.527076142174857, 0.5285998582839966, 0.4749100719179426, 0.5383954048156738, 0.4846199240003313, 0.47709992953709196, 0.45161729199545725, 0.45191686494009836, 0.4687154803957258, 0.4288119077682495, 0.41847768000194, 0.4281302349908011, 0.4420266832624163, 0.41232205288750784, 0.3981786455426897, 0.4168965901647295, 0.44280738489968435, 0.3861068146569388, 0.38242792231695993, 0.44402520997183664, 0.391842714377812, 0.38007677452904837, 0.3714349865913391, 0.3810207503182547, 0.3916509321757725, 0.3598750744547163, 0.39173934289387297, 0.3523150256701878, 0.3586138146264212, 0.3796464375087193, 0.3466367891856602, 0.35469854729516165, 0.3881245255470276], "val_accuracy": [0.16766667366027832, 0.2540000081062317, 0.4699999988079071, 0.6453333497047424, 0.7086666822433472, 0.7246666550636292, 0.6963333487510681, 0.7553333044052124, 0.7706666588783264, 0.7473333477973938, 0.7680000066757202, 0.7896666526794434, 0.7456666827201843, 0.784333348274231, 0.7893333435058594, 0.8090000152587891, 0.8040000200271606, 0.7903333306312561, 0.8140000104904175, 0.8173333406448364, 0.8116666674613953, 0.7850000262260437, 0.8196666836738586, 0.8386666774749756, 0.8096666932106018, 0.784333348274231, 0.8410000205039978, 0.8420000076293945, 0.7879999876022339, 0.8360000252723694, 0.8433333039283752, 0.8463333249092102, 0.8299999833106995, 0.8259999752044678, 0.8503333330154419, 0.8253333568572998, 0.8553333282470703, 0.843666672706604, 0.8243333101272583, 0.8550000190734863, 0.8526666760444641, 0.8203333616256714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.822857141494751, "mapping_values": [1, 4, 4, 3, 1, 1, 14, 14, 7, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.square(grad), grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3224484446876636, 2.134937829345272, 1.7821619265492976, 1.254766329136885, 1.0540770314876917, 0.863664383311014, 0.7656533089312013, 0.7680031564714036, 0.7135862858067761, 0.6928860211038571, 0.6833075697805273, 0.6429415306064352, 0.6422716161326457, 0.6011819704617208, 0.6043738637066882, 0.6120988740235775, 0.5891325266102065, 0.5900548413492323, 0.5590929506146566, 0.5355685209207657, 0.547014372837841, 0.5264128941303042, 0.5271660215693096, 0.5026960779277168, 0.5063405562432812, 0.4824475741358072, 0.4802814133493829, 0.47690984774826223, 0.47888900846805804, 0.4705589092198207, 0.4614899141118354, 0.4474401462307979, 0.45140011025426124, 0.43929854490816506, 0.4433661413986323, 0.4274273882523472], "accuracy": [0.24276845157146454, 0.25637298822402954, 0.3901730179786682, 0.5398229956626892, 0.6214502453804016, 0.6761326193809509, 0.7100779414176941, 0.709021270275116, 0.7310791015625, 0.7326641082763672, 0.735569953918457, 0.7640998363494873, 0.7559106945991516, 0.7732135653495789, 0.7712323069572449, 0.7627789974212646, 0.7755910754203796, 0.7759873270988464, 0.7897239327430725, 0.793422281742096, 0.7975168228149414, 0.8064984679222107, 0.8013472557067871, 0.8042530417442322, 0.8100647330284119, 0.8202351331710815, 0.8182538747787476, 0.8208954930305481, 0.8201030492782593, 0.8278959393501282, 0.824329674243927, 0.8378021121025085, 0.8301413059234619, 0.8313300609588623, 0.8321225643157959, 0.841500461101532], "val_loss": [1.962691307067871, 1.8056302751813615, 1.1721205711364746, 0.8620575155530658, 0.7047242096492222, 0.5855943475450788, 0.5634838853563581, 0.5399324893951416, 0.5221414225442069, 0.5193712200437274, 0.516600319317409, 0.4920017889567784, 0.4884240286690848, 0.5091751302991595, 0.47262145791734966, 0.44639107159205843, 0.4966716766357422, 0.46136883326939176, 0.4352147238595145, 0.4289520723479135, 0.43932924951825825, 0.4317951628140041, 0.425798910004752, 0.3941881145749773, 0.4183261820248195, 0.3893957052912031, 0.38833437647138325, 0.38637685775756836, 0.3954354865210397, 0.4026519911629813, 0.3748560718127659, 0.38471001386642456, 0.3648050342287336, 0.42689564398356844, 0.3675210731370108, 0.3930783527238028], "val_accuracy": [0.1679999977350235, 0.23933333158493042, 0.49566665291786194, 0.6006666421890259, 0.7009999752044678, 0.7416666746139526, 0.746999979019165, 0.762666642665863, 0.7643333077430725, 0.7506666779518127, 0.7756666541099548, 0.7820000052452087, 0.7726666927337646, 0.7606666684150696, 0.7919999957084656, 0.8086666464805603, 0.7673333287239075, 0.79666668176651, 0.8056666851043701, 0.8140000104904175, 0.7996666431427002, 0.8109999895095825, 0.8053333163261414, 0.8356666564941406, 0.812333345413208, 0.8346666693687439, 0.8349999785423279, 0.8363333344459534, 0.828000009059906, 0.8299999833106995, 0.8479999899864197, 0.8339999914169312, 0.8460000157356262, 0.8153333067893982, 0.843666672706604, 0.8270000219345093]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 4, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8148571252822876, "mapping_values": [1, 4, 4, 2, 2, 1, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.add(grad, tf.math.add(beta, alpha))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.328422686584779, 2.28107898059916, 2.103333065932091, 2.0304312072709063, 1.3484988002067921, 1.036326513715849, 0.8066814805081712, 0.7690549944338624, 0.6952477403525364, 0.7046308079415844, 0.658044340281108, 0.6268307785899049, 0.6164341965340163, 0.6073415180034232, 0.584342443892638, 0.5858099720481522, 0.551559345502706, 0.5482991905559433, 0.5413991648680687, 0.5213064278523054, 0.5299725846812205, 0.5293978063374651, 0.5121144772977279, 0.4926680548079907], "accuracy": [0.23854179680347443, 0.15215955674648285, 0.2739400267601013, 0.30299827456474304, 0.5208030939102173, 0.6283186078071594, 0.702681303024292, 0.7099458575248718, 0.7366266250610352, 0.7384757399559021, 0.7536653280258179, 0.763439416885376, 0.7714964747428894, 0.7726852297782898, 0.778232753276825, 0.7839123010635376, 0.7942147850990295, 0.7927618622779846, 0.7984414100646973, 0.7964601516723633, 0.8001585006713867, 0.7988376617431641, 0.8078193068504333, 0.8178576231002808], "val_loss": [1.9715752601623535, 1.7966745921543665, 1.3421641758510046, 1.1545347486223494, 0.9601399898529053, 0.6564547164099557, 0.5895269938877651, 0.5751410382134574, 0.5733285801751273, 0.5163065195083618, 0.4938825879778181, 0.4786240543637957, 0.5226713589259556, 0.5199045283453805, 0.4627902848379953, 0.4283775431769235, 0.43083048718316214, 0.43431144101279123, 0.40197454180036274, 0.4066413130078997, 0.44844469002314974, 0.42139239822115215, 0.437719532421657, 0.4387622390474592], "val_accuracy": [0.10366666316986084, 0.35899999737739563, 0.47466665506362915, 0.47999998927116394, 0.5720000267028809, 0.7179999947547913, 0.7353333234786987, 0.734333336353302, 0.7413333058357239, 0.7586666941642761, 0.7826666831970215, 0.793666660785675, 0.7599999904632568, 0.762333333492279, 0.7990000247955322, 0.8119999766349792, 0.8213333487510681, 0.8136666417121887, 0.8243333101272583, 0.8240000009536743, 0.7983333468437195, 0.8040000200271606, 0.8023333549499512, 0.8043333292007446]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 4, 5, 4, 4, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8145714402198792, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3276637829589237, 2.2624908619710498, 1.8568953374090007, 1.6559285379089086, 1.2212816967924494, 0.9607547542296538, 0.8407555787853986, 0.7992298943712065, 0.7415829224042322, 0.7099975962459986, 0.6969496286099597, 0.6523063406653298, 0.6394495606863299, 0.6236748978556612, 0.6035588311560166, 0.586500883456691, 0.5751165491699181, 0.5803424860224701, 0.5454775128602635, 0.5469426786768878, 0.5451694729384524, 0.5076723775339637, 0.5217143978031478, 0.4828693019030605, 0.49994470738243546, 0.47504049946981225, 0.4973914948405371, 0.48406538199581695, 0.4720253822133053, 0.4671187495723959, 0.45015275326025184, 0.4351764752596849, 0.4320629467510387, 0.4419813507607175, 0.43909803633960076, 0.408076846702712, 0.4248424347058547, 0.3906183320974331, 0.3982463889448886, 0.4069382818525242, 0.4124409452586551, 0.3899215612240188], "accuracy": [0.23933430016040802, 0.17157575488090515, 0.3555673062801361, 0.4235900044441223, 0.5548804402351379, 0.6453573107719421, 0.6851142644882202, 0.6944921612739563, 0.7148329019546509, 0.728701651096344, 0.7329282760620117, 0.7594769597053528, 0.7589486241340637, 0.7604015469551086, 0.7795535326004028, 0.7757231593132019, 0.7843085527420044, 0.78113853931427, 0.7948752045631409, 0.7930260300636292, 0.7976489067077637, 0.8148196935653687, 0.8029322624206543, 0.8178576231002808, 0.81112140417099, 0.8228767514228821, 0.8144234418869019, 0.8142913579940796, 0.8285563588142395, 0.8234050869941711, 0.8272355198860168, 0.8404437899589539, 0.8380662798881531, 0.8322546482086182, 0.835160493850708, 0.8475762605667114, 0.841500461101532, 0.8568220734596252, 0.8510104417800903, 0.8428213000297546, 0.842028796672821, 0.8549728989601135], "val_loss": [1.9704279218401228, 1.6199993406023299, 1.755159650530134, 1.209219285420009, 0.7632809196199689, 0.7464401211057391, 0.6978536163057599, 0.5710551227842059, 0.5524455308914185, 0.5354331391198295, 0.5101684161594936, 0.47618324416024344, 0.49051378454480854, 0.4805377551487514, 0.5015943561281476, 0.44498326097215923, 0.445802058492388, 0.4455817937850952, 0.4249859026500157, 0.4191859705107553, 0.4215328778539385, 0.42320546082087923, 0.40602046251296997, 0.39549276658466886, 0.41264340707233976, 0.45952391624450684, 0.39616979019982473, 0.38523771933146883, 0.38529140608651297, 0.3749615464891706, 0.38572763545172556, 0.35552159377506803, 0.3619069882801601, 0.4055969204221453, 0.3780082038470677, 0.38006887265614103, 0.35291968073163715, 0.3830132143838065, 0.42911490372249056, 0.3690770609038217, 0.3666806221008301, 0.43767135483878], "val_accuracy": [0.10400000214576721, 0.30433332920074463, 0.29499998688697815, 0.5230000019073486, 0.6759999990463257, 0.6809999942779541, 0.6736666560173035, 0.753333330154419, 0.7543333172798157, 0.7556666731834412, 0.7786666750907898, 0.7856666445732117, 0.7793333530426025, 0.7876666784286499, 0.781000018119812, 0.8086666464805603, 0.8136666417121887, 0.8013333082199097, 0.8059999942779541, 0.8186666369438171, 0.8130000233650208, 0.812333345413208, 0.8183333277702332, 0.8316666483879089, 0.8196666836738586, 0.8119999766349792, 0.8266666531562805, 0.8360000252723694, 0.8343333601951599, 0.8379999995231628, 0.8353333473205566, 0.8519999980926514, 0.8383333086967468, 0.8216666579246521, 0.8296666741371155, 0.8336666822433472, 0.8529999852180481, 0.8326666951179504, 0.800000011920929, 0.8356666564941406, 0.8429999947547913, 0.7960000038146973]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [22, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 1, 2, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7397142648696899, "mapping_values": [1, 4, 4, 2, 2, 1, 17, 17, 9, 8, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, alpha))), beta), alpha), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2922774889465685, 2.231954742747055, 2.0850184426536305, 1.7352666180320562, 1.3992623396994273, 1.37354689336582, 1.1357656735801394, 0.9112963802180569, 0.9191160941908089, 0.8436695915234639, 0.8149150087927562, 0.8352061117707841, 0.8110351295456075, 0.7508060868941183, 0.721698829085678, 0.7233951065156438, 0.7127890517966402, 0.6911814421269683, 0.677033402310103, 0.6627096211543377, 0.6421663692803383, 0.6301794554012295, 0.6139255302252472, 0.6105778475384654, 0.5998059387897314, 0.5698481370996191, 0.5707835602234415, 0.5624801201701337, 0.5496762478277589, 0.5401636114202045, 0.5399286281934992, 0.5364962472356368, 0.5260872901422851, 0.5125033905745151, 0.5047484372018304, 0.5032071800059362, 0.5149976575395072, 0.4939437535232352, 0.4874344375848046, 0.4940339731675696, 0.4720808605964488, 0.4651920045403095, 0.4764850109937625, 0.47410839319764475, 0.46931477322664716, 0.46827352355578633, 0.4671320575119057, 0.4464302393958994, 0.43855578352069463, 0.42794293975707265, 0.4221634801864435, 0.4148194030834589, 0.43399912332657103, 0.4196346908386562, 0.40851444740494436, 0.39689505225427085, 0.40265716276369107, 0.3904511559995221, 0.39101786207859907, 0.38291264889168153, 0.3829191018049948, 0.3806384736560103, 0.3757321476275029, 0.3779904314232792, 0.37494992185593157, 0.3671269375752653, 0.3684687008435432, 0.35572449998171607, 0.36032386907276587, 0.3436383887044884], "accuracy": [0.1154404953122139, 0.254920095205307, 0.3803988993167877, 0.4414212107658386, 0.5160480737686157, 0.5609562993049622, 0.6289790272712708, 0.6598864197731018, 0.6653017997741699, 0.6866992712020874, 0.6917183995246887, 0.6915863156318665, 0.7000396251678467, 0.7057191729545593, 0.7206445932388306, 0.7250033020973206, 0.7338528633117676, 0.7433628439903259, 0.7473253011703491, 0.759080708026886, 0.7589486241340637, 0.7565711140632629, 0.7648923397064209, 0.7664773464202881, 0.7804781198501587, 0.7807422876358032, 0.787082314491272, 0.7942147850990295, 0.7960638999938965, 0.8029322624206543, 0.8010830879211426, 0.8017435073852539, 0.8035926818847656, 0.804649293422699, 0.81548011302948, 0.8148196935653687, 0.807158887386322, 0.8138951063156128, 0.8166688680648804, 0.8162726163864136, 0.8226125836372375, 0.8224804997444153, 0.821820080280304, 0.830669641494751, 0.8220842480659485, 0.8189142942428589, 0.8240655064582825, 0.8358209133148193, 0.8334434032440186, 0.8384625315666199, 0.8407079577445984, 0.8453308939933777, 0.8364813327789307, 0.837537944316864, 0.8455950617790222, 0.8499537706375122, 0.8429533839225769, 0.8529917001724243, 0.8537842035293579, 0.8581429123878479, 0.8498216867446899, 0.8558974862098694, 0.8599920868873596, 0.8598600029945374, 0.8582749962806702, 0.8580108284950256, 0.8590674996376038, 0.86553955078125, 0.8656716346740723, 0.8654074668884277], "val_loss": [1.9385621207101005, 1.8493494306291853, 1.6107747554779053, 1.1392075674874442, 0.8259893485477993, 0.7395916155406407, 0.6630928686686924, 0.6941799776894706, 0.679404480116708, 0.6052340609686715, 0.5945195129939488, 0.6049929516656058, 0.5793260165623256, 0.5620570693697248, 0.558930686541966, 0.5546639306204659, 0.534865311213902, 0.5255750247410366, 0.5178559337343488, 0.4920420135770525, 0.4800745078495571, 0.47293710708618164, 0.46934616565704346, 0.4738577774592808, 0.4552619286945888, 0.4493171146937779, 0.4477670873914446, 0.4458857945033482, 0.4463538612638201, 0.4373560973576137, 0.43393666403634207, 0.4286311779703413, 0.41902239833559307, 0.41911723784037996, 0.4210359624453953, 0.4209460871560233, 0.4204059328351702, 0.40911759649004253, 0.4078778624534607, 0.3978063889912197, 0.3974783590861729, 0.40020551000322613, 0.4082753232547215, 0.4002295306750706, 0.39038905927113127, 0.38657924958637785, 0.39629573481423513, 0.382173376423972, 0.3846459559031895, 0.37797525099345614, 0.38453197479248047, 0.3764251044818333, 0.38229301997593473, 0.38735281569617136, 0.3850071259907314, 0.3751616563115801, 0.37146017381123136, 0.38567084074020386, 0.38676914998463224, 0.37812975474766325, 0.3784730519567217, 0.38047257491520475, 0.39243158272334505, 0.38201441935130526, 0.3703636612210955, 0.3784193737166269, 0.3826148935726711, 0.3845479573522295, 0.3842675345284598, 0.39212621109826223], "val_accuracy": [0.3149999976158142, 0.41999998688697815, 0.49300000071525574, 0.6043333411216736, 0.6793333292007446, 0.70333331823349, 0.7236666679382324, 0.703000009059906, 0.7350000143051147, 0.7379999756813049, 0.737666666507721, 0.737666666507721, 0.746666669845581, 0.7516666650772095, 0.7663333415985107, 0.7726666927337646, 0.7670000195503235, 0.7760000228881836, 0.7803333401679993, 0.7876666784286499, 0.7876666784286499, 0.7933333516120911, 0.7950000166893005, 0.796999990940094, 0.8026666641235352, 0.8033333420753479, 0.8106666803359985, 0.8186666369438171, 0.8146666884422302, 0.8173333406448364, 0.812333345413208, 0.8163333535194397, 0.8266666531562805, 0.8289999961853027, 0.8339999914169312, 0.8353333473205566, 0.8306666612625122, 0.8379999995231628, 0.8363333344459534, 0.8356666564941406, 0.8373333215713501, 0.843999981880188, 0.843999981880188, 0.8456666469573975, 0.8393333554267883, 0.8389999866485596, 0.8413333296775818, 0.8489999771118164, 0.8443333506584167, 0.8529999852180481, 0.8533333539962769, 0.8516666889190674, 0.8479999899864197, 0.8523333072662354, 0.8529999852180481, 0.8539999723434448, 0.8543333411216736, 0.8546666502952576, 0.8560000061988831, 0.8496666550636292, 0.8460000157356262, 0.8566666841506958, 0.8586666584014893, 0.8576666712760925, 0.8606666922569275, 0.8579999804496765, 0.8579999804496765, 0.859666645526886, 0.8546666502952576, 0.8579999804496765]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [6, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 1, 4, 5, 4, 2, 2, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [98, 35, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.2954285740852356, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301685641801053, 2.3014442549090672, 2.301752658174369, 2.3008130001999745, 2.29942460262292, 2.3003075915462445, 2.299474295844271, 2.300487003778627, 2.3006538200718523, 2.299460265362787, 2.2981428877080137, 2.298798253806732, 2.2985940137638186, 2.2969783341895633, 2.296558248620417, 2.297378449533846, 2.296101003038948, 2.2959789616667035, 2.2961893679994585, 2.2938654604148336, 2.2947251461657867, 2.2965292316527965, 2.293922182717233, 2.2944142148006925, 2.293544227704396, 2.2953346659242517, 2.293173396088239, 2.2927479232543213, 2.29246937411415, 2.292953192329583, 2.2935261508461475, 2.292510023112027, 2.2911425690845553, 2.2909656439191552, 2.291244024141448, 2.2904869269039874, 2.291313126984368, 2.291409283801628, 2.2899216211168065, 2.2923553395879077, 2.289232270151727, 2.287971601384175, 2.2902269620999935, 2.290704579952292, 2.28898190308902, 2.286712548893677, 2.2875696986720797, 2.2864111012723454, 2.287476926164195, 2.285998524109197, 2.28629693747543, 2.2845895212277005, 2.28563268791494, 2.2862141601256156, 2.284413109555016, 2.285020809289471, 2.2832535179205196, 2.2855562533306926, 2.2836110458366465, 2.2833177046044595, 2.282033957195572, 2.282461250557356, 2.2820128342730888, 2.2814708889719517, 2.2816319419030484, 2.2816805788523107, 2.2802902897981023, 2.281913100547322, 2.2807602172892376, 2.280774935062425, 2.2793549704057288, 2.278678660379535, 2.2780794322671767, 2.2783263943623937, 2.2787862261760945, 2.277944795617086, 2.2790203689662865, 2.278609721730839, 2.277448561780126, 2.278325495293521, 2.2764606700676024, 2.275260738519677, 2.2753737429428758, 2.2737695909116433, 2.2747581331343496, 2.2738405435375957, 2.275675261293058, 2.2754814670448367, 2.27343533470835, 2.272198813293179, 2.27324748908398, 2.2730862450338294, 2.274006397370507, 2.2713806416301554, 2.27270289415917, 2.2722206892921246, 2.2729935707149727, 2.271689014223195, 2.269372238947211, 2.2708280585965053], "accuracy": [0.08915598690509796, 0.09047681838274002, 0.08915598690509796, 0.09496764093637466, 0.09509972482919693, 0.09325055778026581, 0.09708096832036972, 0.09140139818191528, 0.08955223858356476, 0.09245806187391281, 0.10236428678035736, 0.09549596905708313, 0.09760929644107819, 0.10949676483869553, 0.10606260597705841, 0.10474177449941635, 0.10447761416435242, 0.10408136248588562, 0.10777968913316727, 0.11398758739233017, 0.10500594228506088, 0.10659094154834747, 0.10830801725387573, 0.11094967275857925, 0.11108175665140152, 0.11002509295940399, 0.10672302544116974, 0.11121384054422379, 0.11293092370033264, 0.11781799048185349, 0.11293092370033264, 0.11570466309785843, 0.11900673806667328, 0.11359133571386337, 0.11610091477632523, 0.12191256135702133, 0.12613920867443085, 0.11900673806667328, 0.11795007437467575, 0.11411966383457184, 0.12957337498664856, 0.1258750557899475, 0.11993131786584854, 0.1258750557899475, 0.1228371411561966, 0.12772421538829803, 0.12561088800430298, 0.13089419901371002, 0.1320829540491104, 0.13076211512088776, 0.13380002975463867, 0.13393211364746094, 0.13498876988887787, 0.12851670384407043, 0.13697001338005066, 0.1372341811656952, 0.13459251821041107, 0.13010171055793762, 0.13961167633533478, 0.14251750707626343, 0.14330999553203583, 0.14172500371932983, 0.1460837423801422, 0.1422533392906189, 0.1426495909690857, 0.13855500519275665, 0.14489498734474182, 0.1414608359336853, 0.14793290197849274, 0.14674416184425354, 0.15229164063930511, 0.1538766324520111, 0.1542728841304779, 0.15532954037189484, 0.15215955674648285, 0.1516312211751938, 0.14700831472873688, 0.15097081661224365, 0.15374454855918884, 0.15070664882659912, 0.15651829540729523, 0.15836745500564575, 0.15361246466636658, 0.16655659675598145, 0.1694624274969101, 0.16272619366645813, 0.1636507660150528, 0.16074495017528534, 0.16880200803279877, 0.16695284843444824, 0.16470743715763092, 0.17197199165821075, 0.16933034360408783, 0.17038699984550476, 0.17117950320243835, 0.17355699837207794, 0.16576409339904785, 0.17250032722949982, 0.17778365314006805, 0.1760665625333786], "val_loss": [1.9706409318106515, 1.9703450202941895, 1.9700490406581335, 1.9697540828159876, 1.9694596699305944, 1.9691671643938338, 1.9688713891165597, 1.9685769762311662, 1.96828065599714, 1.9679829733712333, 1.9676931244986398, 1.9673983710152763, 1.9671051161629813, 1.9668098177228654, 1.9665171759469169, 1.96622405733381, 1.965933118547712, 1.9656427928379603, 1.965348175593785, 1.965057645525251, 1.964766570499965, 1.9644741330827986, 1.9641827855791365, 1.9638911655970983, 1.9636011804853166, 1.9633104460580009, 1.9630172593253, 1.9627235276358468, 1.9624297278267997, 1.962139402117048, 1.9618507793971471, 1.9615575245448522, 1.9612665176391602, 1.9609756469726562, 1.9606875010899134, 1.9603984696524483, 1.96011141368321, 1.959822518484933, 1.959531511579241, 1.9592396872384208, 1.958949020930699, 1.9586584227425712, 1.9583704812186105, 1.9580786568777901, 1.957789489201137, 1.9575011389596122, 1.9572110176086426, 1.956920828138079, 1.956629753112793, 1.956338950565883, 1.9560457638331823, 1.9557535307747977, 1.9554617064339774, 1.9551716532026018, 1.9548838479178292, 1.9545936584472656, 1.9543020384652274, 1.954012393951416, 1.9537190709795271, 1.9534272466387068, 1.9531349454607283, 1.9528465952192033, 1.9525527954101562, 1.9522620609828405, 1.9519738469805037, 1.9516839981079102, 1.9513907432556152, 1.9510985783168249, 1.950805732182094, 1.9505139759608678, 1.950218881879534, 1.949927874973842, 1.9496311460222517, 1.9493364606584822, 1.949042728969029, 1.9487495422363281, 1.9484549931117467, 1.9481611933026994, 1.9478661673409599, 1.9475727081298828, 1.9472759791782923, 1.9469787733895438, 1.9466801370893205, 1.946380887712751, 1.94608701978411, 1.945789064679827, 1.9454917907714844, 1.945197241646903, 1.9448951312473841, 1.9445934295654297, 1.9442941801888602, 1.9439949989318848, 1.9436989511762346, 1.9433985437665666, 1.9431016785757882, 1.9428012711661202, 1.942500182560512, 1.9422003882271903, 1.9418988909040178, 1.941598687853132], "val_accuracy": [0.04066666588187218, 0.04233333468437195, 0.04333333298563957, 0.045666664838790894, 0.04633333161473274, 0.047333333641290665, 0.05000000074505806, 0.05366666615009308, 0.055666666477918625, 0.056333333253860474, 0.058666665107011795, 0.06066666543483734, 0.06333333253860474, 0.06599999964237213, 0.06800000369548798, 0.07100000232458115, 0.07199999690055847, 0.07333333045244217, 0.07666666805744171, 0.07833333313465118, 0.07966666668653488, 0.08266666531562805, 0.0846666693687439, 0.08733333647251129, 0.08933333307504654, 0.09200000017881393, 0.09466666728258133, 0.0989999994635582, 0.10266666859388351, 0.10700000077486038, 0.10866666585206985, 0.11133333295583725, 0.11400000005960464, 0.11666666716337204, 0.11933333426713943, 0.12099999934434891, 0.12466666847467422, 0.1276666671037674, 0.13066667318344116, 0.1340000033378601, 0.1379999965429306, 0.1420000046491623, 0.1456666737794876, 0.1483333259820938, 0.15399999916553497, 0.15800000727176666, 0.16033333539962769, 0.16333332657814026, 0.16500000655651093, 0.1666666716337204, 0.16966666281223297, 0.17166666686534882, 0.1733333319425583, 0.17633333802223206, 0.1783333271741867, 0.1809999942779541, 0.18400000035762787, 0.18666666746139526, 0.1913333386182785, 0.19499999284744263, 0.19566667079925537, 0.19900000095367432, 0.20266667008399963, 0.2056666612625122, 0.20933333039283752, 0.2123333364725113, 0.2150000035762787, 0.21766667068004608, 0.22033333778381348, 0.2226666659116745, 0.22566667199134827, 0.22866666316986084, 0.23100000619888306, 0.23399999737739563, 0.23766666650772095, 0.24066667258739471, 0.2436666637659073, 0.2473333328962326, 0.24966666102409363, 0.2523333430290222, 0.25566667318344116, 0.25866666436195374, 0.2606666684150696, 0.2630000114440918, 0.2653333246707916, 0.26766666769981384, 0.26899999380111694, 0.2723333239555359, 0.2750000059604645, 0.2763333320617676, 0.27799999713897705, 0.2800000011920929, 0.28166666626930237, 0.2840000092983246, 0.2863333225250244, 0.28733333945274353, 0.28966665267944336, 0.2903333306312561, 0.2919999957084656, 0.29366666078567505]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 4, 5, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.26571428775787354, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.square(grad), tf.math.add(beta, grad))), alpha), tf.math.negative(tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4719554385048066, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2705058753490448, 0.12838461995124817, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8439951624189104, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.2639999985694885, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [6, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 6, 2, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [98, 35, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [8, 5, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 7, 7, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), grad), alpha), alpha), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [76, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 2, 1, 1, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07158895581960678, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 4, 1, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 1, 1, 1, 0, 0, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0], [6, 5, 9, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha))), alpha), alpha), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07185312360525131, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [6, 66, 89, 50, 85, 46], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 1, 0, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [98, 35, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [8, 5, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07185312360525131, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 3, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 4, 2, 6, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [3, 6, 3, 4, 7, 1, 8], [6, 0, 3], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06749438494443893, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 6, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 2, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 1, 3, 2, 3, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 19, 19, 11, 8, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(tf.math.square(tf.math.pow(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3885328641.216818, 585606310386.0013, 10182301125581.01, 71933504605057.27, 310508392576635.3, 1042729839083353.4], "accuracy": [0.09932637959718704, 0.09668471664190292, 0.09932637959718704, 0.10474177449941635, 0.10460969805717468, 0.09985470771789551], "val_loss": [32183812096.0, 1734792221257.1428, 18619835463387.43, 101508491397412.58, 380212094922166.9, 1121598458747757.8], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [2, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 2, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [38, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [72, 91, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0], [6, 5, 9, 4], [6, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021811760333173, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [38, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0], [4, 5, 3, 4], [5, 0], [53, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [14, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), tf.math.add(beta, grad)), grad), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 6, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [76, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 0, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 3, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [82, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 4, 1, 5, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 2, 3, 2, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 53, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 7, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.square(beta))), tf.math.add(beta, grad)), tf.math.pow(beta, tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.995317222892238, 3275057.541914596, 4.96523878595545e+25, 2.308748916753956, 2.3042195738582185, 2.3033928662054355, 2.30310590093036, 2.3030928548269456], "accuracy": [0.19059570133686066, 0.13459251821041107, 0.09879804402589798, 0.09998679161071777, 0.10038304328918457, 0.09576013684272766, 0.09774138033390045, 0.09615638852119446], "val_loss": [1.9649981771196638, 3.167921024608331e+26, 1.9835474831717355, 1.975754737854004, 1.9744742257254464, 1.9741277694702148, 1.9737845148359026, 1.973724365234375], "val_accuracy": [0.10333333164453506, 0.10233332961797714, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.09666666388511658, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [76, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 3, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 0, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [59, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [2, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3018182786133594, 2.3019025287671, 2.302534367193903, 2.3019195990461037, 2.300849795325746, 2.3020394698991877], "accuracy": [0.08875974267721176, 0.08928807079792023, 0.0874389111995697, 0.09285431355237961, 0.09153348207473755, 0.09008057415485382], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [6, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [98, 35, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [8, 5, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.03457142785191536, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30220275258407, 2.304826456589422, 2.31064556964778, 2.3180636711848677, 2.3279843094200583, 2.3432207621162626], "accuracy": [0.08770307898521423, 0.08321225643157959, 0.06868313252925873, 0.06194690242409706, 0.04583278298377991, 0.0338132344186306], "val_loss": [1.972273894718715, 1.9760092326572962, 1.9822137015206474, 1.991025447845459, 2.002570492880685, 2.0171192032950267], "val_accuracy": [0.03433333337306976, 0.01966666616499424, 0.009666666388511658, 0.0063333334401249886, 0.00566666666418314, 0.004999999888241291]}}]