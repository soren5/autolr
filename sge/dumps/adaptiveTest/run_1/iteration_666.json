[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 2, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.836571455001831, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.add(beta, grad))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4385256496765013, 2.2799457826980936, 2.15087604122769, 2.134925926460676, 1.6152572637346867, 1.1881174916809167, 0.9594125996381064, 0.8313170095570823, 0.695129130266409, 0.6899151016519275, 0.6850004314494533, 0.6113372350554692, 0.5970917640502631, 0.5789364588621223, 0.5647494217439681, 0.5441906108690558, 0.5269482989022131, 0.5224806142993308, 0.5311724580101066, 0.4923043448407621, 0.5014491022821934, 0.4956973604853001, 0.4706071800110819, 0.49496545877911396, 0.4525121480616218, 0.45023312604564325, 0.44592373999527746, 0.4563027073158926, 0.4195721468173155, 0.43015886845763146, 0.4271763418533578, 0.42722886877919014, 0.41529838563885435, 0.3992278779289899, 0.39622258427136486, 0.3891559053586852, 0.39752656087946536, 0.38401949229320403, 0.37643856945810633, 0.4102169844720342, 0.36479627006735077, 0.35623722160418336, 0.34028077079887326, 0.3729897301234211, 0.3649226273205208, 0.3443293356112895], "accuracy": [0.23273015022277832, 0.19455818831920624, 0.27063795924186707, 0.24184387922286987, 0.4270241856575012, 0.5787875056266785, 0.6602826714515686, 0.6956809163093567, 0.7429665923118591, 0.7416457533836365, 0.7411174178123474, 0.7711002230644226, 0.7791573405265808, 0.7820631265640259, 0.7872143983840942, 0.7936864495277405, 0.8047813773155212, 0.800818920135498, 0.7989697456359863, 0.8197067975997925, 0.8115176558494568, 0.8112534880638123, 0.821820080280304, 0.8094043135643005, 0.8335754871368408, 0.8310658931732178, 0.8380662798881531, 0.8296129703521729, 0.8457271456718445, 0.8418967127799988, 0.8424250483512878, 0.8397833704948425, 0.8461233377456665, 0.8506141901016235, 0.8518029451370239, 0.8545766472816467, 0.8511425256729126, 0.8581429123878479, 0.8593316674232483, 0.8461233377456665, 0.8632941246032715, 0.8636903762817383, 0.8688416481018066, 0.8590674996376038, 0.8578787446022034, 0.8696341514587402], "val_loss": [1.972667625972203, 1.7545232091631209, 1.8424662862505232, 1.5995704446520125, 1.0894972256251745, 0.9543184893471854, 0.7701594829559326, 0.5767588445118496, 0.5960190636771066, 0.539785555430821, 0.4819872890199934, 0.4973762205668858, 0.4631811039788382, 0.4494519404002598, 0.4586989539010184, 0.43491504873548237, 0.42268372433526175, 0.4355293682643345, 0.4048672914505005, 0.40618585688727243, 0.4119139994893755, 0.39135713236672537, 0.4181310875075204, 0.43063498394829886, 0.3756585717201233, 0.43182043518338886, 0.40273830720356535, 0.3670156683240618, 0.37178879976272583, 0.3719379987035479, 0.39111622742244173, 0.37565990005220684, 0.3669449857303074, 0.35707609142575947, 0.3883689982550485, 0.3822808010237558, 0.38660195044108797, 0.3572565657751901, 0.38495380537850515, 0.36291076455797466, 0.34508304936545237, 0.353950423853738, 0.344761107649122, 0.3531897153173174, 0.3592536279133388, 0.345968885081155], "val_accuracy": [0.10999999940395355, 0.4423333406448364, 0.3333333432674408, 0.39133334159851074, 0.5630000233650208, 0.6613333225250244, 0.6916666626930237, 0.7316666841506958, 0.7183333039283752, 0.7403333187103271, 0.7839999794960022, 0.7789999842643738, 0.8050000071525574, 0.7979999780654907, 0.8096666932106018, 0.8066666722297668, 0.8233333230018616, 0.8053333163261414, 0.8276666402816772, 0.8323333263397217, 0.8216666579246521, 0.8296666741371155, 0.8206666707992554, 0.79666668176651, 0.8396666646003723, 0.8019999861717224, 0.8233333230018616, 0.8410000205039978, 0.8456666469573975, 0.8446666598320007, 0.8343333601951599, 0.8366666436195374, 0.8396666646003723, 0.8526666760444641, 0.846666693687439, 0.8423333168029785, 0.8370000123977661, 0.8536666631698608, 0.8339999914169312, 0.8426666855812073, 0.8636666536331177, 0.8556666374206543, 0.8569999933242798, 0.8546666502952576, 0.8636666536331177, 0.862333357334137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 9, 3, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8351428508758545, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.438646624416109, 2.2797814364352043, 2.154439126117874, 1.8910007740858916, 1.744163035779597, 1.4982619817152063, 0.9782808528537243, 0.849094867344152, 0.7183277276623219, 0.695295656968133, 0.6763035953635348, 0.6179254667523704, 0.6133935032283248, 0.579135998491094, 0.5665818969366683, 0.5282877841567036, 0.5364170298993926, 0.5174768517093258, 0.5242794225000513, 0.49731041544763216, 0.5039274308187394, 0.4912435693070716, 0.4675091678369409, 0.4901019895412131, 0.4576046175535376, 0.44570664329897886, 0.4415357788800091, 0.4431647921809903, 0.4337919403210513, 0.41992156475038417, 0.4217895848277758, 0.4202767783632494, 0.3821826616707826, 0.40050179231136923, 0.40473788231119207, 0.38099655534581517, 0.3963373061326107, 0.38315883495347564, 0.3896856202842726], "accuracy": [0.23273015022277832, 0.19521859288215637, 0.26839256286621094, 0.32545238733291626, 0.4084004759788513, 0.47193238139152527, 0.6505085229873657, 0.6868313550949097, 0.7316074371337891, 0.7392682433128357, 0.7386078238487244, 0.7646281719207764, 0.7712323069572449, 0.7777044177055359, 0.7858935594558716, 0.7976489067077637, 0.8004226684570312, 0.806630551815033, 0.7967243194580078, 0.816008448600769, 0.81112140417099, 0.8047813773155212, 0.8245938420295715, 0.8133667707443237, 0.8297450542449951, 0.8350284099578857, 0.8372738361358643, 0.8363492488861084, 0.8374059200286865, 0.8445383906364441, 0.8397833704948425, 0.8428213000297546, 0.8580108284950256, 0.8487650156021118, 0.8492933511734009, 0.8584070801734924, 0.8532558679580688, 0.8544445633888245, 0.8507462739944458], "val_loss": [1.9726380620683943, 1.7530461038861955, 1.8455390248979842, 1.208881173815046, 1.1475955077580042, 0.9424100603376117, 0.6261130741664341, 0.652149864605495, 0.5149036986487252, 0.5225307430539813, 0.4890272957938058, 0.5111594540732247, 0.4721241167613438, 0.4441594566617693, 0.4398681606565203, 0.43748893056597027, 0.4356795038495745, 0.41960494007383076, 0.4003864441599165, 0.4209988457815988, 0.4061873129435948, 0.3955446652003697, 0.4333072475024632, 0.4128991280283247, 0.3772318959236145, 0.38346530709947857, 0.3952426144054958, 0.3660194107464382, 0.36553646836962017, 0.42716435875211445, 0.37054907424109323, 0.38039906535829815, 0.38108259439468384, 0.35845799105507986, 0.37465183223996845, 0.3648409162248884, 0.3734407424926758, 0.4007373707635062, 0.3715232951300485], "val_accuracy": [0.11033333092927933, 0.445333331823349, 0.328000009059906, 0.47966668009757996, 0.527999997138977, 0.612666666507721, 0.718999981880188, 0.6980000138282776, 0.7723333239555359, 0.7676666378974915, 0.784333348274231, 0.7736666798591614, 0.7963333129882812, 0.809333324432373, 0.8130000233650208, 0.8130000233650208, 0.8146666884422302, 0.8133333325386047, 0.8266666531562805, 0.815666675567627, 0.8256666660308838, 0.8339999914169312, 0.8103333115577698, 0.8133333325386047, 0.840666651725769, 0.8379999995231628, 0.828000009059906, 0.8426666855812073, 0.843666672706604, 0.8043333292007446, 0.846666693687439, 0.8429999947547913, 0.828000009059906, 0.8553333282470703, 0.8426666855812073, 0.846666693687439, 0.8463333249092102, 0.8326666951179504, 0.846666693687439]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 1, 9, 9, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8257142901420593, "mapping_values": [1, 4, 4, 3, 1, 1, 5, 5, 5, 0, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4386374204701373, 2.2795374745847745, 2.15398903407, 2.0755367456977045, 1.5636707831210055, 1.1769302825508274, 0.8648761266084978, 0.7737676179042157, 0.7063231917656392, 0.6624976991426204, 0.6635269465746897, 0.6116827845400225, 0.5892658230493475, 0.5757227244945234, 0.5676856581891737, 0.5423304336008977, 0.5344267179464951, 0.5003141467880815, 0.5125297893701275, 0.49701031788606936, 0.495611847029575, 0.48755074937692205, 0.47165836683353807, 0.47635653629562463, 0.44815766386635597], "accuracy": [0.23273015022277832, 0.1954827606678009, 0.26826047897338867, 0.2665433883666992, 0.44089287519454956, 0.5716549754142761, 0.6762647032737732, 0.7144366502761841, 0.7334566116333008, 0.7499669790267944, 0.7497028112411499, 0.7652885913848877, 0.7798177003860474, 0.7781006693840027, 0.7858935594558716, 0.7967243194580078, 0.8016114234924316, 0.8149517774581909, 0.8017435073852539, 0.8140271902084351, 0.8140271902084351, 0.8107251524925232, 0.8273676037788391, 0.8148196935653687, 0.834632158279419], "val_loss": [1.9726299558367049, 1.7506407329014368, 1.835981982094901, 1.4934648445674352, 1.1200790405273438, 0.7611943994249616, 0.5791387047086444, 0.6683772121156965, 0.5235368694577899, 0.5562701736177716, 0.5125989743641445, 0.4675718035016741, 0.45436043398720877, 0.4489080565316336, 0.4376923016139439, 0.4287773881639753, 0.42694331066949026, 0.4134142313684736, 0.4122991817338126, 0.3972604104450771, 0.4060172864368984, 0.398445188999176, 0.4261348417827061, 0.4044636998857771, 0.3804799233164106], "val_accuracy": [0.11033333092927933, 0.4440000057220459, 0.3140000104904175, 0.4533333480358124, 0.5230000019073486, 0.675000011920929, 0.7300000190734863, 0.6919999718666077, 0.7599999904632568, 0.7396666407585144, 0.7559999823570251, 0.7973333597183228, 0.8066666722297668, 0.8023333549499512, 0.8103333115577698, 0.8080000281333923, 0.8190000057220459, 0.8203333616256714, 0.8259999752044678, 0.8360000252723694, 0.8213333487510681, 0.8266666531562805, 0.8130000233650208, 0.8256666660308838, 0.831333339214325]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 2, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [23], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8205714225769043, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4386465254712966, 2.2797002949498633, 2.147463028346858, 2.0987625675052777, 2.0212850898027956, 1.6183916059829586, 1.4356340190375785, 1.1226111060482493, 0.8938457756750399, 0.8585137829820257, 0.8073086671667989, 0.7228527466429853, 0.6824028402775538, 0.673099138048331, 0.6316683390404744, 0.611440831848722, 0.5768247011346809, 0.6037774902718367, 0.5825352994773083, 0.5468361114372337, 0.5488997242548651, 0.5304783140395878, 0.5177268362819968, 0.5167040761514441, 0.49421778878263745], "accuracy": [0.23273015022277832, 0.19561484456062317, 0.26984545588493347, 0.2522784173488617, 0.3175274133682251, 0.46612071990966797, 0.5184255838394165, 0.568749189376831, 0.6610751748085022, 0.6915863156318665, 0.7008321285247803, 0.7343811988830566, 0.7449478507041931, 0.7440232634544373, 0.7651565074920654, 0.7701756954193115, 0.7877426743507385, 0.7753269076347351, 0.7829877138137817, 0.7979130744934082, 0.7922335267066956, 0.7996301651000977, 0.8026680946350098, 0.8035926818847656, 0.8108572363853455], "val_loss": [1.9726386070251465, 1.7517330305916923, 1.8421033450535365, 1.7696863583156042, 1.3742594037737166, 0.8726864371980939, 1.0271033218928747, 0.6916931527001517, 0.6870066779000419, 0.6491579328264508, 0.5740998131888253, 0.4950037343161447, 0.5177465166364398, 0.5010567392621722, 0.4742022582462856, 0.48681572505405973, 0.4598959854670933, 0.47158643177577425, 0.4290179950850351, 0.4290988530431475, 0.4206440874508449, 0.4236607125827244, 0.43604949542454313, 0.4624857561928885, 0.4209680046354021], "val_accuracy": [0.11033333092927933, 0.4490000009536743, 0.3423333466053009, 0.3946666717529297, 0.4403333365917206, 0.6363333463668823, 0.559333324432373, 0.7093333601951599, 0.7026666402816772, 0.6919999718666077, 0.7353333234786987, 0.784333348274231, 0.777999997138977, 0.762333333492279, 0.7873333096504211, 0.7860000133514404, 0.7863333225250244, 0.7860000133514404, 0.8100000023841858, 0.8196666836738586, 0.8193333148956299, 0.8069999814033508, 0.8096666932106018, 0.7826666831970215, 0.8190000057220459]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 2, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [35, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8188571333885193, "mapping_values": [1, 4, 4, 3, 1, 1, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4248303048536055, 2.3010251638266106, 2.2192574431788827, 2.1312206741715185, 1.8544003191152978, 1.1852122697422707, 0.9566622264491348, 0.8348124196516478, 0.7436172797097003, 0.7389732260178771, 0.6980504836026531, 0.645451369160879, 0.6253056392347209, 0.6089609839723819, 0.5996348390237861, 0.5545561299773097, 0.5415961933866578, 0.5335631294178689, 0.5484293199186989, 0.5201782568523582, 0.5206775884185217, 0.503091587201243, 0.522139220725213, 0.47753639981935936, 0.46141174581261546, 0.4770108065222862, 0.475065970945163, 0.448673931233021, 0.45240354340357664, 0.42544903289199487, 0.44023034825238094, 0.4369165922207934, 0.418808600528129, 0.42240130947785937, 0.40864571120445803, 0.4016272982649122, 0.4054506038709355, 0.3923151003741286, 0.3999447957155585], "accuracy": [0.23325848579406738, 0.1298375427722931, 0.25822216272354126, 0.3131686747074127, 0.3859463632106781, 0.561880886554718, 0.650640606880188, 0.6946242451667786, 0.722229540348053, 0.7272487282752991, 0.7317395210266113, 0.7536653280258179, 0.7640998363494873, 0.7701756954193115, 0.7684586048126221, 0.7889314293861389, 0.791969358921051, 0.8006868362426758, 0.7903843522071838, 0.805177628993988, 0.8054417967796326, 0.8107251524925232, 0.7976489067077637, 0.8131026029586792, 0.8330471515655518, 0.8144234418869019, 0.8212917447090149, 0.834632158279419, 0.8276317715644836, 0.8408400416374207, 0.8339717388153076, 0.8363492488861084, 0.8421608805656433, 0.837537944316864, 0.844010055065155, 0.8512746095657349, 0.8498216867446899, 0.8499537706375122, 0.8492933511734009], "val_loss": [1.9746535846165247, 1.9643188885280065, 1.4225635869162423, 1.4244721617017473, 1.2241365909576416, 0.7188618353434971, 0.6510379825319562, 0.6624656064169747, 0.5754495177950177, 0.5250134127480643, 0.5254204954419818, 0.484717811856951, 0.47445532253810335, 0.4746414763586862, 0.4456723758152553, 0.4334673285484314, 0.421002915927342, 0.43778068678719656, 0.41606754064559937, 0.40043215240750996, 0.4289151855877468, 0.4032271419252668, 0.4017793025289263, 0.42028748989105225, 0.3990119865962437, 0.44731967789786203, 0.38548444850104197, 0.3737796885626657, 0.36304973704474314, 0.40786953483309063, 0.39175153630120413, 0.3817349927765982, 0.3891118509428842, 0.3639006529535566, 0.3815929463931492, 0.36578155415398733, 0.38792633158820017, 0.42086829457964214, 0.41488395418439594], "val_accuracy": [0.10700000077486038, 0.28433331847190857, 0.49266666173934937, 0.4779999852180481, 0.4753333330154419, 0.6923333406448364, 0.7123333215713501, 0.7076666951179504, 0.7486666440963745, 0.7596666812896729, 0.781333327293396, 0.784333348274231, 0.7893333435058594, 0.7943333387374878, 0.8076666593551636, 0.8209999799728394, 0.8183333277702332, 0.8119999766349792, 0.8206666707992554, 0.8263333439826965, 0.8043333292007446, 0.8230000138282776, 0.8276666402816772, 0.8166666626930237, 0.8259999752044678, 0.7943333387374878, 0.8333333134651184, 0.8443333506584167, 0.8453333377838135, 0.8173333406448364, 0.8333333134651184, 0.8353333473205566, 0.8256666660308838, 0.8533333539962769, 0.8426666855812073, 0.8486666679382324, 0.8366666436195374, 0.8193333148956299, 0.8263333439826965]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [11, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 8, 7, 9, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7157142758369446, "mapping_values": [1, 4, 4, 3, 1, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301645330198059, 2.293109013719046, 2.280580693421158, 2.2596569582770734, 2.2355252958291936, 2.202396833602196, 2.1583401082985754, 2.0991673260128114, 2.0190589025335193, 1.912842099236113, 1.7759736333902973, 1.6437945056978769, 1.5251665515922332, 1.4415106510426374, 1.3969349769191215, 1.328618742188033, 1.3298824208681184, 1.3008021070279812, 1.2536782723817181, 1.1863969893991482, 1.0925609037593025, 1.029100811350788, 0.9973234063315275, 0.9495735242146038, 0.9335734242020566, 0.9349735475030511, 0.9332318925397775, 0.9097542379589255, 0.8861156113946663, 0.8517366378078403, 0.8398410144766734, 0.8193626447187486, 0.8098861330126443, 0.8007338679209991, 0.7849102370758823, 0.7725323028395031, 0.7728759528875445, 0.7707015627080172, 0.7694902700629012, 0.7594562543302936, 0.7521444230252222, 0.7289648417074919, 0.7243153794472165, 0.7076935138543048, 0.7017474750549156, 0.695468971608353, 0.6814287192691445, 0.690040158817655, 0.6941384700673241, 0.6957391105260611, 0.6888443382267214], "accuracy": [0.09074098616838455, 0.10791176557540894, 0.1508387327194214, 0.20684190094470978, 0.2615242302417755, 0.32122573256492615, 0.3559635579586029, 0.381719708442688, 0.4006075859069824, 0.4173821210861206, 0.44128912687301636, 0.4496103525161743, 0.4706115424633026, 0.500990629196167, 0.5226522088050842, 0.5494650602340698, 0.5457667708396912, 0.5633337497711182, 0.5798441171646118, 0.5938449501991272, 0.6206578016281128, 0.6469422578811646, 0.6631884574890137, 0.6561880707740784, 0.6688680648803711, 0.6659622192382812, 0.6690001487731934, 0.6744155287742615, 0.6715096831321716, 0.6816800832748413, 0.687887966632843, 0.6917183995246887, 0.7012283802032471, 0.7074362635612488, 0.7103421092033386, 0.7112666964530945, 0.7100779414176941, 0.7037379741668701, 0.7017567157745361, 0.7086250185966492, 0.711530864238739, 0.7173424959182739, 0.7181349992752075, 0.7252674698829651, 0.7264562249183655, 0.733588695526123, 0.7390040755271912, 0.7357020378112793, 0.7372870445251465, 0.7367587089538574, 0.7368907928466797], "val_loss": [1.9672942161560059, 1.957327093396868, 1.9415601321629115, 1.920543806893485, 1.8941708973475866, 1.8603269713265556, 1.8140863009861536, 1.749532699584961, 1.6599064213888985, 1.539257628577096, 1.3932181767054967, 1.246784039906093, 1.1229471138545446, 1.0156701632908411, 0.9192038944789341, 0.8453965868268695, 0.7971615791320801, 0.7569825649261475, 0.7269397974014282, 0.7036904437201363, 0.6991911104747227, 0.7139062200273786, 0.6951848098209926, 0.6846272604806083, 0.6998286928449359, 0.7119098220552716, 0.7049251113619123, 0.6854115724563599, 0.6630580765860421, 0.6430374213627407, 0.6272397552217756, 0.617911662374224, 0.6136371919087001, 0.6053603376661029, 0.5906737531934466, 0.5794479676655361, 0.5761615378516061, 0.575034362929208, 0.570286682673863, 0.5634752341679165, 0.5576525926589966, 0.5533020836966378, 0.5502999339784894, 0.5469739948000226, 0.5409297261919294, 0.5332092557634626, 0.5320365939821515, 0.5362875802176339, 0.5380568334034511, 0.5353064707347325, 0.5297146354402814], "val_accuracy": [0.06199999898672104, 0.15700000524520874, 0.2980000078678131, 0.37599998712539673, 0.4020000100135803, 0.4180000126361847, 0.43666666746139526, 0.45633333921432495, 0.4866666793823242, 0.5076666474342346, 0.5296666622161865, 0.5450000166893005, 0.5789999961853027, 0.6200000047683716, 0.659333348274231, 0.6790000200271606, 0.6863333582878113, 0.6890000104904175, 0.6959999799728394, 0.7026666402816772, 0.7103333473205566, 0.7086666822433472, 0.706333339214325, 0.7136666774749756, 0.7210000157356262, 0.7273333072662354, 0.7260000109672546, 0.7266666889190674, 0.7269999980926514, 0.7300000190734863, 0.7360000014305115, 0.7350000143051147, 0.7316666841506958, 0.7316666841506958, 0.7366666793823242, 0.7473333477973938, 0.7463333606719971, 0.7476666569709778, 0.7513333559036255, 0.7480000257492065, 0.7549999952316284, 0.7586666941642761, 0.7599999904632568, 0.7583333253860474, 0.7666666507720947, 0.7726666927337646, 0.7703333497047424, 0.7663333415985107, 0.7636666893959045, 0.7663333415985107, 0.7616666555404663]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [10, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 2, 3, 9, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.4059999883174896, "mapping_values": [1, 4, 4, 3, 1, 1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3024018897891847, 2.30002237008689, 2.3004365863580873, 2.2983782871477105, 2.2988878589154487, 2.2987838254046085, 2.297337557425226, 2.295689144123185, 2.2955264615628383, 2.2948399948610874, 2.2932237090845278, 2.2937006557055466, 2.2930731785972878, 2.2937189513634633, 2.292401304617849, 2.2898533495740647, 2.290919366277771, 2.2902184056095742, 2.288494240228353, 2.2883054312304294, 2.2877379598051975, 2.284911196733494, 2.2860975948228432, 2.2862265857612893, 2.2842460128341795, 2.2836076088112893, 2.2836717672792677, 2.2815069496009674, 2.280772403246691, 2.2805928469113605, 2.2804524662661247, 2.281504596622786, 2.278661587455285, 2.2782839856143355, 2.2782334117463647, 2.277849147190995, 2.2762494784115708, 2.2759747094859883, 2.274509160210979, 2.2733711656593862, 2.272911321312256, 2.273080429050192, 2.2719015618514358, 2.2720818804271183, 2.268759604914943, 2.269097446308884, 2.268322145556257, 2.2710499508411437, 2.269864911148813, 2.2679661831851363, 2.2657920794637527, 2.2631157996427462, 2.2631870735086834, 2.263844746325262, 2.2639342234229463, 2.261151957332403, 2.261325717428971, 2.258441357328561, 2.259032440002899, 2.2603572094209, 2.2575408432068307, 2.2586730629335605, 2.257118568255397, 2.255585314465111, 2.2553276089849787, 2.254089957136346, 2.2526694143358523, 2.253060127970502, 2.2519970005371976, 2.25078663238996, 2.2481688530122947, 2.2493355006841607, 2.2497768572151164, 2.2484795892274834, 2.2462903694658705, 2.2476312367199056, 2.2443025994530728, 2.244795052540096, 2.2424443055295105, 2.243233802469415, 2.2422800914344694, 2.240593215052824, 2.240731255946111, 2.23970676576929, 2.240238157104051, 2.236313168493323, 2.2363544680328733, 2.235285099738971, 2.2340273724224557, 2.235086747132839, 2.23189837229392, 2.2316324896013198, 2.23090516876913, 2.2287689091081964, 2.227399161841025, 2.2278019192511334, 2.2261056028037824, 2.2250257832042575, 2.2240777258481867, 2.22416418238937], "accuracy": [0.08955223858356476, 0.09166556596755981, 0.09985470771789551, 0.09708096832036972, 0.0940430611371994, 0.1018359512090683, 0.1010434553027153, 0.10830801725387573, 0.10289261490106583, 0.10949676483869553, 0.11094967275857925, 0.10751552134752274, 0.11042134463787079, 0.11028926074504852, 0.11847840249538422, 0.1212521493434906, 0.11913882195949554, 0.1138555034995079, 0.12178047746419907, 0.12468630075454712, 0.12878087162971497, 0.13274335861206055, 0.12772421538829803, 0.12930920720100403, 0.14159291982650757, 0.13908334076404572, 0.13881917297840118, 0.14581957459449768, 0.14780081808567047, 0.14436666667461395, 0.1430458277463913, 0.14621582627296448, 0.1488574892282486, 0.16021661460399628, 0.1558578759431839, 0.16193369030952454, 0.1574428677558899, 0.16272619366645813, 0.16299036145210266, 0.1608770340681076, 0.1728965789079666, 0.16933034360408783, 0.1710474193096161, 0.17514199018478394, 0.17778365314006805, 0.1806894689798355, 0.1814819723367691, 0.17302866280078888, 0.18359529972076416, 0.17500990629196167, 0.19416193664073944, 0.18940694630146027, 0.19336943328380585, 0.19310526549816132, 0.19284109771251678, 0.2020869106054306, 0.2016906589269638, 0.204860657453537, 0.20644564926624298, 0.20644564926624298, 0.20604939758777618, 0.2016906589269638, 0.2156914472579956, 0.20723815262317657, 0.21133272349834442, 0.21912561357021332, 0.21357811987400055, 0.21555937826633453, 0.22097477316856384, 0.21833311021327972, 0.23378682136535645, 0.2254655957221985, 0.21780477464199066, 0.22559767961502075, 0.22876766324043274, 0.22414475679397583, 0.24078720808029175, 0.23722097277641296, 0.24844802916049957, 0.25056135654449463, 0.24342887103557587, 0.24025888741016388, 0.2417117953300476, 0.25016510486602783, 0.2405230551958084, 0.254920095205307, 0.2525425851345062, 0.2525425851345062, 0.2588825821876526, 0.2599392533302307, 0.2553163468837738, 0.25861841440200806, 0.25861841440200806, 0.2620525658130646, 0.26720380783081055, 0.26839256286621094, 0.2666754722595215, 0.2689208686351776, 0.26284506916999817, 0.27222296595573425], "val_loss": [1.9702726091657365, 1.9696078981672014, 1.9689452307564872, 1.9682824952261788, 1.967627729688372, 1.9669693538120814, 1.9663075038364954, 1.965653760092599, 1.9649981090000697, 1.9643478393554688, 1.9636928013392858, 1.963040488106864, 1.962390627179827, 1.9617395401000977, 1.9610908372061593, 1.960437297821045, 1.9597844396318709, 1.9591308321271623, 1.958474908556257, 1.957819598061698, 1.9571670123508997, 1.9565155846732003, 1.9558675629752023, 1.955213955470494, 1.9545530591692244, 1.9538969993591309, 1.953246797834124, 1.9525859696524483, 1.9519376754760742, 1.9512831824166434, 1.9506220817565918, 1.9499702453613281, 1.949312618800572, 1.948653016771589, 1.948000362941197, 1.9473419870649065, 1.9466782297406877, 1.946014131818499, 1.9453467641557967, 1.9446819850376673, 1.9440035820007324, 1.9433368955339705, 1.9426663943699427, 1.9419894899640764, 1.9413086346217565, 1.940629005432129, 1.9399412018912179, 1.9392565999712263, 1.9385698182242257, 1.937873704092843, 1.937173639025007, 1.9364775248936243, 1.9357728276933943, 1.9350677217755998, 1.934363501412528, 1.9336487225123815, 1.9329329218183244, 1.9322046552385603, 1.9314773423331124, 1.9307523454938615, 1.930020877293178, 1.9292949948992049, 1.9285567828587122, 1.9278171403067452, 1.9270742280142648, 1.9263270241873605, 1.9255685125078474, 1.924802235194615, 1.9240407262529646, 1.9232704980032784, 1.9224917548043388, 1.9217109680175781, 1.920929023197719, 1.9201458522251673, 1.919348852975028, 1.918556077139718, 1.9177498136247908, 1.916944912501744, 1.9161316326686315, 1.9153180122375488, 1.9145032337733678, 1.9136782373700822, 1.9128522872924805, 1.9120145525251115, 1.911177430834089, 1.9103247778756278, 1.909473146711077, 1.9086161340985979, 1.9077466556004115, 1.9068646430969238, 1.905984878540039, 1.9050937380109514, 1.9041948999677385, 1.9032899992806571, 1.9023800577436174, 1.9014593533107214, 1.9005391257149833, 1.8996103831699915, 1.8986733300345284, 1.8977250371660506], "val_accuracy": [0.04233333468437195, 0.045666664838790894, 0.049666665494441986, 0.054999999701976776, 0.05900000035762787, 0.06400000303983688, 0.070333331823349, 0.07333333045244217, 0.07866666465997696, 0.0833333358168602, 0.08900000154972076, 0.09399999678134918, 0.10333333164453506, 0.10899999737739563, 0.11533333361148834, 0.12166666984558105, 0.12866666913032532, 0.13600000739097595, 0.1433333307504654, 0.15299999713897705, 0.16033333539962769, 0.16566666960716248, 0.17100000381469727, 0.17666666209697723, 0.1809999942779541, 0.1886666715145111, 0.19433332979679108, 0.20100000500679016, 0.20933333039283752, 0.2160000056028366, 0.2199999988079071, 0.2266666740179062, 0.234333336353302, 0.24033333361148834, 0.2473333328962326, 0.25333333015441895, 0.25999999046325684, 0.2643333375453949, 0.27166667580604553, 0.27533334493637085, 0.2786666750907898, 0.2840000092983246, 0.28866666555404663, 0.2926666736602783, 0.2953333258628845, 0.2996666729450226, 0.3050000071525574, 0.31033334136009216, 0.31200000643730164, 0.3166666626930237, 0.3213333189487457, 0.32633334398269653, 0.33000001311302185, 0.3346666693687439, 0.33766666054725647, 0.34033334255218506, 0.3453333377838135, 0.3499999940395355, 0.3526666760444641, 0.3543333411216736, 0.3569999933242798, 0.36000001430511475, 0.3636666536331177, 0.3683333396911621, 0.3700000047683716, 0.3713333308696747, 0.37533333897590637, 0.3763333261013031, 0.37700000405311584, 0.3773333430290222, 0.3803333342075348, 0.3816666603088379, 0.3840000033378601, 0.3853333294391632, 0.38600000739097595, 0.38733333349227905, 0.3889999985694885, 0.390666663646698, 0.39100000262260437, 0.39366665482521057, 0.3943333327770233, 0.39533331990242004, 0.39633333683013916, 0.398333340883255, 0.39800000190734863, 0.39933332800865173, 0.4009999930858612, 0.4026666581630707, 0.4046666622161865, 0.40533334016799927, 0.40566667914390564, 0.4076666533946991, 0.40966665744781494, 0.4103333353996277, 0.41100001335144043, 0.4113333225250244, 0.41233333945274353, 0.41333332657814026, 0.4143333435058594, 0.41466665267944336]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 2, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.37685713171958923, "mapping_values": [1, 4, 4, 3, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4667894057373503, 1.9983771575865508, NaN, NaN, NaN, NaN], "accuracy": [0.2557125985622406, 0.3483027219772339, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8786322729928153, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.3473333418369293, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [10, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 3, 2, 9, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [2, 0], [23], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 8, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [41, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 8, 2, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4391291.501330454, 82954507.99313168, 391481221.3424911, 1078449644.3037908, 2273337551.275129, 4188808421.524237], "accuracy": [0.09232597798109055, 0.10051512718200684, 0.10289261490106583, 0.10077928751707077, 0.09932637959718704, 0.10368511080741882], "val_loss": [16313153.142857144, 130243593.14285715, 439281014.85714287, 1040916150.8571428, 2032641389.7142856, 3511938998.857143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 1, 0, 3, 3, 8, 5, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [38, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 8, 2, 9, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [2, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [36230077.42829374, 5434940648.06023, 95007988389.07622, 662750807191.0775, 2857967375782.1245, 9433187114011.457], "accuracy": [0.09232597798109055, 0.10051512718200684, 0.10289261490106583, 0.10077928751707077, 0.09932637959718704, 0.10368511080741882], "val_loss": [298461403.4285714, 16073838592.0, 172493640265.14285, 940327174144.0, 3522063723958.857, 10388779602505.143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [11, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 8, 7, 9, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [82, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 2, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 7, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 6, 5, 3, 2, 1, 5, 2, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.99322580496808e+25, 6.662355370320633, 13.806761944818302, 21.0128478341335, 28.203728957120155, 35.406026637911594], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.2361956323896135, 9.161219188145228, 15.316165924072266, 21.45104435511998, 27.545678274972097, 33.67188916887556], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 2, 2, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [23], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [10, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 2, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [58, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [1, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [10, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 2, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 0, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [10, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 2, 9, 4, 1, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 1, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [23], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 8, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [759618.7497776484, 2.312797497166241, 2.3052811509881748, 2.3032723939681743, 2.303040538969734, 2.302946323511418, 2.302967088727305, 2.302982764866972, 2.302973660842035, 2.3028630488552766, 2.3029439725801537], "accuracy": [0.09694888442754745, 0.09496764093637466, 0.0948355570435524, 0.09642054885625839, 0.08942015469074249, 0.09694888442754745, 0.09285431355237961, 0.09034473448991776, 0.09655263274908066, 0.09800554811954498, 0.09430722147226334], "val_loss": [1.9897749764578683, 1.9780801364353724, 1.9747366224016463, 1.974076611655099, 1.9738656452723913, 1.973644597189767, 1.973672594342913, 1.973806653703962, 1.9736224583217077, 1.9736529077802385, 1.973670414515904], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.0949999988079071, 0.09666666388511658, 0.0949999988079071, 0.10366666316986084, 0.09799999743700027, 0.09666666388511658, 0.10366666316986084, 0.09799999743700027, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 3, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 1, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 8, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023771447055865, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]