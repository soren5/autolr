[{"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.7162857055664062, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3008928291392348, 2.2993161840178096, 2.2941602303949975, 2.284140167109104, 2.273221239327534, 2.2571970525907092, 2.24042536295668, 2.220392442886399, 2.1985578319384294, 2.1657482782264883, 2.1309002136683435, 2.0853010268495416, 2.0294962647631656, 1.9596282199641197, 1.874924643511124, 1.7859572954559528, 1.6813924283619806, 1.5885970801126845, 1.5056481272427005, 1.456279645333311, 1.428897655351901, 1.3855134007039875, 1.3734139625375235, 1.397660535324393, 1.3916205597937839, 1.357662962443793, 1.3162112775306818, 1.2487196118966102, 1.1797236597942653, 1.165853916504411, 1.0788260558419587, 0.9998487121377717, 0.955105206875391, 0.9338549555032922, 0.9309646884259168, 0.9378986092543384, 0.9318544445194037, 0.9378251656880074], "accuracy": [0.09681680053472519, 0.09747721254825592, 0.10936468094587326, 0.14093250036239624, 0.16933034360408783, 0.2122572958469391, 0.25478801131248474, 0.29362040758132935, 0.30960243940353394, 0.3485668897628784, 0.3661339282989502, 0.3801347315311432, 0.39202219247817993, 0.4039096534252167, 0.42108044028282166, 0.428609162569046, 0.45330867171287537, 0.46506404876708984, 0.48064985871315, 0.49148064851760864, 0.5071985125541687, 0.5238409638404846, 0.5303130149841309, 0.5328226089477539, 0.549068808555603, 0.5548804402351379, 0.5649187564849854, 0.5857878923416138, 0.6098269820213318, 0.6149781942367554, 0.6347906589508057, 0.6448289752006531, 0.6542068123817444, 0.6489235162734985, 0.6543388962745667, 0.6465460062026978, 0.6539427042007446, 0.6613393425941467], "val_loss": [1.9689319474356515, 1.9644195692879813, 1.9571414675031389, 1.9472831317356654, 1.9350216729300362, 1.9204369272504533, 1.903423649924142, 1.8834044592721122, 1.8592010225568498, 1.8290254729134696, 1.7908616065979004, 1.7425992829459054, 1.6820105143955775, 1.6070474215916224, 1.5171961784362793, 1.4150287423815047, 1.306812082018171, 1.2021572589874268, 1.1093263966696603, 1.0307166916983468, 0.963721581867763, 0.9058711188180106, 0.8586845738547189, 0.8328092438834054, 0.8203391688210624, 0.7905304431915283, 0.7558452572141375, 0.7488015208925519, 0.7489059141704014, 0.7315819604056222, 0.6990198407854352, 0.6710671527045113, 0.6675029482160296, 0.6785363129207066, 0.689917802810669, 0.6997422320502145, 0.710163916860308, 0.719044532094683], "val_accuracy": [0.047333333641290665, 0.07866666465997696, 0.14766666293144226, 0.25, 0.3306666612625122, 0.37400001287460327, 0.3956666588783264, 0.4153333306312561, 0.4300000071525574, 0.44066667556762695, 0.460999995470047, 0.4723333418369293, 0.4830000102519989, 0.49533334374427795, 0.5076666474342346, 0.5213333368301392, 0.5433333516120911, 0.5726666450500488, 0.5956666469573975, 0.6236666440963745, 0.6480000019073486, 0.6600000262260437, 0.6669999957084656, 0.6676666736602783, 0.6503333449363708, 0.6769999861717224, 0.6926666498184204, 0.699999988079071, 0.70333331823349, 0.7049999833106995, 0.7036666870117188, 0.7113333344459534, 0.7203333377838135, 0.7049999833106995, 0.6963333487510681, 0.6926666498184204, 0.7023333311080933, 0.7173333168029785]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1, 1], [1, 3, 8, 6, 0], [3, 0, 2], [7, 52, 13]], "fitness": -0.7105714082717896, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.2691306535672706, 1.986158103549863, 1.4462685345060333, 1.1219743288125439, 0.9301208513697236, 0.8422467881473394, 0.8492069747532678, 0.771112452408641, 0.7729855603104837, 0.7303966188852766, 0.6972814564376758, 0.6732424566097358, 0.6649529311981625, 0.6299986769226894, 0.6178591463544097, 0.5956505370602994, 0.5834586189218626, 0.5640663870683735, 0.5600255978987627, 0.550366541500404, 0.5321983521435916, 0.524019845212849, 0.524807987314221, 0.513458439934885, 0.49576043274503073, 0.4799690909192641, 0.4764643535637947, 0.47413033801236126, 0.4595960690211217, 0.461887114780328, 0.4534518207265811, 0.4453157716187283, 0.43311543104324546, 0.4237511459398011, 0.4203990230022121, 0.4106781572997058, 0.4055642381383286], "accuracy": [0.17342491447925568, 0.39466384053230286, 0.5107647776603699, 0.6136573553085327, 0.6627922058105469, 0.6866992712020874, 0.6793025732040405, 0.7086250185966492, 0.7106062769889832, 0.7280412316322327, 0.7308149337768555, 0.7421740889549255, 0.7540615797042847, 0.7658169269561768, 0.7687227725982666, 0.7854973077774048, 0.7835160493850708, 0.7848368883132935, 0.7873464822769165, 0.793422281742096, 0.7973847389221191, 0.8082155585289001, 0.8035926818847656, 0.8043851256370544, 0.811649739742279, 0.8177255392074585, 0.826310932636261, 0.8269713521003723, 0.8271034359931946, 0.830669641494751, 0.8277638554573059, 0.833179235458374, 0.8362171649932861, 0.8399154543876648, 0.8393871188163757, 0.8430854678153992, 0.8441421389579773], "val_loss": [1.8581911495753698, 1.248147623879569, 0.7818587677819389, 0.6877508504050118, 0.6490356581551688, 0.6046172380447388, 0.5765656743730817, 0.5803438425064087, 0.5336291790008545, 0.523931622505188, 0.5048740250723702, 0.4798471927642822, 0.4760326657976423, 0.46993958950042725, 0.45161644901548115, 0.451007536479405, 0.45196003573281424, 0.43902835675648283, 0.42623643364225117, 0.41707219396318707, 0.4189947077206203, 0.41394964286259245, 0.40766326018742155, 0.40408235788345337, 0.3910853522164481, 0.3868522473743984, 0.38622836555753437, 0.3812385542052133, 0.38873009170804707, 0.37838700839451384, 0.37015280553272795, 0.36712052140917095, 0.3710982544081552, 0.3638463190623692, 0.3626494067055838, 0.36762820822852, 0.36212629079818726], "val_accuracy": [0.41499999165534973, 0.5636666417121887, 0.6806666851043701, 0.6909999847412109, 0.7260000109672546, 0.7256666421890259, 0.7423333525657654, 0.7426666617393494, 0.7590000033378601, 0.7573333382606506, 0.7770000100135803, 0.7796666622161865, 0.7836666703224182, 0.7853333353996277, 0.7979999780654907, 0.8019999861717224, 0.7953333258628845, 0.796999990940094, 0.8109999895095825, 0.8190000057220459, 0.8223333358764648, 0.8246666789054871, 0.8209999799728394, 0.8236666917800903, 0.8330000042915344, 0.8370000123977661, 0.8386666774749756, 0.8333333134651184, 0.8370000123977661, 0.8376666903495789, 0.8453333377838135, 0.8493333458900452, 0.8423333168029785, 0.8433333039283752, 0.8443333506584167, 0.8456666469573975, 0.8429999947547913]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1], [3, 7, 6, 5, 6, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [1, 2, 9, 3, 2], [2, 2, 2, 3, 0], [7, 52, 13]], "fitness": -0.25371429324150085, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.add(beta, beta))", "other_info": {"loss": [4.636572537625613, 2.5334739568226876, 2.2688938269541485, 2.4361456177411314, 2.3462192822976466, 2.321161221519453, 2.3273272476239115, 2.333399433580136], "accuracy": [0.17223615944385529, 0.1006472036242485, 0.1508387327194214, 0.10289261490106583, 0.10381719470024109, 0.09668471664190292, 0.09694888442754745, 0.09998679161071777], "val_loss": [1.9869372504098075, 1.9846364430018835, 1.9644182750156947, 2.0034456934247697, 1.9923948560442244, 1.996354648045131, 1.9906886645725794, 1.9903036526271276], "val_accuracy": [0.10066666454076767, 0.1133333370089531, 0.17933332920074463, 0.10233332961797714, 0.1003333330154419, 0.09833333641290665, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 1, 1, 1, 1], [1, 3, 8, 6, 0], [1, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.395360406017291, 3.5207053467802574, 6.456316893898406, 11.187131909803865, 18.053067786393463, 26.43411304940952, 37.255838938581945], "accuracy": [0.09351472556591034, 0.09919429570436478, 0.10315678268671036, 0.09998679161071777, 0.09826971590518951, 0.09826971590518951, 0.09972262382507324], "val_loss": [2.183520930153983, 3.3617442675999234, 5.781754902430943, 9.353759765625, 14.13108389718192, 20.22251456124442, 27.75063214983259], "val_accuracy": [0.09966666996479034, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [1, 3, 8, 6, 0], [1, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07409853488206863, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 0, 3, 4, 1], [25, 66, 41], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [1, 0, 8, 6, 0], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 13, 13, 8, 5, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302152298759901, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [1, 9, 8, 6, 0], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.395360406017291, 3.5207053467802574, 6.456316893898406, 11.187131909803865, 18.053067786393463, 26.43411304940952, 37.255838938581945], "accuracy": [0.09351472556591034, 0.09919429570436478, 0.10315678268671036, 0.09998679161071777, 0.09826971590518951, 0.09826971590518951, 0.09972262382507324], "val_loss": [2.183520930153983, 3.3617442675999234, 5.781754902430943, 9.353759765625, 14.13108389718192, 20.22251456124442, 27.75063214983259], "val_accuracy": [0.09966666996479034, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 87, 55, 22, 11, 97, 54, 38], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [25], [0, 1, 0, 0, 1], [1, 0, 1], [9, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 87, 55, 22, 11, 97, 54, 38], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [0, 5, 0, 4, 5, 7, 3, 9], [5, 0, 4, 4, 1], [25], [0, 0, 0, 0, 1], [0, 0, 1, 1], [3, 2, 8, 4], [5, 5], [64], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [1, 3, 8, 6, 0, 8, 2, 1, 2, 0, 4, 1, 5, 7], [0, 1, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 4, 2, 1, 5, 4, 2, 2, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302152298759901, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 1, 1, 1], [1, 1, 8, 6, 0, 8, 2, 1, 2, 0, 4, 1, 5, 7], [0, 2, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), beta), beta)", "other_info": {"loss": [2.302747888587737, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [25], [0, 1, 0, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 3, 7, 6, 0, 8], [0, 1, 2, 3, 1], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 6, 5, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.add(tf.math.divide_no_nan(beta, tf.math.negative(tf.math.sqrt(sigma))), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 3, 2], [2, 1, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.multiply(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 0], [3, 2, 8, 4], [5], [64], [0, 0, 0, 1, 1, 0], [0, 1, 8, 6, 0, 8, 2, 1, 2, 0, 4, 1, 5, 7], [0, 1, 0], [25, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 1, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 0, 0], [5, 6, 8, 6, 0], [0, 3, 2], [95, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302747888587737, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [2, 3, 8, 1, 2, 4, 3, 2, 7, 1, 6, 8, 4, 2], [3, 0, 2, 1, 2, 3, 0, 1, 1, 3, 2, 1], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 25, 13, 12, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.subtract(sigma, tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.math.add(alpha, beta), sigma)), tf.math.subtract(tf.math.divide_no_nan(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha), alpha)))), tf.math.sqrt(tf.math.pow(sigma, beta))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [5, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], [6, 4, 6, 5, 5, 7, 3, 9], [4, 3, 3, 0, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [7, 2, 8, 4], [5], [64], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [1, 3, 4, 6, 0, 1, 2, 8, 6, 7], [0, 1, 2, 2, 0, 1, 0, 2, 0], [7, 52, 13, 14]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 19, 10, 9, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(beta)), tf.math.divide_no_nan(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha)))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), beta), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 87, 55, 22, 11, 97, 54, 38], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [6, 5, 0, 4, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [1, 3, 9, 3, 2, 7, 6, 1, 1, 9, 7, 8, 4], [0, 1, 2, 3, 0, 0, 2, 2, 1], [7, 52, 13, 28, 54]], "fitness": -0.06057142838835716, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 22, 13, 9, 5], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(sigma), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), beta))), beta))), alpha)", "other_info": {"loss": [4.648016495711579, 2.619052230437922, 2.342880051826615, 2.4559534835525714, 2.322675096549378, 2.3214631719895324, NaN, NaN], "accuracy": [0.17197199165821075, 0.1002509593963623, 0.10196803510189056, 0.1014397069811821, 0.0952318087220192, 0.10236428678035736, 0.10196803510189056, 0.09998679161071777], "val_loss": [1.9983279364449638, 1.9891738210405623, 1.9864166123526437, 1.992922101702009, 2.001345634460449, 1.9996538843427385, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09933333098888397, 0.10333333164453506, 0.09666666388511658, 0.09933333098888397, 0.09866666793823242, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [1, 3, 8, 6, 0], [3, 0, 3], [7, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.301360057597273, 2.302845139214391, 2.303799327905262, 2.30297120214847, 2.3038604396162032, 2.3021641941496314], "accuracy": [0.09496764093637466, 0.09087307006120682, 0.08836349099874496, 0.09153348207473755, 0.0886276587843895, 0.09126931428909302], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [8, 3, 8, 6, 0], [3, 0, 2], [7, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [2.301360057597273, 2.302845139214391, 2.303799327905262, 2.30297120214847, 2.3038604396162032, 2.3021641941496314], "accuracy": [0.09496764093637466, 0.09087307006120682, 0.08836349099874496, 0.09153348207473755, 0.0886276587843895, 0.09126931428909302], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [2, 3, 8, 6, 0], [3, 0, 3], [7, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 3, 3, 2, 1, 0, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.301360057597273, 2.302845139214391, 2.303799327905262, 2.30297120214847, 2.3038604396162032, 2.3021641941496314], "accuracy": [0.09496764093637466, 0.09087307006120682, 0.08836349099874496, 0.09153348207473755, 0.0886276587843895, 0.09126931428909302], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]