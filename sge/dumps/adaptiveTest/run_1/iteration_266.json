[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.8548571467399597, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.212289400072996, 1.487472111144952, 0.9637313828555238, 0.798647894701544, 0.7350101069436649, 0.680779472987382, 0.646449382530936, 0.6281686257204406, 0.6078143173661671, 0.5845329968165004, 0.576924158652634, 0.5537030621447883, 0.5394861703976475, 0.5191143785627086, 0.5026976141978753, 0.4938372834924505, 0.47739449999178435, 0.46440734011921286, 0.46897992951884765, 0.44438969928354494, 0.44362475042329913, 0.42688867326945423, 0.42287192373716004, 0.41126857690287777, 0.4090997259244628, 0.3914687741174359, 0.39128886543292063, 0.3817967180295029, 0.367329110952495, 0.3676392115173307, 0.36699758952855277, 0.34025752071644005, 0.35225540647149606, 0.3452252384190074, 0.33653425785371294, 0.33512081934271737, 0.32703927697412344, 0.32516908032735736, 0.31482192895998495, 0.30512286696876784, 0.2965997476556345, 0.30038164030323095, 0.2955943446558669, 0.2900624886763299, 0.28305822733670116, 0.28110095619635733, 0.2691183774903655, 0.2735704483845451, 0.26870718859347686, 0.27093475034381453, 0.2529310709186092, 0.25180912459090304, 0.24900701061420594, 0.2501773747431367, 0.24460149605701534, 0.23714830338947052, 0.23775551631788866, 0.23777816300465526, 0.23195023297389675, 0.2231160979272667], "accuracy": [0.2513538599014282, 0.5077268481254578, 0.6456214785575867, 0.705058753490448, 0.7205125093460083, 0.7470611333847046, 0.7530049085617065, 0.7676661014556885, 0.7736098170280457, 0.7836481332778931, 0.7854973077774048, 0.7926297783851624, 0.8014793395996094, 0.8064984679222107, 0.8142913579940796, 0.8171972036361694, 0.8227446675300598, 0.8310658931732178, 0.8244617581367493, 0.832650899887085, 0.8322546482086182, 0.8445383906364441, 0.8433496356010437, 0.8498216867446899, 0.8490291833877563, 0.8578787446022034, 0.8514066934585571, 0.863029956817627, 0.858671247959137, 0.8660678863525391, 0.8639545440673828, 0.8765024542808533, 0.8665962219238281, 0.8720116019248962, 0.8729361891746521, 0.8751816153526306, 0.8772949576377869, 0.878351628780365, 0.880729079246521, 0.887597382068634, 0.8877294659614563, 0.8877294659614563, 0.8897107243537903, 0.8911636471748352, 0.8912957310676575, 0.8976356983184814, 0.8973715305328369, 0.8960506916046143, 0.8947299122810364, 0.8968431949615479, 0.9043719172477722, 0.9022586345672607, 0.9058248400688171, 0.9068815112113953, 0.9089948534965515, 0.9104477763175964, 0.9085986018180847, 0.9103156924247742, 0.9078060984611511, 0.9178444147109985], "val_loss": [1.5710299696241106, 0.7369084017617362, 0.6150418860571725, 0.5556003877094814, 0.5352518217904227, 0.5046451772962298, 0.48952858788626535, 0.4856619324002947, 0.4599368912833078, 0.4577717270169939, 0.4511211940220424, 0.44111386367252897, 0.42227847235543386, 0.41814868790762766, 0.3999617270060948, 0.3931735668863569, 0.3853861689567566, 0.3803383452551706, 0.37237984793526785, 0.37065080233982634, 0.3634082249232701, 0.3607362593923296, 0.3573126792907715, 0.35169921602521625, 0.35181509596960886, 0.34859784160341534, 0.346470764705113, 0.340883731842041, 0.33569873230797903, 0.3405285222189767, 0.32848794971193584, 0.32489595242909025, 0.32611277273723055, 0.3272817390305655, 0.33018483434404644, 0.3261972325188773, 0.31825891562870573, 0.3210312894412449, 0.3151242903300694, 0.31669184139796663, 0.31630932433264597, 0.3247815029961722, 0.31882570471082416, 0.3157001052583967, 0.3123336604663304, 0.316406922680991, 0.31566223076411654, 0.3126135468482971, 0.31180319615772795, 0.3089038218770708, 0.31321259907313753, 0.31094873803002493, 0.31635031529835295, 0.31130915880203247, 0.3091393027986799, 0.3148313249860491, 0.3092565962246486, 0.32114373786108835, 0.30758912222726004, 0.31882403578077045], "val_accuracy": [0.5353333353996277, 0.6863333582878113, 0.7390000224113464, 0.7616666555404663, 0.7706666588783264, 0.7789999842643738, 0.7846666574478149, 0.784333348274231, 0.8003333210945129, 0.7979999780654907, 0.8056666851043701, 0.8059999942779541, 0.8190000057220459, 0.8293333053588867, 0.82833331823349, 0.8360000252723694, 0.840666651725769, 0.8389999866485596, 0.8456666469573975, 0.8506666421890259, 0.8526666760444641, 0.8519999980926514, 0.8546666502952576, 0.8516666889190674, 0.8513333201408386, 0.8569999933242798, 0.8573333621025085, 0.8576666712760925, 0.8600000143051147, 0.8629999756813049, 0.8666666746139526, 0.8673333525657654, 0.862333357334137, 0.8696666955947876, 0.8643333315849304, 0.8633333444595337, 0.871999979019165, 0.8646666407585144, 0.8736666440963745, 0.8733333349227905, 0.875333309173584, 0.871999979019165, 0.8693333268165588, 0.8743333220481873, 0.8713333606719971, 0.8759999871253967, 0.8773333430290222, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8803333044052124, 0.8743333220481873, 0.8740000128746033, 0.8793333172798157, 0.8816666603088379, 0.878000020980835, 0.8769999742507935, 0.8786666393280029, 0.8799999952316284, 0.8793333172798157]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.836571455001831, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.212289400072996, 1.4874741808613294, 0.9637928715455707, 0.7986936417584564, 0.7349499640699706, 0.68206485179689, 0.6479550620835959, 0.6299035391157581, 0.6104340465738631, 0.5869149768420214, 0.5774171916312073, 0.5532470107739864, 0.5405994787774837, 0.5197545293063661, 0.5033281733646149, 0.4941297559343891, 0.4804839803802181, 0.4684343555497613, 0.47106731074156466, 0.44329737021529114, 0.44160787591750295, 0.4306214733949474, 0.423933729999778, 0.41616635365634785, 0.4098997552515163, 0.3972640624371943, 0.39643277948039035, 0.3806683019112602, 0.3676522355848977, 0.3658331113248343, 0.3674911632789455, 0.34063398105483156, 0.35290166017260016, 0.3455242992486653, 0.33872413196347695, 0.33343882120485396, 0.32828867977888293, 0.32230012262297375, 0.3148971147753575, 0.30407133975584494, 0.29760166171708397, 0.30057043594895827, 0.29780694552621095, 0.28945682781278936], "accuracy": [0.2513538599014282, 0.5077268481254578, 0.6452252268791199, 0.7053229212760925, 0.7205125093460083, 0.7446836829185486, 0.7524765729904175, 0.7675340175628662, 0.7730814814567566, 0.783119797706604, 0.7843085527420044, 0.7922335267066956, 0.7991018295288086, 0.8082155585289001, 0.8119139075279236, 0.8175934553146362, 0.8220842480659485, 0.8296129703521729, 0.8248580098152161, 0.8359529972076416, 0.8337075710296631, 0.8416325449943542, 0.8438779711723328, 0.8494254350662231, 0.8491612672805786, 0.8548408150672913, 0.8487650156021118, 0.86118084192276, 0.8602562546730042, 0.8643507957458496, 0.8613129258155823, 0.8741249442100525, 0.86553955078125, 0.871879518032074, 0.8757099509239197, 0.8759741187095642, 0.878879964351654, 0.8824461698532104, 0.880729079246521, 0.8878615498542786, 0.8870691061019897, 0.8886540532112122, 0.8862766027450562, 0.8918240666389465], "val_loss": [1.571030514580863, 0.736926691872733, 0.6142256770815168, 0.5547729390008109, 0.5363384655543736, 0.5040038313184466, 0.49029793058122906, 0.48562499455043245, 0.4620990582874843, 0.4570842300142561, 0.44969022274017334, 0.44029433386666433, 0.42044264929635183, 0.41715183428355623, 0.40178548438208445, 0.39457881450653076, 0.38748812675476074, 0.38571219784872873, 0.3728430782045637, 0.3698581116540091, 0.36502001115253996, 0.36227372714451384, 0.3594214405332293, 0.35530175481523785, 0.35870033502578735, 0.35044384002685547, 0.3439407008034842, 0.336737436907632, 0.3355168274470738, 0.3388938733509609, 0.3276440330914089, 0.3271968109267099, 0.32536137104034424, 0.32320178406579153, 0.3295141117913382, 0.32730350324085783, 0.3187664066042219, 0.3194055046354021, 0.31588935000555857, 0.3197965366499765, 0.31506202050617765, 0.32298703704561504, 0.3221700276647295, 0.3172799604279654], "val_accuracy": [0.5353333353996277, 0.6863333582878113, 0.7383333444595337, 0.7616666555404663, 0.7706666588783264, 0.7763333320617676, 0.7846666574478149, 0.7850000262260437, 0.7979999780654907, 0.7956666946411133, 0.8090000152587891, 0.8043333292007446, 0.8223333358764648, 0.8230000138282776, 0.8286666870117188, 0.8306666612625122, 0.8396666646003723, 0.8386666774749756, 0.8450000286102295, 0.8513333201408386, 0.8510000109672546, 0.8529999852180481, 0.8536666631698608, 0.8513333201408386, 0.8456666469573975, 0.8553333282470703, 0.862666666507721, 0.8613333106040955, 0.8640000224113464, 0.8633333444595337, 0.8653333187103271, 0.8676666617393494, 0.8646666407585144, 0.8666666746139526, 0.8646666407585144, 0.8633333444595337, 0.8696666955947876, 0.8686666488647461, 0.8740000128746033, 0.8709999918937683, 0.8723333477973938, 0.8703333139419556, 0.8683333396911621, 0.8723333477973938]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 5, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 0, 2, 0, 0, 2, 2], [42, 3, 13, 96, 41]], "fitness": -0.671999990940094, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2957495262184793, 2.2553942808464393, 2.166067977355314, 1.9719153726578011, 1.642905136597643, 1.393868844554157, 1.3515509538457788, 1.1923388858843535, 0.9486539742855615, 0.9077874168728037, 0.8974111077729123, 0.8350538379559349, 0.817276024209069, 0.8130674205199838, 0.8007793273703454, 0.7700990750773582, 0.7488458762000723, 0.734281681067656, 0.7522862935818859, 0.7253999617341927, 0.7089902260016614, 0.7043785246576474, 0.6781518958531603, 0.6704053478769386, 0.657820093405009, 0.6343481994072019, 0.6256049167777663, 0.6169258212337814, 0.6033586325615216, 0.6017873607700873, 0.5942378179461114, 0.5790872152266391, 0.5775276110424515, 0.5618180703918427, 0.5647128648557022, 0.546162433155681, 0.5416613762656758, 0.5417160762220783, 0.533552247511791, 0.5141181214854639, 0.5170311263492158, 0.5031727505885946, 0.5127608459371507, 0.4969211840642174, 0.48612540723341896, 0.48294035541839636, 0.48470847296629754, 0.4769031004213843, 0.47959897657427036, 0.4828172698548095, 0.4662005221248539, 0.469070996012056, 0.4671623646512307, 0.4575868206898991, 0.4505972197153124, 0.4436343490817622, 0.45279510743771373, 0.4391140010866743, 0.4349231451312864, 0.43579970978632454, 0.4250032837010488, 0.42475950965917875, 0.40800385179300475, 0.420081292916881, 0.4225327274574501, 0.410320869246809, 0.3950390276687178, 0.4049748618486866, 0.3988873406589275, 0.3966803741477122, 0.39130664452774616, 0.38961365412349447, 0.3975895359145809, 0.39750794372963566, 0.38317781425800934, 0.3768369370227351, 0.3715345765566231, 0.3707027548985348, 0.38685019022012984], "accuracy": [0.10698718577623367, 0.21318188309669495, 0.33747193217277527, 0.4039096534252167, 0.45885616540908813, 0.5138026475906372, 0.5513142347335815, 0.6077136397361755, 0.6553955674171448, 0.6563201546669006, 0.6668868064880371, 0.6894729733467102, 0.6926429867744446, 0.6963412761688232, 0.7012283802032471, 0.7071720957756042, 0.7140403985977173, 0.7156254053115845, 0.7165499925613403, 0.735041618347168, 0.7327961921691895, 0.7359662055969238, 0.7401928305625916, 0.7432307600975037, 0.7397965788841248, 0.7537974119186401, 0.7617223858833313, 0.7668735980987549, 0.7734777331352234, 0.772288978099823, 0.7726852297782898, 0.7771760821342468, 0.7791573405265808, 0.7881389260292053, 0.7868181467056274, 0.7932901978492737, 0.7981772422790527, 0.7955356240272522, 0.7992339134216309, 0.8041210174560547, 0.8054417967796326, 0.8084797263145447, 0.8049134612083435, 0.8076872229576111, 0.8161405324935913, 0.816008448600769, 0.819970965385437, 0.8220842480659485, 0.8186501264572144, 0.8177255392074585, 0.8228767514228821, 0.8244617581367493, 0.8224804997444153, 0.8274996876716614, 0.8310658931732178, 0.8348963260650635, 0.8286884427070618, 0.8362171649932861, 0.8330471515655518, 0.8337075710296631, 0.844010055065155, 0.8381983637809753, 0.846387505531311, 0.8413683772087097, 0.8428213000297546, 0.8407079577445984, 0.8498216867446899, 0.8451988101005554, 0.8457271456718445, 0.8491612672805786, 0.8436138033866882, 0.852859616279602, 0.8510104417800903, 0.8544445633888245, 0.8540483713150024, 0.8552370667457581, 0.8544445633888245, 0.8569541573524475, 0.8541803956031799], "val_loss": [1.9479225022452218, 1.8891454424176897, 1.7665600776672363, 1.4827343395778112, 1.0840177536010742, 0.8348009926932198, 0.7405105658939907, 0.7190066916601998, 0.6667209012167794, 0.6916509526116508, 0.6648456369127546, 0.6218495879854474, 0.602354781968253, 0.6033544370106289, 0.5783968652997699, 0.5745150532041278, 0.5591051408222744, 0.5709270238876343, 0.5681943723133632, 0.5429320675986153, 0.5425451483045306, 0.5357114757810321, 0.5201683895928519, 0.5080387251717704, 0.4942586421966553, 0.4757106133869716, 0.47382991654532297, 0.48218962124415804, 0.4731250320162092, 0.46055541719709125, 0.44953107833862305, 0.44594006878989084, 0.44713362625667025, 0.43870326450892855, 0.44123836926051546, 0.439559953553336, 0.43985044956207275, 0.43826375688825336, 0.4215789096696036, 0.41835327659334454, 0.4171187962804522, 0.41297030448913574, 0.4182808143751962, 0.4158004777772086, 0.41285537821905954, 0.4120720795222691, 0.4046816485268729, 0.4001789518765041, 0.39928715569632395, 0.39769047498703003, 0.40320790665490286, 0.4057001641818455, 0.401964042867933, 0.39922523498535156, 0.3954414129257202, 0.3962293692997524, 0.3955350603376116, 0.3927688258034842, 0.3889373115130833, 0.3837261199951172, 0.38651894671576364, 0.39422184228897095, 0.39700878517968313, 0.39916080236434937, 0.3941560557910374, 0.38052248103278025, 0.3760644197463989, 0.37270720515932354, 0.370070287159511, 0.3719074385506766, 0.3727853809084211, 0.3799815944262913, 0.3868106518472944, 0.38165985686438425, 0.3778655529022217, 0.375461254801069, 0.3807580385889326, 0.38590751375470844, 0.38099596330097746], "val_accuracy": [0.2553333342075348, 0.4103333353996277, 0.46299999952316284, 0.5199999809265137, 0.6016666889190674, 0.671999990940094, 0.6930000185966492, 0.7133333086967468, 0.7049999833106995, 0.7143333554267883, 0.7213333249092102, 0.734666645526886, 0.7296666502952576, 0.722000002861023, 0.7463333606719971, 0.7443333268165588, 0.7493333220481873, 0.7513333559036255, 0.7593333125114441, 0.765999972820282, 0.768666684627533, 0.765666663646698, 0.7693333625793457, 0.7736666798591614, 0.7793333530426025, 0.7883333563804626, 0.7889999747276306, 0.7863333225250244, 0.7929999828338623, 0.7996666431427002, 0.8053333163261414, 0.812666654586792, 0.8109999895095825, 0.812666654586792, 0.815666675567627, 0.8153333067893982, 0.8190000057220459, 0.8180000185966492, 0.8259999752044678, 0.8240000009536743, 0.8233333230018616, 0.8259999752044678, 0.8240000009536743, 0.8289999961853027, 0.8306666612625122, 0.8330000042915344, 0.8353333473205566, 0.8363333344459534, 0.8376666903495789, 0.8360000252723694, 0.8356666564941406, 0.8366666436195374, 0.8403333425521851, 0.8366666436195374, 0.8420000076293945, 0.843999981880188, 0.8473333120346069, 0.8493333458900452, 0.8486666679382324, 0.8483333587646484, 0.8489999771118164, 0.8496666550636292, 0.8503333330154419, 0.8493333458900452, 0.8506666421890259, 0.8523333072662354, 0.8553333282470703, 0.8536666631698608, 0.8496666550636292, 0.8496666550636292, 0.8576666712760925, 0.8550000190734863, 0.8576666712760925, 0.8603333234786987, 0.8560000061988831, 0.8526666760444641, 0.8526666760444641, 0.8546666502952576, 0.8536666631698608]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [3, 6, 7, 9, 3, 0, 1, 3, 2, 2, 5, 1, 9], [0, 0, 2, 0, 0, 2, 2, 0], [42, 52, 13, 96, 41, 29, 22]], "fitness": -0.32685714960098267, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 21, 13, 8, 7], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), beta), tf.math.subtract(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [5063.325231183553, 14111.916997475977, 21607.609851994865, 28610.836682272406, 35922.833086881685, 42555.029007685574, 49725.769323322544, 58054.94650795387, 63569.24344125611, 70995.16488905033, 79056.0854081363, 85313.98127621021, 92762.24955628384], "accuracy": [0.10579843819141388, 0.12151630967855453, 0.1344604343175888, 0.14449875056743622, 0.1538766324520111, 0.15532954037189484, 0.1566503793001175, 0.1582353711128235, 0.16999074816703796, 0.16695284843444824, 0.16140536963939667, 0.16959451138973236, 0.15836745500564575], "val_loss": [3378.9552176339284, 3602.8635602678573, 5425.584402901785, 6447.7255859375, 7566.488560267857, 8517.867745535714, 9318.415457589286, 10615.289341517857, 12348.515625, 14132.99693080357, 15169.388392857143, 16070.913504464286, 17108.90401785714], "val_accuracy": [0.20233333110809326, 0.23100000619888306, 0.21400000154972076, 0.2529999911785126, 0.27533334493637085, 0.2836666703224182, 0.3016666769981384, 0.3070000112056732, 0.30300000309944153, 0.29733332991600037, 0.3019999861717224, 0.30399999022483826, 0.30566665530204773]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.2662857174873352, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.411870877157979, 3.2506132749376864, Infinity, 3.986076125788761, 3.512456964271857, 3.2852307541526904], "accuracy": [0.20538897812366486, 0.19442610442638397, 0.0956280529499054, 0.09747721254825592, 0.1006472036242485, 0.09972262382507324], "val_loss": [1.836979593549456, 858.6483851841518, 3.2117161069597517, 3.380770683288574, 2.712516648428781, 3.251278877258301], "val_accuracy": [0.30133333802223206, 0.10233332961797714, 0.0949999988079071, 0.10233332961797714, 0.09666666388511658, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10257142782211304, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 5, 2, 3], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304656262883358, 2.315469271849175, 2.333097132205522, 2.366394082678937, 2.4245244299715156, 2.4870256787797542, 2.575634149339268, 2.6922271218612885, 2.7716239297615144, 2.8977662066521503, 3.0270945485462333, 3.105154950432002, 3.206682972290166, 3.275057279580242, 3.312022126692476, 3.383162075518113, 3.3498166725383913, 3.3713127235931064, 3.3630276614995194, 3.36384021994964, 3.3254470434706556, 3.267873111418005, 3.245762138507779, 3.1716324787696655, 3.128225784732555, 3.058884889347962, 3.027749410882964, 2.962773106747205, 2.9084625550548333, 2.859144258177937, 2.826606251386966, 2.7900304535455267, 2.7375901324196956, 2.721579487864462, 2.670007281882211, 2.6362009757010063, 2.6055753295920105, 2.59980985611626, 2.5730780775142996, 2.546312304346742, 2.533870011902662, 2.5121125199334684, 2.5098244659558357, 2.4750886282758975, 2.4973324808572435, 2.4670820009470646, 2.469074404077476, 2.4570327044131655, 2.4527466577734724, 2.4484662790780907, 2.442025126372944, 2.4438545631773483], "accuracy": [0.09060890227556229, 0.08677849918603897, 0.08994849026203156, 0.09959053993225098, 0.09853387624025345, 0.10249637067317963, 0.10051512718200684, 0.10328886657953262, 0.1026284471154213, 0.10302469879388809, 0.09985470771789551, 0.10381719470024109, 0.09945846349000931, 0.10249637067317963, 0.09800554811954498, 0.10328886657953262, 0.10434553027153015, 0.10421344637870789, 0.10527011007070541, 0.10157178342342377, 0.09721305221319199, 0.10328886657953262, 0.10342095047235489, 0.10210011899471283, 0.10460969805717468, 0.10328886657953262, 0.10117553919553757, 0.10632677376270294, 0.1022322028875351, 0.10434553027153015, 0.10540219396352768, 0.10606260597705841, 0.10355303436517715, 0.10302469879388809, 0.09998679161071777, 0.11213842034339905, 0.10830801725387573, 0.09787346422672272, 0.10077928751707077, 0.10685510188341141, 0.10170386731624603, 0.10170386731624603, 0.10315678268671036, 0.11398758739233017, 0.10540219396352768, 0.11042134463787079, 0.09959053993225098, 0.10527011007070541, 0.10236428678035736, 0.10236428678035736, 0.10659094154834747, 0.10196803510189056], "val_loss": [1.9732980046953474, 1.9756099155970983, 1.98394775390625, 2.000882012503488, 2.0260190963745117, 2.0592221532549178, 2.099454402923584, 2.1444264139447893, 2.1920498439243863, 2.238553932734898, 2.2803209168570384, 2.3158485548836842, 2.3425409453255788, 2.3602944101606096, 2.370316505432129, 2.369266986846924, 2.363355909075056, 2.350763661520822, 2.33298397064209, 2.310939380100795, 2.287842001233782, 2.264917714255197, 2.2407801491873607, 2.218375955309187, 2.196287291390555, 2.175436632973807, 2.154960904802595, 2.136678559439523, 2.11992917742048, 2.10482610974993, 2.090557370867048, 2.0773490497044156, 2.0662499836512973, 2.0555406297956194, 2.046849387032645, 2.039283411843436, 2.0327330998011996, 2.0265118735177174, 2.021396977560861, 2.0173300334385464, 2.013631684439523, 2.010526180267334, 2.007523400442941, 2.005369322640555, 2.0027075495038713, 2.000875541142055, 1.9990499360220773, 1.9975189481462752, 1.9960440226963587, 1.9946873528616769, 1.9934873580932617, 1.9922430174691337], "val_accuracy": [0.036666665226221085, 0.08699999749660492, 0.09700000286102295, 0.10066666454076767, 0.10199999809265137, 0.10333333164453506, 0.10433333367109299, 0.10333333164453506, 0.10400000214576721, 0.10400000214576721, 0.10433333367109299, 0.10499999672174454, 0.10599999874830246, 0.10599999874830246, 0.10599999874830246, 0.10766666382551193, 0.10833333432674408, 0.10866666585206985, 0.10999999940395355, 0.11166666448116302, 0.11433333158493042, 0.11866666376590729, 0.11966666579246521, 0.12133333086967468, 0.12099999934434891, 0.12300000339746475, 0.12733332812786102, 0.12933333218097687, 0.12999999523162842, 0.1303333342075348, 0.13099999725818634, 0.1326666623353958, 0.13366666436195374, 0.1353333294391632, 0.13566666841506958, 0.1353333294391632, 0.13633333146572113, 0.1353333294391632, 0.13699999451637268, 0.13600000739097595, 0.13600000739097595, 0.13766667246818542, 0.13600000739097595, 0.13566666841506958, 0.1366666704416275, 0.13733333349227905, 0.1393333375453949, 0.13833333551883698, 0.13633333146572113, 0.13600000739097595, 0.13600000739097595, 0.13766667246818542]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 5, 7, 3, 0, 1, 3, 2, 2, 5], [0, 1, 2, 0, 0, 2, 2], [42, 87, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023920399622124, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 5, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [0, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 2, 3, 0, 1, 3, 2, 2, 5], [2, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [7, 1], [64], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 7, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(beta, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha)), beta)", "other_info": {"loss": [1736112351.9123633, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08440100401639938, 0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2116598216411.4285, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [8, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 5, 4, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3023920399622124, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [8, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 9, 4, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [9, 90, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.302856223647148, 2.5627594820780133, 12.762701009101146, 68.29099546872614, 181.68029887942967, 352.4388141906682], "accuracy": [0.108440101146698, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9857188633510046, 3.5704115458897183, 30.927571977887833, 107.3734152657645, 232.9814191545759, 407.83865792410717], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 1, 9, 7, 3, 0, 1, 3, 2, 2, 5], [2, 0, 2, 0, 0, 2, 2], [76, 94, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.2823579248703703, 2.3253097589288987, 2.33138113732918, 2.357378868363269, 2.3495098070745, 2.339279807396474, 2.3467941835587602], "accuracy": [0.09747721254825592, 0.10091137140989304, 0.10117553919553757, 0.09668471664190292, 0.09298639744520187, 0.09787346422672272, 0.09893012791872025], "val_loss": [2.0224146161760603, 2.017812933240618, 2.0058837618146623, 1.9859826224190849, 1.9975159508841378, 2.047049249921526, 2.006171839577811], "val_accuracy": [0.09566666930913925, 0.10366666316986084, 0.09666666388511658, 0.10199999809265137, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 1, 9, 2, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 11, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [68], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 8, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 4, 0, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3023920399622124, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 5, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 2, 0, 0, 2, 2], [8, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 3, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3020537003487047, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 1, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 6, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 7, 25, 75], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 2, 2, 3, 0, 1, 3, 2, 2, 5, 7, 5, 4, 4], [1, 2, 2, 0, 0, 2, 2, 1, 1, 2, 1, 3, 2], [42, 12, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 28, 15, 13, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), beta), beta)), tf.math.square(tf.math.add(tf.math.square(alpha), tf.math.pow(alpha, beta))))), tf.math.pow(alpha, sigma))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 1, 4, 1, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [78, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 9, 5, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 2, 0, 0, 2, 2], [59, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07845727354288101, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]