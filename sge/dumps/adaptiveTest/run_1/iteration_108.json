[{"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 0, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.7531428337097168, "mapping_values": [1, 13, 13, 8, 5, 2, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.square(alpha)))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.284539548649433, 2.1294218255638713, 1.6070143111614015, 1.31720551222921, 0.968850539518212, 0.8838683963530508, 0.8353636458864491, 0.8156573923902268, 0.7679908923295983, 0.7567013692326786, 0.7298459252897365, 0.6961333953457234, 0.6615026548491052, 0.6404861248542509, 0.6199622386560905, 0.6025172065844578, 0.5909530979578348, 0.5688738467167114, 0.5602730844691918, 0.538471761869008, 0.526357431658003, 0.5238995942630473, 0.5163801860587315, 0.4949986124830696, 0.4923810239922117, 0.4942641137432287, 0.49321295002337856, 0.47142604966094986, 0.4933308839656264, 0.5240795101629445, 0.5101598329579338, 0.5064263311690186, 0.49570642060387043, 0.48027012261102353], "accuracy": [0.1410645842552185, 0.3477744162082672, 0.46506404876708984, 0.5581825375556946, 0.6421872973442078, 0.6693964004516602, 0.6781138777732849, 0.6996433734893799, 0.7014925479888916, 0.7199841737747192, 0.7279091477394104, 0.7378153204917908, 0.7411174178123474, 0.7531369924545288, 0.7650244235992432, 0.7680623531341553, 0.7744023203849792, 0.7868181467056274, 0.7893276810646057, 0.7964601516723633, 0.7993659973144531, 0.8068947196006775, 0.8043851256370544, 0.8168009519577026, 0.8220842480659485, 0.8168009519577026, 0.8206313848495483, 0.8224804997444153, 0.8148196935653687, 0.806630551815033, 0.8133667707443237, 0.8061022162437439, 0.8145555257797241, 0.8157442808151245], "val_loss": [1.9035355704171317, 1.5745674542018346, 0.864675692149571, 0.7246889216559274, 0.7006986652101789, 0.6094586678913662, 0.5999553033283779, 0.5758663756506783, 0.5687392268862043, 0.5502831935882568, 0.5309399706976754, 0.5030559641974313, 0.4993218183517456, 0.49182913984571186, 0.47845087732587543, 0.4629996844700405, 0.4517000232424055, 0.4599557774407523, 0.43076484543936594, 0.4219601920672825, 0.4230800271034241, 0.4143149512154715, 0.4086971197809492, 0.41599483149392263, 0.4079599806240627, 0.4072419149535043, 0.402326694556645, 0.4006325602531433, 0.39494603872299194, 0.4249432512692043, 0.42390299694878714, 0.4140497786658151, 0.39537153925214497, 0.40290950877325876], "val_accuracy": [0.38866665959358215, 0.484333336353302, 0.6620000004768372, 0.6890000104904175, 0.7166666388511658, 0.7283333539962769, 0.7306666374206543, 0.7409999966621399, 0.765333354473114, 0.7599999904632568, 0.777999997138977, 0.7836666703224182, 0.7803333401679993, 0.7893333435058594, 0.8013333082199097, 0.7986666560173035, 0.812666654586792, 0.8096666932106018, 0.8186666369438171, 0.8206666707992554, 0.8236666917800903, 0.8339999914169312, 0.8306666612625122, 0.8349999785423279, 0.8349999785423279, 0.8343333601951599, 0.8373333215713501, 0.840666651725769, 0.8423333168029785, 0.8353333473205566, 0.8226666450500488, 0.8360000252723694, 0.8343333601951599, 0.8403333425521851]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 1, 8, 6, 2, 4, 8, 5, 5, 8, 4, 4, 6, 3, 6], [2, 1, 1, 0, 0, 1, 2, 2, 0], [31, 13, 29, 49, 25], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [3, 7, 5, 9, 4, 7, 3, 9], [2, 3, 0, 4, 1], [98, 47, 74], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 6, 9, 1, 2], [0, 0, 0], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.2249548011099507e+18, 2.331876441270503e+19, 1.0718661760775712e+20, 2.99091986107996e+20, 6.48130101448148e+20, 1.1697784462062775e+21], "accuracy": [0.09708096832036972, 0.09642054885625839, 0.10249637067317963, 0.09853387624025345, 0.10210011899471283, 0.09919429570436478], "val_loss": [4.522666572653939e+18, 3.6090848428896776e+19, 1.2213292729378343e+20, 2.8929896574276053e+20, 5.694707434692794e+20, 9.867795927552762e+20], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10266666859388351, 0.10333333164453506, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 5, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 0, 0, 1, 2, 2, 0], [31, 74, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [3, 7, 6, 2, 5, 7, 3, 5], [2, 1, 3, 4, 1, 0, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 1, 0, 1, 1], [2, 3, 9, 1, 2], [2, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 2, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.square(alpha)))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad)))), grad)), tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08479725569486618, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 4, 2, 4, 6, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 2, 0, 1, 2, 2, 0], [31, 13, 29, 49, 25], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [3, 1, 6, 6, 5, 7, 3, 5], [2, 1, 3, 4, 1, 0, 1], [98, 30], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 1, 0, 1, 1], [2, 3, 9, 1, 2], [2, 0, 2], [41, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 12, 8, 2, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), alpha), grad)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 0, 6, 0, 4, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 2, 2, 2, 2, 2, 0], [31, 32, 29, 49, 25], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [3, 4, 6, 0, 4, 7, 6, 9, 0], [4, 3, 0, 4, 3, 5], [98, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [9, 3, 9, 1, 2], [1, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 15, 15, 9, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.pow(tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [8, 2, 8, 6, 0, 6, 0, 4, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [3, 7, 1, 5, 5, 7, 3, 9], [2, 3, 2, 1, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [9, 3, 9, 1, 2], [1, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, grad)))))), beta)), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027811746051867, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [0, 0, 1, 2, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 0, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(grad)))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [61.29359531188449, 750.3860326990429, 3087.051799346396, 8291.726732247227, 17609.832119219307, 31324.143391518624], "accuracy": [0.0956280529499054, 0.09787346422672272, 0.1026284471154213, 0.09893012791872025, 0.10077928751707077, 0.09879804402589798], "val_loss": [172.98366001674108, 1084.717808314732, 3440.1256975446427, 7943.744419642857, 15295.45424107143, 26194.129464285714], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 5, 8, 3, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 1, 1, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 8, 6, 5, 5, 7, 3, 9], [2, 3, 0, 4, 1], [98, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 2, 9, 1, 2], [2, 2, 2], [43, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 1, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), alpha), tf.math.add(alpha, alpha)))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(grad))))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), beta), beta)", "other_info": {"loss": [2.3027811746051867, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 8, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 13, 29, 49, 25], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1], [3, 9, 6, 3, 5, 7, 3, 9], [2, 3, 0, 0, 1], [98, 47, 74], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [0, 0, 0], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 7, 7, 4, 3, 2, 1, 0, 0, 0, 0, 5, 2, 3, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027811746051867, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 0, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 4, 6, 5, 5, 7, 3, 9], [2, 4, 0, 3, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [3, 3, 3], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(sigma, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07594769448041916, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 7, 6, 4, 5, 7, 3, 9], [4, 1, 0, 1, 1], [98, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [4, 3, 9, 1, 2], [0, 0, 2], [43, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 4, 5, 1, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.pow(alpha, tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), alpha)), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [8, 2, 8, 6, 0, 6, 0, 4, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 0, 2, 1, 2, 2, 0], [52, 89, 29, 49, 25], [0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [3, 4, 6, 5, 5, 7, 6, 9], [2, 3, 0, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 3, 9, 1, 2], [3, 3, 2, 0], [51, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(sigma, tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302947612470718, 2.302726334899471, 2.3027622893407376, 2.3027400478254205, 2.3027214159062983, 2.302778953920817, 2.3027790518264255, 2.302785773240123, 2.302747498445381], "accuracy": [0.0944393053650856, 0.09338264167308807, 0.10011887550354004, 0.09615638852119446, 0.09430722147226334, 0.09642054885625839, 0.09681680053472519, 0.09509972482919693, 0.09694888442754745], "val_loss": [1.9736358097621374, 1.9736393519810267, 1.9736836978367396, 1.9736461639404297, 1.9736512729099818, 1.9736994334629603, 1.9736754553658622, 1.9737140110560827, 1.9737120355878557], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.0949999988079071, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 0, 6, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 1, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1], [6, 7, 0, 9, 5, 7, 3, 9], [2, 3, 0, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 8, 9, 1, 2], [3, 0, 2], [55, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [813788539.6592351, 15474070913.335623, 71033866008.71747, 198400380376.709, 429593017123.673, 772738959274.7906], "accuracy": [0.09655263274908066, 0.09800554811954498, 0.10249637067317963, 0.09906221181154251, 0.10091137140989304, 0.09879804402589798], "val_loss": [3007287881.142857, 24050005723.42857, 81159679414.85715, 192367198208.0, 375704499931.4286, 649204409490.2858], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 4, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 9, 1, 1, 5, 7, 3, 9], [2, 3, 0, 4, 1], [98, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 1, 1, 1, 1], [5, 3, 9, 1, 2], [2, 2, 0], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.add(beta, tf.math.subtract(grad, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7936680.5500104595, 2.3140276241390665, 2.3058386385921064, 2.303529626106652, 2.3030033928134643, 2.3030689902010217, 2.3030467348611428, 2.3030535247993194, 2.302962272646814], "accuracy": [0.0948355570435524, 0.09708096832036972, 0.09126931428909302, 0.09774138033390045, 0.09602430462837219, 0.09826971590518951, 0.0944393053650856, 0.09536388516426086, 0.09642054885625839], "val_loss": [1.9890503883361816, 1.9777382441929408, 1.9746698651994978, 1.973832062312535, 1.9737158502851213, 1.9738283157348633, 1.9737045424325126, 1.9738379205976213, 1.9737820625305176], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.0949999988079071, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10066666454076767, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 8, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1], [2, 6, 6, 5, 5, 7, 3, 9], [2, 2, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(beta))), tf.math.add(beta, grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 0, 4, 1], [83, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 0, 1, 1, 1], [0, 3, 4, 1, 2], [2, 2, 2], [43, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3037618297737636, 2.3047862977494087, 2.3056562920886416, 2.309064155241533, 2.3104992773806523, 2.31402537293989, 2.318998081021856, 2.326612086832059, 2.331640386216125, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08730682730674744, 0.08426892012357712, 0.08836349099874496, 0.080042265355587, 0.0820235088467598, 0.07951393723487854, 0.080042265355587, 0.08308017253875732, 0.08598599582910538, 0.09153348207473755, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9718979426792689, 1.9732159887041365, 1.9744978632245744, 1.9764149529593331, 1.9786362648010254, 1.9811899321419852, 1.9844183240618025, 1.9890284538269043, 1.9962084633963448, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.032999999821186066, 0.03400000184774399, 0.050333332270383835, 0.0560000017285347, 0.07999999821186066, 0.09533333033323288, 0.09933333098888397, 0.10066666454076767, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [0, 2, 1, 0, 0, 1, 2, 2, 0, 0, 2, 0], [31, 13, 29, 49, 25], [1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 7, 6, 1, 5, 7, 3, 9, 7], [2, 3, 0, 4, 1], [47], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [9, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 9, 9, 4, 5, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027811746051867, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 0, 6, 0, 4, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 2, 2, 2, 2, 2, 0], [52, 89, 29, 49, 25], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [3, 4, 6, 5, 5, 7, 6, 9], [2, 3, 0, 4, 1, 5], [92, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [9, 3, 9, 1, 2], [1, 0, 2], [43, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), alpha)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 8, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 0, 0, 1, 2, 2, 0], [31, 13, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [5, 7, 6, 6, 9, 7, 3, 9], [2, 1, 3, 4, 1, 0, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 1, 0, 1, 1], [2, 3, 9, 1, 2], [3, 0, 2], [41, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 14, 14, 9, 5, 3, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))), alpha), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, alpha)), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3032186694227708, 2.3025901218084783, 2.301987924438505, 2.302818090782473, 2.3019096918109856, 2.301694836740591], "accuracy": [0.08691058307886124, 0.08757099509239197, 0.09179764986038208, 0.08558975160121918, 0.09047681838274002, 0.08796724677085876], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 8, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 2, 2, 2, 2, 2, 0], [31, 32, 29, 49, 25], [0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1], [5, 7, 6, 5, 5, 7, 3, 9], [5, 3, 0, 4, 3, 5], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 8, 9, 1, 2], [3, 0, 2], [55, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.add(beta, grad)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3032186694227708, 2.3025901218084783, 2.301987924438505, 2.302818090782473, 2.3019096918109856, 2.301694836740591], "accuracy": [0.08691058307886124, 0.08757099509239197, 0.09179764986038208, 0.08558975160121918, 0.09047681838274002, 0.08796724677085876], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]