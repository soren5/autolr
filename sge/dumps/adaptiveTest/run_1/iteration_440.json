[{"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 9, 1, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8397142887115479, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 5, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(grad, tf.math.square(alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0693047137040628, 1.6383882457270613, 1.0693512293940066, 0.870656689829468, 0.7810971105591559, 0.73573581483685, 0.7094190468121797, 0.7010971692968526, 0.6483128715295203, 0.6533762420472404, 0.6390136038039921, 0.5897171423892146, 0.5650030746278573, 0.5835103986521817, 0.5460587014627337, 0.5352935065226139, 0.5239132568663326, 0.512543551516555, 0.5196226493100826, 0.4884235234213952, 0.4704516409229467, 0.4744659475741086, 0.4696845099233507, 0.4577681494623584, 0.4411361732022826, 0.4330598333799576, 0.4368180289811399, 0.4306008897130327, 0.40403017689444526, 0.3991885415204937, 0.3910128106695865, 0.3955014765797951, 0.3901482389674226, 0.36277481552207036, 0.37259414393699336, 0.3602575823702061, 0.3613679334826363, 0.3534734051351329, 0.35086573995556325, 0.35098048109719154, 0.32897047876225266, 0.3374440081918465, 0.34836611167047127, 0.3206216143248592, 0.32313458927948996], "accuracy": [0.3288865387439728, 0.4163254499435425, 0.609959065914154, 0.6684718132019043, 0.7028133869171143, 0.7180029153823853, 0.7359662055969238, 0.7378153204917908, 0.7552502751350403, 0.7534011602401733, 0.757099449634552, 0.7758552432060242, 0.7878747582435608, 0.7783648371696472, 0.793422281742096, 0.7976489067077637, 0.8035926818847656, 0.81112140417099, 0.802800178527832, 0.8216879963874817, 0.8256505131721497, 0.8272355198860168, 0.8232730031013489, 0.8334434032440186, 0.8368775844573975, 0.8387266993522644, 0.8399154543876648, 0.8400475382804871, 0.8551049828529358, 0.8518029451370239, 0.8593316674232483, 0.852331280708313, 0.8560295701026917, 0.863558292388916, 0.8631620407104492, 0.8672566413879395, 0.8705587387084961, 0.8688416481018066, 0.8705587387084961, 0.8712190985679626, 0.873860776424408, 0.8741249442100525, 0.8679170608520508, 0.8828424215316772, 0.8798044919967651], "val_loss": [1.721576145717076, 0.8278953347887311, 0.6959107773644584, 0.6223206349781581, 0.5897693974631173, 0.5521732228142875, 0.5844396182468959, 0.5073343515396118, 0.5012953962598529, 0.4771209784916469, 0.47211742401123047, 0.4716310501098633, 0.46944514342716764, 0.4516324996948242, 0.42925877230507986, 0.43516336168561665, 0.4202566572598049, 0.41914490291050505, 0.4203724350248064, 0.4117083634649004, 0.3901368038994925, 0.40952364036015104, 0.42152802433286396, 0.3776783687727792, 0.4012342521122524, 0.38627478906086515, 0.363033047744206, 0.35771362270627705, 0.35884743077414377, 0.35655249868120464, 0.35548982449940275, 0.3475109849657331, 0.3349648714065552, 0.340271064213344, 0.3330258386475699, 0.3544612101146153, 0.33800668375832693, 0.3463772790772574, 0.3976623671395438, 0.32910496847970144, 0.3635545032364981, 0.3582448959350586, 0.326573303767613, 0.32462302276066374, 0.33603791679654804], "val_accuracy": [0.25833332538604736, 0.6340000033378601, 0.6850000023841858, 0.7319999933242798, 0.7269999980926514, 0.7409999966621399, 0.75, 0.7746666669845581, 0.7736666798591614, 0.7839999794960022, 0.7956666946411133, 0.7903333306312561, 0.784333348274231, 0.800000011920929, 0.8116666674613953, 0.8106666803359985, 0.8176666498184204, 0.8173333406448364, 0.8113333582878113, 0.8216666579246521, 0.8349999785423279, 0.8306666612625122, 0.8203333616256714, 0.843666672706604, 0.8169999718666077, 0.8323333263397217, 0.8473333120346069, 0.8546666502952576, 0.8526666760444641, 0.8496666550636292, 0.8516666889190674, 0.8536666631698608, 0.856333315372467, 0.8606666922569275, 0.8673333525657654, 0.8533333539962769, 0.8606666922569275, 0.8546666502952576, 0.8339999914169312, 0.8679999709129333, 0.8479999899864197, 0.8476666808128357, 0.8619999885559082, 0.8650000095367432, 0.8633333444595337]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 3, 9, 1, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8339999914169312, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 6, 1, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0693018011617905, 1.636912135431685, 1.0645936952291022, 0.864846415987986, 0.7870840671087347, 0.7280500534345697, 0.7088039145808509, 0.7130750991475896, 0.6466176509542267, 0.6424687404233262, 0.635009159147149, 0.5902657474131239, 0.5762166753972227, 0.5756830358628064, 0.5465115630442456, 0.5328211428829078, 0.52634044021679, 0.5140957830446964, 0.5218786429325981, 0.4928960672553504, 0.4721461345947587, 0.4738660474195771, 0.46303900264241926, 0.46658584565266703, 0.44666848898233125, 0.4349349562155966, 0.4368302222799395, 0.42846672846861267, 0.40666507375223004, 0.39675407332278767, 0.3935662177158243, 0.3961771204447655, 0.384543472623718, 0.3649472492978148, 0.3760508437788702, 0.3612578824298288, 0.3653769152094549, 0.3548993906442909, 0.3498969012877535, 0.35419975959818517, 0.3314366578355111, 0.33807034481707, 0.34257513765315056, 0.33034039279016697, 0.323025671856483, 0.3290736744227804, 0.3174624717537879, 0.30420850857987997], "accuracy": [0.3288865387439728, 0.41685378551483154, 0.6079778075218201, 0.6695284843444824, 0.6999075412750244, 0.7243428826332092, 0.7326641082763672, 0.7363624572753906, 0.7594769597053528, 0.7552502751350403, 0.7586844563484192, 0.7755910754203796, 0.7835160493850708, 0.7837802171707153, 0.7988376617431641, 0.802271842956543, 0.8045172095298767, 0.811649739742279, 0.8026680946350098, 0.8202351331710815, 0.8259146809577942, 0.8253863453865051, 0.82683926820755, 0.8281601071357727, 0.8356888294219971, 0.8372738361358643, 0.841500461101532, 0.839519202709198, 0.8502179384231567, 0.8529917001724243, 0.8569541573524475, 0.8537842035293579, 0.8568220734596252, 0.863558292388916, 0.8588033318519592, 0.8663320541381836, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.8706908226013184, 0.8720116019248962, 0.8730682730674744, 0.8706908226013184, 0.8779553771018982, 0.880729079246521, 0.8780874609947205, 0.885219931602478, 0.8869370222091675], "val_loss": [1.7214501244681222, 0.8265964133398873, 0.6809212480272565, 0.6173285586493356, 0.5835756744657244, 0.5505730594907489, 0.5824738230024066, 0.5127274649483817, 0.49118127141680035, 0.4751935175486973, 0.47485905034201487, 0.47570766721452984, 0.45876247542245047, 0.45439824036189486, 0.4286294834954398, 0.44158758435930523, 0.4276453767504011, 0.42270197187151226, 0.41846732582364765, 0.40767168147223337, 0.39834143434252056, 0.41461403029305594, 0.40405348369053434, 0.38226115703582764, 0.4034669654709952, 0.38869136571884155, 0.36508109739848543, 0.3565521921430315, 0.359627366065979, 0.36089859689985004, 0.3595903771264212, 0.33941113097327097, 0.3360299638339451, 0.3425592950412205, 0.33478982959474834, 0.3480191486222403, 0.34276786020823885, 0.35108195883887156, 0.3957636441503252, 0.32854632820401874, 0.35449823311397005, 0.35433424370629446, 0.32295754126140047, 0.33014361347470966, 0.3370832289968218, 0.3461728606905256, 0.32802919830594746, 0.3331961802073887], "val_accuracy": [0.25833332538604736, 0.6389999985694885, 0.6953333616256714, 0.734000027179718, 0.7333333492279053, 0.7366666793823242, 0.750333309173584, 0.7713333368301392, 0.7823333144187927, 0.7833333611488342, 0.7923333048820496, 0.7926666736602783, 0.7876666784286499, 0.7963333129882812, 0.8143333196640015, 0.8063333630561829, 0.8059999942779541, 0.8116666674613953, 0.8113333582878113, 0.8289999961853027, 0.8276666402816772, 0.8320000171661377, 0.8233333230018616, 0.843999981880188, 0.8149999976158142, 0.8266666531562805, 0.843999981880188, 0.8550000190734863, 0.8496666550636292, 0.8486666679382324, 0.8503333330154419, 0.859000027179718, 0.8566666841506958, 0.8610000014305115, 0.859666645526886, 0.8533333539962769, 0.8619999885559082, 0.8496666550636292, 0.8383333086967468, 0.8663333058357239, 0.8546666502952576, 0.846666693687439, 0.8690000176429749, 0.8636666536331177, 0.8616666793823242, 0.856333315372467, 0.8616666793823242, 0.8600000143051147]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 9, 9, 1, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 29, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.7877143025398254, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9737787897623666, 1.474920828155696, 1.0185541238420754, 0.9251634886456581, 0.7849909166665582, 0.7461699425205814, 0.7231830063198127, 0.708151020063401, 0.6435110857851706, 0.6350366809837035, 0.6175784811509394, 0.595702452532698, 0.5922407041671742, 0.5896149396014614, 0.5676953461522581, 0.5369832113182477, 0.5463055105587873, 0.5393828905143632, 0.5105017992121559], "accuracy": [0.3485668897628784, 0.50350022315979, 0.6252806782722473, 0.6474705934524536, 0.7074362635612488, 0.7077004313468933, 0.7236824631690979, 0.7265883088111877, 0.7520803213119507, 0.7569673657417297, 0.7638356685638428, 0.7770439982414246, 0.7693831920623779, 0.7791573405265808, 0.7804781198501587, 0.7984414100646973, 0.7950072884559631, 0.7981772422790527, 0.8072909712791443], "val_loss": [1.4245475019727434, 0.8220516783850533, 0.8091691051210675, 0.6247476169041225, 0.603132997240339, 0.5404028041022164, 0.5582245247704642, 0.5143948452813285, 0.5092648267745972, 0.4979358060019357, 0.4763045310974121, 0.47615415709359304, 0.4723912307194301, 0.47258361748286654, 0.4692015988486154, 0.49666699341365267, 0.4728116478238787, 0.4894560064588274, 0.4851395913532802], "val_accuracy": [0.4976666569709778, 0.659333348274231, 0.637666642665863, 0.7366666793823242, 0.7239999771118164, 0.7593333125114441, 0.7620000243186951, 0.7683333158493042, 0.7773333191871643, 0.784333348274231, 0.7893333435058594, 0.7893333435058594, 0.7903333306312561, 0.7933333516120911, 0.7886666655540466, 0.7726666927337646, 0.7929999828338623, 0.762333333492279, 0.7663333415985107]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 4, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [44, 7, 5, 49, 19, 46], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 3, 9, 1, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.5725714564323425, "mapping_values": [1, 14, 14, 10, 4, 5, 7, 7, 6, 1, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301135396724364, 2.2974910366694217, 2.296509217875839, 2.295515810352165, 2.2913826815031144, 2.289443425845004, 2.288062220724456, 2.282876986018765, 2.2830183293447517, 2.282497725923221, 2.2784276397835073, 2.2769934787190964, 2.273922995899993, 2.2720912979137564, 2.2686141108194313, 2.26813111666124, 2.2641522818552646, 2.261134750791718, 2.257409282631925, 2.256982925183517, 2.254475181569765, 2.2532973046693914, 2.249666955540004, 2.247913496888876, 2.24626885788111, 2.2427721762339106, 2.2375120452807296, 2.235470169775553, 2.2319350768200015, 2.2300473866193773, 2.226971257364336, 2.223310100466993, 2.2200587177478153, 2.217234008521011, 2.2132231511806437, 2.2103786911584633, 2.2084724899327766, 2.2032955302506894, 2.2001468250386513, 2.1958707841695055, 2.190205894740282, 2.1864432062313557, 2.1822274488905844, 2.179809423564306, 2.1742045285443212, 2.16859863607749, 2.1663576594244267, 2.159088124845951, 2.155945044057622, 2.150911715178363, 2.142949642238836, 2.14093891227439, 2.13223092235736, 2.129057671557391, 2.1216663237276836, 2.1188027160892933, 2.1126801349137043, 2.102405595804612, 2.098086730820738, 2.0918400070340075, 2.0858004180715226, 2.077982691222052, 2.0688672997239497, 2.06250856171793, 2.0534917848803946, 2.0495967943717806, 2.0414411490068396, 2.0308473842365395, 2.0223489789568503, 2.014010047648073, 2.0075761848956586, 1.9964040241945595, 1.989587267360604, 1.9820012826929634, 1.972436221630629, 1.9607041069954583, 1.9553251496206547, 1.939486268945673, 1.932906031167707, 1.9238589939550244, 1.9126858815635437, 1.902411004067601, 1.8919922421558295, 1.883412008634443, 1.8756355887249145, 1.8593362797646553, 1.8446570013051555, 1.8410129641119861, 1.8291942934082357, 1.8144777359633066, 1.8059382996208333, 1.7892423428407105, 1.7832485540368852, 1.7686582260348493, 1.7627292152377576, 1.7497377446487894, 1.7346471564928145, 1.7244834653957408, 1.715985811129852, 1.7016388717627937], "accuracy": [0.09496764093637466, 0.10249637067317963, 0.09959053993225098, 0.10421344637870789, 0.11808215826749802, 0.11913882195949554, 0.11979923397302628, 0.1328754425048828, 0.13921542465686798, 0.13974376022815704, 0.1534803807735443, 0.15678246319293976, 0.1670849323272705, 0.1694624274969101, 0.17897239327430725, 0.18663319945335388, 0.1900673657655716, 0.19495442509651184, 0.2122572958469391, 0.21304979920387268, 0.21516312658786774, 0.22216351330280304, 0.22942808270454407, 0.2218993455171585, 0.23022057116031647, 0.2425042986869812, 0.24897634983062744, 0.2538634240627289, 0.2620525658130646, 0.2627129852771759, 0.2728833854198456, 0.2751287817955017, 0.28345000743865967, 0.27803459763526917, 0.2856954038143158, 0.2876766622066498, 0.29362040758132935, 0.30445119738578796, 0.3086778521537781, 0.3082816004753113, 0.3129045069217682, 0.3229427933692932, 0.3263769745826721, 0.3191123902797699, 0.33258485794067383, 0.34143441915512085, 0.3381323516368866, 0.3419627547264099, 0.34064191579818726, 0.3490952253341675, 0.3571522831916809, 0.3497556447982788, 0.3663980960845947, 0.3695680797100067, 0.3761722445487976, 0.3593977093696594, 0.3649451732635498, 0.37841764092445374, 0.37802138924598694, 0.3773609697818756, 0.38066306710243225, 0.38885220885276794, 0.395720511674881, 0.38422930240631104, 0.3955884277820587, 0.3937392830848694, 0.40087175369262695, 0.40007925033569336, 0.39889049530029297, 0.40562674403190613, 0.41526877880096436, 0.4127592146396637, 0.4151366949081421, 0.4208162724971771, 0.4171179533004761, 0.4189670979976654, 0.4294016659259796, 0.4345529079437256, 0.43243956565856934, 0.4329679012298584, 0.4377228915691376, 0.44023245573043823, 0.43930789828300476, 0.44630828499794006, 0.43970412015914917, 0.4443270266056061, 0.44789329171180725, 0.4422137141227722, 0.4543653428554535, 0.4558182656764984, 0.45608243346214294, 0.46612071990966797, 0.4699511229991913, 0.4710077941417694, 0.46110156178474426, 0.46466779708862305, 0.46691322326660156, 0.4756307005882263, 0.46929070353507996, 0.4764232039451599], "val_loss": [1.968815735408238, 1.9667187418256487, 1.9646485873631068, 1.9625904219491142, 1.9605063710893904, 1.9584368978227888, 1.9563773018973214, 1.954301016671317, 1.9522087914603097, 1.9501307351248605, 1.9480389867510115, 1.9459477152143205, 1.9438315800258092, 1.9416977337428503, 1.93953309740339, 1.937352112361363, 1.9351527350289481, 1.9328970909118652, 1.9306108610970634, 1.9282778331211634, 1.9258984157017298, 1.9235212462288993, 1.9210801805768694, 1.9185911587306432, 1.9160871505737305, 1.9134989465985979, 1.9108334268842424, 1.9081170899527413, 1.9053205762590681, 1.902482169015067, 1.8995637212480818, 1.8965838296072823, 1.8935155868530273, 1.890402180807931, 1.8871910912649972, 1.8839000293186732, 1.8805413246154785, 1.8770953587123327, 1.8735453741891044, 1.8698650768824987, 1.8661140033176966, 1.8622328894478934, 1.8582297733851842, 1.8541325841631209, 1.8498808315822057, 1.8455305780683244, 1.8410924502781458, 1.8365159034729004, 1.8318118367876326, 1.827002797807966, 1.8219665799822127, 1.8168913296290807, 1.811598641531808, 1.8061842237200056, 1.8006266866411482, 1.7950029373168945, 1.7892283712114607, 1.783233642578125, 1.777132306780134, 1.7708844457353865, 1.7644448280334473, 1.7578482627868652, 1.7509923662458147, 1.7440054757254464, 1.736837318965367, 1.729616982596261, 1.7221668788364954, 1.7145395278930664, 1.7067131996154785, 1.6987123489379883, 1.6906016894749232, 1.682216031210763, 1.6736852100917272, 1.6649830341339111, 1.656092575618199, 1.6469740867614746, 1.637869119644165, 1.6284007004329137, 1.6188786370413644, 1.6091785771506173, 1.599313429423741, 1.5892608165740967, 1.579146487372262, 1.5688317162649972, 1.5584988594055176, 1.547945840018136, 1.5372270856584822, 1.5266144956861223, 1.5158229555402483, 1.5048529761178153, 1.4938697133745467, 1.482661519731794, 1.4714781556810652, 1.4602604593549455, 1.449056693485805, 1.4377291543143136, 1.4263880934034074, 1.4150185925619942, 1.4037175519125802, 1.3922523089817591], "val_accuracy": [0.050999999046325684, 0.06533333659172058, 0.08166666328907013, 0.10233332961797714, 0.12066666781902313, 0.14399999380111694, 0.16766667366027832, 0.18299999833106995, 0.20466665923595428, 0.2253333330154419, 0.24699999392032623, 0.2643333375453949, 0.2809999883174896, 0.29366666078567505, 0.3063333332538605, 0.3233333230018616, 0.335999995470047, 0.34599998593330383, 0.35499998927116394, 0.3656666576862335, 0.3733333349227905, 0.3766666650772095, 0.38366666436195374, 0.3876666724681854, 0.39233332872390747, 0.39633333683013916, 0.3996666669845581, 0.4020000100135803, 0.4046666622161865, 0.40966665744781494, 0.4116666615009308, 0.4176666736602783, 0.41866666078567505, 0.4243333339691162, 0.4269999861717224, 0.42899999022483826, 0.4320000112056732, 0.4359999895095825, 0.4423333406448364, 0.4449999928474426, 0.445333331823349, 0.44600000977516174, 0.4476666748523712, 0.4503333270549774, 0.45366665720939636, 0.4569999873638153, 0.46000000834465027, 0.46433332562446594, 0.4690000116825104, 0.4716666638851166, 0.47600001096725464, 0.4793333411216736, 0.4793333411216736, 0.4819999933242798, 0.48500001430511475, 0.4873333275318146, 0.4896666705608368, 0.4933333396911621, 0.49666666984558105, 0.4986666738986969, 0.5, 0.5043333172798157, 0.5076666474342346, 0.5086666941642761, 0.5133333206176758, 0.5163333415985107, 0.5173333287239075, 0.5226666927337646, 0.5256666541099548, 0.5270000100135803, 0.527999997138977, 0.5299999713897705, 0.534333348274231, 0.5373333096504211, 0.5383333563804626, 0.5396666526794434, 0.5410000085830688, 0.5413333177566528, 0.5429999828338623, 0.5446666479110718, 0.546999990940094, 0.5496666431427002, 0.5516666769981384, 0.5523333549499512, 0.5543333292007446, 0.5550000071525574, 0.5553333163261414, 0.5586666464805603, 0.5603333115577698, 0.5596666932106018, 0.5616666674613953, 0.5633333325386047, 0.5666666626930237, 0.5680000185966492, 0.5690000057220459, 0.5726666450500488, 0.5746666789054871, 0.5766666531562805, 0.5803333520889282, 0.5830000042915344]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 9, 1, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.26600000262260437, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4413427394914304, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.29903578758239746, 0.1768590658903122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9118833541870117, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.2150000035762787, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 2, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 32, 5, 49, 25], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 9, 1, 6, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 77, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 4, 8, 8, 6, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 1, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 9, 1, 5, 2, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 37, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 11, 11, 8, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(tf.math.multiply(grad, tf.math.add(beta, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06366398185491562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 1, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 9, 1, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [1, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0812310129404068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 32, 5, 49, 25], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 9, 1, 6, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 65, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 8, 8, 6, 2, 2, 4, 3, 2, 1, 0, 1, 1, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025878196883087, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 7, 9, 5, 4, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [26, 75, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07911768555641174, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 5, 9, 1, 1, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 5, 8, 8, 6, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [0, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 5, 2, 1, 1, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 12, 12, 8, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3018881205192345, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10487385839223862, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [0, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 4, 0, 1, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [16, 45, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 8, 8, 6, 2, 1, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29373627.510712642, 556548671.1969357, 2603117241.7699113, 7251294250.063664, 15353825533.464008, 28338987433.776253], "accuracy": [0.10196803510189056, 0.1026284471154213, 0.09985470771789551, 0.10038304328918457, 0.1018359512090683, 0.09906221181154251], "val_loss": [109309307.42857143, 873555236.5714285, 2947218797.714286, 6984773924.571428, 13640715410.285715, 23569519762.285713], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 2, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 2, 1, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 13, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 9, 9, 6, 3, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), grad), alpha)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025878196883087, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [0, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 0, 9, 1, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 65, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 8, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 9, 1, 6, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [43, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 4, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [Infinity, 48.57371809806617, 80.00857766952183, 106.98917941142697, 149.54272070549513, 215.08628015665568], "accuracy": [0.08942015469074249, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [29.205492292131698, 57.84041268484933, 81.76452200753349, 104.21806989397321, 158.8745858328683, 212.73658098493303], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 57, 69, 11, 46], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 9, 1, 6, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 51, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 4, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08096684515476227, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 2, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 32, 83, 49, 25], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 2, 1, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, alpha)), tf.math.square(tf.math.add(beta, grad)))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07911768555641174, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [2, 2, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 3, 5, 1, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 1, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.07257142663002014, "mapping_values": [1, 4, 4, 2, 2, 0, 8, 8, 6, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), grad)))), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301640792624227, 2.2996333098572164, 2.300297170944375, 2.300916530074791, 2.2994243086541664, 2.2993471101920333, 2.2998065552014277, 2.2978917635379923, 2.2992077276234646, 2.299925809932533, 2.299096221448943, 2.2998589105483895, 2.299585819370349, 2.2995529585762613, 2.2994557529187962], "accuracy": [0.09325055778026581, 0.09787346422672272, 0.09298639744520187, 0.09351472556591034, 0.10077928751707077, 0.09866596013307571, 0.0944393053650856, 0.10249637067317963, 0.09734513610601425, 0.09338264167308807, 0.09906221181154251, 0.1014397069811821, 0.09734513610601425, 0.1002509593963623, 0.09721305221319199], "val_loss": [1.9701884814671107, 1.9698596000671387, 1.96958099092756, 1.969414234161377, 1.9694153921944755, 1.9695023809160506, 1.96943575995309, 1.9693993159702845, 1.9693882805960519, 1.9693870544433594, 1.9695115770612444, 1.9697535378592355, 1.9700781277247839, 1.9703781945364816, 1.9706168174743652], "val_accuracy": [0.045666664838790894, 0.050333332270383835, 0.058666665107011795, 0.06599999964237213, 0.0689999982714653, 0.070333331823349, 0.07333333045244217, 0.07466666400432587, 0.07533333450555801, 0.07699999958276749, 0.07333333045244217, 0.07433333247900009, 0.07100000232458115, 0.0689999982714653, 0.0663333311676979]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 2, 2, 9, 0, 1, 5, 9, 1, 2, 6, 3, 6, 5, 8], [0, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 5, 49, 85, 46], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 9, 1, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [94, 65, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 8, 8, 4], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302088524262037, 2.300738520673269, 2.3020381403164603, 2.303287053955324, 2.301459647062637, 2.301698595037424], "accuracy": [0.09298639744520187, 0.09470347315073013, 0.08889182657003403, 0.08585391938686371, 0.09126931428909302, 0.08928807079792023], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]