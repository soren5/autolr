[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8], [1, 0, 2, 0, 0, 0, 2], [42, 52, 13, 96, 41]], "fitness": -0.8451428413391113, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 18, 11, 7, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), beta))))", "other_info": {"loss": [2.2068614600719068, 1.4456282304561747, 0.9492580076297512, 0.7871266096857923, 0.72296570602614, 0.6805207751540775, 0.646097988508255, 0.6090078710832647, 0.5942171419285638, 0.5794301048529351, 0.5626118333663104, 0.5431555121676513, 0.5307313873468373, 0.5082495485385332, 0.5026251385712966, 0.48518907244824905, 0.47513471185775275, 0.47094489709812304, 0.4519827887720955, 0.4369106321538901, 0.4320135906962608, 0.42802644643911425, 0.41359167225907867, 0.4004626304615821, 0.39937743198570874, 0.3833090049865271, 0.3779325637449253, 0.38080813031406957, 0.3741737936371589, 0.35963493506858973, 0.35700221359532947, 0.3516777925534791, 0.336856740797358, 0.3348810330413163, 0.32530638387788635, 0.3244774045292035, 0.31211947901153514, 0.30079267852735586, 0.3063379666352111, 0.30521520458160845, 0.30089753872493885, 0.30333689243298134, 0.2919627843106569, 0.27856281432792446, 0.2782114532291141, 0.26944651144205256, 0.262889005158162, 0.2632266059212791, 0.26131502941315754, 0.2542730013826, 0.25949944721677787, 0.24957338435271034, 0.25431207821448215, 0.24031788479374888, 0.23782900559147982, 0.24035160150809484, 0.2366335780125221, 0.23465952557650507, 0.22319797281111395, 0.2272360029099813, 0.22404166329034553, 0.22524121938844824, 0.21690841370475386, 0.20759376776830915, 0.20020475707089094, 0.20532984430716572, 0.20225012931431982], "accuracy": [0.24686303734779358, 0.5132743120193481, 0.6580372452735901, 0.7062475085258484, 0.7289658188819885, 0.7491744756698608, 0.7560427784919739, 0.7696473598480225, 0.7832518815994263, 0.7817989587783813, 0.7887993454933167, 0.8021397590637207, 0.8078193068504333, 0.8086118102073669, 0.8141592741012573, 0.8177255392074585, 0.8211596608161926, 0.8222163319587708, 0.8274996876716614, 0.8416325449943542, 0.8408400416374207, 0.8407079577445984, 0.8486329317092896, 0.8514066934585571, 0.8485008478164673, 0.8599920868873596, 0.8610487580299377, 0.8595958352088928, 0.8632941246032715, 0.8668603897094727, 0.870030403137207, 0.8684453964233398, 0.8754457831382751, 0.8729361891746521, 0.8811253309249878, 0.8790120482444763, 0.8844274282455444, 0.8850878477096558, 0.8841632604598999, 0.8842953443527222, 0.8893144726753235, 0.887597382068634, 0.8926165699958801, 0.8960506916046143, 0.8951261639595032, 0.89988112449646, 0.9005415439605713, 0.9000132083892822, 0.9015982151031494, 0.9027869701385498, 0.9002773761749268, 0.9019944667816162, 0.9045040011405945, 0.9088627696037292, 0.9088627696037292, 0.90423983335495, 0.9119006991386414, 0.9119006991386414, 0.9115044474601746, 0.910711944103241, 0.9121648669242859, 0.9133535623550415, 0.9167877435684204, 0.920089840888977, 0.9222031235694885, 0.9190331697463989, 0.9206181764602661], "val_loss": [1.5395315034048898, 0.7289304052080426, 0.601015431540353, 0.5611988987241473, 0.5280671630586896, 0.5110400744846889, 0.4841801609311785, 0.47274863719940186, 0.45929956436157227, 0.45213304247174946, 0.43746003082820345, 0.4303084356444223, 0.4152520980153765, 0.40756217922483173, 0.3999518666948591, 0.39234721660614014, 0.3874716077532087, 0.3790974361555917, 0.37911114522389006, 0.3703320452145168, 0.3612299306052072, 0.3496163402284895, 0.3538466351372855, 0.3443331037248884, 0.3444308979170663, 0.3391689658164978, 0.339253340448652, 0.33634187494005474, 0.33356543098177227, 0.3401695660182408, 0.32951230662209646, 0.32631937095097135, 0.32241930280412945, 0.3225299375397818, 0.31873989956719534, 0.31912470715386526, 0.31864500045776367, 0.3175010085105896, 0.31491620200020926, 0.32216278995786396, 0.3189191392489842, 0.31757800919669016, 0.31512071405138287, 0.3191878455025809, 0.3189635617392404, 0.31708766732897076, 0.3140402947153364, 0.3166664072445461, 0.3153707640511649, 0.312607433114733, 0.31031930446624756, 0.31007366521017893, 0.3121299999100821, 0.31935570921216694, 0.31586168493543354, 0.3148232102394104, 0.3121884209769113, 0.31902010100228445, 0.31020197698048185, 0.3085545301437378, 0.3229159116744995, 0.3117486238479614, 0.3224180596215384, 0.31012019940785, 0.32502293586730957, 0.3293264848845346, 0.3244125757898603], "val_accuracy": [0.5323333144187927, 0.7093333601951599, 0.7443333268165588, 0.7540000081062317, 0.7680000066757202, 0.7806666493415833, 0.7900000214576721, 0.7986666560173035, 0.8026666641235352, 0.8026666641235352, 0.8163333535194397, 0.8159999847412109, 0.8230000138282776, 0.8326666951179504, 0.8303333520889282, 0.8389999866485596, 0.8423333168029785, 0.8413333296775818, 0.8379999995231628, 0.8433333039283752, 0.8513333201408386, 0.856333315372467, 0.856333315372467, 0.8603333234786987, 0.8586666584014893, 0.859333336353302, 0.8579999804496765, 0.8603333234786987, 0.8610000014305115, 0.8573333621025085, 0.8650000095367432, 0.8619999885559082, 0.8673333525657654, 0.8683333396911621, 0.8703333139419556, 0.8706666827201843, 0.8693333268165588, 0.8683333396911621, 0.8736666440963745, 0.8629999756813049, 0.8676666617393494, 0.8700000047683716, 0.8743333220481873, 0.8693333268165588, 0.871666669845581, 0.871999979019165, 0.875333309173584, 0.8756666779518127, 0.8773333430290222, 0.874666690826416, 0.8766666650772095, 0.8740000128746033, 0.8786666393280029, 0.878333330154419, 0.874666690826416, 0.8769999742507935, 0.8766666650772095, 0.8799999952316284, 0.8820000290870667, 0.8776666522026062, 0.8773333430290222, 0.8849999904632568, 0.8759999871253967, 0.8826666474342346, 0.8759999871253967, 0.878333330154419, 0.8806666731834412]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [6, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 9, 1, 3, 0, 5, 3, 2, 8, 8, 8, 5, 7, 7, 5, 2, 0, 0, 8, 6, 7, 9, 2, 9], [3, 0, 1, 0, 0, 1, 2, 3, 1, 1, 1, 1], [42, 52, 84, 96, 41, 21, 22]], "fitness": -0.8385714292526245, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 17, 11, 6, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), alpha))))", "other_info": {"loss": [2.248136786862828, 1.7547538822605122, 1.1439243734804017, 0.8872383711218692, 0.7812735538330879, 0.7255589574272323, 0.6867625265231049, 0.6511836946443591, 0.6333945139665897, 0.6160616964286801, 0.6029669162682602, 0.5859528661341069, 0.5741135953140611, 0.5629276080752534, 0.5553193592502457, 0.5397159760307878, 0.5338152692050604, 0.5294378643353318, 0.5209523488336535, 0.5038615872421914, 0.49551575915405005, 0.501439123404985, 0.4810817299454739, 0.47319590795419597, 0.4688563850443707, 0.4594132638114586, 0.45358364068521817, 0.4540829396621032, 0.4507140787900195, 0.433462576142801, 0.43099331353492015, 0.4230436147904714, 0.41151090931300366, 0.4091641242359891, 0.404117653394624, 0.40140660047893273, 0.391567293383804, 0.3905394069979361, 0.3828535037954895, 0.3800562041436582, 0.36623999072953994, 0.37271912069825164, 0.36397856459751765, 0.35547442170355253, 0.3532267381266013, 0.3484716038378931, 0.34660145759251865, 0.34274833829190987, 0.3385099752381367, 0.33621032432699877, 0.3276540323877379, 0.3240527948683216, 0.32623640278295485, 0.31990503192168374, 0.3163788433458197, 0.3127974948359046, 0.307118772169256, 0.30526065095824145, 0.29766729229224936, 0.29325410515058153, 0.2928611462016415, 0.29423937467205497, 0.28656599898663304, 0.28024106578520813, 0.280391523772227, 0.2811409782117872, 0.2731408182821411, 0.2764908168034358, 0.2672261563998802], "accuracy": [0.21120063960552216, 0.44525161385536194, 0.5915995240211487, 0.6804913282394409, 0.7117950320243835, 0.7293620109558105, 0.7409853339195251, 0.7593448758125305, 0.7635715007781982, 0.7675340175628662, 0.7714964747428894, 0.7804781198501587, 0.7872143983840942, 0.7874785661697388, 0.7959318161010742, 0.7948752045631409, 0.8016114234924316, 0.8029322624206543, 0.8057059645652771, 0.8113855719566345, 0.8132346868515015, 0.8158763647079468, 0.8171972036361694, 0.8261788487434387, 0.8249900937080383, 0.8314621448516846, 0.8339717388153076, 0.8317263126373291, 0.8314621448516846, 0.8413683772087097, 0.8416325449943542, 0.845859169960022, 0.8461233377456665, 0.8445383906364441, 0.8496896028518677, 0.8511425256729126, 0.8540483713150024, 0.8539162874221802, 0.8605204224586487, 0.856689989566803, 0.867520809173584, 0.8642187118530273, 0.8654074668884277, 0.869502067565918, 0.8709549307823181, 0.8730682730674744, 0.8721436858177185, 0.8733324408531189, 0.8755778670310974, 0.8749174475669861, 0.876370370388031, 0.880729079246521, 0.8800686597824097, 0.8819178342819214, 0.8836349248886108, 0.8815215826034546, 0.8862766027450562, 0.8897107243537903, 0.8881257176399231, 0.8898428082466125, 0.8898428082466125, 0.8906353116035461, 0.8930128216743469, 0.893541157245636, 0.89552241563797, 0.8986923694610596, 0.8992207050323486, 0.897899866104126, 0.9027869701385498], "val_loss": [1.7739211491176061, 0.8952877521514893, 0.6727479355675834, 0.589484521320888, 0.5543734175818307, 0.5270641360964093, 0.5054745163236346, 0.4953257867268154, 0.4808515821184431, 0.47217369079589844, 0.4634220770427159, 0.45569762161799837, 0.44928104536873953, 0.43763017654418945, 0.4339667558670044, 0.42583013432366507, 0.42394305978502544, 0.41429596287863596, 0.4214621526854379, 0.4067974346024649, 0.3966269407953535, 0.3928124819483076, 0.3916038955960955, 0.38567447662353516, 0.38658824988773893, 0.3775795102119446, 0.3731128658567156, 0.37086509806769236, 0.3667128426688058, 0.36827324117933, 0.3663185068539211, 0.3516440732138498, 0.3550144519124712, 0.3570787566048758, 0.35011671270642963, 0.34601333311625887, 0.3468928166798183, 0.3421908531870161, 0.33945685625076294, 0.33853690113340107, 0.3360787630081177, 0.33514225482940674, 0.3332955070904323, 0.334478531564985, 0.3295386859348842, 0.3402272718293326, 0.3310195973941258, 0.32636806794575285, 0.32277744156973703, 0.32502567768096924, 0.3223614862986973, 0.3220223443848746, 0.3257050854819162, 0.31655423981802805, 0.3161915455545698, 0.31626433985573904, 0.318819386618478, 0.3133612104824611, 0.31184613704681396, 0.3125280908175877, 0.3215846674782889, 0.31505775451660156, 0.31494860138211933, 0.31087617363248554, 0.3174062541552952, 0.32241179261888775, 0.31319273369652884, 0.31685503891536165, 0.31772163084575106], "val_accuracy": [0.46933332085609436, 0.6710000038146973, 0.7363333106040955, 0.7453333139419556, 0.7593333125114441, 0.7676666378974915, 0.7823333144187927, 0.7870000004768372, 0.7953333258628845, 0.8009999990463257, 0.8026666641235352, 0.8043333292007446, 0.8100000023841858, 0.8176666498184204, 0.8203333616256714, 0.8199999928474426, 0.8223333358764648, 0.82833331823349, 0.8176666498184204, 0.8323333263397217, 0.8370000123977661, 0.8383333086967468, 0.8373333215713501, 0.8413333296775818, 0.8410000205039978, 0.8473333120346069, 0.8503333330154419, 0.8496666550636292, 0.8510000109672546, 0.8483333587646484, 0.8483333587646484, 0.8533333539962769, 0.8550000190734863, 0.8536666631698608, 0.859666645526886, 0.8603333234786987, 0.8600000143051147, 0.8650000095367432, 0.8619999885559082, 0.8600000143051147, 0.8616666793823242, 0.8629999756813049, 0.8659999966621399, 0.8629999756813049, 0.8666666746139526, 0.8583333492279053, 0.8656666874885559, 0.8653333187103271, 0.8700000047683716, 0.8679999709129333, 0.8676666617393494, 0.8690000176429749, 0.8663333058357239, 0.8730000257492065, 0.8700000047683716, 0.8706666827201843, 0.8709999918937683, 0.8740000128746033, 0.8726666569709778, 0.874666690826416, 0.8743333220481873, 0.874666690826416, 0.875333309173584, 0.8769999742507935, 0.8726666569709778, 0.8709999918937683, 0.8743333220481873, 0.8743333220481873, 0.871666669845581]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [3, 8, 9, 1, 2, 6, 2, 3, 2, 2, 8, 0], [1, 3, 2, 0, 3, 2, 3], [42, 71, 82, 96, 41, 21, 22]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.450688916206234, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03777572140097618, 0.08506141602993011, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.5405751637050082, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.013333333656191826, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [3, 1, 9, 2, 2, 0, 1, 3, 2, 2, 8], [0, 0, 2, 0, 0, 0, 2], [42, 52, 13, 96, 76]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.302522492052904, 2.3027911301160517, 2.304887528936577, 2.3246960618224803, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736149651663644, 1.9740029743739538, 1.9793511118207658, 2.028099605015346, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8], [2, 0, 2, 0, 0, 0, 2, 1, 0], [42, 23, 17, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.463718244632977, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17804782092571259, 0.11094967275857925, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [279.6261509486607, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029666665941476822, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [71, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [4, 1], [64], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 6, 9, 1, 2, 0, 5, 3, 5, 2, 8, 4, 5, 8, 7, 5, 2, 0, 0, 8, 6, 7, 9, 2, 8], [1, 0, 2, 0, 0, 3, 2, 1, 0, 2, 3], [42, 23, 32, 96, 41, 13, 1, 24]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [6, 7, 8, 4], [1, 1], [64], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 2, 2, 1, 2, 1, 5, 5, 2, 2, 8, 6, 3, 4, 8], [1, 0, 2, 0, 3, 0, 3, 1, 1, 1], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [333.53688374329016, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04900277405977249, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [157071858.2857143, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [97, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8], [1, 1, 2, 0, 0, 0, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.3120955589535277, 2.489768525282185, 10.20100350909623, 71.2458464824418, 103.5356328256567, 215.92024308147842, 379.68547694375405], "accuracy": [0.09721305221319199, 0.09893012791872025, 0.09668471664190292, 0.09615638852119446, 0.09840179979801178, 0.10196803510189056, 0.10447761416435242], "val_loss": [2.0381761278424944, 2.4900758607046947, 38.84947313581194, 65.78095354352679, 145.40313720703125, 221.72140066964286, 397.9718802315848], "val_accuracy": [0.0949999988079071, 0.10233332961797714, 0.09566666930913925, 0.10233332961797714, 0.10066666454076767, 0.09566666930913925, 0.0949999988079071]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [3, 1, 2, 1, 2, 0, 5, 3, 2, 2, 8, 0, 7, 6, 7, 1, 7, 9, 2, 6, 9, 9, 1, 5, 9, 9], [1, 0, 2, 0, 0, 0, 2, 1, 0, 3, 3, 2, 1], [42, 85, 73, 96, 41, 0, 22, 65, 74, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 38, 25, 13, 9], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), beta))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), beta)))), tf.math.add(tf.math.subtract(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), sigma)), sigma), tf.math.subtract(beta, tf.math.square(alpha))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8, 2, 2, 4, 5, 2, 6, 0, 8, 1, 8], [1, 0, 2, 0, 0, 0, 2, 3, 3, 3, 2, 0, 2], [42, 52, 13, 96, 41, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 34, 21, 13, 6], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(tf.math.pow(beta, sigma), tf.math.square(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.negative(tf.math.sqrt(tf.math.subtract(beta, tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))))))))), beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [6, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [3, 2, 9, 2, 2, 6, 5, 3, 2, 2, 8, 9, 0, 9, 4, 8, 0, 1, 6, 6, 1, 4, 0, 8, 4, 0], [1, 0, 2, 3, 0, 0, 2, 0, 2, 0, 2, 3, 3], [18, 81, 89, 86, 41, 78, 61, 28]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 39, 26, 13, 8], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.math.add(tf.math.add(tf.math.sqrt(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), beta), sigma)), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(beta, tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(beta)))), tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta))), sigma), sigma))))))", "other_info": {"loss": [2.3369718282261482, 3.1707796883573622, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05388984456658363, 0.01228371448814869, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0938263620649065, 14.929851531982422, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004666666500270367, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [6, 7, 8, 4], [1, 1], [64], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 9, 1, 2, 6, 5, 3, 2, 2, 8], [2, 0, 1, 3, 0, 0, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.6303646315412995e+25, 185.7464631493412, 958.3914207707401, 2785.829217715522, 6129.152160588099, 11452.886274259923], "accuracy": [0.08651433140039444, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [43.68973432268415, 432.7558855329241, 1562.223876953125, 3826.8224051339284, 7621.364397321428, 13340.551339285714], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [3, 1, 3, 3, 4, 0, 5, 3, 2, 3, 8, 2, 9, 3, 9, 1, 4, 9, 2, 5, 2, 9, 6, 2, 0], [1, 0, 2, 0, 0, 2, 2, 3, 1, 1, 1, 1], [42, 52, 13, 96, 41, 21, 22]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 33, 22, 11, 7], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), beta), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), beta)))), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(sigma, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(alpha)))), tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 6, 2, 0, 5, 3, 2, 2, 8], [2, 0, 0, 3, 0, 0, 2], [18, 81, 89, 86, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 18, 11, 7, 5], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(sigma), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), beta)))", "other_info": {"loss": [2.3032058974172713, 2.581475068454997, 16.09973930547329, 21.138004517117512, 16.467669621151295, 13.529791044190638], "accuracy": [0.10077928751707077, 0.10077928751707077, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9843807901654924, 2.8489692551749095, 18.558428628104075, 15.347400120326451, 12.399507250104632, 10.424768992832728], "val_accuracy": [0.10066666454076767, 0.09666666388511658, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [9, 1, 9, 1, 2, 1, 5, 3, 2, 2, 8, 6, 3, 4, 8], [3, 0, 2, 0, 0, 0, 2, 3, 3], [88, 52, 13, 8, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302748707354486, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 4, 1, 2, 0, 5, 3, 2, 2, 8], [1, 0, 2, 0, 0, 0, 2, 1, 0], [42, 23, 17, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 20, 11, 9, 5], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), beta))))), alpha)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [Infinity, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.052172765135765076, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [2, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8, 4], [1, 0, 2, 0, 0, 0, 2, 3], [18, 81, 89, 86, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 20, 12, 8, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), beta), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [26, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [7, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8], [2, 2, 1, 3, 0, 0, 2], [3, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, beta)", "other_info": {"loss": [397838315661.5929, 61456390256692.75, 1045066240379405.0, 7385367175642835.0, 3.2393157740102656e+16, 1.0671653954002771e+17], "accuracy": [0.1006472036242485, 0.1006472036242485, 0.10342095047235489, 0.09760929644107819, 0.09047681838274002, 0.09840179979801178], "val_loss": [3349763887689.143, 180600215886701.72, 1938677638889472.0, 1.0564910571772782e+16, 3.954893380776287e+16, 1.1666021829439838e+17], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [3, 6, 9, 1, 2, 0, 5, 3, 8, 2, 8, 8, 5, 7, 7, 5, 2, 0, 0, 8, 6, 7, 9, 2, 9], [1, 0, 1, 0, 1, 1, 2, 3, 1, 1, 1, 1], [42, 52, 13, 96, 41, 21, 22]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 6, 0, 1, 2, 0, 5, 3, 2, 2, 8, 8, 5, 7, 7, 5, 2, 0, 0, 8, 6, 7, 9, 2, 9], [1, 3, 1, 0, 0, 1, 2, 3, 1, 1, 1, 1], [42, 23, 17, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.negative(sigma), alpha))", "other_info": {"loss": [2.302289665839644, 2.3020094449352264, 2.3018343405496204, 2.3021108686585454, 2.3035322739668276, 2.3017809200186092], "accuracy": [0.09377889335155487, 0.0948355570435524, 0.09430722147226334, 0.0940430611371994, 0.08796724677085876, 0.0882314071059227], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]