[{"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [4, 7, 0, 5, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.828000009059906, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 4, 3, 1, 3, 1, 1, 0, 0, 5, 3, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2679961945449736, 1.9746427104741102, 1.3883898323868022, 1.0651949420659896, 0.8892684768629018, 0.8108370186173763, 0.7558531403037708, 0.7225187805822859, 0.6828741656397123, 0.6782978754379904, 0.6471086188613494, 0.6228878587590642, 0.6066890331527671, 0.584206059773868, 0.5625202413547498, 0.5438547735720609, 0.5442009471930596, 0.5239766386002125, 0.4985714634773895, 0.4883561646539962, 0.48345234875964954, 0.4682957855520814, 0.4481051603462308, 0.44126412510997853, 0.43525006270852656, 0.4221283240230753, 0.41436159624525615, 0.40168267653807516, 0.39493343918598434, 0.3810131870650061, 0.372872796781059, 0.36446984395878806, 0.35687289486676477, 0.3537777328354225, 0.35504912890778273], "accuracy": [0.1732928305864334, 0.3959846794605255, 0.5215955376625061, 0.6198652982711792, 0.6760005354881287, 0.6975300312042236, 0.7180029153823853, 0.733588695526123, 0.7427024245262146, 0.7408532500267029, 0.7593448758125305, 0.7666094303131104, 0.7711002230644226, 0.7796856164932251, 0.7864218950271606, 0.7969884872436523, 0.7926297783851624, 0.8026680946350098, 0.8131026029586792, 0.8173292875289917, 0.8236692547798157, 0.8227446675300598, 0.8321225643157959, 0.8347642421722412, 0.8397833704948425, 0.8471800088882446, 0.8477083444595337, 0.8504821062088013, 0.8544445633888245, 0.859199583530426, 0.8601241707801819, 0.8669924736022949, 0.8679170608520508, 0.8679170608520508, 0.8679170608520508], "val_loss": [1.8563276018415178, 1.2220194339752197, 0.7339134897504535, 0.6848061425345284, 0.606121335710798, 0.580654433795384, 0.5561479500361851, 0.5481895889554705, 0.520891547203064, 0.5159040008272443, 0.49584278038569857, 0.4811605385371617, 0.4674626418522426, 0.4503404753548758, 0.4367259570530483, 0.42479318380355835, 0.41272994450160433, 0.41001828227724346, 0.39815688133239746, 0.39012306928634644, 0.38645929949624197, 0.374404890196664, 0.36999092783246723, 0.36228052207401823, 0.3576385719435556, 0.35570153168269564, 0.3516089064734323, 0.3478523748261588, 0.3388665659087045, 0.3354794042451041, 0.3355869139943804, 0.33326347385134014, 0.3343753899846758, 0.33322594846997944, 0.33229912178856985], "val_accuracy": [0.4426666796207428, 0.5926666855812073, 0.6990000009536743, 0.7059999704360962, 0.7329999804496765, 0.7383333444595337, 0.7490000128746033, 0.7526666522026062, 0.7696666717529297, 0.7663333415985107, 0.7860000133514404, 0.7919999957084656, 0.7946666479110718, 0.8033333420753479, 0.8109999895095825, 0.8199999928474426, 0.8216666579246521, 0.8253333568572998, 0.8333333134651184, 0.8336666822433472, 0.840666651725769, 0.8453333377838135, 0.8479999899864197, 0.8506666421890259, 0.8500000238418579, 0.8546666502952576, 0.8583333492279053, 0.8556666374206543, 0.8613333106040955, 0.8636666536331177, 0.8613333106040955, 0.8583333492279053, 0.8619999885559082, 0.8633333444595337, 0.8616666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [7, 32, 29, 49, 25], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [2, 8, 0, 4, 0, 9, 3, 9], [1, 4, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [0, 9, 8, 4], [2], [64], [1, 0, 0, 1, 1, 1, 1], [3, 2, 9, 1, 2], [2, 2, 2], [15, 52, 13]], "fitness": -0.31857141852378845, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2656759647031297, 8.835429853310345, 2.301180163300222, 2.199634996497825, 2.3069557292413214, 2.303773820045964], "accuracy": [0.18953903019428253, 0.1504424810409546, 0.11161009222269058, 0.2545238435268402, 0.09866596013307571, 0.09853387624025345], "val_loss": [1.7267415864127023, 1.978236266544887, 1.949998378753662, 1.9811790330069405, 1.9751894133431571, 1.9739862169538225], "val_accuracy": [0.3636666536331177, 0.09666666388511658, 0.1863333284854889, 0.10066666454076767, 0.09666666388511658, 0.10333333164453506]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [4, 9, 2, 3, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 1], [0, 0, 1], [7, 9, 8, 4], [2], [64], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], [7, 1, 9, 1, 2, 6], [3, 0, 2, 2, 3, 0], [44, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 3, 3, 2, 1, 1, 3, 1, 1, 0, 0, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [64884199.148039125, 1252807511.1367059, 5922966914.688152, 16168769346.104874, 34868754471.22335, 63950403153.08414], "accuracy": [0.09549596905708313, 0.09959053993225098, 0.09576013684272766, 0.09985470771789551, 0.10011887550354004, 0.0948355570435524], "val_loss": [245161152.0, 1959722569.142857, 6612303725.714286, 15671502555.428572, 30606028214.857143, 52884235410.28571], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [4, 7, 2, 1, 0, 9, 3, 9], [1, 0, 2, 3, 1, 5, 3, 2, 1, 4, 4, 0], [63], [1, 1, 1, 0, 1], [0, 0, 1], [2, 2, 8, 4], [2], [64], [1, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [48, 39, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), grad)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3736363769506563, 64319.62997005323, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.038304053246974945, 0.05824857950210571, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3263775280543735, 502961397413595.44, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007666666526347399, 0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [8, 6, 0, 5, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [36], [0, 0, 1, 0, 1, 0], [0, 1, 1], [7, 2, 8, 4], [2], [64], [1, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [19, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07119271159172058, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [12, 32, 29, 49, 25], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [4, 4, 9, 5, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98, 69], [0, 0, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 0, 0, 1], [7, 8, 9, 1, 2], [1, 0, 2], [5, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 2, 5, 3, 2, 1, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.305513492711956, 186.11209634764003, 605044027.101576, 1874681862370842.0, 6.196554960509942e+21, 2.1087257866036023e+28], "accuracy": [0.09853387624025345, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.011173520769392, 10220.55357142857, 34024723017.142857, 1.0504262381649451e+17, 3.4897161327635925e+23, 1.1872789665922981e+30], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [20, 32, 29, 49, 25], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [4, 7, 9, 5, 0, 9, 3, 9], [1, 5, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 0, 1, 0, 0], [0, 0, 1, 1], [7, 2, 8, 4], [2, 4], [64], [0, 1, 0, 1, 0, 1], [1, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 2, 3, 0, 5, 4, 2, 2, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028201566884356, 2.302106774604363, 2.3026014631135574, 2.3027384873819607, 2.3026774363227416, 2.303431236512468], "accuracy": [0.10394927859306335, 0.10527011007070541, 0.1010434553027153, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737445286342077, 1.9738943236214774, 1.9738052231924874, 1.9737129211425781, 1.9738830838884627, 1.9750832148960658], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [94, 32, 29, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 0, 0, 5, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [1, 1, 0, 1, 0, 1], [3, 7, 9, 1, 2], [1, 0, 2], [35, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08757099509239197, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [73, 32, 29, 49, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [8, 7, 0, 5, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [59], [0, 1, 1, 0, 1], [1, 0, 1], [7, 9, 8, 4], [0], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [0, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 5, 5, 3, 2, 1, 1, 1, 0, 1, 1, 5, 3, 2, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029988405963038, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09219389408826828, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [7, 32, 29, 49, 25], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 0, 5, 0, 9, 3, 9], [1, 4, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [2, 2, 8, 4], [2], [64], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [3, 1, 9, 1, 2, 8, 4, 4, 7, 0, 7, 9], [3, 0, 2, 2, 2, 2, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 8, 8, 6, 2, 1, 1, 0, 0, 0, 0, 19, 12, 7, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(alpha)))), tf.math.add(beta, tf.math.negative(grad))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(beta, tf.math.pow(beta, tf.math.add(tf.math.negative(beta), tf.math.add(beta, beta))))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [4, 7, 0, 5, 0, 9, 3, 9], [1, 4, 4, 3, 1, 5, 3, 2, 1, 4, 4, 0], [36], [0, 0, 0, 0, 1], [1, 0, 1], [7, 2, 8, 4], [2], [64], [1, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, grad)), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.374204338092877, 3171804175747270.5, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.038304053246974945, 0.05956941097974777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3361202648707797, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.00800000037997961, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [4, 7, 2, 1, 0, 9, 3, 9], [1, 5, 3, 3, 0, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 1], [0, 0, 1], [7, 9, 8, 4], [2], [64], [0, 1, 0, 1, 0, 1], [7, 1, 9, 1, 2], [1, 0, 2], [44, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), grad)))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [4, 6, 0, 5, 0, 9, 3, 9], [4, 1, 1, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 0, 0], [0, 1, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [0, 2, 2], [49, 81, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 3, 1, 1, 0, 0, 5, 3, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), alpha)), tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [7, 7, 8, 5, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [68], [0, 1, 1, 0, 1], [1, 0, 1], [7, 2, 8, 4], [2], [64], [1, 1, 0, 0, 1, 1], [4, 1, 9, 1, 2], [1, 0, 2], [15, 0, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.376594474271241, 2345757.4466671157, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03777572140097618, 0.058512747287750244, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.356590747833252, 1.107475641812925e+19, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.00800000037997961, 0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 0, 5, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 0, 0, 1], [0, 0, 1], [7, 2, 8, 4], [2], [64], [0, 1, 0, 1, 0, 1], [1, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 5, 5, 2, 3, 1, 5, 3, 2, 1, 0, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.subtract(tf.math.add(beta, alpha), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30297550643676, 2.302608761789304, 2.3034871508180506, 2.3083828745453885, 2.4812434207745957, 2.025025991716361e+21], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973578725542341, 1.9736329487391882, 1.974649429321289, 1.9880553654261999, 3.1095841952732632, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [8, 8, 0, 5, 0, 9, 3, 9], [1, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [30], [0, 0, 1, 0, 1], [0, 0, 1], [7, 9, 8, 4], [6], [64], [1, 1, 0, 0, 0, 1, 1], [7, 8, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 2, 1, 0, 3, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3765944651388424, 2348005.510433768, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03777572140097618, 0.058512747287750244, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3565991265433177, 1.1069779400209578e+19, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.00800000037997961, 0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [4, 6, 0, 5, 0, 9, 3, 9], [0, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98, 22], [0, 0, 1, 0, 1, 0], [0, 1, 1], [1, 9, 8, 4], [2], [64], [1, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07119271159172058, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [4, 7, 1, 5, 0, 9, 3, 9], [4, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 1], [0, 0, 1], [0, 2, 8, 4], [2], [64], [1, 1, 0, 1, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 4, 4, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(grad, tf.math.subtract(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30093097576549, 2.3020457781820785, 2.3018943699139016, 2.3022412431553416, 2.3018338901964177, 2.30228940981758], "accuracy": [0.0882314071059227, 0.08889182657003403, 0.09694888442754745, 0.0948355570435524, 0.09166556596755981, 0.08942015469074249], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [7, 32, 29, 49, 25], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [4, 5, 0, 5, 0, 9, 3, 9], [1, 4, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [0, 1, 1, 0, 1], [0, 0, 1], [0, 9, 8, 4], [2], [64], [0, 0, 0, 1, 0, 1, 1], [3, 1, 9, 1, 2], [1, 2, 2], [15, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 2, 1, 1, 0, 0, 7, 4, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(alpha), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(beta, beta))", "other_info": {"loss": [2.30093097576549, 2.3020457781820785, 2.3018943699139016, 2.3022412431553416, 2.3018338901964177, 2.30228940981758], "accuracy": [0.0882314071059227, 0.08889182657003403, 0.09694888442754745, 0.0948355570435524, 0.09166556596755981, 0.08942015469074249], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 8, 0, 5, 0, 9, 3, 9], [1, 0, 2, 3, 1, 5, 3, 2, 1, 4, 4, 0], [33], [0, 1, 0, 0, 1], [0, 0, 1], [6, 9, 8, 4], [2], [64], [1, 1, 0, 0, 0, 1, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 3, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(alpha)), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30093097576549, 2.3020457781820785, 2.3018943699139016, 2.3022412431553416, 2.3018338901964177, 2.30228940981758], "accuracy": [0.0882314071059227, 0.08889182657003403, 0.09694888442754745, 0.0948355570435524, 0.09166556596755981, 0.08942015469074249], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]