[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.7388571500778198, "mapping_values": [1, 20, 20, 12, 8, 3, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.square(grad)))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2981317090540987, 2.2324803646419182, 1.9613752334566006, 1.4303193623442392, 1.313101596458162, 1.0998258956466542, 1.0276264020748236, 0.9285147205524599, 1.0711329588485732, 1.022822915657463, 0.8952338789763027, 0.8911983676795018, 0.8811117641174121, 0.8586378154296759, 1.25215526544155, 1.4399764408540605, 39.68104626766805, 457.5291752143228], "accuracy": [0.10091137140989304, 0.2106723040342331, 0.3743230700492859, 0.5132743120193481, 0.5795799493789673, 0.6404702067375183, 0.6436402201652527, 0.6613393425941467, 0.5999207496643066, 0.653150200843811, 0.6629242897033691, 0.6535464525222778, 0.6715096831321716, 0.6754721999168396, 0.6543388962745667, 0.588297426700592, 0.1732928305864334, 0.11306300014257431], "val_loss": [1.948631967817034, 1.8006790706089564, 1.2672522749219621, 0.8005445514406476, 0.7648539032254901, 0.6854745660509381, 0.6969750097819737, 0.70738342830113, 0.6800659894943237, 0.6969394683837891, 0.607601387160165, 0.6094951629638672, 0.5749573026384626, 0.6199292625699725, 1.0115933077675956, 0.9492220538003104, 2.916121074131557, 1943.68017578125], "val_accuracy": [0.18733333051204681, 0.39766666293144226, 0.6269999742507935, 0.6639999747276306, 0.6796666383743286, 0.7139999866485596, 0.718666672706604, 0.6816666722297668, 0.7239999771118164, 0.7076666951179504, 0.734666645526886, 0.7266666889190674, 0.746999979019165, 0.7369999885559082, 0.6949999928474426, 0.5566666722297668, 0.05533333495259285, 0.17299999296665192]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.7302857041358948, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.290407696955586, 2.2171784977099804, 2.0128601271761974, 1.5996473646119853, 1.376144342591907, 1.2277012529815303, 0.9462103427377564, 0.8995830055477282, 0.8428541428188464, 0.8130912741949026, 0.8140040167082475, 0.7827937769112003, 0.74597200468279, 0.7416039702206114, 0.740284146578903, 0.7078611501266833, 0.6946151136501731, 0.6818624523573736, 0.6716174947240837, 0.6347535401444945, 0.6135163307977217, 0.6225942955229969, 0.6135275478155826, 0.5985746671258813, 0.5965719348592938, 0.58484668348916, 0.56587195738101, 0.5616392085596618, 0.5401531644682166, 0.5357881241691206, 0.5349195652539626, 0.5221190907069957], "accuracy": [0.11861048638820648, 0.2814687490463257, 0.3983621597290039, 0.4663848876953125, 0.5352001190185547, 0.59661865234375, 0.6509047746658325, 0.67666095495224, 0.6950204968452454, 0.6885483860969543, 0.6939638257026672, 0.7100779414176941, 0.7017567157745361, 0.7161537408828735, 0.7255316376686096, 0.7323999404907227, 0.7401928305625916, 0.7400607466697693, 0.7401928305625916, 0.7544577717781067, 0.7658169269561768, 0.7626469135284424, 0.7658169269561768, 0.7716285586357117, 0.7728173136711121, 0.7828556299209595, 0.7878747582435608, 0.7928939461708069, 0.7950072884559631, 0.7964601516723633, 0.8018755912780762, 0.804649293422699], "val_loss": [1.9321718215942383, 1.8174739565168108, 1.4763271468026298, 0.9796573093959263, 0.786233799798148, 0.7095115525381905, 0.6845322677067348, 0.6805870532989502, 0.6047883885247367, 0.5962248870304653, 0.5942998613630023, 0.5734774385179792, 0.562769957951137, 0.5781047684805733, 0.5513814858027867, 0.5406525986535209, 0.5283077955245972, 0.5131608077457973, 0.49125715664454866, 0.4778200558253697, 0.483216438974653, 0.47125654561179026, 0.4658809219087873, 0.4602127586092268, 0.4587800162179129, 0.45674095835004536, 0.44161871501377653, 0.44395737988608225, 0.44689437321254183, 0.43858836378370014, 0.4344986251422337, 0.4305341754640852], "val_accuracy": [0.3490000069141388, 0.43700000643730164, 0.5296666622161865, 0.6510000228881836, 0.6663333177566528, 0.7129999995231628, 0.7073333263397217, 0.734000027179718, 0.7416666746139526, 0.7293333411216736, 0.7429999709129333, 0.7423333525657654, 0.749666690826416, 0.7663333415985107, 0.7643333077430725, 0.7609999775886536, 0.7713333368301392, 0.7806666493415833, 0.784333348274231, 0.7886666655540466, 0.7839999794960022, 0.7956666946411133, 0.7946666479110718, 0.800000011920929, 0.8063333630561829, 0.8109999895095825, 0.8133333325386047, 0.812666654586792, 0.8063333630561829, 0.8096666932106018, 0.812666654586792, 0.8096666932106018]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 8, 8, 6, 2, 4, 0, 5, 6, 8, 4, 4, 6, 3, 6, 4, 2], [2, 0, 2, 0, 3, 1, 2, 0, 2, 2, 2, 3, 3], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [0, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.1777142882347107, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.516660198291783, 2.4179740412171333, 2.27921036835659, 2.3064797590941235, 2.3037172771164642, 2.3026425979865177], "accuracy": [0.19601109623908997, 0.1674811840057373, 0.16549994051456451, 0.09893012791872025, 0.09972262382507324, 0.09813763201236725], "val_loss": [1.946868964603969, 1.981138025011335, 1.9790124211992537, 1.974346365247454, 1.9735963003976005, 1.9730350630623954], "val_accuracy": [0.2919999957084656, 0.1926666647195816, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.0949999988079071]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 5, 2, 6, 5, 2, 2, 1, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 65, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 1, 1, 1], [0, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302445889621473, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 2, 0, 2, 2, 2, 3, 3], [31, 32, 3, 93], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [22, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [301652952.3560336, 5705645324.747589, 26452141193.55224, 74275874026.39334, 160588824448.32123, 291276413624.5526], "accuracy": [0.09615638852119446, 0.1014397069811821, 0.10011887550354004, 0.1022322028875351, 0.1002509593963623, 0.09945846349000931], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 2, 3, 6, 2, 2, 0, 5, 1, 8, 2, 4, 3, 3, 6, 6, 6, 1, 3, 2, 5, 8], [3, 0, 2, 2, 3, 1, 2, 2, 0, 3, 2, 0, 3, 0, 1, 2, 3, 3], [31, 27, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 9, 7, 3, 9], [4, 3, 3, 3, 0], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 0], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 40, 40, 22, 18, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(grad), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), alpha))), tf.math.square(tf.math.add(alpha, grad)))), grad), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [2, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302445889621473, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 6, 8, 4, 4, 6, 3, 6], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 8, 5, 7, 3, 9, 9, 0], [0, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 2, 2, 6, 3, 2, 0, 5, 2, 8, 4, 4, 6, 3, 6, 2, 8], [3, 0, 2, 0, 2, 1, 1, 0, 0, 2, 3, 2], [31, 32, 3, 66, 77], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 2, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [301652952.3560336, 5705645324.747589, 26452141193.55224, 74275874026.39334, 160588824448.32123, 291276413624.5526], "accuracy": [0.09615638852119446, 0.1014397069811821, 0.10011887550354004, 0.1022322028875351, 0.1002509593963623, 0.09945846349000931], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [187.6565987130103, 2759.646548868627, 12121.508561399996, 33357.08996138637, 71375.0733565992, 128640.70077846387], "accuracy": [0.09602430462837219, 0.1010434553027153, 0.1002509593963623, 0.1022322028875351, 0.10011887550354004, 0.09945846349000931], "val_loss": [589.4053083147321, 4172.609375, 13650.59095982143, 31907.86160714286, 61829.87053571428, 106301.72767857143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 5, 8, 6, 5, 2, 5, 5, 6, 8, 4, 4], [2, 0, 2, 0, 2, 1, 1, 0, 0, 2, 3, 2], [31, 32, 3, 66, 77], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 1, 1, 5, 9, 7, 3, 9, 6, 5, 5], [4, 2, 2, 4, 3], [98, 61], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [0, 0, 2], [73, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 2, 16, 16, 11, 5, 2, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))))))))))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3032951377024187, 2.3046016233661124, 2.3051190909424855, 2.304804410790849, 2.303885170938222, 2.30319912171304], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9743225915091378, 1.975106852395194, 1.9751765387398856, 1.9747011320931571, 1.974076747894287, 1.9736550194876534], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 5, 2, 6, 5, 2, 2, 1, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [3], [64], [0, 1, 0, 1, 1, 1], [9, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302445889621473, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4, 0, 7], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 27, 65, 66], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [1], [64], [1, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 0], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [7, 2, 9, 1, 2], [3, 2, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(beta, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08453308790922165, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 7, 5, 7, 3, 9], [1, 3, 3, 4, 1, 5], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 0, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [301652952.3560336, 5705645324.747589, 26452141193.55224, 74275874026.39334, 160588824448.32123, 291276413624.5526], "accuracy": [0.09615638852119446, 0.1014397069811821, 0.10011887550354004, 0.1022322028875351, 0.1002509593963623, 0.09945846349000931], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 5, 2, 6, 5, 2, 2, 1, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [0, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3017234258081114, 2.3018745763222177, 2.300779107161454, 2.302512729519063, 2.3038968723432154, 2.301705590675], "accuracy": [0.09245806187391281, 0.09272222965955734, 0.09113723784685135, 0.09087307006120682, 0.0874389111995697, 0.08955223858356476], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 5, 2, 6, 5, 2, 2, 1, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [0, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3017234258081114, 2.3018745763222177, 2.300779107161454, 2.302512729519063, 2.3038968723432154, 2.301705590675], "accuracy": [0.09245806187391281, 0.09272222965955734, 0.09113723784685135, 0.09087307006120682, 0.0874389111995697, 0.08955223858356476], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 2, 0, 8, 4, 4, 6, 3, 3, 9, 2, 8, 5, 0], [0, 0, 2, 0, 3, 2, 2, 0, 0, 1, 3], [31, 32, 65, 66, 81, 99, 81], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 7, 3, 5, 1, 9, 3, 9, 0, 5, 3, 2, 2], [4, 3, 3, 4, 1, 2], [98, 7], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [1, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [4, 62, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 30, 30, 19, 11, 6, 19, 19, 13, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.math.sqrt(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))))), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.add(beta, alpha)), beta))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3017234258081114, 2.3018745763222177, 2.300779107161454, 2.302512729519063, 2.3038968723432154, 2.301705590675], "accuracy": [0.09245806187391281, 0.09272222965955734, 0.09113723784685135, 0.09087307006120682, 0.0874389111995697, 0.08955223858356476], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 8, 8, 6, 2, 4, 0, 5, 6, 8, 4, 4, 6, 3, 6, 4, 2], [3, 0, 2, 0, 3, 1, 2, 0, 2, 2, 2, 3, 3], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 0, 9, 1, 2], [3, 0, 1], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3017234258081114, 2.3018745763222177, 2.300779107161454, 2.302512729519063, 2.3038968723432154, 2.301705590675], "accuracy": [0.09245806187391281, 0.09272222965955734, 0.09113723784685135, 0.09087307006120682, 0.0874389111995697, 0.08955223858356476], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 8, 6, 2, 4, 0, 5, 6, 8, 4, 4, 6, 3, 6, 4, 2], [3, 0, 2, 0, 3, 1, 2, 0, 2, 2, 2, 3, 3], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [0, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3017234258081114, 2.3018745763222177, 2.300779107161454, 2.302512729519063, 2.3038968723432154, 2.301705590675], "accuracy": [0.09245806187391281, 0.09272222965955734, 0.09113723784685135, 0.09087307006120682, 0.0874389111995697, 0.08955223858356476], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]