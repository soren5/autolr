[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 9, 2, 3, 0, 6, 0, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [0, 3, 3, 4], [4, 0], [77, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8342857360839844, "mapping_values": [1, 4, 4, 3, 1, 1, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2288862047823996, 2.1702256023356346, 1.625026560320972, 1.1985012957952468, 1.1162113765243054, 0.8079068032332604, 0.7553819501089807, 0.6748569276921422, 0.6392576776207746, 0.6101718909626136, 0.587409877758205, 0.6002090726042342, 0.5424525374670889, 0.5467585379405658, 0.531582017939057, 0.517473830200221, 0.5121964738825923, 0.5127001353904257, 0.46653581332410915, 0.4647720824962027, 0.4649348500744542, 0.4800135823225758, 0.4264657689816192, 0.42634798612545477, 0.4263479590667883, 0.42212276483303235, 0.41410050397189446, 0.4047268979214973, 0.39078135696132626, 0.37754801417212713, 0.3732331744739015, 0.3625937380165299, 0.3631205024846462], "accuracy": [0.25280675292015076, 0.22295601665973663, 0.4543653428554535, 0.5663716793060303, 0.599128246307373, 0.7030775547027588, 0.7195879220962524, 0.7506273984909058, 0.7619865536689758, 0.7724210619926453, 0.7852331399917603, 0.7786290049552917, 0.8005547523498535, 0.793950617313385, 0.8017435073852539, 0.8026680946350098, 0.8039889335632324, 0.8095363974571228, 0.8255184292793274, 0.8290846943855286, 0.8281601071357727, 0.8249900937080383, 0.8437458872795105, 0.8432175517082214, 0.8425571322441101, 0.8432175517082214, 0.8471800088882446, 0.8492933511734009, 0.857218325138092, 0.8551049828529358, 0.86118084192276, 0.8627657890319824, 0.8619733452796936], "val_loss": [1.9701260839189803, 1.2653328691210066, 0.9210235391344342, 1.0425664016178675, 0.6519824607031686, 0.570725543158395, 0.4954599142074585, 0.47919017927987234, 0.4740730694362095, 0.474952186856951, 0.4777594123567854, 0.42285618611744474, 0.4168743235724313, 0.4569972923823765, 0.4288555894579206, 0.40426173380443026, 0.40520288263048443, 0.38745215960911344, 0.38104727438517977, 0.3950379320553371, 0.36937264033726286, 0.37418454033987864, 0.36333138602120535, 0.35637458733149935, 0.35453990527561735, 0.3644081439290728, 0.34981545380183626, 0.3378762773105076, 0.3620180828230722, 0.3416118025779724, 0.3406092269080026, 0.36020828996385845, 0.3858952522277832], "val_accuracy": [0.18733333051204681, 0.5143333077430725, 0.578000009059906, 0.593666672706604, 0.7080000042915344, 0.7243333458900452, 0.781000018119812, 0.7896666526794434, 0.7900000214576721, 0.79666668176651, 0.8003333210945129, 0.8176666498184204, 0.8183333277702332, 0.7976666688919067, 0.8190000057220459, 0.824999988079071, 0.8246666789054871, 0.8389999866485596, 0.8456666469573975, 0.8259999752044678, 0.8496666550636292, 0.8416666388511658, 0.8460000157356262, 0.8503333330154419, 0.8550000190734863, 0.8433333039283752, 0.8536666631698608, 0.8636666536331177, 0.8500000238418579, 0.856333315372467, 0.8633333444595337, 0.8463333249092102, 0.8373333215713501]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 3, 6, 0, 1, 6, 2, 3, 3, 3, 3, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9, 8, 8, 2, 9], [2, 5, 3, 2, 3, 1, 3, 3, 1, 3, 4, 3, 3, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [92, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8342857360839844, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2288736337526456, 2.170600806717324, 1.5591994642880709, 1.0769476826637177, 0.8073994331450557, 0.7373526269938291, 0.6778584672254956, 0.6432277263509851, 0.6067631876526917, 0.5784447031045681, 0.5657908457649099, 0.5531414330769303, 0.534985728007833, 0.5230575677756825, 0.5064430001342238, 0.49767194361797557, 0.47279673289660656, 0.4677090669045154, 0.44373815703417224, 0.4362516469329403, 0.43205450327798534, 0.4295639040062, 0.3943191354206414, 0.3980532416444271, 0.39688406070430343, 0.3942935005816423, 0.3884249783785682, 0.38233885032043263, 0.35408481350900506, 0.3554575198306982, 0.35179755812418095, 0.3510698642571368, 0.34481733361523087], "accuracy": [0.25280675292015076, 0.22440892457962036, 0.48289525508880615, 0.6133931875228882, 0.7055870890617371, 0.7265883088111877, 0.7464007139205933, 0.7539294958114624, 0.7733456492424011, 0.7810064554214478, 0.791441023349762, 0.7944789528846741, 0.7998943328857422, 0.802271842956543, 0.8103289008140564, 0.8109893202781677, 0.8201030492782593, 0.8296129703521729, 0.8383304476737976, 0.8366134166717529, 0.8405758738517761, 0.8405758738517761, 0.8564258217811584, 0.8552370667457581, 0.8537842035293579, 0.8499537706375122, 0.8555012345314026, 0.8580108284950256, 0.8685774803161621, 0.8716153502464294, 0.8705587387084961, 0.8691058158874512, 0.868049144744873], "val_loss": [1.9700446128845215, 1.2654164178030831, 0.7706069435392108, 0.6400157383510044, 0.6153310367039272, 0.5354140996932983, 0.5114718845912388, 0.47512943404061453, 0.45661171845027376, 0.45765955107552664, 0.4398892947605678, 0.4085776891027178, 0.4209636534963335, 0.4185360925538199, 0.4462996210370745, 0.408398049218314, 0.39733665330069406, 0.37554862669536043, 0.37486536162240164, 0.36003061703273226, 0.3682236501148769, 0.3516782011304583, 0.338921274457659, 0.351229122706822, 0.341498110975538, 0.3727347595351083, 0.35130992106028963, 0.33080161469323294, 0.348294734954834, 0.32929497957229614, 0.3512577414512634, 0.3505659443991525, 0.34347550358091083], "val_accuracy": [0.18700000643730164, 0.4963333308696747, 0.6830000281333923, 0.7360000014305115, 0.7146666646003723, 0.7716666460037231, 0.7789999842643738, 0.7960000038146973, 0.7983333468437195, 0.8016666769981384, 0.8146666884422302, 0.8263333439826965, 0.8253333568572998, 0.815666675567627, 0.8003333210945129, 0.8199999928474426, 0.8323333263397217, 0.843999981880188, 0.8410000205039978, 0.846666693687439, 0.8420000076293945, 0.847000002861023, 0.8603333234786987, 0.8513333201408386, 0.8606666922569275, 0.8376666903495789, 0.8529999852180481, 0.8619999885559082, 0.8546666502952576, 0.8616666793823242, 0.856333315372467, 0.8510000109672546, 0.859333336353302]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 2, 8, 2, 3, 0, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [1, 3, 2, 2, 0, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8305714130401611, "mapping_values": [1, 4, 4, 3, 1, 1, 25, 25, 15, 10, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(grad, beta))), tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.square(grad)))), tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad)))), tf.math.add(tf.math.add(beta, alpha), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2288820405347143, 2.1706488336223764, 1.6286620835208654, 1.2683547429593798, 0.8558820435289441, 0.7701798560297831, 0.6989583679792384, 0.6574323418637654, 0.6161674953423408, 0.5943140366829743, 0.5902145323248241, 0.5659261548429385, 0.530764590157116, 0.5560276529430288, 0.5276608979146179, 0.5097194965394921, 0.4993099921320597, 0.5005280940587163, 0.46359137845722725, 0.45629239919997794, 0.4334568973340851, 0.46225796514151984, 0.422874251892538, 0.416761344981436, 0.41714946513304446, 0.42189683218311563, 0.40731112006129117, 0.3856434318147331, 0.3682631109376798, 0.3687814934032311, 0.3620156026700579, 0.36705876736278154, 0.3627838881189608], "accuracy": [0.25280675292015076, 0.22335226833820343, 0.45885616540908813, 0.5812970399856567, 0.6800950765609741, 0.707040011882782, 0.7364945411682129, 0.7544577717781067, 0.7676661014556885, 0.7755910754203796, 0.7790252566337585, 0.7884030938148499, 0.804649293422699, 0.7891955971717834, 0.8045172095298767, 0.8068947196006775, 0.8127063512802124, 0.8141592741012573, 0.8278959393501282, 0.8300092220306396, 0.8421608805656433, 0.8281601071357727, 0.848368763923645, 0.8473120927810669, 0.8471800088882446, 0.8448025584220886, 0.8487650156021118, 0.8570862412452698, 0.8628978729248047, 0.8615770936012268, 0.8668603897094727, 0.8607845902442932, 0.8642187118530273], "val_loss": [1.9701001303536552, 1.2518089158194405, 0.8340768303189959, 0.7133815288543701, 0.6418922117778233, 0.5283570970807757, 0.500910793031965, 0.47376252923692974, 0.45983483110155376, 0.43801064150674, 0.43928331988198416, 0.414178660937718, 0.41024998256138395, 0.4480910471507481, 0.4417157343455723, 0.40506042752947125, 0.4226609468460083, 0.38412831510816303, 0.386463395186833, 0.3811349868774414, 0.35952454805374146, 0.3627749766622271, 0.3641017164502825, 0.3573930093220302, 0.3506244591304234, 0.378858140536717, 0.34721429858888897, 0.33450746536254883, 0.35012270723070416, 0.3443750739097595, 0.34272814648491995, 0.35017006737845285, 0.3535080296652658], "val_accuracy": [0.18666666746139526, 0.5023333430290222, 0.6296666860580444, 0.7026666402816772, 0.703000009059906, 0.7716666460037231, 0.7873333096504211, 0.7926666736602783, 0.7979999780654907, 0.8136666417121887, 0.812333345413208, 0.8196666836738586, 0.8286666870117188, 0.7933333516120911, 0.8029999732971191, 0.8256666660308838, 0.8056666851043701, 0.843666672706604, 0.8373333215713501, 0.8360000252723694, 0.8483333587646484, 0.8486666679382324, 0.8446666598320007, 0.847000002861023, 0.8583333492279053, 0.8326666951179504, 0.8543333411216736, 0.8636666536331177, 0.8533333539962769, 0.8560000061988831, 0.8586666584014893, 0.8510000109672546, 0.8496666550636292]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 3, 9, 2, 1, 0, 5, 8, 0, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 2, 0, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [74, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8251428604125977, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2292961411078718, 2.1682681488779796, 1.909107305244322, 1.368542962653085, 1.0316238026136515, 0.8612381971161112, 0.8014058681007358, 0.7250441918126218, 0.6905579525781046, 0.6523592247230471, 0.7019810118711132, 0.6297730896781858, 0.592714307676957, 0.576175946750661, 0.5694413679292598, 0.5449500778300526, 0.5287381332579731, 0.5478112878281096, 0.4975885567907896, 0.49781038687607365, 0.48447320823734935, 0.4831105404526188, 0.46118621239021645, 0.45040248074016365, 0.43392211329100894, 0.4400153241499524, 0.4337344930243136, 0.42419000101237486, 0.4012187122511369, 0.39663814184388874, 0.4020287077212142, 0.37922930449400877, 0.37225352749848456], "accuracy": [0.2530709207057953, 0.22480517625808716, 0.36586976051330566, 0.5307092666625977, 0.625148594379425, 0.6787742972373962, 0.6933034062385559, 0.7235503792762756, 0.743891179561615, 0.7516840696334839, 0.735569953918457, 0.7630431652069092, 0.7730814814567566, 0.7802139520645142, 0.7833839654922485, 0.7952714562416077, 0.7987055778503418, 0.791441023349762, 0.8148196935653687, 0.8120459914207458, 0.8185180425643921, 0.8207634687423706, 0.8210275769233704, 0.8313300609588623, 0.8380662798881531, 0.830669641494751, 0.835160493850708, 0.8446704745292664, 0.8519350290298462, 0.8506141901016235, 0.850350022315979, 0.8561616539955139, 0.859199583530426], "val_loss": [1.9702957017081124, 1.5720693724496024, 1.3749221052442278, 0.8249144043241229, 0.6413311106818063, 0.6144425017493111, 0.5514270407812936, 0.5168110643114362, 0.5209001473018101, 0.4803703853062221, 0.4819523436682565, 0.478826676096235, 0.4520889861243112, 0.4626795734677996, 0.43696796894073486, 0.4288027456828526, 0.43887036187308176, 0.40369884456907, 0.39356195075171335, 0.3930050049509321, 0.37927242687770296, 0.37953467879976543, 0.3638330101966858, 0.3634734494345529, 0.3752960818154471, 0.3706569927079337, 0.3491708891732352, 0.3459596037864685, 0.3568742445537022, 0.3526909521647862, 0.34480575152805876, 0.3457681792122977, 0.3637545108795166], "val_accuracy": [0.18666666746139526, 0.3583333194255829, 0.46433332562446594, 0.6626666784286499, 0.7026666402816772, 0.7239999771118164, 0.7440000176429749, 0.7703333497047424, 0.7733333110809326, 0.7910000085830688, 0.7926666736602783, 0.781000018119812, 0.8009999990463257, 0.7820000052452087, 0.8103333115577698, 0.8190000057220459, 0.8036666512489319, 0.8289999961853027, 0.8276666402816772, 0.8339999914169312, 0.8326666951179504, 0.8393333554267883, 0.8476666808128357, 0.8486666679382324, 0.8316666483879089, 0.8410000205039978, 0.8543333411216736, 0.8579999804496765, 0.8503333330154419, 0.8543333411216736, 0.8553333282470703, 0.8543333411216736, 0.846666693687439]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 3, 9, 2, 1, 0, 5, 8, 0, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 2, 2, 2, 0, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 3, 3, 4], [5, 0], [77, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8251428604125977, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.228873489618207, 2.171441076249337, 1.472128369285131, 1.0777853648770581, 0.8428861092913341, 0.7257201346140559, 0.6895264386186006, 0.635035213084505, 0.611197790205518, 0.5903494781538354, 0.5655710225281005, 0.5533610537870607, 0.5272084489206927, 0.5154499881035459, 0.5100444662627637, 0.494586098935736, 0.4656199078636399, 0.48341660494612915, 0.4414486125310367, 0.451418412911059, 0.42727187148347867, 0.43046645147216916, 0.39738432970328524, 0.4143476504116577, 0.3974172173789023, 0.4019986266363031, 0.37782596124319145, 0.3700073987595897, 0.35772122292549474, 0.35264353180337876, 0.35213835035348534, 0.34334676337909736, 0.341279739823245], "accuracy": [0.25280675292015076, 0.22480517625808716, 0.4904239773750305, 0.6141856908798218, 0.6922467350959778, 0.7259278893470764, 0.7427024245262146, 0.7588165402412415, 0.769911527633667, 0.7807422876358032, 0.7901201844215393, 0.7938185334205627, 0.8070268034934998, 0.8082155585289001, 0.8127063512802124, 0.8137630224227905, 0.8241975903511047, 0.8239334225654602, 0.837537944316864, 0.8318583965301514, 0.8412362933158875, 0.837141752243042, 0.8561616539955139, 0.8500858545303345, 0.8557654023170471, 0.8490291833877563, 0.8603883385658264, 0.8590674996376038, 0.8664641380310059, 0.8687095642089844, 0.870030403137207, 0.8692378997802734, 0.8735966086387634], "val_loss": [1.970026901790074, 1.2797901630401611, 0.858630861554827, 0.701984337397984, 0.5635066713605609, 0.5288810900279454, 0.504349981035505, 0.4729290178843907, 0.45990380219050814, 0.45369419029780794, 0.44891154766082764, 0.41179987362452913, 0.41143559558050974, 0.4030350020953587, 0.40883236271994455, 0.38106385299137663, 0.37086342913763864, 0.371611978326525, 0.3655134950365339, 0.3710884877613613, 0.3568386435508728, 0.3456079959869385, 0.34208349670682636, 0.34663091387067524, 0.33731149775641306, 0.3568674325942993, 0.34868520498275757, 0.33480204003197805, 0.34483426809310913, 0.33086447204862324, 0.35083918060575214, 0.35372843061174664, 0.3481849091393607], "val_accuracy": [0.18666666746139526, 0.4716666638851166, 0.643666684627533, 0.6890000104904175, 0.7546666860580444, 0.7739999890327454, 0.7746666669845581, 0.7929999828338623, 0.7946666479110718, 0.8046666383743286, 0.812666654586792, 0.8193333148956299, 0.8333333134651184, 0.8320000171661377, 0.824999988079071, 0.8410000205039978, 0.8446666598320007, 0.8453333377838135, 0.8473333120346069, 0.8403333425521851, 0.8550000190734863, 0.8573333621025085, 0.8550000190734863, 0.8550000190734863, 0.8610000014305115, 0.8450000286102295, 0.8600000143051147, 0.8616666793823242, 0.8526666760444641, 0.8556666374206543, 0.8539999723434448, 0.8496666550636292, 0.8553333282470703]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 3, 2, 2, 1, 0, 2, 8, 0, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [77, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8054285645484924, "mapping_values": [1, 4, 4, 3, 1, 1, 22, 22, 13, 9, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, grad))), tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.math.add(grad, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), grad))))), tf.math.square(tf.math.negative(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2038868173018047, 2.15830990660696, 2.093850918040378, 1.535134885966455, 1.1021005866581408, 0.9517160088410388, 0.7838439626259779, 0.7529643971481343, 0.7041814055708594, 0.6725232464652161, 0.6387291873025699, 0.6357418176063756, 0.5934321820113984, 0.5731029178346421, 0.5753792189824315, 0.5468222826479165, 0.5398229972451134, 0.5023417987324038, 0.5175277438728706, 0.5349921516266166, 0.48881684016353183, 0.4827790804007554, 0.49936314840216633, 0.48499370086556803, 0.4669968128094127, 0.46132488462352134, 0.45146388577952, 0.4506247653905757, 0.4317534877371873, 0.4420496324238886, 0.42340190905652986], "accuracy": [0.24924051761627197, 0.26139214634895325, 0.2806762754917145, 0.45185577869415283, 0.5963544845581055, 0.6353189945220947, 0.7014925479888916, 0.7077004313468933, 0.7281733155250549, 0.7481178045272827, 0.7621186375617981, 0.7541936039924622, 0.7687227725982666, 0.7841764688491821, 0.7866860628128052, 0.7913089394569397, 0.7911768555641174, 0.8125742673873901, 0.8057059645652771, 0.8009510040283203, 0.8157442808151245, 0.8204993009567261, 0.8140271902084351, 0.8138951063156128, 0.8261788487434387, 0.8280280232429504, 0.8277638554573059, 0.8305375576019287, 0.8425571322441101, 0.8335754871368408, 0.8408400416374207], "val_loss": [1.9567687170846122, 1.962510108947754, 1.1890933173043388, 0.8426950999668666, 0.6813993113381522, 0.6804540497916085, 0.6076980658939907, 0.5332776478358677, 0.5302941628864833, 0.5091106040137154, 0.4752282755715506, 0.46913949080875944, 0.4967524153845651, 0.43537787028721403, 0.43338007586342947, 0.4788082667759487, 0.41340963329587666, 0.44731620379856657, 0.4364488976342337, 0.3977980102811541, 0.3852493592670986, 0.4232501472745623, 0.39179963724953787, 0.39091856139046804, 0.39902661527906147, 0.37438522066388813, 0.3728521040507725, 0.3677449566977365, 0.3764324358531407, 0.37547607932771954, 0.374076817716871], "val_accuracy": [0.1379999965429306, 0.24933333694934845, 0.42933332920074463, 0.6516666412353516, 0.6776666641235352, 0.6413333415985107, 0.7196666598320007, 0.7573333382606506, 0.7616666555404663, 0.7676666378974915, 0.7913333177566528, 0.8036666512489319, 0.768666684627533, 0.812666654586792, 0.812333345413208, 0.7820000052452087, 0.824999988079071, 0.7906666398048401, 0.8153333067893982, 0.8309999704360962, 0.8386666774749756, 0.8140000104904175, 0.8306666612625122, 0.8336666822433472, 0.8299999833106995, 0.8443333506584167, 0.8429999947547913, 0.8443333506584167, 0.8396666646003723, 0.8376666903495789, 0.8416666388511658]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [41, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 3, 2, 2, 1, 0, 2, 8, 0, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 0, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [77, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7894285917282104, "mapping_values": [1, 4, 4, 3, 1, 1, 22, 22, 14, 8, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, alpha)))), grad))))), tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0789197999031916, 1.3593116657624644, 1.1336315683543234, 0.8965712816975672, 0.8651014405581079, 0.8084285833800646, 0.7319397198100526, 0.7248895211683336, 0.7180473431856279, 0.6901697832375092, 0.6599162436038621, 0.6749340496153297, 0.654029246917128, 0.6275088266217241, 0.6264899831563884, 0.6020553231617212, 0.6196580660766724, 0.5989155085441726, 0.5776673567498192, 0.5814588428598589, 0.5849376690543606, 0.5752180509201335], "accuracy": [0.31924447417259216, 0.5296525955200195, 0.5963544845581055, 0.672170102596283, 0.6807554960250854, 0.6954167485237122, 0.724210798740387, 0.7197200059890747, 0.7310791015625, 0.7376832365989685, 0.7481178045272827, 0.7441553473472595, 0.7510236501693726, 0.7577598690986633, 0.7630431652069092, 0.778232753276825, 0.7600052952766418, 0.769911527633667, 0.7784969210624695, 0.7770439982414246, 0.7736098170280457, 0.7807422876358032], "val_loss": [1.1680238246917725, 0.8481916189193726, 0.7114734479359218, 0.6550124202455793, 0.7403956992285592, 0.5828002861567906, 0.5415045193263462, 0.5732967172350202, 0.5184383392333984, 0.5175838981355939, 0.5500057254518781, 0.5067602566310337, 0.4915038687842233, 0.5033661637987409, 0.481197578566415, 0.4774571316582816, 0.47276605878557476, 0.4767066070011684, 0.48484740938459125, 0.4775322846003941, 0.5218798262732369, 0.46973332336970736], "val_accuracy": [0.5673333406448364, 0.6243333220481873, 0.7149999737739563, 0.7160000205039978, 0.6629999876022339, 0.7493333220481873, 0.7463333606719971, 0.7266666889190674, 0.7710000276565552, 0.7726666927337646, 0.7436666488647461, 0.781333327293396, 0.7816666960716248, 0.7793333530426025, 0.7816666960716248, 0.7850000262260437, 0.8023333549499512, 0.7876666784286499, 0.7973333597183228, 0.7773333191871643, 0.7570000290870667, 0.7826666831970215]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [66, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 2, 4, 9, 2, 3, 0, 6, 0, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 3, 3, 4], [4, 0], [77, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.3102857172489166, "mapping_values": [1, 4, 4, 3, 1, 1, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3273646284198373, 2.9187380640561225, 2.3170220785767035, 2.305683427813692, 2.303248981458951, 2.2547945101121636], "accuracy": [0.20380398631095886, 0.24474970996379852, 0.09549596905708313, 0.09655263274908066, 0.09959053993225098, 0.16602826118469238], "val_loss": [1.9397446087428503, 1.996382440839495, 1.97626188823155, 1.973771027156285, 1.972186837877546, 1.9575604030064173], "val_accuracy": [0.20900000631809235, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.12700000405311584, 0.16699999570846558]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 9, 2, 1, 0, 5, 8, 0, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 2, 0, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.2548571527004242, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 6, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.subtract(tf.math.add(beta, beta), beta), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.0190705888700555, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.24356095492839813, 0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.015456063406808, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 3, 9, 2, 1, 0, 5, 8, 0, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 11, 11, 6, 5, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.subtract(grad, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 9, 2, 3, 0, 6, 0, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 1, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [3, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [0, 3, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), grad)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07872143387794495, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 3, 2, 2, 1, 0, 2, 8, 0, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 6, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [75, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 9, 2, 3, 0, 6, 0, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [0, 3, 3, 4], [4, 0], [77, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 3, 9, 2, 1, 0, 5, 8, 0, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 6, 3, 9, 2, 1, 0, 5, 8, 0, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 2, 0, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, beta), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.6802420371951007e+31, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06855104863643646, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 9, 4, 9, 2, 3, 0, 6, 0, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [0, 3, 3, 4], [4, 0], [77, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 3, 3, 2, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 5, 4, 9, 2, 3, 0, 6, 0, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 5, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [44, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [5, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 5, 2, 2, 1, 0, 2, 8, 0, 4, 5, 0, 2, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 1, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 98, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 3, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 35, 35, 24, 11, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.sqrt(grad)))))))))), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))))))))), tf.math.add(beta, alpha))), tf.math.add(beta, grad)))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 3, 2, 2, 1, 0, 8, 3, 3, 3, 5, 0, 9, 2, 3, 8, 3, 3, 6, 4, 8, 2, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 65, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [5, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 23, 23, 14, 9, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(alpha, tf.math.multiply(tf.math.add(beta, grad), grad)), tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(grad, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.math.add(beta, alpha), grad), tf.math.multiply(grad, tf.math.square(tf.math.negative(alpha))))))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [90, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 2, 4, 9, 2, 3, 0, 6, 0, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [85, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 3, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.07485714554786682, "mapping_values": [1, 4, 4, 3, 1, 1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), tf.math.add(beta, grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4619416725744174, 3.7084735053295095, 3.9301366702739697, 2.4137788335991384, 2.399189691564993, 2.4018987953040924, 2.3895928672339073], "accuracy": [0.20578522980213165, 0.15414080023765564, 0.1216483935713768, 0.09655263274908066, 0.09932637959718704, 0.09959053993225098, 0.09945846349000931], "val_loss": [2.3532984597342357, 1.9448729923793249, 2.043923718588693, 2.0278364590236118, 2.0592068944658553, 2.0755766459873746, 2.048600196838379], "val_accuracy": [0.10366666316986084, 0.17533333599567413, 0.10166666656732559, 0.09799999743700027, 0.10233332961797714, 0.10366666316986084, 0.10066666454076767]}}]