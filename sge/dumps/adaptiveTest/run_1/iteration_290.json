[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.8488571643829346, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2099730905808195, 1.4810290824404924, 0.9467829110253646, 0.7917504544664982, 0.7222320497028107, 0.6835416273638683, 0.6468779925247619, 0.6214003280531445, 0.6053213107193843, 0.5830965455748921, 0.5690448586620501, 0.5453895691473722, 0.5319312749017956, 0.516282223734826, 0.50593360649549, 0.4861449201455631, 0.4774286198562493, 0.4782769095116697, 0.4670770083672303, 0.443552669737522, 0.4414964635547567, 0.4349121520697496, 0.4219678742160351, 0.4142585348742844, 0.40717786365512054, 0.3913385251438802, 0.38743677327126214, 0.3771264008786999, 0.3750413043734231, 0.3640010505895006, 0.3632128661759951, 0.34905502403637423, 0.3508935172670254, 0.3440522163015992, 0.3313484099507725, 0.32899728040291476, 0.31897270339764405, 0.31656775444553137, 0.31442733383166116, 0.3146244070320837, 0.30683934457502693, 0.29578356887875074, 0.2977481247482519, 0.2905259413088412, 0.28574647270157794, 0.2778567182562685, 0.2750315417262148, 0.2742844062427158, 0.25805719857123927], "accuracy": [0.24963676929473877, 0.4971602261066437, 0.6592260003089905, 0.7041342258453369, 0.7276449799537659, 0.7495707273483276, 0.7520803213119507, 0.7734777331352234, 0.7788931727409363, 0.778761088848114, 0.7885351777076721, 0.8030643463134766, 0.800290584564209, 0.8095363974571228, 0.8125742673873901, 0.8220842480659485, 0.8259146809577942, 0.8234050869941711, 0.8247259259223938, 0.828292191028595, 0.8327829837799072, 0.8385946154594421, 0.8438779711723328, 0.8516708612442017, 0.8466516733169556, 0.8557654023170471, 0.8582749962806702, 0.8602562546730042, 0.858671247959137, 0.86553955078125, 0.8617091774940491, 0.8705587387084961, 0.8684453964233398, 0.8704266548156738, 0.8794082403182983, 0.8815215826034546, 0.8775591254234314, 0.8825782537460327, 0.8819178342819214, 0.8816536664962769, 0.8862766027450562, 0.8885219693183899, 0.8902390599250793, 0.8967111110687256, 0.8920882344245911, 0.8986923694610596, 0.8951261639595032, 0.8985602855682373, 0.9041078090667725], "val_loss": [1.5716991083962577, 0.7282326732363019, 0.6172364609582084, 0.5544932399477277, 0.5207092932292393, 0.5105101891926357, 0.48457765579223633, 0.4752683809825352, 0.4596459184374128, 0.4514561210359846, 0.4350725071770804, 0.4257488591330392, 0.4206946236746652, 0.40562344448907034, 0.4006814956665039, 0.3913487366267613, 0.3831384352275303, 0.38115369422095163, 0.3764511687414987, 0.3645997302872794, 0.3598502704075405, 0.35264512470790316, 0.3504469224384853, 0.34508743456431795, 0.3476111463138035, 0.34023901394435335, 0.33739600011280607, 0.3399657351630075, 0.3332489388329642, 0.3290297899927412, 0.3285325680460249, 0.3272303683417184, 0.32310010705675396, 0.3168294940676008, 0.31938873870032175, 0.321969245161329, 0.3169916442462376, 0.31203568833214895, 0.31313635621752056, 0.3181994472231184, 0.3162634287561689, 0.31404138462884085, 0.3119813459260123, 0.31033094440187725, 0.30941721371241976, 0.3125997611454555, 0.31069488184792654, 0.3149470601763044, 0.31331597907202585], "val_accuracy": [0.5563333630561829, 0.687666654586792, 0.7423333525657654, 0.750333309173584, 0.7703333497047424, 0.7733333110809326, 0.7900000214576721, 0.7940000295639038, 0.8003333210945129, 0.8053333163261414, 0.815666675567627, 0.8180000185966492, 0.8276666402816772, 0.8353333473205566, 0.831333339214325, 0.8410000205039978, 0.8450000286102295, 0.8479999899864197, 0.8453333377838135, 0.8529999852180481, 0.856333315372467, 0.8536666631698608, 0.8553333282470703, 0.8613333106040955, 0.859000027179718, 0.8610000014305115, 0.8663333058357239, 0.8663333058357239, 0.8643333315849304, 0.8693333268165588, 0.8656666874885559, 0.8693333268165588, 0.8686666488647461, 0.8740000128746033, 0.8740000128746033, 0.8663333058357239, 0.8740000128746033, 0.8766666650772095, 0.8740000128746033, 0.8730000257492065, 0.8736666440963745, 0.8776666522026062, 0.8730000257492065, 0.8786666393280029, 0.874666690826416, 0.8733333349227905, 0.8730000257492065, 0.878000020980835, 0.8743333220481873]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.8479999899864197, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2099730905808195, 1.4810282930076366, 0.9468081891497349, 0.7919087348565639, 0.7218390704697117, 0.6808381182894557, 0.6449677562039715, 0.620003078332147, 0.6042056132411566, 0.5837338829730181, 0.5676383018934527, 0.545717236907837, 0.5315177797121756, 0.5157895452547004, 0.506520248265582, 0.4884654414368784, 0.47656486721999924, 0.4823263662011947, 0.4686938421388643, 0.4485928372479606, 0.4466090589749925, 0.43896191461589185, 0.425649860319035, 0.41702792589706345, 0.40905191035176847, 0.39263071688395196, 0.38971033579779496, 0.3783320347906308, 0.37860526550542, 0.36818327515699356, 0.36822263610881034, 0.3548843360745502, 0.3524030086197763, 0.3452542151765202, 0.3355466527882789, 0.33258611559395496, 0.3235216779227679, 0.3239064644183213, 0.31839416447789237, 0.3215590886916341, 0.3072463392487071, 0.29957207264271646, 0.30141494754692505, 0.295571273210231, 0.28576880749332245, 0.28327599599644526, 0.28120727603461654, 0.2790626647875152, 0.262265739935642], "accuracy": [0.24963676929473877, 0.4971602261066437, 0.658961832523346, 0.7053229212760925, 0.7289658188819885, 0.7469290494918823, 0.7548540234565735, 0.7725531458854675, 0.7810064554214478, 0.7784969210624695, 0.7921014428138733, 0.8037247657775879, 0.8006868362426758, 0.8088759779930115, 0.8125742673873901, 0.8208954930305481, 0.8224804997444153, 0.8222163319587708, 0.8211596608161926, 0.82683926820755, 0.8293488025665283, 0.8360850811004639, 0.8429533839225769, 0.8499537706375122, 0.8467837572097778, 0.8562937378883362, 0.8561616539955139, 0.8589354157447815, 0.8577466607093811, 0.8659358024597168, 0.8642187118530273, 0.8658037185668945, 0.8679170608520508, 0.8681812286376953, 0.8741249442100525, 0.8819178342819214, 0.8766345381736755, 0.8804649114608765, 0.8771628737449646, 0.8817857503890991, 0.885219931602478, 0.8840311765670776, 0.8886540532112122, 0.8911636471748352, 0.8912957310676575, 0.8949940800666809, 0.8949940800666809, 0.8945978283882141, 0.9034473896026611], "val_loss": [1.5716992446354456, 0.7282253333500454, 0.6174407175609044, 0.5543370417186192, 0.5196810790470668, 0.5099404539380755, 0.4834664378847395, 0.4734541177749634, 0.458149927003043, 0.44958244051252094, 0.43374904564448763, 0.4251513395990644, 0.42002932514463154, 0.40732661315373014, 0.3986503481864929, 0.39011853081839426, 0.3831658789089748, 0.3830379332814898, 0.3809018390519278, 0.36771661043167114, 0.3645304186003549, 0.3549752576010568, 0.35370391607284546, 0.35455288205827984, 0.34829459871564594, 0.3460653679711478, 0.340195894241333, 0.34333890676498413, 0.33618909972054617, 0.3303168671471732, 0.3281217898641314, 0.32831441504614695, 0.32387615953172955, 0.3180542588233948, 0.32142919301986694, 0.31952362401144846, 0.31761441060474943, 0.31269831316811697, 0.3169586828776768, 0.3209288460867746, 0.3183876361165728, 0.31694923979895456, 0.31695849554879324, 0.31168333121708464, 0.3117667947496687, 0.3136159437043326, 0.3161129951477051, 0.3188701868057251, 0.31220210450036184], "val_accuracy": [0.5563333630561829, 0.687666654586792, 0.7413333058357239, 0.7526666522026062, 0.7710000276565552, 0.7739999890327454, 0.7923333048820496, 0.7943333387374878, 0.8050000071525574, 0.8069999814033508, 0.815666675567627, 0.8203333616256714, 0.8253333568572998, 0.8330000042915344, 0.8343333601951599, 0.8420000076293945, 0.843666672706604, 0.8456666469573975, 0.8450000286102295, 0.8506666421890259, 0.8546666502952576, 0.8536666631698608, 0.8536666631698608, 0.8583333492279053, 0.8583333492279053, 0.8586666584014893, 0.8673333525657654, 0.8600000143051147, 0.8603333234786987, 0.8693333268165588, 0.8673333525657654, 0.8663333058357239, 0.8686666488647461, 0.8713333606719971, 0.8740000128746033, 0.8676666617393494, 0.8709999918937683, 0.8736666440963745, 0.8743333220481873, 0.8653333187103271, 0.8709999918937683, 0.874666690826416, 0.875, 0.8776666522026062, 0.874666690826416, 0.8759999871253967, 0.8700000047683716, 0.875, 0.8776666522026062]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 2, 3, 4, 0, 9, 0, 5, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 1, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 12, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 1, 8, 9, 3, 0, 1, 3, 2, 2, 5], [2, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.11828571557998657, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(beta, tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [3.6555793205419387e+22, 4.112933696800572e+22, 3.936504793259545e+22, 4.002933645838464e+22, 3.949282229333283e+22, 3.916258560141251e+22, 3.859688543157672e+22, 3.900005979918425e+22, 3.8698835136644e+22, 3.856927412518445e+22, 3.958099940392134e+22, 3.933471421599193e+22], "accuracy": [0.10711926966905594, 0.10196803510189056, 0.10421344637870789, 0.10130762308835983, 0.10553427785634995, 0.1026284471154213, 0.10566636174917221, 0.10936468094587326, 0.09628847241401672, 0.11094967275857925, 0.11253467202186584, 0.10553427785634995], "val_loss": [2.7297085526914732e+22, 2.6929704387311984e+22, 2.663310567968124e+22, 2.642554635354049e+22, 2.6356069322089046e+22, 2.639421223744737e+22, 2.6314803482074825e+22, 2.6374730308830745e+22, 2.6531947111593997e+22, 2.6705289374508733e+22, 2.696282900594267e+22, 2.7435064238812606e+22], "val_accuracy": [0.10566666722297668, 0.10833333432674408, 0.109333336353302, 0.109333336353302, 0.11233333498239517, 0.11433333158493042, 0.11599999666213989, 0.11533333361148834, 0.1146666631102562, 0.11299999803304672, 0.11366666853427887, 0.11233333498239517]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 3, 2, 2, 9, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 1, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 53, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 8, 9, 3, 0, 1, 3, 2, 2, 5], [2, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 4, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, alpha)), alpha))))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(beta, tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 8, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [2.3025667635582976, 2.3025557026178483, 2.3028977013944303, 2.3064212099341606, 2.3223898726652137, 2.4080396620919595, 2.8580817711776856, 3.957127147992494, 5.135293955721671, 8.124259710532327], "accuracy": [0.1002509593963623, 0.10474177449941635, 0.09998679161071777, 0.09998679161071777, 0.09879804402589798, 0.1006472036242485, 0.10249637067317963, 0.10738343745470047, 0.10315678268671036, 0.09998679161071777], "val_loss": [1.9735435077122279, 1.973604338509696, 1.9743541308811732, 1.9797864641462053, 2.011357375553676, 2.1870995249067033, 2.9385360309055875, 4.041258539472308, 4.848761967250279, 8.20377676827567], "val_accuracy": [0.10233332961797714, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10366666316986084, 0.09666666388511658, 0.10233332961797714, 0.10233332961797714, 0.0949999988079071, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 92, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 6, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 5, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [82, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [202535.23456586862, 3832817.968762383, 17576708.936732266, 49678955.37498349, 105317838.80174349, 191864174.06630564], "accuracy": [0.09681680053472519, 0.10130762308835983, 0.10289261490106583, 0.10460969805717468, 0.09285431355237961, 0.09945846349000931], "val_loss": [749646.75, 5962008.0, 20083569.14285714, 47560812.571428575, 92840304.0, 160368649.14285713], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 3, 2, 2, 9, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [6, 5, 5, 0, 1, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 38], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(beta, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026424881143184, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 3, 4, 0, 9, 0, 5, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 1, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 8, 9, 3, 0, 1, 3, 2, 2, 5], [2, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), alpha)), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 3, 3, 0, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [14, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [4, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 0, 2, 0, 0, 2, 2], [42, 74, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 4, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0738343670964241, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 3, 2, 2, 9, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [8, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 3, 0, 0, 2, 2], [19, 15, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [36765168.82965682, 5439454678.714041, 92671359030.91269, 666720667261.9882, 2890110544564.7656, 9445014398545.625], "accuracy": [0.09681680053472519, 0.10130762308835983, 0.10289261490106583, 0.10460969805717468, 0.09285431355237961, 0.09945846349000931], "val_loss": [298461403.4285714, 16073838592.0, 172493640265.14285, 940327174144.0, 3522063723958.857, 10388779602505.143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 5, 3, 2, 2, 2, 0, 8, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 12, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [7, 1], [64], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [14498898584.388721, 1999638008321.4202, 33191943514315.69, 235708023261752.34, 1013966255984339.8, 3296927936007063.0], "accuracy": [0.09681680053472519, 0.10130762308835983, 0.10289261490106583, 0.10447761416435242, 0.09298639744520187, 0.09959053993225098], "val_loss": [114283919067.42857, 5831729723099.429, 61353066158957.71, 331040481158290.3, 1232157397745664.0, 3619040452036900.5], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [4, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [3, 4, 7, 9, 3, 0, 1, 3, 2, 2, 5, 3, 4, 6, 3, 7, 6, 7, 3, 3, 8, 7], [1, 3, 2, 0, 0, 2, 2, 3, 3, 0, 3, 1, 3, 3, 1, 0, 3, 3], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 40, 22, 18, 5], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(sigma, tf.math.square(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.add(sigma, sigma)), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha))))), sigma)))), tf.math.multiply(sigma, tf.math.multiply(tf.math.sqrt(alpha), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 2, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 0, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [98], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 10, 9, 5, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 5, 4, 1, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 3, 2, 2, 9, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 4, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 63], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 4, 8, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 1, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [14.06504024046602, 646.7804263035194, 7776.387222832189, 44402.70921113459, 156977.12047615903, 422938.08612633735], "accuracy": [0.09589222073554993, 0.10170386731624603, 0.1026284471154213, 0.10460969805717468, 0.09285431355237961, 0.09932637959718704], "val_loss": [63.118277413504465, 1601.5577915736608, 12961.474609375, 56579.9609375, 173097.76785714287, 421970.60714285716], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 3, 2, 8, 2, 0, 2, 2, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 2, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 41, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [3, 8, 2, 0, 0, 9, 3, 9], [0, 0, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 38], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [8, 1, 5, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [73, 84, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 3, 2, 2, 9, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [6, 68, 17, 49, 25], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [3, 0, 2, 0, 0, 0, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 88], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 8, 9, 3, 0, 1, 3, 2, 2, 5], [2, 0, 3, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.05999999865889549, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 6, 3, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.negative(grad))), tf.math.add(beta, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.301390094118442, 2.302378625476743, 2.3032149620784224, 2.302740796871032, 2.3032965827627487, 2.303285586851274, 2.303167371261137, 2.3027762405907928, 2.302990918429678, 2.3040782484821185, 2.3342788177253926, NaN, NaN], "accuracy": [0.09417514503002167, 0.09219389408826828, 0.09087307006120682, 0.0940430611371994, 0.09087307006120682, 0.07766477018594742, 0.07092854380607605, 0.09259014576673508, 0.10791176557540894, 0.10170386731624603, 0.09787346422672272, 0.09972262382507324, 0.09998679161071777], "val_loss": [1.9706521034240723, 1.9723179680960519, 1.97279235294887, 1.9736756597246443, 1.9742745671953474, 1.9741040638514928, 1.9738564491271973, 1.9739178248814173, 1.9745094435555595, 1.9769084794180733, 5.521894046238491, NaN, NaN], "val_accuracy": [0.043666668236255646, 0.054666668176651, 0.09099999815225601, 0.10166666656732559, 0.06733333319425583, 0.05366666615009308, 0.07233333587646484, 0.12166666984558105, 0.10266666859388351, 0.10233332961797714, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 9, 2, 2, 4, 0, 1, 4, 9, 3, 2, 6, 3, 6, 5, 8], [1, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 12, 5, 49, 25], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 3, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 38], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [4, 5, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [73, 84, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(alpha), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301654806037573, 2.302536647238862, 2.303456017149438, 2.3031581476647633, 2.3031106723250807, 2.3018333276406793], "accuracy": [0.09351472556591034, 0.09232597798109055, 0.0882314071059227, 0.08426892012357712, 0.08968432247638702, 0.09179764986038208], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 3, 3, 8, 2, 1, 2, 2, 3, 4, 2, 6, 3, 6, 5, 8], [3, 2, 1, 2, 1, 0, 0, 2, 0, 2, 3, 3, 0], [38, 32, 77, 49, 25], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 4, 2, 0, 0, 0, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 1, 8, 9, 3, 0, 1, 3, 2, 2, 5], [2, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 20, 20, 10, 10, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.301654806037573, 2.302536647238862, 2.303456017149438, 2.3031581476647633, 2.3031106723250807, 2.3018333276406793], "accuracy": [0.09351472556591034, 0.09232597798109055, 0.0882314071059227, 0.08426892012357712, 0.08968432247638702, 0.09179764986038208], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]