[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 2, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.836571455001831, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9860116711319116, 1.368306381292095, 1.0278403713970514, 0.9008677987815555, 0.8411063611893181, 0.7524433072610632, 0.6848482305678268, 0.7070017371352764, 0.6711472085265121, 0.654753960725134, 0.6294302735125872, 0.5899270212078737, 0.6082710458649432, 0.6016659530681973, 0.5590047700419921, 0.5624051654516761, 0.5429918157457597, 0.5216508869324314, 0.5214400322697718, 0.4870550481004958, 0.4986753873955131, 0.49760198531338506, 0.4785770756843115, 0.4733075425609417, 0.46477363784598824, 0.4667763333231813, 0.45387158075721745, 0.44141463134125347, 0.46257549775841844, 0.4317431173005266, 0.4202691099788881, 0.42935125043820144, 0.4007875624074282, 0.4118299903831525, 0.42259958781239976, 0.4094250168326099, 0.39315387445229266, 0.38918313271475663, 0.39013387100051944, 0.37258759196077623, 0.38001333749635957, 0.37769127829341587, 0.38570394695568805, 0.36740787864802077], "accuracy": [0.33707568049430847, 0.5165764093399048, 0.6230352520942688, 0.6642451286315918, 0.6773213744163513, 0.7191916704177856, 0.7432307600975037, 0.7306828498840332, 0.7454761862754822, 0.748778223991394, 0.7597411274909973, 0.7750627398490906, 0.7750627398490906, 0.7753269076347351, 0.7891955971717834, 0.785629391670227, 0.7950072884559631, 0.8067626357078552, 0.8030643463134766, 0.8197067975997925, 0.8150838613510132, 0.8103289008140564, 0.8211596608161926, 0.8238013386726379, 0.8259146809577942, 0.826310932636261, 0.8290846943855286, 0.8372738361358643, 0.829216718673706, 0.8437458872795105, 0.8426892161369324, 0.8387266993522644, 0.8515387773513794, 0.847840428352356, 0.839519202709198, 0.844010055065155, 0.8533879518508911, 0.854708731174469, 0.8541803956031799, 0.8652753829956055, 0.8599920868873596, 0.8578787446022034, 0.8603883385658264, 0.8636903762817383], "val_loss": [1.4335901056017195, 0.8527148962020874, 0.652272241456168, 0.6878242833273751, 0.6039460216249738, 0.5547316074371338, 0.5745634351457868, 0.5879155056817191, 0.5386862584522792, 0.5248789276395526, 0.4826489176068987, 0.47224325793130056, 0.4755967855453491, 0.47449757371629986, 0.4749002286366054, 0.49450487749917166, 0.4565590279442923, 0.4189840044294085, 0.4208257964679173, 0.4133660708154951, 0.42732614278793335, 0.3959869146347046, 0.4160496251923697, 0.3896866611071995, 0.41503808328083586, 0.3774207660130092, 0.38388129643031527, 0.3891628810337612, 0.3732029029301235, 0.3743548904146467, 0.3819757529667446, 0.3660314508846828, 0.3763517141342163, 0.3694103785923549, 0.3544015884399414, 0.3815891742706299, 0.3640649403844561, 0.3437336342675345, 0.3417768052646092, 0.352166371686118, 0.365241493497576, 0.37851438352039884, 0.3389737010002136, 0.3638237203870501], "val_accuracy": [0.47966668009757996, 0.6356666684150696, 0.7286666631698608, 0.6846666932106018, 0.7413333058357239, 0.7490000128746033, 0.746666669845581, 0.7136666774749756, 0.7559999823570251, 0.7646666765213013, 0.7913333177566528, 0.7929999828338623, 0.7906666398048401, 0.7879999876022339, 0.7866666913032532, 0.7713333368301392, 0.793666660785675, 0.8193333148956299, 0.8230000138282776, 0.8240000009536743, 0.8166666626930237, 0.8316666483879089, 0.8193333148956299, 0.8389999866485596, 0.8163333535194397, 0.8386666774749756, 0.8423333168029785, 0.8396666646003723, 0.8403333425521851, 0.8433333039283752, 0.8353333473205566, 0.847000002861023, 0.8370000123977661, 0.8396666646003723, 0.8569999933242798, 0.8309999704360962, 0.8479999899864197, 0.8583333492279053, 0.8640000224113464, 0.859666645526886, 0.8460000157356262, 0.8389999866485596, 0.8489999771118164, 0.8389999866485596]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8302857279777527, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.8790662682146178, 1.216050011858791, 0.9337152436251622, 0.774640169637771, 0.7682231107896204, 0.69352882644677, 0.6397757053674409, 0.6505070907753756, 0.6245487363205263, 0.5966815202778766, 0.5886503334971876, 0.5544787517565116, 0.5578823392070941, 0.5600081703068007, 0.5159082837573069, 0.5147596073582061, 0.5013910538453341, 0.4868189627074641, 0.47125631352347025, 0.45649710481413414, 0.44614933207759044, 0.4415062966009472, 0.4420191707698944, 0.4347888143535587, 0.41133041489928895, 0.4031135168616892, 0.40392101310137446, 0.40010478540324046, 0.4076390179267035, 0.38946230257459685, 0.37090818393641395, 0.3758337983499665, 0.36018008472361757, 0.3617761596602346, 0.35251414812850346, 0.3457452082567841, 0.3487702440064518, 0.33595384404077, 0.34070620495787135, 0.34047442279030793, 0.32279488271914925, 0.3344851368257099, 0.3364189086911732, 0.3099736480184786], "accuracy": [0.37366265058517456, 0.5885615944862366, 0.6527539491653442, 0.711530864238739, 0.7042662501335144, 0.7405890822410583, 0.7578919529914856, 0.7493065595626831, 0.7622507214546204, 0.7732135653495789, 0.7783648371696472, 0.7942147850990295, 0.7891955971717834, 0.7930260300636292, 0.809140145778656, 0.8064984679222107, 0.8117818236351013, 0.817989706993103, 0.8226125836372375, 0.8347642421722412, 0.835160493850708, 0.8374059200286865, 0.8318583965301514, 0.8352925777435303, 0.8475762605667114, 0.8512746095657349, 0.8466516733169556, 0.8515387773513794, 0.8520671129226685, 0.8545766472816467, 0.8619733452796936, 0.8603883385658264, 0.8643507957458496, 0.8617091774940491, 0.8668603897094727, 0.8720116019248962, 0.8713511824607849, 0.8749174475669861, 0.8720116019248962, 0.8759741187095642, 0.8796724081039429, 0.8709549307823181, 0.8726720213890076, 0.8813894987106323], "val_loss": [1.3536217893872942, 0.7162866251809257, 0.630230324608939, 0.5646938596452985, 0.5726899078914097, 0.5037014654704502, 0.5146101202283587, 0.507705535207476, 0.48323636395590647, 0.5439289808273315, 0.4611895424979074, 0.4927899496895926, 0.42468191044671194, 0.42795623200280325, 0.4508587121963501, 0.45063328742980957, 0.4267554112843105, 0.3914792537689209, 0.3960260237966265, 0.3845009207725525, 0.3886222073010036, 0.37278429099491667, 0.3812920025416783, 0.3582455941608974, 0.36316412687301636, 0.34896416323525564, 0.3584552492414202, 0.3535029888153076, 0.3581193174634661, 0.34066013778959003, 0.3422467623438154, 0.333195550101144, 0.33735538380486624, 0.3276110887527466, 0.32885738781520296, 0.3613123042242868, 0.3490822400365557, 0.328807532787323, 0.32701956374304636, 0.32392572505133493, 0.3383630003247942, 0.343184837273189, 0.3144479734557016, 0.3683032819202968], "val_accuracy": [0.5376666784286499, 0.6863333582878113, 0.734000027179718, 0.731333315372467, 0.7549999952316284, 0.7829999923706055, 0.7723333239555359, 0.7749999761581421, 0.7860000133514404, 0.7390000224113464, 0.7979999780654907, 0.7829999923706055, 0.8169999718666077, 0.8256666660308838, 0.7960000038146973, 0.7913333177566528, 0.8113333582878113, 0.8330000042915344, 0.8343333601951599, 0.8326666951179504, 0.8386666774749756, 0.843666672706604, 0.8316666483879089, 0.8506666421890259, 0.847000002861023, 0.8539999723434448, 0.8569999933242798, 0.8489999771118164, 0.8483333587646484, 0.8523333072662354, 0.8529999852180481, 0.8629999756813049, 0.8640000224113464, 0.8659999966621399, 0.8606666922569275, 0.8410000205039978, 0.8536666631698608, 0.8700000047683716, 0.8703333139419556, 0.8653333187103271, 0.8529999852180481, 0.8600000143051147, 0.8646666407585144, 0.8389999866485596]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8294285535812378, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.8788869540610444, 1.2150489605334394, 0.9268686913653544, 0.778984911280254, 0.743384774390024, 0.6856065643005336, 0.6503466340481817, 0.6375999428561147, 0.6150448237664002, 0.6046971114572045, 0.5764031082631857, 0.5559083902525659, 0.5451503909574194, 0.5639257005192836, 0.5160200784250792, 0.5060793920719644, 0.4960137901131692, 0.4871305597574798, 0.47119250996725953, 0.45116942724563097, 0.45138896415026086, 0.43932087725935487, 0.44465557303269304, 0.4319521452000963, 0.4077684563487323, 0.4090166834044403, 0.3977976091518032, 0.3975581354933361, 0.4035577445871968, 0.3857357085632878, 0.36816803103094137, 0.3740329450588531, 0.3617365663400526, 0.3558616836380256, 0.34976338467908463, 0.3488401634038762, 0.34396984166693395], "accuracy": [0.37366265058517456, 0.5886936783790588, 0.6557918190956116, 0.7087571024894714, 0.7189275026321411, 0.7446836829185486, 0.759609043598175, 0.7520803213119507, 0.7662131786346436, 0.7635715007781982, 0.7845727205276489, 0.7940827012062073, 0.7948752045631409, 0.7935543656349182, 0.8050455451011658, 0.81112140417099, 0.8186501264572144, 0.8190463781356812, 0.8241975903511047, 0.8321225643157959, 0.8315942287445068, 0.8370096683502197, 0.8317263126373291, 0.8363492488861084, 0.8506141901016235, 0.8508783578872681, 0.8496896028518677, 0.8508783578872681, 0.8524633646011353, 0.8556333184242249, 0.8656716346740723, 0.8603883385658264, 0.8634262084960938, 0.8640866279602051, 0.8632941246032715, 0.8683133125305176, 0.8721436858177185], "val_loss": [1.3531845637730189, 0.7067740985325405, 0.6287246601922172, 0.5700383186340332, 0.556283814566476, 0.5023816653660366, 0.4892734970365252, 0.4880168778555734, 0.4987253631864275, 0.48994674001421246, 0.46231387342725483, 0.4758532728467669, 0.4288470915385655, 0.4225185087748936, 0.4514188425881522, 0.4370511089052473, 0.43023811067853657, 0.39482524565287996, 0.4000669632639204, 0.40332865715026855, 0.3894398638180324, 0.38904001883098055, 0.3771945408412388, 0.35474554130009245, 0.3695899077824184, 0.3464476891926357, 0.35500449793679373, 0.35663797174181255, 0.3417692184448242, 0.33767071792057585, 0.3452457870755877, 0.3268833075250898, 0.341245915208544, 0.33084371260234285, 0.33032976729529245, 0.3766523003578186, 0.3552099125725882], "val_accuracy": [0.5379999876022339, 0.6880000233650208, 0.7336666584014893, 0.7296666502952576, 0.7673333287239075, 0.7829999923706055, 0.784333348274231, 0.7879999876022339, 0.7643333077430725, 0.784333348274231, 0.7963333129882812, 0.7900000214576721, 0.8133333325386047, 0.8236666917800903, 0.7929999828338623, 0.8036666512489319, 0.8069999814033508, 0.8336666822433472, 0.8330000042915344, 0.8276666402816772, 0.8393333554267883, 0.8346666693687439, 0.8360000252723694, 0.8533333539962769, 0.8433333039283752, 0.8526666760444641, 0.8573333621025085, 0.846666693687439, 0.8600000143051147, 0.859333336353302, 0.8496666550636292, 0.8676666617393494, 0.8616666793823242, 0.8663333058357239, 0.8640000224113464, 0.8353333473205566, 0.8479999899864197]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 3, 1, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 1, 2, 2, 0, 2, 3, 3, 0], [49, 21, 38, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 1, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [4, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.7917143106460571, "mapping_values": [1, 19, 19, 10, 9, 4, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), alpha)))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2859451919105216, 2.241226684714919, 2.176260526957151, 2.0730587957935436, 1.9192966654505066, 1.70407729793801, 1.5165569385942483, 1.3536884603152706, 1.2519482943234175, 1.167463826985171, 1.0934572131673752, 1.05000508229935, 1.0050569358377126, 0.9697093391824692, 0.9485164158348363, 0.908019197489434, 0.8898572625107438, 0.874345495645412, 0.8594416654294177, 0.8385861224077004, 0.8258599945661524, 0.8104741413438041, 0.8007019703508825, 0.7887859313857396, 0.7874304968305252, 0.7782903867249066, 0.7647301793618052, 0.7481590677970404, 0.7487450011055845, 0.7374973359471377, 0.7353471527561268, 0.7398375166153722, 0.7216746165704859, 0.7184305280553288, 0.7080145199316809, 0.7127714989727294, 0.6962105829906879, 0.7003313571139884, 0.6888982353901992, 0.6968030661261865, 0.6794379959489376, 0.6764741548142806, 0.6693206886022697, 0.6776036376950606, 0.661451321291555, 0.6760399302062011, 0.6637839896882671, 0.6618616940905594, 0.6515008279392669, 0.6391013146879619, 0.6490409700326664, 0.6522839966388411, 0.6492582950231783, 0.6350645279730033, 0.6369745120191618, 0.632841754488705, 0.6360043721066143], "accuracy": [0.1348566859960556, 0.2456742823123932, 0.3237352967262268, 0.3843613862991333, 0.4237220883369446, 0.48091402649879456, 0.5156518220901489, 0.5486725568771362, 0.5704662799835205, 0.5988640785217285, 0.620261549949646, 0.6254127621650696, 0.6490556001663208, 0.6590939164161682, 0.661471426486969, 0.672698438167572, 0.6774534583091736, 0.6866992712020874, 0.6900013089179993, 0.6960771083831787, 0.6968696117401123, 0.7005679607391357, 0.7104741930961609, 0.7132478952407837, 0.7099458575248718, 0.719852089881897, 0.7154933214187622, 0.7243428826332092, 0.7211728692054749, 0.7306828498840332, 0.7260599732398987, 0.7288337349891663, 0.7345132827758789, 0.7347774505615234, 0.7380794882774353, 0.7302865982055664, 0.7416457533836365, 0.7403249144554138, 0.7460044622421265, 0.7461365461349487, 0.750759482383728, 0.750231146812439, 0.7508915662765503, 0.7469290494918823, 0.7555144429206848, 0.7446836829185486, 0.7535332441329956, 0.7565711140632629, 0.7574957013130188, 0.7593448758125305, 0.7580240368843079, 0.763439416885376, 0.759609043598175, 0.7672698497772217, 0.7642319202423096, 0.7668735980987549, 0.765949010848999], "val_loss": [1.9324101720537459, 1.8828333445957728, 1.8035971096583776, 1.6760458265032088, 1.49282329423087, 1.2809394087110246, 1.0997238159179688, 0.9682034083775112, 0.8792257649557931, 0.8173674855913434, 0.7687399557658604, 0.7309922320502145, 0.7011910847255162, 0.6830989973885673, 0.6643266337258475, 0.6451842103685651, 0.6296205690928868, 0.6196344239371163, 0.6118236098970685, 0.5974732467106411, 0.5931098290852138, 0.5860636574881417, 0.5752552577427456, 0.5684601749692645, 0.5715621028627668, 0.5615662847246442, 0.5545470714569092, 0.5488090004239764, 0.5445560387202671, 0.5391447373798915, 0.5348565067563739, 0.5349849462509155, 0.5327237333570208, 0.527434127671378, 0.5283057178769793, 0.5187026262283325, 0.5134878499167306, 0.512452415057591, 0.509561402457101, 0.5099721125194004, 0.5037322895867484, 0.5024693182536534, 0.5006131614957537, 0.49859215532030376, 0.49621483257838656, 0.4952984707696097, 0.4995943307876587, 0.49037550176892963, 0.4905304568154471, 0.48767941338675364, 0.4862208536693028, 0.48336052894592285, 0.4826831647327968, 0.48011018548692974, 0.47924097946711947, 0.47895898137773785, 0.4763549736567906], "val_accuracy": [0.34566667675971985, 0.44066667556762695, 0.484333336353302, 0.5383333563804626, 0.5559999942779541, 0.609000027179718, 0.6423333287239075, 0.668666660785675, 0.6836666464805603, 0.6933333277702332, 0.7056666612625122, 0.7116666436195374, 0.7269999980926514, 0.7223333120346069, 0.7283333539962769, 0.7406666874885559, 0.7390000224113464, 0.7403333187103271, 0.7416666746139526, 0.7549999952316284, 0.7536666393280029, 0.7483333349227905, 0.7646666765213013, 0.7570000290870667, 0.7546666860580444, 0.7586666941642761, 0.7676666378974915, 0.7706666588783264, 0.7646666765213013, 0.7710000276565552, 0.7720000147819519, 0.7683333158493042, 0.7723333239555359, 0.778333306312561, 0.7773333191871643, 0.7806666493415833, 0.7850000262260437, 0.7846666574478149, 0.7866666913032532, 0.7796666622161865, 0.7933333516120911, 0.7879999876022339, 0.7943333387374878, 0.7923333048820496, 0.7846666574478149, 0.7903333306312561, 0.781333327293396, 0.7983333468437195, 0.7916666865348816, 0.7940000295639038, 0.8016666769981384, 0.8036666512489319, 0.7956666946411133, 0.8016666769981384, 0.8006666898727417, 0.8019999861717224, 0.7973333597183228]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 4, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 0, 2, 0, 2, 3, 3, 0], [45, 7, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [6, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 6, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [49, 7, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 5, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.negative(grad), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), alpha)))))))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 8, 1, 8, 2, 1, 1, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [61, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [74, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1193047078.3144667, 23277714992.352924, 107965462961.62093, 299465012300.9589, 647189537054.7362, 1173306457512.559], "accuracy": [0.09615638852119446, 0.10553427785634995, 0.09655263274908066, 0.09602430462837219, 0.10289261490106583, 0.10276053100824356], "val_loss": [4511483172.571428, 36080964169.14286, 121761876260.57143, 288606650368.0, 563666728667.4286, 973994309339.4286], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 2, 0, 1, 1, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 1, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [4, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 4, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), grad)))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [71, 7, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [32, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0], [6, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4.0923177667984136e+16, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17223615944385529, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 3, 1, 2, 8, 0, 1, 1, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 0, 0, 1, 0, 0, 1, 0, 2, 3, 3, 0], [49, 28, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 2, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [95, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 6, 0], [2, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 17, 13, 6, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 3, 1, 2, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.sqrt(tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 3, 8, 2, 1, 0, 1, 5, 4, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 2, 2, 3, 3, 0], [38, 54, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 1, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [4, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3690338677670963, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03183199092745781, 0.05811649560928345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.173567703792027, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.006666666828095913, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 0, 8, 2, 2, 0, 1, 5, 3, 2, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 92, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 3, 8, 2, 1, 2, 1, 5, 9, 2, 2, 6, 3, 6, 5, 8], [0, 2, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [49, 7, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0], [6, 1, 6, 5], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 3, 1, 1, 0, 1, 0, 8, 5, 4, 1, 0, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.square(sigma)), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 5, 1, 8, 2, 1, 1, 1, 5, 0, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 0, 3, 8, 2, 1, 2, 1, 5, 9, 2, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [49, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [6, 1, 6, 5], [2, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302617169327157, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 0, 0, 1, 0, 0, 1, 0, 2, 3, 3, 0], [45, 7, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 2, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 6, 0], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 6, 0, 8, 5, 6, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 2, 0, 2, 2, 0, 2, 3, 3, 0], [49, 99, 46, 49, 57, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 1, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))), grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 5, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [49, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 1, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [85, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3029837120856276, 2.303760285611166, 2.3030750493583834, 2.3023614874290455, 2.3043224550178416, 2.301812249466948], "accuracy": [0.08875974267721176, 0.09192973375320435, 0.09126931428909302, 0.09272222965955734, 0.0874389111995697, 0.08796724677085876], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [49, 7, 46, 49, 85, 46], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0], [0, 4, 6, 5], [2, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303087871434619, 2.304202633668655, 2.3038261911069493, 2.3033751965261895, 2.305853952081086, 2.3036387024018996], "accuracy": [0.08809932321310043, 0.09126931428909302, 0.09021265059709549, 0.09074098616838455, 0.08294808864593506, 0.08545766770839691], "val_loss": [1.9711328915187292, 1.971414429800851, 1.9716434478759766, 1.9718688556126185, 1.972184317452567, 1.9724887439182825], "val_accuracy": [0.03799999877810478, 0.035999998450279236, 0.03433333337306976, 0.03266666829586029, 0.03099999949336052, 0.029666665941476822]}}]