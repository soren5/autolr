[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1, 1], [1, 3, 8, 6, 0], [3, 0, 2], [16, 52, 13]], "fitness": -0.6342856884002686, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.22258881781914, 1.5576691170725068, 1.0326368625704734, 0.8847277358129055, 0.806091741855197, 0.7757972688990467, 0.7103276987432284, 0.6644014061449888, 0.624587475749653, 0.6058138453288086, 0.5964794334183122, 0.563745747798501, 0.5513437378282136, 0.5468505983181979, 0.5328796493489083, 0.5172835793776708, 0.5106280727661077, 0.4847600569719998, 0.48283470489046343, 0.4677523383807985, 0.4529218150443247, 0.43201061760854914, 0.4332216739922215, 0.4236878571713747, 0.41538134155461126, 0.41112251469346084, 0.39851240826919015, 0.41247924059735724, 0.4213263871151427, 0.414435587542924, 0.4081885731845342, 0.4153233259825769], "accuracy": [0.2355038970708847, 0.4761590361595154, 0.6275261044502258, 0.6716417670249939, 0.6890767216682434, 0.7104741930961609, 0.7308149337768555, 0.7528728246688843, 0.7709681391716003, 0.7714964747428894, 0.7729493975639343, 0.7897239327430725, 0.7869502305984497, 0.7954035401344299, 0.793950617313385, 0.8123101592063904, 0.8029322624206543, 0.8222163319587708, 0.8170651197433472, 0.8271034359931946, 0.8245938420295715, 0.8384625315666199, 0.8362171649932861, 0.8421608805656433, 0.8450667262077332, 0.8441421389579773, 0.8498216867446899, 0.845859169960022, 0.842028796672821, 0.8441421389579773, 0.8485008478164673, 0.8374059200286865], "val_loss": [1.60963351385934, 0.7689664874758039, 0.7368359736033848, 0.618187427520752, 0.5972207954951695, 0.5327036040169852, 0.4972649472100394, 0.47652297360556467, 0.45953614371163504, 0.44251337221690584, 0.4439010279519217, 0.42657701458249775, 0.4224874292101179, 0.424255302974156, 0.4035812190600804, 0.41399730103356497, 0.4076557329722813, 0.4099800075803484, 0.4061704959188189, 0.39542594977787565, 0.37564378125326975, 0.3805306553840637, 0.3857367975371225, 0.3834122504506792, 0.3806974802698408, 0.3850206732749939, 0.3989390390259879, 0.3822013480322702, 0.39324373858315603, 0.41398204224450247, 0.41327257667269024, 0.41297623940876554], "val_accuracy": [0.5019999742507935, 0.6710000038146973, 0.6690000295639038, 0.7170000076293945, 0.75, 0.7643333077430725, 0.7706666588783264, 0.7799999713897705, 0.7870000004768372, 0.8036666512489319, 0.8083333373069763, 0.8183333277702332, 0.8146666884422302, 0.8193333148956299, 0.831333339214325, 0.8230000138282776, 0.8330000042915344, 0.8209999799728394, 0.8213333487510681, 0.8333333134651184, 0.8376666903495789, 0.8420000076293945, 0.831333339214325, 0.8486666679382324, 0.843999981880188, 0.8489999771118164, 0.8510000109672546, 0.8363333344459534, 0.8479999899864197, 0.8396666646003723, 0.8349999785423279, 0.8493333458900452]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1, 1], [1, 3, 8, 6, 0], [3, 0, 2], [16, 52, 13]], "fitness": -0.5648571252822876, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.22258881781914, 1.5576746653036717, 1.0326357127621568, 0.8848110767655353, 0.8058153264290464, 0.7751111830025617, 0.710761324069157, 0.6633974637936103, 0.6256050909703922, 0.6047118378982977, 0.5971993519692703, 0.5636225583420736, 0.5512438816889449, 0.5434125220896845, 0.5329687057343204, 0.5189021099134915, 0.5135501097883326, 0.4884548631358093, 0.4892460834183288, 0.4755588402097503, 0.45730184190434836, 0.4239062114028631, 0.42795408856142875, 0.4163047439386627, 0.4141271022080651, 0.3986641944769493, 0.4073481817507489, 0.40694190864282087, 0.4103331706897379, 0.3929106045148754, 0.38145395867765663, 0.39188070938713465, 0.39087495052299603], "accuracy": [0.2355038970708847, 0.4760269522666931, 0.6277902722358704, 0.6719059348106384, 0.6881521344184875, 0.7103421092033386, 0.7298903465270996, 0.7536653280258179, 0.7705719470977783, 0.7724210619926453, 0.7738739848136902, 0.7906485199928284, 0.7844406366348267, 0.7961959838867188, 0.7977809906005859, 0.8121780753135681, 0.8050455451011658, 0.8173292875289917, 0.8156121969223022, 0.8271034359931946, 0.8201030492782593, 0.8416325449943542, 0.8381983637809753, 0.8392550349235535, 0.8422929644584656, 0.8450667262077332, 0.8470479249954224, 0.8446704745292664, 0.8470479249954224, 0.8529917001724243, 0.8529917001724243, 0.8490291833877563, 0.8469158411026001], "val_loss": [1.6096335819789342, 0.7689849478857858, 0.7368641069957188, 0.618013892854963, 0.5966112102781024, 0.5329281432288033, 0.497228741645813, 0.47560276303972515, 0.4581714187349592, 0.4429887192589896, 0.44239299637930735, 0.4267432859965733, 0.4215840612139021, 0.4217752047947475, 0.40251351254326956, 0.4143239600317819, 0.40338146686553955, 0.4065170202936445, 0.40620521136692594, 0.4025463972772871, 0.38617331641060965, 0.38195623670305523, 0.3934234551021031, 0.37653004271643503, 0.3762268338884626, 0.3805072477885655, 0.3735209958893912, 0.3675290175846645, 0.37082156113215853, 0.37582407678876606, 0.3999140518052237, 0.3776743497167315, 0.40466294969831196], "val_accuracy": [0.5019999742507935, 0.6710000038146973, 0.6696666479110718, 0.7179999947547913, 0.749666690826416, 0.765666663646698, 0.7696666717529297, 0.7803333401679993, 0.7870000004768372, 0.8056666851043701, 0.8113333582878113, 0.8143333196640015, 0.8143333196640015, 0.8206666707992554, 0.831333339214325, 0.8196666836738586, 0.8353333473205566, 0.8263333439826965, 0.8216666579246521, 0.8346666693687439, 0.8363333344459534, 0.8356666564941406, 0.8343333601951599, 0.8420000076293945, 0.8376666903495789, 0.8463333249092102, 0.8476666808128357, 0.8506666421890259, 0.8443333506584167, 0.8483333587646484, 0.846666693687439, 0.8296666741371155, 0.8429999947547913]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 8, 6, 6, 5, 7, 3, 9, 2, 7, 2, 8, 7, 5], [3, 3, 0, 4, 1, 0, 4, 4], [25, 68, 37, 55], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 1, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [89, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 22, 22, 14, 8, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), alpha)), tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [3, 5, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 0, 1, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1], [6, 9, 6, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 3, 9, 6, 0, 2, 5, 6, 4, 9], [3, 1, 2, 0, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 15, 10, 5, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.pow(alpha, beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), beta)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 3, 9, 6, 0, 4, 2, 8, 8, 1, 0], [3, 1, 2], [16, 52, 13, 77]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07845727354288101, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 1, 0, 1], [7, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10394927859306335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [6, 8, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.304117128156542, 2.304094922100123, 2.3061949531903845, 2.308998210004072, 2.3137957137164156, 2.317890728249006, 2.320643217587877, 2.328424482959026, 2.339676379401686, 2.350966302899164, 2.421047028486267, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.08770307898521423, 0.08347642421722412, 0.08387266844511032, 0.07951393723487854, 0.07330603897571564, 0.07700435817241669, 0.07198520749807358, 0.07026813179254532, 0.07872143387794495, 0.08321225643157959, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9716388157435827, 1.9729647636413574, 1.9744593756539481, 1.9766679491315569, 1.9793986592973982, 1.9823651313781738, 1.9858636174883162, 1.990593365260533, 1.9989636284964425, 2.0165947505405972, 2.560654708317348, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03433333337306976, 0.028999999165534973, 0.023666666820645332, 0.0273333340883255, 0.03566666692495346, 0.043666668236255646, 0.057999998331069946, 0.07866666465997696, 0.09566666930913925, 0.0989999994635582, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1], [4, 8, 6, 7, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [0, 0, 1], [2, 2, 8, 4], [5], [64], [0, 0, 0, 0, 1, 1, 1], [1, 3, 9, 6, 0], [3, 0, 2], [85, 74, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [82], [1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 1], [6, 7, 1, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 1, 1, 1], [6, 3, 9, 2, 0, 1, 6, 5, 1, 4, 5, 0, 8, 3, 9, 4, 2, 2, 2], [0, 2, 2, 2, 2, 2, 1, 1, 0, 3, 3], [16, 52, 13, 97]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta)), beta)", "other_info": {"loss": [2.3022318899104026, 2.3025844099026913, 2.3025832943959776, 2.3025847324338082, 2.3025846788675683, 2.3025843743178287], "accuracy": [0.10421344637870789, 0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644529070173, 1.973644460950579, 1.9736455508640833, 1.9736457552228654, 1.9736463001796178, 1.9736473219735282], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 3, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1], [6, 8, 0, 5, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 9, 6, 0], [3, 0, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 5, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07845727354288101, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0], [6, 8, 6, 6, 5, 7, 3, 9], [3, 3, 4, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 3, 1, 6, 0, 4, 3, 3, 7, 7, 8, 0], [2, 1, 0, 3, 1, 0, 1, 3, 2, 3], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1], [4, 7, 8, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31], [1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1], [6, 7, 6, 5, 5, 7, 3, 9], [3, 2, 5, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [1, 1, 1, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(grad, beta), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1076114880.007, 20606690473.47193, 95122656021.06564, 262325111856.55582, 567231350004.1316, 1047860197699.2545], "accuracy": [0.09998679161071777, 0.0948355570435524, 0.09853387624025345, 0.10130762308835983, 0.09747721254825592, 0.09760929644107819], "val_loss": [4014164114.285714, 32103179410.285713, 108336559835.42857, 256784381659.42856, 501519670125.7143, 866606214582.8572], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [4, 7, 3, 5, 5, 7, 3, 9], [1, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.square(alpha))), tf.math.add(grad, grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), alpha))), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1], [0, 2, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [4, 2, 6, 6, 5, 7, 3, 9, 9, 7, 2, 8, 7], [3, 3, 5, 4, 1, 1, 2], [25, 84, 69, 92], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [1, 1, 0, 0, 1], [1, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 9, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(grad, tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), grad))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07845727354288101, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [0, 8, 6, 0, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 1, 0, 1], [1, 5, 9, 6, 0], [2, 2, 3, 1, 3, 3, 3], [16, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, beta)", "other_info": {"loss": [2.303563797840778, 2.302068446558291, 2.3022967130280345, 2.302522688934816, 2.3036910929243404, 2.3041430203323556], "accuracy": [0.09192973375320435, 0.09245806187391281, 0.09087307006120682, 0.09047681838274002, 0.09259014576673508, 0.08466517180204391], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4, 9], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 90, 63, 79, 56], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1], [4, 7, 8, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 3, 6, 6, 0], [3, 0, 2, 0, 3], [16, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 21, 21, 13, 8, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 4, 5, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), tf.math.square(tf.math.pow(tf.math.pow(tf.math.add(alpha, alpha), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.303563797840778, 2.302068446558291, 2.3022967130280345, 2.302522688934816, 2.3036910929243404, 2.3041430203323556], "accuracy": [0.09192973375320435, 0.09245806187391281, 0.09087307006120682, 0.09047681838274002, 0.09259014576673508, 0.08466517180204391], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1], [6, 8, 6, 6, 5, 7, 3, 9], [3, 3, 5, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [1, 1, 0, 0, 1], [1, 0, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303563797840778, 2.302068446558291, 2.3022967130280345, 2.302522688934816, 2.3036910929243404, 2.3041430203323556], "accuracy": [0.09192973375320435, 0.09245806187391281, 0.09087307006120682, 0.09047681838274002, 0.09259014576673508, 0.08466517180204391], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [6, 7, 6, 7, 5, 7, 3, 9, 2, 0], [3, 2, 5, 4, 1, 2, 0], [25, 76], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1], [3, 3, 9, 6, 0], [3, 1, 2], [16, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 2, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(beta)), grad)))), tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, beta))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.303563797840778, 2.302068446558291, 2.3022967130280345, 2.302522688934816, 2.3036910929243404, 2.3041430203323556], "accuracy": [0.09192973375320435, 0.09245806187391281, 0.09087307006120682, 0.09047681838274002, 0.09259014576673508, 0.08466517180204391], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]