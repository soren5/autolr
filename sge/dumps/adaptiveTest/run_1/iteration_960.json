[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 5, 4, 2, 0, 2, 9, 8, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8317142724990845, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 9, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(grad))))), tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9686174317751546, 1.562879212859001, 0.9970593863883904, 0.8229477497108262, 0.7677637980582928, 0.7122976343786995, 0.6993992653237578, 0.6989921626634035, 0.6584049729607471, 0.6112200870190818, 0.6128765299272669, 0.5919823931696676, 0.5856480721422175, 0.5796753897280851, 0.5431725997824663, 0.5414773631703663, 0.5457926112757446, 0.509960329874301, 0.5094805222303325, 0.48952860707667334, 0.492392988508687, 0.4629947644151701, 0.4595320284909828, 0.47321813755015874, 0.45115871171453104, 0.4347728163558951, 0.44662736733953917, 0.44133801825404595, 0.4227829962287833, 0.4277947843153526, 0.4260679359457134, 0.39474196034714754, 0.3924419983715634, 0.39387431068427337, 0.3812698868751967, 0.38490989240972107, 0.38562727154379806, 0.3730290883394548, 0.3739946117734613], "accuracy": [0.34367984533309937, 0.4632149040699005, 0.6292431354522705, 0.6880200505256653, 0.7063795924186707, 0.7316074371337891, 0.7323999404907227, 0.739928662776947, 0.7445515990257263, 0.7736098170280457, 0.7689869403839111, 0.7786290049552917, 0.7833839654922485, 0.785101056098938, 0.7969884872436523, 0.7975168228149414, 0.7947431206703186, 0.8173292875289917, 0.8113855719566345, 0.819442629814148, 0.821820080280304, 0.8294808864593506, 0.8315942287445068, 0.8247259259223938, 0.8290846943855286, 0.8378021121025085, 0.8333113193511963, 0.8334434032440186, 0.8433496356010437, 0.8426892161369324, 0.844010055065155, 0.8564258217811584, 0.8551049828529358, 0.8537842035293579, 0.8610487580299377, 0.8557654023170471, 0.8540483713150024, 0.86118084192276, 0.8614450097084045], "val_loss": [1.751411301749093, 0.7341749327523368, 0.6122777462005615, 0.5959159306117466, 0.5596858092716762, 0.5211556809289115, 0.630602240562439, 0.5188965967723301, 0.49249320370810373, 0.48985334805079866, 0.4848939691271101, 0.4738513742174421, 0.4805147647857666, 0.4448517050061907, 0.4195198842457363, 0.44606452328818186, 0.4115536723818098, 0.42488084520612446, 0.40855164187295095, 0.4063465510095869, 0.3893295611654009, 0.38881865569523405, 0.3887566328048706, 0.41176927941186087, 0.3777327111789158, 0.3776897277150835, 0.3680898632322039, 0.3743707963398525, 0.3582588859966823, 0.37726058278764996, 0.35941619532448904, 0.3626595820699419, 0.356680120740618, 0.3500329170908247, 0.36790927818843294, 0.3404203312737601, 0.3543757540839059, 0.3414813535554068, 0.33929463795253206], "val_accuracy": [0.22333332896232605, 0.6933333277702332, 0.7366666793823242, 0.7226666808128357, 0.7519999742507935, 0.7733333110809326, 0.7193333506584167, 0.7603333592414856, 0.7886666655540466, 0.7806666493415833, 0.7793333530426025, 0.7836666703224182, 0.7886666655540466, 0.8143333196640015, 0.8190000057220459, 0.8116666674613953, 0.8259999752044678, 0.8186666369438171, 0.8266666531562805, 0.8343333601951599, 0.840666651725769, 0.8346666693687439, 0.8399999737739563, 0.8323333263397217, 0.843666672706604, 0.8396666646003723, 0.8500000238418579, 0.8433333039283752, 0.8506666421890259, 0.8479999899864197, 0.8513333201408386, 0.8429999947547913, 0.8539999723434448, 0.8606666922569275, 0.843999981880188, 0.8566666841506958, 0.8506666421890259, 0.856333315372467, 0.8569999933242798]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 0, 4, 0, 0, 5, 9, 8, 4, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8282856941223145, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9684075304640283, 1.5658785680879959, 0.9848872370424524, 0.8064301809252465, 0.7502370055057842, 0.7649920452240987, 0.7060471236776635, 0.6849552213539458, 0.6515844236700652, 0.6177698502277953, 0.6053356753757931, 0.5910101411380725, 0.5745665861819919, 0.5834707980300173, 0.5379364548688709, 0.5411747001212869, 0.5423699581801001, 0.5127935949302133, 0.5155764398809752, 0.49643289373692834, 0.4975678242980182, 0.46973951262663133, 0.46066701786550535, 0.4774076630883071, 0.45454858600691783, 0.4375017981023175, 0.4481337425959439, 0.44178613879425244, 0.4256662522891509, 0.43549470713487815, 0.4228185282572622, 0.40003481675384694, 0.40494692690887973, 0.4005643254446867, 0.38377414368414814, 0.38869054168915435, 0.3903065184481848, 0.371231054278759, 0.3752249379782172, 0.37013181979472626, 0.35802154450242735], "accuracy": [0.3435477614402771, 0.46308282017707825, 0.6333377361297607, 0.6934354901313782, 0.7180029153823853, 0.7135120630264282, 0.7306828498840332, 0.7430986762046814, 0.7485140562057495, 0.7691190242767334, 0.7717606425285339, 0.7824593782424927, 0.7866860628128052, 0.7836481332778931, 0.7992339134216309, 0.7994980812072754, 0.7926297783851624, 0.8164047002792358, 0.8103289008140564, 0.8170651197433472, 0.8170651197433472, 0.8272355198860168, 0.8293488025665283, 0.826310932636261, 0.8257825970649719, 0.8379341959953308, 0.8347642421722412, 0.8329150676727295, 0.8444063067436218, 0.8366134166717529, 0.8466516733169556, 0.8558974862098694, 0.8479725122451782, 0.8516708612442017, 0.8594637513160706, 0.8525954484939575, 0.8521991968154907, 0.8640866279602051, 0.8626337051391602, 0.8626337051391602, 0.8661999702453613], "val_loss": [1.7516322817121233, 0.752000093460083, 0.6127375875200544, 0.6001568862370082, 0.5455421549933297, 0.5188422203063965, 0.5116529294422695, 0.5224133900233677, 0.5053843600409371, 0.47904525484357563, 0.49145705359322683, 0.48394601685660227, 0.4724946362631662, 0.4534703663417271, 0.42170463289533344, 0.4373834303447178, 0.4113391041755676, 0.41955976826804026, 0.41011920145579744, 0.41133517026901245, 0.39094037669045584, 0.38976337228502544, 0.3867925575801304, 0.4289941276822771, 0.3781392914908273, 0.37476262024470736, 0.36902631180627005, 0.37279923473085674, 0.3618508151599339, 0.36643512759889874, 0.3722634826387678, 0.37094087260110037, 0.35757396050861906, 0.3581023727144514, 0.36063882282802034, 0.33971015896115986, 0.35118603706359863, 0.3439089485577175, 0.3399119121687753, 0.3541381869997297, 0.3636593903814043], "val_accuracy": [0.22300000488758087, 0.6926666498184204, 0.7366666793823242, 0.7166666388511658, 0.7566666603088379, 0.7766666412353516, 0.7796666622161865, 0.7603333592414856, 0.7799999713897705, 0.7903333306312561, 0.7736666798591614, 0.7796666622161865, 0.7940000295639038, 0.8113333582878113, 0.8166666626930237, 0.8186666369438171, 0.8286666870117188, 0.8220000267028809, 0.8240000009536743, 0.8326666951179504, 0.8393333554267883, 0.8356666564941406, 0.8416666388511658, 0.8203333616256714, 0.8460000157356262, 0.8356666564941406, 0.8500000238418579, 0.8456666469573975, 0.8486666679382324, 0.8536666631698608, 0.8426666855812073, 0.8363333344459534, 0.8523333072662354, 0.8553333282470703, 0.8486666679382324, 0.8600000143051147, 0.8536666631698608, 0.859333336353302, 0.8573333621025085, 0.8476666808128357, 0.8420000076293945]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 8, 4, 2, 0, 2, 9, 8, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 72, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8259999752044678, "mapping_values": [1, 4, 4, 2, 2, 1, 17, 17, 11, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), beta))), tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.968747566845659, 1.5633756259901335, 0.9968720948407993, 0.8231743213570176, 0.7672997498477628, 0.7119710584279489, 0.7168976137225874, 0.6700997107127528, 0.6533180829587787, 0.6080281130862258, 0.6115968799814651, 0.5928411991400033, 0.572303094395935, 0.5924026479794758, 0.5349277503234426, 0.5408294908185723, 0.541005632101411, 0.5116575304952674, 0.5079256219949547, 0.4928645284743341, 0.4889407467021761, 0.46218166653947146, 0.46516848088349994, 0.4763008816571929, 0.4516202292469404, 0.4356540095859657, 0.4440244238894015, 0.446059468722756, 0.4270785353195083, 0.43654293650098214, 0.4217984664945586, 0.39563197385224025, 0.39644268275944783, 0.3952357519642867, 0.3833864323805667, 0.38612243414649466, 0.37943879705945405, 0.3717952351119178], "accuracy": [0.34367984533309937, 0.4628186523914337, 0.6283186078071594, 0.6884163022041321, 0.7049266695976257, 0.7334566116333008, 0.7210407853126526, 0.7471932172775269, 0.7490423917770386, 0.7746664881706238, 0.7695152759552002, 0.7802139520645142, 0.7913089394569397, 0.7733456492424011, 0.7987055778503418, 0.8004226684570312, 0.7979130744934082, 0.8152159452438354, 0.81112140417099, 0.8169330358505249, 0.8211596608161926, 0.8296129703521729, 0.8286884427070618, 0.8239334225654602, 0.8278959393501282, 0.8403117060661316, 0.8362171649932861, 0.8318583965301514, 0.8424250483512878, 0.8389908671379089, 0.8487650156021118, 0.8581429123878479, 0.8506141901016235, 0.8558974862098694, 0.8602562546730042, 0.8536521196365356, 0.8570862412452698, 0.8602562546730042], "val_loss": [1.7514841897147042, 0.737413934298924, 0.6124411821365356, 0.5942577123641968, 0.5611317157745361, 0.5157121419906616, 0.5206496034349714, 0.5179641417094639, 0.48303299290793283, 0.4795833144869123, 0.5029173919132778, 0.46308239868709017, 0.47146531513759066, 0.44794394288744244, 0.42059055396488737, 0.4460691383906773, 0.40964079754693167, 0.42044281108038767, 0.40844649927956717, 0.40147525923592703, 0.391622713633946, 0.390057419027601, 0.3846767118998936, 0.4176941343716213, 0.3725198081561497, 0.37626713514328003, 0.3709614191736494, 0.37337530510766165, 0.3606641207422529, 0.36871092660086496, 0.3583318931715829, 0.3667625870023455, 0.3547044736998422, 0.35623799903052195, 0.36814170224326, 0.3429792267935617, 0.3505914977618626, 0.3448362180164882], "val_accuracy": [0.22366666793823242, 0.6933333277702332, 0.7413333058357239, 0.7260000109672546, 0.7493333220481873, 0.7786666750907898, 0.7699999809265137, 0.7583333253860474, 0.7886666655540466, 0.7896666526794434, 0.7673333287239075, 0.7929999828338623, 0.7963333129882812, 0.8053333163261414, 0.8136666417121887, 0.8143333196640015, 0.8270000219345093, 0.8216666579246521, 0.8226666450500488, 0.8386666774749756, 0.8383333086967468, 0.8309999704360962, 0.8423333168029785, 0.8256666660308838, 0.8460000157356262, 0.8346666693687439, 0.8473333120346069, 0.8426666855812073, 0.8476666808128357, 0.8523333072662354, 0.8510000109672546, 0.8386666774749756, 0.8586666584014893, 0.8560000061988831, 0.8433333039283752, 0.8526666760444641, 0.8569999933242798, 0.8519999980926514]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 0, 4, 2, 0, 0, 9, 2, 8, 0, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8259999752044678, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 9, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(alpha))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.math.sqrt(grad), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9690975174534164, 1.5611685419504622, 0.98718765738177, 0.8519331019442111, 0.7637684702589811, 0.7202390167990601, 0.7275481531648682, 0.6764187286668812, 0.6537147866201092, 0.6097306062626943, 0.6088969902339755, 0.5912038420390113, 0.582226388364058, 0.575583571314481, 0.5361826706634867, 0.5463533523123356, 0.5498266622233211, 0.5102346811422409, 0.5103725592505269, 0.49207885320302186, 0.49189222401017607, 0.4666863321045591, 0.4659975728598474, 0.47499363237147824, 0.45414069000488383, 0.4387621491332615, 0.45059483673011685, 0.4413674643262975, 0.42847736085552374, 0.4405317803958719, 0.42337638456996846, 0.39760663396473556, 0.40608447298885825, 0.3983259784499841, 0.3857308580945937, 0.39041760837428713, 0.3792772907677611, 0.37428663269702894, 0.3707240389330575, 0.369240450305615, 0.35784646983254365, 0.3697026571805813, 0.3414439036861591, 0.3430011540812713, 0.3347103926586264, 0.34563152387141866, 0.3269464235421673, 0.3214996313894461], "accuracy": [0.34328359365463257, 0.46413949131965637, 0.6346585750579834, 0.6831330060958862, 0.7084929347038269, 0.7271166443824768, 0.7187954187393188, 0.7424382567405701, 0.7512878179550171, 0.7777044177055359, 0.7689869403839111, 0.7781006693840027, 0.7833839654922485, 0.7836481332778931, 0.800290584564209, 0.7985734939575195, 0.7926297783851624, 0.8153480291366577, 0.8121780753135681, 0.816008448600769, 0.8162726163864136, 0.8289526104927063, 0.8289526104927063, 0.8281601071357727, 0.8253863453865051, 0.8364813327789307, 0.8338396549224854, 0.8342359066009521, 0.839519202709198, 0.8359529972076416, 0.8450667262077332, 0.8552370667457581, 0.8455950617790222, 0.8511425256729126, 0.8574824929237366, 0.8508783578872681, 0.8552370667457581, 0.8607845902442932, 0.8639545440673828, 0.8634262084960938, 0.8659358024597168, 0.8584070801734924, 0.871879518032074, 0.871879518032074, 0.8755778670310974, 0.8710870146751404, 0.8772949576377869, 0.8795403242111206], "val_loss": [1.751913002559117, 0.7315043381282261, 0.605648364339556, 0.6014871597290039, 0.5845721619469779, 0.5213086775371006, 0.521526609148298, 0.5222363812582833, 0.5004744529724121, 0.47884183270590647, 0.48350000381469727, 0.4690996749060495, 0.4583853653499058, 0.4474411351340158, 0.41943309136799406, 0.4388772589819772, 0.40656345231192453, 0.419903780732836, 0.41189271211624146, 0.4009860498564584, 0.3917628015790667, 0.4006935783794948, 0.3850510971886771, 0.42030590772628784, 0.38199509041649954, 0.37717040947505404, 0.36693516799381803, 0.3729414514132908, 0.365998523575919, 0.3660691635949271, 0.3611902594566345, 0.3689555951527187, 0.35416821922574726, 0.3491786633219038, 0.382972640650613, 0.34149010692323956, 0.3536293762070792, 0.3440411942345755, 0.3372003861836025, 0.35419381516320364, 0.3629117522920881, 0.3594220791544233, 0.33224174806049894, 0.3309051139014108, 0.3380372609410967, 0.3295237421989441, 0.3276321462222508, 0.33131613050188335], "val_accuracy": [0.22433333098888397, 0.6909999847412109, 0.7423333525657654, 0.7170000076293945, 0.734000027179718, 0.7743333578109741, 0.777999997138977, 0.7573333382606506, 0.784333348274231, 0.7879999876022339, 0.7806666493415833, 0.7876666784286499, 0.8076666593551636, 0.8113333582878113, 0.8176666498184204, 0.8176666498184204, 0.8330000042915344, 0.815666675567627, 0.8216666579246521, 0.8383333086967468, 0.8326666951179504, 0.8349999785423279, 0.8403333425521851, 0.8246666789054871, 0.840666651725769, 0.8420000076293945, 0.8456666469573975, 0.8479999899864197, 0.8479999899864197, 0.8556666374206543, 0.847000002861023, 0.8370000123977661, 0.8550000190734863, 0.8603333234786987, 0.8383333086967468, 0.859333336353302, 0.8550000190734863, 0.8576666712760925, 0.8616666793823242, 0.8500000238418579, 0.8413333296775818, 0.8423333168029785, 0.8686666488647461, 0.8636666536331177, 0.8643333315849304, 0.8659999966621399, 0.8676666617393494, 0.859666645526886]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 0, 4, 2, 0, 1, 9, 8, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8254285454750061, "mapping_values": [1, 4, 4, 2, 2, 1, 17, 17, 11, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(grad, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.969060351709727, 1.5620728137706958, 0.9863205306313655, 0.8235372276259546, 0.7599992526835612, 0.7398135865589631, 0.7007215864795971, 0.7037439025577348, 0.6429304085576445, 0.6100426887429826, 0.6013241857742951, 0.6028000485816762, 0.5850554060989509, 0.5779466337342666, 0.5414901603608162, 0.5424607026027477, 0.5468869571672564, 0.5100691052176587, 0.5166878690336674, 0.491001683364943, 0.486818142224454, 0.4714533818821472, 0.4660785575985924, 0.4720460556485886, 0.45422088978249936, 0.4365627192991159, 0.446904553394465, 0.43850323942831526, 0.4262787482411303, 0.43192878058479134, 0.42214895485886933, 0.3968807249265403, 0.3982250956008305, 0.39396412039807666, 0.3824777651173233, 0.38626112580582794, 0.3817602845112787, 0.37203455545631114, 0.3677726122783774, 0.3707140750455787, 0.3576184489377155, 0.36578753435490485, 0.3413331972892967, 0.34197120093131, 0.3358893857624521, 0.34321712826410256, 0.3252860990576441, 0.3211939618997192], "accuracy": [0.3431515097618103, 0.4640074074268341, 0.6320168972015381, 0.6896050572395325, 0.7143045663833618, 0.7217012047767639, 0.7357020378112793, 0.7321357727050781, 0.752740740776062, 0.7759873270988464, 0.774798572063446, 0.778761088848114, 0.7845727205276489, 0.7839123010635376, 0.7973847389221191, 0.7997622489929199, 0.7952714562416077, 0.8185180425643921, 0.8084797263145447, 0.819970965385437, 0.8197067975997925, 0.8273676037788391, 0.8297450542449951, 0.8286884427070618, 0.8267071843147278, 0.8409721255302429, 0.8348963260650635, 0.8327829837799072, 0.8405758738517761, 0.8376700282096863, 0.8465195894241333, 0.8576145768165588, 0.8520671129226685, 0.8574824929237366, 0.8625016212463379, 0.8529917001724243, 0.8557654023170471, 0.8634262084960938, 0.8661999702453613, 0.8605204224586487, 0.8658037185668945, 0.8615770936012268, 0.8713511824607849, 0.871879518032074, 0.8747853636741638, 0.8730682730674744, 0.876370370388031, 0.8784837126731873], "val_loss": [1.7520014217921667, 0.733141473361424, 0.6267838137490409, 0.627525976725987, 0.5945849759238107, 0.5275818279811314, 0.556583183152335, 0.5111093010221209, 0.4987126418522426, 0.4717080933707101, 0.5285778215953282, 0.463010447365897, 0.4762793779373169, 0.4459547826222011, 0.4198205726487296, 0.44290595395224436, 0.4076070189476013, 0.4219914334160941, 0.4127484815461295, 0.4027507134846279, 0.3877418637275696, 0.39066208260399954, 0.38412201404571533, 0.4207905871527536, 0.3727929847581046, 0.39601193155561176, 0.3669961520603725, 0.37108953510011944, 0.36917783532823834, 0.3655602250780378, 0.3666108250617981, 0.362028888293675, 0.3559122681617737, 0.3471119829586574, 0.3684834497315543, 0.3424411586352757, 0.3511807918548584, 0.3491757426943098, 0.33627245255878996, 0.36164569003241404, 0.3597522718565805, 0.35707554646900724, 0.336575448513031, 0.32830681119646343, 0.3412870764732361, 0.3328403575079782, 0.3274329730442592, 0.33325699397495817], "val_accuracy": [0.22433333098888397, 0.6926666498184204, 0.737333357334137, 0.7233333587646484, 0.731333315372467, 0.7696666717529297, 0.7730000019073486, 0.7666666507720947, 0.7839999794960022, 0.793666660785675, 0.7563333511352539, 0.7990000247955322, 0.7906666398048401, 0.812333345413208, 0.8159999847412109, 0.8169999718666077, 0.8306666612625122, 0.8153333067893982, 0.8226666450500488, 0.8320000171661377, 0.8410000205039978, 0.8333333134651184, 0.8416666388511658, 0.8253333568572998, 0.8473333120346069, 0.8276666402816772, 0.8493333458900452, 0.847000002861023, 0.8403333425521851, 0.8526666760444641, 0.8493333458900452, 0.8463333249092102, 0.8513333201408386, 0.8613333106040955, 0.8433333039283752, 0.8569999933242798, 0.859333336353302, 0.8519999980926514, 0.862333357334137, 0.843999981880188, 0.8443333506584167, 0.8429999947547913, 0.8673333525657654, 0.8633333444595337, 0.8610000014305115, 0.8633333444595337, 0.8673333525657654, 0.8603333234786987]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 0, 4, 2, 0, 2, 9, 8, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.824571430683136, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 9, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(grad, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))))), tf.math.sqrt(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.969057175146669, 1.5615850911715468, 0.9879813023593527, 0.8166014522514827, 0.8003679262554136, 0.7153965281048282, 0.6741541933153662, 0.7081319250687003, 0.6589457667373064, 0.6088305104677908, 0.6297385782660778, 0.5936031070336248, 0.5795784358413952, 0.5807774704933293, 0.5439472209823099, 0.5415478010124707, 0.5453401124630118, 0.5159689904266991, 0.5181800122305764, 0.49545136460963807, 0.49374260366742384, 0.4675677869975244, 0.4623611116130606, 0.4804338147658808, 0.45254254775701686, 0.43974260142088534, 0.45277251067603697, 0.4396147735287973, 0.4314699191395885, 0.43129992579125837, 0.424030315161948, 0.39599104275824354, 0.4067927199017181, 0.39696389204475463, 0.3840867615237354, 0.38576472033095194, 0.387805765201198, 0.37062187558781784, 0.3738465764700162], "accuracy": [0.34328359365463257, 0.4637432396411896, 0.6336019039154053, 0.6977941989898682, 0.6959450244903564, 0.7339849472045898, 0.7448157668113708, 0.7353057861328125, 0.748249888420105, 0.7766477465629578, 0.759080708026886, 0.7795535326004028, 0.7833839654922485, 0.7840443849563599, 0.7957997918128967, 0.7998943328857422, 0.7957997918128967, 0.8138951063156128, 0.8090080618858337, 0.8150838613510132, 0.8195747137069702, 0.8272355198860168, 0.8285563588142395, 0.8261788487434387, 0.8269713521003723, 0.8411042094230652, 0.8337075710296631, 0.8341038227081299, 0.8397833704948425, 0.839519202709198, 0.8469158411026001, 0.8582749962806702, 0.8475762605667114, 0.8553691506385803, 0.8599920868873596, 0.8551049828529358, 0.8521991968154907, 0.8625016212463379, 0.8634262084960938], "val_loss": [1.7519927706037248, 0.7327959196908134, 0.6192837272371564, 0.62404807976314, 0.5460454566138131, 0.5272589921951294, 0.6060895579201835, 0.5086221354348319, 0.4989879642214094, 0.48211601802280973, 0.4963853188923427, 0.46056214400700163, 0.4584075553076608, 0.4475487300327846, 0.41929645197732107, 0.4398574488503592, 0.4103787967136928, 0.4207755923271179, 0.407724278313773, 0.4041343927383423, 0.40466924224581036, 0.384351236479623, 0.38362463882991243, 0.41021496057510376, 0.36996300731386456, 0.38509897674833027, 0.3675175053732736, 0.3712091105324881, 0.35817297867366243, 0.36769120182309833, 0.3630788241113935, 0.36620886836733135, 0.36171997444970266, 0.34529298543930054, 0.36450622762952534, 0.3452567883900234, 0.3543000817298889, 0.3388950654438564, 0.3413341896874564], "val_accuracy": [0.22433333098888397, 0.6896666884422302, 0.737333357334137, 0.7073333263397217, 0.7596666812896729, 0.7696666717529297, 0.722000002861023, 0.7689999938011169, 0.7820000052452087, 0.7883333563804626, 0.7703333497047424, 0.7963333129882812, 0.8063333630561829, 0.812333345413208, 0.8230000138282776, 0.8169999718666077, 0.8289999961853027, 0.8196666836738586, 0.8246666789054871, 0.8360000252723694, 0.8259999752044678, 0.8386666774749756, 0.8396666646003723, 0.8349999785423279, 0.8483333587646484, 0.8336666822433472, 0.8486666679382324, 0.8450000286102295, 0.8526666760444641, 0.8503333330154419, 0.8473333120346069, 0.8399999737739563, 0.8510000109672546, 0.8619999885559082, 0.8483333587646484, 0.8536666631698608, 0.8536666631698608, 0.8576666712760925, 0.8566666841506958]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [19, 66, 89, 50, 85, 46], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 0, 4, 4, 0, 5, 9, 8, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.698285698890686, "mapping_values": [1, 4, 4, 2, 2, 1, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)))), tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.square(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.297445719409943, 2.263801362709425, 2.195043637626254, 2.0624872141856843, 1.7957010955197101, 1.4935631575192034, 1.3966132408875704, 1.374357096570405, 1.1854452908298894, 0.9644273012667882, 0.9112511351989985, 0.9159349280577672, 0.8784620680860666, 0.8274868298688538, 0.8242865282436482, 0.8436933281462284, 0.8343634048803781, 0.7931905893633284, 0.7587799789914681, 0.7500651293049052, 0.7530141568234284, 0.7488507712285721, 0.7163926562959366, 0.700834417489573, 0.7147606716589322, 0.6998218599012609, 0.6988644073148367, 0.6792521976508232, 0.6505889560190316, 0.6308801874366844, 0.652491499057866, 0.6512861198768671, 0.6378966515263578, 0.6255439184975111, 0.6075529052581077, 0.613250759496287, 0.6206578220657905, 0.6119936104022973, 0.6017584628306832, 0.582509500735377, 0.5829002084418405, 0.5758617976558617, 0.5754805645843806, 0.5705869349317307], "accuracy": [0.10276053100824356, 0.1880861222743988, 0.3203011453151703, 0.3895126283168793, 0.44089287519454956, 0.488971084356308, 0.5296525955200195, 0.564258337020874, 0.6186765432357788, 0.6468101739883423, 0.6469422578811646, 0.6740192770957947, 0.6783780455589294, 0.685510516166687, 0.6915863156318665, 0.6736230254173279, 0.6869634389877319, 0.6984546184539795, 0.7049266695976257, 0.7084929347038269, 0.7199841737747192, 0.7210407853126526, 0.7306828498840332, 0.733588695526123, 0.739400327205658, 0.7349095344543457, 0.735569953918457, 0.7432307600975037, 0.7474573850631714, 0.7637035846710205, 0.7627789974212646, 0.761590301990509, 0.7622507214546204, 0.7560427784919739, 0.763967752456665, 0.7577598690986633, 0.7606657147407532, 0.7753269076347351, 0.7740060687065125, 0.7800818681716919, 0.7769119143486023, 0.7788931727409363, 0.7817989587783813, 0.787082314491272], "val_loss": [1.9530010904584612, 1.9055113111223494, 1.8171497753688268, 1.625241449901036, 1.2796894482203893, 0.964766263961792, 0.8057570116860526, 0.7422658034733364, 0.7066798039845058, 0.6720812150410244, 0.6973951203482491, 0.6952369724001203, 0.629555480820792, 0.613368000302996, 0.5940314531326294, 0.6086338588169643, 0.5961427348000663, 0.5766353607177734, 0.5693162509373256, 0.5778807061059135, 0.5779727356774467, 0.5584492002214704, 0.5430030141557965, 0.5454985073634556, 0.5380957296916417, 0.5170034851346698, 0.5024368422372001, 0.49290006501334055, 0.47709684712546213, 0.49244230134146555, 0.49885412624904085, 0.48441432203565327, 0.47475292001451763, 0.4700017145701817, 0.47023846421922955, 0.47137311526707243, 0.4707046406609671, 0.4726146289280483, 0.46261952604566303, 0.4588087626865932, 0.46146999086652485, 0.4524819680622646, 0.45072174072265625, 0.44225999287196566], "val_accuracy": [0.19866666197776794, 0.4086666703224182, 0.4386666715145111, 0.49133333563804626, 0.5583333373069763, 0.6486666798591614, 0.6756666898727417, 0.703000009059906, 0.7096666693687439, 0.703000009059906, 0.7106666564941406, 0.7350000143051147, 0.7383333444595337, 0.7333333492279053, 0.7333333492279053, 0.7253333330154419, 0.7326666712760925, 0.7423333525657654, 0.7486666440963745, 0.7596666812896729, 0.7716666460037231, 0.7673333287239075, 0.7616666555404663, 0.7609999775886536, 0.7663333415985107, 0.7723333239555359, 0.781333327293396, 0.7866666913032532, 0.7910000085830688, 0.7866666913032532, 0.7866666913032532, 0.7913333177566528, 0.7933333516120911, 0.8003333210945129, 0.8036666512489319, 0.8006666898727417, 0.800000011920929, 0.8043333292007446, 0.8140000104904175, 0.8086666464805603, 0.8053333163261414, 0.8046666383743286, 0.8053333163261414, 0.8113333582878113]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 0, 4, 1, 4, 2, 9, 5, 4, 1, 4, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 3, 1, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [90, 40, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.6654285788536072, "mapping_values": [1, 4, 4, 2, 2, 1, 21, 21, 13, 8, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.subtract(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))))), grad))))), tf.math.add(beta, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.055692839757909, 1.3972060202355587, 1.2230100773423498, 1.1054405868171528, NaN, NaN, NaN, NaN], "accuracy": [0.3066965937614441, 0.5659754276275635, 0.5827499628067017, 0.5935807824134827, 0.16602826118469238, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [0.9564871106828962, 1.045950140271868, 0.7453275918960571, 0.7337072236197335, NaN, NaN, NaN, NaN], "val_accuracy": [0.6483333110809326, 0.5433333516120911, 0.6893333196640015, 0.6596666574478149, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 3, 4, 2, 1, 2, 3, 8, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.4165714383125305, "mapping_values": [1, 4, 4, 2, 2, 1, 24, 24, 15, 9, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(alpha, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad)))))))), tf.math.add(beta, grad)))), grad)), tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, grad))))))), tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3067544815074563, 3.1008121544391156, 6.643668276774585, 12.682428479147404, 1.1844261335796034e+31, NaN], "accuracy": [0.33641526103019714, 0.20433232188224792, 0.10896842926740646, 0.10091137140989304, 0.10606260597705841, 0.09998679161071777], "val_loss": [1.855966227395194, 2.263270309993199, 6.285178048270089, 296.1157749720982, NaN, NaN], "val_accuracy": [0.28066667914390564, 0.1080000028014183, 0.10366666316986084, 0.10400000214576721, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [39, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 3, 4, 2, 0, 2, 5, 8, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 45, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 10, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, tf.math.sqrt(grad))), tf.math.sqrt(grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026008884652636, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 0, 4, 2, 0, 2, 9, 8, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(grad)))))), tf.math.add(tf.math.add(beta, grad), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 0, 4, 2, 9, 2, 2, 8, 8, 2, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 11, 7, 3, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))))), grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026008884652636, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 0, 4, 2, 0, 2, 2, 8, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [40, 40, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 19, 19, 11, 8, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.negative(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.subtract(tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 0, 4, 2, 0, 2, 9, 8, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [79, 72, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 9, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), grad))), tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 0, 4, 2, 0, 2, 9, 8, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(grad)))))), tf.math.add(tf.math.add(beta, grad), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 0, 4, 2, 3, 2, 9, 8, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 2, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [25, 9, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.negative(beta), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.378982026295781, 27987131739695.066, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03513406589627266, 0.06036190688610077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.247373649052211, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007666666526347399, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 0, 4, 2, 0, 2, 9, 1, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [24, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 10, 6, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(grad, tf.math.sqrt(grad))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0738343670964241, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 0, 4, 2, 0, 0, 9, 8, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 10, 10, 7, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(grad)))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [18998708.40005671, 355328840.74072117, 1686038971.6972659, 4654540847.068023, 10034265503.361774, 18282458601.20988], "accuracy": [0.10170386731624603, 0.10355303436517715, 0.09945846349000931, 0.10077928751707077, 0.09668471664190292, 0.09919429570436478], "val_loss": [70129684.57142857, 560352274.2857143, 1890422345.142857, 4480106934.857142, 8749114806.857143, 15117228909.714285], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 9, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 0, 4, 2, 0, 2, 9, 5, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 95, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 13, 13, 9, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), grad)))))), tf.math.square(grad)))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [18998708.40005671, 355328840.74072117, 1686038971.6972659, 4654540847.068023, 10034265503.361774, 18282458601.20988], "accuracy": [0.10170386731624603, 0.10355303436517715, 0.09945846349000931, 0.10077928751707077, 0.09668471664190292, 0.09919429570436478], "val_loss": [70129684.57142857, 560352274.2857143, 1890422345.142857, 4480106934.857142, 8749114806.857143, 15117228909.714285], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 0, 4, 6, 2, 2, 5, 8, 8, 1, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [59, 72, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0], [4, 7, 3, 4], [0, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 5, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 1, 6, 6, 3, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302649720186539, 2.3023493174690346, 2.3015620965117463, 2.30384894085598, 2.303504073215183, 2.302180860115316], "accuracy": [0.08889182657003403, 0.08638224750757217, 0.09074098616838455, 0.08308017253875732, 0.08532558381557465, 0.09470347315073013], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]