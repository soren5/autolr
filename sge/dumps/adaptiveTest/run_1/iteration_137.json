[{"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 2, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 2, 0, 2, 2, 0, 2, 0, 0], [31, 32, 29, 49, 25], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1], [4, 7, 6, 5, 0, 7, 3, 9], [3, 3, 0, 3, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [3, 1, 2], [23, 52, 13]], "fitness": -0.7542856931686401, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.297762713081502, 2.289451866228, 2.2787467100679786, 2.2676143711111756, 2.2593084224352764, 2.246520722877584, 2.2343935501684116, 2.2211852835752333, 2.207319439079437, 2.190032267094981, 2.172241298514051, 2.1498013907860707, 2.127887671004197, 2.1001284408090672, 2.0733483965370745, 2.0411265163751655, 1.9998437119607266, 1.96195392814279, 1.9179830125546207, 1.8666359374803747, 1.8262613591516748, 1.7746940532522337, 1.7232827402266528, 1.6827501692650357, 1.6282165044995662, 1.5815229074688257, 1.5401785228514102, 1.5013388888301504, 1.4596830578748465, 1.4207753004131536, 1.3847536896638992, 1.3545307076413475, 1.3239018420155306, 1.2974041465440085, 1.2716637492227107, 1.2500567929997592, 1.224133723888415, 1.1901391629199027, 1.1960098897429852, 1.1737853808724854, 1.1464517233063438, 1.1372873593063213, 1.1185172847264857, 1.0993640553823725, 1.091286602651344, 1.0765067868622586, 1.0651362190283111, 1.0596996923369062, 1.0546323579016803, 1.0361081687387868, 1.0274583900199983, 1.013828442451299, 1.0132504615958782, 0.9978865342857564, 0.9745810749886326, 0.9794917810452912, 0.9826061216170336, 0.9660952846135729, 0.9563516446580788, 0.9575946681834231, 0.9504034190586671, 0.9366729791295716, 0.9200853245715896, 0.9168004322644033, 0.91521316364441, 0.910505149720635, 0.908086903595008, 0.9062207072418222, 0.8946581124283177, 0.8941102245417348, 0.8884717711226469, 0.8947808905804178, 0.8801667655715696, 0.8623640675665034, 0.8686824538657033, 0.8639560040780787, 0.861590450993461, 0.8613676510514081, 0.8535082276471145, 0.8470390497843004, 0.842269479519876, 0.8279188285650532, 0.8441028849575671, 0.8290011625106639, 0.8267860861580999, 0.8314608279362237, 0.8267815202029783, 0.825495427239919, 0.8257758815479694, 0.8101233821409002, 0.8098356664031173, 0.8120104220517795, 0.8069010154524846, 0.8144154474090008, 0.8047339172804785, 0.8004263907517456, 0.7968490932753309, 0.8007543888845936, 0.7856904167729661, 0.7872874328032334], "accuracy": [0.10157178342342377, 0.12957337498664856, 0.15110288560390472, 0.18570862710475922, 0.2044644057750702, 0.2292959988117218, 0.251750111579895, 0.2759212851524353, 0.2996962070465088, 0.31726324558258057, 0.33601900935173035, 0.3547748029232025, 0.3607185184955597, 0.3829084634780884, 0.3885880410671234, 0.3963809311389923, 0.4107779562473297, 0.428609162569046, 0.44287413358688354, 0.44789329171180725, 0.45449742674827576, 0.468630313873291, 0.47470611333847046, 0.4777440130710602, 0.49808478355407715, 0.5062739253044128, 0.5069343447685242, 0.5151234865188599, 0.5227842926979065, 0.5374455451965332, 0.5462950468063354, 0.5432571768760681, 0.5560691952705383, 0.5675604343414307, 0.5669000148773193, 0.5703341960906982, 0.5768062472343445, 0.59225994348526, 0.5830141305923462, 0.5905428528785706, 0.6007132530212402, 0.6000528335571289, 0.6071853041648865, 0.6135252714157104, 0.6166952848434448, 0.6222427487373352, 0.6256769299507141, 0.6296393871307373, 0.6301677227020264, 0.6357152462005615, 0.639809787273407, 0.6452252268791199, 0.637828528881073, 0.6503764390945435, 0.657508909702301, 0.6576409935951233, 0.6458855867385864, 0.6588297486305237, 0.6618676781654358, 0.6581693291664124, 0.6605468392372131, 0.6679434776306152, 0.6690001487731934, 0.6717738509178162, 0.6700568199157715, 0.6765288710594177, 0.6774534583091736, 0.6758684515953064, 0.6770572066307068, 0.6775855422019958, 0.6848500967025757, 0.67666095495224, 0.6844538450241089, 0.687887966632843, 0.6814159154891968, 0.6847180128097534, 0.6892088055610657, 0.6922467350959778, 0.6907938122749329, 0.6881521344184875, 0.698718786239624, 0.7059833407402039, 0.6900013089179993, 0.7014925479888916, 0.6992471218109131, 0.6993792057037354, 0.7003037929534912, 0.6984546184539795, 0.7003037929534912, 0.7083608508110046, 0.702681303024292, 0.7061154246330261, 0.7094175219535828, 0.7063795924186707, 0.7055870890617371, 0.7117950320243835, 0.7127195596694946, 0.7079645991325378, 0.7176066637039185, 0.7077004313468933], "val_loss": [1.9618635177612305, 1.9530204364231654, 1.9439575331551688, 1.9344641140529089, 1.9243717874799455, 1.9136810983930315, 1.901789733341762, 1.8885723522731237, 1.8739903313773019, 1.857464109148298, 1.838871887751988, 1.817880630493164, 1.794222695486886, 1.7677452904837472, 1.7383526393345423, 1.7058617046901159, 1.6694510323660714, 1.6298576423100062, 1.5872924668448312, 1.5409408978053503, 1.4934461116790771, 1.4439866883414132, 1.3939760753086634, 1.3451331002371651, 1.295774221420288, 1.247952665601458, 1.2029451983315604, 1.1611370699746268, 1.1224347863878523, 1.0858948571341378, 1.0525120326450892, 1.0216556617191859, 0.9928292206355503, 0.9667473861149379, 0.9428768498556954, 0.9211366517203194, 0.9007163047790527, 0.8814424787248883, 0.8645991086959839, 0.8490265778132847, 0.8342425652912685, 0.820820825440543, 0.8077661139624459, 0.7958798408508301, 0.7846020630427769, 0.77433180809021, 0.764390230178833, 0.7550672803606305, 0.7472407136644635, 0.7387732948575702, 0.7313236168452671, 0.7237442561558315, 0.7170954772404262, 0.7104581424168178, 0.7041683197021484, 0.6984244074140277, 0.694142256464277, 0.6879972900663104, 0.6823313065937587, 0.6781838451113019, 0.6739097152437482, 0.6686571836471558, 0.6636120932442802, 0.6590506860188076, 0.6550264528819493, 0.6512722458158221, 0.6473506689071655, 0.6437232324055263, 0.6407174893787929, 0.6376884153911045, 0.6348127807889666, 0.6313187735421317, 0.6279146500996181, 0.6253734486443656, 0.6223011357443673, 0.6194725036621094, 0.6158208506447929, 0.6137972899845668, 0.6114455120904105, 0.6093947206224714, 0.6061827625547137, 0.6046967336109706, 0.6022119692393711, 0.5990822315216064, 0.5971482821873256, 0.5949665137699672, 0.5933246271950858, 0.5906573363712856, 0.5899413313184466, 0.5880309854234967, 0.5855670486177716, 0.5834696803774152, 0.5818802288600377, 0.5804635967527118, 0.5785161256790161, 0.5770460878099714, 0.5756010668618339, 0.5742656503404889, 0.5725986957550049, 0.571150575365339], "val_accuracy": [0.10899999737739563, 0.19866666197776794, 0.28299999237060547, 0.3386666774749756, 0.3773333430290222, 0.3973333239555359, 0.4129999876022339, 0.4259999990463257, 0.4440000057220459, 0.4560000002384186, 0.4676666557788849, 0.47966668009757996, 0.48366665840148926, 0.49966666102409363, 0.512666642665863, 0.5249999761581421, 0.5360000133514404, 0.5410000085830688, 0.5513333082199097, 0.5556666851043701, 0.5640000104904175, 0.5709999799728394, 0.5836666822433472, 0.5883333086967468, 0.5973333120346069, 0.6046666502952576, 0.612666666507721, 0.6223333477973938, 0.6356666684150696, 0.6466666460037231, 0.6576666831970215, 0.6643333435058594, 0.6696666479110718, 0.6733333468437195, 0.6759999990463257, 0.6790000200271606, 0.6813333630561829, 0.6800000071525574, 0.6866666674613953, 0.690666675567627, 0.6923333406448364, 0.6946666836738586, 0.6976666450500488, 0.6980000138282776, 0.7009999752044678, 0.7023333311080933, 0.7053333520889282, 0.7056666612625122, 0.7083333134651184, 0.7089999914169312, 0.7099999785423279, 0.7123333215713501, 0.7173333168029785, 0.7196666598320007, 0.7203333377838135, 0.7229999899864197, 0.7226666808128357, 0.7263333201408386, 0.7283333539962769, 0.7260000109672546, 0.7256666421890259, 0.7300000190734863, 0.7323333621025085, 0.7333333492279053, 0.734333336353302, 0.737666666507721, 0.7369999885559082, 0.7390000224113464, 0.7390000224113464, 0.7393333315849304, 0.7386666536331177, 0.7423333525657654, 0.7436666488647461, 0.7419999837875366, 0.7433333396911621, 0.7436666488647461, 0.7459999918937683, 0.7446666955947876, 0.7456666827201843, 0.7450000047683716, 0.7506666779518127, 0.746666669845581, 0.749666690826416, 0.7519999742507935, 0.753000020980835, 0.7519999742507935, 0.7516666650772095, 0.7536666393280029, 0.7519999742507935, 0.7513333559036255, 0.7556666731834412, 0.7566666603088379, 0.7543333172798157, 0.7526666522026062, 0.7549999952316284, 0.7603333592414856, 0.7563333511352539, 0.7570000290870667, 0.7570000290870667, 0.7559999823570251]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.5960000157356262, "mapping_values": [1, 14, 14, 9, 5, 2, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(alpha)))))))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.square(grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2981376957820943, 2.2496563050536245, 2.106058806948548, 1.743787100711566, 1.3958803970957665, 1.3771208676963105, 1.0770637442753568, 0.8896777438937933, 0.8997614497143941, 0.8228795211533387, 0.8078066860254902, 0.8246097050133855, 0.8032826370000052, 0.7336185428728091, 0.7577552809817302, 0.7267726685833606, 0.6989948359447117, 0.6995119216844878, 0.6743886965518741, 0.6532925438682526, 0.6279020846685194, 0.6199882151018973, 0.6239735462315692, 0.6173071162638616, 0.6125350528625592, 0.5956042279042683, 0.5742333413130887, 0.5740115631289565, 0.5495197032625649, 0.5560195943612023, 0.5255830140319152, 0.5333729128103215, 0.5323191005886664, 0.5298471540948734, 0.5193555832239836], "accuracy": [0.10408136248588562, 0.22705058753490448, 0.36441686749458313, 0.44089287519454956, 0.5171047449111938, 0.5517104864120483, 0.6383568644523621, 0.6634526252746582, 0.6865671873092651, 0.6909258961677551, 0.6984546184539795, 0.6970016956329346, 0.7083608508110046, 0.7176066637039185, 0.7128516435623169, 0.7259278893470764, 0.7382115721702576, 0.7309470176696777, 0.7326641082763672, 0.746268630027771, 0.7564390301704407, 0.76106196641922, 0.7623828053474426, 0.7618544697761536, 0.7695152759552002, 0.7794214487075806, 0.7791573405265808, 0.7833839654922485, 0.791969358921051, 0.7948752045631409, 0.8005547523498535, 0.7981772422790527, 0.7976489067077637, 0.7964601516723633, 0.8017435073852539], "val_loss": [1.9505023956298828, 1.8673707417079382, 1.6352639538901192, 1.1362503596714564, 0.8151119436536517, 0.7253853593553815, 0.6483932733535767, 0.6868060997554234, 0.6448734828404018, 0.591199346951076, 0.5854366506849017, 0.5903617484228951, 0.5533886637006488, 0.5671690872737339, 0.5483203104564122, 0.5265990665980748, 0.5222065619059971, 0.5083601134163993, 0.4900496346609933, 0.48677698203495573, 0.4772724764687674, 0.47101080417633057, 0.46202315602983746, 0.4616169588906424, 0.45236258847372873, 0.4459024327141898, 0.44572571345738005, 0.4308436257498605, 0.42823274646486553, 0.4353348527635847, 0.43932301657540457, 0.4396700007574899, 0.43470289025987896, 0.4285397529602051, 0.42596541132245747], "val_accuracy": [0.22833333909511566, 0.4076666533946991, 0.47733333706855774, 0.5853333473205566, 0.6796666383743286, 0.7149999737739563, 0.7226666808128357, 0.7323333621025085, 0.7426666617393494, 0.7396666407585144, 0.75, 0.7556666731834412, 0.7559999823570251, 0.7519999742507935, 0.7666666507720947, 0.7636666893959045, 0.7680000066757202, 0.7799999713897705, 0.7826666831970215, 0.7753333449363708, 0.7853333353996277, 0.79666668176651, 0.7993333339691162, 0.8019999861717224, 0.800000011920929, 0.8043333292007446, 0.8050000071525574, 0.8153333067893982, 0.8213333487510681, 0.8233333230018616, 0.8209999799728394, 0.8173333406448364, 0.815666675567627, 0.8183333277702332, 0.8166666626930237]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 49, 25], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [3, 0, 6, 2, 3, 7, 3, 9], [2, 3, 3, 3, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 0, 1, 1, 1], [7, 7, 9, 0, 2, 7], [1, 3, 0], [23, 52, 13]], "fitness": -0.13114285469055176, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(grad, grad))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha)), sigma)", "other_info": {"loss": [2.3041910752644235, 2.3059647744594076, 2.3063350464170007, 2.315655219446257, 2.3944684860492504, 2.4251939267876628, 2.9321881522749393, 2.9526395596501818, 3.548283832640995], "accuracy": [0.09338264167308807, 0.1014397069811821, 0.10949676483869553, 0.10870426893234253, 0.1340641975402832, 0.11478008329868317, 0.11161009222269058, 0.10593052208423615, 0.10315678268671036], "val_loss": [1.9757919311523438, 1.9798620768955775, 1.9867443357195174, 1.9520131519862585, 2.107093402317592, 2.6645311628069197, 2.340244770050049, 2.6817688260759627, 2.7814705031258717], "val_accuracy": [0.09799999743700027, 0.10366666316986084, 0.09799999743700027, 0.1313333362340927, 0.1236666664481163, 0.11566666513681412, 0.10066666454076767, 0.0949999988079071, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [3, 2, 3, 6, 2, 0, 0, 1, 8, 6, 4, 8, 6, 3, 6, 5, 8], [3, 0, 0, 2, 2, 0, 2, 2, 0, 2, 3, 3], [31, 95, 29, 46, 25], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 7, 2, 5, 5, 7, 3, 9], [3, 3, 0, 3, 1], [98, 50, 53], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 1, 9, 1, 2], [0, 1, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 3, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad)), grad)), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.square(grad)), tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [3, 7, 2, 5, 3, 7, 3, 9], [2, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 1], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.multiply(grad, grad)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 8, 6, 2, 2, 0, 1, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 0, 2, 2, 0, 2], [31, 95, 29, 49, 25], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1], [3, 7, 6, 5, 9, 7, 3, 9, 3, 6, 7, 4, 6], [3, 3, 0, 3, 1], [98, 50, 53], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 2, 9, 1, 2], [3, 1, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [3.372655051369567, 2.4321095438334828, 2.3937323817707967, 2.3045606376661554, 2.3074895183345063, 2.3065186528450368, 2.306090522640653, 2.3269635617630655, 2.305844619525753], "accuracy": [0.10210011899471283, 0.09721305221319199, 0.0940430611371994, 0.09721305221319199, 0.10276053100824356, 0.1002509593963623, 0.10540219396352768, 0.10474177449941635, 0.10368511080741882], "val_loss": [2.0609062739780972, 2.1386595453534807, 1.9777874265398299, 1.9756311007908411, 1.976217474256243, 1.9746060371398926, 1.9826621328081404, 1.9774914469037737, 1.9735934393746513], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.10199999809265137, 0.10366666316986084, 0.10233332961797714, 0.10199999809265137, 0.09566666930913925, 0.09799999743700027, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 8, 6, 2, 2, 0, 1, 5, 8, 4, 4, 6, 3, 6], [3, 0, 0, 0, 2, 1, 2, 2, 0], [42, 32, 29, 49, 25], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 0, 2, 1], [98, 71], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 2, 9, 1, 2], [3, 1, 0], [60, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 8, 5, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.square(grad)), tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), beta)))), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 8, 6, 2, 2, 0, 1, 5, 8, 4, 4, 6, 3, 6], [3, 2, 1, 0, 2, 1, 2, 2, 0], [31, 95, 29, 49, 25], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [3, 7, 6, 2, 5, 7, 3, 9, 3, 6, 5, 4, 6], [0, 3, 0, 2, 1, 1, 3, 2, 2, 1], [98, 85, 73], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 19, 19, 11, 8, 3, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))))), tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.square(alpha))), grad))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [59.767404773436546, 740.6860620984627, 3098.0143953000143, 8211.873764302107, 17530.1549789596, 31582.753934627195], "accuracy": [0.1010434553027153, 0.10672302544116974, 0.10091137140989304, 0.10460969805717468, 0.09919429570436478, 0.10500594228506088], "val_loss": [172.98366001674108, 1084.717808314732, 3440.1256975446427, 7943.744419642857, 15295.45424107143, 26194.129464285714], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 0, 2, 2, 0, 2], [31, 79, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9, 3, 6, 7, 4, 6], [0, 3, 0, 2, 1, 1, 3, 2, 2, 1], [98, 90], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 9, 9, 1, 2], [3, 3, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 6, 5, 2, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, beta)), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [183.55802130683412, 2747.016632519441, 12142.394964131225, 32806.48034750198, 70647.06679372772, 127916.50591277573], "accuracy": [0.10091137140989304, 0.10685510188341141, 0.10117553919553757, 0.10460969805717468, 0.09919429570436478, 0.10487385839223862], "val_loss": [589.4053083147321, 4172.609375, 13650.59095982143, 31907.86160714286, 61829.87053571428, 106301.72767857143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 8, 6, 2, 2, 0, 1, 2, 6, 3, 3, 6, 3, 6, 9, 2], [3, 2, 1, 0, 1, 1, 2, 2, 0, 2, 3, 3, 0], [31, 32, 29, 32, 25, 68], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [3, 0, 2, 2, 3, 7, 3, 9], [2, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [9, 4, 8, 0, 2, 7], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 16, 13, 4, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(grad, tf.math.add(beta, grad)))))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024028413850934, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [8, 2, 8, 6, 5, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 0, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 7, 2, 5, 5, 7, 3, 9], [3, 3, 0, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [9, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 3, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024028413850934, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 71, 29, 49, 25], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 7, 6, 5, 9, 7, 3, 9], [2, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(beta, tf.math.square(tf.math.add(beta, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, 2.325160474951052, 2.3743471310768838, 2.4485687274250134, 2.53754142246793, 2.624574750909842], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9827677862984794, 2.015543052128383, 2.0718298639569963, 2.1451666014535085, 2.223315783909389, 2.291640417916434], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 4, 6, 2, 9, 0, 8, 5, 6, 9, 4, 6, 3, 6, 6, 0], [3, 0, 1, 0, 2, 0, 2, 2, 0, 2], [31, 95, 29, 49, 25], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1], [8, 7, 6, 2, 5, 7, 3, 9, 3, 6, 7, 4, 6], [3, 3, 0, 1, 1], [98, 50, 53], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [1, 2, 2, 1, 2], [3, 1, 2, 1, 0, 2], [94, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 11, 5, 6, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(sigma, tf.math.add(alpha, beta)), tf.math.subtract(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 8, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 0, 0, 2, 1, 2, 2, 0], [42, 32, 29, 49, 25], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [3, 7, 6, 5, 5, 3, 3, 9], [3, 3, 3, 0, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 2, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.square(grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [287702177.6482902, 5552282308.860653, 25902743064.54841, 71400356868.73386, 155370877394.89316, 283098601965.1322], "accuracy": [0.10011887550354004, 0.10659094154834747, 0.10117553919553757, 0.10460969805717468, 0.09919429570436478, 0.10474177449941635], "val_loss": [1092989220.5714285, 8739688448.0, 29491675136.0, 69900688237.71428, 136518177353.14285, 235895549366.85715], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 2, 1, 2, 2, 1, 2, 2, 0], [31, 13, 29, 49, 25, 84], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [3, 7, 6, 3, 1, 7, 3, 9], [2, 3, 3, 3, 1, 0, 0], [7, 49, 78], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 0, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(alpha)))))), grad)), tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(grad, grad)))), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, alpha), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09298639744520187, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 5, 6, 2, 5, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 2, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 8, 6, 5, 5, 7, 3, 9], [2, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 9, 4, 1, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [59.767404773436546, 740.6860620984627, 3098.0143953000143, 8211.873764302107, 17530.1549789596, 31582.753934627195], "accuracy": [0.1010434553027153, 0.10672302544116974, 0.10091137140989304, 0.10460969805717468, 0.09919429570436478, 0.10500594228506088], "val_loss": [172.98366001674108, 1084.717808314732, 3440.1256975446427, 7943.744419642857, 15295.45424107143, 26194.129464285714], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 1, 2, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 2, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [0, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 14, 9, 2, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 3, 1, 2, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(alpha)))))))), grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))), grad), grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [287702177.6482902, 5552282308.860653, 25902743064.54841, 71400356868.73386, 155370877394.89316, 283098601965.1322], "accuracy": [0.10011887550354004, 0.10659094154834747, 0.10117553919553757, 0.10460969805717468, 0.09919429570436478, 0.10474177449941635], "val_loss": [1092989220.5714285, 8739688448.0, 29491675136.0, 69900688237.71428, 136518177353.14285, 235895549366.85715], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 2, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 6, 8, 0, 7, 3, 9], [2, 0, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.041999999433755875, "mapping_values": [1, 14, 14, 9, 5, 1, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(alpha)))))))), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(beta, grad))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3018524656206343, 2.303244226408074, 2.3022881330138167, 2.3011500435482635, 2.3038269913569733, 2.301409660754281, 2.3034092657255254, 2.3043533089831363], "accuracy": [0.09206181764602661, 0.09259014576673508, 0.09087307006120682, 0.09311848133802414, 0.08875974267721176, 0.08691058307886124, 0.0820235088467598, 0.08334434032440186], "val_loss": [1.970926148550851, 1.9709209033421107, 1.9709698813302177, 1.971125602722168, 1.9714638165065221, 1.9720773696899414, 1.9731642178126745, 1.9742804254804338], "val_accuracy": [0.03766666725277901, 0.038333334028720856, 0.03866666555404663, 0.03799999877810478, 0.03766666725277901, 0.03700000047683716, 0.03400000184774399, 0.030666666105389595]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 3, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 16, 29, 49, 25], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [8, 7, 2, 5, 2, 7, 3, 9, 4, 0], [2, 3, 2, 1, 1, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [3, 3, 9, 1, 2], [3, 0, 1], [23, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 13, 13, 8, 5, 2, 16, 16, 10, 6, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.multiply(grad, tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), beta))), tf.math.add(beta, alpha)), tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301858137910707, 2.3032731473595476, 2.302311516929186, 2.3011045401138226, 2.3035902250176803, 2.3007638081898385], "accuracy": [0.09206181764602661, 0.09298639744520187, 0.09100515395402908, 0.09338264167308807, 0.08942015469074249, 0.08836349099874496], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 9, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [42, 32, 29, 49, 25], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [3, 3, 9, 1, 2], [3, 3, 2], [57, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 12, 12, 8, 4, 3, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.301858137910707, 2.3032731473595476, 2.302311516929186, 2.3011045401138226, 2.3035902250176803, 2.3007638081898385], "accuracy": [0.09206181764602661, 0.09298639744520187, 0.09100515395402908, 0.09338264167308807, 0.08942015469074249, 0.08836349099874496], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]