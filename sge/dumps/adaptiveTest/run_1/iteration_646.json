[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 2, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.831428587436676, "mapping_values": [1, 4, 4, 3, 1, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2158270907864956, 2.2694405610645454, 1.9548573417591775, 1.1105597799385796, 0.7904536622689463, 0.702497454146825, 0.6568397970137233, 0.6258592273754104, 0.595198709596937, 0.5859576599032037, 0.5652234733868363, 0.5603483118133585, 0.5788517769348855, 0.5132999123048159, 0.5043951439512656, 0.5063295526361862, 0.4824184888405271, 0.4894315944395329, 0.4663715887464915, 0.458956478538294, 0.4465321541076575, 0.4491306237729785, 0.4261083965327651, 0.4162228679565658, 0.40016909594533306, 0.4000100507877601, 0.41440929974137897, 0.3908166124670812, 0.3766737837187445, 0.38593352201151543, 0.3801319585020012, 0.3618667864599531, 0.3609643428435242, 0.358128162588284, 0.356139332008809, 0.343673323568588, 0.3184553293496264, 0.33852128322570707, 0.3209984973515848, 0.32133418563303145, 0.31277548663761984], "accuracy": [0.30563995242118835, 0.19178444147109985, 0.3335094451904297, 0.6147140264511108, 0.7029454708099365, 0.7383436560630798, 0.7578919529914856, 0.763967752456665, 0.7725531458854675, 0.7792893648147583, 0.7906485199928284, 0.7903843522071838, 0.7751948237419128, 0.8058380484580994, 0.8075551390647888, 0.8080834746360779, 0.8183859586715698, 0.816008448600769, 0.8273676037788391, 0.8285563588142395, 0.8293488025665283, 0.8301413059234619, 0.8396512866020203, 0.8426892161369324, 0.8518029451370239, 0.8573504090309143, 0.8436138033866882, 0.8545766472816467, 0.8553691506385803, 0.8594637513160706, 0.858671247959137, 0.8654074668884277, 0.8628978729248047, 0.8698983192443848, 0.8696341514587402, 0.8689737319946289, 0.8798044919967651, 0.870030403137207, 0.8798044919967651, 0.878351628780365, 0.8790120482444763], "val_loss": [1.9697326932634627, 1.7072234834943498, 0.9200962952205113, 0.6097838538033622, 0.5475246395383563, 0.5184495619365147, 0.5627262762614659, 0.4651268039430891, 0.4771601472582136, 0.4555810008730207, 0.43324256794793264, 0.508428829056876, 0.43998609270368305, 0.42030469860349384, 0.39450275897979736, 0.42757993936538696, 0.40294688088553293, 0.4179082087108067, 0.39315790789467947, 0.3846939035824367, 0.38382153851645334, 0.38952596698488506, 0.37260676281792776, 0.36049130984715055, 0.3691009453364781, 0.3720587832587106, 0.35501053503581453, 0.3647667169570923, 0.36028963327407837, 0.3813049963542393, 0.35411161184310913, 0.3389739394187927, 0.3464137315750122, 0.3642230544771467, 0.3547125203268869, 0.3401394656726292, 0.37705348219190327, 0.3430686593055725, 0.33503280367170063, 0.33360016345977783, 0.3486424684524536], "val_accuracy": [0.12466666847467422, 0.4326666593551636, 0.6513333320617676, 0.7296666502952576, 0.7509999871253967, 0.7746666669845581, 0.7250000238418579, 0.7846666574478149, 0.765333354473114, 0.8040000200271606, 0.8086666464805603, 0.7426666617393494, 0.8096666932106018, 0.8133333325386047, 0.828000009059906, 0.8076666593551636, 0.8253333568572998, 0.8193333148956299, 0.831333339214325, 0.8309999704360962, 0.8289999961853027, 0.8309999704360962, 0.843999981880188, 0.8526666760444641, 0.8446666598320007, 0.8450000286102295, 0.8526666760444641, 0.8413333296775818, 0.8529999852180481, 0.8336666822433472, 0.8553333282470703, 0.8653333187103271, 0.862666666507721, 0.8519999980926514, 0.8506666421890259, 0.8696666955947876, 0.8486666679382324, 0.8633333444595337, 0.8643333315849304, 0.8606666922569275, 0.8603333234786987]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 2, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 2, 3, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.8111428618431091, "mapping_values": [1, 4, 4, 2, 2, 1, 18, 18, 11, 7, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.sqrt(beta), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2175574724023304, 2.2718634649495155, 1.7423905694583908, 1.1540811300010037, 0.758718382106119, 0.6617306823491766, 0.6742594424586459, 0.6021620057293956, 0.603336485479927, 0.5625001153122747, 0.5554572014745043, 0.5358957829823063, 0.5532876283595622, 0.5106075094234611, 0.49824242669168384, 0.4936008635347923, 0.46376069772040385, 0.4635626175195439, 0.4638525656799772, 0.4419898102430226, 0.432843787547163, 0.4333734779333662, 0.4116728206423091, 0.4084234024161723, 0.4067181033378642, 0.3894884894552673, 0.4082409730125743, 0.37301505515367883], "accuracy": [0.3061682879924774, 0.19099193811416626, 0.4167217016220093, 0.6095628142356873, 0.7125874757766724, 0.7504953145980835, 0.7549861073493958, 0.7737419009208679, 0.7728173136711121, 0.7878747582435608, 0.7940827012062073, 0.8000264167785645, 0.7812706232070923, 0.8045172095298767, 0.8185180425643921, 0.809140145778656, 0.8290846943855286, 0.8289526104927063, 0.8264430165290833, 0.8345000743865967, 0.8366134166717529, 0.839519202709198, 0.8457271456718445, 0.8475762605667114, 0.847840428352356, 0.8590674996376038, 0.8490291833877563, 0.8598600029945374], "val_loss": [1.970005920955113, 1.737679890223912, 1.259702410016741, 0.6624471630368914, 0.5324128695896694, 0.5458440269742694, 0.5189890010016305, 0.4795780522482736, 0.4594510793685913, 0.48366946833474295, 0.4253320353371756, 0.5296621322631836, 0.4150158677782331, 0.4272117614746094, 0.4076614890779768, 0.41122123173304964, 0.4000701223100935, 0.4234256403786795, 0.384689850466592, 0.3793871913637434, 0.37629770381110056, 0.38254306997571674, 0.36706911666052683, 0.38353611741747173, 0.3767010484422956, 0.37146917411259245, 0.3648462550980704, 0.3846906168120248], "val_accuracy": [0.12099999934434891, 0.4463333189487457, 0.5210000276565552, 0.7099999785423279, 0.762666642665863, 0.7666666507720947, 0.7696666717529297, 0.7943333387374878, 0.8033333420753479, 0.7670000195503235, 0.8109999895095825, 0.7353333234786987, 0.8173333406448364, 0.8083333373069763, 0.8253333568572998, 0.8293333053588867, 0.8316666483879089, 0.8216666579246521, 0.840666651725769, 0.8413333296775818, 0.8433333039283752, 0.8376666903495789, 0.8510000109672546, 0.8413333296775818, 0.8463333249092102, 0.8503333330154419, 0.8500000238418579, 0.8273333311080933]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [29, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 2, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [2, 3, 3, 8, 3, 0, 1, 3, 2, 2, 5, 9], [1, 1, 0, 0, 0, 2, 2, 0], [96, 97, 13, 96, 41]], "fitness": -0.7994285821914673, "mapping_values": [1, 4, 4, 3, 1, 1, 2, 2, 1, 1, 0, 6, 4, 3, 1, 0, 20, 12, 8, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), beta), beta)), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2878519974805425, 2.2461842296775685, 2.191141359306298, 2.1086387289450577, 1.9842071141139817, 1.8190944278087473, 1.6283005191948845, 1.468223078549105, 1.3340730171288009, 1.2354709193092752, 1.166240546933538, 1.1004055244984676, 1.0533175765562681, 1.0147721898428217, 0.9903104072469904, 0.9567797346169277, 0.9373297073255047, 0.8965722119661764, 0.8884836935552985, 0.874514020287586, 0.8636495285439784, 0.8457608704537983, 0.8251411885774965, 0.8250236569410144, 0.8228600614610334, 0.798521697639301, 0.7839125054954239, 0.7847689957572107, 0.776754070872943, 0.7665055477151529, 0.7560029220918009, 0.746664462993646, 0.7416877315469846, 0.7376246558062672, 0.7277160302176531, 0.7251088834552087, 0.7174126230069061, 0.7143441002602905, 0.7160431670396241, 0.7045158035467645, 0.7029843623722234, 0.7042495499370813, 0.6784529133306566, 0.6853985772975574, 0.6803397503054736, 0.683007465590103, 0.6819113273945593, 0.6729321704092216, 0.6648839912268433, 0.6673871407482398, 0.6589629717821679, 0.6577140406894016, 0.6578236286272667, 0.6510284633259212, 0.6390099660863084, 0.6517399224733018, 0.6392009017206438, 0.6479556666719852, 0.6351861560176219, 0.6333058643507967, 0.6349604533978614, 0.6210255783310561, 0.6300671978665066, 0.6238618888450006, 0.6300980687503566, 0.6260306187797736, 0.6185487227873827, 0.6199072561228138, 0.6185319443436158, 0.6122035289075255, 0.606764258253198, 0.6166024504399429, 0.6104665715712377, 0.6048305186345483], "accuracy": [0.12970545887947083, 0.23074890673160553, 0.31581032276153564, 0.37062475085258484, 0.4147404432296753, 0.45383700728416443, 0.4876502454280853, 0.5271430611610413, 0.5602958798408508, 0.5748249888420105, 0.5934486985206604, 0.6077136397361755, 0.632941484451294, 0.6365077495574951, 0.6481310129165649, 0.6605468392372131, 0.6596222519874573, 0.6793025732040405, 0.6808875799179077, 0.6791704893112183, 0.6882842183113098, 0.6905296444892883, 0.6970016956329346, 0.7045304179191589, 0.7045304179191589, 0.7061154246330261, 0.7136441469192505, 0.7127195596694946, 0.7157574892044067, 0.7185312509536743, 0.7251353859901428, 0.7296261787414551, 0.7320036888122559, 0.7226257920265198, 0.7321357727050781, 0.7281733155250549, 0.7337207794189453, 0.7338528633117676, 0.7337207794189453, 0.7357020378112793, 0.7392682433128357, 0.7375511527061462, 0.7523444890975952, 0.7465327978134155, 0.7464007139205933, 0.7503632307052612, 0.7458723783493042, 0.7535332441329956, 0.7559106945991516, 0.7534011602401733, 0.7582882046699524, 0.7541936039924622, 0.7539294958114624, 0.7578919529914856, 0.7662131786346436, 0.7563069462776184, 0.767930269241333, 0.7633073329925537, 0.7662131786346436, 0.7642319202423096, 0.7671377658843994, 0.7736098170280457, 0.7622507214546204, 0.770439863204956, 0.7625148296356201, 0.7691190242767334, 0.7730814814567566, 0.7692511081695557, 0.7692511081695557, 0.7732135653495789, 0.7765156626701355, 0.7713643908500671, 0.7730814814567566, 0.7732135653495789], "val_loss": [1.9361004829406738, 1.8937299592154366, 1.8295867783682687, 1.729639938899449, 1.5835727282932825, 1.4024128913879395, 1.2183992181505476, 1.0690264361245292, 0.9582596506391253, 0.8794897624424526, 0.8207915510450091, 0.7762536321367536, 0.7423885379518781, 0.7163042511258807, 0.6922585793903896, 0.6719791037695748, 0.659455486706325, 0.6439470904214042, 0.6311703239168439, 0.6231191498892648, 0.6104110819952828, 0.6025970493044172, 0.5902466092790876, 0.5878954955509731, 0.5825774329049247, 0.5740975482123238, 0.5669714723314557, 0.5629112720489502, 0.5565721307482038, 0.557066832269941, 0.5526522397994995, 0.5453285660062518, 0.5404908657073975, 0.536395720073155, 0.5343080077852521, 0.5311751535960606, 0.5297953912190029, 0.5249522072928292, 0.5224547386169434, 0.5177537373134068, 0.5165725946426392, 0.513440728187561, 0.5086186102458409, 0.5102038724081857, 0.5046251671654838, 0.5053235122135707, 0.5054328101021903, 0.4997630630220686, 0.49782676356179373, 0.4959079197474888, 0.4950705085481916, 0.4932765279497419, 0.49144056865147184, 0.48873194626399447, 0.48828944138118197, 0.48828600134168354, 0.48406738894326345, 0.4830469914845058, 0.480400698525565, 0.4795330762863159, 0.4791090488433838, 0.4802315746034895, 0.475244402885437, 0.4740816184452602, 0.4768538304737636, 0.4731158699308123, 0.4735088518687657, 0.4699784517288208, 0.4678880827767508, 0.46978964124407085, 0.4682490655354091, 0.4665173121861049, 0.46402348790849957, 0.46382083211626324], "val_accuracy": [0.3226666748523712, 0.421999990940094, 0.48133334517478943, 0.5193333625793457, 0.5533333420753479, 0.5839999914169312, 0.6050000190734863, 0.6480000019073486, 0.6703333258628845, 0.6813333630561829, 0.6943333148956299, 0.7046666741371155, 0.7089999914169312, 0.7139999866485596, 0.7273333072662354, 0.7319999933242798, 0.7336666584014893, 0.7383333444595337, 0.7409999966621399, 0.7400000095367432, 0.7453333139419556, 0.7473333477973938, 0.7559999823570251, 0.7576666474342346, 0.7633333206176758, 0.7563333511352539, 0.7639999985694885, 0.7630000114440918, 0.7720000147819519, 0.7613333463668823, 0.7609999775886536, 0.762333333492279, 0.7716666460037231, 0.7733333110809326, 0.7739999890327454, 0.7753333449363708, 0.7763333320617676, 0.7736666798591614, 0.7799999713897705, 0.7799999713897705, 0.7799999713897705, 0.7806666493415833, 0.7826666831970215, 0.7796666622161865, 0.7879999876022339, 0.7806666493415833, 0.7803333401679993, 0.7846666574478149, 0.7946666479110718, 0.7886666655540466, 0.7960000038146973, 0.7923333048820496, 0.7946666479110718, 0.7996666431427002, 0.7946666479110718, 0.7986666560173035, 0.8013333082199097, 0.7993333339691162, 0.8029999732971191, 0.8026666641235352, 0.8013333082199097, 0.796999990940094, 0.8053333163261414, 0.8046666383743286, 0.8009999990463257, 0.8069999814033508, 0.8026666641235352, 0.8100000023841858, 0.8113333582878113, 0.8040000200271606, 0.8086666464805603, 0.809333324432373, 0.8069999814033508, 0.809333324432373]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 2, 3, 3, 0, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.7914285659790039, "mapping_values": [1, 4, 4, 2, 2, 1, 18, 18, 11, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2396250626099596, 2.091208902663086, 1.7803878754735576, 1.4380308728822075, 0.9573177792739087, 0.7992493472457042, 0.7652255068397195, 0.7062282172003285, 0.6729617307860349, 0.6607651676893581, 0.5999245703527405, 0.6020567288425195, 0.5983686206473368, 0.539552904477508, 0.5511938122127822, 0.528017998946231], "accuracy": [0.24712719023227692, 0.27103421092033386, 0.3983621597290039, 0.5103685259819031, 0.6387531161308289, 0.6983225345611572, 0.7153612375259399, 0.7309470176696777, 0.7405890822410583, 0.7448157668113708, 0.7741381525993347, 0.7717606425285339, 0.7680623531341553, 0.7944789528846741, 0.7936864495277405, 0.8038568496704102], "val_loss": [1.9599740164620536, 1.9864692687988281, 1.5389327321733748, 0.7280362333570208, 0.7037931510380336, 0.5724923780986241, 0.538507240159171, 0.5447226081575666, 0.5350804839815412, 0.49322727748325895, 0.4637017250061035, 0.5282425369535174, 0.4590491397040231, 0.4852163280759539, 0.4692342281341553, 0.45983593804495676], "val_accuracy": [0.12466666847467422, 0.22866666316986084, 0.42933332920074463, 0.7009999752044678, 0.687333345413208, 0.7400000095367432, 0.7636666893959045, 0.7369999885559082, 0.7300000190734863, 0.7683333158493042, 0.79666668176651, 0.731333315372467, 0.7903333306312561, 0.7733333110809326, 0.7870000004768372, 0.7893333435058594]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 2, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7900000214576721, "mapping_values": [1, 4, 4, 3, 1, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.23966131530276, 2.0970190583974646, 2.166644590594718, 1.4364558159006018, 1.0303048212782362, 0.8290282100608336, 0.7714694028501544, 0.712225783746697, 0.6757448072352225, 0.6678666395596887, 0.60360953617625, 0.6231882853074049, 0.593759757495276, 0.5579681090942668, 0.5473571275329514, 0.5295742688839068], "accuracy": [0.24712719023227692, 0.26561880111694336, 0.30141329765319824, 0.5182934999465942, 0.633469820022583, 0.6929071545600891, 0.713908314704895, 0.7351737022399902, 0.7428345084190369, 0.7481178045272827, 0.7763835787773132, 0.7680623531341553, 0.7717606425285339, 0.785629391670227, 0.7935543656349182, 0.7979130744934082], "val_loss": [1.9600142751421248, 2.1584493092128207, 1.382260765348162, 0.9576606409890311, 0.6589027983801705, 0.5898246424538749, 0.6427972657339913, 0.5103180408477783, 0.5479658331189837, 0.48942099298749653, 0.47525828225272043, 0.5079395430428642, 0.5394582237516131, 0.454355103628976, 0.46266378675188335, 0.4711831978389195], "val_accuracy": [0.12166666984558105, 0.32066667079925537, 0.5529999732971191, 0.6346666812896729, 0.7066666483879089, 0.7403333187103271, 0.6986666917800903, 0.7766666412353516, 0.7353333234786987, 0.7876666784286499, 0.7956666946411133, 0.7543333172798157, 0.7559999823570251, 0.7950000166893005, 0.7886666655540466, 0.7866666913032532]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [29, 66, 89, 50, 85, 46], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 5, 3, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 1, 3, 2, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.7717142701148987, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 2, 1, 0, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2900319434805727, 2.2549703809894104, 2.212339188554709, 2.153660065840264, 2.068877168130629, 1.9517180187638252, 1.7983614087592907, 1.6432866210462616, 1.4932388549215678, 1.371651946514227, 1.2840641932700998, 1.2048900335881498, 1.14664318024317, 1.0977665977455353, 1.066300936048183, 1.027224637702818, 1.000585312305456, 0.9552223994243477, 0.946036386578043, 0.9273610212358548, 0.912786349345192, 0.8922010537828862, 0.870279837325422, 0.8681648745827781, 0.8644234866687194, 0.8382842074988651, 0.8227687490032082, 0.8227316205763877, 0.8133816164813069, 0.8018215049637338, 0.7910644768204246, 0.7810594153725444, 0.774402065079336, 0.7686147997801598, 0.7593753177413316, 0.7572351128685634, 0.7487590674710957, 0.7443322296848607, 0.7453772688208002, 0.7332692629452379, 0.7318344699188608, 0.7337773382435416, 0.7065830723547492, 0.7134700496088733], "accuracy": [0.12376172095537186, 0.21291771531105042, 0.2930920720100403, 0.3455289900302887, 0.3879276216030121, 0.4263637661933899, 0.46030908823013306, 0.4897635579109192, 0.5280676484107971, 0.5460308790206909, 0.5608242154121399, 0.5783912539482117, 0.6063928008079529, 0.6144498586654663, 0.6222427487373352, 0.6346585750579834, 0.6399418711662292, 0.6577730774879456, 0.6630563735961914, 0.6646413803100586, 0.6754721999168396, 0.6775855422019958, 0.6820763349533081, 0.6923788189888, 0.6893408894538879, 0.6939638257026672, 0.700700044631958, 0.7024171352386475, 0.7030775547027588, 0.7094175219535828, 0.7119271159172058, 0.7194558382034302, 0.7239466309547424, 0.7121912837028503, 0.7232862114906311, 0.7195879220962524, 0.722757875919342, 0.7210407853126526, 0.7250033020973206, 0.7223616242408752, 0.7296261787414551, 0.7260599732398987, 0.7428345084190369, 0.7353057861328125], "val_loss": [1.9412202153887068, 1.90727322442191, 1.86029509135655, 1.7912436894008092, 1.6918990952628, 1.559286151613508, 1.401705367224557, 1.2449052333831787, 1.107724973133632, 1.0019653524671281, 0.9226805823189872, 0.8614157438278198, 0.8145562240055629, 0.7774239948817662, 0.7462886912482125, 0.7205091203962054, 0.7015683480671474, 0.6823473828179496, 0.6688805477959769, 0.6579511676515851, 0.6431630168642316, 0.6336279085704258, 0.6207798549107143, 0.6151324851172311, 0.6087083986827305, 0.5999138355255127, 0.5920939445495605, 0.5861999647957938, 0.57950907094138, 0.579140271459307, 0.5734034436089652, 0.5665052618299212, 0.5601410865783691, 0.5560661724635533, 0.5535342693328857, 0.5500708137239728, 0.5468417065484183, 0.5423754964556012, 0.5394814695630755, 0.5354927607945034, 0.5334005526133946, 0.5305396488734654, 0.525910632950919, 0.5263539041791644], "val_accuracy": [0.29499998688697815, 0.4073333442211151, 0.460999995470047, 0.49399998784065247, 0.5376666784286499, 0.5553333163261414, 0.5733333230018616, 0.6069999933242798, 0.6399999856948853, 0.6610000133514404, 0.6763333082199097, 0.6886666417121887, 0.6936666369438171, 0.6970000267028809, 0.7103333473205566, 0.7139999866485596, 0.7203333377838135, 0.7246666550636292, 0.7289999723434448, 0.7250000238418579, 0.7360000014305115, 0.7360000014305115, 0.7463333606719971, 0.7513333559036255, 0.7583333253860474, 0.75, 0.7599999904632568, 0.7570000290870667, 0.762333333492279, 0.7516666650772095, 0.7556666731834412, 0.7566666603088379, 0.7620000243186951, 0.7633333206176758, 0.7673333287239075, 0.768666684627533, 0.7710000276565552, 0.7666666507720947, 0.7746666669845581, 0.7730000019073486, 0.7746666669845581, 0.7720000147819519, 0.7746666669845581, 0.7720000147819519]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [29, 66, 89, 50, 85, 46], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 3, 3, 2, 5, 1, 2, 8, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 1, 3, 2, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0], [0, 7, 5, 3], [4, 1], [64], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [32, 97, 13, 96, 41]], "fitness": -0.7154285907745361, "mapping_values": [1, 4, 4, 3, 1, 1, 4, 4, 2, 2, 0, 5, 3, 3, 0, 0, 7, 4, 3, 3], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.square(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2915873132944267, 2.277009322202091, 2.273425503775995, 2.2721566628030483, 2.2709337511177248, 2.2674351934239754, 2.2620981636458004, 2.2551763163833507, 2.246887218179074, 2.2360910543628956, 2.220985115133398, 2.2072125798785818, 2.188880502429731, 2.166392618024889, 2.143955008953066, 2.1175082876477274, 2.0810294088324093, 2.0419587737549376, 1.9965631975206197, 1.9575708761128294, 1.8974754259397704, 1.8536242628771442, 1.7953028197238758, 1.7424890202081529, 1.6924188044628274, 1.6460612889971196, 1.6058397317181456, 1.5678895739453453, 1.524385884295932, 1.4980590929838298, 1.4670295033393803, 1.4385882507871406, 1.4131224600079353, 1.3824728631135605, 1.368280412986719, 1.341182332296476, 1.3187229733000405, 1.312043826751044, 1.2961683027685404, 1.2742509237763557, 1.2781743975111428, 1.2499458534433197, 1.2328731101407289, 1.2177205550404524, 1.212825158851305, 1.2211961174023827, 1.202740727461655, 1.1992137341089315, 1.1837592771134875, 1.17276516895662, 1.1777494392374865, 1.1625507804365238, 1.1693594826683313, 1.1556676700996638, 1.1522173279737202, 1.1432396137419945, 1.1353674665843303, 1.130874024185727, 1.129891951779144, 1.1274984117984583, 1.1140469202606702, 1.1151961891359232, 1.1013966326259461, 1.104552065565633, 1.1152844358948575, 1.1046847182494175, 1.0994030903233136, 1.1030763684010634, 1.0732765711372587, 1.0815954648303696, 1.0781037034674752, 1.0945484235758762, 1.0810983270119368, 1.070177648549602, 1.075073564529671, 1.0685346942331497, 1.077862918857161, 1.0722189792127437, 1.0563900241164041, 1.0513856003013946], "accuracy": [0.12561088800430298, 0.2102760523557663, 0.2513538599014282, 0.26297715306282043, 0.27077004313468933, 0.26482629776000977, 0.26839256286621094, 0.2723550498485565, 0.26720380783081055, 0.2814687490463257, 0.2860916554927826, 0.2801479399204254, 0.2856954038143158, 0.3059041202068329, 0.29863953590393066, 0.3047153651714325, 0.3140932619571686, 0.3195086419582367, 0.33707568049430847, 0.3427552580833435, 0.3617751896381378, 0.3773609697818756, 0.3945317566394806, 0.4029850661754608, 0.4301941692829132, 0.43587371706962585, 0.4364020526409149, 0.4453836977481842, 0.46453574299812317, 0.46030908823013306, 0.46413949131965637, 0.474970281124115, 0.4815744161605835, 0.48910316824913025, 0.49214106798171997, 0.505349338054657, 0.5001981258392334, 0.5083872675895691, 0.5074626803398132, 0.5156518220901489, 0.5056135058403015, 0.5274072289466858, 0.5276713967323303, 0.5350680351257324, 0.5400871634483337, 0.5367851257324219, 0.5378417372703552, 0.5410117506980896, 0.5498613119125366, 0.5567296147346497, 0.5575221180915833, 0.5514463186264038, 0.5535596609115601, 0.5525029897689819, 0.564258337020874, 0.559371292591095, 0.5653150081634521, 0.5717870593070984, 0.5683529376983643, 0.5721833109855652, 0.5711266398429871, 0.573107898235321, 0.5761458277702332, 0.577070415019989, 0.5675604343414307, 0.5720512270927429, 0.5781270861625671, 0.575089156627655, 0.5915995240211487, 0.5802403688430786, 0.5914674401283264, 0.5774666666984558, 0.5812970399856567, 0.5856558084487915, 0.5826178789138794, 0.5885615944862366, 0.5896182656288147, 0.5857878923416138, 0.5906749367713928, 0.5943732857704163], "val_loss": [1.9525846072605677, 1.9500138419015067, 1.949678693498884, 1.9487498828342982, 1.946258613041469, 1.9420061792646135, 1.9361213275364466, 1.9285713604518346, 1.919792992728097, 1.9086484227861678, 1.8950416019984655, 1.879377841949463, 1.860067640032087, 1.8376379013061523, 1.8118088585989816, 1.7816450936453683, 1.7448971612112862, 1.7027944496699743, 1.655714750289917, 1.6049225670950753, 1.54829968724932, 1.4909460885184151, 1.4296635219029017, 1.3703739302498954, 1.312776940209525, 1.2575748988560267, 1.2106448922838484, 1.16474563734872, 1.1247007846832275, 1.0884838104248047, 1.0536327702658517, 1.0252387864249093, 0.9969260692596436, 0.9674957139151437, 0.9484897681644985, 0.928788457598005, 0.9077318395887103, 0.8932588441031319, 0.8778583662850517, 0.862323488507952, 0.853482893535069, 0.8388711724962506, 0.8261501278196063, 0.8137012549809047, 0.8023232051304409, 0.7996798413140433, 0.7922396489552089, 0.7808863094874791, 0.7743544578552246, 0.7713274104254586, 0.7641450337001255, 0.7541887249265399, 0.7539232117789132, 0.7475686754499163, 0.7429011719567435, 0.7365444217409406, 0.7307493005480085, 0.7264524357659476, 0.7261601516178676, 0.7207578590938023, 0.7161439997809274, 0.7125234944479806, 0.7104381493159703, 0.7047469105039325, 0.7050970792770386, 0.6993446009499686, 0.6957995210375104, 0.6949140344347272, 0.6881631442478725, 0.6850319419588361, 0.6796778440475464, 0.681099499974932, 0.6755843162536621, 0.6725010360990252, 0.6708217518670219, 0.6672905342919486, 0.6691434553691319, 0.6641681705202375, 0.6615476437977382, 0.6586852584566388], "val_accuracy": [0.3016666769981384, 0.3606666624546051, 0.3636666536331177, 0.3583333194255829, 0.35766667127609253, 0.36633333563804626, 0.375, 0.38466668128967285, 0.38733333349227905, 0.38466668128967285, 0.3869999945163727, 0.39266666769981384, 0.3943333327770233, 0.3930000066757202, 0.3973333239555359, 0.41233333945274353, 0.4163333475589752, 0.42500001192092896, 0.43666666746139526, 0.4533333480358124, 0.4790000021457672, 0.5059999823570251, 0.5236666798591614, 0.5416666865348816, 0.5503333210945129, 0.5603333115577698, 0.5663333535194397, 0.5793333053588867, 0.5886666774749756, 0.6036666631698608, 0.6116666793823242, 0.6203333139419556, 0.628333330154419, 0.6340000033378601, 0.6443333625793457, 0.6473333239555359, 0.6566666960716248, 0.656000018119812, 0.6666666865348816, 0.6693333387374878, 0.6713333129882812, 0.6779999732971191, 0.6783333420753479, 0.6786666512489319, 0.6856666803359985, 0.6856666803359985, 0.6883333325386047, 0.6953333616256714, 0.6966666579246521, 0.6980000138282776, 0.7053333520889282, 0.70333331823349, 0.7046666741371155, 0.7049999833106995, 0.7103333473205566, 0.7046666741371155, 0.7126666903495789, 0.7136666774749756, 0.7163333296775818, 0.7200000286102295, 0.7213333249092102, 0.7160000205039978, 0.7239999771118164, 0.7250000238418579, 0.7206666469573975, 0.7223333120346069, 0.7269999980926514, 0.7276666760444641, 0.7286666631698608, 0.7319999933242798, 0.7319999933242798, 0.734000027179718, 0.7369999885559082, 0.734000027179718, 0.7400000095367432, 0.7383333444595337, 0.7350000143051147, 0.7386666536331177, 0.7363333106040955, 0.7356666922569275]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.5828571319580078, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2999337415464676, 2.19103964542464, 2.191226358694596, 1.7406358760912595, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2557125985622406, 0.20314356684684753, 0.24620261788368225, 0.3743230700492859, 0.15480121970176697, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8909775188991003, 1.9407245772225517, 1.6297013759613037, 0.9893928936549595, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.26766666769981384, 0.16433332860469818, 0.2800000011920929, 0.5986666679382324, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [13, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.4774285852909088, "mapping_values": [1, 4, 4, 3, 1, 1, 17, 17, 9, 8, 1, 6, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), grad)), tf.math.add(beta, grad)), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3027221800990945, 2.299745642986154, 2.2980838298419717, 2.2965518925971264, 2.2966046427156255, 2.2965562276836433, 2.2926527439815776, 2.2926460436983604, 2.289977410780897, 2.289441188470389, 2.2874401964452904, 2.2869324363249484, 2.285499050097301, 2.2855514807393127, 2.2835497952502686, 2.2833363241476077, 2.2812401774442583, 2.2779651465369977, 2.2780606519938176, 2.2779748782096303, 2.2754434114591464, 2.2747651511620472, 2.272916937705753, 2.270822379535861, 2.2697405414873537, 2.269913640587227, 2.2672846619605136, 2.2670302769889323, 2.2648145069519856, 2.262935276249412, 2.2613739493406206, 2.2597633691716426, 2.259668581143441, 2.2582115170316706, 2.2562548324117384, 2.2539677299355407, 2.252942617401518, 2.252251568062273, 2.251152630101704, 2.248473189746573, 2.247651766193951, 2.246884863374413, 2.244334270610565, 2.2434942827815503, 2.2405634152812097, 2.240341052560601, 2.2394829242614596, 2.237555392618901, 2.233706325131196, 2.2330537331401867, 2.230047391437505, 2.2290912862026206, 2.226869437893258, 2.2264880305819146, 2.2224379301606514, 2.2208220946743125, 2.219217116759359, 2.2173947018875406, 2.2157035148564175, 2.2128970227174127, 2.2123249131045117, 2.209684394968184, 2.2074154644216515, 2.2045027086716193, 2.2013369964145633, 2.202466000970234, 2.197865161944878, 2.199399031825652, 2.1951366558586365, 2.1919453226894894, 2.1884584319180562, 2.1883622598906296, 2.1854518754780488, 2.1838119504883493, 2.1794573325743025, 2.1794893848047345, 2.176649181078517, 2.172143715814498, 2.1697098944936966, 2.166078098855392, 2.164835775344127, 2.163388771041509, 2.1618402388432494, 2.1547240789587536, 2.1548875312858082, 2.148908277434003, 2.146702077552202, 2.142999648669959, 2.1413279630882456, 2.1384273468149084, 2.1389341660462917, 2.131393560848657, 2.1289560700987056, 2.123909642494523, 2.122989080994908, 2.120002239481994, 2.112815568601734, 2.107786224313841, 2.1070140513761593, 2.103358327563035], "accuracy": [0.09021265059709549, 0.09325055778026581, 0.09615638852119446, 0.10527011007070541, 0.10368511080741882, 0.10500594228506088, 0.11345925182104111, 0.11596883088350296, 0.12561088800430298, 0.12534672021865845, 0.1258750557899475, 0.12996962666511536, 0.1364416927099228, 0.13921542465686798, 0.1368379294872284, 0.14463083446025848, 0.14542332291603088, 0.14753665030002594, 0.1526878923177719, 0.15110288560390472, 0.1604807823896408, 0.16616034507751465, 0.16536785662174225, 0.17593449354171753, 0.17474573850631714, 0.17514199018478394, 0.17936864495277405, 0.1826707124710083, 0.18597279489040375, 0.19535067677497864, 0.20023775100708008, 0.1974640041589737, 0.2036719024181366, 0.2082948088645935, 0.20935148000717163, 0.21437062323093414, 0.21912561357021332, 0.2160876989364624, 0.22691850364208221, 0.22837141156196594, 0.22203142940998077, 0.23101307451725006, 0.23497556149959564, 0.23801347613334656, 0.24633470177650452, 0.24633470177650452, 0.24739135801792145, 0.24593845009803772, 0.2572975754737854, 0.25584468245506287, 0.25756174325942993, 0.2608638107776642, 0.272090882062912, 0.2719587981700897, 0.2759212851524353, 0.2798837721347809, 0.28886541724205017, 0.2937524616718292, 0.2817329168319702, 0.2954695522785187, 0.28926166892051697, 0.2950733006000519, 0.3003566265106201, 0.3061682879924774, 0.3093382716178894, 0.3015453815460205, 0.3078853487968445, 0.3043191134929657, 0.30643242597579956, 0.31118741631507874, 0.3167349100112915, 0.32281073927879333, 0.32162198424339294, 0.3152819871902466, 0.32743361592292786, 0.3261128067970276, 0.3217540681362152, 0.33086779713630676, 0.32822611927986145, 0.3381323516368866, 0.3361510932445526, 0.33324527740478516, 0.3323206901550293, 0.35028398036956787, 0.3407739996910095, 0.35768061876296997, 0.3497556447982788, 0.35464271903038025, 0.3568881154060364, 0.3583410382270813, 0.3520010709762573, 0.3645489513874054, 0.36243560910224915, 0.3715493381023407, 0.36402061581611633, 0.36243560910224915, 0.37445515394210815, 0.37670058012008667, 0.3778893053531647, 0.3765684962272644], "val_loss": [1.9697245870317732, 1.9685111727033342, 1.9672881535121374, 1.9660768508911133, 1.9648716790335519, 1.9636775425502233, 1.9624793188912528, 1.9612817764282227, 1.960090024130685, 1.9588875770568848, 1.9576915332249232, 1.9565083639962333, 1.9553095272609167, 1.9541055815560477, 1.9528959819248743, 1.9517060007367815, 1.9504958561488561, 1.9492901393345423, 1.9480767931256975, 1.946857520512172, 1.9456372942243303, 1.944399697440011, 1.943169457571847, 1.9419266836983817, 1.9406839098249162, 1.9394282613481795, 1.938169206891741, 1.936908790043422, 1.935633318764823, 1.934337888445173, 1.9330236571175712, 1.9317140579223633, 1.9303930146353585, 1.9290456090654646, 1.9276981353759766, 1.9263294083731515, 1.9249300275530135, 1.9235354832240514, 1.922135557447161, 1.9206908089773995, 1.919250556400844, 1.917792797088623, 1.9163149424961634, 1.9148225103105818, 1.9133126395089286, 1.9117967741830009, 1.9102562495640345, 1.9087021691458566, 1.9071051052638464, 1.9054938043866838, 1.9038543019975935, 1.902196271078927, 1.9005255017961775, 1.8988347053527832, 1.8971058981759208, 1.8953510011945451, 1.8935792786734444, 1.8917858260018485, 1.8899528639657157, 1.8880934715270996, 1.886214256286621, 1.8843003000531877, 1.8823435647147042, 1.8803582872663225, 1.878330980028425, 1.8763041496276855, 1.8742141042436873, 1.8721374784197127, 1.8700058119637626, 1.867814268384661, 1.8655932971409388, 1.863346985408238, 1.861081804547991, 1.8587852205548967, 1.8564130919320243, 1.8540291104997908, 1.8516173362731934, 1.849151543208531, 1.8466415405273438, 1.8440664155142648, 1.8414834567478724, 1.8388709340776717, 1.8362329346793038, 1.8334967068263464, 1.8307624544416154, 1.8279468672616142, 1.825084890638079, 1.8221917833600725, 1.8192804881504603, 1.816317353929792, 1.8133294922964913, 1.8102419035775321, 1.807145663670131, 1.8039695875985282, 1.80075318472726, 1.7975154604230608, 1.7941839354378837, 1.7907824516296387, 1.7873663902282715, 1.7838848658970423], "val_accuracy": [0.045666664838790894, 0.054666668176651, 0.06199999898672104, 0.07100000232458115, 0.07866666465997696, 0.08799999952316284, 0.10166666656732559, 0.11366666853427887, 0.12399999797344208, 0.13899999856948853, 0.1536666601896286, 0.16466666758060455, 0.1733333319425583, 0.18433333933353424, 0.1966666728258133, 0.20900000631809235, 0.2213333398103714, 0.234333336353302, 0.24433332681655884, 0.25600001215934753, 0.26600000262260437, 0.2759999930858612, 0.28333333134651184, 0.2913333475589752, 0.29766666889190674, 0.3086666762828827, 0.3140000104904175, 0.3240000009536743, 0.3336666524410248, 0.33799999952316284, 0.3449999988079071, 0.35233333706855774, 0.3569999933242798, 0.36266666650772095, 0.3686666786670685, 0.3720000088214874, 0.37599998712539673, 0.3786666691303253, 0.3816666603088379, 0.38466668128967285, 0.3889999985694885, 0.3916666805744171, 0.3933333456516266, 0.3930000066757202, 0.3970000147819519, 0.39766666293144226, 0.4009999930858612, 0.40400001406669617, 0.40400001406669617, 0.40700000524520874, 0.40833333134651184, 0.4099999964237213, 0.41200000047683716, 0.414000004529953, 0.41499999165534973, 0.4193333387374878, 0.4203333258628845, 0.42366665601730347, 0.42533332109451294, 0.4259999990463257, 0.42766666412353516, 0.4300000071525574, 0.4320000112056732, 0.43433332443237305, 0.43566668033599854, 0.43933331966400146, 0.4416666626930237, 0.4440000057220459, 0.4440000057220459, 0.44433334469795227, 0.4440000057220459, 0.4466666579246521, 0.44733333587646484, 0.4493333399295807, 0.45100000500679016, 0.4519999921321869, 0.45399999618530273, 0.45633333921432495, 0.4580000042915344, 0.4593333303928375, 0.460999995470047, 0.4633333384990692, 0.46399998664855957, 0.46566668152809143, 0.46700000762939453, 0.468666672706604, 0.47099998593330383, 0.4736666679382324, 0.47699999809265137, 0.47833332419395447, 0.4790000021457672, 0.48233333230018616, 0.48266667127609253, 0.4833333194255829, 0.48500001430511475, 0.4856666624546051, 0.4869999885559082, 0.4896666705608368, 0.492000013589859, 0.49433332681655884]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.23085714876651764, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 6, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.6020980174153188, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.26403382420539856, 0.11689341068267822, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [67.58241925920758, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.24300000071525574, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 6, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 5, 9, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07872143387794495, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(grad, tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [76, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 10, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [29, 66, 89, 50, 85, 46], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 1, 3, 3, 3, 2, 8, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 2, 3, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 3, 2, 3, 0, 1, 3, 2, 2, 5, 3, 7, 3], [1, 1, 0, 0, 0, 2, 2, 2, 2, 1, 1, 1], [96, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 17, 17, 10, 7, 1, 4, 2, 2, 0, 0, 26, 14, 12, 3], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), beta))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.sqrt(tf.math.multiply(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), beta), beta)), tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.multiply(beta, alpha)), alpha)))), alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 5, 3, 3, 2, 5, 1, 2, 8, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 2, 3, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021675404178437, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 0, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(alpha), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302214492974957, 2.763767703712231, 382.58995078926654, 99398.27056675967, 25667396.89255052, 6511293512.850615], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973898070199149, 10.699242728097099, 3229.2697405133927, 827877.0714285715, 211936530.2857143, 54255751753.14286], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [13, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 9, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0730418711900711, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [29, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 0, 2, 8, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0], [0, 7, 6, 4], [4, 1], [64], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 78, 13, 96, 41]], "fitness": -0.044857144355773926, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30324962882003, 2.3015649188007297, 2.3012277184696623, 2.300999785773333, 2.302319376838048, 2.303513424287241, 2.300899629626906, 2.302177393299446, 2.300738956005251, 2.3015861561301203, 2.3008571505593807, 2.3014309872977563, 2.301435277131665, 2.302790801066292, 2.3020892620023687, 2.3029043164629237, 2.302316694085813, 2.300146441402342, 2.301575945384467, 2.3027436727262556, 2.301572232214278, 2.3022241230575307, 2.301649259743107, 2.3008710152091068, 2.301015265944328], "accuracy": [0.08915598690509796, 0.08836349099874496, 0.08889182657003403, 0.0936468094587326, 0.08809932321310043, 0.08730682730674744, 0.09338264167308807, 0.09100515395402908, 0.09721305221319199, 0.09047681838274002, 0.0940430611371994, 0.09245806187391281, 0.09325055778026581, 0.09113723784685135, 0.09298639744520187, 0.0944393053650856, 0.09113723784685135, 0.09298639744520187, 0.08981640636920929, 0.08809932321310043, 0.08757099509239197, 0.0944393053650856, 0.08809932321310043, 0.0940430611371994, 0.09047681838274002], "val_loss": [1.9709125927516393, 1.9708867073059082, 1.970864977155413, 1.9708430426461356, 1.9708237648010254, 1.9707987649100167, 1.9707752636500768, 1.9707561901637487, 1.9707342556544714, 1.970717430114746, 1.9707005364554269, 1.970679555620466, 1.9706641605922155, 1.970639910016741, 1.970618656703404, 1.9705949510846819, 1.9705803734915597, 1.970559869493757, 1.9705352102007185, 1.9705157279968262, 1.9704960414341517, 1.970475128718785, 1.9704570089067732, 1.9704403196062361, 1.970423357827323], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.03966666758060455, 0.03966666758060455, 0.03999999910593033, 0.0403333343565464, 0.04066666588187218, 0.0403333343565464, 0.04066666588187218, 0.04100000113248825, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.0416666679084301, 0.04233333468437195, 0.04266666620969772, 0.0430000014603138, 0.0430000014603138, 0.043666668236255646, 0.044333335012197495, 0.043666668236255646, 0.043666668236255646, 0.04333333298563957, 0.0430000014603138, 0.04399999976158142]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303264058670741, 2.3016180814831975, 2.3013098887669146, 2.301110203838336, 2.302458830009504, 2.3037009951208938], "accuracy": [0.08902391046285629, 0.08809932321310043, 0.0882314071059227, 0.0936468094587326, 0.0878351628780365, 0.08677849918603897], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]