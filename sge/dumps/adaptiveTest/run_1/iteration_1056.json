[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 2, 0, 8, 1, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8371428847312927, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 7, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))))), alpha), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9764157066948582, 1.2617066454389831, 0.9071150653240404, 0.7976194760661163, 0.7439170439465959, 0.715614752313795, 0.6873488759304853, 0.632142244627951, 0.6312300713700609, 0.6266072709814526, 0.585126518715075, 0.5839331609509042, 0.5596009581363937, 0.5331621115249555, 0.5312592903416091, 0.5176706175526388, 0.5091998588808965, 0.5021465854236337, 0.48284814805638726, 0.48357910340204846, 0.4648851251928105, 0.45776410269589235, 0.4574814463500979, 0.43219147802280977, 0.42689769274885186, 0.4330950071940474, 0.4139250006382539, 0.408740324709378, 0.395868520214888, 0.42806022840484004, 0.38274556162602646, 0.37677830358097, 0.37276555013820367, 0.380948112034889, 0.3620286653889263, 0.35020135353112564], "accuracy": [0.33839651942253113, 0.5330867767333984, 0.6593580842018127, 0.698190450668335, 0.7147008180618286, 0.7230220437049866, 0.7317395210266113, 0.7593448758125305, 0.7567031979560852, 0.76106196641922, 0.7751948237419128, 0.7766477465629578, 0.7880068421363831, 0.7956677079200745, 0.7981772422790527, 0.8031964302062988, 0.8031964302062988, 0.806630551815033, 0.8165367841720581, 0.8206313848495483, 0.8265751004219055, 0.8261788487434387, 0.8255184292793274, 0.837537944316864, 0.8381983637809753, 0.8376700282096863, 0.8446704745292664, 0.8451988101005554, 0.8474441766738892, 0.8368775844573975, 0.856689989566803, 0.8593316674232483, 0.8610487580299377, 0.8574824929237366, 0.8651432991027832, 0.8691058158874512], "val_loss": [1.437016793659755, 0.771062936101641, 0.627225228718349, 0.586813041142055, 0.6204999174390521, 0.5437237535204206, 0.5120857954025269, 0.4918191262653896, 0.505777393068586, 0.49274889060429167, 0.4825502804347447, 0.4995378426143101, 0.44097427810941425, 0.43268985407693045, 0.4227591497557504, 0.4109530619212559, 0.4480759756905692, 0.41139600958142963, 0.4078436323574611, 0.3818178262029375, 0.3952443514551435, 0.4258727601596287, 0.3753124305180141, 0.3778111594063895, 0.3953805310385568, 0.3624050532068525, 0.3610553230558123, 0.366686795439039, 0.3727434532982962, 0.35845764194216045, 0.346254825592041, 0.34465346166065763, 0.38500681945255827, 0.3409114054271153, 0.3586808443069458, 0.3462426577295576], "val_accuracy": [0.3096666634082794, 0.6393333077430725, 0.7073333263397217, 0.734333336353302, 0.7086666822433472, 0.7443333268165588, 0.7630000114440918, 0.7789999842643738, 0.7553333044052124, 0.7730000019073486, 0.777999997138977, 0.7666666507720947, 0.7993333339691162, 0.7990000247955322, 0.8003333210945129, 0.8209999799728394, 0.7976666688919067, 0.8203333616256714, 0.8223333358764648, 0.8373333215713501, 0.8286666870117188, 0.7986666560173035, 0.8379999995231628, 0.8243333101272583, 0.8180000185966492, 0.846666693687439, 0.8426666855812073, 0.8399999737739563, 0.8333333134651184, 0.8443333506584167, 0.8543333411216736, 0.8500000238418579, 0.8226666450500488, 0.8543333411216736, 0.846666693687439, 0.8529999852180481]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8334285616874695, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, beta))), tf.math.add(beta, grad)))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9726039413699794, 1.2701071035498248, 0.8828517044571491, 0.796526725439269, 0.7357138759424469, 0.7171354664708834, 0.6783253133273348, 0.6372127047288593, 0.6175539828782792, 0.6158824428795918, 0.5775638559923951, 0.5685338510923444, 0.5611745107482532, 0.533715671780339, 0.5292728315995054, 0.516040658229661, 0.5064805530246852, 0.49545780906367376, 0.4810451115552287, 0.47368283339731443, 0.458572497016419, 0.45040725541388776, 0.46144106475164737, 0.43079800021457887, 0.4240652194561314, 0.42490780196878275, 0.410974257236553, 0.4031423661356447, 0.39801038008686607, 0.41296742828751065, 0.38360484703940295, 0.3699896543048959, 0.37322728721425674, 0.37843262534792776, 0.3578185476269216, 0.35020302781465423, 0.3387091139508843, 0.34446092402820083, 0.3431272410587502, 0.3314216618115293, 0.33454130152433526, 0.31708893453865444, 0.3166713444249127, 0.32158984018905745, 0.2978397637247457, 0.3081757263571374, 0.2993074060982213, 0.2972134855744263, 0.28571090867821375, 0.2903744015931737, 0.27694715218789007, 0.28541505818574214, 0.2898689852083962], "accuracy": [0.3391890227794647, 0.5365209579467773, 0.6711134314537048, 0.6955488324165344, 0.7190595865249634, 0.720380425453186, 0.7380794882774353, 0.7553823590278625, 0.7629110813140869, 0.7648923397064209, 0.7774402499198914, 0.7849689722061157, 0.7887993454933167, 0.7931581139564514, 0.800818920135498, 0.8047813773155212, 0.8042530417442322, 0.8092722296714783, 0.8191784620285034, 0.8230088353157043, 0.8301413059234619, 0.8302733898162842, 0.8251221776008606, 0.8405758738517761, 0.8409721255302429, 0.8364813327789307, 0.8441421389579773, 0.8461233377456665, 0.8499537706375122, 0.8453308939933777, 0.8564258217811584, 0.8617091774940491, 0.8578787446022034, 0.8576145768165588, 0.8659358024597168, 0.8701624870300293, 0.8778232932090759, 0.8677849769592285, 0.8681812286376953, 0.8739928603172302, 0.8754457831382751, 0.8840311765670776, 0.8771628737449646, 0.8772949576377869, 0.8861445188522339, 0.8850878477096558, 0.8838990926742554, 0.8889182209968567, 0.8932769894599915, 0.8918240666389465, 0.8961827754974365, 0.8849557638168335, 0.8873332738876343], "val_loss": [1.4308084760393416, 0.7543454170227051, 0.6152068887438092, 0.5671981743403843, 0.5975541046687535, 0.5283055816377912, 0.5228667088917324, 0.49271265098026823, 0.5093346323285785, 0.4927857943943569, 0.4766685962677002, 0.5402454818998065, 0.4361263598714556, 0.43016455854688374, 0.4170140198298863, 0.41360687358038767, 0.4515089137213571, 0.4010892595563616, 0.4059336611202785, 0.3763118726866586, 0.3872137154851641, 0.4329374262264797, 0.36869961874825613, 0.3764659847532, 0.38648927211761475, 0.3624454736709595, 0.3574872612953186, 0.3693254930632455, 0.3650128500802176, 0.3540279609816415, 0.3469979166984558, 0.3452616419110979, 0.3971509337425232, 0.34279087611607145, 0.3528327090399606, 0.34375316756112234, 0.3475049308368138, 0.36027705669403076, 0.34368620600019184, 0.3517721380506243, 0.3393604499953134, 0.36451418910707745, 0.39352889571871075, 0.32619283880506245, 0.3515169790812901, 0.36230593068259104, 0.37345573731831144, 0.3205410497529166, 0.32799322264535086, 0.3519220692770822, 0.31476216656821115, 0.3359383004052298, 0.3314840538161142], "val_accuracy": [0.32366666197776794, 0.6693333387374878, 0.7226666808128357, 0.7409999966621399, 0.7149999737739563, 0.749666690826416, 0.7480000257492065, 0.7706666588783264, 0.7553333044052124, 0.7676666378974915, 0.7793333530426025, 0.746666669845581, 0.8066666722297668, 0.8033333420753479, 0.809333324432373, 0.8116666674613953, 0.796999990940094, 0.8256666660308838, 0.8206666707992554, 0.8423333168029785, 0.8306666612625122, 0.7953333258628845, 0.8426666855812073, 0.8289999961853027, 0.8309999704360962, 0.8426666855812073, 0.8450000286102295, 0.8349999785423279, 0.8420000076293945, 0.8476666808128357, 0.8506666421890259, 0.8503333330154419, 0.8176666498184204, 0.8503333330154419, 0.8486666679382324, 0.8536666631698608, 0.8519999980926514, 0.8423333168029785, 0.8583333492279053, 0.8500000238418579, 0.8606666922569275, 0.8416666388511658, 0.8363333344459534, 0.8676666617393494, 0.8486666679382324, 0.8493333458900452, 0.8360000252723694, 0.8683333396911621, 0.8659999966621399, 0.8453333377838135, 0.8666666746139526, 0.8629999756813049, 0.859333336353302]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [49, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8205714225769043, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9764555189131179, 1.2624434629105117, 0.9067718382241341, 0.8005424567012739, 0.7347911512689537, 0.723308312681924, 0.6890712763812517, 0.6381259565623587, 0.6274824122301796, 0.6228152824556665, 0.5850984345471555, 0.5818031487321935, 0.5626432771349564, 0.5334743525310829, 0.5362006529935394, 0.5159142392540746, 0.5093050127244503, 0.5033779196011124, 0.48321061930431586, 0.4902755209892937, 0.46470380633215247, 0.4557755117513374, 0.4556953331868662, 0.430072127737468, 0.42594089847451205, 0.4311801239547004, 0.41425600117302497, 0.40773009061183535, 0.4027818275708816, 0.42759196897381885, 0.3871194354224403, 0.37836881816237594, 0.37879490291815643, 0.38467454223773895, 0.35971988133939503, 0.35685331001336534, 0.3411094715306788, 0.34370527262260037, 0.34610556032380185, 0.32372847213217326, 0.34353106618793555, 0.3222436262568966, 0.3179824392100556, 0.3120141814153712], "accuracy": [0.33839651942253113, 0.5336151123046875, 0.6606789231300354, 0.6980583667755127, 0.7201162576675415, 0.7202483415603638, 0.7304186820983887, 0.7552502751350403, 0.7581561207771301, 0.7605336308479309, 0.7750627398490906, 0.7765156626701355, 0.7872143983840942, 0.7921014428138733, 0.796328067779541, 0.8021397590637207, 0.8024039268493652, 0.8072909712791443, 0.8169330358505249, 0.8193105459213257, 0.8255184292793274, 0.8264430165290833, 0.8249900937080383, 0.8384625315666199, 0.8392550349235535, 0.8358209133148193, 0.8433496356010437, 0.8485008478164673, 0.8466516733169556, 0.8424250483512878, 0.8531237840652466, 0.858671247959137, 0.8578787446022034, 0.8557654023170471, 0.8668603897094727, 0.8673887252807617, 0.8759741187095642, 0.8696341514587402, 0.8689737319946289, 0.8754457831382751, 0.8709549307823181, 0.8815215826034546, 0.876370370388031, 0.8804649114608765], "val_loss": [1.4361161504473006, 0.7747819934572492, 0.6280853407723563, 0.5796252318790981, 0.6208759375980922, 0.5390729904174805, 0.5174818549837384, 0.4952949455806187, 0.5068608011518206, 0.4924630948475429, 0.49137745584760395, 0.5224855286734444, 0.44107372420174734, 0.4261444551604135, 0.42803691966193064, 0.41584954942975727, 0.4537669335092817, 0.41090322392327444, 0.4080928564071655, 0.3819970999445234, 0.3934922473771231, 0.4186996476990836, 0.37127721309661865, 0.3783221926007952, 0.39203529698508127, 0.3643600770405361, 0.36028691700526644, 0.36606850794383455, 0.3736382722854614, 0.35959950515202116, 0.3535758767809187, 0.3481105736323765, 0.39576177086148945, 0.34276883942740305, 0.3650389994893755, 0.3434391106878008, 0.34426618473870413, 0.3691643902233669, 0.3394805448395865, 0.3407462494713919, 0.33840898105076384, 0.35969488109861103, 0.356387266090938, 0.33390393427440096], "val_accuracy": [0.31033334136009216, 0.6396666765213013, 0.706333339214325, 0.7369999885559082, 0.7076666951179504, 0.7429999709129333, 0.7576666474342346, 0.7703333497047424, 0.7606666684150696, 0.7730000019073486, 0.7796666622161865, 0.7526666522026062, 0.8006666898727417, 0.8063333630561829, 0.7990000247955322, 0.8096666932106018, 0.7979999780654907, 0.8209999799728394, 0.8209999799728394, 0.8370000123977661, 0.8323333263397217, 0.8053333163261414, 0.8433333039283752, 0.8259999752044678, 0.8246666789054871, 0.8429999947547913, 0.8460000157356262, 0.8413333296775818, 0.8333333134651184, 0.8410000205039978, 0.8496666550636292, 0.847000002861023, 0.8166666626930237, 0.8523333072662354, 0.8450000286102295, 0.8529999852180481, 0.8543333411216736, 0.8423333168029785, 0.8643333315849304, 0.8560000061988831, 0.8643333315849304, 0.8463333249092102, 0.8489999771118164, 0.8629999756813049]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8134285807609558, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.add(beta, beta))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9729571852780383, 1.2696132025840243, 0.8782521491478369, 0.797862230652847, 0.730082476639776, 0.735597742633608, 0.6790617758949687, 0.6366259703830154, 0.627964612916791, 0.6274440105895734, 0.5803346352184516, 0.5723365461979056, 0.5652350684702436, 0.5374370013340164, 0.5329180690732378, 0.5170918405764547, 0.507534556727541, 0.5047402112136947, 0.48521852901488594, 0.4736250777128681, 0.4663996239379885, 0.4532886172062087, 0.45547629653297445, 0.43085637486700556, 0.43045997231501976, 0.4220527238487457, 0.41862912720708706, 0.40775944985151136, 0.39776297397601557, 0.4185746622997237, 0.38851728725978146, 0.3731241799726651, 0.3772383806349941, 0.37453447174260707, 0.3595321394110463, 0.35281355968555833, 0.33777955297654755, 0.3445182465692915, 0.3423499139528926, 0.328403976969416, 0.33569517501782054, 0.31820544055691957, 0.31812172068061295, 0.3172640142904029, 0.3011572319857275, 0.30880634280605845, 0.30027936685354545, 0.30030241802683155, 0.2863612718601678], "accuracy": [0.33905693888664246, 0.5378417372703552, 0.6728305220603943, 0.6960771083831787, 0.7206445932388306, 0.7169462442398071, 0.739400327205658, 0.7563069462776184, 0.7605336308479309, 0.763439416885376, 0.7761194109916687, 0.7814027070999146, 0.7839123010635376, 0.789459764957428, 0.7947431206703186, 0.8049134612083435, 0.8039889335632324, 0.8098005652427673, 0.8185180425643921, 0.8247259259223938, 0.8269713521003723, 0.8300092220306396, 0.8271034359931946, 0.8403117060661316, 0.8356888294219971, 0.8370096683502197, 0.8385946154594421, 0.8416325449943542, 0.8475762605667114, 0.8413683772087097, 0.8539162874221802, 0.8603883385658264, 0.8562937378883362, 0.8609166741371155, 0.8667283058166504, 0.8665962219238281, 0.8770307898521423, 0.8729361891746521, 0.8681812286376953, 0.8766345381736755, 0.8751816153526306, 0.8840311765670776, 0.8742570281028748, 0.878879964351654, 0.8853520154953003, 0.882710337638855, 0.883238673210144, 0.8857482671737671, 0.8877294659614563], "val_loss": [1.4342940194266183, 0.7442601067679269, 0.6303060565676007, 0.5654604605266026, 0.6217262915202549, 0.532481346811567, 0.5207417181559971, 0.49114274978637695, 0.5097515072141375, 0.4888476814542498, 0.4782193899154663, 0.5117902074541364, 0.4404832550457546, 0.43418110268456594, 0.42385510887418476, 0.4118903023856027, 0.4481589453560965, 0.4087366376604353, 0.4060427461351667, 0.38085462365831646, 0.3883303829601833, 0.4180887852396284, 0.36829314061573576, 0.3798844473702567, 0.3836837921823774, 0.37515450375420706, 0.36022643532071796, 0.3598693183490208, 0.3652045215879168, 0.3568137288093567, 0.34735625982284546, 0.34583267995289396, 0.37591869490487234, 0.33696829421179636, 0.36462524959019255, 0.3479333519935608, 0.34445942299706594, 0.3583856225013733, 0.33764737844467163, 0.33915597200393677, 0.34134213413511005, 0.35572189944131033, 0.3620148301124573, 0.32804019110543386, 0.34053380148751394, 0.3758213349751064, 0.3787932736533029, 0.3261528270585196, 0.3307158350944519], "val_accuracy": [0.31433331966400146, 0.6616666913032532, 0.7116666436195374, 0.746666669845581, 0.7076666951179504, 0.7443333268165588, 0.7549999952316284, 0.7666666507720947, 0.7509999871253967, 0.7713333368301392, 0.7756666541099548, 0.7509999871253967, 0.7986666560173035, 0.79666668176651, 0.8026666641235352, 0.8173333406448364, 0.796999990940094, 0.8203333616256714, 0.8226666450500488, 0.8399999737739563, 0.8303333520889282, 0.8053333163261414, 0.8416666388511658, 0.8253333568572998, 0.8289999961853027, 0.8356666564941406, 0.8429999947547913, 0.8413333296775818, 0.8413333296775818, 0.8420000076293945, 0.8526666760444641, 0.8510000109672546, 0.8343333601951599, 0.8579999804496765, 0.8450000286102295, 0.8479999899864197, 0.8536666631698608, 0.8456666469573975, 0.862666666507721, 0.8566666841506958, 0.859000027179718, 0.8453333377838135, 0.8496666550636292, 0.8659999966621399, 0.859666645526886, 0.847000002861023, 0.8333333134651184, 0.8646666407585144, 0.8583333492279053]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [9, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 9, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.37857142090797424, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 7, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, beta)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301734820112592, 2.3012034237707577, 2.3021377845447235, 2.301204028461493, 2.300882509969969, 2.2998921280413605, 2.2995291917614726, 2.2987720697405725, 2.2959771987359288, 2.2963700951082577, 2.2963942684407375, 2.2960386012350296, 2.295480933470922, 2.2932396121485485, 2.294650470261025, 2.292670992088041, 2.2931922556560083, 2.292986470064892, 2.290990022321214, 2.292435766100931, 2.2905427526567967, 2.2900311650538314, 2.2900373151572846, 2.288783289800152, 2.288104250037108, 2.2861705378392716, 2.2879077832712365, 2.2856601648452872, 2.28597482131567, 2.2855995259406527, 2.2838759157777604, 2.2846752685594236, 2.2829600670995527, 2.2814471845723823, 2.2823566654811462, 2.282537865459234, 2.2810492950455075, 2.281183754904962, 2.2806890891637814, 2.2796280642290156, 2.277888043240754, 2.278084066738904, 2.278199129636183, 2.2771523349619875, 2.276478390888279, 2.2758516503236925, 2.2747704574318925, 2.274682242841044, 2.273653408980656, 2.2735138444254317, 2.272543985515207, 2.273615799150478, 2.2704526547348935, 2.26982695680678, 2.2689916759418414, 2.2691458053813083, 2.2679016968325665, 2.2697551959005913, 2.268488078274196, 2.266543416960553, 2.2664454396784093, 2.268859802346109, 2.2660001481544576, 2.2646470569962793, 2.2651908945933372, 2.262925686758775, 2.2628924721629784, 2.262867287559091, 2.2616317201331464, 2.2613552309786247, 2.258487365186301, 2.25810791050769, 2.2590191993164175, 2.2589541018174515, 2.2597581366537867, 2.256932511132517, 2.257652213340107, 2.2583723700262253, 2.2538383785192884, 2.2548300440222313, 2.2528073161017734, 2.2538148466905565, 2.2531013196847693, 2.2522830044856366, 2.2510254581480638, 2.2516393783999127, 2.2512248583347603, 2.2486178333008877, 2.2496300095407133, 2.24621875511893, 2.2459495002410006, 2.2457999587925026, 2.245842037451596, 2.2448611447776803, 2.244600346784046, 2.245321261900102, 2.2424506749994704, 2.2433554709878787, 2.2396417912742828, 2.2405158727081806], "accuracy": [0.09113723784685135, 0.09126931428909302, 0.09206181764602661, 0.09166556596755981, 0.09668471664190292, 0.09153348207473755, 0.09813763201236725, 0.10606260597705841, 0.10632677376270294, 0.1018359512090683, 0.10553427785634995, 0.10606260597705841, 0.11227050423622131, 0.11042134463787079, 0.10989301651716232, 0.11174217611551285, 0.1154404953122139, 0.11610091477632523, 0.12019548565149307, 0.11121384054422379, 0.11887465417385101, 0.12362963706254959, 0.12270505726337433, 0.12032756209373474, 0.12719587981700897, 0.13010171055793762, 0.12600713968276978, 0.1328754425048828, 0.12878087162971497, 0.1340641975402832, 0.13630960881710052, 0.1348566859960556, 0.14568749070167542, 0.14740456640720367, 0.1414608359336853, 0.13697001338005066, 0.1472724825143814, 0.1476687341928482, 0.14674416184425354, 0.14436666667461395, 0.1538766324520111, 0.15493330359458923, 0.1472724825143814, 0.15136705338954926, 0.15572579205036163, 0.16166952252388, 0.16629242897033691, 0.15902787446975708, 0.16431118547916412, 0.16734910011291504, 0.16616034507751465, 0.16616034507751465, 0.17461365461349487, 0.1802932173013687, 0.18055738508701324, 0.17857614159584045, 0.17302866280078888, 0.1728965789079666, 0.17817988991737366, 0.18518029153347015, 0.18518029153347015, 0.17738740146160126, 0.18782195448875427, 0.18861444294452667, 0.18636904656887054, 0.18795403838157654, 0.19099193811416626, 0.18914277851581573, 0.19891692698001862, 0.20261524617671967, 0.20803064107894897, 0.20420023798942566, 0.20301149785518646, 0.19997358322143555, 0.19918107986450195, 0.2094835489988327, 0.20578522980213165, 0.1982565075159073, 0.21014396846294403, 0.20472857356071472, 0.21318188309669495, 0.21344605088233948, 0.21423853933811188, 0.22005018591880798, 0.2242768406867981, 0.22414475679397583, 0.22440892457962036, 0.22744683921337128, 0.22586184740066528, 0.22837141156196594, 0.23418307304382324, 0.2312772423028946, 0.23339056968688965, 0.22982433438301086, 0.23101307451725006, 0.2324659824371338, 0.24646678566932678, 0.23682472109794617, 0.23920221626758575, 0.24805177748203278], "val_loss": [1.970890998840332, 1.9703341211591447, 1.9697801726205009, 1.969224112374442, 1.9686737741742815, 1.9681294986179896, 1.9675856998988561, 1.9670448303222656, 1.9665025983537947, 1.965963636125837, 1.9654181344168526, 1.9648754937308175, 1.9643282209123885, 1.9637842178344727, 1.9632412365504675, 1.9627009800502233, 1.9621636526925224, 1.9616214888436454, 1.961080483027867, 1.960536275591169, 1.959996564047677, 1.9594529696873255, 1.9589101246425085, 1.958371843610491, 1.9578305653163366, 1.9572834968566895, 1.956742627280099, 1.9562026432582311, 1.9556595938546317, 1.9551189967564173, 1.954575879233224, 1.9540327617100306, 1.9534831728254045, 1.952939237867083, 1.9523920331682478, 1.9518532071794783, 1.951305866241455, 1.9507654053824288, 1.9502181325639998, 1.9496677262442452, 1.9491192272731237, 1.9485678672790527, 1.9480178696768624, 1.9474729129246302, 1.9469238008771623, 1.9463691711425781, 1.9458161081586565, 1.945260660988944, 1.9447029658726283, 1.9441452707563127, 1.9435920715332031, 1.9430373055594308, 1.9424712317330497, 1.9419072696140833, 1.94134977885655, 1.940781729561942, 1.940211364201137, 1.9396507399422782, 1.9390843936375208, 1.9385119846888952, 1.9379383495875768, 1.9373658043997628, 1.9367921692984444, 1.9362094061715263, 1.9356298446655273, 1.9350461278642928, 1.9344688143048967, 1.9338879585266113, 1.9333062853131975, 1.9327175957815987, 1.932116985321045, 1.9315214838300432, 1.9309210777282715, 1.9303216934204102, 1.929727213723319, 1.929129191807338, 1.9285312380109514, 1.9279272896902901, 1.9273131234305245, 1.9266983440944128, 1.9260811805725098, 1.9254612922668457, 1.9248360225132533, 1.9242183821541923, 1.923597812652588, 1.9229747227260046, 1.922344480242048, 1.9217057909284319, 1.9210717337472099, 1.9204326357160295, 1.919790540422712, 1.9191399301801408, 1.9184842109680176, 1.917825766972133, 1.9171664374215263, 1.9165064947945731, 1.9158357211521693, 1.9151714188711983, 1.9144883837018694, 1.9138118198939733], "val_accuracy": [0.03799999877810478, 0.04066666588187218, 0.04600000008940697, 0.04833333194255829, 0.05366666615009308, 0.05766666680574417, 0.061666667461395264, 0.06466666609048843, 0.06966666877269745, 0.07199999690055847, 0.07500000298023224, 0.0793333351612091, 0.0846666693687439, 0.08833333104848862, 0.09366666525602341, 0.0963333323597908, 0.10100000351667404, 0.10499999672174454, 0.1120000034570694, 0.11599999666213989, 0.12066666781902313, 0.12666666507720947, 0.13333334028720856, 0.14133332669734955, 0.14800000190734863, 0.1509999930858612, 0.1576666682958603, 0.16333332657814026, 0.16899999976158142, 0.17533333599567413, 0.1783333271741867, 0.18433333933353424, 0.18933333456516266, 0.19566667079925537, 0.20233333110809326, 0.20866666734218597, 0.21666666865348816, 0.22066666185855865, 0.2253333330154419, 0.23100000619888306, 0.23633334040641785, 0.2396666705608368, 0.2433333396911621, 0.24666666984558105, 0.2516666650772095, 0.2566666603088379, 0.25999999046325684, 0.26366665959358215, 0.2680000066757202, 0.27266666293144226, 0.27433332800865173, 0.2773333191871643, 0.28200000524520874, 0.2879999876022339, 0.2903333306312561, 0.2943333387374878, 0.29766666889190674, 0.30033332109451294, 0.30266666412353516, 0.30799999833106995, 0.3113333284854889, 0.3136666715145111, 0.31700000166893005, 0.3199999928474426, 0.3213333189487457, 0.3216666579246521, 0.3240000009536743, 0.3266666531562805, 0.33033332228660583, 0.3333333432674408, 0.3346666693687439, 0.33666667342185974, 0.3386666774749756, 0.3400000035762787, 0.3423333466053009, 0.343666672706604, 0.3449999988079071, 0.3486666679382324, 0.35100001096725464, 0.3526666760444641, 0.3556666672229767, 0.3583333194255829, 0.36000001430511475, 0.3616666793823242, 0.3619999885559082, 0.3633333444595337, 0.36399999260902405, 0.3643333315849304, 0.36633333563804626, 0.36800000071525574, 0.36800000071525574, 0.36933332681655884, 0.37033334374427795, 0.37066665291786194, 0.3723333477973938, 0.375, 0.3766666650772095, 0.3779999911785126, 0.37966665625572205, 0.37966665625572205]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 4, 0, 9, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.2997142970561981, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 8, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4389393739318646, 43472.4523850296, NaN, NaN, NaN, NaN], "accuracy": [0.26799631118774414, 0.19997358322143555, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9135661806379045, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.26514285802841187, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.3023748784851894, 2.0651438251667176, 2.237695011118258, 1.9726492050789635, 2.1972487271658703, 2.308260342542915, 2.3057997925186107, 2.303922025487565], "accuracy": [0.2509576082229614, 0.3249240517616272, 0.22837141156196594, 0.3299432098865509, 0.19838859140872955, 0.09919429570436478, 0.0952318087220192, 0.09959053993225098], "val_loss": [1.597193786076137, 1.9523473467145647, 1.7343759536743164, 1.973335129874093, 1.978433268410819, 1.9746791975838798, 1.974097524370466, 1.9733819280351912], "val_accuracy": [0.375, 0.24766667187213898, 0.42899999022483826, 0.10133333504199982, 0.09733333438634872, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [4, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.15285713970661163, "mapping_values": [1, 5, 5, 2, 3, 1, 11, 11, 7, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.add(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3683289436695047, 5.4709360784999985, 16.73481321807204, 20.50868373609348, 23.99005697117096, 27.928540910633405, 32.34832431277768], "accuracy": [0.08030643314123154, 0.07819310575723648, 0.09417514503002167, 0.0940430611371994, 0.10672302544116974, 0.10130762308835983, 0.09655263274908066], "val_loss": [2.1031346321105957, 12.849228722708565, 14.564787183489118, 16.39641080583845, 18.127037593296595, 20.146933964320592, 22.311998639787948], "val_accuracy": [0.07699999958276749, 0.1420000046491623, 0.13199999928474426, 0.13300000131130219, 0.13233333826065063, 0.1313333362340927, 0.1326666623353958]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 6, 4, 0, 9, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.11542857438325882, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3739489752933602, 8.011496109560008, 63.03227625017893, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2673358917236328, 0.24065512418746948, 0.14397041499614716, 0.10593052208423615, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9689685276576452, 4.829588890075684, 15.454988207135882, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.05400000140070915, 0.09933333098888397, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 2, 0, 8, 1, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.sqrt(beta)))), tf.math.add(beta, tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06339981406927109, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 1, 4, 0, 9, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 7, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(beta, beta)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302485001479252, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 9, 4, 0, 8, 5, 1, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 4, 0, 8, 5, 1, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [55, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 2, 0, 8, 1, 1, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, beta))))))), grad), tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 0, 4, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))))), beta), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06432439386844635, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 2, 0, 8, 1, 5, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 2, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(beta)))))), tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, alpha), beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09021265059709549, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1258942737.9651074, 24165983332.222427, 112235813361.46031, 308475861400.7344, 653662037566.1487, 1216852428418.3162], "accuracy": [0.09549596905708313, 0.09945846349000931, 0.10157178342342377, 0.10117553919553757, 0.10830801725387573, 0.1010434553027153], "val_loss": [4683690130.285714, 37458353005.71429, 126409113600.0, 299622072320.0, 585181879149.7142, 1011180671561.1428], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 3, 4, 0, 2, 5, 1, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 11, 11, 6, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.square(beta)))))), tf.math.add(beta, grad))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06339981406927109, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 4, 0, 9, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 7, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302416936486168, 2.3039308027300964, 2.307650964934954, 2.309811795911989, 2.313450880936187, 2.3163830405134394, 2.3217034546171025, 2.327091326629796, 2.3304088284798965, 2.347229864272648, 2.391300533803825, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08875974267721176, 0.08717474341392517, 0.08308017253875732, 0.08083476126194, 0.08017434924840927, 0.07396645098924637, 0.07647603005170822, 0.07119271159172058, 0.0730418711900711, 0.0738343670964241, 0.08413683623075485, 0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.972395965031215, 1.9738506589617049, 1.9755851200648717, 1.9777274812970842, 1.9802477019173759, 1.983057975769043, 1.9868173599243164, 1.9914396830967493, 1.998373099735805, 2.0137655394417897, 2.1226013728550504, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03166666626930237, 0.022333333268761635, 0.02133333310484886, 0.024000000208616257, 0.026000000536441803, 0.03200000151991844, 0.047333333641290665, 0.06533333659172058, 0.08266666531562805, 0.09733333438634872, 0.09733333438634872, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 4, 5, 9, 5, 1, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 0, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.07885714620351791, "mapping_values": [1, 4, 4, 2, 2, 0, 10, 10, 7, 3, 3, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.square(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3016215275149885, 2.3008805974568074, 2.3017914508075887, 2.3008248105009454, 2.3008489230872304, 2.3003542941905537, 2.30027797939818, 2.299998903853971, 2.2986011188642115, 2.298998022595921, 2.2992252215827698, 2.299388626358371, 2.299154040961769, 2.2987632599992995, 2.30021989070004, 2.299977447221056], "accuracy": [0.09219389408826828, 0.09087307006120682, 0.09496764093637466, 0.09311848133802414, 0.09800554811954498, 0.09509972482919693, 0.09853387624025345, 0.10038304328918457, 0.10711926966905594, 0.10170386731624603, 0.09972262382507324, 0.1018359512090683, 0.10355303436517715, 0.1006472036242485, 0.09800554811954498, 0.10011887550354004], "val_loss": [1.9707844597952706, 1.9702400479997908, 1.9699796267918177, 1.9697228840419225, 1.9698008128574915, 1.969796861921038, 1.9696719305855888, 1.9695841244288854, 1.9695722716195243, 1.9696786063058036, 1.9697555814470564, 1.9699455669948034, 1.9701736995152064, 1.9704764229910714, 1.9706916809082031, 1.9708665439060755], "val_accuracy": [0.04266666620969772, 0.04899999871850014, 0.0560000017285347, 0.057999998331069946, 0.06199999898672104, 0.0663333311676979, 0.06933332979679108, 0.07133333384990692, 0.07433333247900009, 0.07466666400432587, 0.07633333653211594, 0.07333333045244217, 0.07133333384990692, 0.06566666811704636, 0.06300000101327896, 0.06333333253860474]}}]