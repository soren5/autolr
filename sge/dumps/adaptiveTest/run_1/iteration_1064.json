[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 8, 6, 2, 1, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8371428847312927, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9871219026256688, 1.36119822499428, 1.0818383269353455, 0.8636302300936133, 0.7905250575957816, 0.7523162660581749, 0.7005558908969782, 0.6776417048064678, 0.6497025151042386, 0.7016546053578432, 0.6353814596938356, 0.5977375964683203, 0.5949906372926365, 0.5772257054155969, 0.547225669610927, 0.5444485829522376, 0.5516240459549082, 0.532355933747728, 0.5063771984368078, 0.49944238025183846, 0.4943581988483671, 0.4940944487951561, 0.47586471844563444, 0.4807986869252731, 0.4479183018317769, 0.4627248172699547, 0.45865460325698215, 0.43607310645096276, 0.4412713653856123, 0.43118568514048733, 0.43730983704135656, 0.4165475075200186, 0.4146871113262282, 0.40139261566731343, 0.40648134857939694, 0.3816550976611903, 0.39835078662192236, 0.3879933884123045, 0.3859565346319095, 0.38178916878751273, 0.37788728662863574, 0.36302233052102567], "accuracy": [0.3399814963340759, 0.5324263572692871, 0.6053361296653748, 0.677189290523529, 0.7065116763114929, 0.709549605846405, 0.7382115721702576, 0.7400607466697693, 0.7508915662765503, 0.735569953918457, 0.7508915662765503, 0.7708360552787781, 0.7695152759552002, 0.7755910754203796, 0.7901201844215393, 0.7902522683143616, 0.7845727205276489, 0.7951393723487854, 0.8100647330284119, 0.8084797263145447, 0.8109893202781677, 0.8123101592063904, 0.8231409192085266, 0.8165367841720581, 0.8309338092803955, 0.8257825970649719, 0.8207634687423706, 0.8363492488861084, 0.8286884427070618, 0.8384625315666199, 0.8352925777435303, 0.8462554216384888, 0.8408400416374207, 0.8490291833877563, 0.846387505531311, 0.856689989566803, 0.8510104417800903, 0.8529917001724243, 0.8553691506385803, 0.8535200357437134, 0.8565579056739807, 0.8679170608520508], "val_loss": [1.3247295788356237, 0.9112273284367153, 0.6595289877482823, 0.6105899470193046, 0.6178766318729946, 0.5625447034835815, 0.5315736361912319, 0.5427987745829991, 0.5370303222111293, 0.5009539638246808, 0.4800438710621425, 0.4917604752949306, 0.4659720148359026, 0.46584503991263254, 0.45941594668797087, 0.46994861534663607, 0.43305798939296175, 0.4239138109343393, 0.40875810384750366, 0.45601377316883634, 0.41734332697732107, 0.40157415185655865, 0.39299594504492624, 0.39933113540921894, 0.412138785634722, 0.4086455362183707, 0.39174566098621916, 0.3948508756501334, 0.4298087954521179, 0.3884248563221523, 0.37303500516074045, 0.36204460688999723, 0.371004445212228, 0.3578460727419172, 0.3661650163786752, 0.36030473027910503, 0.3529869999204363, 0.3798628960336958, 0.36673868553979055, 0.3786099638257708, 0.35502913168498446, 0.3454235792160034], "val_accuracy": [0.5303333401679993, 0.6420000195503235, 0.7049999833106995, 0.7096666693687439, 0.718666672706604, 0.7379999756813049, 0.7480000257492065, 0.7459999918937683, 0.7476666569709778, 0.7756666541099548, 0.7919999957084656, 0.7760000228881836, 0.7823333144187927, 0.7863333225250244, 0.7956666946411133, 0.784333348274231, 0.8116666674613953, 0.812333345413208, 0.8186666369438171, 0.7820000052452087, 0.8186666369438171, 0.8236666917800903, 0.828000009059906, 0.8246666789054871, 0.8173333406448364, 0.8116666674613953, 0.8226666450500488, 0.8296666741371155, 0.8019999861717224, 0.8309999704360962, 0.8379999995231628, 0.843999981880188, 0.8356666564941406, 0.847000002861023, 0.8403333425521851, 0.8476666808128357, 0.8496666550636292, 0.82833331823349, 0.846666693687439, 0.8289999961853027, 0.8489999771118164, 0.8463333249092102]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8339999914169312, "mapping_values": [1, 4, 4, 2, 2, 1, 17, 17, 9, 8, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.pow(beta, tf.math.add(beta, grad)), tf.math.sqrt(grad))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad)))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.973240302554085, 1.2341479662072152, 0.9454294247807387, 0.7898115252365195, 0.7975098689265964, 0.7233059631126463, 0.6717347038294488, 0.6448491717121778, 0.6177775662620196, 0.6333314487726587, 0.5748684112469219, 0.5660181929170495, 0.5499661228660233, 0.5379773468987628, 0.5187314826625606, 0.49682410781126235, 0.5012552874152214, 0.48141984901943413, 0.47508787221565946, 0.46326926711559485, 0.4533360741275759, 0.454359132391571, 0.4340039268578867, 0.4350479661300434, 0.4261027599810735, 0.42660908966866845, 0.40092412186431026, 0.3985299011026911, 0.39789721487441065, 0.40143482674224706, 0.3888673703148695, 0.386930204810814, 0.36764468790958615, 0.36552310191078147, 0.3555585021285207, 0.34905782939499364, 0.342444451729761], "accuracy": [0.35503897070884705, 0.5544841885566711, 0.6573768258094788, 0.7074362635612488, 0.7040021419525146, 0.7306828498840332, 0.7448157668113708, 0.7565711140632629, 0.7637035846710205, 0.7580240368843079, 0.7791573405265808, 0.7843085527420044, 0.7905164361000061, 0.7957997918128967, 0.8049134612083435, 0.8109893202781677, 0.8068947196006775, 0.8215559124946594, 0.8206313848495483, 0.8260467648506165, 0.8314621448516846, 0.8301413059234619, 0.8379341959953308, 0.8356888294219971, 0.841500461101532, 0.8409721255302429, 0.8467837572097778, 0.8488970994949341, 0.8465195894241333, 0.850350022315979, 0.8516708612442017, 0.8532558679580688, 0.8614450097084045, 0.8631620407104492, 0.8681812286376953, 0.8659358024597168, 0.8741249442100525], "val_loss": [1.4406283242361886, 0.7542855739593506, 0.6207787139075143, 0.636805534362793, 0.585318922996521, 0.5192936488560268, 0.5371237652642387, 0.5069131510598319, 0.47561728954315186, 0.4683377061571394, 0.45108461380004883, 0.47166144847869873, 0.4451695680618286, 0.44198804242270334, 0.42724841833114624, 0.43380420548575266, 0.3982603805405753, 0.4075589690889631, 0.3990001252719334, 0.41374883481434416, 0.38548362255096436, 0.3755150181906564, 0.37969190733773367, 0.38981979233878, 0.42101289544786724, 0.3540679897580828, 0.37037488392421175, 0.36351941313062397, 0.37603215660367695, 0.3679190959249224, 0.3583737441471645, 0.3396340608596802, 0.36133652925491333, 0.3441079429217747, 0.35047545603343416, 0.35210006577628, 0.3478420887674604], "val_accuracy": [0.43066665530204773, 0.6506666541099548, 0.7073333263397217, 0.6899999976158142, 0.7300000190734863, 0.7639999985694885, 0.7523333430290222, 0.7609999775886536, 0.7820000052452087, 0.7833333611488342, 0.800000011920929, 0.7789999842643738, 0.7883333563804626, 0.7983333468437195, 0.8069999814033508, 0.8080000281333923, 0.8303333520889282, 0.8203333616256714, 0.824999988079071, 0.8159999847412109, 0.8349999785423279, 0.843666672706604, 0.8326666951179504, 0.8199999928474426, 0.8063333630561829, 0.8493333458900452, 0.8326666951179504, 0.8460000157356262, 0.8360000252723694, 0.8450000286102295, 0.8503333330154419, 0.859666645526886, 0.8373333215713501, 0.8556666374206543, 0.8479999899864197, 0.8510000109672546, 0.8513333201408386]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 2, 6, 2, 1, 8, 4, 2, 6, 8, 8, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8174285888671875, "mapping_values": [1, 4, 4, 2, 2, 1, 24, 24, 16, 8, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha)))))))), tf.math.add(beta, grad)), grad)))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))), tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9871217674346822, 1.3590119257421698, 1.0835389936557613, 0.8626320940423808, 0.7837934306646933, 0.7644052349770026, 0.7028183344647775, 0.6787959122072043, 0.6479718542495786, 0.6880583181010891, 0.6302031570610794, 0.6127886805772434, 0.5887577255183774, 0.57812351567823, 0.5511842199902981, 0.5250584344192503, 0.5403431483688702, 0.5367114613037604, 0.5076733448478319, 0.4913793942632613, 0.4941487218631084, 0.5042252462805538, 0.4694306694198483, 0.47179843240709446, 0.46117797830495, 0.4569627514463043, 0.4495107970493124, 0.43660649805257284, 0.43560203787846224, 0.4305857271566178, 0.43382985380347444, 0.4135302110882546, 0.4154984535770708, 0.3961866013149717, 0.40277140003704925, 0.3802055084568367, 0.4030275684558106, 0.3892448302926704, 0.38131316945994015, 0.37490241415921677, 0.37298060690470186, 0.35860947973110013, 0.35632232669211966, 0.3810186425511548, 0.3704711767141105, 0.35511458138937113, 0.34457477182051477], "accuracy": [0.3399814963340759, 0.5315017700195312, 0.6034870147705078, 0.67666095495224, 0.7074362635612488, 0.7047945857048035, 0.7375511527061462, 0.7354378700256348, 0.7537974119186401, 0.7382115721702576, 0.7540615797042847, 0.761590301990509, 0.7726852297782898, 0.7745344042778015, 0.7887993454933167, 0.8012151718139648, 0.7942147850990295, 0.7923656105995178, 0.8086118102073669, 0.8099326491355896, 0.8083476424217224, 0.8103289008140564, 0.8289526104927063, 0.8181217908859253, 0.8251221776008606, 0.8249900937080383, 0.8280280232429504, 0.8363492488861084, 0.8341038227081299, 0.8381983637809753, 0.8363492488861084, 0.8455950617790222, 0.8424250483512878, 0.8537842035293579, 0.8471800088882446, 0.858671247959137, 0.8496896028518677, 0.8545766472816467, 0.8601241707801819, 0.8561616539955139, 0.8580108284950256, 0.8663320541381836, 0.8684453964233398, 0.8568220734596252, 0.8574824929237366, 0.8691058158874512, 0.8747853636741638], "val_loss": [1.3247646604265486, 0.8843954971858433, 0.6686440365655082, 0.6187387364251273, 0.6063706023352486, 0.5578682252338955, 0.5313313518251691, 0.5372325522559029, 0.5671546459197998, 0.49817642143794466, 0.48680485997881207, 0.4946208511080061, 0.4914132356643677, 0.4825366224561419, 0.4559061016355242, 0.4756677321025303, 0.44812660557883127, 0.43721642664500643, 0.40895984854016987, 0.46258645398276194, 0.4271453874451773, 0.4019524710518973, 0.3995115842138018, 0.4087369867733547, 0.40783126865114483, 0.39392387866973877, 0.3913230470248631, 0.3983674389975412, 0.4169870444706508, 0.386165908404759, 0.3707023688725063, 0.36782194886888775, 0.36861876930509296, 0.3572610786982945, 0.3718478764806475, 0.3789754169327872, 0.35216139044080463, 0.3688810723168509, 0.36740430763789583, 0.38791888100760324, 0.3525830251829965, 0.3400752203805106, 0.39789100204195293, 0.34599759749003817, 0.38911240441458567, 0.33902881826673237, 0.3485617807933262], "val_accuracy": [0.5299999713897705, 0.6460000276565552, 0.7036666870117188, 0.7003333568572998, 0.7256666421890259, 0.7416666746139526, 0.7513333559036255, 0.7570000290870667, 0.7279999852180481, 0.7749999761581421, 0.7866666913032532, 0.7633333206176758, 0.746666669845581, 0.7763333320617676, 0.8033333420753479, 0.7786666750907898, 0.7979999780654907, 0.8033333420753479, 0.8166666626930237, 0.7820000052452087, 0.8113333582878113, 0.8236666917800903, 0.8236666917800903, 0.8119999766349792, 0.8203333616256714, 0.8256666660308838, 0.8246666789054871, 0.8266666531562805, 0.812666654586792, 0.8353333473205566, 0.8386666774749756, 0.8343333601951599, 0.840666651725769, 0.8446666598320007, 0.8370000123977661, 0.831333339214325, 0.8506666421890259, 0.8396666646003723, 0.8413333296775818, 0.8236666917800903, 0.8489999771118164, 0.8556666374206543, 0.8169999718666077, 0.8536666631698608, 0.8183333277702332, 0.8556666374206543, 0.8479999899864197]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7834285497665405, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [1.9980002163486583, 1.471434025842563, 1.1074142811352221, 0.8793214369191784, 0.8298198646243222, 0.7761582023573746, 0.7597039619598721, 0.7113063012635656, 0.7039970414529245, 0.6748546674392951, 0.6569719868738575, 0.6371550577160169, 0.6377413090130971, 0.6035993616767705, 0.5852922060470445, 0.5809603544778009, 0.5717608269888097, 0.5715797714443255, 0.5571581354199179, 0.5622706569543273], "accuracy": [0.3333773612976074, 0.518689751625061, 0.5941091179847717, 0.6762647032737732, 0.6964733600616455, 0.7182670831680298, 0.7091533541679382, 0.7243428826332092, 0.733060359954834, 0.7424382567405701, 0.748249888420105, 0.7600052952766418, 0.7563069462776184, 0.7695152759552002, 0.780610203742981, 0.7800818681716919, 0.7835160493850708, 0.7825914621353149, 0.7906485199928284, 0.789988100528717], "val_loss": [1.7204909665243966, 0.8322685786655971, 0.6912860189165387, 0.672645994595119, 0.6285771131515503, 0.5760407107216972, 0.5412542138780866, 0.5530056612832206, 0.538532018661499, 0.5283245188849313, 0.5003564017159599, 0.49092321736471994, 0.5011282818658012, 0.4772149494716099, 0.4699782303401402, 0.48577843393598286, 0.4516388007572719, 0.45507586002349854, 0.46155101912362234, 0.445788357939039], "val_accuracy": [0.359333336353302, 0.6589999794960022, 0.7003333568572998, 0.6916666626930237, 0.7229999899864197, 0.7429999709129333, 0.7416666746139526, 0.7386666536331177, 0.750333309173584, 0.7546666860580444, 0.7580000162124634, 0.7663333415985107, 0.7883333563804626, 0.7873333096504211, 0.8009999990463257, 0.777999997138977, 0.79666668176651, 0.7983333468437195, 0.7826666831970215, 0.8003333210945129]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [32, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [16, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7788571715354919, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.279677249027706, 2.20896969205589, 2.0883416116765114, 1.8680433234707428, 1.5932207845536206, 1.3662978599194633, 1.2192468600675588, 1.1214106392315617, 1.0572056905893585, 1.0035292592739558, 0.9584910929746254, 0.92446759292368, 0.8884835491138222, 0.8775683219847568, 0.8462726702748068, 0.8276346364372111, 0.8029333147091274, 0.8103160369019892, 0.7832702565360079, 0.7869493052975503, 0.7596263833931487, 0.7548744144330738, 0.7426192158988879, 0.7426405466700338, 0.7281483053421033, 0.7200870315365079, 0.7231257544406543, 0.7136014255518769, 0.6952416528217576, 0.6905883424364896, 0.6882337123222513, 0.6841680800925787, 0.685977104530201, 0.6723588270171759, 0.6775162057586239, 0.6697905654007213, 0.6559285701478493, 0.6533200483060139, 0.6553042506607941, 0.6462391221118625, 0.6444662563820651], "accuracy": [0.15110288560390472, 0.28305375576019287, 0.38687095046043396, 0.43930789828300476, 0.49887728691101074, 0.5473517179489136, 0.5798441171646118, 0.6106194853782654, 0.6289790272712708, 0.6472064256668091, 0.6622639298439026, 0.6758684515953064, 0.684982180595398, 0.6900013089179993, 0.6930392384529114, 0.7059833407402039, 0.7091533541679382, 0.7008321285247803, 0.7140403985977173, 0.7173424959182739, 0.7240787148475647, 0.7300224304199219, 0.7277770638465881, 0.7343811988830566, 0.7339849472045898, 0.7372870445251465, 0.7338528633117676, 0.7386078238487244, 0.7433628439903259, 0.746268630027771, 0.7464007139205933, 0.7499669790267944, 0.7512878179550171, 0.752740740776062, 0.748249888420105, 0.7561748623847961, 0.7561748623847961, 0.7621186375617981, 0.7565711140632629, 0.7629110813140869, 0.7598732113838196], "val_loss": [1.9164564950125558, 1.8301841872079032, 1.6669515201023646, 1.4033815179552351, 1.1381071976252966, 0.9600628103528704, 0.8528682504381452, 0.7829120329448155, 0.7383228370121547, 0.706484351839338, 0.6776411022458758, 0.6573600939341954, 0.6402855770928519, 0.6283653633935111, 0.6124688897814069, 0.5991990566253662, 0.5904441901615688, 0.5844946759087699, 0.5711513928004673, 0.5687799964632306, 0.5553076437541417, 0.5531512158257621, 0.5524983746664864, 0.5449534824916294, 0.5377809149878365, 0.5327021905354091, 0.5296170030321393, 0.5226243904658726, 0.5163656643458775, 0.5128718955176217, 0.5088734456471035, 0.5065659284591675, 0.5041817767279488, 0.5094927889960152, 0.5054809876850673, 0.49692133494785856, 0.49377342632838656, 0.4929557187216623, 0.48841093267713276, 0.4879276582172939, 0.4864969423839024], "val_accuracy": [0.3713333308696747, 0.47466665506362915, 0.5329999923706055, 0.5716666579246521, 0.6053333282470703, 0.640333354473114, 0.6696666479110718, 0.6930000185966492, 0.6986666917800903, 0.7053333520889282, 0.7139999866485596, 0.7213333249092102, 0.7253333330154419, 0.7300000190734863, 0.7286666631698608, 0.7419999837875366, 0.734000027179718, 0.7386666536331177, 0.7519999742507935, 0.7459999918937683, 0.7553333044052124, 0.7559999823570251, 0.7543333172798157, 0.762333333492279, 0.7593333125114441, 0.7603333592414856, 0.7639999985694885, 0.7699999809265137, 0.7663333415985107, 0.7710000276565552, 0.7749999761581421, 0.7739999890327454, 0.7799999713897705, 0.7670000195503235, 0.7726666927337646, 0.7826666831970215, 0.7763333320617676, 0.7806666493415833, 0.7806666493415833, 0.7823333144187927, 0.781333327293396]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 3, 6, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0], [5, 7, 3, 4, 9], [4, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.32657143473625183, "mapping_values": [1, 4, 4, 2, 2, 1, 19, 19, 10, 9, 2, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, beta)))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.0251468513084676, 1.7112127463453246, 0.9729377565571597, 0.9789678265689119, 0.8616774233813141, 0.8389777953456878, 0.8385061021604401, 1.0262608265423299, 1.0079564055620545, 2.477439520176706, 2.632562111197992e+25, 3.593643978271565], "accuracy": [0.36626601219177246, 0.45528993010520935, 0.6479989290237427, 0.6553955674171448, 0.683000922203064, 0.6956809163093567, 0.7017567157745361, 0.6373002529144287, 0.6573768258094788, 0.6188086271286011, 0.10553427785634995, 0.09708096832036972], "val_loss": [1.8469159943716866, 0.7805331945419312, 0.6998469829559326, 0.6159852572849819, 0.5598467077527728, 0.603751540184021, 0.5961282253265381, 0.6295908859797886, 0.741890515599932, 150.5184587751116, 3.3329618317740306, 2.651913642883301], "val_accuracy": [0.45133334398269653, 0.6293333172798157, 0.6790000200271606, 0.7350000143051147, 0.7409999966621399, 0.7300000190734863, 0.753000020980835, 0.7236666679382324, 0.7153333425521851, 0.2213333398103714, 0.10000000149011612, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [0, 66, 89, 50, 85, 46], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 9, 3, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 1, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10571428388357162, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3032986627137104, 2.3017603788299015, 2.3018112026106774, 2.3004489794635283, 2.3022450435241892, 2.301342217551561, 2.303193316215915, 2.302103295947866, 2.3019869462011857, 2.3009493514736015, 2.3035428440566106, 2.3005122331312666, 2.3010306568067653, 2.30255979298758, 2.3003816328437936, 2.3011415692809205, 2.3000455708504353, 2.3005101868757056, 2.300614659025086, 2.299444936978551, 2.2997583526394165, 2.3008668641561623, 2.300270523046852, 2.2998012842330255, 2.3001382312502576, 2.2988942522241174, 2.299523627895012, 2.299502408924891, 2.2978706759484435, 2.29916883995032, 2.299153890560615, 2.2986440748948587, 2.2999808003543123, 2.2989947471825234, 2.300257279179777, 2.2995144080145797, 2.2986114954101318, 2.2972055414900443, 2.298791312396707, 2.297631623140022, 2.2988795256334416, 2.296887605260502, 2.2970159637961074, 2.2977185602343044, 2.2974746230413507, 2.2980254578190458, 2.2980802004064285, 2.2980825313723807, 2.299412782213329, 2.2970914003666696, 2.2982909781758685, 2.2992953854214324, 2.2973765801004116, 2.2962204899219176, 2.297038437526271, 2.2972121944737363, 2.2960014808069302, 2.2977837174402613, 2.297326481400574, 2.296236207661234, 2.296260405241805, 2.2975679120335992, 2.296306578332974, 2.29723409245342, 2.295885116007539, 2.2949387901541956, 2.296560322714047, 2.294361563878934, 2.295844230889928, 2.2955511835005304, 2.2938623491326786, 2.295289168000741, 2.2965101565289348, 2.294766737123317, 2.294450305976006, 2.2963498372758275, 2.2964719087534955, 2.294530109407533, 2.293725757173118, 2.2944895221950543, 2.2954608386675477, 2.294223332118522, 2.293382084522391, 2.295926224616981, 2.2939540973003782, 2.294577331338907, 2.293371511661397, 2.2930080745166963, 2.2937282309823774, 2.294067237323947, 2.2926376772877908, 2.2952746467945553, 2.2924273095315457, 2.2938117787602113, 2.2941508208440986, 2.2944100804065024, 2.2935745761442052, 2.2930682819942363, 2.292883856421559, 2.2922820828578505], "accuracy": [0.08902391046285629, 0.09338264167308807, 0.09509972482919693, 0.09866596013307571, 0.09113723784685135, 0.09391097724437714, 0.0886276587843895, 0.0866464152932167, 0.09113723784685135, 0.09325055778026581, 0.08994849026203156, 0.09351472556591034, 0.09126931428909302, 0.09325055778026581, 0.09747721254825592, 0.09325055778026581, 0.09959053993225098, 0.09232597798109055, 0.09311848133802414, 0.09972262382507324, 0.09417514503002167, 0.08875974267721176, 0.09245806187391281, 0.09602430462837219, 0.09338264167308807, 0.09787346422672272, 0.09496764093637466, 0.10038304328918457, 0.10170386731624603, 0.10434553027153015, 0.0952318087220192, 0.09721305221319199, 0.10408136248588562, 0.09747721254825592, 0.09470347315073013, 0.09972262382507324, 0.09708096832036972, 0.09945846349000931, 0.09549596905708313, 0.10196803510189056, 0.1010434553027153, 0.10289261490106583, 0.10249637067317963, 0.10328886657953262, 0.10315678268671036, 0.10487385839223862, 0.10038304328918457, 0.10355303436517715, 0.09615638852119446, 0.1002509593963623, 0.10513802617788315, 0.10196803510189056, 0.09826971590518951, 0.10077928751707077, 0.09932637959718704, 0.10421344637870789, 0.10460969805717468, 0.10619468986988068, 0.10672302544116974, 0.10302469879388809, 0.09998679161071777, 0.10289261490106583, 0.1088363528251648, 0.1002509593963623, 0.10949676483869553, 0.11372341960668564, 0.10342095047235489, 0.10685510188341141, 0.10566636174917221, 0.10632677376270294, 0.10936468094587326, 0.10474177449941635, 0.10540219396352768, 0.10566636174917221, 0.11134592443704605, 0.10513802617788315, 0.1080438494682312, 0.11240258812904358, 0.10751552134752274, 0.10936468094587326, 0.11134592443704605, 0.11161009222269058, 0.11372341960668564, 0.10579843819141388, 0.11728965491056442, 0.10830801725387573, 0.10513802617788315, 0.11372341960668564, 0.11187426000833511, 0.11438383162021637, 0.11332716792821884, 0.10487385839223862, 0.11927089840173721, 0.11240258812904358, 0.10962884873151779, 0.11147800832986832, 0.10355303436517715, 0.11834631860256195, 0.11557257920503616, 0.11530841141939163], "val_loss": [1.9713503973824638, 1.9712603432791573, 1.971170152936663, 1.971081324986049, 1.970991815839495, 1.9709019660949707, 1.970811230795724, 1.9707211085728236, 1.9706314631870814, 1.9705420902797155, 1.9704525811331612, 1.970362935747419, 1.9702726091657365, 1.970182010105678, 1.9700923647199358, 1.9700022424970354, 1.9699125289916992, 1.9698221342904227, 1.969733374459403, 1.9696441377912248, 1.9695546967642648, 1.9694654600960868, 1.9693756103515625, 1.9692860330854143, 1.9691973413739885, 1.9691081728254045, 1.9690185955592565, 1.9689301082066126, 1.9688398497445243, 1.9687501362391882, 1.9686597415379115, 1.968569619315011, 1.968480450766427, 1.9683916909354073, 1.968304021017892, 1.9682156699044364, 1.9681265013558524, 1.9680376734052385, 1.9679482323782784, 1.9678597450256348, 1.9677700996398926, 1.9676814760480608, 1.967592648097447, 1.9675030708312988, 1.9674145153590612, 1.9673254149300712, 1.9672362463814872, 1.9671461922781808, 1.9670557975769043, 1.9669670377458846, 1.9668778010777064, 1.9667891093662806, 1.9666998045785087, 1.9666115215846471, 1.9665238516671317, 1.966435432434082, 1.9663466726030623, 1.9662588664463587, 1.9661709921700614, 1.9660828454153878, 1.9659937449863978, 1.9659051213945662, 1.9658160209655762, 1.9657273292541504, 1.9656387737819128, 1.965550354548863, 1.9654622077941895, 1.9653737204415458, 1.9652858461652483, 1.9651970182146346, 1.9651087352207728, 1.965019907270159, 1.9649318286350794, 1.9648438862391882, 1.964754581451416, 1.9646660259791784, 1.9645772661481584, 1.9644893918718611, 1.9644014494759696, 1.9643139157976424, 1.9642254965645927, 1.9641364642551966, 1.9640480450221471, 1.9639600345066615, 1.9638721602303642, 1.9637839453560966, 1.9636963435581751, 1.9636074474879675, 1.9635184151785714, 1.963430540902274, 1.9633418491908483, 1.9632538386753626, 1.9631659643990653, 1.963078839438302, 1.9629908970424108, 1.9629028865269251, 1.9628150122506278, 1.9627277510506767, 1.9626400130135673, 1.9625526836940221], "val_accuracy": [0.03533333167433739, 0.03633333370089531, 0.03700000047683716, 0.03733333200216293, 0.03766666725277901, 0.03799999877810478, 0.038333334028720856, 0.039000000804662704, 0.03999999910593033, 0.0403333343565464, 0.0403333343565464, 0.04066666588187218, 0.041999999433755875, 0.04266666620969772, 0.04399999976158142, 0.04466666653752327, 0.04466666653752327, 0.04533333331346512, 0.045666664838790894, 0.046666666865348816, 0.04699999839067459, 0.04800000041723251, 0.04833333194255829, 0.04833333194255829, 0.04899999871850014, 0.049666665494441986, 0.05066666752099991, 0.05166666582226753, 0.05233333259820938, 0.05366666615009308, 0.05400000140070915, 0.05400000140070915, 0.055666666477918625, 0.056333333253860474, 0.05666666850447655, 0.05766666680574417, 0.05766666680574417, 0.057999998331069946, 0.058666665107011795, 0.05966666713356972, 0.061000000685453415, 0.061666667461395264, 0.06199999898672104, 0.06233333423733711, 0.06300000101327896, 0.06333333253860474, 0.06433333456516266, 0.06466666609048843, 0.06466666609048843, 0.06533333659172058, 0.0663333311676979, 0.0676666647195816, 0.06833333522081375, 0.06933332979679108, 0.06966666877269745, 0.070333331823349, 0.070333331823349, 0.07100000232458115, 0.07133333384990692, 0.07199999690055847, 0.07266666740179062, 0.07266666740179062, 0.07333333045244217, 0.07400000095367432, 0.07366666942834854, 0.07433333247900009, 0.07500000298023224, 0.07500000298023224, 0.07566666603088379, 0.07766667008399963, 0.07833333313465118, 0.07866666465997696, 0.0793333351612091, 0.07966666668653488, 0.08033332973718643, 0.08100000023841858, 0.08166666328907013, 0.0833333358168602, 0.0833333358168602, 0.08500000089406967, 0.08533333241939545, 0.08533333241939545, 0.08666666597127914, 0.08733333647251129, 0.08799999952316284, 0.08866667002439499, 0.08866667002439499, 0.08933333307504654, 0.08966666460037231, 0.09166666865348816, 0.09233333170413971, 0.09366666525602341, 0.09466666728258133, 0.0949999988079071, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.0963333323597908, 0.09700000286102295, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 2, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 18, 18, 10, 8, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.sqrt(tf.math.add(beta, beta)))), tf.math.add(beta, grad))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [5, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [0, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08347642421722412, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [6, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [80, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302180339474137, 2.3025858042624647, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 74, 89, 50, 85, 46], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 4, 8, 4, 2, 4, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 18, 18, 10, 8, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.pow(beta, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(grad)))))), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), grad))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 3, 8, 2, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [0, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3025795807219325, 2.3027686294925496, 2.3027214847141964, 2.30275013937753, 2.3026978546649457, 2.3027260850811393], "accuracy": [0.09100515395402908, 0.09840179979801178, 0.0944393053650856, 0.09747721254825592, 0.09813763201236725, 0.09602430462837219], "val_loss": [1.973625932421003, 1.973628316606794, 1.97364228112357, 1.9736551557268416, 1.9736545426504952, 1.9736393519810267], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.09733333438634872, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [12, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [9, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302447243735712, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.302447243735712, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [90, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 4, 6, 2, 1, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08347642421722412, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [5, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [54, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [16, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.08257143199443817, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.302431163692109, 2.29988724923074, 2.299843662088384, 2.2990734818085325, 2.3001903571535833, 2.299607520908995, 2.3009971814022685, 2.300963059046076, 2.3009312227181375, 2.300433747473331, 2.301489027657167, 2.300143541613936, 2.3005314980200677, 2.3018314991455826, 2.300987335385711, 2.3010415620555684, 2.301114503402972, 2.300837749377407], "accuracy": [0.09140139818191528, 0.09576013684272766, 0.09840179979801178, 0.09800554811954498, 0.09047681838274002, 0.09813763201236725, 0.09509972482919693, 0.09074098616838455, 0.09681680053472519, 0.10077928751707077, 0.0944393053650856, 0.0952318087220192, 0.09338264167308807, 0.08955223858356476, 0.09232597798109055, 0.09655263274908066, 0.09457138925790787, 0.09708096832036972], "val_loss": [1.9701690673828125, 1.9697716576712472, 1.9698331696646554, 1.9702415466308594, 1.970442431313651, 1.9707935878208704, 1.9710357529776437, 1.9713410649980818, 1.9716074807303292, 1.971787929534912, 1.9719063895089286, 1.9720700808933802, 1.9721882002694267, 1.9722444670540946, 1.9722565923418318, 1.9722657203674316, 1.9723164694649833, 1.972353799002511], "val_accuracy": [0.05000000074505806, 0.05766666680574417, 0.06666667014360428, 0.06566666811704636, 0.06266666948795319, 0.06466666609048843, 0.06566666811704636, 0.0689999982714653, 0.06800000369548798, 0.06966666877269745, 0.07066666334867477, 0.07100000232458115, 0.07500000298023224, 0.07433333247900009, 0.07133333384990692, 0.0729999989271164, 0.07000000029802322, 0.06933332979679108]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [86, 66, 89, 50, 85, 46], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 4, 6, 2, 1, 8, 0, 5, 6, 8, 5, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 3, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.07085714489221573, "mapping_values": [1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3028182128102097, 2.300450888890569, 2.3001553215260646, 2.298919077672821, 2.300228440703308, 2.299406254752878, 2.3008206587866895, 2.3003022502583756, 2.3000120386361225, 2.2991955365644645, 2.300563143008515, 2.29872756809874, 2.2990893716148304], "accuracy": [0.09113723784685135, 0.0956280529499054, 0.09589222073554993, 0.1006472036242485, 0.09298639744520187, 0.09919429570436478, 0.09351472556591034, 0.09166556596755981, 0.09879804402589798, 0.1002509593963623, 0.09893012791872025, 0.09747721254825592, 0.09800554811954498], "val_loss": [1.9705851418631417, 1.9700540815080916, 1.9697304453168596, 1.9698125294276647, 1.969815390450614, 1.969815390450614, 1.9697192055838448, 1.9697880063738142, 1.969827720097133, 1.9699343272617884, 1.9700114386422294, 1.9701724733625139, 1.9703622545514787], "val_accuracy": [0.04500000178813934, 0.05066666752099991, 0.054999999701976776, 0.05766666680574417, 0.060333333909511566, 0.06599999964237213, 0.06966666877269745, 0.07133333384990692, 0.070333331823349, 0.07066666334867477, 0.07133333384990692, 0.06733333319425583, 0.06866666674613953]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 4, 4, 2, 2, 0, 18, 18, 10, 8, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, beta)))), grad)), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.3033386921255956, 2.301897935139237, 2.3020459479817057, 2.3007766101747977, 2.3026719189685303, 2.3018643101208625], "accuracy": [0.08889182657003403, 0.09311848133802414, 0.0944393053650856, 0.09813763201236725, 0.09034473448991776, 0.09285431355237961], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [32, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 2, 6, 2, 4, 8, 8, 3, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [16, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 1, 1, 0, 16, 16, 9, 7, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.sqrt(alpha), grad)), tf.math.add(beta, tf.math.sqrt(grad)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), tf.math.add(beta, grad))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303961497350785, 2.304231884677601, 2.3063252560450906, 2.3068692671892084, 2.3125785887595636, 2.315396462953039], "accuracy": [0.0866464152932167, 0.08889182657003403, 0.08360850811004639, 0.08651433140039444, 0.0812310129404068, 0.07885351777076721], "val_loss": [1.9726269585745675, 1.9741501126970564, 1.9759855270385742, 1.9776983942304338, 1.980428900037493, 1.983175618307931], "val_accuracy": [0.028999999165534973, 0.023666666820645332, 0.020666666328907013, 0.01966666616499424, 0.019999999552965164, 0.0273333340883255]}}]