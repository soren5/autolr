[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 6, 2, 3, 3, 9, 6, 3, 4, 3, 5, 2, 9, 2, 5, 1, 2, 4, 6, 9, 3, 9, 9], [2, 3, 0, 0, 3, 1, 3, 1, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 35, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.6642857193946838, "mapping_values": [1, 2, 2, 1, 1, 0, 33, 33, 19, 14, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), tf.math.square(tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(alpha))))), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.7512733717762075, 2.2198547083294513, 2.27620892388678, 2.300301557896616, 2.3046966600159866, 2.4523693121120425, 2.1496652466446857, 1.9239580196994817, 1.6053934121538131, 1.5888518791755493, 1.3044685977655648, 1.0719583226768112, 0.9965606190902903, 0.9115711868777645, 0.910364639600034, 0.84957039771126, 0.8436585000603348, 0.8142274475494443, 0.7508914512791859, 0.7764947191048072, 0.7798604803503528, 0.7724903022860334, 0.708408350611344, 0.718765082281846, 0.7168887725060311, 0.6980330614192752, 0.6970340260944787, 0.6563700846692968, 0.6641003881872543, 0.6888075863932417, 0.6752462308121207, 0.6610236177827389, 0.6249417469895449], "accuracy": [0.1958790123462677, 0.18253862857818604, 0.12759213149547577, 0.15480121970176697, 0.10038304328918457, 0.19099193811416626, 0.23616431653499603, 0.3695680797100067, 0.4496103525161743, 0.4581957459449768, 0.5352001190185547, 0.5997886657714844, 0.6247523427009583, 0.644300639629364, 0.6498481035232544, 0.659490168094635, 0.6728305220603943, 0.6733588576316833, 0.6985867023468018, 0.6910579800605774, 0.6907938122749329, 0.695813000202179, 0.7128516435623169, 0.7117950320243835, 0.7065116763114929, 0.7157574892044067, 0.7112666964530945, 0.7285695672035217, 0.7280412316322327, 0.7205125093460083, 0.7255316376686096, 0.7320036888122559, 0.7432307600975037], "val_loss": [1.9717176301138741, 1.954101834978376, 1.9724616323198592, 1.980137484414237, 1.9731574058532715, 1.9911826678684779, 1.4805069650922502, 1.497692653111049, 1.4577245031084334, 1.0599168709346227, 0.9541004044669015, 0.7656065055302211, 0.74002548626491, 0.7905505384717669, 0.6750512974602836, 0.6500586441584996, 0.6400288343429565, 0.62687805720738, 0.6107947145189557, 0.6870994738170079, 0.6411258833748954, 0.6178703478404454, 0.5996653522763934, 0.6086259058543614, 0.6168631144932338, 0.5751775673457554, 0.592638373374939, 0.5710542372294835, 0.5893022673470634, 0.5887242385319301, 0.5600496871130807, 0.5948502676827567, 0.5714150496891567], "val_accuracy": [0.09566666930913925, 0.17266666889190674, 0.10366666316986084, 0.10366666316986084, 0.09799999743700027, 0.10233332961797714, 0.4013333320617676, 0.44433334469795227, 0.4189999997615814, 0.5576666593551636, 0.6163333058357239, 0.6643333435058594, 0.6570000052452087, 0.6610000133514404, 0.6903333067893982, 0.7073333263397217, 0.7016666531562805, 0.7096666693687439, 0.7163333296775818, 0.6773333549499512, 0.7049999833106995, 0.7096666693687439, 0.7236666679382324, 0.7289999723434448, 0.7093333601951599, 0.7393333315849304, 0.7329999804496765, 0.7396666407585144, 0.721666693687439, 0.734333336353302, 0.7356666922569275, 0.718999981880188, 0.7369999885559082]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 5, 9, 6, 8, 2, 0, 5, 2, 9, 2, 5, 8, 2, 4, 6, 6, 3, 9, 9, 6, 8, 8, 9], [3, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 93, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.42914286255836487, "mapping_values": [1, 2, 2, 1, 1, 0, 38, 38, 28, 10, 5, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.square(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad)))))), tf.math.square(tf.math.add(beta, beta)))))), tf.math.sqrt(tf.math.add(grad, tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, grad)))), tf.math.add(beta, alpha))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.7513127284767354, 2.2184674006883953, 2.365491401753988, 2.2640560149768594, 2.3038283821897516, 2.244129837779573, 2.2641594258155866, 2.283766696261314, 2.2872273944325183, 2.304195408020604, 2.30354684222061], "accuracy": [0.19535067677497864, 0.1798969805240631, 0.1320829540491104, 0.16259410977363586, 0.10051512718200684, 0.1670849323272705, 0.13538502156734467, 0.1418570876121521, 0.13221503794193268, 0.09655263274908066, 0.09840179979801178], "val_loss": [1.9719153131757463, 1.9706419536045618, 1.919971125466483, 1.97480194909232, 1.971663202558245, 1.3547024386269706, 1.9730360167367118, 1.7259998321533203, 1.975029672895159, 1.9745995657784599, 1.9734952109200614], "val_accuracy": [0.09566666930913925, 0.11999999731779099, 0.2160000056028366, 0.10366666316986084, 0.0949999988079071, 0.44200000166893005, 0.10966666787862778, 0.2613333463668823, 0.10233332961797714, 0.09666666388511658, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 6, 5, 4, 8, 2, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 1, 4, 1, 9, 3, 9, 9], [0, 3, 1, 3, 1, 1, 3, 3, 1, 3, 3, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 94, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [3, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.3442857265472412, "mapping_values": [1, 2, 2, 1, 1, 0, 31, 31, 21, 10, 4, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.square(tf.math.sqrt(alpha)), tf.math.subtract(alpha, grad))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.7514578154877176, 2.209936254390746, 2.349144328775785, 2.279497340118817, 2.247409867698711, 2.626695644586251, 2.307402795158782, 2.3034763879401887, 2.3030358415474397], "accuracy": [0.1950865089893341, 0.18518029153347015, 0.11900673806667328, 0.1348566859960556, 0.14568749070167542, 0.17474573850631714, 0.09998679161071777, 0.09945846349000931, 0.09549596905708313], "val_loss": [1.9720219884599959, 2.041034766605922, 1.9744486127580916, 1.5127950055258614, 1.9746009281703405, 1.9832141058785575, 1.9745565141950334, 1.9736899648393904, 1.9735850606645857], "val_accuracy": [0.09566666930913925, 0.289000004529953, 0.10233332961797714, 0.33933332562446594, 0.10366666316986084, 0.0949999988079071, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 5, 4, 8, 4, 3, 6, 8, 4, 2, 5, 5, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [0, 3, 0, 3, 3, 0, 1, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 35, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [3, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.3179999887943268, "mapping_values": [1, 2, 2, 1, 1, 0, 25, 25, 16, 9, 4, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.square(alpha)))))))), tf.math.square(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.square(grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.751313533828306, 2.2193529960297007, 2.2944658684960415, 2.2215210070085405, 2.614523060585388, 2.303802612325094, 2.3030855718967134, 2.3029022116970315, 2.3022892365539396], "accuracy": [0.19535067677497864, 0.17857614159584045, 0.11042134463787079, 0.20235107839107513, 0.11808215826749802, 0.09734513610601425, 0.10117553919553757, 0.09985470771789551, 0.10276053100824356], "val_loss": [1.9719202859061105, 1.9796314239501953, 1.7663358279636927, 2.566178458077567, 1.9751997675214494, 1.9738610131399972, 1.9735166004725866, 1.9732532501220703, 1.9710194042750768], "val_accuracy": [0.09566666930913925, 0.10233332961797714, 0.2173333317041397, 0.28433331847190857, 0.0949999988079071, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10333333164453506]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 6, 0, 3, 4, 9, 6, 4, 4, 3, 5, 2, 6, 2, 5, 1, 2, 4, 6, 9, 3, 9, 9], [0, 1, 0, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 93, 5, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [58, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.2785714268684387, "mapping_values": [1, 2, 2, 1, 1, 0, 25, 25, 14, 11, 3, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))))), tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.add(grad, alpha))), tf.math.divide_no_nan(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.7513136283013924, 2.219168976124456, 2.2900160391254194, 2.5734899172205354, 2.303108829344111, 2.20669790820171, 2.2823646432609292, 2.2705214883610085, 2.3040700802760843, 2.3030317898801824, 2.3029515479675706, 2.302960801071038], "accuracy": [0.19535067677497864, 0.17831197381019592, 0.1150442510843277, 0.13842293620109558, 0.10315678268671036, 0.160084530711174, 0.1402720957994461, 0.14093250036239624, 0.09893012791872025, 0.09985470771789551, 0.09866596013307571, 0.10157178342342377], "val_loss": [1.9719202859061105, 1.9795870780944824, 2.973964418683733, 1.9752803530011858, 1.9701665469578333, 1.975494384765625, 1.5950092928750175, 1.9745323998587472, 1.9737804276602608, 1.9739103317260742, 1.9737483433314733, 1.973621164049421], "val_accuracy": [0.09566666930913925, 0.10233332961797714, 0.2433333396911621, 0.10366666316986084, 0.0949999988079071, 0.10066666454076767, 0.27799999713897705, 0.10233332961797714, 0.10366666316986084, 0.09666666388511658, 0.10066666454076767, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 6, 0, 4, 8, 2, 9, 6, 8, 4, 2, 5, 2, 9, 9, 5, 8, 1, 4, 1, 9, 3, 9, 9], [3, 3, 0, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 35, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [71, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.2540000081062317, "mapping_values": [1, 2, 2, 1, 1, 0, 21, 21, 15, 6, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.sqrt(tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(grad)))))))), tf.math.add(beta, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.751456988060936, 2.1978491863570175, 2.237924272169164, 2.436777986130458, 2.307862392521774, 2.3041379356963714, 2.3033667591348412, 2.3032440496489293], "accuracy": [0.19535067677497864, 0.18874652683734894, 0.17091533541679382, 0.17593449354171753, 0.10236428678035736, 0.09470347315073013, 0.09602430462837219, 0.09126931428909302], "val_loss": [1.9720539365495955, 1.976484979901995, 1.9714703559875488, 1.983776569366455, 1.97473110471453, 1.974034105028425, 1.9738212312970842, 1.9736230032784599], "val_accuracy": [0.09566666930913925, 0.0949999988079071, 0.14666666090488434, 0.10366666316986084, 0.10366666316986084, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [2, 2, 6, 2, 3, 3, 1, 6, 8, 2, 3, 5, 2, 9, 2, 6, 1, 2, 4, 2, 5, 3, 9, 9, 0, 7, 6, 8, 2, 3, 9], [0, 3, 1, 3, 1, 1, 3, 3, 0, 3, 3, 3, 1, 4, 0, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 15, 6, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [3, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.23914285004138947, "mapping_values": [1, 2, 2, 1, 1, 0, 50, 50, 31, 19, 8, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.multiply(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))))), alpha), tf.math.add(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(alpha, tf.math.subtract(grad, grad)), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha))))))), tf.math.square(tf.math.multiply(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), grad)))), tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.7513118200865185, 2.2134941098334497, 2.925676729322944, 2.304700828955835, 2.3007567783530045, 3.0050645079579352, 2.312552976192595], "accuracy": [0.19535067677497864, 0.18253862857818604, 0.1426495909690857, 0.09932637959718704, 0.11557257920503616, 0.14674416184425354, 0.09681680053472519], "val_loss": [1.971893378666469, 1.8324817248753138, 1.9757507869175501, 1.9732932363237654, 1.9577016830444336, 1.9891886711120605, 1.9764578001839774], "val_accuracy": [0.09566666930913925, 0.2916666567325592, 0.10366666316986084, 0.10366666316986084, 0.10066666454076767, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 6, 5, 4, 8, 2, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 1, 4, 1, 9, 3, 9, 9], [0, 3, 1, 3, 1, 1, 3, 3, 1, 3, 3, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 93, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.20428571105003357, "mapping_values": [1, 2, 2, 1, 1, 0, 19, 19, 12, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(alpha, grad))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha))))))), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.7513136283013924, 2.219342586843329, 2.2944793110400177, 2.2322801328401334, 2.3099414758741452, 2.3039550876352908, 2.3030900942603783, 2.302831865745749], "accuracy": [0.19535067677497864, 0.17831197381019592, 0.11240258812904358, 0.17870822548866272, 0.09945846349000931, 0.09774138033390045, 0.0948355570435524, 0.09998679161071777], "val_loss": [1.9719202859061105, 1.9795910290309362, 1.683868714741298, 1.9877373150416784, 1.9753329413277763, 1.9741180964878626, 1.9736506598336356, 1.9731009347098214], "val_accuracy": [0.09566666930913925, 0.10233332961797714, 0.21299999952316284, 0.10366666316986084, 0.09799999743700027, 0.09799999743700027, 0.10366666316986084, 0.1326666623353958]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 2, 6, 4, 9, 1, 6, 6, 2, 4, 2, 5, 2, 9, 2, 5, 2, 2, 4, 2, 9, 2, 9, 9], [0, 2, 2, 3, 1, 1, 3, 0, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [3, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 8, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 3, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.19914285838603973, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4.13719389007517, 2.346656478454314, 3.126076042817458, 2.4523688573815865, 10.274700000033858, NaN, NaN], "accuracy": [0.20631356537342072, 0.10434553027153015, 0.1674811840057373, 0.09866596013307571, 0.09853387624025345, 0.11979923397302628, 0.09998679161071777], "val_loss": [2.0339245796203613, 1.9884310449872697, 2.083501066480364, 1.980560030255999, 2.0316214561462402, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.10366666316986084, 0.0949999988079071, 0.10366666316986084, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [0, 2, 2, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 93, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [98, 23, 13, 96, 41]], "fitness": -0.19857142865657806, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4.137145731884019, 2.346489457563875, 8.426240229729444, 2.818626402926845, 2.711103054006826, 2.5785286563530163, 2.6322380505406766], "accuracy": [0.20657773315906525, 0.10408136248588562, 0.18491612374782562, 0.09879804402589798, 0.09694888442754745, 0.10077928751707077, 0.10051512718200684], "val_loss": [2.033771583012172, 1.9824604988098145, 2.2569080080304826, 2.3828512600490024, 2.0592117309570312, 2.1925131252833774, 2.3590288843427385], "val_accuracy": [0.0976666659116745, 0.10833333432674408, 0.09700000286102295, 0.09566666930913925, 0.10233332961797714, 0.0949999988079071, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 6, 2, 3, 3, 6, 8, 8, 4, 3, 5, 2, 9, 2, 5, 1, 2, 4, 6, 9, 3, 9, 9], [0, 3, 0, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 35, 30, 51, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [98, 23, 13, 96, 41]], "fitness": -0.1565714329481125, "mapping_values": [1, 2, 2, 1, 1, 0, 22, 22, 12, 10, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.pow(grad, tf.math.add(beta, grad))))))), tf.math.add(beta, alpha))), grad)), tf.math.add(beta, tf.math.multiply(grad, alpha)))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.751562260271394, 2.2856936688436384, 2.6182009623649334, 2.299896815134597, 2.261404819996161, 2.161694568712887, 2.3297233110122266], "accuracy": [0.19535067677497864, 0.15242372453212738, 0.1946902722120285, 0.11993131786584854, 0.19984149932861328, 0.24197596311569214, 0.12336547672748566], "val_loss": [1.9716803005763464, 1.9108501843043737, 1.975559983934675, 1.9611125673566545, 1.9656940868922643, 2.036430222647531, 1.9516241891043526], "val_accuracy": [0.09566666930913925, 0.296999990940094, 0.11400000005960464, 0.15033333003520966, 0.10633333027362823, 0.2240000069141388, 0.17000000178813934]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 6, 5, 4, 8, 2, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 1, 4, 1, 9, 3, 9, 9], [0, 3, 0, 3, 1, 1, 3, 3, 1, 3, 3, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 94, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.1502857208251953, "mapping_values": [1, 2, 2, 1, 1, 0, 31, 31, 21, 10, 5, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.square(grad), tf.math.add(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), alpha))), tf.math.add(tf.math.square(tf.math.sqrt(tf.math.subtract(alpha, grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.7513132502201008, 2.2260489823433702, 2.296018420209218, 2.5115095042376203, 2.2837162013728434, 2.3057037434321606, 2.3036448175818016, 2.3031032351832805, 2.303343503324977], "accuracy": [0.1954827606678009, 0.17857614159584045, 0.11002509295940399, 0.15057456493377686, 0.19191652536392212, 0.09813763201236725, 0.10051512718200684, 0.09457138925790787, 0.09774138033390045], "val_loss": [1.971893310546875, 1.9788011142185755, 1.9712629999433244, 1.9714220591953822, 1.9786978449140276, 1.9746769496372767, 1.973926612309047, 1.9735973221915108, 1.9735808372497559], "val_accuracy": [0.09566666930913925, 0.10366666316986084, 0.10366666316986084, 0.14100000262260437, 0.0949999988079071, 0.10366666316986084, 0.10366666316986084, 0.10199999809265137, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 6, 5, 4, 8, 2, 9, 6, 5, 9, 2, 5, 2, 9, 2, 5, 8, 1, 4, 1, 9, 3, 9, 9], [0, 3, 1, 3, 1, 1, 3, 3, 1, 3, 3, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 94, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [3, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 12, 5, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.pow(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07740060985088348, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [3, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [98, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 12, 12, 7, 5, 1, 1, 1, 1, 0, 1, 7, 3, 4, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(grad)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.pow(tf.math.multiply(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 0, 6, 2, 3, 3, 4, 6, 8, 4, 4, 5, 2, 9, 2, 5, 1, 2, 4, 6, 9, 3, 9, 9], [1, 2, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [37, 19, 16, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [3, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 26, 26, 15, 11, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(alpha)), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), alpha)))), tf.math.square(grad))))), tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, grad)), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08598599582910538, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 3, 2, 3, 8, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [0, 0, 2, 3, 2, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [98, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.3032052476313827, 2.304304710578893, 2.306698494363124, 2.3070768050671315, 2.3087330471019167, 2.3103605980067567, 2.31195538457453], "accuracy": [0.0944393053650856, 0.09536388516426086, 0.09628847241401672, 0.10408136248588562, 0.09906221181154251, 0.1010434553027153, 0.10077928751707077], "val_loss": [1.9738850593566895, 1.974170480455671, 1.976592676980155, 1.9763637270246233, 1.9801904814583915, 1.979780673980713, 1.978571551186698], "val_accuracy": [0.09799999743700027, 0.10366666316986084, 0.0949999988079071, 0.10233332961797714, 0.0949999988079071, 0.09566666930913925, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 6, 2, 3, 3, 9, 6, 4, 4, 2, 5, 5, 9, 2, 5, 1, 2, 4, 6, 4, 3, 9, 9], [0, 3, 1, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [91, 35, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 33, 33, 20, 13, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.square(tf.math.add(beta, alpha))), tf.math.add(beta, grad))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), alpha), tf.math.add(tf.math.square(alpha), tf.math.subtract(grad, grad)))), tf.math.add(beta, alpha)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, alpha)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [92121178.10153227, 1823317799.6967375, 8371110696.13631, 23137453657.199314, 50585661326.387535, 92754794121.34937], "accuracy": [0.1026284471154213, 0.09668471664190292, 0.10038304328918457, 0.09985470771789551, 0.1010434553027153, 0.09708096832036972], "val_loss": [353571172.5714286, 2826568411.428571, 9537417508.571428, 22604607488.0, 44146286592.0, 76281317668.57143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 6, 2, 3, 8, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [0, 0, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [69, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [98, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 12, 12, 7, 5, 3, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.multiply(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, alpha))))))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 6, 2, 3, 3, 9, 6, 4, 2, 3, 5, 2, 6, 2, 5, 3, 2, 4, 6, 9, 3, 9, 9], [0, 1, 0, 3, 0, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 18, 93, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.08028571307659149, "mapping_values": [1, 2, 2, 1, 1, 0, 26, 26, 14, 12, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(grad, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.multiply(grad, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.7513223644481313, 2.2970487933825856, 2.3103208787815053, 2.309887312816166, 2.304309300522306, 2.3038385155934384, 2.303243938076214, 2.3029969479854726, 2.303196622994377], "accuracy": [0.19561484456062317, 0.18412363529205322, 0.10500594228506088, 0.12336547672748566, 0.09906221181154251, 0.09760929644107819, 0.09377889335155487, 0.09945846349000931, 0.09391097724437714], "val_loss": [1.9719535963875907, 1.9940185546875, 1.9730258669172014, 1.9740545409066337, 1.973773751940046, 1.973867552621024, 1.9737954139709473, 1.9736042022705078, 1.973574434007917], "val_accuracy": [0.09566666930913925, 0.0949999988079071, 0.10233332961797714, 0.10366666316986084, 0.09799999743700027, 0.09799999743700027, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 6, 2, 3, 8, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [0, 3, 0, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [0, 19, 74, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [98, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3018585546000003, 2.3033967203924512, 2.301302668314883, 2.3023538507915773, 2.3017567898288394, 2.303479194042784], "accuracy": [0.08691058307886124, 0.08638224750757217, 0.09338264167308807, 0.08915598690509796, 0.09272222965955734, 0.08875974267721176], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]