[{"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.834857165813446, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9423843865160928, 1.1483374277378007, 0.8490477788717582, 0.7266276438222695, 0.6466811490946945, 0.6003884757435821, 0.5565917961995175, 0.5301174446379489, 0.5055842497731087, 0.4732478070276414, 0.46777420267689074, 0.44774236096571846, 0.42758266394164474, 0.4242341698609512, 0.398175300726439, 0.39169475975100865, 0.3786630585460993, 0.3623840055957273, 0.35448720338337963, 0.339815804089506, 0.33732115936600504, 0.32839795530212396, 0.3269330909215637, 0.305727303811446, 0.30006638953415254, 0.2968851020150039, 0.28605032480073217, 0.2810970349964323, 0.27438139834573727, 0.2669725739141859, 0.26389508080040036, 0.2534198239160299, 0.25254984564312605, 0.2376059518179574, 0.24168780705263082, 0.24097813855206662, 0.23990517802730355, 0.22420964912888933, 0.22484299570436192, 0.21356351490167816, 0.20861894621895982, 0.2025497600272851, 0.19621429291139614, 0.18464526563012887, 0.18325960128936533, 0.1801920580613599, 0.1781961616035686, 0.17267729160516743, 0.1757886675091121, 0.16745300929520535, 0.16890730995307462], "accuracy": [0.34605732560157776, 0.6193369626998901, 0.6742834448814392, 0.7185312509536743, 0.7495707273483276, 0.7689869403839111, 0.7824593782424927, 0.8000264167785645, 0.8095363974571228, 0.8204993009567261, 0.8280280232429504, 0.8289526104927063, 0.8385946154594421, 0.8384625315666199, 0.847840428352356, 0.8462554216384888, 0.8569541573524475, 0.8593316674232483, 0.8642187118530273, 0.8735966086387634, 0.8742570281028748, 0.8737286925315857, 0.8780874609947205, 0.8845595121383667, 0.8865407705307007, 0.8877294659614563, 0.8897107243537903, 0.8918240666389465, 0.9000132083892822, 0.8951261639595032, 0.8986923694610596, 0.9031832218170166, 0.9034473896026611, 0.9074098467826843, 0.9052965044975281, 0.9071456789970398, 0.906749427318573, 0.9105798602104187, 0.9122969508171082, 0.9163914918899536, 0.9177123308181763, 0.9177123308181763, 0.9232597947120667, 0.9268260598182678, 0.925901472568512, 0.9297318458557129, 0.9309206008911133, 0.9321093559265137, 0.9323735237121582, 0.9350152015686035, 0.9346189498901367], "val_loss": [0.8866147313799176, 0.6624739680971418, 0.5965543133871896, 0.5258629322052002, 0.4856799670628139, 0.47038495540618896, 0.43721760170800344, 0.4140143735068185, 0.3965261493410383, 0.38590279647282194, 0.37457142557416645, 0.3622188312666757, 0.3553207005773272, 0.3590539949280875, 0.35117171491895405, 0.33702566793986727, 0.3421002285821097, 0.3340833101953779, 0.3322660837854658, 0.321055463382176, 0.3210023556436811, 0.3281229393822806, 0.3273541246141706, 0.32413430724825176, 0.3266563415527344, 0.3241440142904009, 0.31681922503880094, 0.31099390983581543, 0.31849139077322824, 0.3124758856637137, 0.3393681219645909, 0.33673787117004395, 0.32907088313783917, 0.3280862144061497, 0.3367305312837873, 0.33252335446221487, 0.3218581165586199, 0.33411548818860737, 0.33246157850537983, 0.32505957569394794, 0.3242479222161429, 0.3387350525174822, 0.3507077693939209, 0.34109016827174593, 0.3668270877429417, 0.3561990601675851, 0.35671352488654, 0.35172425849097116, 0.3571054935455322, 0.3544048922402518, 0.34345862695149015], "val_accuracy": [0.550000011920929, 0.6819999814033508, 0.7200000286102295, 0.753000020980835, 0.778333306312561, 0.7803333401679993, 0.8026666641235352, 0.8193333148956299, 0.8246666789054871, 0.8303333520889282, 0.8256666660308838, 0.8410000205039978, 0.8476666808128357, 0.8433333039283752, 0.8460000157356262, 0.8573333621025085, 0.8529999852180481, 0.8546666502952576, 0.8550000190734863, 0.8579999804496765, 0.8583333492279053, 0.8576666712760925, 0.8586666584014893, 0.8653333187103271, 0.8600000143051147, 0.8659999966621399, 0.8686666488647461, 0.8690000176429749, 0.8686666488647461, 0.8700000047683716, 0.8646666407585144, 0.874666690826416, 0.8653333187103271, 0.8736666440963745, 0.8646666407585144, 0.8656666874885559, 0.875333309173584, 0.8726666569709778, 0.8686666488647461, 0.8756666779518127, 0.8743333220481873, 0.8759999871253967, 0.8736666440963745, 0.8756666779518127, 0.8686666488647461, 0.8803333044052124, 0.8743333220481873, 0.871999979019165, 0.8700000047683716, 0.875333309173584, 0.8736666440963745]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [2, 1, 2, 6, 2, 7, 4, 8], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 2, 8, 2, 2, 1, 5, 2, 8, 1, 2, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 2, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 4, 2, 6, 3, 1, 3, 8, 5, 4, 8, 3, 1, 5, 2], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.8325714468955994, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 16, 10, 8, 2, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), sigma)))), tf.math.add(sigma, tf.math.sqrt(sigma)))), tf.math.add(sigma, grad))), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.942384588877444, 1.1483489648540968, 0.8490234540044482, 0.7261590918750181, 0.6467822675754712, 0.6025896231259935, 0.5580484250895241, 0.530909740650076, 0.5054130030267227, 0.47386167172144245, 0.470471638324569, 0.44626842491725305, 0.42453082812193, 0.4181951902498737, 0.39947753722688795, 0.3869325918544159, 0.38126691680668745, 0.364951181322781, 0.359128191647922, 0.3524670249766142, 0.338632576827911], "accuracy": [0.34605732560157776, 0.6192048788070679, 0.6742834448814392, 0.719852089881897, 0.7497028112411499, 0.7681944370269775, 0.7829877138137817, 0.8000264167785645, 0.8078193068504333, 0.8185180425643921, 0.8234050869941711, 0.8329150676727295, 0.8391229510307312, 0.8417646288871765, 0.8479725122451782, 0.8521991968154907, 0.8551049828529358, 0.8589354157447815, 0.8621054291725159, 0.8660678863525391, 0.8733324408531189], "val_loss": [0.8866159234728131, 0.6626307794025966, 0.5968344552176339, 0.5261352743421283, 0.48690577915736605, 0.47269519737788607, 0.4373591201645987, 0.414635854107993, 0.3984896455492292, 0.3850988234792437, 0.37293234041758944, 0.3612897906984602, 0.35324013233184814, 0.3586031368800572, 0.35456349168504986, 0.32990722145353046, 0.3421481507165091, 0.3289516738482884, 0.34120372363499235, 0.3190891998154776, 0.32191143717084614], "val_accuracy": [0.550000011920929, 0.6819999814033508, 0.7229999899864197, 0.753333330154419, 0.7763333320617676, 0.7799999713897705, 0.8026666641235352, 0.815666675567627, 0.8216666579246521, 0.8333333134651184, 0.8273333311080933, 0.843666672706604, 0.8473333120346069, 0.8446666598320007, 0.8429999947547913, 0.8629999756813049, 0.8566666841506958, 0.8579999804496765, 0.8529999852180481, 0.859333336353302, 0.859000027179718]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [4, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [98, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.7161405653670765, 25.34560808054035, 216.34878122442828, 1173.1847873658016, 4740.671742207622, 15209.749803939374], "accuracy": [0.09153348207473755, 0.09549596905708313, 0.09655263274908066, 0.09879804402589798, 0.10421344637870789, 0.10289261490106583], "val_loss": [4.312044143676758, 50.82660348074777, 342.6122087751116, 1611.8399135044642, 5720.2001953125, 16461.657366071428], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [3, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 1, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [107280996.72089751, 16393053485.4788, 280131896564.13153, 1944682618190.751, 8567225794994.974, 28473937488666.477], "accuracy": [0.09932637959718704, 0.09628847241401672, 0.09681680053472519, 0.09879804402589798, 0.10408136248588562, 0.10289261490106583], "val_loss": [894571867.4285715, 48193994752.0, 517216815396.5714, 2819580793417.143, 10561456401846.857, 31152793901933.715], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 4, 0, 2, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 6, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 3, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [210818559.46581233, 3402310837.103685, 15040238737.39691, 40422641412.97054, 85172282355.69199, 156802393116.80887], "accuracy": [0.09932637959718704, 0.09628847241401672, 0.09681680053472519, 0.09879804402589798, 0.10408136248588562, 0.10302469879388809], "val_loss": [585892900.5714285, 4684327789.714286, 15806458733.714285, 37463509284.57143, 73166494573.71428, 126426597668.57143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 2, 0, 8, 8, 4, 0, 5, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [3, 3, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 14, 29, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))))))))), alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 2, 0, 8, 2, 9, 9, 8, 2, 3, 1, 2, 6, 3, 9, 5, 8, 1], [0, 0, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8, 5, 4, 7, 3, 1, 5, 2], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3021994408300257, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [3, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [107280996.72089751, 16393053485.4788, 280131896564.13153, 1944682618190.751, 8567225794994.974, 28473937488666.477], "accuracy": [0.09932637959718704, 0.09628847241401672, 0.09681680053472519, 0.09879804402589798, 0.10408136248588562, 0.10289261490106583], "val_loss": [894571867.4285715, 48193994752.0, 517216815396.5714, 2819580793417.143, 10561456401846.857, 31152793901933.715], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 2, 0, 8, 2, 9, 9, 8, 2, 3, 1, 2, 6, 3, 9, 5, 8, 1], [0, 0, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [98, 66, 89, 50, 85, 46], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [5, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 37, 21, 97, 70, 57, 60, 9, 54, 64], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1233340489.4998896, 24003456572.255184, 111760259189.67006, 306627699877.14386, 653906842840.5399, 1213871623151.6343], "accuracy": [0.09932637959718704, 0.09628847241401672, 0.09681680053472519, 0.09879804402589798, 0.10408136248588562, 0.10289261490106583], "val_loss": [4683561984.0, 37457220169.14286, 126406253421.71428, 299611511661.7143, 585158829202.2858, 1011131688082.2858], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 14, 29, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.pow(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, alpha)), alpha)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302230966813875, 2.3026161547177, 2.3026071103997534, 2.3026041339621837, 2.3026135021023793, 2.302609527871562], "accuracy": [0.0944393053650856, 0.09509972482919693, 0.09998679161071777, 0.0948355570435524, 0.09998679161071777, 0.09721305221319199], "val_loss": [1.9736441203526087, 1.9736416680472237, 1.9736430985586983, 1.9736413955688477, 1.9736390113830566, 1.97364228112357], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 0, 1, 1, 0, 2, 2, 0, 2, 3, 2, 0, 2, 2, 0, 1, 2, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [3, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [0, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, alpha)), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021994408300257, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [2, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 8, 2, 4, 0, 1, 3, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 0, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [3, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.pow(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.pow(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, alpha)), alpha))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 1, 1, 0, 2, 2, 0, 2, 3, 2, 0, 2, 2, 0, 1, 2, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [3, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [3, 2, 2, 6, 6, 7, 4], [3, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 14, 29, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [5, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 14, 29, 96, 41, 62]], "fitness": -0.040571428835392, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302490228013812, 2.30331345644326, 2.30308609612787, 2.3027550266907277, 2.301928711699583, 2.3029373544255396], "accuracy": [0.09259014576673508, 0.08717474341392517, 0.09100515395402908, 0.09206181764602661, 0.08955223858356476, 0.09140139818191528], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 3, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 3, 0, 1, 1, 0, 2, 2, 0, 2, 3, 2, 0, 2, 2, 0, 0, 2, 0, 2, 2, 3, 0], [40, 66, 88, 50, 85, 46, 24, 99, 1, 12, 48, 33, 80], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [9, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8, 5, 4, 7, 3, 1, 5, 2], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.040571428835392, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302490228013812, 2.30331345644326, 2.30308609612787, 2.3027550266907277, 2.301928711699583, 2.3029373544255396], "accuracy": [0.09259014576673508, 0.08717474341392517, 0.09100515395402908, 0.09206181764602661, 0.08955223858356476, 0.09140139818191528], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 6, 4, 6, 2, 2, 5, 8, 4, 2, 0, 2, 0, 0, 2, 2, 8, 5, 2, 3, 9, 9, 1, 2, 4, 3, 9, 2, 6, 3, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 5, 1, 2, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [62, 37, 21, 97, 70, 57, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1, 4, 1, 1, 1, 8, 2, 2, 4, 5, 3, 3, 1, 0, 0, 2, 2, 1, 0, 5, 6, 7, 6, 2, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [3, 3, 0, 3, 0, 3, 2, 0, 1, 3, 0, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.040571428835392, "mapping_values": [1, 14, 14, 9, 5, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, alpha)), alpha))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302490228013812, 2.30331345644326, 2.30308609612787, 2.3027550266907277, 2.301928711699583, 2.3029373544255396], "accuracy": [0.09259014576673508, 0.08717474341392517, 0.09100515395402908, 0.09206181764602661, 0.08955223858356476, 0.09140139818191528], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}]