[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [6, 2, 4, 6, 6, 7, 5], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8368571400642395, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0817230202502675, 1.5605487631076143, 1.0725489980461826, 0.8825642000005514, 0.8341757719779075, 0.7743010805062867, 0.7302204587078208, 0.7414415308969715, 0.6940248238884494, 0.6858351462946403, 0.6524693527478017, 0.6148096660833318, 0.5981133841268453, 0.5805748166220457, 0.568513954926507, 0.5815500765428756, 0.5266520048979645, 0.5267670213617213, 0.5261954519695468, 0.5061076950985978, 0.5036885335208906, 0.5009388988122901, 0.4896440626513358, 0.4617017710197871, 0.4645839161120858, 0.45235380148528637, 0.4336929252244982, 0.4596235454791037, 0.42733993975950224, 0.4088333000352338, 0.4056928221733185, 0.3984754408323817, 0.3991731523546356, 0.3881636326024246], "accuracy": [0.3389248549938202, 0.49887728691101074, 0.6213181614875793, 0.6758684515953064, 0.6802271604537964, 0.6979262828826904, 0.7217012047767639, 0.7140403985977173, 0.7395324110984802, 0.7301545143127441, 0.7452120184898376, 0.7578919529914856, 0.7720248103141785, 0.7761194109916687, 0.7847048044204712, 0.7808743715286255, 0.7979130744934082, 0.802800178527832, 0.8041210174560547, 0.8035926818847656, 0.8080834746360779, 0.8144234418869019, 0.8166688680648804, 0.8238013386726379, 0.8249900937080383, 0.8281601071357727, 0.837141752243042, 0.8284242749214172, 0.837537944316864, 0.8450667262077332, 0.8510104417800903, 0.8500858545303345, 0.8475762605667114, 0.8532558679580688], "val_loss": [1.6624066148485457, 0.9639087063925607, 0.739179117338998, 0.6639150721686227, 0.6437726531709943, 0.6349212612424578, 0.6960702453340802, 0.5474411249160767, 0.5492534296853202, 0.5704209293637957, 0.4898014579500471, 0.4862857035228184, 0.4954736573355539, 0.4721423387527466, 0.4342503717967442, 0.44455363920756746, 0.4352926271302359, 0.41760843992233276, 0.4188681500298636, 0.4740372725895473, 0.4042904121535165, 0.4461643866130284, 0.39738341740199495, 0.4210270813533238, 0.38036222968782696, 0.3777392932346889, 0.3766076649938311, 0.3846664769308908, 0.36033796412604197, 0.36305863516671316, 0.3662113036428179, 0.3568990315709795, 0.3756080184664045, 0.37743749788829256], "val_accuracy": [0.4476666748523712, 0.5816666483879089, 0.6866666674613953, 0.6919999718666077, 0.6846666932106018, 0.6986666917800903, 0.6816666722297668, 0.734333336353302, 0.7350000143051147, 0.734333336353302, 0.7753333449363708, 0.777999997138977, 0.7523333430290222, 0.7736666798591614, 0.8103333115577698, 0.8016666769981384, 0.8166666626930237, 0.8176666498184204, 0.8163333535194397, 0.7889999747276306, 0.8133333325386047, 0.7960000038146973, 0.8289999961853027, 0.8119999766349792, 0.8360000252723694, 0.8429999947547913, 0.8349999785423279, 0.831333339214325, 0.8473333120346069, 0.8403333425521851, 0.8416666388511658, 0.8463333249092102, 0.8353333473205566, 0.8349999785423279]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [46, 66, 89, 50, 85, 46], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 6, 2, 6, 8, 4, 1, 6, 5, 2, 9, 2, 8, 2, 0, 0, 2, 2, 2, 4, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 3, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 62, 53, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [6, 2, 4, 2, 6, 7, 8], [4, 0, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8322857022285461, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 4, 5, 3, 13, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, alpha)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))), sigma)), sigma)), sigma)), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1458351153266775, 1.7084857337683608, 1.234092981524676, 0.9260152167947049, 0.8249860170841405, 0.7410701858589536, 0.6800446343412488, 0.6680370505302338, 0.6275915743306076, 0.6177179191515918, 0.5946627033857417, 0.5686879017570031, 0.5493922732950532, 0.5287325359559125, 0.5468871616463793, 0.5118803460647433, 0.5009650475061518, 0.4832054416871326, 0.48377668664298273, 0.4629040636312157, 0.4649310765674542, 0.4493485240730958, 0.4407956845031958, 0.43064553450520926, 0.4188260493568536, 0.4070600605029881, 0.39997622897801005, 0.4195932509435906, 0.4070551455327942, 0.38011653493613046, 0.3636162671328315, 0.3719945142116718, 0.35594763026466114, 0.36175049559756073, 0.35454091305320823, 0.35815025559190933, 0.35062618605401835, 0.33786719159254264, 0.3461669633149502, 0.3233989899452289, 0.3346111522280167, 0.3246475270970339, 0.32219917816162236, 0.30045200983342113, 0.3111149185463705], "accuracy": [0.31079116463661194, 0.4150046110153198, 0.5604279637336731, 0.6516972780227661, 0.6901333928108215, 0.7217012047767639, 0.7405890822410583, 0.7467969655990601, 0.7592127919197083, 0.7630431652069092, 0.770439863204956, 0.7836481332778931, 0.7893276810646057, 0.7987055778503418, 0.7957997918128967, 0.8086118102073669, 0.8072909712791443, 0.8177255392074585, 0.8207634687423706, 0.8226125836372375, 0.8240655064582825, 0.8281601071357727, 0.8392550349235535, 0.8397833704948425, 0.8446704745292664, 0.8470479249954224, 0.8545766472816467, 0.8455950617790222, 0.8485008478164673, 0.8564258217811584, 0.8618412613868713, 0.8607845902442932, 0.8668603897094727, 0.8619733452796936, 0.8710870146751404, 0.8648791313171387, 0.8687095642089844, 0.8747853636741638, 0.8688416481018066, 0.8792761564254761, 0.8709549307823181, 0.8754457831382751, 0.8767666220664978, 0.8916919827461243, 0.8808611631393433], "val_loss": [1.3546293122427804, 1.507890088217599, 0.7139086893626622, 0.6686846017837524, 0.6051948751722064, 0.5549036434718541, 0.5497259753090995, 0.5191765172140939, 0.5029988288879395, 0.5178088290350777, 0.4527614286967686, 0.46759842123304096, 0.45712891646793913, 0.4472924130303519, 0.4331030079296657, 0.4274946706635611, 0.4050236003739493, 0.3892150606427874, 0.40687710898263113, 0.43188466344560894, 0.39572003909519743, 0.37988037722451345, 0.39550422770636423, 0.3765513726643154, 0.35225309644426617, 0.3737465909549168, 0.3497991476740156, 0.357832670211792, 0.3487866691180638, 0.34791455950055805, 0.35269705738340107, 0.3454382504735674, 0.3458588719367981, 0.33879544905253817, 0.3917968273162842, 0.3366558126040867, 0.34696976627622333, 0.33503525597708567, 0.34817791836602346, 0.3253098045076643, 0.33911554302488056, 0.3292633124760219, 0.32719526972089497, 0.34928296293531147, 0.34817235810416086], "val_accuracy": [0.3230000138282776, 0.3779999911785126, 0.6866666674613953, 0.6899999976158142, 0.7163333296775818, 0.7319999933242798, 0.7289999723434448, 0.7570000290870667, 0.781333327293396, 0.7480000257492065, 0.7919999957084656, 0.7876666784286499, 0.7723333239555359, 0.7906666398048401, 0.8059999942779541, 0.809333324432373, 0.824999988079071, 0.8303333520889282, 0.8266666531562805, 0.8023333549499512, 0.8186666369438171, 0.8363333344459534, 0.8320000171661377, 0.8370000123977661, 0.8486666679382324, 0.8389999866485596, 0.8503333330154419, 0.8410000205039978, 0.8543333411216736, 0.8510000109672546, 0.8479999899864197, 0.8513333201408386, 0.8576666712760925, 0.8569999933242798, 0.8343333601951599, 0.8619999885559082, 0.8516666889190674, 0.8523333072662354, 0.8450000286102295, 0.862333357334137, 0.8579999804496765, 0.8613333106040955, 0.8616666793823242, 0.846666693687439, 0.8463333249092102]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 6, 2, 9, 8, 9, 1, 6, 5, 2, 9, 2, 8, 2, 0, 0, 2, 2, 2, 4, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 3, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 62, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [8, 2, 4, 6, 6, 7, 4], [4, 0, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8299999833106995, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 14, 8, 7, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), sigma)))), tf.math.add(sigma, grad))), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0817006401744234, 1.5632028237246975, 1.0967553529158685, 0.9028234498974134, 0.8387923706571392, 0.7998517947174287, 0.7242540747749965, 0.7349566936319719, 0.7173217148072905, 0.6696919644230062, 0.6352845312912608, 0.6221065545173416, 0.5968054925934073, 0.5645595876658204, 0.5988958714471564, 0.5661795380770207, 0.5315457496503246, 0.5220602571043151, 0.5147054348056815, 0.5072201030082109, 0.5015417071397137, 0.5021293723564327, 0.48420692661245973, 0.4561618213498629, 0.47329773429031813, 0.4454114673561534, 0.43867440265655644, 0.45461806679335665, 0.433126269412976, 0.4180205580761813, 0.4071695831520777, 0.39820106808362365, 0.3883191749853087, 0.39079983277548225, 0.4007950763007386, 0.3827235348283528, 0.3787528164492874, 0.36721643572076595, 0.36965705918645375, 0.346876728764583, 0.350027395111931, 0.34299885088647, 0.35133377353686224, 0.3322767278836656, 0.33506430655406877], "accuracy": [0.3387927711009979, 0.4959714710712433, 0.6148461103439331, 0.661471426486969, 0.68101966381073, 0.6921146512031555, 0.7223616242408752, 0.713379979133606, 0.7326641082763672, 0.7360982894897461, 0.7536653280258179, 0.7577598690986633, 0.772288978099823, 0.7819310426712036, 0.7695152759552002, 0.787082314491272, 0.7921014428138733, 0.8031964302062988, 0.8087438941001892, 0.8034605979919434, 0.8086118102073669, 0.8115176558494568, 0.8181217908859253, 0.8293488025665283, 0.8198388814926147, 0.8318583965301514, 0.8342359066009521, 0.8290846943855286, 0.8355567455291748, 0.8453308939933777, 0.8471800088882446, 0.8494254350662231, 0.8515387773513794, 0.8518029451370239, 0.8508783578872681, 0.852859616279602, 0.8580108284950256, 0.8618412613868713, 0.8564258217811584, 0.8696341514587402, 0.8691058158874512, 0.8728041052818298, 0.868049144744873, 0.8730682730674744, 0.8733324408531189], "val_loss": [1.662353617804391, 1.045665638787406, 0.723071643284389, 0.6477908577237811, 0.6707098143441337, 0.5678106546401978, 0.6330793925694057, 0.6207077843802316, 0.5232981613704136, 0.5338073457990374, 0.4838224308831351, 0.49566590785980225, 0.46353728430611746, 0.5123373780931745, 0.4388485295431955, 0.44384279421397616, 0.4545976604734148, 0.41346618958881926, 0.41816277163369314, 0.4700530767440796, 0.40422606468200684, 0.42511039120810373, 0.40107870953423636, 0.42641033445085796, 0.3793904781341553, 0.3945542999676296, 0.37612620421818327, 0.3789500253541129, 0.3742372989654541, 0.37507905278887066, 0.3633337616920471, 0.3519679478236607, 0.3646982823099409, 0.39813773121152607, 0.4176507592201233, 0.3459987725530352, 0.3748484509331839, 0.35002269063677105, 0.3579818180629185, 0.33531116587775095, 0.34868195227214266, 0.3466824974332537, 0.36776881558554514, 0.344903256211962, 0.36306569405964445], "val_accuracy": [0.4480000138282776, 0.5703333616256714, 0.6759999990463257, 0.7103333473205566, 0.6916666626930237, 0.7246666550636292, 0.706333339214325, 0.7126666903495789, 0.7799999713897705, 0.7363333106040955, 0.7803333401679993, 0.7739999890327454, 0.7829999923706055, 0.7453333139419556, 0.8040000200271606, 0.8040000200271606, 0.8113333582878113, 0.8206666707992554, 0.8166666626930237, 0.7979999780654907, 0.8173333406448364, 0.8073333501815796, 0.8253333568572998, 0.8096666932106018, 0.8379999995231628, 0.8196666836738586, 0.8330000042915344, 0.8320000171661377, 0.8393333554267883, 0.8333333134651184, 0.8443333506584167, 0.8496666550636292, 0.8456666469573975, 0.8259999752044678, 0.8133333325386047, 0.8539999723434448, 0.8299999833106995, 0.8450000286102295, 0.8443333506584167, 0.859333336353302, 0.8429999947547913, 0.8456666469573975, 0.8403333425521851, 0.8553333282470703, 0.8330000042915344]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 0, 2, 6, 6, 1, 5], [4, 0, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8114285469055176, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0678533391709406, 1.491090010658247, 1.2402749313985069, 0.9684554209893075, 0.822361972337984, 0.7670095726688225, 0.7480325211686324, 0.7374193749297423, 0.7593335362709492, 0.6647745027848837, 0.6297658755637242, 0.6254621926095303, 0.5941080244509236, 0.5693772594060533, 0.5762066302550168, 0.5488284112691973, 0.5439561830693075, 0.5205194991671918, 0.5196393669446729, 0.5061578808868755, 0.50022338934783, 0.5083758608854961], "accuracy": [0.3413023352622986, 0.5160480737686157, 0.5894861817359924, 0.6547351479530334, 0.6889446377754211, 0.7058512568473816, 0.7162858247756958, 0.7169462442398071, 0.7148329019546509, 0.7423061728477478, 0.7543256878852844, 0.7552502751350403, 0.7705719470977783, 0.7827235460281372, 0.7783648371696472, 0.7940827012062073, 0.7873464822769165, 0.8047813773155212, 0.8039889335632324, 0.8059701323509216, 0.8115176558494568, 0.8090080618858337], "val_loss": [1.565281902040754, 1.0973094190870012, 0.778537222317287, 0.6275460038866315, 0.617614916392735, 0.5661959648132324, 0.6060033014842442, 0.6325156348092216, 0.5258078745433262, 0.5317373616354806, 0.47761036668504986, 0.48839523111070904, 0.48229638167790007, 0.47274179118020193, 0.4423126237733023, 0.44272219283240183, 0.4376434258052281, 0.41773355858666555, 0.4252081257956369, 0.472622275352478, 0.4090083752359663, 0.4125935435295105], "val_accuracy": [0.49266666173934937, 0.5649999976158142, 0.6823333501815796, 0.7200000286102295, 0.7020000219345093, 0.7429999709129333, 0.7246666550636292, 0.7110000252723694, 0.7693333625793457, 0.7476666569709778, 0.7826666831970215, 0.7749999761581421, 0.7616666555404663, 0.7739999890327454, 0.7996666431427002, 0.8063333630561829, 0.8176666498184204, 0.8159999847412109, 0.8163333535194397, 0.7933333516120911, 0.8149999976158142, 0.8176666498184204]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [52, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 6, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [78, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [6, 3, 2, 6, 0, 7, 5], [4, 2, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.20485714077949524, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 12, 8, 6, 2, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)))), sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4.765242157957384, 2.023175982341885, 2.3050549576673305, 2.3090858700379027, 2.3039691585197644, 2.303669325852863], "accuracy": [0.2106723040342331, 0.2958658039569855, 0.14489498734474182, 0.09549596905708313, 0.10196803510189056, 0.08902391046285629], "val_loss": [1.9089381354195731, 1.9752605983189173, 1.98090056010655, 1.9742412567138672, 1.973733833857945, 1.9737157821655273], "val_accuracy": [0.1379999965429306, 0.09733333438634872, 0.10199999809265137, 0.10199999809265137, 0.09933333098888397, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [6, 3, 2, 6, 0, 7, 5], [2, 0, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06089023873209953, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [13, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [6, 2, 5, 6, 6, 7, 5], [1, 3, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29664292.9075408, 565391127.550918, 2641826492.6440363, 7338217751.297318, 15707852842.73993, 28717624849.515255], "accuracy": [0.09906221181154251, 0.1002509593963623, 0.09536388516426086, 0.09945846349000931, 0.09879804402589798, 0.10447761416435242], "val_loss": [111118580.57142857, 888014500.5714285, 2996003181.714286, 7100390253.714286, 13866505654.857143, 23959629238.857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [97, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [5, 9, 2, 7, 8, 6, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [13, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [6, 2, 2, 6, 6, 7, 5], [0, 0, 2], [88, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [3, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1248005404.0156507, 23816827012.54788, 111328253750.47311, 309290781270.6295, 662116947673.4191, 1210572548459.8303], "accuracy": [0.09906221181154251, 0.1002509593963623, 0.09536388516426086, 0.09945846349000931, 0.09879804402589798, 0.10447761416435242], "val_loss": [4678445787.428572, 37416312832.0, 126267200073.14285, 299284496384.0, 584518692278.8572, 1010032555739.4286], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 6, 2, 9, 8, 9, 1, 6, 6, 1, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 2, 2, 1, 2, 2, 3, 9, 2, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 4, 6, 0, 2], [0, 1, 0, 1, 0, 3, 3, 0, 2, 3, 3, 3, 0, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 4, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [6, 2, 2, 6, 6, 7, 5], [2, 0, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 57, 57, 36, 21, 9, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(alpha, tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))))))), grad)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), grad)))), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(grad, grad), beta))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.negative(grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [95918158.5486054, 1829234091.0611544, 8548734052.35768, 23747746011.38027, 50835624139.96143, 92941857383.13037], "accuracy": [0.09906221181154251, 0.1002509593963623, 0.09536388516426086, 0.09945846349000931, 0.09879804402589798, 0.10447761416435242], "val_loss": [359423460.5714286, 2873354898.285714, 9695289929.142857, 22978728521.142857, 44877031716.57143, 77543952969.14285], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 0, 2, 6, 6, 1, 5], [4, 0, 2], [80, 2, 82], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, sigma)", "other_info": {"loss": [5069231.158168192, 80120467.34962356, 355808208.59384495, 967269086.068419, 2048499300.6281865, 3712187089.101043], "accuracy": [0.09906221181154251, 0.1002509593963623, 0.09536388516426086, 0.09945846349000931, 0.09879804402589798, 0.10447761416435242], "val_loss": [13919430.0, 111118580.57142857, 374762221.71428573, 888014500.5714285, 1734037686.857143, 2996003181.714286], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [29, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [77, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [6, 2, 2, 6, 5, 2, 5], [1, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303101091966842, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 6, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [13, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [4, 0, 2, 6, 6, 1, 5], [4, 2, 2], [80, 2, 82], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 1, 12, 9, 6, 3, 0, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad)), lambda shape,  alpha, beta, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, beta))), sigma)), tf.math.add(sigma, beta))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 6, 2, 9, 8, 6, 1, 6, 3, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 8, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 5, 2, 1, 6, 0, 2, 5], [0, 1, 3, 1, 0, 0, 3, 3, 2, 3, 2, 3, 0, 3, 3, 2, 4, 3, 0, 0, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [86, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [1, 2, 9, 6, 6, 7, 5], [4, 2, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 72, 72, 46, 26, 9, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), beta))))))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad), grad)))), tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))))))), tf.math.add(beta, alpha))))))))), alpha)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303101091966842, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [97, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [21, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [6, 3, 2, 6, 0, 7, 5], [2, 0, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [3, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303101091966842, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [49, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 0, 2, 6, 6, 1, 5], [4, 0, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06749438494443893, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [99, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [6, 2, 5, 6, 6, 7, 5], [1, 3, 2], [80, 2, 82], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [2, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 1, 1, 1, 0, 1, 1, 5, 3, 2, 1, 0, 3, 1, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.add(grad, tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), alpha))))))), lambda shape,  alpha, beta, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, sigma)", "other_info": {"loss": [52117102138.33767, 7730626644345.896, 133363633381504.77, 942562722250691.4, 4133116226360997.5, 1.3532617251303886e+16], "accuracy": [0.09906221181154251, 0.1002509593963623, 0.0952318087220192, 0.09959053993225098, 0.09919429570436478, 0.10434553027153015], "val_loss": [426499094235.4286, 22992969007104.0, 246801820773814.84, 1345402532003840.0, 5039659404118309.0, 1.4864482379497472e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 8, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 7, 2, 6, 6, 1, 5], [4, 2, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 6, 1, 3, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.add(sigma, sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29664292.9075408, 565391127.550918, 2641826492.6440363, 7338217751.297318, 15707852842.73993, 28717624849.515255], "accuracy": [0.09906221181154251, 0.1002509593963623, 0.09536388516426086, 0.09945846349000931, 0.09879804402589798, 0.10447761416435242], "val_loss": [111118580.57142857, 888014500.5714285, 2996003181.714286, 7100390253.714286, 13866505654.857143, 23959629238.857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [97, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [80, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [6, 3, 2, 6, 0, 7, 5], [2, 5, 2], [80, 2, 82], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 12, 7, 6, 1, 0, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, sigma)))))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, sigma)", "other_info": {"loss": [2.3022791414433437, 2.3043346491944536, 2.3057209137581625, 2.309014022657349, 2.31141850898263, 2.315185019526232, 2.3187038629219723, 2.3267709864380968, 2.3349901138752083, 2.3513912133347987, 2.435196215151292, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.08915598690509796, 0.0820235088467598, 0.08440100401639938, 0.07924976944923401, 0.07991018146276474, 0.07555144280195236, 0.0734381154179573, 0.07357019931077957, 0.08109892904758453, 0.08532558381557465, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9725890840802873, 1.9738563810076033, 1.9756197929382324, 1.9778064319065638, 1.9799725668770927, 1.982370240347726, 1.9854071480887276, 1.9896790640694755, 1.9978135653904505, 2.0171822820390974, 5.037075451442173, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02866666577756405, 0.023000000044703484, 0.020666666328907013, 0.022333333268761635, 0.02566666714847088, 0.035999998450279236, 0.05766666680574417, 0.07400000095367432, 0.09333333373069763, 0.09733333438634872, 0.09733333438634872, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 6, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [13, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [6, 2, 0, 6, 6, 7, 5], [4, 2, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [3, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 3, 12, 9, 6, 3, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, beta))))), sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30183928209037, 2.3022368023849324, 2.3017279731126714, 2.3023557289480268, 2.3023877265730146, 2.302776951500768], "accuracy": [0.08994849026203156, 0.0940430611371994, 0.0882314071059227, 0.0948355570435524, 0.09496764093637466, 0.08625016361474991], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 0, 2, 6, 6, 1, 5], [4, 0, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.02800000086426735, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3033441806655155, 2.3074686024340467, 2.310742332446907, 2.3150855455384702, 2.319141597575232, 2.323654436495137], "accuracy": [0.0878351628780365, 0.0816272646188736, 0.07132479548454285, 0.07000396400690079, 0.06155065447092056, 0.0536256767809391], "val_loss": [1.9748692512512207, 1.9783533641270228, 1.9818921089172363, 1.9854685919625419, 1.989165919167655, 1.993002210344587], "val_accuracy": [0.021666666492819786, 0.013000000268220901, 0.007333333138376474, 0.006000000052154064, 0.00566666666418314, 0.004999999888241291]}}]