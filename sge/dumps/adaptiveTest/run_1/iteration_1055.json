[{"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [99, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.836571455001831, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.add(beta, beta))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9850993903242853, 1.2804887489541301, 0.9382006890659461, 0.8064438506927409, 0.7393833340639294, 0.6914706916038181, 0.6454904412612341, 0.6539198166548442, 0.6241186636235216, 0.5955458563379623, 0.5689307731282143, 0.5420156055831354, 0.5414476809626353, 0.5201566542034152, 0.5180210330152177, 0.4876218617844182, 0.4794795953555114, 0.4970464339747232, 0.4606601303445035, 0.4514584749279682, 0.4559840737608178, 0.45100032252689726, 0.42700128745582394, 0.43982569995163895, 0.3971963202586468, 0.4079758903849882, 0.39672548942766833, 0.39001029566877066, 0.3846853780370142], "accuracy": [0.32333904504776, 0.5378417372703552, 0.6572447419166565, 0.6989829540252686, 0.7224937081336975, 0.7345132827758789, 0.7561748623847961, 0.7514199018478394, 0.7643640041351318, 0.7701756954193115, 0.7812706232070923, 0.7972526550292969, 0.7885351777076721, 0.8029322624206543, 0.8043851256370544, 0.8198388814926147, 0.8208954930305481, 0.8095363974571228, 0.8241975903511047, 0.8300092220306396, 0.8297450542449951, 0.834632158279419, 0.8416325449943542, 0.8355567455291748, 0.8491612672805786, 0.8451988101005554, 0.8512746095657349, 0.8494254350662231, 0.8585391640663147], "val_loss": [1.3424029350280762, 0.8659249373844692, 0.6135508673531669, 0.693712558065142, 0.5532176835196358, 0.516399656023298, 0.5802853448050362, 0.5198348590305873, 0.47189039843423025, 0.4681429181780134, 0.4797381843839373, 0.4702694075448172, 0.4333470038005284, 0.42094174453190397, 0.42166173458099365, 0.4184072954314096, 0.43588898863111225, 0.40663436480930876, 0.3951047148023333, 0.38459729296820505, 0.3757919328553336, 0.37830143315451487, 0.41139442580086844, 0.36212084123066496, 0.3602216839790344, 0.3576535327093942, 0.35407509974070955, 0.3838108607700893, 0.3565624015671866], "val_accuracy": [0.5070000290870667, 0.6006666421890259, 0.7243333458900452, 0.6973333358764648, 0.7403333187103271, 0.7559999823570251, 0.7273333072662354, 0.765333354473114, 0.7773333191871643, 0.7876666784286499, 0.7976666688919067, 0.7756666541099548, 0.8080000281333923, 0.8226666450500488, 0.8216666579246521, 0.815666675567627, 0.800000011920929, 0.8230000138282776, 0.8306666612625122, 0.8306666612625122, 0.8333333134651184, 0.8370000123977661, 0.812333345413208, 0.8496666550636292, 0.8473333120346069, 0.8496666550636292, 0.8453333377838135, 0.8259999752044678, 0.8493333458900452]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 4, 0, 9, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8357142806053162, "mapping_values": [1, 4, 4, 2, 2, 1, 10, 10, 7, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9851010932646502, 1.2799946180723283, 0.9418631732392981, 0.8342131011364183, 0.7147546241768693, 0.6906759000772403, 0.6450355032085191, 0.6627592555347009, 0.6204225537704833, 0.596964383090665, 0.5697047085164324, 0.5464223837572207, 0.5261657030008347, 0.5291174151256273, 0.502674230522625, 0.4938478232366912, 0.478380658442019, 0.4989865229012015, 0.45869304772145114, 0.4530910128780942, 0.45579958375355883, 0.44412789360060745, 0.42471638887140495, 0.4386709624820964, 0.39900485713641565, 0.411645161973298, 0.3941366091230841, 0.3955436994638646, 0.3827610846563117, 0.37514290287982455, 0.3679454570094655, 0.37954328047475006, 0.36884710717005986, 0.36151745486347636, 0.346823744781895, 0.3500869604913298, 0.3339336187832265, 0.3391344879029717], "accuracy": [0.32333904504776, 0.5374455451965332, 0.6552634835243225, 0.6870955228805542, 0.7294940948486328, 0.7351737022399902, 0.7534011602401733, 0.7479857206344604, 0.761590301990509, 0.7716285586357117, 0.7829877138137817, 0.7960638999938965, 0.7947431206703186, 0.8026680946350098, 0.8107251524925232, 0.8177255392074585, 0.821820080280304, 0.8088759779930115, 0.8256505131721497, 0.8281601071357727, 0.8256505131721497, 0.8352925777435303, 0.8428213000297546, 0.8383304476737976, 0.8494254350662231, 0.8424250483512878, 0.8529917001724243, 0.848368763923645, 0.8584070801734924, 0.8642187118530273, 0.8602562546730042, 0.8598600029945374, 0.8631620407104492, 0.8639545440673828, 0.8701624870300293, 0.8679170608520508, 0.8757099509239197, 0.868049144744873], "val_loss": [1.342287302017212, 0.8703504289899554, 0.6131466967718942, 0.5830639600753784, 0.5570935181209019, 0.5174564634050641, 0.5402510677065168, 0.5204042196273804, 0.49259492329188753, 0.469076326915196, 0.4751453059060233, 0.4421245200293405, 0.4575509173529489, 0.4174517733710153, 0.4253091982432774, 0.41423405919756207, 0.45538380316325594, 0.408077027116503, 0.39099661793027607, 0.3897601195744106, 0.37403416633605957, 0.37850472756794523, 0.40186197417122976, 0.3620319111006601, 0.3679645231791905, 0.357016350541796, 0.356657726424081, 0.3775263513837542, 0.3616366556712559, 0.3384249040058681, 0.3683698432786124, 0.3409033843449184, 0.33259195940835135, 0.3477144071034023, 0.34040723528180805, 0.338543781212398, 0.33485820463725496, 0.3337770274707249], "val_accuracy": [0.5073333382606506, 0.6003333330154419, 0.7226666808128357, 0.737666666507721, 0.7383333444595337, 0.7573333382606506, 0.7283333539962769, 0.7649999856948853, 0.7639999985694885, 0.7940000295639038, 0.7990000247955322, 0.8053333163261414, 0.7806666493415833, 0.8186666369438171, 0.8143333196640015, 0.8186666369438171, 0.7896666526794434, 0.8190000057220459, 0.831333339214325, 0.8299999833106995, 0.8339999914169312, 0.8383333086967468, 0.8180000185966492, 0.8463333249092102, 0.8383333086967468, 0.8510000109672546, 0.8429999947547913, 0.828000009059906, 0.8426666855812073, 0.8536666631698608, 0.8393333554267883, 0.8529999852180481, 0.8583333492279053, 0.8463333249092102, 0.8516666889190674, 0.8536666631698608, 0.8576666712760925, 0.8556666374206543]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 2, 0, 8, 1, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8291428685188293, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 7, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))))), alpha), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.986324463884482, 1.299676304180955, 0.9201659570438137, 0.8131874513002576, 0.7266345552685806, 0.6937804757296968, 0.6461440108361229, 0.6471655436195733, 0.6426095782080818, 0.5927228003980429, 0.5703770215595403, 0.5448026522716527, 0.5331088142262127, 0.5290360983415381, 0.511722141796367, 0.49428637199996406, 0.49474376516413965, 0.49725976754031587, 0.46175664121669124, 0.45418467367833804, 0.45772609790523117, 0.4540541367901787, 0.4272637032931901, 0.44237161846665374, 0.39803334893079373, 0.40997415451939867, 0.40109590548550084, 0.39831094169629294, 0.3897260117406433, 0.3801571502267976, 0.37290618081827204, 0.3826121771615872, 0.36663564573961116, 0.36892854049063756, 0.35126279732019294], "accuracy": [0.3203011453151703, 0.5305771827697754, 0.6602826714515686, 0.6951525807380676, 0.7252674698829651, 0.7317395210266113, 0.7573636174201965, 0.7506273984909058, 0.7560427784919739, 0.7773081660270691, 0.783119797706604, 0.7959318161010742, 0.7895918488502502, 0.7988376617431641, 0.8083476424217224, 0.8187822103500366, 0.8141592741012573, 0.8082155585289001, 0.8255184292793274, 0.8305375576019287, 0.8281601071357727, 0.8333113193511963, 0.841500461101532, 0.832650899887085, 0.8482366800308228, 0.841500461101532, 0.8492933511734009, 0.8479725122451782, 0.8562937378883362, 0.8613129258155823, 0.8589354157447815, 0.8590674996376038, 0.8590674996376038, 0.8621054291725159, 0.8709549307823181], "val_loss": [1.34239285332816, 0.9042586599077497, 0.6004182270595005, 0.5720945937292916, 0.565772294998169, 0.5351128918784005, 0.5307889325278146, 0.5536789042609078, 0.4750868082046509, 0.46837053980146137, 0.47938176563807894, 0.4497683473995754, 0.43176749774387907, 0.41933694907597135, 0.4222738061632429, 0.435769396168845, 0.4491380623408726, 0.40095947469983784, 0.3902157885687692, 0.3802641374724252, 0.37968917403902325, 0.37505658183779034, 0.40738663503101896, 0.36053383350372314, 0.3597334027290344, 0.36322204555783955, 0.3525215131895883, 0.3860133971486773, 0.3594732795442854, 0.33272660630089895, 0.3610115221568516, 0.3376860959189279, 0.33393447739737375, 0.3474671585219247, 0.34411043780190603], "val_accuracy": [0.48266667127609253, 0.5873333215713501, 0.734333336353302, 0.7473333477973938, 0.7333333492279053, 0.7519999742507935, 0.7326666712760925, 0.7363333106040955, 0.7746666669845581, 0.7889999747276306, 0.7946666479110718, 0.8059999942779541, 0.8080000281333923, 0.8193333148956299, 0.8206666707992554, 0.7943333387374878, 0.7873333096504211, 0.8266666531562805, 0.8336666822433472, 0.8339999914169312, 0.82833331823349, 0.8386666774749756, 0.8146666884422302, 0.8486666679382324, 0.8453333377838135, 0.8500000238418579, 0.8460000157356262, 0.8220000267028809, 0.843999981880188, 0.8579999804496765, 0.8356666564941406, 0.8539999723434448, 0.8560000061988831, 0.8506666421890259, 0.8519999980926514]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8122857213020325, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9850834612329291, 1.2841747679084976, 0.9395026795427325, 0.823419172923484, 0.7148583639866294, 0.6936724044391429, 0.6515446733474227, 0.6370325138729167, 0.6250324521350067, 0.5996643409375044, 0.568590461987357, 0.5414313340955453, 0.5234874216690827, 0.5224648143566201, 0.5107874859711434, 0.4900222279927545, 0.4846242275834477, 0.49102696760250925, 0.45954234181866277], "accuracy": [0.3234711289405823, 0.533879280090332, 0.6592260003089905, 0.6890767216682434, 0.7281733155250549, 0.7351737022399902, 0.752740740776062, 0.7552502751350403, 0.7648923397064209, 0.769911527633667, 0.7845727205276489, 0.7960638999938965, 0.7944789528846741, 0.8034605979919434, 0.8083476424217224, 0.8187822103500366, 0.8198388814926147, 0.8127063512802124, 0.824329674243927], "val_loss": [1.3427467686789376, 0.888622556413923, 0.6095813172204154, 0.6077449151447841, 0.5746853862489972, 0.5141198124204364, 0.5119601488113403, 0.5123337507247925, 0.46086471421378, 0.48096891811915804, 0.4788167476654053, 0.44668341534478323, 0.45309822048459736, 0.4133744750704084, 0.42250198125839233, 0.4238830549376352, 0.4409367953027998, 0.4083879845482962, 0.4019622121538435], "val_accuracy": [0.5063333511352539, 0.5976666808128357, 0.7246666550636292, 0.7326666712760925, 0.7256666421890259, 0.7583333253860474, 0.7486666440963745, 0.7710000276565552, 0.7956666946411133, 0.781000018119812, 0.7873333096504211, 0.800000011920929, 0.7850000262260437, 0.8276666402816772, 0.8190000057220459, 0.8130000233650208, 0.7979999780654907, 0.8180000185966492, 0.8263333439826965]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 4, 0, 8, 5, 1, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [55, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8059999942779541, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0047480806525293, 1.3736722227163822, 1.0402796098175398, 0.896924786209635, 0.7995823868403361, 0.773195811069684, 0.7064837138839544, 0.6671171503343508, 0.6756262351351486, 0.641015450007502, 0.6199204725218392, 0.5999695403212806, 0.5796005203503155, 0.5776021508823501, 0.5592014729197251, 0.5456503307137586, 0.5314364400380449, 0.5547207771802796, 0.5084894598435732], "accuracy": [0.3086778521537781, 0.5077268481254578, 0.6304318904876709, 0.6610751748085022, 0.7034738063812256, 0.7092854380607605, 0.7334566116333008, 0.7457403540611267, 0.7433628439903259, 0.7539294958114624, 0.7623828053474426, 0.7716285586357117, 0.7712323069572449, 0.7751948237419128, 0.7877426743507385, 0.7971205711364746, 0.8000264167785645, 0.7836481332778931, 0.806630551815033], "val_loss": [1.3590504441942488, 1.048663752419608, 0.6680243866784232, 0.739695702280317, 0.5851755312510899, 0.5732416766030448, 0.54999840259552, 0.5258750745228359, 0.5310428994042533, 0.5246539456503732, 0.5208378859928676, 0.5088498422077724, 0.5162767001560756, 0.4445759057998657, 0.44519607509885517, 0.4597729614802769, 0.547019226210458, 0.44694931166512625, 0.44366371631622314], "val_accuracy": [0.48133334517478943, 0.5583333373069763, 0.7003333568572998, 0.6753333210945129, 0.7273333072662354, 0.7390000224113464, 0.7390000224113464, 0.7673333287239075, 0.7390000224113464, 0.7689999938011169, 0.765666663646698, 0.7649999856948853, 0.7400000095367432, 0.809333324432373, 0.8076666593551636, 0.7876666784286499, 0.7429999709129333, 0.8019999861717224, 0.8006666898727417]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [9, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2, 9, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [32, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.3788571357727051, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 7, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3022065244535366, 2.3029469019701265, 2.3007842390024904, 2.301284085868167, 2.2991154652387555, 2.2988274300559763, 2.2973578312550993, 2.2970050464232585, 2.2982693415087416, 2.296697426087915, 2.2961098002153, 2.2970088542554796, 2.2944719091051873, 2.2944887173788313, 2.2932750759910774, 2.2940793974272657, 2.2921980663990347, 2.292390348101651, 2.2911220670706873, 2.2909599076708025, 2.2901630790840444, 2.2889854148425886, 2.289347233883756, 2.2876630306495827, 2.2862656317398358, 2.289130406750664, 2.285392265183783, 2.2845097069002778, 2.2845371309571876, 2.285672787016472, 2.28522519091605, 2.2828191614043933, 2.282662138758145, 2.2835590794668725, 2.2823168531369227, 2.281947164141255, 2.279927937676799, 2.2816205593762127, 2.281065577041078, 2.2801133936989215, 2.278701084637292, 2.277751955169146, 2.277628509297016, 2.276349759419927, 2.274734562036305, 2.2753232683661184, 2.2738558239295044, 2.274779712550786, 2.2731795696109405, 2.273000687781956, 2.272510218755712, 2.271685456303778, 2.271890843659344, 2.270826707568387, 2.270632299685979, 2.2702453272485337, 2.270003193231889, 2.2691881201601363, 2.267871752769058, 2.2689734161522064, 2.2676085194796936, 2.266985712018641, 2.2653516551932134, 2.2662454589860883, 2.265556418711499, 2.2642583886094774, 2.2641069282866297, 2.262343722563756, 2.260126015104244, 2.261133208518582, 2.261419493461471, 2.2575834709435028, 2.261136456314347, 2.2590701187354476, 2.257162070088556, 2.256467408098486, 2.2557983083212303, 2.257751560796915, 2.2553519400560216, 2.2554628854068106, 2.253517919134045, 2.2530195682496914, 2.2536663163560116, 2.2526872768976496, 2.248704435771498, 2.251493312899683, 2.250709939232875, 2.2503022428013, 2.248359996723603, 2.2483850556782854, 2.2468595343841584, 2.2476493490685434, 2.2450771239833305, 2.2466176065077885, 2.246150194331088, 2.2446924989186634, 2.24391396929638, 2.2441927012419733, 2.241944518118896, 2.2407750873643772], "accuracy": [0.09219389408826828, 0.08981640636920929, 0.09087307006120682, 0.09893012791872025, 0.10645885765552521, 0.09642054885625839, 0.10289261490106583, 0.1026284471154213, 0.10130762308835983, 0.10593052208423615, 0.11596883088350296, 0.10236428678035736, 0.10936468094587326, 0.10606260597705841, 0.11240258812904358, 0.11411966383457184, 0.11940298229455948, 0.11610091477632523, 0.11966715008020401, 0.12059172987937927, 0.12270505726337433, 0.12072381377220154, 0.11966715008020401, 0.12957337498664856, 0.12772421538829803, 0.1212521493434906, 0.13168670237064362, 0.13300752639770508, 0.14357416331768036, 0.12970545887947083, 0.13829085230827332, 0.13710209727287292, 0.14489498734474182, 0.1344604343175888, 0.14132875204086304, 0.1472724825143814, 0.14515915513038635, 0.1414608359336853, 0.14000792801380157, 0.15440496802330017, 0.15361246466636658, 0.1550653874874115, 0.15414080023765564, 0.1538766324520111, 0.16457535326480865, 0.15968827903270721, 0.1604807823896408, 0.16616034507751465, 0.16378284990787506, 0.16880200803279877, 0.1682736724615097, 0.17170783877372742, 0.177255317568779, 0.16774533689022064, 0.17593449354171753, 0.1764628142118454, 0.17500990629196167, 0.17923656105995178, 0.17659489810466766, 0.17540615797042847, 0.17831197381019592, 0.1868973672389984, 0.1846519559621811, 0.18359529972076416, 0.18319904804229736, 0.18676528334617615, 0.18835029006004333, 0.19152027368545532, 0.2040681540966034, 0.19402985274791718, 0.1950865089893341, 0.20935148000717163, 0.18940694630146027, 0.2078985571861267, 0.2040681540966034, 0.2036719024181366, 0.21238937973976135, 0.2106723040342331, 0.21582353115081787, 0.2122572958469391, 0.21674811840057373, 0.2176727056503296, 0.2242768406867981, 0.22031435370445251, 0.23074890673160553, 0.22084268927574158, 0.22599393129348755, 0.22678641974925995, 0.2250693440437317, 0.2262580841779709, 0.2355038970708847, 0.22414475679397583, 0.23114515841007233, 0.2285034954547882, 0.23444722592830658, 0.2339189052581787, 0.23418307304382324, 0.23603223264217377, 0.24342887103557587, 0.24039097130298615], "val_loss": [1.9708815983363561, 1.9703236307416643, 1.9697672980172294, 1.969212532043457, 1.968667847769601, 1.9681205749511719, 1.9675705773489816, 1.967019762311663, 1.966472830091204, 1.9659305300031389, 1.9653815541948592, 1.9648293086460658, 1.9642829213823592, 1.963735716683524, 1.9631876264299666, 1.9626389231000627, 1.962101936340332, 1.9615646771022253, 1.961029052734375, 1.9604836872645788, 1.9599509920392717, 1.9594078063964844, 1.9588680948529924, 1.9583266803196497, 1.9577890123639787, 1.9572510719299316, 1.956702504839216, 1.9561586380004883, 1.9556162697928292, 1.9550730841500419, 1.9545316014971053, 1.9539841243198939, 1.9534377370561873, 1.9528908729553223, 1.9523465292794364, 1.9518006188528878, 1.9512507574898856, 1.9507016454424178, 1.9501549175807409, 1.949606009892055, 1.9490555354527064, 1.9485111236572266, 1.9479616710117884, 1.9474116052900041, 1.9468511853899275, 1.9462949889046806, 1.9457404954092843, 1.9451813697814941, 1.9446187019348145, 1.944065843309675, 1.9435081481933594, 1.9429463659014021, 1.942384856087821, 1.941824299948556, 1.9412619045802526, 1.940694877079555, 1.9401348658970423, 1.9395694732666016, 1.9389985629490443, 1.9384362357003349, 1.9378634180341447, 1.9372912815638952, 1.9367174421037947, 1.9361406053815569, 1.9355644498552596, 1.9349827766418457, 1.9344045775277274, 1.93381895337786, 1.9332295145307268, 1.932638304574149, 1.9320494788033622, 1.93145717893328, 1.9308590207781111, 1.9302571160452706, 1.929661478315081, 1.929065568106515, 1.9284541947501046, 1.9278554235185896, 1.9272488866533553, 1.926638398851667, 1.9260273660932268, 1.9254076140267509, 1.9247897693089075, 1.924165861947196, 1.923532485961914, 1.9229049682617188, 1.9222753388541085, 1.9216411454336983, 1.9209987776620048, 1.9203615869794572, 1.9197209221976144, 1.9190772601536341, 1.9184276035853796, 1.917774064200265, 1.9171195711408342, 1.916466304234096, 1.915811198098319, 1.9151509829929896, 1.9144795281546456, 1.9138013975960868], "val_accuracy": [0.03799999877810478, 0.04100000113248825, 0.045666664838790894, 0.04833333194255829, 0.05366666615009308, 0.05766666680574417, 0.06199999898672104, 0.06499999761581421, 0.07000000029802322, 0.07266666740179062, 0.07533333450555801, 0.07966666668653488, 0.08500000089406967, 0.08866667002439499, 0.09466666728258133, 0.0963333323597908, 0.10133333504199982, 0.10633333027362823, 0.1120000034570694, 0.11666666716337204, 0.12133333086967468, 0.1276666671037674, 0.13333334028720856, 0.14233332872390747, 0.14800000190734863, 0.15199999511241913, 0.1589999943971634, 0.16300000250339508, 0.16899999976158142, 0.1756666600704193, 0.1783333271741867, 0.18266665935516357, 0.1886666715145111, 0.19599999487400055, 0.20100000500679016, 0.20900000631809235, 0.2163333296775818, 0.22066666185855865, 0.22566667199134827, 0.2293333262205124, 0.23499999940395355, 0.24066667258739471, 0.24300000071525574, 0.24666666984558105, 0.2516666650772095, 0.25600001215934753, 0.25999999046325684, 0.2630000114440918, 0.2683333456516266, 0.27033331990242004, 0.2736666798591614, 0.2770000100135803, 0.28066667914390564, 0.2866666615009308, 0.28999999165534973, 0.29233333468437195, 0.2956666648387909, 0.2983333468437195, 0.30133333802223206, 0.30433332920074463, 0.30933332443237305, 0.3113333284854889, 0.3153333365917206, 0.31700000166893005, 0.3186666667461395, 0.31966665387153625, 0.32100000977516174, 0.3233333230018616, 0.3266666531562805, 0.33000001311302185, 0.3319999873638153, 0.33500000834465027, 0.3370000123977661, 0.33899998664855957, 0.34166666865348816, 0.343666672706604, 0.3449999988079071, 0.3473333418369293, 0.35066667199134827, 0.35233333706855774, 0.3543333411216736, 0.3566666543483734, 0.3580000102519989, 0.3596666753292084, 0.36000001430511475, 0.36133334040641785, 0.3633333444595337, 0.3643333315849304, 0.3656666576862335, 0.367000013589859, 0.367333322763443, 0.3683333396911621, 0.3696666657924652, 0.36933332681655884, 0.3713333308696747, 0.3736666738986969, 0.37533333897590637, 0.3779999911785126, 0.3799999952316284, 0.38066667318344116]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [2, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 5, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [19, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.1445714235305786, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3023936084358843, 2.3035938539178757, 2.301890019711691, 2.302840795751261, 2.3010982463797873, 2.3012639501264553, 2.300254132312759, 2.3003530269600634, 2.302071996038112, 2.300910585481792, 2.3007964407369492, 2.3021863131333555, 2.3000354264563794, 2.3004964389632234, 2.2997483488842954, 2.301017428118366, 2.299470932004065, 2.3001119113003083, 2.299250703210041, 2.299629098687898, 2.299112766992934, 2.2985228521319083, 2.299264816229511, 2.298049349432781, 2.297008059925769, 2.3003520844650622, 2.2972207178670843, 2.2966507298992673, 2.29714527112492, 2.2987027484443856, 2.298689879478008, 2.2967722383173403, 2.297081939422412, 2.2983816095772136, 2.297521124993333, 2.297629051015771, 2.2961377414178856, 2.298230236578989, 2.2980706352898475, 2.297676332276243, 2.2966069757914767, 2.295966216711997, 2.29638425684435, 2.2955503299676856, 2.294575276517786, 2.2955971305805853, 2.294473068321449, 2.295797033175155, 2.294816741035158, 2.294610150501854, 2.2950456990164034, 2.294605757818246, 2.295131547308365, 2.2945658419630104, 2.2948190282285803, 2.2950624995747453, 2.2949208690820666, 2.2946192120453937, 2.293938206895751, 2.2951927860226253, 2.2947659043430604, 2.294487425049991, 2.293049481472146, 2.294541727329809, 2.2942783841682446, 2.2936973988403655, 2.2938290912367174, 2.2927813688053225, 2.290929380582387, 2.2926037539863913, 2.2932271611940873, 2.289919486056544, 2.293914175398865, 2.292596568363438, 2.290878991755701, 2.2904761938796208, 2.2910525489240796, 2.2927111437481, 2.291118726785771, 2.291765693534304, 2.2902914930438607, 2.2903822145410393, 2.2914846944865643, 2.2911989527639225, 2.2878673064663047, 2.2909991200164543, 2.290502227418663, 2.290830409600829, 2.2895502549089444, 2.2899473029955297, 2.2890462488971286, 2.2903572674109998, 2.288246612633224, 2.290605440619694, 2.290439649863313, 2.2894725013859376, 2.289036267154237, 2.29011642279453, 2.288830383216637, 2.28835513975642], "accuracy": [0.09219389408826828, 0.0874389111995697, 0.08809932321310043, 0.09628847241401672, 0.1014397069811821, 0.08968432247638702, 0.0956280529499054, 0.09285431355237961, 0.0936468094587326, 0.09615638852119446, 0.10328886657953262, 0.09047681838274002, 0.0940430611371994, 0.08968432247638702, 0.0952318087220192, 0.09787346422672272, 0.10091137140989304, 0.09655263274908066, 0.09959053993225098, 0.09826971590518951, 0.1006472036242485, 0.09853387624025345, 0.0956280529499054, 0.09945846349000931, 0.09998679161071777, 0.0936468094587326, 0.10051512718200684, 0.10249637067317963, 0.1072513535618782, 0.09800554811954498, 0.1026284471154213, 0.10289261490106583, 0.1002509593963623, 0.09708096832036972, 0.10038304328918457, 0.10460969805717468, 0.10289261490106583, 0.09721305221319199, 0.09774138033390045, 0.10777968913316727, 0.10421344637870789, 0.10645885765552521, 0.10698718577623367, 0.10315678268671036, 0.11028926074504852, 0.10236428678035736, 0.1080438494682312, 0.10751552134752274, 0.11015717685222626, 0.10936468094587326, 0.1072513535618782, 0.11332716792821884, 0.10777968913316727, 0.10870426893234253, 0.11055342853069305, 0.1080438494682312, 0.10606260597705841, 0.11094967275857925, 0.10989301651716232, 0.10698718577623367, 0.10989301651716232, 0.11161009222269058, 0.11742173880338669, 0.11610091477632523, 0.10579843819141388, 0.11676132678985596, 0.11134592443704605, 0.11319508403539658, 0.11966715008020401, 0.11174217611551285, 0.11227050423622131, 0.12455421686172485, 0.11081759631633759, 0.11742173880338669, 0.11345925182104111, 0.11795007437467575, 0.1200634017586708, 0.12059172987937927, 0.12362963706254959, 0.11821424216032028, 0.11927089840173721, 0.12217672914266586, 0.11795007437467575, 0.12336547672748566, 0.12481838464736938, 0.1150442510843277, 0.12178047746419907, 0.12442214041948318, 0.12455421686172485, 0.11861048638820648, 0.12072381377220154, 0.11491216719150543, 0.12442214041948318, 0.11953506618738174, 0.12138422578573227, 0.12693171203136444, 0.12468630075454712, 0.12798838317394257, 0.12415797263383865, 0.12653546035289764], "val_loss": [1.971304484776088, 1.9711685180664062, 1.9710325513567244, 1.9708966527666365, 1.9707634789603097, 1.9706294877188546, 1.9704944065638952, 1.9703590529305595, 1.970224039895194, 1.970090389251709, 1.9699551037379675, 1.9698183195931571, 1.9696835109165736, 1.969548566000802, 1.9694134167262487, 1.9692775862557548, 1.969144684927804, 1.9690117154802596, 1.968878950391497, 1.9687444141932897, 1.9686125346592493, 1.9684781347002303, 1.9683452333722795, 1.9682115146092005, 1.9680790901184082, 1.9679457800728934, 1.9678100858415877, 1.9676760264805384, 1.9675418989998954, 1.9674086570739746, 1.9672752107892717, 1.9671410833086287, 1.9670075689043318, 1.9668738501412528, 1.9667408806937081, 1.9666075706481934, 1.9664739200047083, 1.9663401331220354, 1.9662070955548967, 1.9660735811505998, 1.965940202985491, 1.9658088002886092, 1.9656759670802526, 1.9655437469482422, 1.9654089382716589, 1.965275423867362, 1.9651429993765694, 1.965010098048619, 1.9648762430463518, 1.9647454534258162, 1.9646124839782715, 1.9644794464111328, 1.9643474306379045, 1.9642153467450822, 1.96408326285226, 1.9639505658830916, 1.9638198443821497, 1.963688509804862, 1.9635563577924455, 1.9634252956935339, 1.9632926668439592, 1.9631606510707311, 1.9630298614501953, 1.9628983906337194, 1.9627674647739954, 1.9626354490007674, 1.9625030245099748, 1.9623712812151228, 1.9622392654418945, 1.962106568472726, 1.9619753020150321, 1.961843626839774, 1.961712156023298, 1.9615800040108817, 1.9614501680646623, 1.9613199915204729, 1.961186749594552, 1.9610562324523926, 1.9609246253967285, 1.9607935632978166, 1.9606627055576868, 1.9605303491864885, 1.9603986058916365, 1.9602670669555664, 1.9601343018668038, 1.9600024904523576, 1.959871700831822, 1.959739821297782, 1.9596082142421178, 1.959477424621582, 1.9593464306422643, 1.9592158453805106, 1.959085123879569, 1.9589528356279646, 1.9588221141270228, 1.958691188267299, 1.9585612160818917, 1.95843049458095, 1.9582984788077218, 1.9581659861973353], "val_accuracy": [0.035999998450279236, 0.03700000047683716, 0.03766666725277901, 0.03799999877810478, 0.03866666555404663, 0.03999999910593033, 0.0403333343565464, 0.04066666588187218, 0.04233333468437195, 0.043666668236255646, 0.04466666653752327, 0.04533333331346512, 0.04633333161473274, 0.04699999839067459, 0.04833333194255829, 0.04833333194255829, 0.04933333396911621, 0.05066666752099991, 0.052000001072883606, 0.05366666615009308, 0.05400000140070915, 0.055666666477918625, 0.056333333253860474, 0.05766666680574417, 0.05766666680574417, 0.05966666713356972, 0.06066666543483734, 0.061666667461395264, 0.06199999898672104, 0.06300000101327896, 0.06333333253860474, 0.06466666609048843, 0.06499999761581421, 0.06700000166893005, 0.0676666647195816, 0.0689999982714653, 0.07000000029802322, 0.070333331823349, 0.07100000232458115, 0.07233333587646484, 0.07266666740179062, 0.0729999989271164, 0.07366666942834854, 0.07433333247900009, 0.07466666400432587, 0.07633333653211594, 0.07766667008399963, 0.07866666465997696, 0.07966666668653488, 0.08033332973718643, 0.08100000023841858, 0.08299999684095383, 0.0846666693687439, 0.08533333241939545, 0.08633333444595337, 0.08733333647251129, 0.08799999952316284, 0.08866667002439499, 0.09000000357627869, 0.09099999815225601, 0.09399999678134918, 0.0949999988079071, 0.09533333033323288, 0.09566666930913925, 0.0963333323597908, 0.09733333438634872, 0.09866666793823242, 0.09866666793823242, 0.1003333330154419, 0.10166666656732559, 0.10199999809265137, 0.10300000011920929, 0.10533333569765091, 0.1066666692495346, 0.10766666382551193, 0.109333336353302, 0.11133333295583725, 0.11233333498239517, 0.11299999803304672, 0.11400000005960464, 0.11566666513681412, 0.11666666716337204, 0.11833333224058151, 0.11966666579246521, 0.12033333629369736, 0.12133333086967468, 0.12300000339746475, 0.12433333694934845, 0.12566666305065155, 0.12666666507720947, 0.12833333015441895, 0.12999999523162842, 0.13066667318344116, 0.1326666623353958, 0.13433332741260529, 0.13766667246818542, 0.14000000059604645, 0.14100000262260437, 0.14266666769981384, 0.14399999380111694]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 0, 0, 9, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [96, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [97, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 5, 4, 3, 6, 2, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [19, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.13908334076404572, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 5, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [19, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 1, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [89, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025495580883075, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 4, 0, 8, 5, 1, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [32, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 13, 13, 8, 5, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), tf.math.subtract(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 3, 4, 0, 5, 0, 2, 9, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 6, 3, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29327641.00136253, 568550204.1875578, 2645552859.447893, 7265429311.805573, 15754051758.205786, 28742567230.791176], "accuracy": [0.09932637959718704, 0.09721305221319199, 0.09972262382507324, 0.10249637067317963, 0.10394927859306335, 0.09998679161071777], "val_loss": [111118580.57142857, 888014500.5714285, 2996003181.714286, 7100390253.714286, 13866505654.857143, 23959629238.857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 2, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [32, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 5, 3, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [19, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 12, 12, 8, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.math.add(beta, alpha))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3025495580883075, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [78, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 5, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 3, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta)))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [5.682735914346989, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19653943181037903, 0.08809932321310043, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [111.98242623465401, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.07885714620351791, "mapping_values": [1, 4, 4, 2, 2, 0, 4, 4, 2, 2, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302020420755425, 2.302398550448999, 2.3002965814638068, 2.300957977086829, 2.299807207506598, 2.299958956539198, 2.2985738926969264, 2.298900538872671, 2.2998503219371207, 2.299145268348419, 2.299046469433842, 2.3004104243041565, 2.299263942196007, 2.2999519886452178, 2.2996311192467793], "accuracy": [0.09259014576673508, 0.09219389408826828, 0.09417514503002167, 0.09721305221319199, 0.10421344637870789, 0.09708096832036972, 0.1010434553027153, 0.09945846349000931, 0.10117553919553757, 0.10130762308835983, 0.10276053100824356, 0.0956280529499054, 0.10157178342342377, 0.09893012791872025, 0.09998679161071777], "val_loss": [1.970635005405971, 1.9700993810381209, 1.9698808533804757, 1.9697459765842982, 1.9699054445539201, 1.9699111665998186, 1.969792434147426, 1.9696896416800362, 1.9696314675467355, 1.9696980203901018, 1.969858033316476, 1.9700585092817033, 1.9703069414411272, 1.9706272397722517, 1.9708908626011439], "val_accuracy": [0.04533333331346512, 0.05233333259820938, 0.05766666680574417, 0.05999999865889549, 0.06133333221077919, 0.06700000166893005, 0.0689999982714653, 0.07233333587646484, 0.07333333045244217, 0.07599999755620956, 0.07266666740179062, 0.07100000232458115, 0.06933332979679108, 0.06866666674613953, 0.06733333319425583]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [71, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 4, 0, 0, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.add(beta, grad))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024538841229925, 2.303802115239204, 2.3022464780665155, 2.3033436110557863, 2.3017385869434936, 2.3020513398756584], "accuracy": [0.09206181764602661, 0.08691058307886124, 0.0870426595211029, 0.0956280529499054, 0.09972262382507324, 0.08757099509239197], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [9, 1, 4, 0, 8, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 1, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024538841229925, 2.303802115239204, 2.3022464780665155, 2.3033436110557863, 2.3017385869434936, 2.3020513398756584], "accuracy": [0.09206181764602661, 0.08691058307886124, 0.0870426595211029, 0.0956280529499054, 0.09972262382507324, 0.08757099509239197], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 4, 0, 9, 8, 2, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [32, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 3, 3, 1, 2, 2, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024538841229925, 2.303802115239204, 2.3022464780665155, 2.3033436110557863, 2.3017385869434936, 2.3020513398756584], "accuracy": [0.09206181764602661, 0.08691058307886124, 0.0870426595211029, 0.0956280529499054, 0.09972262382507324, 0.08757099509239197], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}]