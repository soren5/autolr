[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 1, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 2, 0, 0, 2, 2], [42, 52, 13, 96, 41]], "fitness": -0.8502857089042664, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.207442391014779, 1.4839553126349125, 0.9515818840382578, 0.8064822921380076, 0.7350800625951361, 0.6950491726390595, 0.649674869114303, 0.6276430517785412, 0.604624119228171, 0.583756055271054, 0.5653173702819048, 0.5499922255987284, 0.5303543198614105, 0.5197699034155762, 0.5054021138383444, 0.4906698083794112, 0.4816663082422849, 0.4671417002302544, 0.45825918279602984, 0.4401988037439338, 0.44150717298840614, 0.43118418600218816, 0.41556759234731855, 0.4063422313148729, 0.3928009915652607, 0.39976284432215947, 0.3916962157347892, 0.38625232359484724, 0.3702684692490323, 0.3653685121669462, 0.3650624040426154, 0.342663126772169, 0.34761281898229224, 0.34512715697241275, 0.3347314138611499, 0.3369090707271232, 0.32848739353987866, 0.32473640296405976, 0.31100398545346447, 0.3022955722655162, 0.3037611662892775, 0.2946866312637589, 0.29607816778390067, 0.29984894858579975, 0.2889717794947888, 0.2801217978062206], "accuracy": [0.2541275918483734, 0.49148064851760864, 0.6513010263442993, 0.7030775547027588, 0.7215691208839417, 0.7424382567405701, 0.7604015469551086, 0.7677981853485107, 0.7709681391716003, 0.778232753276825, 0.7852331399917603, 0.7975168228149414, 0.8039889335632324, 0.8043851256370544, 0.8125742673873901, 0.8157442808151245, 0.8189142942428589, 0.8248580098152161, 0.8274996876716614, 0.8388587832450867, 0.8358209133148193, 0.8424250483512878, 0.8453308939933777, 0.8499537706375122, 0.857218325138092, 0.8541803956031799, 0.8549728989601135, 0.8580108284950256, 0.8664641380310059, 0.8614450097084045, 0.8636903762817383, 0.8693699836730957, 0.8659358024597168, 0.8704266548156738, 0.8757099509239197, 0.8745211958885193, 0.8732003569602966, 0.8828424215316772, 0.8853520154953003, 0.889050304889679, 0.889050304889679, 0.8906353116035461, 0.889050304889679, 0.8856161832809448, 0.8916919827461243, 0.894069492816925], "val_loss": [1.5619524887629919, 0.7377877916608538, 0.6384740556989398, 0.5748854194368634, 0.5347550085612706, 0.509175147329058, 0.48933678013937815, 0.4974100249154227, 0.4700110299246652, 0.4571561813354492, 0.450346691267831, 0.429270122732435, 0.41970695768083843, 0.41942877428872244, 0.40503578526633127, 0.3954452701977321, 0.39267734970365253, 0.3768443209784372, 0.3740507534572056, 0.3654059427125113, 0.3633779542786734, 0.3606678417750767, 0.35204524653298513, 0.3545811431748526, 0.3488984363419669, 0.35549100807734896, 0.3440942508833749, 0.33453404903411865, 0.34583355699266705, 0.34366277285984587, 0.3258192879813058, 0.32561572960444857, 0.33145019837788176, 0.3206467798777989, 0.318332314491272, 0.31945851870945524, 0.3210319195474897, 0.31511164563042776, 0.3095359376498631, 0.3212336472102574, 0.31157249212265015, 0.3160701223782131, 0.31341960600444246, 0.3098205838884626, 0.3099208474159241, 0.3084645526749747], "val_accuracy": [0.5460000038146973, 0.6996666789054871, 0.7273333072662354, 0.7463333606719971, 0.7666666507720947, 0.7749999761581421, 0.7879999876022339, 0.7753333449363708, 0.7990000247955322, 0.7996666431427002, 0.8080000281333923, 0.8169999718666077, 0.8240000009536743, 0.8246666789054871, 0.8303333520889282, 0.8383333086967468, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.8483333587646484, 0.8539999723434448, 0.8506666421890259, 0.8560000061988831, 0.8503333330154419, 0.8543333411216736, 0.8533333539962769, 0.8606666922569275, 0.859333336353302, 0.8550000190734863, 0.8606666922569275, 0.8653333187103271, 0.8686666488647461, 0.8603333234786987, 0.871666669845581, 0.8706666827201843, 0.8666666746139526, 0.8663333058357239, 0.871999979019165, 0.8733333349227905, 0.8669999837875366, 0.8736666440963745, 0.8733333349227905, 0.8726666569709778, 0.8736666440963745, 0.8726666569709778, 0.871999979019165]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [3, 1], [64], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8, 0], [1, 0, 2, 1, 0, 0, 2, 3, 1, 2, 1, 2, 2, 3, 3], [42, 52, 13, 96, 41, 7, 3]], "fitness": -0.8451428413391113, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.0287510515314287, 1.1907102372652316, 0.8480005340884154, 0.7551941579248864, 0.6747863544622322, 0.6175036782743499, 0.573186070486665, 0.5458919673532212, 0.5197241432977595, 0.4865657095549491, 0.4665794437154567, 0.45616444697737174, 0.4392050376515961, 0.4238548772076196, 0.4064131359721156, 0.3957344478800974, 0.3867562046541971, 0.36846837678904765, 0.35943506568918265, 0.3505604013342033, 0.3510796339040136, 0.3353911131647962, 0.33355989455861845, 0.3169335241267993, 0.30635600020904047, 0.30402961705559517, 0.30052889391667714, 0.28801584083957443, 0.2767509871848019, 0.2733462253156639, 0.26994622765538745, 0.26163362111862326, 0.2549462723316313], "accuracy": [0.31884822249412537, 0.6001849174499512, 0.6841896772384644, 0.7177387475967407, 0.7428345084190369, 0.7660810947418213, 0.7835160493850708, 0.7917051911354065, 0.8005547523498535, 0.8187822103500366, 0.8247259259223938, 0.8296129703521729, 0.8411042094230652, 0.8432175517082214, 0.8500858545303345, 0.850350022315979, 0.8516708612442017, 0.8640866279602051, 0.8659358024597168, 0.871879518032074, 0.8717474341392517, 0.8774270415306091, 0.8742570281028748, 0.8786157965660095, 0.8813894987106323, 0.8844274282455444, 0.887201189994812, 0.8898428082466125, 0.8972394466400146, 0.8953903317451477, 0.8976356983184814, 0.9012019634246826, 0.9027869701385498], "val_loss": [0.9197495324271066, 0.6488956042698452, 0.6070110286985125, 0.5306278807776315, 0.49404633045196533, 0.46034484250204905, 0.43820108686174664, 0.435751165662493, 0.3994621549333845, 0.381896368094853, 0.3783875107765198, 0.3647532973970686, 0.35604664257594515, 0.35009694950921194, 0.3500769649233137, 0.3378462365695408, 0.3332439831324986, 0.32778321845190866, 0.3242718917982919, 0.3229375055858067, 0.32957329068865093, 0.32658263615199495, 0.31512525251933504, 0.3158823677471706, 0.3163961427552359, 0.3180883952549526, 0.3208199739456177, 0.3114522099494934, 0.31955561467579435, 0.31916465929576326, 0.30521150146211895, 0.31463160685130526, 0.31805351802280973], "val_accuracy": [0.6166666746139526, 0.737666666507721, 0.731333315372467, 0.762666642665863, 0.7826666831970215, 0.7963333129882812, 0.8100000023841858, 0.8069999814033508, 0.8349999785423279, 0.8483333587646484, 0.8446666598320007, 0.8496666550636292, 0.8546666502952576, 0.8506666421890259, 0.8493333458900452, 0.8603333234786987, 0.859666645526886, 0.862333357334137, 0.8640000224113464, 0.8693333268165588, 0.8656666874885559, 0.8633333444595337, 0.871666669845581, 0.8659999966621399, 0.8709999918937683, 0.8696666955947876, 0.871666669845581, 0.8759999871253967, 0.8726666569709778, 0.8713333606719971, 0.871666669845581, 0.8736666440963745, 0.8759999871253967]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8], [1, 0, 2, 0, 0, 0, 2], [42, 52, 13, 96, 41]], "fitness": -0.8371428847312927, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 18, 11, 7, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), beta))))", "other_info": {"loss": [2.2005135392657738, 1.4495482722199147, 0.9346563390311847, 0.7978623229766708, 0.7297604023394663, 0.6960689277932974, 0.6483314673677962, 0.622274592961649, 0.5965312277525958, 0.5733331337250329, 0.5543208647051413, 0.5397336669113689, 0.5204788226461555, 0.5092254644371751, 0.4932066901815629, 0.4799655427266389, 0.47009389776563787, 0.45281626903118, 0.4470696266277544, 0.42786453301565536, 0.4269911212188031, 0.4174795121312724, 0.4089282391455825, 0.39408368518985165, 0.37961609285851794, 0.3853146693198247, 0.3821247494601775, 0.3666938081228218, 0.3565755755500456, 0.352964399662693, 0.3531710289299622, 0.33278427491208834, 0.33495277543471647, 0.3337165583645931, 0.3236252627100659, 0.3270174756679616, 0.3170131131674021, 0.3135787243218611, 0.30349034345727854, 0.29421097898700566, 0.28713195835043487, 0.2841251168654438, 0.28814320713222585], "accuracy": [0.2591467499732971, 0.5017831325531006, 0.6593580842018127, 0.7055870890617371, 0.7231541275978088, 0.7415136694908142, 0.7585523724555969, 0.765949010848999, 0.7741381525993347, 0.7814027070999146, 0.7917051911354065, 0.7977809906005859, 0.8068947196006775, 0.8117818236351013, 0.8153480291366577, 0.8241975903511047, 0.8264430165290833, 0.8337075710296631, 0.8381983637809753, 0.8448025584220886, 0.841500461101532, 0.8487650156021118, 0.8490291833877563, 0.8531237840652466, 0.8576145768165588, 0.8548408150672913, 0.8578787446022034, 0.8683133125305176, 0.8710870146751404, 0.8681812286376953, 0.8650112152099609, 0.8717474341392517, 0.8676528930664062, 0.8765024542808533, 0.8798044919967651, 0.8771628737449646, 0.8767666220664978, 0.887201189994812, 0.883238673210144, 0.8894465565681458, 0.8951261639595032, 0.8934090733528137, 0.8897107243537903], "val_loss": [1.5185486589159285, 0.7354707206998553, 0.616422312600272, 0.5867359638214111, 0.5405797106879098, 0.5090884140559605, 0.48808438437325613, 0.48775722299303326, 0.46005306925092426, 0.44578588008880615, 0.4383627005985805, 0.42023660455431255, 0.4070958324841091, 0.40666359663009644, 0.40037196023123606, 0.38796476806913105, 0.3811800650187901, 0.368001503603799, 0.363207289150783, 0.35328508274895803, 0.3579824651990618, 0.35270813533238005, 0.34689609493528095, 0.3438540441649301, 0.33816977058138165, 0.34297434772763935, 0.3401534301894052, 0.329961291381291, 0.34269948516573223, 0.3466316546712603, 0.3235201324735369, 0.3228552000863211, 0.3334075723375593, 0.31806937285832, 0.31826772008623394, 0.32407091345105854, 0.3221040112631662, 0.31290830033166067, 0.3111334272793361, 0.32245815651757376, 0.3130583167076111, 0.31670507362910677, 0.3127378651074001], "val_accuracy": [0.5540000200271606, 0.703000009059906, 0.7326666712760925, 0.7416666746139526, 0.7643333077430725, 0.7760000228881836, 0.7856666445732117, 0.7836666703224182, 0.8013333082199097, 0.8066666722297668, 0.8096666932106018, 0.8203333616256714, 0.8303333520889282, 0.8246666789054871, 0.831333339214325, 0.8366666436195374, 0.8403333425521851, 0.843666672706604, 0.8503333330154419, 0.8500000238418579, 0.8553333282470703, 0.8526666760444641, 0.8543333411216736, 0.8586666584014893, 0.8616666793823242, 0.8566666841506958, 0.859666645526886, 0.8629999756813049, 0.8579999804496765, 0.8569999933242798, 0.8636666536331177, 0.8696666955947876, 0.859666645526886, 0.8700000047683716, 0.8650000095367432, 0.8659999966621399, 0.8629999756813049, 0.8730000257492065, 0.8703333139419556, 0.8669999837875366, 0.8723333477973938, 0.8693333268165588, 0.8693333268165588]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [2, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [3, 1], [64], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8], [1, 0, 2, 0, 0, 3, 3], [42, 52, 13, 32, 41, 7, 3]], "fitness": -0.6734285950660706, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022985645745644, 2.3013317848571364, 2.30113374615358, 2.300000815579857, 2.297227894011238, 2.2953685855412007, 2.2920812257072156, 2.2878039731577546, 2.2849228841879614, 2.2787108867868473, 2.274597398325626, 2.2695350570449455, 2.264383527848699, 2.25800279313862, 2.251155021939815, 2.245011280524874, 2.2373316873727522, 2.2291119084177455, 2.219803683683148, 2.2110830143127522, 2.203283091640712, 2.1897111489803973, 2.1789438071393885, 2.1656151782441304, 2.152816473737038, 2.137692456106232, 2.1198268802709834, 2.102284057879445, 2.0828993897380736, 2.0644430743862277, 2.0366748356154694, 2.012645353431384, 1.9822783301361895, 1.955751297338811, 1.9189291350546451, 1.8871833999096175, 1.8511158148090774, 1.8141885299755676, 1.77612279771798, 1.7309636897761131, 1.6937987610270648, 1.6559427771601678, 1.6164623195815473, 1.5745083906741553, 1.5436684954451405, 1.5073196029209615, 1.4924114990417023, 1.4617788973674641, 1.4373031397852143, 1.419018153705932, 1.3973382930902993, 1.3979177284927227, 1.3865407422202658, 1.3815364113982642, 1.3498190459857418, 1.3752647828526736, 1.3618137314807406, 1.3833514895059367, 1.358612147351896, 1.3573814678689697, 1.3735856175532888, 1.359633248920816], "accuracy": [0.09047681838274002, 0.09192973375320435, 0.09311848133802414, 0.09628847241401672, 0.10381719470024109, 0.10751552134752274, 0.1150442510843277, 0.12917712330818176, 0.13459251821041107, 0.15374454855918884, 0.16642451286315918, 0.17434948682785034, 0.19614318013191223, 0.20776647329330444, 0.22586184740066528, 0.24514594674110413, 0.2627129852771759, 0.27763834595680237, 0.2899220585823059, 0.30207371711730957, 0.3106590807437897, 0.32201823592185974, 0.33681151270866394, 0.3471139967441559, 0.35147273540496826, 0.36203935742378235, 0.3623035252094269, 0.3829084634780884, 0.38409721851348877, 0.3793422281742096, 0.3959846794605255, 0.4093250632286072, 0.41143837571144104, 0.40126800537109375, 0.4181746244430542, 0.42425042390823364, 0.42649585008621216, 0.4364020526409149, 0.44089287519454956, 0.44710078835487366, 0.4497424364089966, 0.4581957459449768, 0.45925241708755493, 0.46453574299812317, 0.4855369031429291, 0.4881785809993744, 0.47906485199928284, 0.4900277256965637, 0.5128780603408813, 0.5085193514823914, 0.5243692994117737, 0.5164443254470825, 0.5262184739112854, 0.5234447121620178, 0.5291243195533752, 0.5301809310913086, 0.5348038673400879, 0.5299167633056641, 0.5419363379478455, 0.5472196340560913, 0.5460308790206909, 0.5552766919136047], "val_loss": [1.9706730842590332, 1.9699418204171317, 1.9687512942722865, 1.9670992578778947, 1.9649958610534668, 1.9624455996922083, 1.9594573974609375, 1.9560396330697196, 1.9522085871015276, 1.9479758398873466, 1.9433518137250627, 1.938335623059954, 1.9329419817243303, 1.9271679605756487, 1.9209955760410853, 1.9144323212759835, 1.9074489048549108, 1.9000159672328405, 1.892075742994036, 1.8835471698216029, 1.8743388312203544, 1.8643316541399275, 1.8534064974103654, 1.841402462550572, 1.8282055173601424, 1.813690253666469, 1.7977311270577567, 1.7801835196358817, 1.760902268545968, 1.7397185734340124, 1.7164643151419503, 1.690997873033796, 1.663170235497611, 1.6328910759517126, 1.6000816822052002, 1.564779826572963, 1.5270779473440987, 1.4871890204293388, 1.445422649383545, 1.4021285602024622, 1.3577630860464913, 1.312934126172747, 1.2682410648890905, 1.2242873736790247, 1.1816700867244176, 1.1408353533063615, 1.1021578993116106, 1.065800598689488, 1.0317560945238387, 0.9999333109174456, 0.9702672277178083, 0.9425632953643799, 0.9166763510022845, 0.8922454289027623, 0.869370835168021, 0.8481346879686628, 0.829345873423985, 0.8140156098774501, 0.8026427030563354, 0.7949951376233783, 0.7894716944013324, 0.7836214133671352], "val_accuracy": [0.0403333343565464, 0.04466666653752327, 0.05166666582226753, 0.06199999898672104, 0.07866666465997696, 0.10366666316986084, 0.13333334028720856, 0.17133332788944244, 0.20766666531562805, 0.2540000081062317, 0.28866666555404663, 0.32466667890548706, 0.3490000069141388, 0.36533331871032715, 0.37400001287460327, 0.38066667318344116, 0.38733333349227905, 0.39766666293144226, 0.40166667103767395, 0.4073333442211151, 0.41200000047683716, 0.41866666078567505, 0.42266666889190674, 0.42500001192092896, 0.4346666634082794, 0.4363333284854889, 0.44333332777023315, 0.44866666197776794, 0.45500001311302185, 0.4596666693687439, 0.46666666865348816, 0.47433334589004517, 0.4803333282470703, 0.48899999260902405, 0.4970000088214874, 0.503333330154419, 0.5113333463668823, 0.5199999809265137, 0.527999997138977, 0.5396666526794434, 0.5446666479110718, 0.5526666641235352, 0.5633333325386047, 0.5713333487510681, 0.5830000042915344, 0.5960000157356262, 0.6046666502952576, 0.6156666874885559, 0.6266666650772095, 0.6359999775886536, 0.6473333239555359, 0.6566666960716248, 0.6639999747276306, 0.6696666479110718, 0.6733333468437195, 0.6776666641235352, 0.6819999814033508, 0.6803333163261414, 0.6816666722297668, 0.6783333420753479, 0.6729999780654907, 0.6736666560173035]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 1, 9, 1, 2, 2, 2, 3, 2, 2, 3, 2, 6, 1, 5, 3, 1, 9, 6, 8, 3, 9, 9, 9], [1, 0, 0, 2, 1, 0, 2, 2, 3, 2, 3, 1, 3, 3, 2], [42, 52, 13, 23, 41, 69, 1, 89, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 4, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 37, 24, 13, 8], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))))), tf.math.pow(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, alpha), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), beta), tf.math.divide_no_nan(tf.math.subtract(tf.math.square(beta), tf.math.multiply(tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(sigma, beta)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), sigma)), alpha), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 8, 3, 6, 2, 8], [1, 0, 2, 0, 0, 0, 2], [42, 33, 13, 40, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3337122424403676, 2.883272772184248, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04873860627412796, 0.011227050796151161, 0.09338264167308807, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.081817422594343, 7.416958945138114, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.005333333276212215, 0.07800000160932541, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 4, 0, 4, 0, 7, 3, 1, 1, 2, 2], [3, 0, 2, 1, 0, 2, 1, 2, 2, 3, 3, 2, 3, 2], [42, 52, 29, 96, 41, 7, 1, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 22, 13, 9, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.pow(beta, alpha))), tf.math.negative(tf.math.pow(beta, beta)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 2, 0, 2, 2, 0, 2, 3, 3, 0], [2, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [3, 1, 2, 1, 2, 4, 5, 3, 2, 2, 8, 6, 5, 7], [1, 0, 0, 0, 0, 2, 1, 3, 3, 2, 3, 0], [24, 52, 69, 96, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 26, 14, 12, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.math.add(tf.math.subtract(tf.math.add(tf.math.pow(tf.math.square(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), beta)), alpha), sigma), tf.math.divide_no_nan(tf.math.square(sigma), tf.math.add(beta, sigma)))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8, 0], [1, 1, 2, 0, 0, 0, 2], [42, 52, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303609720893178, 2.3038424226853826, 2.3038385451950054, 2.306365174010225, 2.3054797517121224, 2.309157116947519, 2.3093426880693517], "accuracy": [0.09325055778026581, 0.09787346422672272, 0.1002509593963623, 0.09734513610601425, 0.1010434553027153, 0.09615638852119446, 0.1002509593963623], "val_loss": [1.973996843610491, 1.9738262040274483, 1.9761206763131278, 1.9750514030456543, 1.9755009923662459, 1.9766451290675573, 1.978048665182931], "val_accuracy": [0.0949999988079071, 0.10366666316986084, 0.0949999988079071, 0.10366666316986084, 0.10366666316986084, 0.09666666388511658, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [21, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [3, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 3, 5, 3, 2, 2, 8, 1, 2, 4, 3], [1, 0, 2, 0, 0, 0, 2, 3, 0, 2, 2, 0], [42, 53, 13, 96, 41, 85, 82]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 27, 15, 12, 7], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(beta)), tf.math.subtract(sigma, tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), beta), beta), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8, 9, 3, 7, 8, 5, 6, 9, 1, 7, 6, 0, 2], [1, 0, 2, 0, 1, 0, 2, 3, 0, 3, 1, 0], [69, 52, 13, 96, 41, 93, 54, 64]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 35, 23, 12, 8], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), alpha)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), beta)), tf.math.subtract(tf.math.add(sigma, tf.math.divide_no_nan(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 2, 3, 2, 2, 3, 2, 6, 1, 5, 3, 6, 9, 6, 7, 3, 6, 9, 9], [1, 1, 2, 0, 0, 0, 2], [42, 52, 13, 96, 41, 7, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.30239975526427, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [3, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [8, 1, 9, 1, 2, 0, 2, 3, 2, 2, 3, 2, 6, 1, 5, 3, 6, 9, 6, 7, 3, 6, 6, 9], [1, 2, 2, 1, 0, 0, 2, 3, 1, 2, 1, 2, 2, 3, 3], [70, 9, 39, 96, 42, 66, 53]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [303.69617598627724, 1.4426261998047573e+27, 4.151537371758756, 8.434374011912288, 14.28643524201161, 20.84680344346429], "accuracy": [0.04543653503060341, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4465678628.571428, 2.618016038622175, 5.411023139953613, 10.040450504847936, 15.484175545828682, 21.308436257498606], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [3, 1], [64], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [2, 6, 9, 1, 1, 3, 5, 3, 2, 2, 8, 8, 9], [1, 0, 1, 0, 0, 3, 2, 3, 2], [42, 73, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 20, 13, 7, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(tf.math.multiply(alpha, tf.math.square(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.multiply(tf.math.add(tf.math.add(tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma), beta))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302398536341018, 2.3025838474414257, 2.3025840589351754, 2.3025838384035007, 2.302584202880668, 2.3025835506069883, 2.302584234560643], "accuracy": [0.09998679161071777, 0.10474177449941635, 0.10434553027153015, 0.10355303436517715, 0.10276053100824356, 0.10606260597705841, 0.10527011007070541], "val_loss": [1.973644392830985, 1.9736442565917969, 1.9736443247113908, 1.9736441203526087, 1.9736441203526087, 1.9736443247113908, 1.9736443247113908], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [5, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8, 0], [1, 1, 2, 0, 0, 0, 2], [42, 52, 13, 96, 41]], "fitness": -0.08028571307659149, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.302351107450603, 2.301696865235211, 2.3020864546401327, 2.3020337678186014, 2.3006984713275624, 2.3007774040636337, 2.3003028437383044, 2.299529841012014, 2.2998471833522434, 2.298623393697037, 2.299161918694553, 2.298646583816615, 2.298971657424854, 2.298868455906995, 2.2983958722105617, 2.298665719245797, 2.29828245752224, 2.298804820316059, 2.2987162815250692], "accuracy": [0.09021265059709549, 0.09113723784685135, 0.09153348207473755, 0.0936468094587326, 0.09668471664190292, 0.09655263274908066, 0.09589222073554993, 0.09760929644107819, 0.09694888442754745, 0.1002509593963623, 0.09893012791872025, 0.1002509593963623, 0.10540219396352768, 0.10249637067317963, 0.10751552134752274, 0.10368511080741882, 0.10500594228506088, 0.10738343745470047, 0.1010434553027153], "val_loss": [1.9708659989493233, 1.9706144332885742, 1.9703198160443987, 1.9699818747384208, 1.969644478389195, 1.9693918228149414, 1.9692542893545968, 1.969160829271589, 1.9690436635698592, 1.968919345310756, 1.9688029970441545, 1.9687357630048479, 1.9686694826398576, 1.968649114881243, 1.9686784063066756, 1.9687728881835938, 1.9689105578831263, 1.9691003390720911, 1.9693314688546317], "val_accuracy": [0.03933333232998848, 0.04233333468437195, 0.04399999976158142, 0.049666665494441986, 0.05433333292603493, 0.06199999898672104, 0.06599999964237213, 0.06866666674613953, 0.070333331823349, 0.07333333045244217, 0.07699999958276749, 0.08100000023841858, 0.08166666328907013, 0.08366666734218597, 0.08233333379030228, 0.0820000022649765, 0.08233333379030228, 0.0806666687130928, 0.07866666465997696]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [2, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [3, 1], [64], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [5, 1, 3, 9, 1, 0, 8, 3, 2, 2, 9, 2, 6, 1, 5, 3, 6, 9, 6, 7, 3, 6, 9, 9], [1, 0, 2, 0, 0, 0, 2, 0, 1], [42, 52, 13, 96, 41, 40]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3023739557980454, 2.3019093042508945, 2.302713406226103, 2.3031124178728075, 2.3023241426588568, 2.302984282293686], "accuracy": [0.09034473448991776, 0.09047681838274002, 0.08875974267721176, 0.08915598690509796, 0.09245806187391281, 0.09245806187391281], "val_loss": [1.9709388187953405, 1.9709388869149345, 1.9709388187953405, 1.9709388869149345, 1.9709390231541224, 1.9709390231541224], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 6, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8], [2, 0, 2, 0, 1, 0, 2], [42, 52, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3023739378166677, 2.3019092727598656, 2.302713437717132, 2.3031123998914302, 2.3023241426588568, 2.3029842508026572], "accuracy": [0.09034473448991776, 0.09047681838274002, 0.08875974267721176, 0.08915598690509796, 0.09245806187391281, 0.09245806187391281], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 1, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 43, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 3, 4, 1, 1, 0, 7, 9, 0, 4, 5], [1, 0, 2, 1, 0, 1, 1, 0, 2, 3, 3, 2, 3, 0], [52, 52, 13, 19, 41, 7, 1, 3]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 31, 19, 12, 5], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.multiply(tf.math.add(tf.math.add(tf.math.multiply(alpha, tf.math.pow(tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, alpha)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta)))), sigma), tf.math.pow(sigma, beta))))))", "other_info": {"loss": [2.3023739378166677, 2.3019092727598656, 2.302713437717132, 2.3031123998914302, 2.3023241426588568, 2.3029842508026572], "accuracy": [0.09034473448991776, 0.09047681838274002, 0.08875974267721176, 0.08915598690509796, 0.09245806187391281, 0.09245806187391281], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 4, 3, 5, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 1, 0, 2, 0, 2, 2, 0, 2, 3, 3, 0], [38, 43, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 5, 0, 2, 4, 8, 3, 7, 8, 2, 7, 7, 0, 1, 6], [3, 0, 2, 1, 0, 2, 1, 0, 2, 3, 3, 2, 3], [42, 52, 13, 96, 41, 7, 1, 3]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3023739378166677, 2.3019092727598656, 2.302713437717132, 2.3031123998914302, 2.3023241426588568, 2.3029842508026572], "accuracy": [0.09034473448991776, 0.09047681838274002, 0.08875974267721176, 0.08915598690509796, 0.09245806187391281, 0.09245806187391281], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 2, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [2, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [9, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 1, 9, 1, 2, 0, 2, 3, 2, 2, 3, 2, 6, 5, 5, 3, 6, 9, 6, 7, 1, 6, 9, 9], [1, 0, 2, 1, 2, 0, 2, 3, 1, 2, 1, 2, 2, 3, 3], [42, 7, 13, 34, 41, 55, 50]], "fitness": -0.02857142873108387, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 25, 14, 11, 3], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(alpha, beta), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), beta), sigma), tf.math.divide_no_nan(tf.math.square(alpha), beta))), alpha))))", "other_info": {"loss": [2.34179169683566, 3.227587289184139, 5.447849770610075, 28.052687059729216, 2.8120334989847273, 2.7985015812330807, 3.011541023986246, 4.685244559202495, 3.1468642714662542, 3.3395958976848896, 3.4225166374587457], "accuracy": [0.04583278298377991, 0.010698718950152397, 0.014529123902320862, 0.07053229212760925, 0.08849557489156723, 0.09008057415485382, 0.09734513610601425, 0.0738343670964241, 0.09245806187391281, 0.09219389408826828, 0.09179764986038208], "val_loss": [2.114290714263916, 4.259929520743234, 19.289393833705358, 2.32647636958531, 2.3692319052559987, 2.7789222172328403, 8.8606504712786, 2.5277970177786693, 2.6630804198128835, 3.1143618311200822, 2.99813073022025], "val_accuracy": [0.005333333276212215, 0.01066666655242443, 0.01066666655242443, 0.10233332961797714, 0.09433333575725555, 0.10899999737739563, 0.06433333456516266, 0.09066666662693024, 0.08033332973718643, 0.09000000357627869, 0.09399999678134918]}}]