[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [4, 8, 4, 3, 8, 2, 5], [0, 2, 0, 2, 3], [77, 90], [0], [1], [], [2], [], [0, 0, 1], [0, 1], [6], [4], [], [0], [9], [], [93]], "fitness": -0.10000000149011612, "tree_depth": 19, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.square(tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026492595672607, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 1, 0, 1]}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [4, 9, 8, 3, 8, 2, 5], [0, 2, 0, 2, 3], [77, 90], [0], [1], [], [2], [], [0, 0, 0, 1, 1], [0, 1, 0], [6, 2], [4], [76, 71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [2, 5, 1, 6, 9, 6, 6, 6, 2, 6, 9, 9, 8, 1, 3, 2, 2, 9, 4, 9, 8, 4, 2, 6], [2, 1, 3, 0, 0, 0, 0, 2, 0, 1, 3, 2, 3, 0], [80, 55, 71, 29, 62, 92, 92, 41, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 19, 13, 6, 6], "tree_depth": 18, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.subtract(tf.math.divide_no_nan(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(sigma, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026492595672607, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [9, 8, 4, 2, 8, 2, 5], [0, 2, 0, 2, 3], [7, 55, 63], [1], [1], [], [2], [99], [1, 0, 0], [0, 0, 1], [6, 5], [4], [76, 71], [0, 0, 0, 0, 0, 1, 1, 1, 0], [9], [0, 0, 0, 0, 0, 0, 2], [27]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 5, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026492595672607, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 8, 4, 3, 8, 2, 5, 4, 8, 8], [0, 2, 0, 2, 3, 2], [77, 90], [0], [0], [9], [2], [43], [1, 0, 0], [0, 1], [5, 5], [4], [], [0], [9], [0, 0, 0, 0, 0, 0, 2], [93]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 2, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 23, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026492595672607, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 8, 4, 3, 8, 2, 5], [0, 2, 0, 2, 3], [77, 90], [1], [1], [], [3], [58], [0, 0, 1], [1, 1], [6], [6], [76, 71], [0, 1, 0, 0, 1, 1], [7, 3, 8], [0, 0, 0, 0, 0, 0, 2], [93, 45, 53]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 3], "tree_depth": 10, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026492595672607, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [4, 8, 2, 3, 8, 2, 5], [2, 2, 2, 0, 0, 1, 2, 2, 1, 0, 3, 3, 2, 0, 2, 0, 1], [7, 51, 78], [1, 1], [1], [9], [2], [99], [1, 0, 0], [0, 1, 1], [0, 8], [4], [76, 71], [0, 0, 0, 0, 1, 1, 1, 1], [5, 0, 3, 8], [2, 1, 3, 1], [93]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 0], "tree_depth": 22, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.multiply(tf.math.sqrt(beta), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [4, 9, 8, 3, 8, 2, 5], [0, 2, 0, 2, 3], [3, 23], [0], [1], [], [3], [99], [0, 0, 1, 0, 1], [0, 1, 1], [6, 2], [4], [76, 71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [2, 5, 2, 6, 2, 6, 6, 6, 7, 6, 9, 9, 7, 1, 3, 2, 2, 9, 4, 9, 8, 4, 2, 6], [2, 1, 3, 0, 0, 0, 0, 2, 3, 1, 3, 0, 3, 0], [80, 55, 71, 29, 59, 45, 36, 41, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 22, 13, 9, 6], "tree_depth": 22, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, sigma))", "other_info": {"loss": [2.3022172451019287, 2.3030145168304443, 2.320833444595337, 2.766334056854248, 6.035743713378906, 10.411128044128418], "accuracy": [0.10619468986988068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3026130199432373, 2.3063583374023438, 2.375518321990967, 4.241318225860596, 8.58009147644043, 12.940086364746094], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [4, 8, 2, 3, 8, 2, 5], [2, 0, 2, 0, 0, 1, 2, 2, 1, 0, 3, 3, 2, 0, 2, 0, 1], [66, 90, 95], [1, 1], [1], [9], [3], [99], [0, 0, 1, 0], [0, 0, 1], [0, 1], [4], [76, 71], [0, 0, 0, 0, 1, 1, 1, 1], [9], [2, 1, 3, 1], [93]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 1, 1, 0, 1], "tree_depth": 20, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026492595672607, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [4, 8, 4, 2, 8, 2, 0, 5, 9, 9], [0, 2, 0, 2, 3], [7, 55, 63], [1, 0], [0, 1], [8], [2], [99], [1, 0, 0], [0, 0, 1], [5, 5], [4], [76, 71], [0, 0, 0, 0, 0, 1, 1, 1, 0], [9], [0, 0, 0, 0, 0, 0, 2], [10]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 7, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302316904067993, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]