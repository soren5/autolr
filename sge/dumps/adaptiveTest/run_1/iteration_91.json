[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7365714311599731, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2963341879665164, 2.256185665327119, 2.1712035389309308, 1.9906544829750137, 1.6683330581235754, 1.4050049185831597, 1.3796269738395468, 1.2065285086206645, 0.9777457232504253, 0.8983583276723086, 0.8933549347869819, 0.8613394867821204, 0.8081852532632914, 0.8153050955433683, 0.8082776530591047, 0.7879913335998439, 0.7416806149759848, 0.733007033967764, 0.7145749244707577, 0.7060585298148979, 0.6894231309129923, 0.6905779129384043, 0.6728146793489301, 0.6659405367438347, 0.6509082730120955, 0.639747254529791, 0.6281442416893603, 0.6131250664400875, 0.600442546280919, 0.5914592206155336, 0.5844253447817584, 0.5618749169499694, 0.5559240097005086, 0.552828730302102, 0.5496802888392395, 0.5377677532313695, 0.5343674557115486, 0.5311589539562785, 0.5378117619834918, 0.522755663251014, 0.5216573070635838, 0.5184635284428489, 0.5021039204881838, 0.5084622448634761, 0.4999081863152148, 0.4905366197222527, 0.5042518498426447, 0.48664307291198167, 0.4758147770985951, 0.4773052753025688, 0.47153426631802914, 0.46560884455349055, 0.4687656416254997, 0.4566373623530658, 0.4512697476846919, 0.44265622965348883, 0.45050516422272613, 0.44880821136136523, 0.43355757813286144, 0.43501226275494037, 0.4367081659297744, 0.42713670209571747, 0.40930599143098545, 0.41256564619392844, 0.41075629580841244, 0.41584901155230075, 0.40495302488680734, 0.40924987931844187, 0.3908071583209493, 0.38914178860752796, 0.39480600456567316, 0.4028109122638957, 0.38327587873487584, 0.39224496868780623, 0.38158439161392993, 0.3756695549013498, 0.367772704653374, 0.3681440334498937, 0.36516177993582194, 0.36057493536227636, 0.3620530499789725], "accuracy": [0.10315678268671036, 0.2141064554452896, 0.3419627547264099, 0.4029850661754608, 0.4583278298377991, 0.5091797709465027, 0.5388984084129333, 0.6065248847007751, 0.6487914323806763, 0.6580372452735901, 0.6733588576316833, 0.677189290523529, 0.6971337795257568, 0.6905296444892883, 0.6884163022041321, 0.7079645991325378, 0.7113987803459167, 0.7121912837028503, 0.7214370369911194, 0.7329282760620117, 0.7405890822410583, 0.7386078238487244, 0.7471932172775269, 0.7464007139205933, 0.7531369924545288, 0.7518161535263062, 0.7582882046699524, 0.7626469135284424, 0.776251494884491, 0.7761194109916687, 0.7817989587783813, 0.7862898111343384, 0.7872143983840942, 0.7951393723487854, 0.7987055778503418, 0.7956677079200745, 0.8012151718139648, 0.8024039268493652, 0.793950617313385, 0.7996301651000977, 0.7989697456359863, 0.8029322624206543, 0.8055738806724548, 0.8123101592063904, 0.811649739742279, 0.8152159452438354, 0.8133667707443237, 0.819442629814148, 0.8182538747787476, 0.8190463781356812, 0.8235371708869934, 0.8230088353157043, 0.8308017253875732, 0.829216718673706, 0.829216718673706, 0.83119797706604, 0.8256505131721497, 0.835160493850708, 0.8391229510307312, 0.8350284099578857, 0.8342359066009521, 0.8378021121025085, 0.8469158411026001, 0.8437458872795105, 0.8470479249954224, 0.8442742228507996, 0.8466516733169556, 0.8438779711723328, 0.8491612672805786, 0.8511425256729126, 0.854708731174469, 0.8454629778862, 0.8553691506385803, 0.8469158411026001, 0.8532558679580688, 0.8539162874221802, 0.8597279191017151, 0.8553691506385803, 0.8555012345314026, 0.8602562546730042, 0.863029956817627], "val_loss": [1.9490844181605749, 1.8928909301757812, 1.7769861902509416, 1.5127250807625907, 1.1183804784502303, 0.8496271882738385, 0.7541535411562238, 0.7131151131221226, 0.6669866016932896, 0.6741652488708496, 0.6724562985556466, 0.6114191498075213, 0.5928394964763096, 0.5856349297932216, 0.5865371227264404, 0.5748660564422607, 0.5639240912028721, 0.5569803033556256, 0.5523012025015694, 0.5469815901347569, 0.5364258459636143, 0.5322599070412772, 0.5204699380057198, 0.5054574523653302, 0.49034437111445833, 0.48412699358803885, 0.4710069554192679, 0.4647241660526821, 0.46026664120810373, 0.4522406373705183, 0.4474231004714966, 0.4425402879714966, 0.4435520853315081, 0.4482757534299578, 0.44235888549259733, 0.43587487084524973, 0.43281947714941843, 0.4305254646709987, 0.42653231961386545, 0.4266046796526228, 0.4250980530466352, 0.4201222998755319, 0.41903720583234516, 0.41980024746486116, 0.41672647850854055, 0.4188775590487889, 0.41439024039677214, 0.4070648125239781, 0.4077711360795157, 0.4068688579968044, 0.4078927550997053, 0.40654259068625315, 0.3969476563589914, 0.392069365297045, 0.3924898760659354, 0.3890146017074585, 0.39112297126225065, 0.3948894313403538, 0.3915133220808847, 0.3903577838625227, 0.38694630350385395, 0.37822157996041433, 0.37704817737851826, 0.3809125082833426, 0.38419491052627563, 0.38162671668188913, 0.373479425907135, 0.37032261916569303, 0.3704835261617388, 0.3800998330116272, 0.39503183535167147, 0.3842084067208426, 0.37118540491376606, 0.3700791001319885, 0.3703934039388384, 0.3818096859114511, 0.3824111648968288, 0.3811159644808088, 0.3723031963620867, 0.3730013966560364, 0.37300850663866314], "val_accuracy": [0.2436666637659073, 0.382666677236557, 0.4333333373069763, 0.5116666555404663, 0.6050000190734863, 0.6786666512489319, 0.6893333196640015, 0.7203333377838135, 0.7089999914169312, 0.734666645526886, 0.7236666679382324, 0.7329999804496765, 0.7363333106040955, 0.7333333492279053, 0.7363333106040955, 0.7386666536331177, 0.7476666569709778, 0.7586666941642761, 0.7699999809265137, 0.7706666588783264, 0.7663333415985107, 0.7670000195503235, 0.7743333578109741, 0.7829999923706055, 0.7896666526794434, 0.7889999747276306, 0.7916666865348816, 0.7926666736602783, 0.7950000166893005, 0.8009999990463257, 0.8066666722297668, 0.8136666417121887, 0.812666654586792, 0.8106666803359985, 0.8166666626930237, 0.8169999718666077, 0.8166666626930237, 0.8183333277702332, 0.8180000185966492, 0.8159999847412109, 0.8153333067893982, 0.8223333358764648, 0.8270000219345093, 0.8320000171661377, 0.8326666951179504, 0.8293333053588867, 0.831333339214325, 0.8339999914169312, 0.8330000042915344, 0.8366666436195374, 0.8349999785423279, 0.8353333473205566, 0.8420000076293945, 0.8399999737739563, 0.8383333086967468, 0.8433333039283752, 0.8450000286102295, 0.843666672706604, 0.847000002861023, 0.8473333120346069, 0.8476666808128357, 0.8533333539962769, 0.8519999980926514, 0.8513333201408386, 0.8516666889190674, 0.8526666760444641, 0.8546666502952576, 0.8550000190734863, 0.8566666841506958, 0.8556666374206543, 0.8576666712760925, 0.8586666584014893, 0.8566666841506958, 0.8533333539962769, 0.8603333234786987, 0.8640000224113464, 0.8636666536331177, 0.859333336353302, 0.862666666507721, 0.8629999756813049, 0.862333357334137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 0, 2, 0, 5, 6, 8, 4, 4], [0, 0, 2, 1, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.722000002861023, "mapping_values": [1, 14, 14, 10, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2963341879665164, 2.256185615854713, 2.1712036963860752, 1.9906544694653623, 1.6683291966621319, 1.4049995859868145, 1.3796236577239949, 1.2065203834943579, 0.9777615318728508, 0.8982830317406811, 0.8933238250987877, 0.8614883835856405, 0.8083966776695171, 0.8150129745570566, 0.8086195107401323, 0.7883087393787511, 0.7419967778748399, 0.7330581331612049, 0.7144171341598278, 0.70630668291657, 0.6898401958862741, 0.6905808347547846, 0.6726729458569694, 0.6657657382148463, 0.6513454139413709, 0.6407741692560287, 0.6289860204289287, 0.6139262008267056, 0.600398365115414, 0.5916090138111888, 0.5853494678065132, 0.5618406643783727, 0.5561691494728707, 0.5529947634528043, 0.5496048126805176, 0.5387243658103459, 0.5335621638793073, 0.5310960738115055, 0.5377175328659423, 0.5237842065830429, 0.5222145679557265, 0.5193321982379193, 0.5027891373976016, 0.5074621636271398, 0.5004187034948108, 0.4924009097030276, 0.5034669669840267, 0.48737575052956295, 0.47529697913802954, 0.47676192367900366, 0.4720866114448295, 0.46705429010922805, 0.4704764494767137, 0.45865979403347906, 0.45194069671750525, 0.44425580453847485, 0.45326451367359466, 0.4519910291240767, 0.43464268047449656, 0.4370258928620663, 0.4398471476686566, 0.43083950558736606, 0.41143107395744627, 0.41689881807572776, 0.415346630493317, 0.42072814258964164, 0.41304090684431105, 0.41042188909374694, 0.39270253998098625, 0.3960991245313737, 0.39749441763602383, 0.40272442639669204, 0.3895671703182176, 0.390603297091494, 0.3797806242886567, 0.37465796729970713, 0.3725749850863589, 0.3676232386416354, 0.36757517732476136, 0.36640170081936213, 0.3637649996004179, 0.3623020710324441], "accuracy": [0.10315678268671036, 0.2141064554452896, 0.3419627547264099, 0.4031171500682831, 0.4583278298377991, 0.509311854839325, 0.5388984084129333, 0.6065248847007751, 0.6489235162734985, 0.6580372452735901, 0.6733588576316833, 0.677189290523529, 0.6964733600616455, 0.689869225025177, 0.6880200505256653, 0.707568347454071, 0.7112666964530945, 0.7129837274551392, 0.720380425453186, 0.733588695526123, 0.7391361594200134, 0.7374191284179688, 0.7481178045272827, 0.7464007139205933, 0.7537974119186401, 0.7508915662765503, 0.7581561207771301, 0.7631752490997314, 0.7751948237419128, 0.77677983045578, 0.7798177003860474, 0.7868181467056274, 0.7891955971717834, 0.7951393723487854, 0.7992339134216309, 0.7948752045631409, 0.8016114234924316, 0.7997622489929199, 0.7931581139564514, 0.7979130744934082, 0.7993659973144531, 0.8020076751708984, 0.8042530417442322, 0.8138951063156128, 0.8131026029586792, 0.8144234418869019, 0.8138951063156128, 0.8201030492782593, 0.8195747137069702, 0.8190463781356812, 0.8251221776008606, 0.8215559124946594, 0.8301413059234619, 0.8278959393501282, 0.8297450542449951, 0.8298771381378174, 0.8277638554573059, 0.8333113193511963, 0.8356888294219971, 0.8327829837799072, 0.83119797706604, 0.837537944316864, 0.8445383906364441, 0.8444063067436218, 0.8444063067436218, 0.8383304476737976, 0.8438779711723328, 0.846387505531311, 0.8485008478164673, 0.8453308939933777, 0.8562937378883362, 0.8418967127799988, 0.852859616279602, 0.8487650156021118, 0.854708731174469, 0.8562937378883362, 0.8584070801734924, 0.8568220734596252, 0.8532558679580688, 0.8581429123878479, 0.8603883385658264, 0.8610487580299377], "val_loss": [1.9490844181605749, 1.8928909982953752, 1.7769864627293177, 1.5127240930284773, 1.1183789116995675, 0.8496218749455043, 0.7541789327348981, 0.7131748369761876, 0.6668699639184135, 0.6740847655705043, 0.6724671976906913, 0.6116188083376203, 0.5928256511688232, 0.5859030996050153, 0.5868926729474749, 0.5753226791109357, 0.5641251802444458, 0.557084219796317, 0.5523591893059867, 0.5471513782228742, 0.5365608930587769, 0.5324590035847255, 0.520554644720895, 0.5054835762296405, 0.4902960572923933, 0.4844832420349121, 0.47127630029405865, 0.46471522535596577, 0.4603276423045567, 0.45296326705387663, 0.44795567648751394, 0.4429044893809727, 0.4437814780644008, 0.44864439964294434, 0.443362866129194, 0.43643328121730257, 0.4331231713294983, 0.4310913681983948, 0.42731975657599314, 0.4263302598680769, 0.4254820772579738, 0.42141116516930716, 0.41864728927612305, 0.41914302110671997, 0.4169536999293736, 0.4182447450501578, 0.41493230206625803, 0.408132757459368, 0.40792161226272583, 0.40770414045878817, 0.40911338159016203, 0.4078488179615566, 0.3991938659123012, 0.3941014323915754, 0.394006609916687, 0.3922069924218314, 0.39369299582072664, 0.3947146875517709, 0.3889931780951364, 0.38882531438555035, 0.3891304986817496, 0.38202610186168123, 0.3826901742390224, 0.3838148372513907, 0.3806038669177464, 0.37936216592788696, 0.3740253193037851, 0.3709875089781625, 0.3738894632884434, 0.3791447877883911, 0.3898678592273167, 0.38449035372052875, 0.3743177652359009, 0.37284782954624723, 0.37459444999694824, 0.38820262466158184, 0.3890740530831473, 0.37881323269435335, 0.3705477203641619, 0.3725901927266802, 0.3766047954559326, 0.37597394841057913], "val_accuracy": [0.2436666637659073, 0.382666677236557, 0.4333333373069763, 0.5116666555404663, 0.6050000190734863, 0.6786666512489319, 0.6890000104904175, 0.7203333377838135, 0.7086666822433472, 0.734333336353302, 0.7223333120346069, 0.734000027179718, 0.7363333106040955, 0.7329999804496765, 0.7353333234786987, 0.7390000224113464, 0.7483333349227905, 0.7593333125114441, 0.7710000276565552, 0.7716666460037231, 0.7673333287239075, 0.7673333287239075, 0.7746666669845581, 0.7839999794960022, 0.7876666784286499, 0.7879999876022339, 0.7906666398048401, 0.7940000295639038, 0.7960000038146973, 0.8013333082199097, 0.8043333292007446, 0.8119999766349792, 0.812666654586792, 0.8100000023841858, 0.8166666626930237, 0.8176666498184204, 0.8163333535194397, 0.8173333406448364, 0.8166666626930237, 0.8149999976158142, 0.8183333277702332, 0.8220000267028809, 0.8263333439826965, 0.8306666612625122, 0.8330000042915344, 0.8296666741371155, 0.831333339214325, 0.8306666612625122, 0.8320000171661377, 0.8360000252723694, 0.8353333473205566, 0.8333333134651184, 0.8383333086967468, 0.8373333215713501, 0.8373333215713501, 0.8399999737739563, 0.843999981880188, 0.8403333425521851, 0.8456666469573975, 0.8473333120346069, 0.8443333506584167, 0.8500000238418579, 0.8526666760444641, 0.8526666760444641, 0.8523333072662354, 0.8526666760444641, 0.8526666760444641, 0.8550000190734863, 0.8543333411216736, 0.8546666502952576, 0.8573333621025085, 0.8560000061988831, 0.8569999933242798, 0.8519999980926514, 0.8579999804496765, 0.8659999966621399, 0.8686666488647461, 0.8636666536331177, 0.862666666507721, 0.8619999885559082, 0.8653333187103271, 0.862666666507721]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 2, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 0, 1], [0, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7139999866485596, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3004966716189443, 2.295206024158333, 2.288604920865554, 2.2844819037858537, 2.2794998588342836, 2.2726012299073735, 2.268211609683316, 2.2607748415239923, 2.2554760907288665, 2.2507289036972615, 2.243997313799623, 2.237747040785, 2.2299945139063033, 2.222418490244712, 2.2159523429840373, 2.2064287350744918, 2.1985079261841256, 2.1873161978237285, 2.176669381849203, 2.1652891032841572, 2.1533260324674903, 2.143034650255676, 2.1294757620124076, 2.114481946339051, 2.1031230577404125, 2.083294802306587, 2.0671665153609227, 2.049464257480509, 2.033276731154513, 2.010822131523225, 1.9885407743389738, 1.9660921031772782, 1.9461265679883322, 1.9235593946523921, 1.8989628482850598, 1.8706769990001482, 1.8476710177179594, 1.8170862272509716, 1.7974111846472374, 1.7715992153659237, 1.7412490329690786, 1.7098987876715488, 1.6867503353066495, 1.6617071512841026, 1.6332658550380605, 1.607319869086286, 1.5825368432069042, 1.553822006201149, 1.5215447415544718, 1.512721314107139, 1.4938598837693133, 1.4590634748274702, 1.4362361534569856, 1.4225654412317332, 1.4034212912550819, 1.387873812988371, 1.3684281270737977, 1.3482989887787509, 1.3391941667406109, 1.3168564623593497, 1.2994684758140362, 1.2876838222549514, 1.2808904318745897, 1.2713822481607355, 1.2542161571666186, 1.2431745018390317, 1.220790196718431, 1.2227067151137032, 1.2096629514827735, 1.1903764492863, 1.188512704312888, 1.173232120514042, 1.172402366907243, 1.1582774486146221, 1.1366908770227286, 1.1346821676644006, 1.1204149669990595, 1.1168962017010704, 1.1132727040275843, 1.1022438913713657, 1.0996887532554014, 1.09410735706155, 1.084985998092216, 1.0718383813310592, 1.077322361570355, 1.076575432990788, 1.0458807685450477, 1.0495757995705484, 1.045653957937057, 1.032882611654879, 1.0332046776179389, 1.0265762576290394, 1.02515298256454, 1.013016073868464, 1.0101998922075688, 0.9984691711448959, 0.9906149857615152, 0.9817410863196893, 0.9974067106600908, 0.9857458409978382], "accuracy": [0.09351472556591034, 0.11002509295940399, 0.1254788041114807, 0.13380002975463867, 0.15070664882659912, 0.16629242897033691, 0.17699114978313446, 0.1912561058998108, 0.21701228618621826, 0.21793685853481293, 0.23986263573169708, 0.24844802916049957, 0.2620525658130646, 0.2736758589744568, 0.2829216718673706, 0.2996962070465088, 0.3035266101360321, 0.31726324558258057, 0.3366794288158417, 0.3431515097618103, 0.3461894094944, 0.35741645097732544, 0.36666226387023926, 0.36626601219177246, 0.3704926669597626, 0.38026681542396545, 0.39585259556770325, 0.402588814496994, 0.4041738212108612, 0.4143442213535309, 0.4267600178718567, 0.42768457531929016, 0.43125081062316895, 0.42926958203315735, 0.43243956565856934, 0.44168537855148315, 0.44789329171180725, 0.46070531010627747, 0.45449742674827576, 0.4589882493019104, 0.46929070353507996, 0.4822348356246948, 0.47972527146339417, 0.4892352521419525, 0.49451854825019836, 0.49848103523254395, 0.4975564777851105, 0.505349338054657, 0.5248976349830627, 0.507330596446991, 0.520671010017395, 0.5296525955200195, 0.5363888740539551, 0.5395588278770447, 0.5391625761985779, 0.5346717834472656, 0.5477479696273804, 0.5440496802330017, 0.5513142347335815, 0.5604279637336731, 0.5602958798408508, 0.5705983638763428, 0.5650508403778076, 0.5663716793060303, 0.568749189376831, 0.5827499628067017, 0.5742966532707214, 0.581429123878479, 0.5812970399856567, 0.5852595567703247, 0.5927882790565491, 0.5914674401283264, 0.5978074073791504, 0.5929203629493713, 0.6059965491294861, 0.6063928008079529, 0.6144498586654663, 0.6016378402709961, 0.6131290197372437, 0.618280291557312, 0.6153744459152222, 0.6135252714157104, 0.6219785809516907, 0.6229031682014465, 0.6198652982711792, 0.6201294660568237, 0.6280544400215149, 0.629111111164093, 0.6297714710235596, 0.6375643610954285, 0.640338122844696, 0.6333377361297607, 0.6328094005584717, 0.6400739550590515, 0.6433760523796082, 0.6523576974868774, 0.6479989290237427, 0.652621865272522, 0.6440364718437195, 0.6464139223098755], "val_loss": [1.965977668762207, 1.9610538482666016, 1.9561721256801061, 1.9512412888663155, 1.9463787760053362, 1.9413339069911413, 1.9362010955810547, 1.9307923316955566, 1.9252331597464425, 1.9194409506661552, 1.9133338928222656, 1.9069582394191198, 1.9002020699637276, 1.8931097303118025, 1.885547433580671, 1.8774137496948242, 1.8688291140965052, 1.8595948900495256, 1.8497065816606795, 1.8392254284449987, 1.8279088565281458, 1.8159656524658203, 1.8032590321132116, 1.7896991457257951, 1.7754321779523576, 1.760047095162528, 1.7437378338405065, 1.7264605930873327, 1.7082582541874476, 1.688964605331421, 1.668717929295131, 1.6472765036991663, 1.6249714919498988, 1.6017893382481165, 1.5777989796229772, 1.552746261869158, 1.527306250163487, 1.5011394705091203, 1.4748939446040563, 1.4484177657536097, 1.4215783732278007, 1.3941428320748466, 1.3670082773481096, 1.340249708720616, 1.3132150513785226, 1.286860363824027, 1.2607793807983398, 1.2352896758488245, 1.2101850169045585, 1.186514207295009, 1.1636967318398612, 1.1417040143694197, 1.1204534598759242, 1.0999959196363176, 1.0805638177054269, 1.0618198258536202, 1.0442815508161272, 1.0275447709219796, 1.0117466790335519, 0.9961392879486084, 0.9813267503465924, 0.9673596109662738, 0.9544523443494525, 0.9416940212249756, 0.929776838847569, 0.9183050904955182, 0.9069140638623919, 0.8966602257319859, 0.8864506312779018, 0.8765848023550851, 0.8674825940813337, 0.8584401948111398, 0.8499351399285453, 0.841639689036778, 0.8335398776190621, 0.8255938802446637, 0.8179350069590977, 0.8110498189926147, 0.8042914526803153, 0.797513450895037, 0.7915232522147042, 0.785645570073809, 0.7798656395503453, 0.7742887224469867, 0.7691434281212943, 0.7643437044961112, 0.7589455842971802, 0.7539341960634504, 0.7490677833557129, 0.7441643306187221, 0.7395882776805333, 0.7349729027066912, 0.7313191550118583, 0.726998141833714, 0.7227646453039986, 0.7188879592078072, 0.7146435976028442, 0.7111640998295375, 0.7078435250691005, 0.7044945444379535], "val_accuracy": [0.07333333045244217, 0.11733333021402359, 0.17100000381469727, 0.21533332765102386, 0.2639999985694885, 0.29600000381469727, 0.32733333110809326, 0.3526666760444641, 0.3733333349227905, 0.38600000739097595, 0.3959999978542328, 0.4033333361148834, 0.41200000047683716, 0.42233332991600037, 0.4286666810512543, 0.4346666634082794, 0.4436666667461395, 0.4480000138282776, 0.45233333110809326, 0.46399998664855957, 0.4659999907016754, 0.47333332896232605, 0.4806666672229767, 0.4860000014305115, 0.49533334374427795, 0.5006666779518127, 0.5076666474342346, 0.5130000114440918, 0.5213333368301392, 0.5289999842643738, 0.534333348274231, 0.5383333563804626, 0.5426666736602783, 0.5456666946411133, 0.5503333210945129, 0.5543333292007446, 0.5559999942779541, 0.5600000023841858, 0.5633333325386047, 0.5676666498184204, 0.5753333568572998, 0.5799999833106995, 0.5866666436195374, 0.5903333425521851, 0.5916666388511658, 0.5989999771118164, 0.6043333411216736, 0.6079999804496765, 0.6129999756813049, 0.6200000047683716, 0.6266666650772095, 0.6330000162124634, 0.6370000243186951, 0.6433333158493042, 0.6466666460037231, 0.6520000100135803, 0.6573333144187927, 0.6620000004768372, 0.6650000214576721, 0.6676666736602783, 0.6713333129882812, 0.6723333597183228, 0.6746666431427002, 0.6753333210945129, 0.6773333549499512, 0.6779999732971191, 0.6790000200271606, 0.6803333163261414, 0.6826666593551636, 0.6840000152587891, 0.6866666674613953, 0.6886666417121887, 0.6916666626930237, 0.6926666498184204, 0.6930000185966492, 0.6936666369438171, 0.6946666836738586, 0.6949999928474426, 0.6976666450500488, 0.6980000138282776, 0.6990000009536743, 0.6990000009536743, 0.7009999752044678, 0.70333331823349, 0.703000009059906, 0.7039999961853027, 0.7039999961853027, 0.7070000171661377, 0.7070000171661377, 0.7066666483879089, 0.7083333134651184, 0.7096666693687439, 0.7099999785423279, 0.7113333344459534, 0.7139999866485596, 0.7136666774749756, 0.7170000076293945, 0.7183333039283752, 0.718999981880188, 0.721666693687439]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 1, 5, 2, 0, 5, 1, 8, 4, 4], [0, 0, 0, 0, 3, 1, 0, 0, 0], [36, 23, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [7, 5, 9, 1, 2], [1, 0, 2], [20, 76, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 0, 6, 5, 2, 0, 8, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [3, 7, 6, 5, 2, 3, 3, 0], [4, 3, 3, 1, 1, 2], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 0, 1, 1], [1, 1, 9, 1, 2], [0, 0, 2], [36, 85, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 3], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [999170563.6007079, 19539818959.376568, 90201853353.09999, 251742250447.78232, 539165167696.6108, 978717185729.6146], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.10196803510189056, 0.09311848133802414, 0.09919429570436478, 0.10276053100824356], "val_loss": [3793705398.857143, 30339982482.285713, 102385720173.71428, 242680650605.7143, 473968326363.4286, 818999516013.7142], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [5, 3, 9, 1, 2], [2, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3023704371164504, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [9, 2, 8, 5, 2, 8, 5, 5, 6, 8, 4, 4, 6, 9], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 61], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 9, 9, 1, 2], [1, 0, 2], [20, 54, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [21789.944261655957, 415930.91687029455, 1907794.4300950996, 5309736.594835557, 11354479.270505877, 20591301.428345002], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10196803510189056, 0.09311848133802414, 0.09919429570436478, 0.10276053100824356], "val_loss": [81472.3125, 643180.7678571428, 2161692.6428571427, 5113571.428571428, 9975395.714285715, 17223728.57142857], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 1, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [2, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1], [5, 8, 6, 4, 5, 7, 3, 9], [4, 2, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [1, 0, 2], [85, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 0, 0, 0, 3, 0], [31, 32, 3, 66, 82, 51], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [1, 0, 2], [20, 54, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 15, 11, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.pow(grad, tf.math.pow(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), grad)))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), alpha), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 8, 5, 5, 2, 0, 5, 6, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 0, 1, 1], [1, 8, 9, 1, 2], [0, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(grad))), grad), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [592031342.4362645, 11576570544.437458, 53439595621.30445, 149141745412.42953, 319418992704.10986, 579820281517.3267], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.10196803510189056, 0.09311848133802414, 0.09919429570436478, 0.10276053100824356], "val_loss": [2247712621.714286, 17974805650.285713, 60657591442.28571, 143771144777.14285, 280792147090.2857, 485196281563.4286], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [4, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [0, 0, 2], [82, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.square(grad)))))), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023704371164504, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 1, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [1, 4, 9, 1, 2], [3, 0, 0], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [44.8968439340245, 529.2604811576065, 2139.0790025970296, 5692.441204191467, 11909.082733456611, 21329.98546623217], "accuracy": [0.09800554811954498, 0.09972262382507324, 0.10236428678035736, 0.09311848133802414, 0.09932637959718704, 0.10289261490106583], "val_loss": [125.40030779157367, 752.2601143973214, 2355.3069893973216, 5407.592215401785, 10383.68247767857, 17753.565290178572], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [8, 5, 2, 6, 0, 2, 0, 5, 6, 8, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 11, 64, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08506141602993011, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 2, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.590806299464546, 2.3200797892328517, 2.3199107840297057, 2.336047697501837, 2.3319670178430143, 2.330353215071094], "accuracy": [0.10157178342342377, 0.10051512718200684, 0.1010434553027153, 0.09800554811954498, 0.10130762308835983, 0.09800554811954498], "val_loss": [2.000467436654227, 2.0072005816868375, 2.006004742213658, 1.979719911302839, 1.978987761906215, 2.013094970158168], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10199999809265137, 0.10366666316986084, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], [3, 7, 6, 5, 5, 7, 3, 9, 8, 9], [4, 3, 3, 4, 1], [98, 26], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 0, 1, 1, 1], [1, 0, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 10, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3027271543275316, 2.3028841647867515, 2.3015624557299117, 2.3029055779620466, 2.302887310520092, 2.3017398811932868], "accuracy": [0.0882314071059227, 0.08955223858356476, 0.09113723784685135, 0.08717474341392517, 0.08545766770839691, 0.08994849026203156], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4, 6, 7, 0, 6], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 58, 60], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 25, 25, 16, 9, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.pow(tf.math.divide_no_nan(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))))))))))))), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3027271543275316, 2.3028841647867515, 2.3015624557299117, 2.3029055779620466, 2.302887310520092, 2.3017398811932868], "accuracy": [0.0882314071059227, 0.08955223858356476, 0.09113723784685135, 0.08717474341392517, 0.08545766770839691, 0.08994849026203156], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [5, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 11, 11, 8, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.negative(tf.math.square(grad)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3027271543275316, 2.3028841647867515, 2.3015624557299117, 2.3029055779620466, 2.302887310520092, 2.3017398811932868], "accuracy": [0.0882314071059227, 0.08955223858356476, 0.09113723784685135, 0.08717474341392517, 0.08545766770839691, 0.08994849026203156], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [3, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3027271543275316, 2.3028841647867515, 2.3015624557299117, 2.3029055779620466, 2.302887310520092, 2.3017398811932868], "accuracy": [0.0882314071059227, 0.08955223858356476, 0.09113723784685135, 0.08717474341392517, 0.08545766770839691, 0.08994849026203156], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 9], [2, 0, 0, 2, 2, 1, 2, 0, 0], [31, 32, 3, 66, 82], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 0, 1, 1, 1], [1, 3, 4, 1, 2], [3, 0, 2], [20, 54, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3027271543275316, 2.3028841647867515, 2.3015624557299117, 2.3029055779620466, 2.302887310520092, 2.3017398811932868], "accuracy": [0.0882314071059227, 0.08955223858356476, 0.09113723784685135, 0.08717474341392517, 0.08545766770839691, 0.08994849026203156], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]