[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8320000171661377, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9107003365966229, 1.269380392344589, 0.9415399002014858, 0.8026889882634392, 0.7364000684203189, 0.688207490041728, 0.6718838789821726, 0.6300782103816264, 0.6306910537977449, 0.6010588287456932, 0.5793184587952641, 0.5583415732108497, 0.548475953133162, 0.5444094251175566, 0.5160847820578753, 0.5044651078022135, 0.4987847841867697, 0.48754171647447336, 0.47621194996050936, 0.45122176646918605, 0.4542473008635494, 0.4538876814864898, 0.42182924772344954, 0.4267394459715231, 0.4324745700587969, 0.4227123505143977, 0.3965220576020091, 0.388207314520968, 0.38974158507391066, 0.3877590431702246, 0.3752518596115082, 0.36143873942337645, 0.37685529791825423, 0.3623086414781497], "accuracy": [0.36520934104919434, 0.5478800535202026, 0.6625280380249023, 0.7016246318817139, 0.7238145470619202, 0.7376832365989685, 0.7473253011703491, 0.7637035846710205, 0.7572315335273743, 0.7765156626701355, 0.7769119143486023, 0.7890635132789612, 0.7960638999938965, 0.7964601516723633, 0.8086118102073669, 0.8112534880638123, 0.8141592741012573, 0.8201030492782593, 0.8274996876716614, 0.830669641494751, 0.8360850811004639, 0.8274996876716614, 0.8465195894241333, 0.8408400416374207, 0.8387266993522644, 0.8399154543876648, 0.8564258217811584, 0.8594637513160706, 0.8531237840652466, 0.8519350290298462, 0.8603883385658264, 0.8687095642089844, 0.8568220734596252, 0.8668603897094727], "val_loss": [1.0785763944898332, 0.8892440455300468, 0.6442989110946655, 0.5906463520867484, 0.5367774622780936, 0.5217023747307914, 0.5107453550611224, 0.5058449677058628, 0.47796532085963656, 0.48417205469948904, 0.4535161427089146, 0.45027269635881695, 0.43955263069697786, 0.4399891751153128, 0.4221401640347072, 0.4215279051235744, 0.40269631147384644, 0.4040383441107614, 0.410544684955052, 0.3695440888404846, 0.39591608728681293, 0.39773439509528025, 0.36873111554554533, 0.38472325461251394, 0.3888204778943743, 0.3633914760180882, 0.3440946766308376, 0.3577249901635306, 0.33469665902001516, 0.3487063561167036, 0.3346196072442191, 0.35271149022238596, 0.33898537499564035, 0.33296702589307514], "val_accuracy": [0.5353333353996277, 0.6589999794960022, 0.737666666507721, 0.7463333606719971, 0.7559999823570251, 0.7746666669845581, 0.7829999923706055, 0.7886666655540466, 0.7846666574478149, 0.7749999761581421, 0.79666668176651, 0.8040000200271606, 0.7996666431427002, 0.8036666512489319, 0.8136666417121887, 0.8136666417121887, 0.8293333053588867, 0.8230000138282776, 0.8289999961853027, 0.8423333168029785, 0.8263333439826965, 0.8246666789054871, 0.8433333039283752, 0.8259999752044678, 0.8303333520889282, 0.847000002861023, 0.8579999804496765, 0.8506666421890259, 0.8690000176429749, 0.8579999804496765, 0.8610000014305115, 0.8506666421890259, 0.859333336353302, 0.8616666793823242]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [2, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8320000171661377, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9106572818416, 1.2669370472628, 0.9285727863251305, 0.7878649791060752, 0.7325883041976261, 0.7133139469572866, 0.6610512320612085, 0.6278239349568793, 0.6314230672655923, 0.6105100230896052, 0.5769815218368337, 0.5538562678500346, 0.5407760594231562, 0.5378218192891075, 0.5186308296428082, 0.5101307127391028, 0.5020179964012521, 0.48421482787297904, 0.474821180943658, 0.45357245085986064, 0.45183608050060436, 0.45491116068713056, 0.4340073626196663, 0.4247718633063607, 0.4250597712220832, 0.42592906076847337, 0.3996589563352998, 0.39803974570741174, 0.3887469909958253, 0.3860712121813415, 0.3731462398162371, 0.36037460660355014, 0.38458800736655807, 0.36410723428810593], "accuracy": [0.36520934104919434, 0.5481442213058472, 0.6608110070228577, 0.7106062769889832, 0.7289658188819885, 0.7264562249183655, 0.7519482374191284, 0.7582882046699524, 0.7600052952766418, 0.7711002230644226, 0.780610203742981, 0.7928939461708069, 0.8012151718139648, 0.7998943328857422, 0.8029322624206543, 0.8090080618858337, 0.8141592741012573, 0.8257825970649719, 0.8264430165290833, 0.8300092220306396, 0.8356888294219971, 0.8274996876716614, 0.8412362933158875, 0.8417646288871765, 0.8446704745292664, 0.8392550349235535, 0.8553691506385803, 0.8512746095657349, 0.8518029451370239, 0.8544445633888245, 0.8577466607093811, 0.8702945709228516, 0.8539162874221802, 0.8643507957458496], "val_loss": [1.079263721193586, 0.8440630435943604, 0.6356452533176967, 0.5803685017994472, 0.5744534390313285, 0.5132529054369245, 0.5176585572106498, 0.4919396638870239, 0.4728644745690482, 0.5036461693899972, 0.4561674935477121, 0.4551724876676287, 0.4297778010368347, 0.4437593902860369, 0.41734727791377474, 0.4100433758326939, 0.3965493951525007, 0.40824274505887714, 0.4177361726760864, 0.3675891160964966, 0.38872463362557547, 0.4166259765625, 0.36183767659323557, 0.38145317350115093, 0.3877031717981611, 0.37846129281180246, 0.34419908693858553, 0.3581288627215794, 0.3381661091532026, 0.3454006995473589, 0.3363540257726397, 0.35948956864220755, 0.3390078544616699, 0.3308675118855068], "val_accuracy": [0.5339999794960022, 0.6673333048820496, 0.7369999885559082, 0.7433333396911621, 0.7289999723434448, 0.7749999761581421, 0.7693333625793457, 0.796999990940094, 0.7973333597183228, 0.7630000114440918, 0.796999990940094, 0.8023333549499512, 0.7996666431427002, 0.7993333339691162, 0.8193333148956299, 0.8276666402816772, 0.8320000171661377, 0.8199999928474426, 0.8243333101272583, 0.8443333506584167, 0.8326666951179504, 0.8153333067893982, 0.846666693687439, 0.8273333311080933, 0.8333333134651184, 0.8356666564941406, 0.8553333282470703, 0.8510000109672546, 0.8663333058357239, 0.8573333621025085, 0.8600000143051147, 0.8476666808128357, 0.8613333106040955, 0.8629999756813049]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8291428685188293, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9107264958321064, 1.2695095692533056, 0.9312130627835573, 0.8048589098659787, 0.7299007391413174, 0.691203852009071, 0.6657652396961147, 0.626835329224641, 0.6365493924516051, 0.5999816568882521, 0.5817190195906038, 0.5604790384192209, 0.5360266548641575, 0.548263829098622, 0.5170947527762622, 0.5015044502688594, 0.5000661695480598, 0.4803737471557454, 0.4743327976902793, 0.44992615504350486, 0.4531547644622983, 0.45446237380856364, 0.42524006258164415, 0.41916185921335325, 0.4364113285242055], "accuracy": [0.36520934104919434, 0.5468233823776245, 0.6580372452735901, 0.7004358768463135, 0.7277770638465881, 0.7339849472045898, 0.7500990629196167, 0.7614582180976868, 0.7576277852058411, 0.7738739848136902, 0.7745344042778015, 0.7876105904579163, 0.8016114234924316, 0.7965922355651855, 0.805177628993988, 0.8117818236351013, 0.8149517774581909, 0.8248580098152161, 0.8277638554573059, 0.8321225643157959, 0.8347642421722412, 0.8265751004219055, 0.8433496356010437, 0.8421608805656433, 0.8408400416374207], "val_loss": [1.078911304473877, 0.8275096075875419, 0.6374116114207676, 0.5819596903664725, 0.5423787491662162, 0.516270467213222, 0.509212851524353, 0.5180005346025739, 0.46734438623700825, 0.49301997252873014, 0.46162353243146625, 0.4504215717315674, 0.43399305854524883, 0.44272550514766146, 0.4177362322807312, 0.41349518299102783, 0.39141517877578735, 0.412723754133497, 0.4081003325326102, 0.370662978717259, 0.3940433519227164, 0.39896994829177856, 0.36745260443006245, 0.38773365531648907, 0.3947015404701233], "val_accuracy": [0.5353333353996277, 0.6726666688919067, 0.7383333444595337, 0.7463333606719971, 0.7556666731834412, 0.7753333449363708, 0.7829999923706055, 0.7796666622161865, 0.796999990940094, 0.7663333415985107, 0.796999990940094, 0.8073333501815796, 0.800000011920929, 0.7996666431427002, 0.8176666498184204, 0.8203333616256714, 0.8399999737739563, 0.8190000057220459, 0.8316666483879089, 0.8423333168029785, 0.8286666870117188, 0.8230000138282776, 0.8420000076293945, 0.8253333568572998, 0.8296666741371155]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0], [5, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8268571496009827, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9086770610629198, 1.2644064127493528, 0.9463130226067233, 0.7939713275695537, 0.7356044767303175, 0.6853459841854552, 0.6677230591346338, 0.6177182034683454, 0.6234906614259753, 0.6113769532257713, 0.5734409545438165, 0.5508297354970957, 0.5503056303715709, 0.5312979440285371, 0.5080302630071044, 0.5057157182643096, 0.4954740280417592, 0.4893047832668009, 0.47006850036112324, 0.4481795730332279, 0.4501834430037677, 0.4520947074318575, 0.4227785396223228, 0.4210541365546888, 0.42017720985516516], "accuracy": [0.36586976051330566, 0.5473517179489136, 0.6561880707740784, 0.7054550051689148, 0.7219653725624084, 0.7359662055969238, 0.7486461400985718, 0.7660810947418213, 0.7633073329925537, 0.7681944370269775, 0.7800818681716919, 0.7922335267066956, 0.7955356240272522, 0.8034605979919434, 0.8105930685997009, 0.8104609847068787, 0.8158763647079468, 0.8216879963874817, 0.8264430165290833, 0.8317263126373291, 0.8337075710296631, 0.8296129703521729, 0.8457271456718445, 0.8455950617790222, 0.8455950617790222], "val_loss": [1.068113190787179, 0.8281608138765607, 0.661995530128479, 0.5779330389840263, 0.540560075214931, 0.5289145878383091, 0.5063023907797677, 0.4985478094645909, 0.4769564526421683, 0.5066031898771014, 0.45649691990443636, 0.45293802874428885, 0.43882925169808523, 0.4409926618848528, 0.4195714592933655, 0.41437383208956036, 0.39585596323013306, 0.3951145240238735, 0.41208531175340923, 0.3727283307484218, 0.38741104091916767, 0.4071861505508423, 0.3717924526759556, 0.3817059312547956, 0.39456593138831003], "val_accuracy": [0.5120000243186951, 0.6940000057220459, 0.721666693687439, 0.7400000095367432, 0.7613333463668823, 0.7603333592414856, 0.7863333225250244, 0.7946666479110718, 0.7913333177566528, 0.7559999823570251, 0.7990000247955322, 0.8036666512489319, 0.7993333339691162, 0.8029999732971191, 0.8140000104904175, 0.8226666450500488, 0.8360000252723694, 0.8320000171661377, 0.828000009059906, 0.8413333296775818, 0.8353333473205566, 0.8203333616256714, 0.840666651725769, 0.8316666483879089, 0.8286666870117188]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [5, 4, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0], [5, 1, 6, 0], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8071428537368774, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.031217570680244, 1.5039560822857339, 1.1665349422806777, 1.0364847005460682, 0.926992640078359, 0.8118561215215528, 0.8239657332348927, 0.7671646822271976, 0.7416731445717852, 0.7066581822058875, 0.6837225243116587, 0.7030287052284158, 0.6591006924589281, 0.6305288939884767, 0.6127149140310483, 0.6122755730519001, 0.616596599288699, 0.6122727013062556, 0.6051992480119678, 0.5686647861294538, 0.5733237445173388, 0.5717921673487899, 0.5280814481496402, 0.526219019540596, 0.524177457422329, 0.516179250778854, 0.495038311495017, 0.5084705901120742, 0.5139594808262196, 0.49391260513650304, 0.4813264910067235, 0.47320469989516495, 0.4916043418777334, 0.44498602304129853, 0.4529370078872365, 0.47711039244097303, 0.46774096345511, 0.4392978114663586, 0.42087637104331194, 0.4279990913318117, 0.4358285207711254, 0.42360218213518075, 0.41729428826888726, 0.4331065888701492, 0.41498346131365327, 0.3889828755548208, 0.40385930239957446], "accuracy": [0.31739532947540283, 0.4733852744102478, 0.587769091129303, 0.6135252714157104, 0.6618676781654358, 0.6922467350959778, 0.6808875799179077, 0.707040011882782, 0.7174745798110962, 0.7310791015625, 0.7339849472045898, 0.7454761862754822, 0.7452120184898376, 0.7547219395637512, 0.7619865536689758, 0.7691190242767334, 0.7605336308479309, 0.770439863204956, 0.7730814814567566, 0.7854973077774048, 0.7848368883132935, 0.7758552432060242, 0.7993659973144531, 0.8026680946350098, 0.8063663840293884, 0.8053097128868103, 0.8141592741012573, 0.8098005652427673, 0.8076872229576111, 0.8117818236351013, 0.821820080280304, 0.8220842480659485, 0.8150838613510132, 0.8362171649932861, 0.8314621448516846, 0.817461371421814, 0.8219521641731262, 0.833179235458374, 0.8378021121025085, 0.8411042094230652, 0.8424250483512878, 0.8417646288871765, 0.8451988101005554, 0.8355567455291748, 0.845859169960022, 0.856689989566803, 0.8512746095657349], "val_loss": [1.5137316840035575, 1.1257499286106654, 0.8439292567116874, 0.7300663675580706, 0.6968312093189785, 0.6708070891244071, 0.5957876103264945, 0.6272124562944684, 0.5659485033580235, 0.577111005783081, 0.5806569031306675, 0.5392693962369647, 0.5068444183894566, 0.49764955043792725, 0.4960998126438686, 0.5142732177461896, 0.5119979722159249, 0.48179231371198383, 0.4696415492466518, 0.476614032472883, 0.4774763584136963, 0.459626521383013, 0.43897856984819683, 0.4801386424473354, 0.4464102472577776, 0.44533940723964144, 0.4430725574493408, 0.43868543420519146, 0.40101965836116243, 0.4354390927723476, 0.4138799820627485, 0.4079977103642055, 0.4129460028239659, 0.37738981417247225, 0.38855800458363127, 0.4513928209032331, 0.41294156653540476, 0.3693165438515799, 0.4195932149887085, 0.36713631664003643, 0.4062033125332424, 0.3572344865117754, 0.36927636180605206, 0.36417971338544575, 0.3564471517290388, 0.3578061206000192, 0.35852410963603426], "val_accuracy": [0.41733333468437195, 0.6259999871253967, 0.6173333525657654, 0.6840000152587891, 0.6603333353996277, 0.6803333163261414, 0.7336666584014893, 0.7253333330154419, 0.7306666374206543, 0.7223333120346069, 0.7446666955947876, 0.7556666731834412, 0.7666666507720947, 0.7763333320617676, 0.768666684627533, 0.7559999823570251, 0.7566666603088379, 0.7963333129882812, 0.7960000038146973, 0.79666668176651, 0.7803333401679993, 0.7846666574478149, 0.8059999942779541, 0.7753333449363708, 0.7963333129882812, 0.7960000038146973, 0.7950000166893005, 0.8166666626930237, 0.8259999752044678, 0.8143333196640015, 0.8149999976158142, 0.8146666884422302, 0.8293333053588867, 0.8403333425521851, 0.8323333263397217, 0.7963333129882812, 0.8146666884422302, 0.847000002861023, 0.8076666593551636, 0.8393333554267883, 0.828000009059906, 0.8529999852180481, 0.8426666855812073, 0.8450000286102295, 0.8483333587646484, 0.8479999899864197, 0.8489999771118164]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [22, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0], [5, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.7428571581840515, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2992000397186017, 2.2905037867599365, 2.2839065789704027, 2.274206874928281, 2.2672016826902226, 2.257737686888826, 2.248474993080338, 2.2389577431780174, 2.230090226951985, 2.216835211895051, 2.207185369771721, 2.1932636044831906, 2.1782203209067945, 2.1602351642193467, 2.145787076990382, 2.123440462442957, 2.104270313173757, 2.077878163522497, 2.0556117236228464, 2.027445654654311, 1.9992322919863468, 1.9603096555646353, 1.932213690145188, 1.8892919794128493, 1.8545587716746907, 1.81834456165154, 1.7742884971556678, 1.7376347843209718, 1.706972743904019, 1.66147563123999, 1.6125520590415736, 1.588465501965785, 1.5416985964809726, 1.5131199031127458, 1.4738480949194015, 1.4427367546428953, 1.4185688108611243, 1.3966752004472256, 1.3699827228539088, 1.3374249314304514, 1.317916725652093, 1.3029309420018165, 1.2756528231005202, 1.255160893699229, 1.2379632769102087, 1.2140714621358086, 1.2006462404929794, 1.1889489375053852, 1.177124215910668, 1.1564110306669393, 1.1379139153177333, 1.1286503225191, 1.1270004443488715, 1.1056504498981703, 1.0998284872481063, 1.089753292586589, 1.0798424149485406, 1.0701250126963011, 1.0550102428076147, 1.0444585010438878, 1.033311646092664, 1.0328651784890048, 1.024837847312428, 1.0173949270106073, 1.0098142062888689, 1.0020405087630353, 0.9937333869046036, 0.9885752143609194, 0.9779001895573003, 0.9664362785507895, 0.9680026340179156, 0.9621749336945303, 0.9621113675413131, 0.9417415016740777, 0.941069333694394, 0.9373658187731682, 0.933986273172147, 0.9410916634790649, 0.9292358453751492, 0.9286251756824034, 0.9153825362927531, 0.901833449860511, 0.915255138863347, 0.9017712478907889, 0.8993842862443114, 0.8912391686294655, 0.8888482068665449, 0.8889125824887849, 0.8838225249223202, 0.8778149736256663, 0.8793484699598566, 0.8745632003941131, 0.8586288434466225, 0.8613913771404236, 0.8603313009043915, 0.8582597672348844, 0.8537707735896661, 0.8381038975438516, 0.8476926626750995, 0.8398183353935109], "accuracy": [0.09945846349000931, 0.1200634017586708, 0.1398758441209793, 0.17051908373832703, 0.18623696267604828, 0.2056531459093094, 0.22956016659736633, 0.24356095492839813, 0.26324132084846497, 0.2818650007247925, 0.29745081067085266, 0.313300758600235, 0.3291507065296173, 0.34605732560157776, 0.3501518964767456, 0.36626601219177246, 0.3751155734062195, 0.3910976052284241, 0.39347511529922485, 0.40747588872909546, 0.4159291982650757, 0.4275524914264679, 0.42808082699775696, 0.448949933052063, 0.4468366205692291, 0.46083739399909973, 0.46889445185661316, 0.46664905548095703, 0.4663848876953125, 0.4799894392490387, 0.49068814516067505, 0.49068814516067505, 0.5188218355178833, 0.5156518220901489, 0.5281997323036194, 0.531369686126709, 0.5336151123046875, 0.5414080023765564, 0.5433892607688904, 0.5513142347335815, 0.5550125241279602, 0.5601637959480286, 0.5683529376983643, 0.5723153948783875, 0.5793157815933228, 0.579447865486145, 0.5906749367713928, 0.59225994348526, 0.59661865234375, 0.5993924140930176, 0.6000528335571289, 0.6061286330223083, 0.5993924140930176, 0.616299033164978, 0.6120724081993103, 0.6186765432357788, 0.6196011304855347, 0.6197332143783569, 0.6272619366645813, 0.6375643610954285, 0.632941484451294, 0.6339981555938721, 0.6357152462005615, 0.639809787273407, 0.6509047746658325, 0.6479989290237427, 0.648659348487854, 0.6505085229873657, 0.6497160196304321, 0.6616035103797913, 0.6538106203079224, 0.6631884574890137, 0.6515651941299438, 0.6700568199157715, 0.6687359809875488, 0.670320987701416, 0.6666226387023926, 0.6631884574890137, 0.666358470916748, 0.6719059348106384, 0.6701889038085938, 0.6841896772384644, 0.6765288710594177, 0.6795667409896851, 0.6774534583091736, 0.6836613416671753, 0.6851142644882202, 0.6807554960250854, 0.6860388517379761, 0.6876237988471985, 0.6869634389877319, 0.6831330060958862, 0.6889446377754211, 0.6956809163093567, 0.6933034062385559, 0.6859067678451538, 0.6911900639533997, 0.6977941989898682, 0.6939638257026672, 0.6927750706672668], "val_loss": [1.9635537692478724, 1.9563166073390417, 1.9490437507629395, 1.9415010724748885, 1.9338295800345284, 1.9256153787885393, 1.9169251578194755, 1.9076061929975237, 1.8976022856576102, 1.8864977019173759, 1.8744521822248186, 1.8611809185573034, 1.846620968409947, 1.830404485974993, 1.8130144391741072, 1.793783255985805, 1.7728698594229562, 1.749626636505127, 1.7246015412466866, 1.6971586772373743, 1.6677850655147008, 1.6355549607958113, 1.6018072877611433, 1.5658445017678397, 1.5286056314195906, 1.4902545383998327, 1.4506322996956962, 1.4107838017599923, 1.3715321336473738, 1.331813165119716, 1.2921418462480818, 1.2544611862727575, 1.2174711568014962, 1.1830511433737618, 1.1497190679822649, 1.1180917535509383, 1.0890281200408936, 1.0616441113608224, 1.036198343549456, 1.0117460318974085, 0.9892219134739467, 0.9688787119729179, 0.9494203158787319, 0.9309703963143485, 0.9136241844722203, 0.8971378122057233, 0.8821853910173688, 0.8683192729949951, 0.8553703853062221, 0.8427670172282627, 0.8309798070362636, 0.8199355602264404, 0.810083270072937, 0.7999991689409528, 0.7906621524265834, 0.7818458080291748, 0.773908155305045, 0.7659402063914708, 0.7579880271639142, 0.7510021754673549, 0.7439923967633929, 0.7370145320892334, 0.7308126177106585, 0.7250774928501674, 0.719447272164481, 0.7135632378714425, 0.7085667507989066, 0.7033849954605103, 0.6990207603999546, 0.6946517910276141, 0.6901078564780099, 0.6857313939503261, 0.6817002637045724, 0.6775249923978534, 0.6738853965486798, 0.6701856340680804, 0.6665357351303101, 0.66342180115836, 0.6599199431283134, 0.656632798058646, 0.6538420745304653, 0.6507973330361503, 0.647750837462289, 0.6448875495365688, 0.6424539429800851, 0.6396281548908779, 0.6357078722545079, 0.6331659555435181, 0.6309654882975987, 0.6285948583057949, 0.6265143156051636, 0.6244788340159825, 0.6216770580836705, 0.6192398411887032, 0.6169512442180088, 0.6145135504858834, 0.613108651978629, 0.6107019526617867, 0.6087254115513393, 0.6067675011498588], "val_accuracy": [0.08933333307504654, 0.16733333468437195, 0.23866666853427887, 0.29866665601730347, 0.34200000762939453, 0.3766666650772095, 0.3919999897480011, 0.4033333361148834, 0.41499999165534973, 0.4323333203792572, 0.4436666667461395, 0.4503333270549774, 0.4583333432674408, 0.46933332085609436, 0.4793333411216736, 0.4883333444595337, 0.49666666984558105, 0.5076666474342346, 0.5173333287239075, 0.5276666879653931, 0.5373333096504211, 0.5400000214576721, 0.5473333597183228, 0.5550000071525574, 0.5596666932106018, 0.5653333067893982, 0.5696666836738586, 0.5793333053588867, 0.5853333473205566, 0.5913333296775818, 0.6000000238418579, 0.6046666502952576, 0.609666645526886, 0.6169999837875366, 0.6290000081062317, 0.6366666555404663, 0.6446666717529297, 0.653333306312561, 0.6603333353996277, 0.6650000214576721, 0.6690000295639038, 0.6726666688919067, 0.6736666560173035, 0.6746666431427002, 0.6779999732971191, 0.6813333630561829, 0.6833333373069763, 0.6869999766349792, 0.6893333196640015, 0.690666675567627, 0.6943333148956299, 0.6956666707992554, 0.6966666579246521, 0.6980000138282776, 0.699999988079071, 0.7016666531562805, 0.7020000219345093, 0.7039999961853027, 0.7049999833106995, 0.7073333263397217, 0.7066666483879089, 0.7099999785423279, 0.7113333344459534, 0.7133333086967468, 0.715666651725769, 0.718999981880188, 0.718666672706604, 0.7229999899864197, 0.722000002861023, 0.7243333458900452, 0.7253333330154419, 0.7263333201408386, 0.7269999980926514, 0.7273333072662354, 0.7276666760444641, 0.7286666631698608, 0.7289999723434448, 0.731333315372467, 0.7310000061988831, 0.734000027179718, 0.7353333234786987, 0.7366666793823242, 0.7363333106040955, 0.737333357334137, 0.7369999885559082, 0.7369999885559082, 0.7396666407585144, 0.7409999966621399, 0.7396666407585144, 0.7416666746139526, 0.7409999966621399, 0.7423333525657654, 0.7433333396911621, 0.7459999918937683, 0.7453333139419556, 0.7483333349227905, 0.7446666955947876, 0.7456666827201843, 0.7459999918937683, 0.7476666569709778]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08611807972192764, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 1, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 89, 50, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [2, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [462616318946.26575, 9.591548792797602e+18, 1.0109219086531787e+26, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09628847241401672, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [26952214024777.145, 4.793518250221807e+20, 1.973644392830985, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10266666859388351, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [77, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [2, 6, 6, 5], [4, 1, 3], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 4, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 3, 1, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), alpha)))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.109232597053051, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [33, 7, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 4, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1], [2, 7, 6, 5], [4, 1, 3], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [4, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [37, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0], [5, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4142455807482923, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03143574297428131, 0.08426892012357712, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.580890314919608, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.011666666716337204, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [2, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0], [5, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 11, 9, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), alpha)))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302797725250724, 2.302452725945935, 2.3024667155520633, 2.302623712911015, 2.3026635054473816, 2.302875370066699], "accuracy": [0.1002509593963623, 0.1002509593963623, 0.10408136248588562, 0.10170386731624603, 0.1026284471154213, 0.09998679161071777], "val_loss": [1.973698684147426, 1.9737481389726912, 1.973602363041469, 1.973604679107666, 1.9736664635794503, 1.9739031791687012], "val_accuracy": [0.10366666316986084, 0.09566666930913925, 0.10066666454076767, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 4, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 6, 5], [0, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [33, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 4, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 4, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), alpha)))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [44.58609231720354, 530.4332321826037, 2147.2785604867668, 5683.338675834909, 11841.657053203631, 21384.07160417836], "accuracy": [0.09866596013307571, 0.09576013684272766, 0.09721305221319199, 0.09826971590518951, 0.10289261490106583, 0.10447761416435242], "val_loss": [125.40030779157367, 752.2601143973214, 2355.3069893973216, 5407.592215401785, 10383.68247767857, 17753.565290178572], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [58, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [2, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0], [5, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3041135345892805, 2.318714438995051, 341448740558222.75, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08730682730674744, 0.08136309683322906, 0.08387266844511032, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.97516325541905, 1.9933035033089774, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.022333333268761635, 0.08166666328907013, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1], [2, 1, 6, 5], [4, 1, 3], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.06857142597436905, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 7, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3012982311029604, 2.298297122296026, 2.2996987734079015, 2.30148835771702, 2.3019758120440947, 2.3025602579526203, 2.3027288111020483, 2.302805470248822, 2.3029921937848536, 2.303101615568178], "accuracy": [0.0948355570435524, 0.10910051316022873, 0.10738343745470047, 0.09126931428909302, 0.10117553919553757, 0.11293092370033264, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9686459132603236, 1.9700878688267298, 1.9722949436732702, 1.9729608808244978, 1.973578793661935, 1.9737584250313895, 1.9738343783787318, 1.973937920161656, 1.9740306990487235, 1.9741385323660714], "val_accuracy": [0.0833333358168602, 0.10966666787862778, 0.0833333358168602, 0.10533333569765091, 0.11133333295583725, 0.10266666859388351, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [59, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0], [5, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3025204188095314, 2.3017710653735097, 2.303079771249207, 2.3015573977668287, 2.3023498411963343, 2.301956330591488], "accuracy": [0.08994849026203156, 0.09126931428909302, 0.08836349099874496, 0.0936468094587326, 0.08757099509239197, 0.08796724677085876], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 1, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 7, 46, 49, 85, 46], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 2, 5, 9, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [20, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0], [5, 1, 6, 5], [0, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3025204188095314, 2.3017710653735097, 2.303079771249207, 2.3015573977668287, 2.3023498411963343, 2.301956330591488], "accuracy": [0.08994849026203156, 0.09126931428909302, 0.08836349099874496, 0.0936468094587326, 0.08757099509239197, 0.08796724677085876], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]