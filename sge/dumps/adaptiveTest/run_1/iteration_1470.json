[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.8551428318023682, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9289862183122555, 1.134681748652644, 0.7975970949195773, 0.6860764038214798, 0.6264868007045081, 0.5832080064180772, 0.5426237574972733, 0.5212450694367083, 0.4961881508696207, 0.47952918612079976, 0.46985566222026853, 0.4351634538846009, 0.4171192611898209, 0.4016939035228467, 0.3908333493190718, 0.3850054388560513, 0.3705546355534066, 0.35625714888709364, 0.3553924689148364, 0.337313864315663, 0.3248247919482893, 0.31720211339853444, 0.3065162272249246, 0.30044437861241025, 0.29221751092053705, 0.3018182230080753, 0.2851320341939955, 0.27502517012667427, 0.26265811067546413, 0.25614610505283564, 0.25671779072169754, 0.23652396566123696, 0.2370135347447328, 0.21789810202967583, 0.23743719888353831, 0.22292441394012272, 0.2176149397076806, 0.20334752103585169, 0.21103139165968487, 0.1959060384077466, 0.19005009943719994, 0.1913471794607869, 0.18138624474813658, 0.17834664720625154, 0.17598533148951992, 0.18657421881905983, 0.16826338976279162], "accuracy": [0.3553031384944916, 0.5933166146278381, 0.707040011882782, 0.7400607466697693, 0.7585523724555969, 0.7734777331352234, 0.7931581139564514, 0.8030643463134766, 0.8078193068504333, 0.8215559124946594, 0.8244617581367493, 0.8314621448516846, 0.8494254350662231, 0.8488970994949341, 0.8499537706375122, 0.8578787446022034, 0.8560295701026917, 0.8659358024597168, 0.86118084192276, 0.8733324408531189, 0.8759741187095642, 0.8779553771018982, 0.8844274282455444, 0.8821820020675659, 0.8870691061019897, 0.8850878477096558, 0.8906353116035461, 0.8956544995307922, 0.9038436412811279, 0.9010698795318604, 0.8986923694610596, 0.9085986018180847, 0.9080702662467957, 0.917580246925354, 0.9103156924247742, 0.9137498140335083, 0.9161273241043091, 0.9210143685340881, 0.9178444147109985, 0.9249768853187561, 0.9260335564613342, 0.925901472568512, 0.9301280975341797, 0.932769775390625, 0.928411066532135, 0.9273543953895569, 0.9321093559265137], "val_loss": [1.235138280051095, 0.6675795827593122, 0.5655599151338849, 0.5128602981567383, 0.4903673103877476, 0.4460849676813398, 0.42989762340273174, 0.4206984383719308, 0.4055043799536569, 0.3871941311018808, 0.37625111852373394, 0.36378289120537893, 0.35888171195983887, 0.35032664026532856, 0.3539679305894034, 0.35388963563101633, 0.3378115551812308, 0.34700104168483187, 0.33712251697267803, 0.33840256929397583, 0.3343887839998518, 0.3198423555919102, 0.3226136990955898, 0.3381593567984445, 0.3338642971856253, 0.3321324246270316, 0.3320011666842869, 0.32012916462762014, 0.3256732395717076, 0.3299739020211356, 0.32105216809681486, 0.31637695857456755, 0.32727472271238056, 0.33147813592638287, 0.3317315237862723, 0.3486147437776838, 0.33324749980654034, 0.3363884176526751, 0.33341819047927856, 0.3508452687944685, 0.34901957852499826, 0.3354561924934387, 0.3357645102909633, 0.35670976979391916, 0.3437959466661726, 0.36592112268720356, 0.34705781085150583], "val_accuracy": [0.5043333172798157, 0.6936666369438171, 0.7356666922569275, 0.7723333239555359, 0.7670000195503235, 0.8006666898727417, 0.8113333582878113, 0.8106666803359985, 0.8240000009536743, 0.8263333439826965, 0.8349999785423279, 0.8420000076293945, 0.8473333120346069, 0.8473333120346069, 0.8460000157356262, 0.8513333201408386, 0.8539999723434448, 0.8510000109672546, 0.8576666712760925, 0.8613333106040955, 0.856333315372467, 0.8666666746139526, 0.8683333396911621, 0.8583333492279053, 0.8566666841506958, 0.859666645526886, 0.8616666793823242, 0.8696666955947876, 0.8709999918937683, 0.8610000014305115, 0.8733333349227905, 0.8706666827201843, 0.8683333396911621, 0.8736666440963745, 0.8723333477973938, 0.8656666874885559, 0.8690000176429749, 0.8740000128746033, 0.875333309173584, 0.8730000257492065, 0.8740000128746033, 0.8769999742507935, 0.875333309173584, 0.8766666650772095, 0.8769999742507935, 0.871666669845581, 0.8769999742507935]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [1, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.6765714287757874, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302948436748397, 2.299256672838408, 2.29882007079149, 2.296548317452117, 2.2944894531667193, 2.289345122945622, 2.282455867795802, 2.277411470953594, 2.2690346085431634, 2.2619763689112937, 2.2525874087996627, 2.244854556098669, 2.233409734843603, 2.225240966505646, 2.2132132789005676, 2.198439903042619, 2.1872853073603316, 2.1711413518328473, 2.1513350286094535, 2.133448680378364, 2.1112619927373184, 2.082836828935951, 2.0553310631351573, 2.0230416640031135, 1.9824426957975525, 1.9368656049110413, 1.8904614409813398, 1.8402179256327604, 1.7877658043303242, 1.7404792943981424, 1.701143130524252, 1.659810465718336, 1.6233799315368054, 1.5744740220266262, 1.5235109569342729, 1.4816081353213888, 1.436875016020746, 1.3953299534523949, 1.3672357613557617, 1.341575340713886, 1.322743347922116, 1.2815766421291477, 1.250731102558348, 1.210034172217828, 1.1912032110879072, 1.1775940889538146, 1.136649649581889, 1.1248017444649645, 1.117082650729804, 1.102679102128885, 1.0870258020072991, 1.0927091225058632], "accuracy": [0.09153348207473755, 0.10355303436517715, 0.10196803510189056, 0.10210011899471283, 0.11174217611551285, 0.12719587981700897, 0.1414608359336853, 0.15559370815753937, 0.17804782092571259, 0.2032756507396698, 0.22440892457962036, 0.2432967871427536, 0.2678642272949219, 0.2942807972431183, 0.3066965937614441, 0.3205653131008148, 0.33245277404785156, 0.3469819128513336, 0.3681151866912842, 0.36481308937072754, 0.383700966835022, 0.3881917893886566, 0.3933430314064026, 0.39690926671028137, 0.3971734344959259, 0.40087175369262695, 0.3999471664428711, 0.3959846794605255, 0.40245673060417175, 0.41170254349708557, 0.41566503047943115, 0.4209483563899994, 0.43243956565856934, 0.4468366205692291, 0.47193238139152527, 0.48210275173187256, 0.4931977391242981, 0.507330596446991, 0.5171047449111938, 0.5285959839820862, 0.5287280678749084, 0.5448421835899353, 0.5645225048065186, 0.5742966532707214, 0.5793157815933228, 0.5840708017349243, 0.5947695374488831, 0.5885615944862366, 0.607449471950531, 0.6126006841659546, 0.6122044920921326, 0.6133931875228882], "val_loss": [1.9709430422101701, 1.969573906489781, 1.9673267773219518, 1.964212077004569, 1.9602631160191126, 1.9555023057120187, 1.9500021253313338, 1.943826471056257, 1.9370642389569963, 1.9297259875706263, 1.921854019165039, 1.9134740829467773, 1.904529435294015, 1.8948940549577986, 1.8843844958714075, 1.872699465070452, 1.8595497267586845, 1.8446670259748186, 1.827756609235491, 1.8084588732038225, 1.7862704140799386, 1.7605981145586287, 1.7307099614824568, 1.6958960805620467, 1.6554345403398787, 1.6090772151947021, 1.5579308101109095, 1.5044642175946916, 1.4518230983189173, 1.4019795145307268, 1.3542022705078125, 1.305436372756958, 1.253798450742449, 1.2002474921090263, 1.1477184636252267, 1.0978591101510184, 1.05202283178057, 1.0111534254891532, 0.9767052446092878, 0.9463684218270438, 0.9172492027282715, 0.8881821632385254, 0.860414981842041, 0.8370968103408813, 0.8191275937216622, 0.8053211144038609, 0.7943513734000069, 0.7851849283490863, 0.7778783696038383, 0.7725942645754132, 0.768074631690979, 0.7619123118264335], "val_accuracy": [0.03799999877810478, 0.04699999839067459, 0.06400000303983688, 0.0860000029206276, 0.12166666984558105, 0.1743333339691162, 0.23499999940395355, 0.28466665744781494, 0.3176666796207428, 0.3426666557788849, 0.3526666760444641, 0.367000013589859, 0.37700000405311584, 0.39666667580604553, 0.40833333134651184, 0.4176666736602783, 0.42500001192092896, 0.4326666593551636, 0.4423333406448364, 0.4483333230018616, 0.45500001311302185, 0.4566666781902313, 0.4586666524410248, 0.45899999141693115, 0.46033334732055664, 0.46166667342185974, 0.4586666524410248, 0.46000000834465027, 0.4659999907016754, 0.48100000619888306, 0.48633334040641785, 0.4959999918937683, 0.5086666941642761, 0.5263333320617676, 0.5406666398048401, 0.5619999766349792, 0.5899999737739563, 0.6159999966621399, 0.6309999823570251, 0.6430000066757202, 0.6506666541099548, 0.659333348274231, 0.6660000085830688, 0.668666660785675, 0.6669999957084656, 0.6703333258628845, 0.675000011920929, 0.6736666560173035, 0.6669999957084656, 0.6639999747276306, 0.6610000133514404, 0.6643333435058594]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [2, 1, 0, 6, 1, 6, 2, 2, 5, 5, 5, 2, 6, 2, 5, 4, 6, 8, 1, 8, 2, 2, 9, 0, 9, 2, 4, 5, 6, 2, 9, 8, 1, 1, 2, 0, 7, 9, 6, 2, 4, 1, 6, 0, 2, 4, 6, 1, 0], [0, 3, 3, 0, 2, 1, 3, 0, 3, 3, 3, 3, 1, 3, 3, 2, 3, 3, 0, 3, 3, 2, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4, 3, 3, 3, 5], [59, 88, 21, 97, 75, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.5414285659790039, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.99970796599191, 2.0338410581375364, 1.1683693019359056, 0.9609507250196946, 1.5169279447494324, 1.519501282160765, 1.5179427701720567, 2.3094075194691244], "accuracy": [0.35847312211990356, 0.3563597798347473, 0.5651829242706299, 0.6583014130592346, 0.5575221180915833, 0.5484083890914917, 0.4876502454280853, 0.2751287817955017], "val_loss": [1.86615446635655, 1.047898462840489, 0.6739754676818848, 1.1263654232025146, 0.89089982850211, 0.9708531924656459, 1.9001077243259974, 1.7674295221056258], "val_accuracy": [0.4013333320617676, 0.515999972820282, 0.7229999899864197, 0.6726666688919067, 0.6473333239555359, 0.5716666579246521, 0.23533333837985992, 0.28600001335144043]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [32, 23, 13, 96, 52, 15, 96]], "fitness": -0.1971428543329239, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1490305992496044, 2.7176628468011774, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.35120856761932373, 0.30365869402885437, 0.12072381377220154, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9365510259355818, 6798299574.857142, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.20233333110809326, 0.25866666436195374, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.18028570711612701, "mapping_values": [1, 7, 7, 4, 3, 2, 7, 7, 5, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.158879121407038, 2.3154783531375895, 6.554042717432284e+18, NaN, NaN, NaN, NaN], "accuracy": [0.34883105754852295, 0.25624093413352966, 0.1612732857465744, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9133960860116142, 10.40731430053711, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.15000000596046448, 0.28033334016799927, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [1, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 0, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.12485714256763458, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303040076523976, 2.300157067766594, 2.301481499285856, 2.3019089412852964, 2.303545915124722, 2.302912600241034, 2.3013994225484504, 2.30241444800209, 2.3009400582190724, 2.3014811795889316, 2.300257348334076, 2.3013296277846456, 2.3000161127249923, 2.30199391085159, 2.3004907986680356, 2.299691608600518, 2.3010926223339707, 2.300105472266666, 2.298572126018719, 2.300082891970861, 2.3006146246368826, 2.2984457122115978, 2.300950081435649, 2.3005757791617163, 2.299842120382087, 2.298675650445588, 2.299045869561234, 2.2991744804344534, 2.2996252296371167, 2.2995363128907993, 2.298038457725121, 2.297302266877829, 2.2993076513346082, 2.2987832932062218, 2.297870902715342, 2.2987732162029673, 2.298199773763763, 2.297771391599658, 2.2979019518620336, 2.2974626623392265, 2.2994957265915605, 2.298072382947473, 2.29644445178846, 2.297084458295333, 2.296651040148883, 2.298616848727574, 2.2973255545566142, 2.297006810330255, 2.2966357951528913, 2.296344009420072, 2.2960920573823946, 2.2966297392391053, 2.2978484497062754, 2.297074050195402, 2.2968376756989803, 2.2953681754020416, 2.296594013296744, 2.2942865728434474, 2.2946223841052342, 2.2946477347298257, 2.296339225239994, 2.2960611363726993, 2.2948713804579306, 2.295298164074431, 2.295483424537265, 2.293034800763899, 2.2958257051270636, 2.2955301799920287, 2.2956636135588546, 2.2951736073247697, 2.294133882008649, 2.293796677268838, 2.2932299388287922, 2.2946789481652146, 2.2939635740846236, 2.294570434362724, 2.296264686730591, 2.2944184123343954, 2.293334320378483, 2.2920184892796254, 2.2935460406114334, 2.29313789029966, 2.2917378864520104, 2.29174758436626, 2.292952851974544, 2.293095988588657, 2.2923991737144025, 2.293332797881713, 2.2926423707737063, 2.2923131621414568, 2.2925441563326245, 2.292880199147946, 2.2919962260354985, 2.2922535964510837, 2.290766395708164, 2.291812314175974, 2.2917958180728983, 2.2914645980771473, 2.290971674356699, 2.289936368428579], "accuracy": [0.09126931428909302, 0.10091137140989304, 0.09708096832036972, 0.09047681838274002, 0.09192973375320435, 0.09391097724437714, 0.09179764986038208, 0.09140139818191528, 0.09021265059709549, 0.0944393053650856, 0.09853387624025345, 0.09192973375320435, 0.09470347315073013, 0.09351472556591034, 0.09866596013307571, 0.09906221181154251, 0.09813763201236725, 0.09932637959718704, 0.10038304328918457, 0.09774138033390045, 0.09668471664190292, 0.09840179979801178, 0.09615638852119446, 0.09126931428909302, 0.09747721254825592, 0.10210011899471283, 0.09919429570436478, 0.09536388516426086, 0.09060890227556229, 0.10170386731624603, 0.10355303436517715, 0.10276053100824356, 0.09932637959718704, 0.10170386731624603, 0.10289261490106583, 0.09840179979801178, 0.10302469879388809, 0.10421344637870789, 0.1026284471154213, 0.09681680053472519, 0.09800554811954498, 0.10157178342342377, 0.10394927859306335, 0.10500594228506088, 0.10196803510189056, 0.10355303436517715, 0.10606260597705841, 0.10711926966905594, 0.10527011007070541, 0.10527011007070541, 0.10328886657953262, 0.1026284471154213, 0.10196803510189056, 0.10566636174917221, 0.10368511080741882, 0.11134592443704605, 0.10408136248588562, 0.11002509295940399, 0.10711926966905594, 0.11055342853069305, 0.10368511080741882, 0.10791176557540894, 0.11055342853069305, 0.11147800832986832, 0.10487385839223862, 0.11253467202186584, 0.10672302544116974, 0.10593052208423615, 0.11108175665140152, 0.10936468094587326, 0.107647605240345, 0.1138555034995079, 0.109232597053051, 0.10619468986988068, 0.10659094154834747, 0.11359133571386337, 0.10460969805717468, 0.11002509295940399, 0.11517632752656937, 0.11689341068267822, 0.11187426000833511, 0.11028926074504852, 0.11900673806667328, 0.11438383162021637, 0.1146479994058609, 0.11781799048185349, 0.11332716792821884, 0.11042134463787079, 0.1146479994058609, 0.11715757846832275, 0.11266675591468811, 0.11728965491056442, 0.11702549457550049, 0.11068551242351532, 0.11715757846832275, 0.11398758739233017, 0.11213842034339905, 0.11768590658903122, 0.11847840249538422, 0.11966715008020401], "val_loss": [1.9713307108197893, 1.9712209020342146, 1.9711102758135115, 1.9709997177124023, 1.9708888190133231, 1.9707793508257185, 1.9706687927246094, 1.9705587114606584, 1.9704489026750838, 1.970339230128697, 1.970228944505964, 1.9701189313616072, 1.9700086457388741, 1.9698989731924874, 1.969789913722447, 1.9696799686976842, 1.969571658543178, 1.9694626671927316, 1.969353267124721, 1.9692436626979284, 1.9691346032278878, 1.9690255437578474, 1.9689151218959264, 1.968806266784668, 1.9686974797930037, 1.968587943485805, 1.968478066580636, 1.96836941582816, 1.9682604925973075, 1.9681507519313268, 1.9680425098964147, 1.9679336547851562, 1.9678247996738978, 1.9677162170410156, 1.9676078387669154, 1.9674991880144392, 1.9673901966639928, 1.9672814096723283, 1.967172077723912, 1.9670638356889998, 1.9669549124581474, 1.9668466023036413, 1.9667390414646693, 1.9666305950709753, 1.9665224211556571, 1.9664128848484583, 1.9663046428135462, 1.96619599206107, 1.9660872050694056, 1.9659793717520577, 1.9658716065543038, 1.965764045715332, 1.9656566211155482, 1.96554776600429, 1.9654396602085658, 1.9653316225324358, 1.965223925454276, 1.9651150022234236, 1.9650066920689173, 1.9648989268711634, 1.9647904804774694, 1.9646825109209334, 1.964574200766427, 1.9644664355686732, 1.9643586703709193, 1.9642502920968192, 1.9641422544206892, 1.964035987854004, 1.9639277458190918, 1.9638193675449915, 1.9637107167925154, 1.963602134159633, 1.9634936196463448, 1.963385854448591, 1.9632764543805803, 1.9631699153355189, 1.963062354496547, 1.962954316820417, 1.9628468241010393, 1.962738377707345, 1.9626310893467493, 1.9625232560294015, 1.962416172027588, 1.9623092242649622, 1.9622013909476144, 1.9620939663478307, 1.9619865417480469, 1.9618802751813615, 1.961773191179548, 1.9616650172642298, 1.961557183946882, 1.961449146270752, 1.961341108594622, 1.961233275277274, 1.9611257825578963, 1.9610182217189245, 1.9609112058367049, 1.960803849356515, 1.9606967653547014, 1.960589817592076], "val_accuracy": [0.03566666692495346, 0.036666665226221085, 0.03733333200216293, 0.03766666725277901, 0.03799999877810478, 0.038333334028720856, 0.03966666758060455, 0.0403333343565464, 0.0403333343565464, 0.04100000113248825, 0.041999999433755875, 0.04333333298563957, 0.044333335012197495, 0.04466666653752327, 0.04533333331346512, 0.04600000008940697, 0.04699999839067459, 0.04766666516661644, 0.04833333194255829, 0.04833333194255829, 0.04933333396911621, 0.05066666752099991, 0.05133333429694176, 0.05299999937415123, 0.05366666615009308, 0.05400000140070915, 0.05533333495259285, 0.056333333253860474, 0.0573333315551281, 0.05766666680574417, 0.057999998331069946, 0.05900000035762787, 0.05999999865889549, 0.06133333221077919, 0.06199999898672104, 0.06199999898672104, 0.06300000101327896, 0.06333333253860474, 0.06466666609048843, 0.06466666609048843, 0.06533333659172058, 0.06700000166893005, 0.0676666647195816, 0.0689999982714653, 0.06933332979679108, 0.070333331823349, 0.070333331823349, 0.07100000232458115, 0.07199999690055847, 0.07266666740179062, 0.07266666740179062, 0.07333333045244217, 0.07366666942834854, 0.07433333247900009, 0.07500000298023224, 0.07566666603088379, 0.07599999755620956, 0.07766667008399963, 0.07866666465997696, 0.07966666668653488, 0.07999999821186066, 0.08100000023841858, 0.0820000022649765, 0.08299999684095383, 0.08433333039283752, 0.08533333241939545, 0.0860000029206276, 0.08699999749660492, 0.08766666799783707, 0.08799999952316284, 0.08833333104848862, 0.08933333307504654, 0.09033333510160446, 0.09133332967758179, 0.09366666525602341, 0.09433333575725555, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09666666388511658, 0.09733333438634872, 0.09866666793823242, 0.0989999994635582, 0.09933333098888397, 0.10066666454076767, 0.10166666656732559, 0.10166666656732559, 0.10233332961797714, 0.10400000214576721, 0.10566666722297668, 0.10700000077486038, 0.10733333230018616, 0.109333336353302, 0.11100000143051147, 0.1120000034570694, 0.11266666650772095, 0.11299999803304672, 0.1146666631102562, 0.11533333361148834, 0.11633333563804626]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [2, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.11714285612106323, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3019238317867767, 2.2970983954059165, 2.2993668085863375, 2.3013655217946276, 2.3023486372943034, 2.302664099746077, 2.3029646056911743, 2.3032225171541256], "accuracy": [0.09536388516426086, 0.11068551242351532, 0.10870426893234253, 0.10130762308835983, 0.09655263274908066, 0.07977809756994247, 0.10949676483869553, 0.09985470771789551], "val_loss": [1.968956402369908, 1.969921588897705, 1.9717561176845007, 1.973080771309989, 1.9735240255083357, 1.9737386022295271, 1.9739483424595423, 1.9741219111851283], "val_accuracy": [0.07533333450555801, 0.10533333569765091, 0.13199999928474426, 0.12200000137090683, 0.06499999761581421, 0.1120000034570694, 0.09833333641290665, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [99, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.11599999666213989, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 5, 2, 1, 13, 7, 6, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(alpha, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(sigma, sigma)), sigma)))))), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2238571723186737, 2.2977306024037207, 2.249723088771219, 2.3131635340843157, 2.2891665872975175, 2.3043888046316043, 2.3034351401403987, 2.3040558993619555, 2.3032656442125505], "accuracy": [0.24144762754440308, 0.177255317568779, 0.17276449501514435, 0.25597676634788513, 0.11834631860256195, 0.09681680053472519, 0.1022322028875351, 0.09708096832036972, 0.09470347315073013], "val_loss": [1.9755099160330636, 1.9741220474243164, 1.9759187017168318, 1.9800645964486259, 1.9762300082615443, 1.9741875103541784, 1.9736716406685966, 1.9737748418535506, 1.9737364905221122], "val_accuracy": [0.0976666659116745, 0.09933333098888397, 0.10499999672174454, 0.14233332872390747, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [2, 1, 0, 6, 1, 0, 2, 2, 5, 3, 5, 2, 4, 2, 5, 4, 6, 8, 3, 8, 2, 2, 9, 0, 9, 2, 4, 5, 6, 2, 9, 8, 4, 1, 2, 0, 7, 2, 6, 0, 0, 1, 6, 0, 2, 4, 6, 1, 0], [0, 3, 1, 0, 2, 1, 1, 0, 2, 3, 3, 3, 1, 3, 3, 2, 3, 3, 0, 3, 0, 2, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4, 3, 3, 3, 5], [44, 92, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [32, 23, 13, 96, 52, 15, 96]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 64, 64, 41, 23, 8, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 62, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(alpha, tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, beta)))), tf.math.add(beta, grad)))))), grad)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.square(alpha), tf.math.divide_no_nan(grad, tf.math.add(grad, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), beta)))), tf.math.sqrt(tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.negative(alpha))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08479725569486618, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 1, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [66, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [2, 0, 1, 3, 3, 3, 1, 0, 2, 3, 2, 0, 3, 3, 3, 0, 3, 3, 0, 0, 3, 3, 0, 3, 2, 1, 3, 3, 4, 2, 1, 4, 4], [27, 0, 21, 2, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 1, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [32, 23, 66, 96, 52, 15, 96]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 27, 14, 13, 3], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.add(tf.math.add(tf.math.subtract(beta, tf.math.pow(tf.math.subtract(tf.math.pow(beta, tf.math.subtract(sigma, tf.math.sqrt(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(alpha, sigma), sigma)), tf.math.sqrt(tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [84, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 8, 0, 6, 4, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 43, 43, 26, 17, 4, 1, 0, 0, 0, 0, 49, 29, 20, 6], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.divide_no_nan(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.square(alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), tf.math.add(beta, grad)))), tf.math.add(beta, beta))), tf.math.add(beta, beta))))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.subtract(tf.math.add(grad, beta), grad)))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.add(tf.math.add(tf.math.subtract(beta, tf.math.pow(tf.math.subtract(tf.math.pow(beta, tf.math.subtract(sigma, tf.math.sqrt(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), sigma)))), beta), tf.math.add(tf.math.pow(tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), alpha), sigma))), tf.math.multiply(tf.math.multiply(tf.math.subtract(sigma, tf.math.negative(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), alpha), beta)), tf.math.add(tf.math.negative(beta), tf.math.subtract(tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.negative(beta))))), tf.math.square(tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 0, 5, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.pow(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, alpha)), alpha))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(alpha)), tf.math.add(beta, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [85, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [0, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026450703786807, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [0, 5, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [39, 0, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 2, 4, 1, 8, 2, 2, 4, 6, 3, 3, 1, 4, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [2, 2, 2, 3, 0, 1, 2, 0, 1, 2, 3, 0, 1, 2, 2, 0, 0, 1, 2, 1, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 53, 30, 23, 6], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.add(tf.math.add(tf.math.subtract(beta, tf.math.pow(tf.math.add(tf.math.pow(beta, tf.math.subtract(sigma, tf.math.sqrt(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), alpha)))), beta), tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha), beta), tf.math.multiply(tf.math.multiply(tf.math.subtract(sigma, tf.math.pow(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), alpha)), beta), beta)))), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(beta))), tf.math.square(tf.math.square(alpha))))), alpha)))), tf.math.pow(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [73, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [3, 0, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [50, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08479725569486618, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 1, 0, 6, 1, 6, 2, 2, 5, 5, 5, 2, 4, 2, 5, 4, 6, 8, 3, 8, 2, 2, 9, 0, 9, 2, 4, 5, 6, 2, 9, 8, 4, 1, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2, 4, 6, 1, 0], [0, 3, 1, 0, 2, 1, 1, 0, 2, 3, 3, 3, 1, 3, 3, 2, 3, 3, 0, 3, 0, 2, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4, 3, 3, 3, 5], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [32, 23, 13, 96, 52, 15, 96]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [506163055.4377776, 75134171062.6929, 1255949046091.6401, 8987370333282.059, 39621546085818.414, 131497299941481.77], "accuracy": [0.09853387624025345, 0.09826971590518951, 0.09866596013307571, 0.09377889335155487, 0.09853387624025345, 0.10038304328918457], "val_loss": [4065186669.714286, 219072144530.2857, 2351262260077.7144, 12818016820077.715, 48012739552402.29, 141625146886436.56], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 6, 1, 6, 2, 2, 5, 3, 5, 2, 4, 2, 5, 4, 6, 8, 3, 8, 2, 8, 9, 0, 9, 2, 4, 5, 6, 2, 9, 8, 4, 1, 2, 0, 7, 2, 6, 0, 6, 1, 6, 0, 2, 4, 6, 1, 0], [0, 3, 1, 0, 2, 1, 1, 0, 2, 3, 3, 3, 1, 3, 3, 2, 3, 3, 0, 3, 2, 2, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4, 3, 3, 3, 5], [59, 88, 21, 97, 98, 97, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 3, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 2, 0, 2, 2, 0, 1, 0, 5, 6, 2, 3, 0, 0, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 1, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [32, 99, 13, 96, 52, 15, 96]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 48, 48, 31, 17, 6, 1, 0, 0, 0, 0, 31, 16, 15, 3], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.divide_no_nan(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.pow(beta, alpha)), tf.math.add(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))))), beta))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), tf.math.add(beta, grad))))), tf.math.add(beta, grad)))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(beta, tf.math.add(tf.math.pow(grad, tf.math.add(beta, tf.math.square(grad))), tf.math.divide_no_nan(beta, tf.math.add(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.add(tf.math.multiply(tf.math.subtract(beta, tf.math.pow(tf.math.subtract(tf.math.pow(beta, tf.math.subtract(sigma, tf.math.sqrt(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), sigma)))), beta), tf.math.add(tf.math.pow(tf.math.sqrt(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), alpha), sigma))), sigma), tf.math.multiply(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, beta)), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 3, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 2, 0, 6, 1, 2, 2, 2, 5, 5, 5, 2, 4, 2, 5, 6, 6, 8, 3, 8, 2, 8, 9, 2, 1, 4, 5, 5, 2, 2, 9, 8, 4, 1, 2, 0, 7, 6, 6, 0, 4, 1, 6, 0, 2, 4, 6, 1, 0], [0, 0, 3, 0, 2, 1, 1, 0, 2, 3, 3, 3, 1, 3, 3, 2, 4, 3, 3, 3, 3, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4, 3, 3, 3, 5], [59, 88, 21, 97, 70, 97, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 49, 29, 20, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.add(tf.math.add(tf.math.subtract(beta, tf.math.pow(tf.math.subtract(tf.math.pow(beta, tf.math.subtract(sigma, tf.math.sqrt(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), sigma)))), beta), tf.math.add(tf.math.pow(tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), alpha), sigma))), tf.math.multiply(tf.math.multiply(tf.math.subtract(sigma, tf.math.negative(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), alpha), beta)), tf.math.add(tf.math.negative(beta), tf.math.subtract(tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.negative(beta))))), tf.math.square(tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 5, 0, 6, 9, 6, 2, 2, 5, 5, 4, 2, 0, 2, 5, 6, 2, 3, 9, 3, 2, 2, 9, 6, 1, 2, 4, 5, 2, 2, 5, 8, 0, 0, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [39, 0, 21, 97, 70, 12, 60, 9, 54, 64], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [30, 23, 13, 96, 41, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 5, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [506163055.4377776, 75134171062.6929, 1255949046091.6401, 8987370333282.059, 39621546085818.414, 131497299941481.77], "accuracy": [0.09853387624025345, 0.09826971590518951, 0.09866596013307571, 0.09377889335155487, 0.09853387624025345, 0.10038304328918457], "val_loss": [4065186669.714286, 219072144530.2857, 2351262260077.7144, 12818016820077.715, 48012739552402.29, 141625146886436.56], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [43, 66, 89, 50, 85, 46], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 1, 0, 6, 1, 6, 2, 2, 5, 5, 5, 2, 4, 2, 5, 4, 6, 8, 3, 8, 2, 2, 9, 0, 9, 2, 4, 5, 6, 2, 9, 8, 4, 1, 2, 0, 7, 2, 6, 0, 4, 1, 6, 0, 2, 4, 6, 1, 0], [1, 3, 1, 0, 3, 3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 2, 4, 3, 0, 3, 4, 1, 1, 1, 2, 1, 3, 3, 4, 2, 1, 4, 4], [59, 88, 21, 97, 70, 12, 60, 9, 54, 64], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 2, 6, 6, 7, 4], [4, 4, 2], [65, 2, 82], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 7, 7, 1, 4, 1, 4, 1, 8, 2, 2, 4, 8, 3, 3, 1, 0, 0, 2, 0, 1, 0, 5, 6, 3, 3, 0, 5, 5, 4, 3, 1, 0, 4, 2, 3, 4, 5, 8, 7, 0, 0, 6, 4, 6, 0, 7, 2, 6, 6, 1, 3, 8], [1, 2, 2, 3, 0, 3, 2, 0, 1, 3, 3, 0, 1, 2, 2, 0, 0, 1, 2, 0, 1, 0, 3, 1, 1, 3, 0, 3, 1], [32, 23, 13, 96, 52, 15, 96]], "fitness": -0.040571428835392, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303089219313634, 2.30032341241868, 2.3017680427700915, 2.302316472011078, 2.304074110686897, 2.303560487881722], "accuracy": [0.09126931428909302, 0.10038304328918457, 0.09655263274908066, 0.08981640636920929, 0.09060890227556229, 0.09245806187391281], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}]