[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 2, 2, 6, 5, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 9, 9, 2, 6, 1, 0, 0, 8, 0, 9, 8, 9, 0, 2, 1, 6, 0, 2], [2, 0, 3, 1, 0, 3, 3, 0, 3, 3, 2, 3, 3, 3, 1, 2, 4, 3, 0, 1, 4, 1, 1, 0, 5, 1, 3, 3, 4, 2, 1, 4, 4], [69, 37, 34, 97, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8328571319580078, "mapping_values": [1, 4, 4, 2, 2, 1, 38, 38, 24, 14, 5, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), grad)), tf.math.subtract(tf.math.divide_no_nan(tf.math.square(alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.negative(grad)), grad)))), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, beta)))))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.246614749421218, 1.7792029607376292, 1.2502609907502211, 1.1160458196754137, 0.8871115534029396, 0.8174938375467102, 0.7905040638416262, 0.719003293909779, 0.7028516140816754, 0.6819653317141353, 0.6519952804861823, 0.637928964604854, 0.6216806638525808, 0.5952886444482159, 0.5794429597979319, 0.5753724078665383, 0.5478096663786546, 0.529875937816316, 0.5216942909426456, 0.5122808126835791, 0.5053069497757678, 0.49583211699024626, 0.48101293821423646, 0.4847452585030509, 0.46410745596841596, 0.45088276243827063, 0.43143153126056183, 0.43402055646324234, 0.4352712586941327, 0.43037112343186923, 0.4165714507436141, 0.4206077296696697, 0.3924144319161574, 0.3916178136855352, 0.3918012880913696, 0.38028585253815533, 0.378150169269331, 0.36363662657893925, 0.35172252969309764, 0.35079275385153497, 0.3497502274005294, 0.3527875146837818, 0.32714780085767975, 0.32177708072905464, 0.31885684232874917, 0.3204320438581136, 0.31740975089439105], "accuracy": [0.29718664288520813, 0.38660678267478943, 0.5569937825202942, 0.5805045366287231, 0.6676793098449707, 0.6839255094528198, 0.6979262828826904, 0.7234182953834534, 0.7259278893470764, 0.7401928305625916, 0.7494386434555054, 0.757099449634552, 0.7663452625274658, 0.7757231593132019, 0.7784969210624695, 0.7827235460281372, 0.791969358921051, 0.7938185334205627, 0.8057059645652771, 0.804649293422699, 0.8129705190658569, 0.8131026029586792, 0.8187822103500366, 0.8175934553146362, 0.8290846943855286, 0.8302733898162842, 0.8401796221733093, 0.8368775844573975, 0.8345000743865967, 0.8380662798881531, 0.8450667262077332, 0.8388587832450867, 0.8557654023170471, 0.8544445633888245, 0.8491612672805786, 0.8545766472816467, 0.8521991968154907, 0.8615770936012268, 0.867520809173584, 0.863558292388916, 0.8667283058166504, 0.8672566413879395, 0.8757099509239197, 0.8849557638168335, 0.8766345381736755, 0.8804649114608765, 0.8780874609947205], "val_loss": [1.5750689847128732, 1.0017638887677873, 0.8093311446053642, 0.7024145637239728, 0.6158875056675502, 0.6125572579247611, 0.5845764023917062, 0.5731804200581142, 0.5493601730891636, 0.521842360496521, 0.509807927267892, 0.49585538251059397, 0.49145003727504183, 0.4752761125564575, 0.475186824798584, 0.44702839851379395, 0.4250350935118539, 0.439392626285553, 0.4286006433623178, 0.4028904438018799, 0.39867024762289865, 0.3937810744558062, 0.4017711877822876, 0.3865609679903303, 0.3887396369661604, 0.3749070167541504, 0.38910398312977384, 0.3690997532435826, 0.36079098497118267, 0.35637714181627544, 0.3603480202811105, 0.3758309653827122, 0.35803944723946707, 0.35764224188668386, 0.35259454590933664, 0.36598972763334003, 0.34449315071105957, 0.343879188810076, 0.35098116738455637, 0.3318808078765869, 0.3703763910702297, 0.33682912588119507, 0.33935095582689556, 0.3484675543648856, 0.3417579616819109, 0.3333534172603062, 0.35593050718307495], "val_accuracy": [0.34433332085609436, 0.5803333520889282, 0.5983333587646484, 0.675000011920929, 0.7110000252723694, 0.7289999723434448, 0.7296666502952576, 0.7223333120346069, 0.7483333349227905, 0.7603333592414856, 0.7639999985694885, 0.762333333492279, 0.765999972820282, 0.7723333239555359, 0.781333327293396, 0.793666660785675, 0.8069999814033508, 0.7973333597183228, 0.8059999942779541, 0.8240000009536743, 0.8276666402816772, 0.8259999752044678, 0.8143333196640015, 0.8323333263397217, 0.82833331823349, 0.8303333520889282, 0.8306666612625122, 0.8420000076293945, 0.8393333554267883, 0.8479999899864197, 0.8416666388511658, 0.8420000076293945, 0.8410000205039978, 0.8479999899864197, 0.8483333587646484, 0.8349999785423279, 0.8513333201408386, 0.8539999723434448, 0.8526666760444641, 0.8579999804496765, 0.8376666903495789, 0.8613333106040955, 0.856333315372467, 0.8500000238418579, 0.8586666584014893, 0.859000027179718, 0.8416666388511658]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 6, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8285714387893677, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2468419977230183, 1.781215566213278, 1.2414214797322902, 1.0686412252030115, 0.8969893679957679, 0.8072199742429685, 0.7869180729675445, 0.7160849221756335, 0.7120886309948957, 0.6749590691353714, 0.6512414831621394, 0.6341390608324114, 0.6231440752803721, 0.6019249486255608, 0.5765235381528859, 0.576372113643211, 0.5521010170602024, 0.5413942772871971, 0.5192777504734848, 0.5235983829110321, 0.5062422648381248, 0.4938585892361011, 0.48303881667041665, 0.4847022800192999, 0.4623621686094425, 0.46020271657338596, 0.4327258684214442, 0.4363433916917362, 0.43466587134985923, 0.4288652137467071, 0.4233837749712093, 0.4289893065508504, 0.3952090202218994, 0.3932257405936269, 0.4061741433391135, 0.3886563764303714, 0.38297359503853856, 0.36341901884622513, 0.36341807019866423, 0.3525955908215986, 0.3545116370640033, 0.36151276862837023, 0.3375349272125669, 0.3443001391566141, 0.3344426867850405, 0.32911308028080427, 0.32562210067482733], "accuracy": [0.2969224750995636, 0.38422930240631104, 0.5555408596992493, 0.5934486985206604, 0.663848876953125, 0.6929071545600891, 0.7018887996673584, 0.7224937081336975, 0.7248712182044983, 0.7409853339195251, 0.7500990629196167, 0.7585523724555969, 0.7619865536689758, 0.7711002230644226, 0.7745344042778015, 0.7821952104568481, 0.7909126877784729, 0.7922335267066956, 0.8058380484580994, 0.802271842956543, 0.8132346868515015, 0.8119139075279236, 0.8185180425643921, 0.816008448600769, 0.8267071843147278, 0.8290846943855286, 0.8366134166717529, 0.8379341959953308, 0.8360850811004639, 0.8400475382804871, 0.8429533839225769, 0.8363492488861084, 0.8535200357437134, 0.8539162874221802, 0.8496896028518677, 0.8507462739944458, 0.8532558679580688, 0.8644828796386719, 0.8599920868873596, 0.8692378997802734, 0.8631620407104492, 0.8628978729248047, 0.869502067565918, 0.8714832663536072, 0.8768987059593201, 0.8741249442100525, 0.8751816153526306], "val_loss": [1.5842064108167375, 0.985121318272182, 0.8822110721043178, 0.7061166252408709, 0.619861194065639, 0.6885315009525844, 0.58017327104296, 0.5776756831577846, 0.5553451946803502, 0.5166604178292411, 0.5094895873750959, 0.4883061817714146, 0.49474494797842844, 0.4912222283227103, 0.47542944976261686, 0.45639187949044363, 0.4246864744595119, 0.4519092951502119, 0.42745700904301237, 0.41459023100989206, 0.3968143548284258, 0.3994433454104832, 0.40351319313049316, 0.38185069390705656, 0.3969933135168893, 0.37982802731650217, 0.3893349511282785, 0.3717667204993112, 0.36646259682519094, 0.3612696017537798, 0.3656060610498701, 0.3915985992976597, 0.36746194532939364, 0.35814281020845684, 0.35040174211774555, 0.35605171748570036, 0.34193828276225496, 0.3695429137774876, 0.34743160009384155, 0.33449338163648334, 0.3811583433832441, 0.3390085356576102, 0.37001692397253855, 0.3460187486239842, 0.3427456957953317, 0.34999656677246094, 0.37814946685518536], "val_accuracy": [0.3463333249092102, 0.5746666789054871, 0.628333330154419, 0.6626666784286499, 0.7099999785423279, 0.6830000281333923, 0.7279999852180481, 0.7200000286102295, 0.750333309173584, 0.7599999904632568, 0.7649999856948853, 0.762666642665863, 0.7733333110809326, 0.7649999856948853, 0.7760000228881836, 0.7926666736602783, 0.8113333582878113, 0.7879999876022339, 0.8019999861717224, 0.8146666884422302, 0.8253333568572998, 0.8199999928474426, 0.8199999928474426, 0.8366666436195374, 0.8230000138282776, 0.8389999866485596, 0.8349999785423279, 0.8393333554267883, 0.8353333473205566, 0.8463333249092102, 0.8426666855812073, 0.8373333215713501, 0.8373333215713501, 0.8456666469573975, 0.8486666679382324, 0.8483333587646484, 0.8560000061988831, 0.8383333086967468, 0.8519999980926514, 0.8579999804496765, 0.8323333263397217, 0.859000027179718, 0.8356666564941406, 0.8533333539962769, 0.8560000061988831, 0.8486666679382324, 0.8326666951179504]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 6, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8199999928474426, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2468607322084213, 1.78113417612201, 1.3218552709932672, 1.076652511771266, 0.889708042254994, 0.8256921035864602, 0.7626392723405209, 0.7280449663186669, 0.7134390036900125, 0.6758233776433892, 0.6400251101351622, 0.6389908838769653, 0.6166792931557962, 0.5992563167315559, 0.5801850993320564, 0.5720301354880881, 0.547524339455844, 0.5284359033286312, 0.5293668043525259, 0.5208721390694454, 0.4995936405161164, 0.4898046637019146, 0.4768698925174317, 0.48358582732715566, 0.46215094375793, 0.4681017003228179, 0.43302271920282764, 0.43057687929151806, 0.4427241115616675, 0.42412269498851274, 0.42594298309795514, 0.42248407226700935, 0.3927073571951539, 0.39910137373080673, 0.3933320899625984, 0.3883422378220846, 0.3695600122870739, 0.3653947776767792, 0.3571321561060656, 0.3470752767135029, 0.35445101481025026, 0.3576149475250136, 0.3316344048967136, 0.3346429694330278, 0.3280977760292142, 0.3201891597409085, 0.33105304297155724], "accuracy": [0.29718664288520813, 0.383700966835022, 0.5272751450538635, 0.5993924140930176, 0.6650376319885254, 0.685510516166687, 0.7073041796684265, 0.7193237543106079, 0.7285695672035217, 0.7457403540611267, 0.7572315335273743, 0.7540615797042847, 0.7658169269561768, 0.7730814814567566, 0.7758552432060242, 0.7862898111343384, 0.7952714562416077, 0.8004226684570312, 0.800290584564209, 0.8042530417442322, 0.8152159452438354, 0.8166688680648804, 0.8189142942428589, 0.8170651197433472, 0.8260467648506165, 0.8222163319587708, 0.8360850811004639, 0.8374059200286865, 0.8310658931732178, 0.8422929644584656, 0.839519202709198, 0.8385946154594421, 0.8561616539955139, 0.8486329317092896, 0.8486329317092896, 0.8536521196365356, 0.8617091774940491, 0.863558292388916, 0.8654074668884277, 0.8717474341392517, 0.8671245574951172, 0.8683133125305176, 0.8742570281028748, 0.8767666220664978, 0.8768987059593201, 0.8803328275680542, 0.8750495314598083], "val_loss": [1.5855128765106201, 0.9808593818119594, 0.778846161706107, 0.6990502391542707, 0.6162729944501605, 0.600423949105399, 0.573721034186227, 0.5809331962040493, 0.540644781930106, 0.5123580864497593, 0.505750264440264, 0.49167936188834055, 0.48509155000959125, 0.48840832710266113, 0.4835461548396519, 0.4624831846782139, 0.4169660210609436, 0.440471921648298, 0.43449939148766653, 0.4142951284136091, 0.3849929230553763, 0.40198891503470285, 0.41566130944660734, 0.38441240787506104, 0.4111147437776838, 0.37983950546809603, 0.37778126341956003, 0.3857470580509731, 0.370929479598999, 0.35980801922934397, 0.3802482145173209, 0.38656738826206755, 0.3584019456590925, 0.35359413283211844, 0.35053699357169016, 0.3521225367273603, 0.3461439609527588, 0.3597977416855948, 0.3443153074809483, 0.33554186139787945, 0.36803495032446726, 0.3373566780771528, 0.35023231165749685, 0.3382806692804609, 0.34532917397362844, 0.3438449076243809, 0.3451255219323294], "val_accuracy": [0.3463333249092102, 0.5803333520889282, 0.6703333258628845, 0.671999990940094, 0.7086666822433472, 0.7250000238418579, 0.7300000190734863, 0.7239999771118164, 0.7543333172798157, 0.7643333077430725, 0.7636666893959045, 0.7583333253860474, 0.7699999809265137, 0.7599999904632568, 0.778333306312561, 0.7796666622161865, 0.8180000185966492, 0.7976666688919067, 0.8029999732971191, 0.8159999847412109, 0.8320000171661377, 0.8209999799728394, 0.8086666464805603, 0.8360000252723694, 0.8146666884422302, 0.8330000042915344, 0.8363333344459534, 0.8353333473205566, 0.8389999866485596, 0.8403333425521851, 0.8346666693687439, 0.8373333215713501, 0.8420000076293945, 0.8460000157356262, 0.8496666550636292, 0.8543333411216736, 0.8516666889190674, 0.8413333296775818, 0.8506666421890259, 0.8550000190734863, 0.8349999785423279, 0.859666645526886, 0.8503333330154419, 0.8513333201408386, 0.8536666631698608, 0.8506666421890259, 0.8560000061988831]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7794285416603088, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.100271261772853, 1.3765125081618197, 1.0860892855779385, 0.9674667127301523, 0.8321986980426266, 0.8181710430675446, 0.7630905772102602, 0.7543534878742236, 0.7091571411845895, 0.6942653505951107, 0.6894663160487472, 0.6763612115151689, 0.6380721589656412, 0.6361229466393702, 0.6422967255753202, 0.6115786318041472, 0.6206365798395449, 0.6115388938496062], "accuracy": [0.30880993604660034, 0.5325584411621094, 0.599128246307373, 0.6409985423088074, 0.6926429867744446, 0.6922467350959778, 0.7220974564552307, 0.7121912837028503, 0.7378153204917908, 0.7342491149902344, 0.7372870445251465, 0.7454761862754822, 0.7604015469551086, 0.7552502751350403, 0.7588165402412415, 0.7726852297782898, 0.7613261342048645, 0.7718927264213562], "val_loss": [1.2154096875871931, 0.8889882905142648, 0.7539935111999512, 0.6310163055147443, 0.6079002107892718, 0.58672867502485, 0.5895143577030727, 0.5824238061904907, 0.5438255582536969, 0.5345550434929984, 0.5638771738324847, 0.5156583445412772, 0.49462737355913433, 0.494780216898237, 0.5104514019829887, 0.5138368436268398, 0.4924931355885097, 0.4745711258479527], "val_accuracy": [0.5736666917800903, 0.6006666421890259, 0.6700000166893005, 0.7210000157356262, 0.7319999933242798, 0.7356666922569275, 0.7210000157356262, 0.7446666955947876, 0.7516666650772095, 0.7446666955947876, 0.7443333268165588, 0.7666666507720947, 0.7749999761581421, 0.7739999890327454, 0.7609999775886536, 0.7443333268165588, 0.7746666669845581, 0.7743333578109741]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 6, 4, 9, 5, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7777143120765686, "mapping_values": [1, 4, 4, 2, 2, 1, 6, 6, 4, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.131416212251205, 1.408548575272067, 1.104457018145827, 0.9501483730510273, 0.8576989574612501, 0.8276602751574795, 0.7655714189513422, 0.7548040998783472, 0.7272032071429001, 0.7095286794358147, 0.6961152696606348, 0.675330461197368, 0.6432872080469113, 0.6394734810120111, 0.6462653658062854, 0.6177268573211531, 0.626046118522443, 0.6145158239469678, 0.5906025966113474], "accuracy": [0.3003566265106201, 0.5156518220901489, 0.5970149040222168, 0.6489235162734985, 0.6877558827400208, 0.6902654767036438, 0.719852089881897, 0.7140403985977173, 0.7317395210266113, 0.7268524765968323, 0.733060359954834, 0.750231146812439, 0.7604015469551086, 0.7556465268135071, 0.7565711140632629, 0.7703077793121338, 0.7607977986335754, 0.7695152759552002, 0.780610203742981], "val_loss": [1.3265095778873988, 0.934415476662772, 0.7458919967923846, 0.7111920969826835, 0.6217750651495797, 0.5897465773991176, 0.593913095338004, 0.5903604541506086, 0.5620279312133789, 0.5398039817810059, 0.5512574911117554, 0.5089208057948521, 0.49566919463021414, 0.49699742453438894, 0.5177888018744332, 0.49942627974918913, 0.4998833622251238, 0.47746850763048443, 0.4797369582312448], "val_accuracy": [0.562666654586792, 0.5743333101272583, 0.6693333387374878, 0.6690000295639038, 0.7300000190734863, 0.7356666922569275, 0.7196666598320007, 0.7336666584014893, 0.7379999756813049, 0.7450000047683716, 0.75, 0.7666666507720947, 0.7726666927337646, 0.7766666412353516, 0.753333330154419, 0.7559999823570251, 0.7696666717529297, 0.7746666669845581, 0.7749999761581421]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 6, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [5, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7631428837776184, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.29482389387595, 2.2812201513858, 2.2663021253919116, 2.2497305617498102, 2.2306529363353316, 2.209116028221512, 2.186194822599607, 2.1529643175986464, 2.116332993767501, 2.0737441664657825, 2.019366425356892, 1.9616462277257605, 1.896363820886064, 1.8218934418991053, 1.7438792981302829, 1.6704964498566, 1.6035325570963692, 1.5326772275428888, 1.4693240996884664, 1.4079003981815872, 1.3681413368258604, 1.3169809100870695, 1.2737220862695586, 1.2424402465248436, 1.2211560337157092, 1.1939388162755002, 1.1594664327315116, 1.1242888946543281, 1.109197519285615, 1.0935156036597895, 1.0756742370725387, 1.0521512233255215, 1.0385499719804414, 1.022269661164224, 1.0132891343427515, 0.9950434265277168, 0.9809373898702038, 0.9616109459722331, 0.9606299097385893, 0.9560147655591232, 0.9503172779946106, 0.9312287848371446, 0.9151493243143906, 0.9270382241613246, 0.9137899788174536, 0.9035699182119761, 0.8975233620561865, 0.8857767369690163, 0.8770517733087314, 0.8788562790513936, 0.868641497743695, 0.8630414388561135, 0.8378613373748599, 0.8514452739603342, 0.8498596840404863, 0.8374535269457604, 0.8346537818698961, 0.8288273026190256, 0.8285990636724412, 0.8254862725380436, 0.8179121507613918, 0.8214523354226635, 0.8210158871228213, 0.8079005395337937, 0.8034615446201421, 0.7948034077178155, 0.7959957869769938, 0.7948474032200874, 0.7909634382323881, 0.7790136406009444, 0.783537812567406, 0.781687125089288, 0.7771783161157032, 0.7683146583830849, 0.7669558874163503, 0.7629381897285425, 0.7650464073368712, 0.7557043423348445, 0.757381997710253, 0.7496194458829728, 0.7533371607625269, 0.7541491864001857, 0.7476608655188518, 0.7435780186001902, 0.7364585375143411, 0.7401730849317446, 0.7360987556357, 0.7346878202914751, 0.7305342142513604, 0.7236394793948541, 0.7324123370837952, 0.7232137015309584, 0.7333150610097442, 0.7282323493398238, 0.7293466121655068, 0.7228960116950984, 0.7113105646922462, 0.718449050314816, 0.7224221721128182], "accuracy": [0.10791176557540894, 0.14753665030002594, 0.18478403985500336, 0.2285034954547882, 0.26244881749153137, 0.2925637364387512, 0.30880993604660034, 0.342491090297699, 0.36785101890563965, 0.39162594079971313, 0.40774005651474, 0.4167217016220093, 0.43864747881889343, 0.4507991075515747, 0.47668737173080444, 0.4896314740180969, 0.490159809589386, 0.5086514353752136, 0.528992235660553, 0.5432571768760681, 0.544181764125824, 0.5572579503059387, 0.5686171054840088, 0.5739004015922546, 0.572579562664032, 0.5872408151626587, 0.5921278595924377, 0.6071853041648865, 0.6116761565208435, 0.6198652982711792, 0.6185444593429565, 0.6280544400215149, 0.639809787273407, 0.6347906589508057, 0.6421872973442078, 0.6489235162734985, 0.6494518518447876, 0.6572447419166565, 0.661471426486969, 0.6650376319885254, 0.6711134314537048, 0.670320987701416, 0.6728305220603943, 0.6736230254173279, 0.6730946898460388, 0.6732267737388611, 0.6754721999168396, 0.6789063811302185, 0.6896050572395325, 0.6824725866317749, 0.6896050572395325, 0.6873596906661987, 0.7000396251678467, 0.6905296444892883, 0.6901333928108215, 0.7037379741668701, 0.7009642124176025, 0.6996433734893799, 0.6996433734893799, 0.7021529674530029, 0.6985867023468018, 0.7028133869171143, 0.7087571024894714, 0.7087571024894714, 0.7096816897392273, 0.7125874757766724, 0.7096816897392273, 0.7157574892044067, 0.7153612375259399, 0.7169462442398071, 0.7172104120254517, 0.7129837274551392, 0.7217012047767639, 0.7240787148475647, 0.7210407853126526, 0.7235503792762756, 0.7207766771316528, 0.7230220437049866, 0.726192057132721, 0.7280412316322327, 0.7256637215614319, 0.7251353859901428, 0.733588695526123, 0.7259278893470764, 0.7304186820983887, 0.7308149337768555, 0.7310791015625, 0.7351737022399902, 0.7343811988830566, 0.7374191284179688, 0.7333245277404785, 0.7380794882774353, 0.7293620109558105, 0.7304186820983887, 0.7322678565979004, 0.7334566116333008, 0.7416457533836365, 0.7353057861328125, 0.7341170310974121], "val_loss": [1.9574554988316126, 1.9434338978358678, 1.9286722455705916, 1.9122774941580636, 1.8931636810302734, 1.8707740647452218, 1.844222068786621, 1.8119903291974748, 1.7739848409380232, 1.7289811543055944, 1.6760006632123674, 1.6156294686453683, 1.5482421602521623, 1.4758992195129395, 1.400264092854091, 1.3251763071332658, 1.2533684798649378, 1.185586895261492, 1.1253154618399483, 1.0721546922411238, 1.0250771045684814, 0.9825412886483329, 0.9471690654754639, 0.915759699685233, 0.8884492261069161, 0.8639344998768398, 0.8412618296486991, 0.8205690213612148, 0.8027312585285732, 0.7866832188197544, 0.7747545412608555, 0.7601144143513271, 0.7482012850897652, 0.7372864144189017, 0.7281723192759922, 0.7177453211375645, 0.7089855330330985, 0.7012626784188407, 0.6935809339795794, 0.6861324650900704, 0.6811660528182983, 0.6736570596694946, 0.6672855275017875, 0.6613857746124268, 0.6553842169897897, 0.6507775272641864, 0.6453917707715716, 0.6400848797389439, 0.6359396832329887, 0.6324080910001483, 0.6285454205104283, 0.6238107340676444, 0.617378830909729, 0.6144005060195923, 0.6127549069268363, 0.6086539370673043, 0.6060864244188581, 0.6044900417327881, 0.6019103186471122, 0.5965960536684308, 0.5947154590061733, 0.5922045367104667, 0.5894007853099278, 0.585944652557373, 0.583824736731393, 0.5821918760027204, 0.5794109106063843, 0.5773042610713414, 0.5747522456305367, 0.5710202625819615, 0.5687344755445208, 0.5674660205841064, 0.5651072774614606, 0.562995331627982, 0.5614715473992484, 0.5590984310422625, 0.5591417721339634, 0.5567008256912231, 0.5542459998811994, 0.5532877104622977, 0.5509856598717826, 0.5494943857192993, 0.5475561278206962, 0.546270455632891, 0.5451714311327253, 0.5435774326324463, 0.5414799281529018, 0.539516704423087, 0.5400009495871407, 0.5369950192315238, 0.5358559744698661, 0.5349653278078351, 0.5336835554667881, 0.5319590398243496, 0.5311641011919294, 0.5303641046796527, 0.5289993626730782, 0.5275735003607613, 0.5270464250019619], "val_accuracy": [0.1459999978542328, 0.27566665410995483, 0.34700000286102295, 0.37933334708213806, 0.4046666622161865, 0.43833333253860474, 0.4650000035762787, 0.4846666753292084, 0.503000020980835, 0.5149999856948853, 0.5270000100135803, 0.5346666574478149, 0.5519999861717224, 0.5616666674613953, 0.5730000138282776, 0.5839999914169312, 0.5920000076293945, 0.6076666712760925, 0.6293333172798157, 0.6433333158493042, 0.6449999809265137, 0.6579999923706055, 0.6610000133514404, 0.6676666736602783, 0.6729999780654907, 0.6763333082199097, 0.6813333630561829, 0.6846666932106018, 0.6869999766349792, 0.687666654586792, 0.6883333325386047, 0.6933333277702332, 0.6956666707992554, 0.6986666917800903, 0.6983333230018616, 0.6996666789054871, 0.7013333439826965, 0.7016666531562805, 0.7043333053588867, 0.706333339214325, 0.7059999704360962, 0.7120000123977661, 0.7129999995231628, 0.7149999737739563, 0.718999981880188, 0.718999981880188, 0.7213333249092102, 0.7239999771118164, 0.7233333587646484, 0.7226666808128357, 0.7243333458900452, 0.7273333072662354, 0.7323333621025085, 0.7356666922569275, 0.7336666584014893, 0.7353333234786987, 0.7393333315849304, 0.734000027179718, 0.734000027179718, 0.7390000224113464, 0.7406666874885559, 0.7390000224113464, 0.7396666407585144, 0.7440000176429749, 0.746666669845581, 0.7419999837875366, 0.7429999709129333, 0.746999979019165, 0.7476666569709778, 0.7526666522026062, 0.75, 0.7509999871253967, 0.7536666393280029, 0.7543333172798157, 0.753333330154419, 0.7549999952316284, 0.75, 0.7506666779518127, 0.7566666603088379, 0.753000020980835, 0.7603333592414856, 0.7566666603088379, 0.7593333125114441, 0.7596666812896729, 0.7620000243186951, 0.7613333463668823, 0.7646666765213013, 0.7643333077430725, 0.7586666941642761, 0.7649999856948853, 0.765333354473114, 0.7649999856948853, 0.7663333415985107, 0.7666666507720947, 0.765666663646698, 0.7649999856948853, 0.7646666765213013, 0.765666663646698, 0.765333354473114]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [54, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 6, 2, 9, 5, 3, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 3, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [63, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.675428569316864, "mapping_values": [1, 4, 4, 2, 2, 1, 67, 67, 43, 24, 6, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 62, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad))))))))))), grad)))), grad)), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(grad), tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))))))))))))), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), alpha)))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2684176732457435, 1.983118735473264, 1.4307180247554343, 1.1012002477210039, 0.9237487609076888, 0.8458233061341908, 0.8096701784251058, 0.7644455602943401, 0.7449848840123611, 0.7231984074876892, 0.6867709641033994, 0.6615155188399, 0.6434238704755212, 0.6144048618350787, 0.5956410679283741, 0.5901198365968279, 0.560577575454402, 0.5538086586341158, 0.539978649417533, 0.5265762962606589, 0.526193593613082, 0.5051030942619343, 0.5006123614616681, 0.48785272372901056, 0.5079397604827947, 0.4813995811295563, 0.4709966144643959, 0.47461905377951313, 0.4752168689405819, 0.4489814105987738, 0.4433532587375938, 0.4368266349006653, 0.43202452857764234, 0.4098425575093728, 0.4165619210780588, 0.41863468176794877, 0.3867966817346751, 0.3856434116250473, 0.38086142596346967, 0.3818566589354839, 0.38618659041797354, 0.3694972867317613, 0.36800866030336704, 0.3555460686515808, 0.358541815847123, 0.36601390950101287, 0.35518534021559584, 0.3466389686432119], "accuracy": [0.1732928305864334, 0.3875313699245453, 0.5077268481254578, 0.6239598393440247, 0.659490168094635, 0.6826046705245972, 0.6942279934883118, 0.6993792057037354, 0.715889573097229, 0.7195879220962524, 0.737947404384613, 0.7452120184898376, 0.7548540234565735, 0.770439863204956, 0.7734777331352234, 0.7824593782424927, 0.7903843522071838, 0.7841764688491821, 0.793422281742096, 0.8037247657775879, 0.8037247657775879, 0.805177628993988, 0.8121780753135681, 0.8175934553146362, 0.8112534880638123, 0.8175934553146362, 0.8187822103500366, 0.8204993009567261, 0.8186501264572144, 0.832650899887085, 0.8341038227081299, 0.8343679904937744, 0.8400475382804871, 0.8450667262077332, 0.8409721255302429, 0.8354246616363525, 0.8541803956031799, 0.8514066934585571, 0.8557654023170471, 0.8536521196365356, 0.8607845902442932, 0.8607845902442932, 0.8584070801734924, 0.86553955078125, 0.8643507957458496, 0.8627657890319824, 0.8634262084960938, 0.8646149635314941], "val_loss": [1.859229224068778, 1.2391415323529924, 0.7703297138214111, 0.674114636012486, 0.653583151953561, 0.6018089396612984, 0.5751255750656128, 0.5845536504473005, 0.5537100519452777, 0.5328382253646851, 0.5057234423501151, 0.4955109528132847, 0.49799362250736784, 0.4813659702028547, 0.4662048305783953, 0.45399722031184603, 0.4463332039969308, 0.42937056507383076, 0.42348616463797434, 0.42046840701784405, 0.42904638392584665, 0.40963332993643625, 0.41458979674748014, 0.40828644377844675, 0.41462479318891254, 0.3984008346285139, 0.4002487744603838, 0.39463705675942556, 0.3894680823598589, 0.4025500331606184, 0.3745315670967102, 0.37262927634375437, 0.3655477591923305, 0.3651502473013742, 0.37108129262924194, 0.3698860577174595, 0.37937773977007183, 0.37397998571395874, 0.376786402293614, 0.3855965222631182, 0.3851454683712551, 0.38171874625342234, 0.3839323009763445, 0.3877453463418143, 0.38469635588782175, 0.38059796605791363, 0.39013525417872835, 0.39922518389565603], "val_accuracy": [0.421999990940094, 0.5566666722297668, 0.67166668176651, 0.6816666722297668, 0.7116666436195374, 0.7213333249092102, 0.7316666841506958, 0.7396666407585144, 0.7453333139419556, 0.7536666393280029, 0.7683333158493042, 0.7766666412353516, 0.7739999890327454, 0.7789999842643738, 0.7926666736602783, 0.7950000166893005, 0.7903333306312561, 0.8069999814033508, 0.8066666722297668, 0.8133333325386047, 0.8059999942779541, 0.8119999766349792, 0.8146666884422302, 0.8216666579246521, 0.8233333230018616, 0.8286666870117188, 0.8230000138282776, 0.8263333439826965, 0.8363333344459534, 0.840666651725769, 0.8386666774749756, 0.843666672706604, 0.846666693687439, 0.8433333039283752, 0.8376666903495789, 0.8413333296775818, 0.8460000157356262, 0.8479999899864197, 0.8460000157356262, 0.8456666469573975, 0.8523333072662354, 0.8573333621025085, 0.8586666584014893, 0.8486666679382324, 0.8533333539962769, 0.8550000190734863, 0.8500000238418579, 0.8523333072662354]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 6, 2, 9, 6, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.12200000137090683, "mapping_values": [1, 4, 4, 2, 2, 1, 62, 62, 41, 21, 8, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad))))))))))), grad)))), grad)), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(grad), tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad)))))))))))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.612476955173731, 4.338251562071924, 7476043687368.175, NaN, NaN, NaN, NaN], "accuracy": [0.2631092369556427, 0.11953506618738174, 0.13670584559440613, 0.10447761416435242, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.032246862139021, 13.462241581508092, Infinity, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.11033333092927933, 0.10233332961797714, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 6, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 7, 7, 6, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303047053361408, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [71, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 6, 2, 9, 5, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 3, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [6.969090860948424e+29, 3.902017204905442e+31, 3.0165669544207433e+32, 1.2144155397294059e+33, 3.3982052964784234e+33, 7.269879859775269e+33, 1.5290125102431817e+34], "accuracy": [0.11147800832986832, 0.11306300014257431, 0.11662924289703369, 0.11332716792821884, 0.11517632752656937, 0.1138555034995079, 0.11438383162021637], "val_loss": [5.954155507584826e+30, 1.1093976510632975e+32, 5.874240136369512e+32, 1.897478459319059e+33, 4.692682474082683e+33, 9.814054741341042e+33, 1.8292256875020928e+34], "val_accuracy": [0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.09966666996479034, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [83, 24, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0684189647436142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [9, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [5, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301614308763473, 2.304730121060574, 2.306475050272077, 2.309074464207706, 2.312465487218032, 2.3176071895757575, 2.3248806136426925, 2.3281635527975446, 2.3387221908997615, 2.35355481432571, 2.4079674885903115, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09140139818191528, 0.08757099509239197, 0.08321225643157959, 0.08519349992275238, 0.08109892904758453, 0.07264561951160431, 0.07832518965005875, 0.07489103078842163, 0.07621186226606369, 0.07766477018594742, 0.08558975160121918, 0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9726448059082031, 1.9739766120910645, 1.9755208151681083, 1.9777680805751257, 1.9802778107779366, 1.9833570889064245, 1.9871878623962402, 1.9917877061026437, 2.0000709806169783, 2.018273557935442, 2.3219894681658064, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.028333334252238274, 0.02199999988079071, 0.019999999552965164, 0.021666666492819786, 0.024000000208616257, 0.03266666829586029, 0.05233333259820938, 0.06700000166893005, 0.08900000154972076, 0.09733333438634872, 0.09733333438634872, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [70, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 6, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1190462141.5435321, 23557949308.263638, 109384081768.31383, 300876634308.6578, 648644812071.7982, 1190486904410.5518], "accuracy": [0.10381719470024109, 0.09787346422672272, 0.0944393053650856, 0.09694888442754745, 0.09919429570436478, 0.1010434553027153], "val_loss": [4574804699.428572, 36587524681.14286, 123470582345.14285, 292656297691.4286, 571577279634.2858, 987662647296.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 2, 2, 6, 0, 9, 8, 6, 5, 2, 0, 6, 8, 2, 0, 4, 2, 2, 2, 6, 4, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 4, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2, 5, 5], [2, 0, 3, 1, 2, 3, 0, 0, 2, 2, 2, 3, 3, 3, 3, 2, 4, 3, 3, 1, 2, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 73, 34, 66, 14, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 74, 74, 47, 27, 6, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(tf.math.add(beta, alpha), beta), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, beta)), tf.math.add(beta, grad)))), tf.math.multiply(grad, grad)))), grad)))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.add(beta, beta)), tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.negative(grad)), tf.math.add(beta, alpha)))))), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))), alpha)), alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), alpha)))))), tf.math.add(beta, tf.math.square(grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06855104863643646, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 9, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 6, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 7, 7, 5, 2, 2, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [554.9397541777238, 9568.954544117769, 43139.29958373233, 117275.80956528199, 251238.21636425174, 459348.74314819707], "accuracy": [0.10421344637870789, 0.09787346422672272, 0.0944393053650856, 0.09721305221319199, 0.09932637959718704, 0.10091137140989304], "val_loss": [1946.927455357143, 14582.66294642857, 48339.583705357145, 113630.24776785714, 220868.1830357143, 380467.8839285714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 5, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [97, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 3, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3010654716191903, 2.3024916247039218, 2.302676348559624, 2.302534066863961, 2.302672388783189, 2.303298256447948], "accuracy": [0.09232597798109055, 0.09113723784685135, 0.09087307006120682, 0.09034473448991776, 0.0940430611371994, 0.0886276587843895], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 6, 2, 9, 8, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [2, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 5, 5, 3, 2, 1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3010654716191903, 2.3024916247039218, 2.302676348559624, 2.302534066863961, 2.302672388783189, 2.303298256447948], "accuracy": [0.09232597798109055, 0.09113723784685135, 0.09087307006120682, 0.09034473448991776, 0.0940430611371994, 0.0886276587843895], "val_loss": [1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176, 1.971440383366176], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [47, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 2, 2, 6, 0, 9, 1, 6, 5, 6, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 3, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 0, 5, 4, 2, 1, 6, 0, 2], [2, 0, 3, 1, 0, 3, 3, 0, 2, 3, 3, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 81, 34, 28, 2, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.03914285823702812, "mapping_values": [1, 4, 4, 2, 2, 1, 42, 42, 26, 16, 5, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), grad)))), tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), beta)))), tf.math.add(beta, grad))))))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(grad, grad)))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3012513723891126, 2.303208993930134, 2.3037876297123536, 2.304347583000859, 2.305185215584338, 2.306900468720988], "accuracy": [0.09140139818191528, 0.08994849026203156, 0.08955223858356476, 0.08889182657003403, 0.08955223858356476, 0.08440100401639938], "val_loss": [1.9718455587114607, 1.9722156524658203, 1.9726169449942452, 1.9731719834463937, 1.9737434387207031, 1.9744315147399902], "val_accuracy": [0.03133333474397659, 0.030666666105389595, 0.02866666577756405, 0.024666666984558105, 0.02266666665673256, 0.020666666328907013]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 2, 0, 1, 1, 2, 2, 2, 0, 2, 3, 3, 0], [9, 66, 89, 50, 85, 46], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 6, 2, 8, 5, 9, 1, 6, 5, 2, 0, 2, 8, 2, 0, 0, 2, 2, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 1, 0, 3, 3, 0, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [94, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [9, 2, 4, 6, 6, 7, 4], [4, 4, 2], [80, 2, 82], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.03857142850756645, "mapping_values": [1, 5, 5, 3, 2, 1, 62, 62, 41, 21, 7, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad))))))))))), grad)))), grad)), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(grad), tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad)))))))))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3013115535716433, 2.303338307872062, 2.3041159801510864, 2.3045687665084036, 2.305312129531979, 2.3065602417556508], "accuracy": [0.09113723784685135, 0.08994849026203156, 0.08875974267721176, 0.08677849918603897, 0.08955223858356476, 0.08175934851169586], "val_loss": [1.971994263785226, 1.9725491659981864, 1.9731052943638392, 1.9736599240984236, 1.9742187772478377, 1.9747803551810128], "val_accuracy": [0.03200000151991844, 0.02866666577756405, 0.0273333340883255, 0.024666666984558105, 0.022333333268761635, 0.021666666492819786]}}]