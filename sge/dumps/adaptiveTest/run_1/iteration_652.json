[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 6, 6, 8, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 2, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8125714063644409, "mapping_values": [1, 4, 4, 3, 1, 1, 16, 16, 9, 7, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, beta)), tf.math.add(beta, beta))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.086729809309214, 1.363786324156022, 1.0858161422192634, 0.9544298251338718, 0.8804082466296044, 0.7885904937781804, 0.7675773343389942, 0.746822973236731, 0.690075268441219, 0.6936822093835265, 0.6890211509061669, 0.6566914501695301, 0.6558396448280991, 0.6261376432691661, 0.636454542346713, 0.6036640595545811, 0.6263458369162734, 0.600205897544873, 0.5885516439430812, 0.5819539875244782, 0.5708082325312723, 0.5580634585287845, 0.5678014279577033, 0.5560890422001522, 0.5416126817901766, 0.5337209007082173], "accuracy": [0.31805574893951416, 0.5266147255897522, 0.617751955986023, 0.6436402201652527, 0.6725663542747498, 0.7045304179191589, 0.7154933214187622, 0.7250033020973206, 0.7485140562057495, 0.7388719916343689, 0.7374191284179688, 0.7541936039924622, 0.7510236501693726, 0.7693831920623779, 0.7577598690986633, 0.7778365015983582, 0.7581561207771301, 0.7746664881706238, 0.7823272943496704, 0.7777044177055359, 0.7833839654922485, 0.7935543656349182, 0.7832518815994263, 0.796328067779541, 0.7942147850990295, 0.7996301651000977], "val_loss": [1.1923099245343889, 0.8577912534986224, 0.8022529057094029, 0.6959327799933297, 0.6038944040025983, 0.6111465522221157, 0.552361011505127, 0.5278853348323277, 0.5351071868624006, 0.5291436229433332, 0.5359615768705096, 0.5028879472187587, 0.4959937163761684, 0.49911301476614817, 0.4831465653010777, 0.49198884623391287, 0.48539594241550993, 0.4945629153932844, 0.4530899354389736, 0.4510244812284197, 0.4437886135918753, 0.4566276414053781, 0.4353379692350115, 0.45213449001312256, 0.45505412987300325, 0.44492157867976595], "val_accuracy": [0.6293333172798157, 0.6610000133514404, 0.6389999985694885, 0.6976666450500488, 0.7506666779518127, 0.7276666760444641, 0.765666663646698, 0.7753333449363708, 0.7616666555404663, 0.7756666541099548, 0.7573333382606506, 0.7826666831970215, 0.7836666703224182, 0.7860000133514404, 0.7886666655540466, 0.7803333401679993, 0.7876666784286499, 0.7706666588783264, 0.8059999942779541, 0.8053333163261414, 0.8183333277702332, 0.8023333549499512, 0.812333345413208, 0.7983333468437195, 0.7986666560173035, 0.8103333115577698]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 2, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [10, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8074285984039307, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 6, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.953381315119719, 1.2965619593657964, 1.130418345314432, 0.8477953694531505, 0.812051520190455, 0.7300640029000914, 0.6946476639348439, 0.6637015061497515, 0.6292951960510754, 0.6013654969891442, 0.596156066797035, 0.5714576125318159, 0.5673123666906653, 0.528431039665196, 0.542647101025398, 0.5103941716853071, 0.510078226940554, 0.5229175282963798, 0.493666684016607, 0.4700873534102497, 0.469353089357301, 0.44212992885928065, 0.4556321146394976, 0.44531051459297954, 0.4128880844360581, 0.4198963418101055, 0.42237689951391677, 0.4094918270735236], "accuracy": [0.3292827904224396, 0.5345396995544434, 0.6083740592002869, 0.6859067678451538, 0.6917183995246887, 0.7226257920265198, 0.7412495017051697, 0.7520803213119507, 0.7626469135284424, 0.7670056819915771, 0.7712323069572449, 0.7771760821342468, 0.7849689722061157, 0.7991018295288086, 0.7967243194580078, 0.8082155585289001, 0.8063663840293884, 0.7981772422790527, 0.8105930685997009, 0.8224804997444153, 0.8202351331710815, 0.8364813327789307, 0.8301413059234619, 0.8368775844573975, 0.847840428352356, 0.8442742228507996, 0.8372738361358643, 0.8446704745292664], "val_loss": [1.0101871831076485, 1.1205957276480538, 0.8275323595319476, 0.6231651646750314, 0.6652005229677472, 0.5914996521813529, 0.5752048492431641, 0.4973886864525931, 0.49477274077279226, 0.4909022194998605, 0.47413621629987446, 0.482290404183524, 0.43266486270087107, 0.5107201167515346, 0.4267376320702689, 0.44132384232112337, 0.4210714953286307, 0.4545342581612723, 0.40330534321921213, 0.372907817363739, 0.38280804668154034, 0.3831989509718759, 0.3691149524280003, 0.3796552504811968, 0.3927018216678074, 0.3815651706286839, 0.36943815435682026, 0.39107256276266916], "val_accuracy": [0.5666666626930237, 0.5363333225250244, 0.6570000052452087, 0.7210000157356262, 0.7336666584014893, 0.7450000047683716, 0.7273333072662354, 0.781000018119812, 0.7806666493415833, 0.7820000052452087, 0.7903333306312561, 0.7926666736602783, 0.8090000152587891, 0.762666642665863, 0.815666675567627, 0.8053333163261414, 0.8186666369438171, 0.7853333353996277, 0.8216666579246521, 0.8456666469573975, 0.8396666646003723, 0.8389999866485596, 0.8460000157356262, 0.8383333086967468, 0.8296666741371155, 0.8356666564941406, 0.8366666436195374, 0.8383333086967468]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 5, 6, 6, 6, 8, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 2, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.803428590297699, "mapping_values": [1, 4, 4, 3, 1, 1, 16, 16, 9, 7, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, beta)), tf.math.add(beta, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.0867176830115146, 1.3645520159723012, 1.0886064141480962, 0.9513096599027134, 0.8780786442388208, 0.7891350871756754, 0.7682741585897023, 0.7440865752309966, 0.6894083219339127, 0.6945280215255557, 0.6925897929552225, 0.6521255310421622, 0.6581941641096615, 0.6301976584440304, 0.628731269389883, 0.611697554391499, 0.5964965610897158, 0.6060143662024924, 0.5988160141659703, 0.5846847540210219, 0.5722081065965193, 0.5627288406535446, 0.5685024267694088, 0.5599800403469888], "accuracy": [0.3179236650466919, 0.5259543061256409, 0.6141856908798218, 0.6456214785575867, 0.6719059348106384, 0.7065116763114929, 0.7152291536331177, 0.7276449799537659, 0.7458723783493042, 0.7401928305625916, 0.7359662055969238, 0.7567031979560852, 0.7520803213119507, 0.7638356685638428, 0.7677981853485107, 0.7692511081695557, 0.7774402499198914, 0.7790252566337585, 0.7786290049552917, 0.7810064554214478, 0.7868181467056274, 0.7907806038856506, 0.7848368883132935, 0.7948752045631409], "val_loss": [1.1921545778002058, 0.851503849029541, 0.7939719642911639, 0.6927262204033988, 0.6043744938714164, 0.6133243356432233, 0.5547139985220773, 0.5278061628341675, 0.5333636147635323, 0.5236950601850238, 0.5418658597128732, 0.5015035356794085, 0.49419847556522917, 0.5228978225163051, 0.4957990986960275, 0.4884601831436157, 0.4726116827556065, 0.5294716869081769, 0.4498522962842669, 0.44916447571345736, 0.44954832962581087, 0.46172637598855154, 0.4405148710523333, 0.4532714400972639], "val_accuracy": [0.628000020980835, 0.6629999876022339, 0.6453333497047424, 0.6986666917800903, 0.75, 0.7233333587646484, 0.7620000243186951, 0.7753333449363708, 0.7646666765213013, 0.7763333320617676, 0.753333330154419, 0.777999997138977, 0.7839999794960022, 0.7609999775886536, 0.777999997138977, 0.7863333225250244, 0.7919999957084656, 0.7556666731834412, 0.8136666417121887, 0.8080000281333923, 0.8133333325386047, 0.7946666479110718, 0.8063333630561829, 0.7983333468437195]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 4, 6, 6, 6, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 3, 2, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [97, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8028571605682373, "mapping_values": [1, 4, 4, 3, 1, 1, 17, 17, 10, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.add(beta, beta))), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9763927136933752, 1.3114037101200433, 1.4916829428164526, 1.113404652107472, 0.7924371135863079, 0.7620735581934239, 0.7154751031264307, 0.6501381611150128, 0.6476273249956311, 0.6048679353066282, 0.6054155892857219, 0.5668244508783091, 0.5669028864418905, 0.5375103213216776, 0.5393452128840003, 0.5141427604482316, 0.48786490337644917, 0.5273840414644815, 0.5037082958852831, 0.47454462945264453, 0.46445746900713786, 0.44871735277980185, 0.43623206533886233, 0.43299952133252023, 0.4266242472376916, 0.41474536758813213, 0.4082614867568504, 0.39851058148641816, 0.40255283450863033, 0.3865557128624783, 0.37064455203754304, 0.3799736551313573, 0.3607468986555318, 0.365589581810803, 0.38060041130762123, 0.34740669341009245, 0.3473048783713769, 0.35372128656369944, 0.32608649313347515, 0.336040882469247, 0.3217246252839214, 0.30236626054396354, 0.3155632322616486, 0.3063843560618747, 0.3127708357787482, 0.29553729418151964, 0.3064134525797701, 0.3127024732229968, 0.2862836871723756, 0.26346478376721094, 0.2881269750145086, 0.28153073745963597, 0.2733595132111338, 0.25811532168907336], "accuracy": [0.3238673806190491, 0.5337471961975098, 0.5234447121620178, 0.5935807824134827, 0.7017567157745361, 0.7067758440971375, 0.7363624572753906, 0.7561748623847961, 0.7547219395637512, 0.763967752456665, 0.7684586048126221, 0.7864218950271606, 0.7839123010635376, 0.7988376617431641, 0.7960638999938965, 0.8062343001365662, 0.8232730031013489, 0.8030643463134766, 0.8105930685997009, 0.8207634687423706, 0.8273676037788391, 0.83119797706604, 0.839519202709198, 0.8413683772087097, 0.844010055065155, 0.845859169960022, 0.8485008478164673, 0.8512746095657349, 0.8498216867446899, 0.8589354157447815, 0.8609166741371155, 0.8588033318519592, 0.86553955078125, 0.8681812286376953, 0.8580108284950256, 0.8732003569602966, 0.8697662353515625, 0.8660678863525391, 0.8796724081039429, 0.8725399374961853, 0.8812574148178101, 0.8860124349594116, 0.8841632604598999, 0.8844274282455444, 0.8840311765670776, 0.8893144726753235, 0.8837670087814331, 0.8823140859603882, 0.8932769894599915, 0.9030511379241943, 0.8920882344245911, 0.8945978283882141, 0.8975036144256592, 0.9017302989959717], "val_loss": [1.0165022781917028, 1.2180134228297643, 0.8453730344772339, 0.6073226928710938, 0.6993983813694545, 0.5674419232777187, 0.5083608457020351, 0.49999732630593435, 0.5037317957196917, 0.4976701055254255, 0.47519116742270334, 0.4913484198706491, 0.45754802227020264, 0.4928609643663679, 0.43095414127622333, 0.42786143507276264, 0.43962367943355013, 0.49415855748312815, 0.3947350467954363, 0.38268087591443745, 0.3892200674329485, 0.3729262522288731, 0.38002943992614746, 0.3685422880308969, 0.3842054179736546, 0.37999405179704937, 0.38445790324892315, 0.3920863015311105, 0.35260385274887085, 0.33862470729010447, 0.3480276124817984, 0.3419068455696106, 0.3376069154058184, 0.36612872566495624, 0.3342823641640799, 0.33985860858644756, 0.38699592862810406, 0.345581122807094, 0.3977575642721994, 0.32637453079223633, 0.32829703603472027, 0.3425473996571132, 0.3255010502679007, 0.3442421555519104, 0.3490904229027884, 0.3356171761240278, 0.32791037218911306, 0.32304298877716064, 0.324902560029711, 0.32440614700317383, 0.3698919841221401, 0.32540432044437956, 0.32274095501218525, 0.3185091529573713], "val_accuracy": [0.5586666464805603, 0.5103333592414856, 0.6223333477973938, 0.7296666502952576, 0.6850000023841858, 0.7603333592414856, 0.7739999890327454, 0.7860000133514404, 0.7676666378974915, 0.7739999890327454, 0.7933333516120911, 0.7789999842643738, 0.7926666736602783, 0.7773333191871643, 0.809333324432373, 0.8149999976158142, 0.8046666383743286, 0.7799999713897705, 0.8276666402816772, 0.8403333425521851, 0.8393333554267883, 0.8443333506584167, 0.8343333601951599, 0.846666693687439, 0.8299999833106995, 0.8389999866485596, 0.8333333134651184, 0.8336666822433472, 0.8569999933242798, 0.8573333621025085, 0.8560000061988831, 0.8569999933242798, 0.862333357334137, 0.8389999866485596, 0.8646666407585144, 0.859666645526886, 0.8326666951179504, 0.8603333234786987, 0.8453333377838135, 0.8656666874885559, 0.8679999709129333, 0.8613333106040955, 0.862666666507721, 0.859000027179718, 0.8536666631698608, 0.8690000176429749, 0.8643333315849304, 0.8656666874885559, 0.8730000257492065, 0.8679999709129333, 0.8476666808128357, 0.8676666617393494, 0.8730000257492065, 0.8706666827201843]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 5, 6, 9, 5, 4, 9, 1, 8, 9, 0, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 2, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 0, 0, 2, 2, 0], [53, 97, 13, 96, 41]], "fitness": -0.795714259147644, "mapping_values": [1, 4, 4, 3, 1, 1, 10, 10, 8, 2, 2, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha)", "other_info": {"loss": [2.228932318922362, 1.8058646023470286, 1.2723167748609319, 1.0698124972064937, 0.9573512423496677, 0.9019517515471205, 0.8346143252876976, 0.8228159397584636, 0.7746570256439419, 0.7555069021182903, 0.7392412493131605, 0.7164400549392186, 0.7013214575285452, 0.668770720764725, 0.6641413223836338, 0.6580040635623007, 0.6562650160877035, 0.6521236951624193, 0.6364862315564376, 0.6219345317493419, 0.619248130861259, 0.6272738192217178, 0.6102978212171148, 0.6026278997865792, 0.5934422137305532], "accuracy": [0.23973055183887482, 0.46044114232063293, 0.5647866725921631, 0.6156386137008667, 0.6491876840591431, 0.669792652130127, 0.6917183995246887, 0.6936996579170227, 0.713908314704895, 0.7145687341690063, 0.7202483415603638, 0.7345132827758789, 0.735041618347168, 0.7465327978134155, 0.7481178045272827, 0.7573636174201965, 0.7589486241340637, 0.7544577717781067, 0.7604015469551086, 0.7666094303131104, 0.7693831920623779, 0.7633073329925537, 0.7683265209197998, 0.7718927264213562, 0.7788931727409363], "val_loss": [1.7508304459708077, 1.1203774043491908, 0.8236404657363892, 0.7372133561543056, 0.6736899784633091, 0.6267790624073574, 0.6180179289409092, 0.5909366437367031, 0.5530251605170113, 0.5420339448111398, 0.5789168562207904, 0.5263155358178275, 0.5136064461299351, 0.5210394178118024, 0.5180858033043998, 0.516787954739162, 0.4889454330716814, 0.5127122742789132, 0.49202983719961985, 0.47533106803894043, 0.487999473299299, 0.49485511439187185, 0.4874243906566075, 0.519651974950518, 0.48538313593183247], "val_accuracy": [0.5239999890327454, 0.6330000162124634, 0.6896666884422302, 0.6936666369438171, 0.718999981880188, 0.7269999980926514, 0.7289999723434448, 0.734333336353302, 0.7673333287239075, 0.7599999904632568, 0.737666666507721, 0.7799999713897705, 0.7846666574478149, 0.7693333625793457, 0.7760000228881836, 0.7756666541099548, 0.7889999747276306, 0.7710000276565552, 0.7906666398048401, 0.8003333210945129, 0.796999990940094, 0.796999990940094, 0.777999997138977, 0.7673333287239075, 0.7929999828338623]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 6, 6, 4, 1, 5, 8, 6, 2, 1, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 1, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7951428294181824, "mapping_values": [1, 4, 4, 3, 1, 1, 15, 15, 8, 7, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), grad), grad), grad), tf.math.add(beta, alpha))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2289323233940883, 1.8058257875126336, 1.272415502684511, 1.0724487626210903, 0.9570902675417798, 0.9019400062987424, 0.8361778645121174, 0.8224986378527147, 0.7753010429112257, 0.7548629747185299, 0.7403311310128103, 0.71553893357598, 0.7020698234688856, 0.6693245180373367, 0.6624804125911036, 0.6595329091360288, 0.6622092817610974, 0.6509860443354062, 0.6388539093801326, 0.6219150047370896, 0.618291786003264, 0.6259478892254682, 0.609420499017824, 0.6026832669591544, 0.5936135306428877], "accuracy": [0.23973055183887482, 0.46030908823013306, 0.5650508403778076, 0.6147140264511108, 0.6481310129165649, 0.6693964004516602, 0.691850483417511, 0.6940959095954895, 0.7137762308120728, 0.7132478952407837, 0.7205125093460083, 0.7323999404907227, 0.733588695526123, 0.7460044622421265, 0.7494386434555054, 0.754589855670929, 0.7536653280258179, 0.7526086568832397, 0.7593448758125305, 0.7684586048126221, 0.7692511081695557, 0.7640998363494873, 0.7697794437408447, 0.7717606425285339, 0.7781006693840027], "val_loss": [1.750821931021554, 1.1205546855926514, 0.8256101437977382, 0.7388535737991333, 0.6699367931910923, 0.6281848805291312, 0.6170732293810163, 0.5897569145475116, 0.5544796500887189, 0.5420211894171578, 0.5770151104245868, 0.5264908586229596, 0.5129752499716622, 0.5188619920185634, 0.511768272944859, 0.5279705694743565, 0.4911914212363107, 0.5164075068065098, 0.4910621813365391, 0.47587667192731586, 0.48933662687029156, 0.4939817019871303, 0.48644990580422537, 0.5180333171572004, 0.484640257699149], "val_accuracy": [0.5236666798591614, 0.6333333253860474, 0.6883333325386047, 0.6890000104904175, 0.7213333249092102, 0.7229999899864197, 0.7289999723434448, 0.7360000014305115, 0.765999972820282, 0.7616666555404663, 0.7383333444595337, 0.7806666493415833, 0.7853333353996277, 0.7723333239555359, 0.7876666784286499, 0.7586666941642761, 0.7870000004768372, 0.7663333415985107, 0.7933333516120911, 0.8006666898727417, 0.7953333258628845, 0.7963333129882812, 0.7820000052452087, 0.7713333368301392, 0.7919999957084656]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [32, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 6, 6, 1, 1, 1, 5, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 0, 3, 0, 2, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [10, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 0], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 1, 0, 2, 2], [48, 97, 13, 96, 41]], "fitness": -0.7948571443557739, "mapping_values": [1, 4, 4, 3, 1, 1, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), beta)), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, alpha)", "other_info": {"loss": [2.2771892526508433, 2.2073446852482856, 2.077164226849916, 1.8451725332382065, 1.5659888672271283, 1.3512027289936366, 1.208745573269551, 1.1058450919478686, 1.0265356098514395, 0.986515337402763, 0.9402989702548459, 0.9066091987907516, 0.8850996038224388, 0.851872435107034, 0.8326450771328764, 0.8213607040000803, 0.8035962811912669, 0.7927350010051231, 0.7764612149883648, 0.7664228972348208, 0.7529878002730311, 0.7500456116454886, 0.7305641529456484, 0.7359062584793374, 0.7119670488956881, 0.7166923020872001, 0.709117280131617, 0.7001890978950472, 0.6910698686403731, 0.6806701484326091, 0.6767060726924328, 0.6779588966510709, 0.6714058391028518, 0.6605698990075501, 0.6615497764421886, 0.6558518777465493, 0.652306252624286, 0.6461677140075422, 0.6461294948417025, 0.6451741523037906, 0.6325434522858039, 0.6352772846465664, 0.6339738386308102, 0.6249229046080044, 0.6156269386617373, 0.6184545666188014, 0.6135541358486599, 0.6196314785238334, 0.6067350540477933, 0.6057147122471797], "accuracy": [0.1578391194343567, 0.29903578758239746, 0.3821159601211548, 0.45779949426651, 0.49993395805358887, 0.5439175963401794, 0.5860520601272583, 0.6140536069869995, 0.6382247805595398, 0.648659348487854, 0.6630563735961914, 0.6732267737388611, 0.681547999382019, 0.6907938122749329, 0.6917183995246887, 0.7049266695976257, 0.7117950320243835, 0.7141724824905396, 0.7141724824905396, 0.7150970697402954, 0.7279091477394104, 0.7279091477394104, 0.7322678565979004, 0.7276449799537659, 0.7338528633117676, 0.7353057861328125, 0.7425703406333923, 0.7366266250610352, 0.7460044622421265, 0.7498348951339722, 0.746268630027771, 0.7515519857406616, 0.7446836829185486, 0.7564390301704407, 0.7544577717781067, 0.7572315335273743, 0.7511557340621948, 0.7582882046699524, 0.7606657147407532, 0.7613261342048645, 0.767401933670044, 0.7629110813140869, 0.76106196641922, 0.7666094303131104, 0.7726852297782898, 0.7713643908500671, 0.7696473598480225, 0.7700436115264893, 0.7738739848136902, 0.7754589915275574], "val_loss": [1.9147351128714425, 1.824479103088379, 1.6491949217660087, 1.3786134379250663, 1.1149712630680628, 0.9398885454450335, 0.8368663958140782, 0.7663489409855434, 0.7162778207233974, 0.6862748350415911, 0.6593325308391026, 0.6380866595676967, 0.622900230543954, 0.6111772741590228, 0.5979940720966884, 0.5890628099441528, 0.5734241349356515, 0.5680187770298549, 0.5684775965554374, 0.5491907255990165, 0.5456456797463554, 0.542489733014788, 0.5372847488948277, 0.5410834380558559, 0.5258085557392665, 0.5297552517482212, 0.5200699738093785, 0.514651724270412, 0.5120174203600202, 0.5057014397212437, 0.5027521678379604, 0.5023552009037563, 0.4989186184746878, 0.4932571308953421, 0.4961019924708775, 0.4944054399217878, 0.4870858703340803, 0.4851276193346296, 0.4834581102643694, 0.48633384704589844, 0.4803329365594046, 0.48159728731427875, 0.4750136307307652, 0.47475618975503103, 0.47474738529750277, 0.46953909737723215, 0.4765675238200596, 0.46659919193812777, 0.465605412210737, 0.46949642045157297], "val_accuracy": [0.40966665744781494, 0.4873333275318146, 0.5590000152587891, 0.578000009059906, 0.628333330154419, 0.6623333096504211, 0.6956666707992554, 0.70333331823349, 0.7183333039283752, 0.7256666421890259, 0.7300000190734863, 0.7436666488647461, 0.7433333396911621, 0.7383333444595337, 0.7483333349227905, 0.7586666941642761, 0.753000020980835, 0.7549999952316284, 0.7526666522026062, 0.7646666765213013, 0.7703333497047424, 0.7756666541099548, 0.7673333287239075, 0.7683333158493042, 0.7803333401679993, 0.7786666750907898, 0.768666684627533, 0.7793333530426025, 0.777999997138977, 0.7826666831970215, 0.7873333096504211, 0.7866666913032532, 0.7946666479110718, 0.7963333129882812, 0.7863333225250244, 0.7860000133514404, 0.7963333129882812, 0.7883333563804626, 0.79666668176651, 0.7889999747276306, 0.796999990940094, 0.7923333048820496, 0.8033333420753479, 0.8036666512489319, 0.8083333373069763, 0.8023333549499512, 0.8053333163261414, 0.8076666593551636, 0.8036666512489319, 0.8023333549499512]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [22, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 6, 6, 8, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 2, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7428571581840515, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), beta)), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2982722578299373, 2.291279685243781, 2.2833102217061945, 2.2732643862253075, 2.266058913657788, 2.2586234433067442, 2.247955217180062, 2.2396537030708394, 2.228460778051348, 2.2170957429392337, 2.205303385682535, 2.1902807687551054, 2.17658486225822, 2.1611605303052266, 2.1420751968946092, 2.1251966076567346, 2.1016711251547684, 2.076266655848247, 2.052239278178126, 2.024127297728305, 1.9928687670447838, 1.9596414505577264, 1.9215832360747185, 1.8873959871063364, 1.847922710521488, 1.8155810506730237, 1.7821631721926876, 1.7307199135023164, 1.6910418861058127, 1.6552771576454517, 1.6147696345064382, 1.5753978965241817, 1.5371983072241584, 1.4985084790500747, 1.4800488051800067, 1.4417131432389791, 1.4142699710854514, 1.3859294768353463, 1.356758539498112, 1.340003359319354, 1.310876232883981, 1.299430099208798, 1.2831954794348255, 1.2445365099969274, 1.2326170575459714, 1.21507357253595, 1.1973995271218436, 1.1833098773486452, 1.1647570236184892, 1.168816448801056, 1.1559073106881381, 1.1367047152199907, 1.107982782120277, 1.1100710419269522, 1.0899114801489744, 1.0779790703205778, 1.069292448908819, 1.0639177246683262, 1.0504503471582731, 1.0395147513877194, 1.0281205138888074, 1.0264124962096641, 1.0243368791378153, 1.0182879964956724, 0.9980154086916501, 0.9957652938143925, 0.9807255858553714, 0.9827508557946565, 0.9884978028619766, 0.9804246834854582, 0.9680751083454893, 0.9487510376271948, 0.9515213874022187, 0.9491759925517802, 0.939157405455099, 0.9406422813019623, 0.929084783028051, 0.9249060949345842, 0.9340588099228125, 0.9230444568684545, 0.9081658554225156, 0.9075774746154671, 0.9035969162031392, 0.8987414141010536, 0.8947111162779086, 0.8954661623865716, 0.8850563977136588, 0.8853141857632683, 0.8781923224755629, 0.8803157249950005, 0.8713210552060893, 0.8691678034819947, 0.8680654570033223, 0.8572813067627054, 0.8607945306630828, 0.8531546101137443, 0.8533834890525072, 0.8538397459573812, 0.8453584489742401, 0.840316790796589], "accuracy": [0.10011887550354004, 0.12032756209373474, 0.14172500371932983, 0.16959451138973236, 0.1868973672389984, 0.2036719024181366, 0.23325848579406738, 0.24976885318756104, 0.2666754722595215, 0.28886541724205017, 0.3031303584575653, 0.31779158115386963, 0.33205652236938477, 0.34064191579818726, 0.35860520601272583, 0.3629639446735382, 0.3751155734062195, 0.3932109475135803, 0.3955884277820587, 0.40945714712142944, 0.4103817343711853, 0.42147669196128845, 0.43891164660453796, 0.43785497546195984, 0.4525161683559418, 0.45370492339134216, 0.4581957459449768, 0.4707436263561249, 0.4826310873031616, 0.48368775844573975, 0.49148064851760864, 0.5048210024833679, 0.511821448802948, 0.5196143388748169, 0.5260863900184631, 0.5301809310913086, 0.5322942733764648, 0.5414080023765564, 0.5514463186264038, 0.5563333630561829, 0.559899628162384, 0.5575221180915833, 0.5639941692352295, 0.5820895433425903, 0.5844670534133911, 0.5861841440200806, 0.5879011750221252, 0.59225994348526, 0.5967507362365723, 0.59225994348526, 0.5962224006652832, 0.6033549308776855, 0.611411988735199, 0.6160348653793335, 0.6155065298080444, 0.6238277554512024, 0.6255448460578918, 0.6264694333076477, 0.6289790272712708, 0.6357152462005615, 0.6367719173431396, 0.6363756656646729, 0.6387531161308289, 0.6416589617729187, 0.646149754524231, 0.6476026773452759, 0.6560559868812561, 0.6560559868812561, 0.643772304058075, 0.6560559868812561, 0.6583014130592346, 0.6645092964172363, 0.657508909702301, 0.6649055480957031, 0.6656980514526367, 0.6654338836669922, 0.6686038970947266, 0.6711134314537048, 0.6645092964172363, 0.6664905548095703, 0.6762647032737732, 0.6715096831321716, 0.6740192770957947, 0.6798309087753296, 0.6864351034164429, 0.6753401160240173, 0.6800950765609741, 0.6831330060958862, 0.685510516166687, 0.6777176260948181, 0.6814159154891968, 0.6870955228805542, 0.6843217611312866, 0.6892088055610657, 0.6839255094528198, 0.6890767216682434, 0.6910579800605774, 0.6872276067733765, 0.6956809163093567, 0.6942279934883118], "val_loss": [1.9634993416922433, 1.9562200818743025, 1.9489498819623674, 1.9414558410644531, 1.9336536271231515, 1.9254347937447684, 1.9167109216962541, 1.9073867797851562, 1.8972185679844447, 1.8861801964896066, 1.8741346767970495, 1.8607217243739538, 1.8460096631731306, 1.8297906603131975, 1.81199734551566, 1.7925547191074915, 1.7711999756949288, 1.747689655848912, 1.7221581595284599, 1.69443941116333, 1.6646178449903215, 1.6325270789010184, 1.5978092806679862, 1.5614556244441442, 1.5237117494855608, 1.4850305148533411, 1.4461017336164201, 1.4059345041002547, 1.3657873698643275, 1.3262331145150321, 1.287245273590088, 1.24924669946943, 1.2128029891422816, 1.177499192101615, 1.1447320325034005, 1.1136344841548376, 1.084808417728969, 1.057368244443621, 1.0314785071781702, 1.0078158378601074, 0.9858369486672538, 0.9655236516680036, 0.9463636193956647, 0.9278586251395089, 0.9108533178056989, 0.8948746408735003, 0.8798501150948661, 0.8660482338496617, 0.8529695613043649, 0.8412002665655953, 0.8297162055969238, 0.8187546559742519, 0.8079698256083897, 0.7985067537852696, 0.7891466617584229, 0.7796974352427891, 0.7709524801799229, 0.7631018332072667, 0.7554706505366734, 0.748314653124128, 0.741402404648917, 0.7343492678233555, 0.7287005356379918, 0.7232837847300938, 0.7165227276938302, 0.710730927331107, 0.7061236415590558, 0.7014953068324498, 0.6974388020379203, 0.6930566855839321, 0.6887253182274955, 0.6846237693514142, 0.6804748603275844, 0.6765110492706299, 0.6723395926611764, 0.6688285555158343, 0.6652176550456456, 0.6619067532675607, 0.658679553440639, 0.6552934987204415, 0.6520627055849347, 0.6492733955383301, 0.646448152405875, 0.6439621107918876, 0.6407217638833183, 0.6378590038844517, 0.635152987071446, 0.6328282015664237, 0.6299562624522618, 0.6278339283806937, 0.6253934247153146, 0.6233587094715664, 0.620030335017613, 0.618225233895438, 0.6161654165812901, 0.6136918408530099, 0.6119733197348458, 0.6107772248131889, 0.6083319016865322, 0.606512018612453], "val_accuracy": [0.09166666865348816, 0.16766667366027832, 0.2383333295583725, 0.29766666889190674, 0.3453333377838135, 0.37599998712539673, 0.39366665482521057, 0.40533334016799927, 0.4166666567325592, 0.42933332920074463, 0.44200000166893005, 0.4506666660308838, 0.4593333303928375, 0.46833333373069763, 0.4816666543483734, 0.4869999885559082, 0.500333309173584, 0.5083333253860474, 0.5199999809265137, 0.5306666493415833, 0.5373333096504211, 0.5440000295639038, 0.550000011920929, 0.5540000200271606, 0.5590000152587891, 0.5609999895095825, 0.5676666498184204, 0.5773333311080933, 0.5856666564941406, 0.5899999737739563, 0.5979999899864197, 0.6043333411216736, 0.609000027179718, 0.612666666507721, 0.625, 0.6313333511352539, 0.6423333287239075, 0.6496666669845581, 0.6549999713897705, 0.6650000214576721, 0.668666660785675, 0.6733333468437195, 0.6759999990463257, 0.6763333082199097, 0.6796666383743286, 0.6790000200271606, 0.6836666464805603, 0.6856666803359985, 0.6893333196640015, 0.690666675567627, 0.6930000185966492, 0.6956666707992554, 0.6973333358764648, 0.6983333230018616, 0.7006666660308838, 0.7016666531562805, 0.7036666870117188, 0.7039999961853027, 0.7056666612625122, 0.7086666822433472, 0.7099999785423279, 0.7110000252723694, 0.7110000252723694, 0.7139999866485596, 0.7149999737739563, 0.7203333377838135, 0.7203333377838135, 0.7213333249092102, 0.7226666808128357, 0.7233333587646484, 0.7239999771118164, 0.7256666421890259, 0.7276666760444641, 0.7273333072662354, 0.7286666631698608, 0.7310000061988831, 0.7303333282470703, 0.731333315372467, 0.7326666712760925, 0.734000027179718, 0.7350000143051147, 0.7366666793823242, 0.7363333106040955, 0.7363333106040955, 0.7379999756813049, 0.737666666507721, 0.737666666507721, 0.7400000095367432, 0.7413333058357239, 0.7423333525657654, 0.7423333525657654, 0.7419999837875366, 0.7456666827201843, 0.7446666955947876, 0.7450000047683716, 0.7483333349227905, 0.7476666569709778, 0.7436666488647461, 0.7486666440963745, 0.7486666440963745]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 3, 4, 6, 8, 6, 2, 2, 8, 0, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 2, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [97, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.20685714483261108, "mapping_values": [1, 2, 2, 1, 1, 0, 18, 18, 10, 8, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))))))), tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.1732405643138146, 2.2673477520323573, 2.29896211639891, 2.173337395165055, 2.308485468916212, 2.3024758884478804], "accuracy": [0.19257694482803345, 0.16312244534492493, 0.11596883088350296, 0.2238806039094925, 0.10038304328918457, 0.10910051316022873], "val_loss": [1.9247143609183175, 1.9753971099853516, 1.9147929464067732, 1.9927642686026437, 1.974121161869594, 1.9708267620631628], "val_accuracy": [0.21899999678134918, 0.0949999988079071, 0.2056666612625122, 0.10199999809265137, 0.10266666859388351, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 4, 6, 6, 6, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 1, 3, 3, 2, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [97, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 4, 6, 6, 6, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 1, 3, 3, 2, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [10, 78, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 21, 21, 14, 7, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), grad)), tf.math.sqrt(tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(beta)), tf.math.add(beta, alpha))))), grad))), tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029726196541493, 2.312402829518014, 2.3796395885473576, 2.447934665007283, 2.5487135728557173, 2.787106924242174], "accuracy": [0.10553427785634995, 0.09972262382507324, 0.09998679161071777, 0.09694888442754745, 0.10196803510189056, 0.1006472036242485], "val_loss": [1.9738852637154716, 2.004864147731236, 2.061571938650949, 2.1304533822195872, 2.26553099496024, 2.58894191469465], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 9, 6, 6, 6, 8, 5, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 1, 3, 3, 2, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 4, 6, 6, 4, 5, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 0, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 19, 19, 12, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), grad), tf.math.add(beta, alpha)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 4, 2, 6, 6, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 2, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [97, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 0], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 18, 18, 9, 9, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), beta)), tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), grad)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [88, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 6, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 8, 6, 6, 6, 8, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 2, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 6, 5, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.3028467704181925, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 8, 6, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 1, 3, 3, 2, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [97, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [0, 0], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 7, 6, 0, 1, 1, 0, 1, 1, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.divide_no_nan(grad, beta)))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [4206.581405035525, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0470215305685997, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [85634155656923.42, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 6, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 5, 4, 6, 6, 6, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [97, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 2, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))))), tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), grad)), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, grad))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [29, 66, 89, 50, 85, 46], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 5, 0, 6, 5, 8, 2, 2, 3, 2, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 36, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0], [0, 7, 6, 4], [4, 1], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 3, 8, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2, 0], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 7, 4, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3031321600081505, 2.3029622974302537, 2.3030056250865325, 2.3029990544203898, 2.302859443510371, 2.302992628235087, 2.302962613316764, 2.3029522784649656], "accuracy": [0.09932637959718704, 0.09615638852119446, 0.0940430611371994, 0.09694888442754745, 0.09734513610601425, 0.09853387624025345, 0.08994849026203156, 0.0948355570435524], "val_loss": [1.9738373075212752, 1.9739563805716378, 1.973708016531808, 1.973674706050328, 1.9737418038504464, 1.9736274991716658, 1.9736088344029017, 1.9736417361668177], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.10233332961797714, 0.09566666930913925, 0.10233332961797714, 0.09799999743700027, 0.09799999743700027, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 1, 6, 6, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 2, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), beta)), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.301646875714771, 2.30266265569346, 2.3024794659862082, 2.3004401121251634, 2.301512257675878, 2.302811795694323], "accuracy": [0.09166556596755981, 0.09259014576673508, 0.09034473448991776, 0.0936468094587326, 0.09325055778026581, 0.08836349099874496], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]