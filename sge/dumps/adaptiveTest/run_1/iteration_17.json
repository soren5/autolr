[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [4, 8, 4, 3, 8, 2, 5], [0, 2, 0, 2, 3], [77, 90], [0], [1], [], [2], [], [0, 0, 1], [0, 1], [6], [4], [], [0], [9], [], [93]], "fitness": -0.10000000149011612, "tree_depth": 19, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.square(tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029110431671143, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 1, 0, 1]}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [2, 8, 1, 0], [0, 2, 0, 2, 3], [77, 90], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1], [0, 3, 5, 0, 3, 0, 5], [2], [], [1, 0, 1], [1, 0, 1], [5, 5], [5, 6], [71], [0, 1, 0, 0, 1, 1, 1, 1], [9], [], [43, 2, 63, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 13, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029110431671143, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [4, 2, 4, 8, 5, 2, 5], [0, 2, 0, 2, 3], [77, 90], [0], [1], [], [3], [], [0, 0, 1], [0, 1], [6], [4], [], [0], [9], [], [93]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 8, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029110431671143, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [4, 8, 1, 3, 4, 2, 5, 5, 2, 2], [0, 0, 1, 2, 1, 1], [86, 90], [0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [], [2], [55, 58], [0, 1, 1, 1, 0], [0, 0, 1, 1, 0], [6, 7], [0], [61], [0, 1, 0, 0, 1, 1, 1, 1], [9], [], [82, 2, 63, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 1, 0, 1], "tree_depth": 8, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029110431671143, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 4, 4, 6, 2, 2, 4, 4, 3, 6, 2, 6, 4, 2, 8, 0, 0, 6, 8, 4, 8, 9], [0, 0, 2, 0, 0, 1, 2, 2, 1, 0, 3, 3, 2, 0, 2, 0, 1], [85, 90, 93, 69, 95, 49, 67, 73, 21, 17], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [2, 9, 2, 1, 4, 8, 5, 5, 3, 5], [4, 2, 1, 2, 5, 1], [55, 58], [1, 0, 1], [0, 1, 1], [2, 5], [0, 6], [76, 71], [0, 1, 0, 0, 1, 1, 1, 1], [2, 7, 4], [0, 1, 3, 0, 0, 0, 2], [89, 2, 63, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 35, 19, 16, 7, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 29, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), grad)))))))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(alpha, sigma), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029110431671143, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [4, 8, 4, 3, 8, 2, 5], [0, 0, 0, 1, 2], [77, 90, 55], [0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [9, 9, 2, 1, 4, 8, 5, 5, 3, 5], [2, 4], [24], [1, 0, 1], [0, 0], [2, 5], [4], [76, 71], [0], [9], [0, 1, 3, 0, 0, 0, 2], [93]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 3, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 19, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029110431671143, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [6, 8, 8, 9, 8, 2, 5, 4], [3, 0, 0, 0, 3, 3, 0, 2, 1, 3, 2, 2, 0, 1, 1, 1, 1], [63, 97, 87, 75, 80, 36], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [2, 3, 3, 5, 9, 3, 0, 7, 5, 0], [2, 3, 4, 2, 5, 3], [74, 80, 20, 37], [0, 0, 1], [0, 0, 1, 1, 0], [5, 5], [0], [71], [0, 1, 0, 0, 1, 1, 1, 1], [1, 9], [1, 0], [43, 2, 63, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 4, 4, 0, 3, 2, 2, 0, 0, 3, 2, 1, 1], "tree_depth": 16, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), grad))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.6339706422480077e+17, 341206563291136.0, 822852383145984.0, 1367306059907072.0, 1949511962329088.0, 2599466142007296.0], "accuracy": [0.09509972482919693, 0.10315678268671036, 0.09708096832036972, 0.1014397069811821, 0.10038304328918457, 0.10130762308835983], "val_loss": [133111111221248.0, 310957913931776.0, 587801439502336.0, 853441677099008.0, 1072850215632896.0, 1555803316158464.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [4, 8, 4, 5, 8, 3, 5, 5, 8, 2], [0, 2, 0, 2, 3], [28, 23], [0], [1], [], [2], [], [0, 0, 1], [0, 1], [0], [4], [], [0], [9], [], [13]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 13, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302834987640381, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [9], [3, 0, 0], [13], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [2, 9, 2, 1, 4, 8, 5, 5, 3, 5], [2, 1, 1, 2, 5, 1], [57, 68], [1, 0, 1], [1, 0, 1], [5, 5], [5, 6], [76, 71], [0, 1, 1, 1, 0, 1, 1, 1], [7, 7, 4], [0, 1, 3, 0, 0, 0, 2], [43, 2, 63, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "evaluations": [-0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612, -0.10000000149011612], "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3025455474853516, 2.302365779876709, 2.302913188934326, 2.30496883392334, 2.3150882720947266, 2.3679349422454834], "accuracy": [0.10751552134752274, 0.10672302544116974, 0.10038304328918457, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025972843170166, 2.30283260345459, 2.303828716278076, 2.30857253074646, 2.332153081893921, 2.4624288082122803], "val_accuracy": [0.10266666859388351, 0.09933333098888397, 0.09933333098888397, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]