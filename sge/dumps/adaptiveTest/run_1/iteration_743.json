[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8374285697937012, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), grad), alpha), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.426759608874247, 2.1313347708453056, 1.6106378777215131, 1.1626340636739705, 0.987440685050646, 0.8912313060202477, 0.8004176157765683, 0.7416261368896259, 0.7204061077570383, 0.7033403463383172, 0.6596599191864169, 0.6424241937650681, 0.6089772559931691, 0.6031323945155438, 0.58248113699404, 0.5702792026300346, 0.5608291632589678, 0.5224320579749749, 0.5461025416906153, 0.5208882715771023, 0.5070138086559057, 0.4936779468224238, 0.4867865703345573, 0.45981226063376135, 0.47930238468063474, 0.4517783117316355, 0.4501883089817935, 0.4353299676868122, 0.41890674661793303, 0.4332057089774742, 0.42010712668470906, 0.4276853338318919, 0.40638790942611414, 0.4181944250533011, 0.40178221582248463, 0.3918382722184233, 0.38012181601315254, 0.37913272946407733, 0.3902039977703049], "accuracy": [0.23682472109794617, 0.23193766176700592, 0.47193238139152527, 0.5952978730201721, 0.6289790272712708, 0.6653017997741699, 0.6985867023468018, 0.7239466309547424, 0.7214370369911194, 0.7292299270629883, 0.7537974119186401, 0.7519482374191284, 0.7716285586357117, 0.7701756954193115, 0.7796856164932251, 0.7881389260292053, 0.7909126877784729, 0.8020076751708984, 0.7971205711364746, 0.8018755912780762, 0.8068947196006775, 0.8170651197433472, 0.819970965385437, 0.8277638554573059, 0.8215559124946594, 0.833179235458374, 0.8304054737091064, 0.8364813327789307, 0.8450667262077332, 0.8367455005645752, 0.843481719493866, 0.8424250483512878, 0.8482366800308228, 0.8418967127799988, 0.852859616279602, 0.8569541573524475, 0.8555012345314026, 0.8584070801734924, 0.8532558679580688], "val_loss": [1.9699316705976213, 1.4998829024178642, 0.9029474939618792, 0.6717857122421265, 0.6840493508747646, 0.5746347393308368, 0.5461264508111137, 0.5257495641708374, 0.5262787171772548, 0.4926105907985142, 0.48117733001708984, 0.46686763422829763, 0.4762113264628819, 0.4852857419422695, 0.4532319647925241, 0.42388894728251864, 0.4383734975542341, 0.4793875217437744, 0.4572385379246303, 0.4183977927480425, 0.3888712525367737, 0.4194437265396118, 0.40504281861441477, 0.409372159412929, 0.3845522999763489, 0.37721418482916697, 0.37784831864493235, 0.35706184591565815, 0.35542253085545134, 0.37009306464876446, 0.3556842974254063, 0.35815840108054026, 0.3557162880897522, 0.3480615700994219, 0.3461073211261204, 0.3426381860460554, 0.37688022000449045, 0.3537838118416922, 0.3531187261853899], "val_accuracy": [0.10266666859388351, 0.468666672706604, 0.593666672706604, 0.6996666789054871, 0.7139999866485596, 0.7543333172798157, 0.7516666650772095, 0.7639999985694885, 0.7400000095367432, 0.7799999713897705, 0.7883333563804626, 0.7929999828338623, 0.7903333306312561, 0.7663333415985107, 0.8009999990463257, 0.8190000057220459, 0.8033333420753479, 0.7913333177566528, 0.781000018119812, 0.8186666369438171, 0.8383333086967468, 0.8186666369438171, 0.8330000042915344, 0.8256666660308838, 0.8389999866485596, 0.840666651725769, 0.840666651725769, 0.8463333249092102, 0.8516666889190674, 0.843666672706604, 0.8516666889190674, 0.8486666679382324, 0.8483333587646484, 0.8539999723434448, 0.8526666760444641, 0.8503333330154419, 0.8423333168029785, 0.8496666550636292, 0.8453333377838135]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8237142562866211, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 7, 7, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), grad), alpha), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1237168369701336, 1.6764036889372878, 1.2884040397030094, 1.0570185203767015, 0.9147429808082677, 0.920825361213538, 0.769214271444135, 0.7388035148409742, 0.7040399349030251, 0.6801079694605333, 0.6166816076519404, 0.6120244327820902, 0.6006222142283282, 0.590796394536146, 0.5585343191305944, 0.5590613762290959, 0.5543970961092706, 0.5186810748546572, 0.5319926008383328, 0.5375471108892826, 0.4764560224940323, 0.478334634638009, 0.4678471875842599, 0.48557436714996166, 0.4870349223217582], "accuracy": [0.27499669790267944, 0.45845991373062134, 0.5342755317687988, 0.6302998065948486, 0.6619997620582581, 0.6627922058105469, 0.7135120630264282, 0.7275128960609436, 0.7226257920265198, 0.7347774505615234, 0.7683265209197998, 0.7667415142059326, 0.7777044177055359, 0.7697794437408447, 0.7927618622779846, 0.7889314293861389, 0.7898560166358948, 0.8063663840293884, 0.7987055778503418, 0.8006868362426758, 0.8211596608161926, 0.8219521641731262, 0.8249900937080383, 0.8189142942428589, 0.8261788487434387], "val_loss": [1.3197504111698695, 1.0266683442252023, 0.8982490130833217, 0.7563394989286151, 0.9045179912022182, 0.6214399678366525, 0.6122388669422695, 0.5329646212714059, 0.5218242236546108, 0.4893964869635446, 0.5013123750686646, 0.48200855936322895, 0.4834397690636771, 0.4522566965648106, 0.46764564514160156, 0.4202676756041391, 0.43111735582351685, 0.4846186467579433, 0.5175776822226388, 0.4045898829187666, 0.4126543828419277, 0.399183988571167, 0.42517296757016865, 0.45884764194488525, 0.39409808601651874], "val_accuracy": [0.4313333332538605, 0.5419999957084656, 0.6076666712760925, 0.6806666851043701, 0.562333345413208, 0.7166666388511658, 0.7263333201408386, 0.7436666488647461, 0.7599999904632568, 0.784333348274231, 0.7513333559036255, 0.7860000133514404, 0.7683333158493042, 0.7996666431427002, 0.7923333048820496, 0.8183333277702332, 0.8289999961853027, 0.7893333435058594, 0.7680000066757202, 0.8299999833106995, 0.8209999799728394, 0.8263333439826965, 0.8233333230018616, 0.8209999799728394, 0.8236666917800903]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [77, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 5, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8222857117652893, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1182061448592897, 2.112574717151711, 2.02863874898028, 1.5411734896218852, 1.0710859586534058, 0.9302654526237137, 0.8388409749344592, 0.7718296587317611, 0.7065945110694528, 0.7158781158815458, 0.6747379299357047, 0.6568570157020729, 0.6283335037644607, 0.6415880422755287, 0.6028012184733964, 0.5972879641737212, 0.5583255629986033, 0.5614080926320494, 0.5786566400666515, 0.5425448721788185, 0.5118496083013448, 0.5118587090118513, 0.5093543315961959, 0.49977273241388104, 0.4863776252403897, 0.48504161643802435], "accuracy": [0.27724209427833557, 0.2657508850097656, 0.3726060092449188, 0.46123364567756653, 0.6149781942367554, 0.6491876840591431, 0.6806234121322632, 0.7077004313468933, 0.7246070504188538, 0.7290979027748108, 0.7395324110984802, 0.7559106945991516, 0.7642319202423096, 0.7569673657417297, 0.7718927264213562, 0.7746664881706238, 0.7927618622779846, 0.785101056098938, 0.7795535326004028, 0.7996301651000977, 0.8058380484580994, 0.8088759779930115, 0.8090080618858337, 0.8133667707443237, 0.8156121969223022, 0.8153480291366577], "val_loss": [1.307072298867362, 1.6530859129769462, 1.5054424149649483, 0.854939477784293, 0.7246039594922747, 0.7030861377716064, 0.5976210151399884, 0.5422451155526298, 0.5756092071533203, 0.5378571408135551, 0.497213533946446, 0.48774945735931396, 0.5221795695168632, 0.49629184177943636, 0.46056200776781353, 0.4488833802086966, 0.437029344694955, 0.466941169330052, 0.49855661392211914, 0.4228282570838928, 0.3988241297858102, 0.49292922019958496, 0.4406648703983852, 0.459412796156747, 0.4354536703654698, 0.38967691149030415], "val_accuracy": [0.5243333578109741, 0.5583333373069763, 0.38999998569488525, 0.6570000052452087, 0.7093333601951599, 0.6449999809265137, 0.7283333539962769, 0.7580000162124634, 0.7250000238418579, 0.7423333525657654, 0.781333327293396, 0.793666660785675, 0.7476666569709778, 0.7639999985694885, 0.796999990940094, 0.8006666898727417, 0.8080000281333923, 0.7860000133514404, 0.7680000066757202, 0.8133333325386047, 0.8356666564941406, 0.7763333320617676, 0.8063333630561829, 0.812666654586792, 0.79666668176651, 0.8349999785423279]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 4, 2, 1, 4, 5, 6, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [77, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8220000267028809, "mapping_values": [1, 4, 4, 3, 1, 1, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), grad), alpha), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.116186700224987, 1.9797131457049786, 1.5108235904396077, 1.0302221621536167, 0.850384479382444, 0.7936318989175422, 0.7463165357159807, 0.6996557000306588, 0.668624883716164, 0.6331750300613613, 0.6262195740850169, 0.60670103291164, 0.5770392118585486, 0.5480094564872694, 0.5362011300432621, 0.549619365613915, 0.5176582550879687, 0.5158916393039312, 0.508294202762273, 0.5197307864877416, 0.47886098105878155, 0.44913632440891377, 0.4827637220213143, 0.4767866679831991, 0.4521658475081588, 0.4394139685784789, 0.44752009168686474, 0.41197424096879137, 0.42217882415480257, 0.400823394632012, 0.41543891015479184, 0.3997089711194183, 0.40796737711600595, 0.38146405078085927], "accuracy": [0.2818650007247925, 0.340509831905365, 0.4628186523914337, 0.6110157370567322, 0.6836613416671753, 0.6954167485237122, 0.7113987803459167, 0.7384757399559021, 0.746268630027771, 0.7589486241340637, 0.7621186375617981, 0.7734777331352234, 0.7821952104568481, 0.7913089394569397, 0.8043851256370544, 0.7948752045631409, 0.8064984679222107, 0.7997622489929199, 0.8076872229576111, 0.8074230551719666, 0.8182538747787476, 0.8355567455291748, 0.8198388814926147, 0.8197067975997925, 0.8348963260650635, 0.8354246616363525, 0.8347642421722412, 0.8494254350662231, 0.8433496356010437, 0.8502179384231567, 0.8454629778862, 0.8551049828529358, 0.8397833704948425, 0.8541803956031799], "val_loss": [1.3732120990753174, 1.3564955166407995, 0.9076109613691058, 0.7074315207345145, 0.6610241787774223, 0.581731949533735, 0.5287363188607352, 0.5197892529623849, 0.5581532546452114, 0.5480882951191494, 0.45714400495801655, 0.4675952366420201, 0.4506547621318272, 0.45413899421691895, 0.4431884969983782, 0.4108897362436567, 0.40086042881011963, 0.42530988795416697, 0.46204565252576557, 0.39418894052505493, 0.38780308621270315, 0.37742386545453754, 0.4762661967958723, 0.41622057982853483, 0.3971580522400992, 0.38241719348090036, 0.3603471687861851, 0.3544353757585798, 0.3497504847390311, 0.3503753798348563, 0.3399977173124041, 0.3769152249608721, 0.34462280784334454, 0.3731556875365121], "val_accuracy": [0.5400000214576721, 0.5346666574478149, 0.6610000133514404, 0.6819999814033508, 0.6990000009536743, 0.7269999980926514, 0.7683333158493042, 0.7563333511352539, 0.718999981880188, 0.7493333220481873, 0.7933333516120911, 0.7946666479110718, 0.7940000295639038, 0.7910000085830688, 0.8006666898727417, 0.828000009059906, 0.8353333473205566, 0.8026666641235352, 0.7990000247955322, 0.8286666870117188, 0.8376666903495789, 0.8399999737739563, 0.7900000214576721, 0.8183333277702332, 0.8230000138282776, 0.840666651725769, 0.8503333330154419, 0.8550000190734863, 0.8583333492279053, 0.8533333539962769, 0.8579999804496765, 0.8399999737739563, 0.8539999723434448, 0.8379999995231628]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8117142915725708, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.438285542359489, 2.3005359610231437, 2.2939594554989298, 2.258160886369629, 2.2770402888422865, 1.857112522217198, 1.333323638185046, 1.0405747493055628, 0.9213688941742562, 0.8917922701865234, 0.8596154808399779, 0.8048021258883992, 0.8141579867637452, 0.7534193758164036, 0.7568366944341139, 0.7341074663980872, 0.6893299768598026, 0.6675102581138294, 0.6405383993401236, 0.6298899842590279, 0.5874907869263537, 0.5878142894471657, 0.5788657558813008, 0.556187043226532, 0.5602660146387514, 0.5312494311539284, 0.5268923395014773, 0.527103217266743, 0.5097060090027087, 0.5098980781959899, 0.5217337954345082, 0.5007689087035996, 0.48292350208896295, 0.4813601553888841, 0.47579875236504804, 0.4622815525558536, 0.4595271162841267, 0.45319521474391083, 0.45048994429752953, 0.43542924670574135, 0.4234932532218847, 0.43401252104306753, 0.43247551008175233, 0.4210636174918134, 0.4118961438038692, 0.412119764331278, 0.3953474201168508], "accuracy": [0.23603223264217377, 0.13512085378170013, 0.14119666814804077, 0.15612204372882843, 0.2106723040342331, 0.3539822995662689, 0.5211992859840393, 0.6108836531639099, 0.6518293619155884, 0.6601505875587463, 0.6765288710594177, 0.6925109028816223, 0.6872276067733765, 0.7123233675956726, 0.7125874757766724, 0.7165499925613403, 0.7403249144554138, 0.7434949278831482, 0.7582882046699524, 0.7621186375617981, 0.7798177003860474, 0.7798177003860474, 0.7849689722061157, 0.7844406366348267, 0.7869502305984497, 0.800290584564209, 0.8041210174560547, 0.8049134612083435, 0.8075551390647888, 0.8057059645652771, 0.8061022162437439, 0.8123101592063904, 0.8177255392074585, 0.8195747137069702, 0.8178576231002808, 0.828292191028595, 0.8259146809577942, 0.8290846943855286, 0.8338396549224854, 0.8355567455291748, 0.8417646288871765, 0.8392550349235535, 0.8354246616363525, 0.8407079577445984, 0.8441421389579773, 0.8438779711723328, 0.8487650156021118], "val_loss": [1.9805564880371094, 1.8434961182730538, 1.975534507206508, 1.882270063672747, 1.7345669610159737, 1.1932313442230225, 0.8372686420168195, 0.6916361365999494, 0.6879076957702637, 0.6555342674255371, 0.5941753046853202, 0.6133826630456107, 0.5849254982812064, 0.5826204163687569, 0.5525838988167899, 0.5304564918790545, 0.5019895689828056, 0.5031102044241769, 0.49844394411359516, 0.45877758094242643, 0.45919786180768696, 0.4624530758176531, 0.4667194059916905, 0.44159267629895893, 0.41910057408469065, 0.41494170257023405, 0.43021082878112793, 0.4127143791743687, 0.40124969823019846, 0.3983742254120963, 0.40293407440185547, 0.4027183141027178, 0.3796050378254482, 0.37790422780173166, 0.39239693539483206, 0.3742144192968096, 0.4208687799317496, 0.3825745327132089, 0.37136735234941753, 0.36637295143944876, 0.367144090788705, 0.3586010422025408, 0.38049139295305523, 0.38044283219746183, 0.3736181855201721, 0.3545622570174081, 0.3774011731147766], "val_accuracy": [0.10233332961797714, 0.19833333790302277, 0.09566666930913925, 0.15433333814144135, 0.2280000001192093, 0.5303333401679993, 0.6256666779518127, 0.6996666789054871, 0.6993333101272583, 0.6916666626930237, 0.731333315372467, 0.7143333554267883, 0.7273333072662354, 0.7279999852180481, 0.7599999904632568, 0.7666666507720947, 0.7856666445732117, 0.7676666378974915, 0.7789999842643738, 0.7983333468437195, 0.7979999780654907, 0.793666660785675, 0.800000011920929, 0.8159999847412109, 0.8196666836738586, 0.8253333568572998, 0.8159999847412109, 0.8233333230018616, 0.82833331823349, 0.8383333086967468, 0.8339999914169312, 0.8333333134651184, 0.8396666646003723, 0.8370000123977661, 0.8346666693687439, 0.843666672706604, 0.8233333230018616, 0.8393333554267883, 0.8433333039283752, 0.8446666598320007, 0.8453333377838135, 0.8546666502952576, 0.8366666436195374, 0.8429999947547913, 0.8399999737739563, 0.8523333072662354, 0.8420000076293945]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 4, 4, 1, 4, 3, 5, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [77, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [0, 0], [53, 2], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 1, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.803428590297699, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4267891166610425, 2.12829702852456, 1.523463638955261, 1.1598328641849407, 0.970445466441501, 0.941627481373908, 0.7857473060093095, 0.7475608271331268, 0.7046577214895537, 0.687890602565791, 0.6536221656313095, 0.6370231224608507, 0.6163319489424018, 0.6221233485964044, 0.5750585441591874, 0.5635104010511682, 0.5560668442211824, 0.5211995320628111, 0.5461495381147319, 0.5232163834187648, 0.4958729792453704, 0.4983715031558276, 0.48822325124417504, 0.4668041273052068, 0.4677447112614941, 0.46970493779946404, 0.44149108954770866, 0.44542719885311294, 0.42509310889269275, 0.44711700548679756, 0.41407421076963796, 0.423775742192861, 0.4187442511142977, 0.4066174277547895], "accuracy": [0.23682472109794617, 0.23497556149959564, 0.48606523871421814, 0.589750349521637, 0.6367719173431396, 0.6597543358802795, 0.7009642124176025, 0.7174745798110962, 0.7293620109558105, 0.7413815855979919, 0.754589855670929, 0.759080708026886, 0.7729493975639343, 0.7607977986335754, 0.7847048044204712, 0.7898560166358948, 0.793950617313385, 0.8047813773155212, 0.7968564033508301, 0.802800178527832, 0.8178576231002808, 0.8131026029586792, 0.8175934553146362, 0.8304054737091064, 0.8284242749214172, 0.8212917447090149, 0.8293488025665283, 0.834632158279419, 0.842028796672821, 0.834632158279419, 0.8424250483512878, 0.8433496356010437, 0.8444063067436218, 0.8449346423149109], "val_loss": [1.9699788774762834, 1.464991637638637, 0.976933479309082, 0.6750120605741229, 0.8244849784033639, 0.5982588529586792, 0.5813091312135968, 0.5352671146392822, 0.5029924937656948, 0.49595742566244944, 0.49067347390311106, 0.47484804902757916, 0.508543712752206, 0.4548748901912144, 0.44557603767939974, 0.4222453236579895, 0.41407253061022076, 0.45612663882119314, 0.4437011310032436, 0.3960708720343454, 0.4038381576538086, 0.3938199622290475, 0.4076231973511832, 0.38902344022478375, 0.3793503556932722, 0.37029718501227243, 0.3710452743938991, 0.3672377552304949, 0.35592670100075857, 0.359868015561785, 0.3808682475771223, 0.3725092921938215, 0.3561753290040152, 0.35360972370420185], "val_accuracy": [0.10266666859388351, 0.492000013589859, 0.6193333268165588, 0.7256666421890259, 0.6679999828338623, 0.7286666631698608, 0.7390000224113464, 0.7453333139419556, 0.7763333320617676, 0.7716666460037231, 0.7926666736602783, 0.784333348274231, 0.746999979019165, 0.7870000004768372, 0.7983333468437195, 0.8063333630561829, 0.8270000219345093, 0.79666668176651, 0.7919999957084656, 0.8273333311080933, 0.8299999833106995, 0.8333333134651184, 0.824999988079071, 0.8356666564941406, 0.8403333425521851, 0.8413333296775818, 0.8486666679382324, 0.843666672706604, 0.8539999723434448, 0.8516666889190674, 0.8326666951179504, 0.8373333215713501, 0.8483333587646484, 0.8450000286102295]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 0, 2, 1, 4, 5, 5, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 3, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [0, 5, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7922857403755188, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1189752303692706, 1.8560364446021531, 1.3981298810030254, 1.1697141774940516, 1.0971874606103913, 0.9426049625459458, 0.87057045390656, 0.8304738835210829, 0.7605981721602191, 0.7207107098032345, 0.6786606317309025, 0.6774310981514053, 0.6789789963958915, 0.6380302719215849, 0.597063665683826, 0.6099393096157211, 0.6053172266714766, 0.5557951236271886, 0.5545287317902798, 0.549821955235627, 0.5493064381978326, 0.5372747786214181, 0.5171583046010614], "accuracy": [0.2771100103855133, 0.39783385396003723, 0.5000660419464111, 0.5724474787712097, 0.609959065914154, 0.6513010263442993, 0.6573768258094788, 0.6841896772384644, 0.7096816897392273, 0.7187954187393188, 0.7323999404907227, 0.7337207794189453, 0.7374191284179688, 0.7514199018478394, 0.7658169269561768, 0.7647602558135986, 0.7605336308479309, 0.7853652238845825, 0.7874785661697388, 0.7868181467056274, 0.7839123010635376, 0.7992339134216309, 0.7988376617431641], "val_loss": [1.8625661305018835, 1.4374659402029855, 1.240699052810669, 0.8846601077488491, 0.7800236770084926, 0.805728588785444, 0.6885984284537179, 0.7238299335752215, 0.5504024709974017, 0.5582746607916695, 0.5307135581970215, 0.5736146313803536, 0.5740475654602051, 0.5171180452619281, 0.509009872164045, 0.5077739953994751, 0.4937593085425241, 0.4799266883305141, 0.47697220529828754, 0.4970877170562744, 0.5146709169660296, 0.47282842227390837, 0.46940623010907856], "val_accuracy": [0.2136666625738144, 0.3610000014305115, 0.5173333287239075, 0.6000000238418579, 0.6726666688919067, 0.6290000081062317, 0.6690000295639038, 0.6676666736602783, 0.7403333187103271, 0.7390000224113464, 0.7556666731834412, 0.750333309173584, 0.7476666569709778, 0.7546666860580444, 0.7549999952316284, 0.7573333382606506, 0.7846666574478149, 0.7960000038146973, 0.7953333258628845, 0.7736666798591614, 0.765666663646698, 0.7883333563804626, 0.7889999747276306]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [80, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [77, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0], [9, 5, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.4057142734527588, "mapping_values": [1, 4, 4, 3, 1, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.595875119835457, 2.268068773336162, 2.357487911341008, 2.305028244551887, 2.302833721952951, 2.3007089438581385], "accuracy": [0.1896711140871048, 0.20036983489990234, 0.1612732857465744, 0.10077928751707077, 0.10289261490106583, 0.11147800832986832], "val_loss": [1.8138243811471122, 1.9739909172058105, 1.977287428719657, 1.9740567888532365, 1.9729483468191964, 1.9629990713936942], "val_accuracy": [0.35633334517478943, 0.11633333563804626, 0.10066666454076767, 0.10199999809265137, 0.09666666388511658, 0.2516666650772095]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 2, 1, 4, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 0, 2, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [77, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [0, 0], [93, 2], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 1, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.20742857456207275, "mapping_values": [1, 4, 4, 3, 1, 1, 17, 17, 9, 8, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), grad), alpha), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.438250958565251, 2.279037521783277, 2.39878220426534, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2359001487493515, 0.1442345827817917, 0.11847840249538422, 0.13921542465686798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9806412288120814, 2.207294123513358, 1.8514444487435477, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.17000000178813934, 0.23899999260902405, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [25, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [19, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [8, 5, 3, 4], [0, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [97, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [1, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023740270937343, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [72, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [8, 5, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad)))), grad), alpha), alpha), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07885351777076721, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [9, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [77, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [8, 5, 3, 4], [0, 0], [53, 2], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 1, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07885351777076721, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 3, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [8, 5, 3, 4], [5, 0], [53, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 2, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 1, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 7, 3, 4, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.add(beta, grad))), grad), alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(beta, alpha), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [29, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 5, 3, 4], [0, 0], [53, 2], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(beta, tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [2.3023740270937343, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 2, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [77, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [4, 5, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))))), tf.math.add(beta, grad)), alpha), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3023740270937343, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [72, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 4, 2, 1, 2, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 0, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 78, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [4, 3, 3, 4], [5, 0], [93, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 3, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(tf.math.square(tf.math.pow(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), grad), alpha), tf.math.add(beta, alpha)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07885351777076721, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [25, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 2, 1, 4, 5, 4, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 3, 3, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [8, 5, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 0, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.pow(alpha, tf.math.add(beta, grad))), grad), alpha), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3006564767810063, 2.3010303113186885, 2.302679986497745, 2.3029519449119884, 2.303456555110683, 2.3022425636056707], "accuracy": [0.0948355570435524, 0.09800554811954498, 0.09060890227556229, 0.0944393053650856, 0.08585391938686371, 0.08836349099874496], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 2, 1, 4, 5, 5, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 1, 3, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [48, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [0, 5, 3, 4], [0, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 0, 12, 12, 6, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.square(grad), tf.math.add(beta, grad))), alpha)), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3006564767810063, 2.3010303113186885, 2.302679986497745, 2.3029519449119884, 2.303456555110683, 2.3022425636056707], "accuracy": [0.0948355570435524, 0.09800554811954498, 0.09060890227556229, 0.0944393053650856, 0.08585391938686371, 0.08836349099874496], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 9, 1, 2, 5, 5, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 1, 1, 1, 0, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0], [0, 5, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3006564767810063, 2.3010303113186885, 2.302679986497745, 2.3029519449119884, 2.303456555110683, 2.3022425636056707], "accuracy": [0.0948355570435524, 0.09800554811954498, 0.09060890227556229, 0.0944393053650856, 0.08585391938686371, 0.08836349099874496], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]