[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 4, 2, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8437142968177795, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.096648770237737, 1.5948278792640396, 0.9384480223065559, 0.7656240400274779, 0.6715146254916878, 0.615523238192145, 0.5789524315842989, 0.5547389657883801, 0.5388871036453207, 0.5009044982722218, 0.4880733476803366, 0.4830194559071782, 0.46090790840376794, 0.44189186205858916, 0.44889758412139824, 0.4354667685932849, 0.419738566484969, 0.40923811396697823, 0.3998322874374551, 0.3821424890888712, 0.37335931648588955, 0.37332825738803316, 0.3523806453916328, 0.3464712642163743, 0.3492232456246324, 0.33334915084278954, 0.3265595689913884, 0.30794794547512166, 0.3125590940689162, 0.30248470110207376, 0.30176142025003344, 0.30256097063396614, 0.2847048315322788, 0.27741128358197265, 0.27886826681297183, 0.27529099527729217, 0.2748563010277545, 0.27281016678606057, 0.24838151464199645, 0.257438924393366, 0.23761682727231073, 0.22840841596333766, 0.23596463585967448], "accuracy": [0.2950733006000519, 0.44670453667640686, 0.6514331102371216, 0.7098137736320496, 0.7404569983482361, 0.763439416885376, 0.783119797706604, 0.7854973077774048, 0.7968564033508301, 0.8100647330284119, 0.8157442808151245, 0.8201030492782593, 0.8232730031013489, 0.8335754871368408, 0.8309338092803955, 0.837141752243042, 0.8457271456718445, 0.8444063067436218, 0.8500858545303345, 0.8574824929237366, 0.8595958352088928, 0.8557654023170471, 0.8646149635314941, 0.867520809173584, 0.8681812286376953, 0.8726720213890076, 0.8753136992454529, 0.8782195448875427, 0.8791441321372986, 0.8836349248886108, 0.8809932470321655, 0.8838990926742554, 0.8931449055671692, 0.8927486538887024, 0.889578640460968, 0.8982961177825928, 0.8902390599250793, 0.895918607711792, 0.9056927561759949, 0.9041078090667725, 0.9100515246391296, 0.9113723635673523, 0.9070135951042175], "val_loss": [1.6730094977787562, 0.8654778173991612, 0.6157738821847099, 0.5350204876491002, 0.49057349136897493, 0.4693126848765782, 0.443447470664978, 0.42320301703044344, 0.4077098454747881, 0.40311749492372784, 0.3907859410558428, 0.3881740825516837, 0.3697072778429304, 0.3663593190056937, 0.3651778016771589, 0.3570197820663452, 0.3528132864407131, 0.3701773967061724, 0.3660731741360256, 0.3394860880715506, 0.34274327754974365, 0.3474533643041338, 0.345466000693185, 0.3231156723839896, 0.3254683188029698, 0.319828314440591, 0.33183853115354267, 0.33609684876033236, 0.32861701931272236, 0.324042660849435, 0.33944603375026156, 0.3184679661478315, 0.32602961574281963, 0.31243525232587543, 0.32392358779907227, 0.31191799470356535, 0.31784617049353464, 0.3166570748601641, 0.34203305414744783, 0.3244225723402841, 0.32517385482788086, 0.33576370988573345, 0.3328745024544852], "val_accuracy": [0.30933332443237305, 0.6523333191871643, 0.7096666693687439, 0.7436666488647461, 0.7663333415985107, 0.7820000052452087, 0.7923333048820496, 0.8043333292007446, 0.8153333067893982, 0.8230000138282776, 0.8246666789054871, 0.8303333520889282, 0.8383333086967468, 0.8423333168029785, 0.8420000076293945, 0.8433333039283752, 0.8506666421890259, 0.8306666612625122, 0.8386666774749756, 0.8519999980926514, 0.859000027179718, 0.8513333201408386, 0.8483333587646484, 0.8616666793823242, 0.8640000224113464, 0.862666666507721, 0.8543333411216736, 0.8646666407585144, 0.862333357334137, 0.8633333444595337, 0.8553333282470703, 0.8700000047683716, 0.8656666874885559, 0.871666669845581, 0.8646666407585144, 0.8696666955947876, 0.8706666827201843, 0.8736666440963745, 0.8566666841506958, 0.871999979019165, 0.871999979019165, 0.8683333396911621, 0.8690000176429749]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 4, 2, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8385714292526245, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.09667128770894, 1.5921037085004974, 0.9360385562891438, 0.7584562694801237, 0.6740081051494687, 0.6187727662865449, 0.5831289167071, 0.5501567791985514, 0.5407442589280722, 0.5008164477378244, 0.49211317479901734, 0.48392404880994155, 0.4611029823253719, 0.44730360409791803, 0.44922233010091017, 0.4271874406105964, 0.42183240212469586, 0.4066462654557919, 0.39504200224831687, 0.3730573113434476, 0.3737828801289494, 0.3716048741022578, 0.35014224553530193, 0.3452622726640335, 0.346259330186893, 0.34038483591096086, 0.3305448430711252, 0.3189165702254749, 0.317518950205406, 0.318325671509918, 0.3032947039804155, 0.29986032701880155, 0.2880577129214557], "accuracy": [0.2949412167072296, 0.44644036889076233, 0.6514331102371216, 0.7121912837028503, 0.7395324110984802, 0.7582882046699524, 0.7839123010635376, 0.7907806038856506, 0.7938185334205627, 0.8086118102073669, 0.816008448600769, 0.8138951063156128, 0.821820080280304, 0.8309338092803955, 0.8305375576019287, 0.8437458872795105, 0.8449346423149109, 0.8454629778862, 0.8506141901016235, 0.8598600029945374, 0.8574824929237366, 0.8569541573524475, 0.8668603897094727, 0.8681812286376953, 0.8710870146751404, 0.8681812286376953, 0.8772949576377869, 0.8759741187095642, 0.8750495314598083, 0.8775591254234314, 0.8833707571029663, 0.8857482671737671, 0.8864086866378784], "val_loss": [1.6733476434435164, 0.8612376962389264, 0.611506530216762, 0.5308935982840401, 0.4894308703286307, 0.4715477398463658, 0.44285944529942106, 0.42065795830317904, 0.40842623370034353, 0.4025666287967137, 0.3913716333253043, 0.3937983512878418, 0.3636964900153024, 0.3690557394708906, 0.3584684899875096, 0.35103520325251986, 0.34828440632138935, 0.35690492391586304, 0.3463722893169948, 0.3424239924975804, 0.3429207035473415, 0.3459805761064802, 0.34157608236585346, 0.3283412201063974, 0.33150785309927805, 0.326486417225429, 0.3218249593462263, 0.34042597668511526, 0.3271759833608355, 0.3222501873970032, 0.33483305999210905, 0.32471355370112825, 0.3267059922218323], "val_accuracy": [0.3100000023841858, 0.6520000100135803, 0.7163333296775818, 0.7440000176429749, 0.768666684627533, 0.7789999842643738, 0.7916666865348816, 0.8059999942779541, 0.8106666803359985, 0.8169999718666077, 0.8206666707992554, 0.8233333230018616, 0.8403333425521851, 0.843999981880188, 0.846666693687439, 0.8479999899864197, 0.8510000109672546, 0.8353333473205566, 0.8533333539962769, 0.8556666374206543, 0.8539999723434448, 0.8553333282470703, 0.8553333282470703, 0.859000027179718, 0.859000027179718, 0.8610000014305115, 0.8600000143051147, 0.8656666874885559, 0.8656666874885559, 0.8646666407585144, 0.8566666841506958, 0.8650000095367432, 0.8646666407585144]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 5, 2, 7], [0, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7154285907745361, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 9, 6, 5, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3007896690635694, 2.292788777794143, 2.2859458575678886, 2.279261168865496, 2.2733657976356336, 2.2669665560887995, 2.260226968729485, 2.251193961604648, 2.244499271257033, 2.237847653015997, 2.2267450442356345, 2.2182433084332476, 2.208929863871679, 2.199670066356092, 2.186358348363741, 2.1750415035951187, 2.158230627815973, 2.1465352423958506, 2.131444285464183, 2.1149027211838365, 2.0951292252165845, 2.0736278306066462, 2.053219694550232, 2.0321346266772595, 2.004295248979622, 1.9804077948152177, 1.9542166183590337, 1.9282955544074576, 1.8916169101410003, 1.859395754020826, 1.8258394435286254, 1.7981341368549646, 1.7723622708634899, 1.7333117739682846, 1.6950058673335389, 1.6637981591868978, 1.6323062012365954, 1.6011066245302124, 1.5747039525925506, 1.5433042216467867, 1.5168841485538818, 1.4836347206881837, 1.4550060016635606, 1.441395091027978, 1.4113460808634175, 1.3907607212011226, 1.3659919703625543, 1.3442463310182748, 1.333609172712464, 1.3115784223163762, 1.294878019349387, 1.2714588322643874, 1.257944988820216, 1.2482921281873023, 1.2310762602844258, 1.2099305368953015, 1.20612223951997, 1.1880984811294095, 1.1784005303345715, 1.1648935210892175, 1.1506796584641377, 1.1467212145401895, 1.1303874481119547, 1.1195339314485064, 1.1147443363301552, 1.0996798503636653, 1.103585605923022, 1.079444168990456, 1.07638259123597, 1.0618815730197821, 1.0647996835043527, 1.054341224316577, 1.0399491827265304, 1.0278620045844196, 1.0305095913072917, 1.039707084507313, 1.0222914862736672, 1.0086875113875968, 1.006050377088279, 1.0066161339765747, 0.9942339349337824, 1.0004334858364166, 0.9846817349020862, 0.973960746399022, 0.9815657450428193, 0.9731989609425205, 0.9685621485261712, 0.9682622696619307, 0.9486452307226856, 0.9456547254332619, 0.9425611052577995, 0.9325887420079523, 0.9494051535320698, 0.9429483940147563, 0.9357508373471488, 0.927096598955461, 0.9176026931874678, 0.9248419600455139, 0.9170425152734538, 0.9173484811646165], "accuracy": [0.09496764093637466, 0.11966715008020401, 0.13115836679935455, 0.151234969496727, 0.15678246319293976, 0.17884030938148499, 0.20235107839107513, 0.22612600028514862, 0.23801347613334656, 0.24699510633945465, 0.2677321434020996, 0.28463876247406006, 0.2907145619392395, 0.3109232485294342, 0.316470742225647, 0.32518821954727173, 0.3463214933872223, 0.34605732560157776, 0.34922730922698975, 0.35781270265579224, 0.37643641233444214, 0.3907013535499573, 0.39387133717536926, 0.39889049530029297, 0.4143442213535309, 0.4123629629611969, 0.42689210176467896, 0.4345529079437256, 0.4387795627117157, 0.44591203331947327, 0.454629510641098, 0.45951658487319946, 0.4585919976234436, 0.4721965491771698, 0.4843481779098511, 0.4873860776424408, 0.4939902126789093, 0.5004622936248779, 0.49412229657173157, 0.5107647776603699, 0.521067202091217, 0.5192180871963501, 0.5242372155189514, 0.5263505578041077, 0.5320301055908203, 0.5407475829124451, 0.5443138480186462, 0.5564654469490051, 0.5492008924484253, 0.5596354603767395, 0.5522388219833374, 0.5688812732696533, 0.5749570727348328, 0.573107898235321, 0.5806366205215454, 0.5847312211990356, 0.5896182656288147, 0.590278685092926, 0.5951657891273499, 0.588297426700592, 0.6037511825561523, 0.5945053696632385, 0.6058644652366638, 0.6078457236289978, 0.6103553175926208, 0.6231673359870911, 0.6096948981285095, 0.620261549949646, 0.629111111164093, 0.6268656849861145, 0.6232994198799133, 0.6345264911651611, 0.6350548267364502, 0.6363756656646729, 0.6384889483451843, 0.6304318904876709, 0.6415268778800964, 0.6460176706314087, 0.6435081362724304, 0.6436402201652527, 0.6433760523796082, 0.6396777033805847, 0.6497160196304321, 0.6592260003089905, 0.6522256135940552, 0.6556597352027893, 0.6560559868812561, 0.6568484902381897, 0.6618676781654358, 0.6609430909156799, 0.6724342703819275, 0.666358470916748, 0.668339729309082, 0.6629242897033691, 0.6645092964172363, 0.6701889038085938, 0.6763967871665955, 0.6737551093101501, 0.6707172393798828, 0.669792652130127], "val_loss": [1.9652551923479353, 1.9591978618076868, 1.9530470711844308, 1.9469834055219377, 1.9407614980425154, 1.934347220829555, 1.927779061453683, 1.9207735742841447, 1.9134292602539062, 1.9057275908333915, 1.897383213043213, 1.8883418355669295, 1.8786406517028809, 1.868234430040632, 1.856889043535505, 1.8445546286446708, 1.831155640738351, 1.816824163709368, 1.801339966910226, 1.784773690359933, 1.7667399133954729, 1.7471331187656947, 1.7263741493225098, 1.7040814672197615, 1.6801684243338448, 1.6547508580344064, 1.6280762127467565, 1.6003144468579973, 1.570664576121739, 1.5398970672062464, 1.5081297329493932, 1.4760730947766985, 1.4436916283198766, 1.4104885033198766, 1.3768866402762276, 1.343749965940203, 1.311051402773176, 1.2790396894727434, 1.2483512674059187, 1.2185728549957275, 1.189887625830514, 1.1624882561819894, 1.1364503247397286, 1.1121350356510706, 1.088383708681379, 1.0662035942077637, 1.0449189117976598, 1.0247842924935477, 1.0063389028821672, 0.9888103689466204, 0.972299303327288, 0.9563920838492257, 0.9412857123783657, 0.9268754209790911, 0.9135141032082694, 0.9006919860839844, 0.8889069216591972, 0.8776928697313581, 0.8669772659029279, 0.8567943572998047, 0.8469594206128802, 0.8375369821275983, 0.8290307862418038, 0.8206862211227417, 0.8128483636038644, 0.8050308227539062, 0.7977169922419957, 0.790832349232265, 0.7841709000723702, 0.778028096471514, 0.7715478454317365, 0.7658062832696098, 0.7600218057632446, 0.7544474601745605, 0.7490416084017072, 0.7444430930273873, 0.7397657632827759, 0.7353668553488595, 0.730636715888977, 0.7263182742255074, 0.7216762985501971, 0.718401449067252, 0.714020848274231, 0.7102550097874233, 0.7066090788160052, 0.70334563936506, 0.699559211730957, 0.6962081704820905, 0.6923860311508179, 0.689463598387582, 0.6860556261880058, 0.6824790920530047, 0.6797459977013725, 0.67691627570561, 0.6740921565464565, 0.6711586713790894, 0.6686590228761945, 0.6662243774959019, 0.6639598948614938, 0.660955514226641], "val_accuracy": [0.07566666603088379, 0.12966667115688324, 0.19233334064483643, 0.2513333261013031, 0.29100000858306885, 0.32366666197776794, 0.351666659116745, 0.36933332681655884, 0.3816666603088379, 0.390666663646698, 0.4009999930858612, 0.41333332657814026, 0.4286666810512543, 0.4386666715145111, 0.4490000009536743, 0.46000000834465027, 0.4726666808128357, 0.476666659116745, 0.4866666793823242, 0.4963333308696747, 0.5043333172798157, 0.5080000162124634, 0.5130000114440918, 0.5199999809265137, 0.5256666541099548, 0.5296666622161865, 0.5413333177566528, 0.5453333258628845, 0.550000011920929, 0.5533333420753479, 0.5596666932106018, 0.5636666417121887, 0.5709999799728394, 0.5763333439826965, 0.5796666741371155, 0.5826666951179504, 0.5866666436195374, 0.5896666646003723, 0.5979999899864197, 0.6033333539962769, 0.6103333234786987, 0.6196666955947876, 0.625333309173584, 0.6316666603088379, 0.6380000114440918, 0.6416666507720947, 0.6476666927337646, 0.6510000228881836, 0.6539999842643738, 0.6566666960716248, 0.6606666445732117, 0.6606666445732117, 0.6606666445732117, 0.6673333048820496, 0.668666660785675, 0.6706666946411133, 0.6723333597183228, 0.67166668176651, 0.6736666560173035, 0.6753333210945129, 0.6806666851043701, 0.6836666464805603, 0.6826666593551636, 0.6816666722297668, 0.6859999895095825, 0.6856666803359985, 0.6863333582878113, 0.687333345413208, 0.6880000233650208, 0.6869999766349792, 0.6903333067893982, 0.6923333406448364, 0.6943333148956299, 0.6966666579246521, 0.6970000267028809, 0.6966666579246521, 0.6980000138282776, 0.6976666450500488, 0.6980000138282776, 0.699999988079071, 0.7009999752044678, 0.7009999752044678, 0.7016666531562805, 0.7023333311080933, 0.7036666870117188, 0.70333331823349, 0.7049999833106995, 0.7056666612625122, 0.7066666483879089, 0.706333339214325, 0.7076666951179504, 0.7103333473205566, 0.7110000252723694, 0.7126666903495789, 0.7129999995231628, 0.7139999866485596, 0.7110000252723694, 0.7133333086967468, 0.7153333425521851, 0.7173333168029785]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [1, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [9, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 3, 4, 5, 2], [0, 0, 2], [47, 2, 82], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.6874285936355591, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 6, 4, 3, 1, 1, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.303275960610606, 2.3000077172482034, 2.29607457324829, 2.290191794902956, 2.283688318239715, 2.2751224813774953, 2.2647956027614287, 2.2509212724095904, 2.2382104785419363, 2.223875190761064, 2.203705402114026, 2.183042188346378, 2.1592546913208444, 2.1325714363949158, 2.095578739309607, 2.056591490020117, 2.0045063857467906, 1.953022038002906, 1.8878815694492035, 1.8199348963168256, 1.7403701544752714, 1.6585680142432755, 1.59131960849311, 1.527906008337341, 1.461553286237015, 1.427800469835594, 1.401759211712541, 1.3932818104609554, 1.359980184294056, 1.357233195713624, 1.3536138817807704, 1.3761522672148334, 1.370888355118078, 1.3420314006581204, 1.2797395601374615, 1.2387844842139362, 1.1885436564829561, 1.1563364224049077, 1.1098722031465722, 1.0569840111374744, 0.9957889171639265, 0.9513943917825946, 0.9233860757293922, 0.9225299430797286, 0.9066602532984228, 0.9087325834862671, 0.9102653029997587], "accuracy": [0.08928807079792023, 0.10381719470024109, 0.10619468986988068, 0.12230881303548813, 0.13155461847782135, 0.15902787446975708, 0.19535067677497864, 0.2316734939813614, 0.25795799493789673, 0.2843745946884155, 0.3125082552433014, 0.3353586196899414, 0.3447364866733551, 0.36322811245918274, 0.37564390897750854, 0.3895126283168793, 0.3941355049610138, 0.4127592146396637, 0.419759601354599, 0.4247787594795227, 0.4422137141227722, 0.4563465714454651, 0.46849822998046875, 0.47985735535621643, 0.4987452030181885, 0.4994056224822998, 0.5081230998039246, 0.520671010017395, 0.5305771827697754, 0.5328226089477539, 0.5482763051986694, 0.5423325896263123, 0.5493329763412476, 0.561352550983429, 0.5826178789138794, 0.5950337052345276, 0.6155065298080444, 0.6255448460578918, 0.6297714710235596, 0.6452252268791199, 0.6499801874160767, 0.653150200843811, 0.6573768258094788, 0.6557918190956116, 0.6530181169509888, 0.6590939164161682, 0.6542068123817444], "val_loss": [1.9704468590872628, 1.9677003451756068, 1.9632455962044852, 1.9571480069841658, 1.9495037623814173, 1.9404147011893136, 1.9299866131373815, 1.9182004247392928, 1.9049295697893416, 1.8899284771510534, 1.8726084572928292, 1.8521983964102608, 1.8278163501194544, 1.7985315322875977, 1.7634608404976981, 1.7214890207563127, 1.671530042375837, 1.6127039364406042, 1.5448893478938512, 1.4687816074916296, 1.3864218166896276, 1.3012481757572718, 1.217785085950579, 1.1400539875030518, 1.0702554838997977, 1.0084842954363142, 0.9535760879516602, 0.9046163218361991, 0.8609681129455566, 0.8266726221357074, 0.8070457322256905, 0.7984646729060582, 0.7844778980527606, 0.7603126764297485, 0.743247253554208, 0.7430011715207782, 0.750355737549918, 0.7490031378609794, 0.7309752021517072, 0.7021093368530273, 0.6749006169182914, 0.6620206151689801, 0.663692831993103, 0.6710124867303031, 0.679067747933524, 0.685879043170384, 0.6925286735807147], "val_accuracy": [0.0403333343565464, 0.06133333221077919, 0.09399999678134918, 0.156333327293396, 0.234333336353302, 0.30000001192092896, 0.3423333466053009, 0.36266666650772095, 0.3766666650772095, 0.4009999930858612, 0.4156666696071625, 0.43166667222976685, 0.44433334469795227, 0.4566666781902313, 0.46700000762939453, 0.47866666316986084, 0.49133333563804626, 0.4963333308696747, 0.5066666603088379, 0.5203333497047424, 0.5400000214576721, 0.5543333292007446, 0.5696666836738586, 0.5833333134651184, 0.6053333282470703, 0.6293333172798157, 0.6453333497047424, 0.656333327293396, 0.6643333435058594, 0.6650000214576721, 0.6700000166893005, 0.6603333353996277, 0.6636666655540466, 0.6830000281333923, 0.6850000023841858, 0.684333324432373, 0.6863333582878113, 0.6880000233650208, 0.6896666884422302, 0.6933333277702332, 0.6973333358764648, 0.7086666822433472, 0.7043333053588867, 0.6946666836738586, 0.6863333582878113, 0.6866666674613953, 0.6836666464805603]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 4, 2, 7], [1, 0, 2], [47, 2, 82], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.25999999046325684, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.238691465997299, 2.8938579540431553, 2.108495155700807e+16, NaN, NaN, NaN, NaN], "accuracy": [0.24514594674110413, 0.20235107839107513, 0.1632545292377472, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.956949029650007, 1.741722515651158, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.16300000250339508, 0.2160000056028366, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 4, 2, 7], [0, 0, 2], [5, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.1411428600549698, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.311793378819375, 2.3702876838033604, 2.5764499802111382, 4.352499398919396, 42523.24436168396, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.023774931207299232, 0.008849557489156723, 0.009245806373655796, 0.06551314145326614, 0.10513802617788315, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.000762394496373, 2.098282677786691, 2.479567459651402, 9.685727528163365, 21124948239506.285, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004666666500270367, 0.003666666569188237, 0.0063333334401249886, 0.02500000037252903, 0.14266666769981384, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 4, 2, 7], [0, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024903234631204, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 2, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 4, 2, 7], [0, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3057294065737217, 2.325951353276426, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08651433140039444, 0.08070268481969833, 0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.978339740208217, 2.019028527396066, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02500000037252903, 0.09733333438634872, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [86, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 4, 2, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 23, 23, 17, 6, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.negative(tf.math.add(beta, tf.math.negative(grad))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29040530.6037006, 555967587.3940034, 2626972991.535068, 7266580959.606921, 15586495238.458328, 28796774068.089287], "accuracy": [0.09893012791872025, 0.10038304328918457, 0.09879804402589798, 0.09853387624025345, 0.09285431355237961, 0.0956280529499054], "val_loss": [109639611.42857143, 882088064.0, 2982660754.285714, 7076670464.0, 13829436854.857143, 23906292882.285713], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 4, 2, 7], [0, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3117556975990348, 2.369456117903599, 2.56911062309377, 4.19476291604597, 1774.0841947068566, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.02417117916047573, 0.008717474527657032, 0.008849557489156723, 0.06538105756044388, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0005448886326382, 2.0962179728916714, 2.459359782082694, 8.92859595162528, 2642183241.142857, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004666666500270367, 0.003666666569188237, 0.0063333334401249886, 0.024000000208616257, 0.10000000149011612, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [52, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [12, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 4, 2, 7], [0, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 23, 23, 17, 6, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.negative(tf.math.add(beta, tf.math.negative(grad))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.855819458722785, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.22057852149009705, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [143.8658926827567, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [14, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 3, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [57, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 4, 2, 7], [0, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 24, 24, 17, 7, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.negative(tf.math.add(beta, tf.math.negative(grad))))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), grad), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 4, 2, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 12, 7, 6, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), tf.math.add(sigma, tf.math.add(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 5, 2, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 3, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024903234631204, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [76, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1], [3, 0, 3, 4, 2, 1, 5], [2, 0, 2], [47, 2, 82], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 4, 2, 7], [0, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 2, 2, 2, 0, 1, 12, 7, 6, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, tf.math.add(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06709814071655273, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 0, 4, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 4, 2, 7], [0, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), alpha)))))))), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [21, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 4, 2, 7], [1, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [3, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 5, 2, 7], [4, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.07914285361766815, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 9, 6, 5, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.133449874675631, 2.4809582877420495, 2.409620328932674, 2.3392691866691164, 2.0752445037858425, 1.933588656987402, 2.463680137842874, 2.064356755933206, 2.026900574200819, 2.064777858662583, 2.0548504272456403], "accuracy": [0.32122573256492615, 0.27037379145622253, 0.10381719470024109, 0.18597279489040375, 0.284110426902771, 0.3369435966014862, 0.3739268183708191, 0.32584863901138306, 0.29982829093933105, 0.2879408299922943, 0.24276845157146454], "val_loss": [1.8820987428937639, 2.0660713740757535, 1.851968629019601, 1.587968008858817, 1.5603868961334229, 1.3922216892242432, 1.533090353012085, 1.4359751769474574, 1.388883318219866, 1.6514504637037004, 1.4581498077937536], "val_accuracy": [0.25866666436195374, 0.10466666519641876, 0.24166665971279144, 0.3956666588783264, 0.382999986410141, 0.5193333625793457, 0.4673333466053009, 0.36000001430511475, 0.4163333475589752, 0.2706666588783264, 0.44200000166893005]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [1, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [5, 9, 4, 2, 4, 8, 4, 9, 8, 8, 5, 0, 4, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [11, 78, 34, 66, 2, 57, 35, 9, 54, 64], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 3, 1, 2, 7], [4, 0, 2], [47, 2, 82], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.040571428835392, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303573262249049, 2.3021720406748063, 2.3020868677394484, 2.3015754542818727, 2.302466299838992, 2.302899023986149], "accuracy": [0.08928807079792023, 0.09800554811954498, 0.09166556596755981, 0.09272222965955734, 0.09166556596755981, 0.08928807079792023], "val_loss": [1.9714610236031669, 1.9714819363185339, 1.9715027127947127, 1.9715239661080497, 1.9715454918997628, 1.971566813332694], "val_accuracy": [0.03466666489839554, 0.032999999821186066, 0.032999999821186066, 0.032999999821186066, 0.03266666829586029, 0.03200000151991844]}}]