[{"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 0, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.771142840385437, "mapping_values": [1, 13, 13, 8, 5, 2, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.square(alpha)))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2826262780971627, 2.1231596080650035, 1.6060053596029256, 1.2901992769824546, 0.9613494047352099, 0.8863193035409151, 0.85378819687523, 0.809330968619999, 0.8035412455719885, 0.7841939450632925, 0.7404779187361672, 0.7422085219071353, 0.6889114770529025, 0.671563693277588, 0.6556494990832392, 0.6190514128205956, 0.621692611950421, 0.5932777328041519, 0.5791208276092384, 0.5689275925657957, 0.5436684207956568, 0.5617238682621049, 0.5568479792064979, 0.5370990337633957, 0.533698944832277, 0.5213501612980447, 0.508992783322767, 0.5046602327589661, 0.49286496982503925, 0.4880975950127973, 0.4788519600323871, 0.48808268064898963, 0.4680683111643763, 0.4577185506274939, 0.4472771695954153, 0.4434651985435816, 0.4273561526047099, 0.42717091536651025, 0.41946903719027845, 0.40982560157823117, 0.412836345159902, 0.4240156952668143, 0.40620282016819526, 0.404409714953428, 0.4018542642220845, 0.3882343135985716, 0.39666037343559546, 0.39110238104369804, 0.37142857229783627, 0.3723235425302271, 0.3644072364003604, 0.36460266416303677, 0.35412170211983207, 0.37381399362362167, 0.3741344092835714, 0.3789527432958857, 0.3909195487320683], "accuracy": [0.13868708908557892, 0.35503897070884705, 0.46123364567756653, 0.5609562993049622, 0.6472064256668091, 0.6659622192382812, 0.6770572066307068, 0.6872276067733765, 0.6913221478462219, 0.7079645991325378, 0.7186633348464966, 0.7296261787414551, 0.7284374833106995, 0.7405890822410583, 0.7537974119186401, 0.7676661014556885, 0.7635715007781982, 0.7798177003860474, 0.7824593782424927, 0.7860256433486938, 0.7926297783851624, 0.7954035401344299, 0.791969358921051, 0.8053097128868103, 0.8058380484580994, 0.8038568496704102, 0.8115176558494568, 0.8156121969223022, 0.8253863453865051, 0.8201030492782593, 0.8189142942428589, 0.8228767514228821, 0.8239334225654602, 0.8216879963874817, 0.8323867321014404, 0.8385946154594421, 0.8411042094230652, 0.843481719493866, 0.8393871188163757, 0.8446704745292664, 0.8466516733169556, 0.8364813327789307, 0.8448025584220886, 0.8494254350662231, 0.8392550349235535, 0.8540483713150024, 0.8479725122451782, 0.8488970994949341, 0.859199583530426, 0.8614450097084045, 0.8618412613868713, 0.8628978729248047, 0.8668603897094727, 0.8502179384231567, 0.8576145768165588, 0.8541803956031799, 0.8524633646011353], "val_loss": [1.901928084237235, 1.5617804186684745, 0.846760732786996, 0.7196825231824603, 0.68935079233987, 0.6151525122778756, 0.5995695080075946, 0.5845260109220233, 0.5785802432468959, 0.5699855600084577, 0.5496301991598946, 0.5122962679181781, 0.5117902755737305, 0.4918074778148106, 0.4834493739264352, 0.48269649914332796, 0.464786205972944, 0.4531440734863281, 0.4427053247179304, 0.4424642324447632, 0.4414468322481428, 0.43961293356759207, 0.4332897237368992, 0.4282623955181667, 0.4383997746876308, 0.4179149184908186, 0.4182411772864206, 0.4269231217248099, 0.4268458826201303, 0.42032099621636526, 0.41869702509471346, 0.42658512932913645, 0.4122484837259565, 0.40220712763922556, 0.41828388827187674, 0.4016062617301941, 0.40202980382101877, 0.40709827627454487, 0.397601808820452, 0.3931783778326852, 0.3897132873535156, 0.3954818674496242, 0.3925261412348066, 0.37597416979925974, 0.3907049468585423, 0.4070538197244917, 0.3765332783971514, 0.3733918751989092, 0.4023703762463161, 0.3878424082483564, 0.38117257186344694, 0.38669921670641216, 0.39710211753845215, 0.38862472772598267, 0.4174913593700954, 0.42330064943858553, 0.41712719202041626], "val_accuracy": [0.4000000059604645, 0.5059999823570251, 0.67166668176651, 0.7139999866485596, 0.7229999899864197, 0.7300000190734863, 0.7353333234786987, 0.7473333477973938, 0.7463333606719971, 0.7576666474342346, 0.7636666893959045, 0.7739999890327454, 0.7746666669845581, 0.7860000133514404, 0.7963333129882812, 0.7926666736602783, 0.7993333339691162, 0.8033333420753479, 0.8116666674613953, 0.8133333325386047, 0.8146666884422302, 0.8223333358764648, 0.8180000185966492, 0.8220000267028809, 0.8213333487510681, 0.8243333101272583, 0.8276666402816772, 0.8193333148956299, 0.8339999914169312, 0.8236666917800903, 0.8326666951179504, 0.8370000123977661, 0.8326666951179504, 0.8379999995231628, 0.8379999995231628, 0.840666651725769, 0.8493333458900452, 0.846666693687439, 0.8423333168029785, 0.8496666550636292, 0.847000002861023, 0.8450000286102295, 0.8516666889190674, 0.846666693687439, 0.847000002861023, 0.8550000190734863, 0.8576666712760925, 0.8560000061988831, 0.8560000061988831, 0.859000027179718, 0.8603333234786987, 0.8616666793823242, 0.8613333106040955, 0.8536666631698608, 0.859666645526886, 0.8476666808128357, 0.847000002861023]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 3, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1], [1, 7, 6, 5, 5, 7, 3, 9], [3, 2, 0, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [2, 3, 9, 1, 2], [3, 2, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 12, 8, 2, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(alpha)))))), tf.math.square(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(beta))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(beta, beta))", "other_info": {"loss": [18.91877604973173, 309.58318688711705, 890.8000610980375, 4182.731428673144, 5543.305674510468, 6481.936838746842, 6659.115333824173], "accuracy": [0.10170386731624603, 0.10368511080741882, 0.09985470771789551, 0.09642054885625839, 0.09932637959718704, 0.1010434553027153, 0.09721305221319199], "val_loss": [110.68157305036273, 483.23123604910717, 1133.6094447544642, 4866.839983258928, 5737.392159598215, 5664.136997767857, 6662.615513392857], "val_accuracy": [0.09566666930913925, 0.10366666316986084, 0.09799999743700027, 0.10366666316986084, 0.09666666388511658, 0.10366666316986084, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 7, 1, 5, 5, 7, 3, 9], [2, 3, 3, 3, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 0, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.square(beta))), grad), grad)), tf.math.add(tf.math.add(beta, grad), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [186.28161927488864, 2763.5116134319073, 12333.737519193304, 32994.685587377, 70933.1505879755, 128222.97571118412], "accuracy": [0.09325055778026581, 0.10421344637870789, 0.09906221181154251, 0.10315678268671036, 0.09747721254825592, 0.09655263274908066], "val_loss": [589.4053083147321, 4172.609375, 13650.59095982143, 31907.86160714286, 61829.87053571428, 106301.72767857143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 3, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 2, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1], [3, 4, 6, 5, 5, 7, 3, 9], [2, 3, 0, 4, 1], [98], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [5, 3, 9, 1, 2], [1, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 5, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 2, 2, 1, 2, 2, 0], [11, 63, 29, 49, 25], [1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 0, 4, 1], [97], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 9, 4, 1, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))))), alpha)), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.square(grad))), tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [60.72478754066001, 745.0634055227698, 3146.9347899133, 8259.2363473441, 17600.15703579035, 31658.71796833724], "accuracy": [0.09391097724437714, 0.10434553027153015, 0.09945846349000931, 0.10315678268671036, 0.09774138033390045, 0.09655263274908066], "val_loss": [172.98366001674108, 1084.717808314732, 3440.1256975446427, 7943.744419642857, 15295.45424107143, 26194.129464285714], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 3, 3, 3, 3, 6, 2, 5, 8, 8, 4, 4, 6, 3, 6, 3, 7], [3, 0, 1, 1, 1, 1, 1, 2, 0, 2, 3, 0, 2], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [3, 6, 1, 5, 5, 7, 3, 9], [2, 2, 3, 3, 1], [98, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 9, 9, 1, 2], [2, 2, 2], [66, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1105871071.8910246, 21207012686.48052, 99865834410.6554, 272592226058.65118, 592253332793.6516, 1077302297722.945], "accuracy": [0.09272222965955734, 0.10447761416435242, 0.09879804402589798, 0.10289261490106583, 0.09747721254825592, 0.09655263274908066], "val_loss": [4148183771.428571, 33175164635.42857, 111954107245.71428, 265359832795.42856, 518263593837.7143, 895544477988.5714], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 0, 8, 6, 2, 9, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [72, 32, 29, 49, 25], [1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1], [8, 0, 6, 5, 5, 7, 3, 9], [2, 3, 0, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 7, 7, 5, 2, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.square(beta))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07198520749807358, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [8, 8, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 1, 1, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [3, 7, 2, 9, 4, 7, 3, 9], [2, 3, 0, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 1, 0, 1, 1], [1, 3, 2, 1, 2], [0, 3, 0], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026330093146474, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [2, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1], [3, 4, 6, 5, 5, 7, 3, 9], [2, 3, 0, 1, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [1, 3, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.pow(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [0, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1], [3, 7, 1, 5, 5, 7, 3, 9], [2, 2, 3, 0, 1], [98, 55], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 1, 1, 1, 1], [1, 8, 9, 1, 2], [2, 2, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 2, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))), grad)))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11068551242351532, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1], [3, 4, 1, 5, 5, 7, 3, 9], [2, 3, 5, 4, 1], [98, 55], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [1, 0, 0, 1, 1, 1], [1, 9, 1, 1, 2, 0], [3, 0, 2], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.pow(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, grad)), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07198520749807358, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [8, 8, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [3, 7, 2, 9, 4, 7, 3, 9], [3, 3, 0, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 0, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [298134558.278556, 5715588230.170916, 26912923493.81165, 73458230154.7357, 159597065141.47562, 290301862756.86487], "accuracy": [0.09272222965955734, 0.10447761416435242, 0.09879804402589798, 0.10289261490106583, 0.09734513610601425, 0.09655263274908066], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [3, 7, 2, 9, 4, 7, 3, 9], [2, 3, 0, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 2, 1, 2], [0, 1, 0], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302882605602933, 2.3028156420715638, 2.3028294952270647, 2.302912447478053, 2.3028754024394766, 2.3028316571806653, 2.3027834889123846], "accuracy": [0.09417514503002167, 0.09576013684272766, 0.09734513610601425, 0.08994849026203156, 0.09549596905708313, 0.08968432247638702, 0.09549596905708313], "val_loss": [1.9736148970467704, 1.9736318588256836, 1.9736616270882743, 1.973649365561349, 1.9736387389046806, 1.97361843926566, 1.9735874448503767], "val_accuracy": [0.10199999809265137, 0.10366666316986084, 0.09666666388511658, 0.0949999988079071, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [8, 8, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 1, 1, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [3, 7, 2, 9, 4, 7, 3, 9], [2, 2, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 3, 2, 1, 2, 3], [0, 1, 2, 3, 1, 1, 1], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 6, 7, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, beta)), tf.math.subtract(sigma, tf.math.add(alpha, tf.math.multiply(alpha, alpha))))", "other_info": {"loss": [2453902290.7971187, 5.4461672909743815, 10.791791743574645, 14.487500909863996, 45.33591393916803, 72.1387474272686, 107.60241983393794], "accuracy": [0.07053229212760925, 0.10566636174917221, 0.10196803510189056, 0.09325055778026581, 0.1022322028875351, 0.10553427785634995, 0.10460969805717468], "val_loss": [2.84562805720738, 7.65527207510812, 10.458366394042969, 32.77096775599888, 46.90073721749442, 85.78679547991071, 100.54787990025112], "val_accuracy": [0.10233332961797714, 0.10366666316986084, 0.10233332961797714, 0.09799999743700027, 0.0949999988079071, 0.10066666454076767, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1], [3, 4, 0, 5, 5, 7, 3, 9], [0, 1, 0, 4, 1], [23, 34], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 9, 9, 1, 2], [3, 0, 2], [73, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 2, 8, 8, 5, 3, 2, 1, 0, 0, 0, 0, 3, 3, 0, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.square(alpha))), tf.math.add(beta, tf.math.square(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026330093146474, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 1, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 0, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [8, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 1, 0, 1, 11, 11, 6, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [2.3015669852735314, 2.301522317296085, 2.303272451628248, 2.302334727675388, 2.3032519750591316, 2.3001338280801367], "accuracy": [0.08426892012357712, 0.09417514503002167, 0.09140139818191528, 0.0874389111995697, 0.09298639744520187, 0.09087307006120682], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 8, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [1, 0, 1, 1, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 7, 1, 5, 5, 7, 3, 9, 6], [2, 2, 3, 4, 1, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 1, 0, 1, 1], [1, 3, 9, 1, 2], [1, 0, 2], [23, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 2, 1, 0, 15, 15, 9, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, beta), beta)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3015669852735314, 2.301522317296085, 2.303272451628248, 2.302334727675388, 2.3032519750591316, 2.3001338280801367], "accuracy": [0.08426892012357712, 0.09417514503002167, 0.09140139818191528, 0.0874389111995697, 0.09298639744520187, 0.09087307006120682], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 0, 1, 0, 2, 1, 2, 2, 0], [31, 4, 29, 49, 25], [1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1], [1, 6, 6, 5, 5, 7, 3, 9], [2, 3, 0, 4, 1], [79, 72, 48], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [2, 0, 2], [23, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3015669852735314, 2.301522317296085, 2.303272451628248, 2.302334727675388, 2.3032519750591316, 2.3001338280801367], "accuracy": [0.08426892012357712, 0.09417514503002167, 0.09140139818191528, 0.0874389111995697, 0.09298639744520187, 0.09087307006120682], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [3, 2, 1, 0, 2, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 0, 4, 1], [59], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [2, 0, 2], [92, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3015669852735314, 2.301522317296085, 2.303272451628248, 2.302334727675388, 2.3032519750591316, 2.3001338280801367], "accuracy": [0.08426892012357712, 0.09417514503002167, 0.09140139818191528, 0.0874389111995697, 0.09298639744520187, 0.09087307006120682], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 5, 8, 4, 4, 6, 3, 6], [1, 0, 1, 1, 1, 1, 2, 2, 0], [31, 32, 29, 49, 25], [1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1], [5, 7, 2, 9, 4, 7, 3, 9], [2, 3, 0, 1, 1], [59], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 1, 0, 1, 1], [1, 3, 5, 1, 2], [1, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3015669852735314, 2.301522317296085, 2.303272451628248, 2.302334727675388, 2.3032519750591316, 2.3001338280801367], "accuracy": [0.08426892012357712, 0.09417514503002167, 0.09140139818191528, 0.0874389111995697, 0.09298639744520187, 0.09087307006120682], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]