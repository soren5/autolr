[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 2, 8, 6, 2, 4, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [23, 52, 13]], "fitness": -0.7317143082618713, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2916315590716496, 2.21667230237886, 2.017838677946193, 1.588576630358179, 1.3946908744035569, 1.2288711917178348, 0.9548540665898356, 0.9097630957476357, 0.8711715702524967, 0.8145699192425515, 0.8179741296801569, 0.7771747791693117, 0.7429502636623294, 0.7385839678434695, 0.7250839365928432, 0.7075778400783037, 0.6977695270284386, 0.6885924714195132, 0.6613093867687391, 0.6311715173289887, 0.6130249504919585, 0.6093259754670278, 0.5995924074526051, 0.585804195357446, 0.5811809271538593, 0.54139968985501, 0.5476928552175478, 0.5507348501734242, 0.5383898352572096, 0.5158090220505709, 0.5182174403102816, 0.5072007005351047, 0.5014980116760915, 0.48355739001096626, 0.4894672774281311, 0.4888871646064415, 0.4767696842297335, 0.4790923880501005, 0.45815246021506684, 0.45243038262090884, 0.44842309979179423, 0.44707352067060346, 0.4481942805206582, 0.43176716549946664, 0.4249885703799054, 0.421410153952446, 0.4246581222922527, 0.41677563432704945, 0.4089691655046322, 0.40874312608438224, 0.40311034471524815, 0.3947242470055901, 0.3854345027025208, 0.38729219583629887, 0.38120219899505564, 0.3719082249705156, 0.3755936850181676], "accuracy": [0.12362963706254959, 0.28661999106407166, 0.392550528049469, 0.4756307005882263, 0.5322942733764648, 0.5974111557006836, 0.6470743417739868, 0.6593580842018127, 0.672170102596283, 0.6885483860969543, 0.6870955228805542, 0.7041342258453369, 0.7094175219535828, 0.7166820764541626, 0.7296261787414551, 0.7313432693481445, 0.7391361594200134, 0.7396644949913025, 0.7460044622421265, 0.7611940503120422, 0.7701756954193115, 0.7691190242767334, 0.769911527633667, 0.7784969210624695, 0.7812706232070923, 0.7887993454933167, 0.7903843522071838, 0.7985734939575195, 0.8001585006713867, 0.8017435073852539, 0.7977809906005859, 0.8047813773155212, 0.8086118102073669, 0.8132346868515015, 0.8149517774581909, 0.8220842480659485, 0.8212917447090149, 0.8206313848495483, 0.8241975903511047, 0.828820526599884, 0.8294808864593506, 0.8334434032440186, 0.8300092220306396, 0.8356888294219971, 0.8356888294219971, 0.8378021121025085, 0.8338396549224854, 0.8407079577445984, 0.8426892161369324, 0.844010055065155, 0.8444063067436218, 0.8486329317092896, 0.854708731174469, 0.854708731174469, 0.8565579056739807, 0.8593316674232483, 0.8628978729248047], "val_loss": [1.932469299861363, 1.819972106388637, 1.4816052913665771, 0.9814168385096959, 0.773117014339992, 0.7025876896721976, 0.6843255928584507, 0.6896827391215733, 0.6094371250697544, 0.6026796613420758, 0.5879294531685966, 0.5872923476355416, 0.5610450165612357, 0.5782098940440586, 0.5462010417665754, 0.5527160848890033, 0.527539815221514, 0.5179035663604736, 0.4944359745298113, 0.4820127487182617, 0.48414201395852224, 0.47479546070098877, 0.4582944427217756, 0.4539450407028198, 0.4502000297818865, 0.448162453515189, 0.4498558044433594, 0.44341182708740234, 0.4296576295580183, 0.42024606466293335, 0.41289393390928, 0.4115357143538339, 0.4151713252067566, 0.4127445561545236, 0.40409205641065327, 0.3997831514903477, 0.40145998341696604, 0.3962626542363848, 0.39077073335647583, 0.38774915252413067, 0.39058520112718853, 0.3885952149118696, 0.38336193561553955, 0.38057013920375277, 0.377585232257843, 0.37314129727227346, 0.3705544982637678, 0.3712884954043797, 0.3673796057701111, 0.3694279704775129, 0.3650503328868321, 0.35703044278281076, 0.3614909904343741, 0.3647744911057608, 0.36465764897210257, 0.3616720012256077, 0.36606193440301077], "val_accuracy": [0.3566666543483734, 0.4506666660308838, 0.5226666927337646, 0.6359999775886536, 0.6853333115577698, 0.7173333168029785, 0.699999988079071, 0.7143333554267883, 0.7253333330154419, 0.7356666922569275, 0.7419999837875366, 0.7310000061988831, 0.7506666779518127, 0.753333330154419, 0.7576666474342346, 0.7559999823570251, 0.7720000147819519, 0.7763333320617676, 0.7850000262260437, 0.7803333401679993, 0.7816666960716248, 0.7946666479110718, 0.8083333373069763, 0.8053333163261414, 0.8069999814033508, 0.812666654586792, 0.812666654586792, 0.8193333148956299, 0.8216666579246521, 0.8226666450500488, 0.8309999704360962, 0.8306666612625122, 0.8330000042915344, 0.8259999752044678, 0.828000009059906, 0.8370000123977661, 0.8403333425521851, 0.8389999866485596, 0.8373333215713501, 0.8386666774749756, 0.8460000157356262, 0.8476666808128357, 0.8506666421890259, 0.8450000286102295, 0.8479999899864197, 0.8473333120346069, 0.8476666808128357, 0.8516666889190674, 0.8539999723434448, 0.8543333411216736, 0.8553333282470703, 0.862333357334137, 0.8560000061988831, 0.8586666584014893, 0.8569999933242798, 0.859000027179718, 0.8600000143051147]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7265714406967163, "mapping_values": [1, 14, 14, 10, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.296685449514312, 2.255308015707729, 2.1713083478138824, 1.9853192418715295, 1.6604740388357817, 1.413442329660682, 1.367868573752849, 1.2142013316739584, 0.9727284556382431, 0.9002798033380993, 0.9112786875897237, 0.8486871154017657, 0.8192044269958303, 0.8080773952693483, 0.8265546492424308, 0.7845574085974754, 0.7563293183704866, 0.7285707737114356, 0.7366394977827176, 0.731265579145724, 0.7123088328798355, 0.6982036372611016, 0.6788953734489716, 0.6775403315947591, 0.6672137532299064, 0.6271857979700408, 0.622576180513367, 0.617467721542111, 0.6055920846851793, 0.5980776760084061, 0.585183944440458, 0.5753638928261856, 0.5691188542739889, 0.5607088709220815, 0.5518777060896067, 0.5548512206070018, 0.5405782249113666, 0.5420176263309631, 0.5303105890018719, 0.5359183080034832, 0.5200448850236943, 0.5061974345637885, 0.5156274078119354, 0.508615153277665, 0.5071505804567951, 0.4940789698719931, 0.4995821946372036, 0.4954155564875005, 0.49340683748110836, 0.48770900043309434, 0.4770906184288363], "accuracy": [0.10896842926740646, 0.21318188309669495, 0.33403778076171875, 0.4095892310142517, 0.45330867171287537, 0.5083872675895691, 0.5480121374130249, 0.6003170013427734, 0.6524897813796997, 0.6573768258094788, 0.672170102596283, 0.6915863156318665, 0.6900013089179993, 0.6848500967025757, 0.6888125538825989, 0.711530864238739, 0.7104741930961609, 0.7199841737747192, 0.7213049530982971, 0.728701651096344, 0.7301545143127441, 0.7390040755271912, 0.7416457533836365, 0.7429665923118591, 0.7489103078842163, 0.7568352818489075, 0.7618544697761536, 0.7619865536689758, 0.7646281719207764, 0.7720248103141785, 0.7781006693840027, 0.7837802171707153, 0.7824593782424927, 0.7890635132789612, 0.7950072884559631, 0.7895918488502502, 0.8034605979919434, 0.7998943328857422, 0.7935543656349182, 0.7936864495277405, 0.800818920135498, 0.8067626357078552, 0.8082155585289001, 0.8082155585289001, 0.8107251524925232, 0.8078193068504333, 0.8100647330284119, 0.8145555257797241, 0.8152159452438354, 0.8162726163864136, 0.8148196935653687], "val_loss": [1.9494545800345284, 1.8926785332815987, 1.776588031223842, 1.507632119315011, 1.1085666588374548, 0.8471708127430507, 0.7444316148757935, 0.7065140008926392, 0.6574302230562482, 0.690692595073155, 0.6718258687428066, 0.6147345474788121, 0.6043529510498047, 0.6012405157089233, 0.595583609172276, 0.5952613694327218, 0.5618044989449638, 0.5718733583177839, 0.5700515678950718, 0.5572447436196464, 0.548240201813834, 0.5304449456078666, 0.521350622177124, 0.5197522299630302, 0.49464753695896696, 0.4833711726324899, 0.47807531697409494, 0.475762094770159, 0.4717552661895752, 0.46622465338025776, 0.45817945684705463, 0.4531693458557129, 0.4514186041695731, 0.44771953991481234, 0.44438070910317556, 0.44073499952043804, 0.43673365456717356, 0.43311816453933716, 0.42859753540584017, 0.421494049685342, 0.41666243757520405, 0.4192523275102888, 0.42397700037275043, 0.42443521533693584, 0.4169739144189017, 0.4089337502207075, 0.40716961451939176, 0.4064496159553528, 0.40902024507522583, 0.40446676526750835, 0.40506337370191303], "val_accuracy": [0.24300000071525574, 0.41466665267944336, 0.4593333303928375, 0.5213333368301392, 0.596666693687439, 0.6776666641235352, 0.6930000185966492, 0.7166666388511658, 0.7213333249092102, 0.7129999995231628, 0.7329999804496765, 0.7360000014305115, 0.7276666760444641, 0.7296666502952576, 0.7409999966621399, 0.734000027179718, 0.7493333220481873, 0.7593333125114441, 0.7706666588783264, 0.7636666893959045, 0.7609999775886536, 0.7693333625793457, 0.7806666493415833, 0.7793333530426025, 0.7883333563804626, 0.7826666831970215, 0.7846666574478149, 0.7919999957084656, 0.7990000247955322, 0.7983333468437195, 0.8003333210945129, 0.8009999990463257, 0.8076666593551636, 0.8133333325386047, 0.8159999847412109, 0.8209999799728394, 0.8190000057220459, 0.8233333230018616, 0.8243333101272583, 0.824999988079071, 0.828000009059906, 0.8293333053588867, 0.82833331823349, 0.824999988079071, 0.8299999833106995, 0.831333339214325, 0.8286666870117188, 0.8293333053588867, 0.8293333053588867, 0.8309999704360962, 0.8293333053588867]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82, 51], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 5, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.24628572165966034, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [3.04873699421392, 2.2627400416330246, 2.295882505212304, 2.3307172411610155, 2.30190445255405, 3.0028687763869124, 2.316404623582835, 2.305779679733859], "accuracy": [0.1776515692472458, 0.15149913728237152, 0.12296922504901886, 0.1208558976650238, 0.10989301651716232, 0.15731078386306763, 0.10302469879388809, 0.09694888442754745], "val_loss": [1.807302611214774, 1.9738380568368095, 1.856635638645717, 1.9748099190848214, 1.964437689099993, 1.9956058774675642, 1.978064741407122, 1.9748021534511022], "val_accuracy": [0.13633333146572113, 0.10366666316986084, 0.23466666042804718, 0.09799999743700027, 0.10366666316986084, 0.0949999988079071, 0.09799999743700027, 0.0949999988079071]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [8, 5, 2, 6, 5, 2, 2, 1, 6, 8, 4, 4], [2, 0, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 3], [31, 32, 3, 93], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 2, 2], [20, 52, 13]], "fitness": -0.1662857085466385, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), beta)", "other_info": {"loss": [3.762088900906078, 2.479198882451005, 2.1923813035443724, 36338645.056463905, NaN, NaN, NaN], "accuracy": [0.1624620258808136, 0.1644432693719864, 0.19561484456062317, 0.16853784024715424, 0.0956280529499054, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.00223548071725, 1.8146657943725586, 1.8514956065586634, 3.3688345938827484e+18, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.24500000476837158, 0.1940000057220459, 0.10333333164453506, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82, 51], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 5, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.11371428519487381, "mapping_values": [1, 14, 14, 10, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3024895124116735, 2.3006701464697734, 2.3004492266366134, 2.300587491871989, 2.2996622267148563, 2.300200960214474, 2.3009983073954947, 2.301478363944555, 2.301601528034958, 2.3017454998226468, 2.302087545961736, 2.3023152997575305, 2.3023226161627264, 2.302397761945129, 2.3024871306506918, 2.3024956965569285, 2.302549845160526], "accuracy": [0.09430722147226334, 0.09826971590518951, 0.09285431355237961, 0.09734513610601425, 0.09602430462837219, 0.10196803510189056, 0.09972262382507324, 0.10038304328918457, 0.1010434553027153, 0.09760929644107819, 0.10157178342342377, 0.10038304328918457, 0.10051512718200684, 0.1018359512090683, 0.10051512718200684, 0.10276053100824356, 0.10196803510189056], "val_loss": [1.9706080981663294, 1.9705345290047782, 1.9707996504647392, 1.971285615648542, 1.971754687173026, 1.972193990434919, 1.9725544793265206, 1.9728190558297294, 1.9730158533368791, 1.9731970514569963, 1.9733613559177943, 1.9734885351998466, 1.973562444959368, 1.9736051559448242, 1.9736268860953194, 1.9736415999276298, 1.9736443247113908], "val_accuracy": [0.052666667848825455, 0.06499999761581421, 0.08399999886751175, 0.09266666322946548, 0.09933333098888397, 0.10266666859388351, 0.09733333438634872, 0.08933333307504654, 0.08566666394472122, 0.0963333323597908, 0.11100000143051147, 0.11866666376590729, 0.1133333370089531, 0.11566666513681412, 0.11166666448116302, 0.10499999672174454, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [3, 7, 6, 8, 5, 7, 3, 9, 9, 0], [4, 3, 3, 4, 1], [98, 73], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [1, 0, 1, 1, 1, 1], [1, 5, 9, 1, 2], [0, 0, 2], [4, 52, 13]], "fitness": -0.10400000214576721, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 10, 4, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30202618525123, 2.302571223916127, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10474177449941635, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973633084978376, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10899999737739563, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [8, 5, 2, 6, 2, 2, 2, 5, 6, 8, 4, 4], [3, 2, 2, 0, 3, 1, 1, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 0, 8, 6, 5, 2, 0, 5, 5, 8, 4, 4, 3, 2, 9], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82, 51], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [27], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 2, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), grad), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82, 51], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 4, 5, 0, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 62, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [975072107.4534671, 18571466666.249638, 87370608845.04346, 238964166578.6353, 519341012919.23395, 943570880134.6443], "accuracy": [0.09470347315073013, 0.0956280529499054, 0.10315678268671036, 0.1026284471154213, 0.10077928751707077, 0.10434553027153015], "val_loss": [3657808603.428571, 29252943872.0, 98718480091.42857, 233987347017.14285, 456991993270.8571, 789669234980.5714], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [7, 3, 9, 1, 2], [3, 0, 0], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3030625469475816, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82, 51], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 7, 6, 5, 9, 7, 3, 5], [1, 5, 3, 4, 4], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 1, 1, 1, 1], [1, 5, 9, 1, 2], [1, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [3, 7, 6, 5, 5, 9, 3, 9], [0, 2, 5, 4, 1], [46], [1, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 0, 1, 1], [1, 5, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 2, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(sigma), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [45.31873575879945, 521.8644179501758, 2149.05820130628, 5604.901104182489, 11899.148621306837, 21333.73769074635], "accuracy": [0.0948355570435524, 0.09576013684272766, 0.10289261490106583, 0.10302469879388809, 0.10091137140989304, 0.10421344637870789], "val_loss": [125.40030779157367, 752.2601143973214, 2355.3069893973216, 5407.592215401785, 10383.68247767857, 17753.565290178572], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 2, 6, 6, 2, 0, 5, 6, 8, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 1, 1, 1, 1], [1, 3, 9, 1, 2], [2, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09021265059709549, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82, 51], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 0, 1, 1], [1, 5, 9, 1, 2], [2, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3030625469475816, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 5, 8, 4, 4, 3, 2, 9], [3, 0, 0, 0, 3, 1, 2, 0, 0], [31, 32, 65, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 10, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [298108644.06897366, 5676331999.945053, 26702484846.941223, 73030412750.29454, 158714140868.65778, 288358096327.9377], "accuracy": [0.09470347315073013, 0.0956280529499054, 0.10315678268671036, 0.1026284471154213, 0.10077928751707077, 0.10434553027153015], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6, 3, 6, 1, 3, 2, 5, 8], [2, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 2, 0, 3, 1, 1, 2], [31, 32, 92, 66, 93, 84, 65, 12], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [3, 7, 6, 5, 9, 7, 3, 9], [4, 3, 3, 3, 0], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 5, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 38, 21, 17, 8, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.pow(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))))))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), alpha))))), tf.math.add(alpha, tf.math.square(alpha))))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 3, 6, 9, 2, 8, 5], [3, 0, 2, 0, 3, 1, 0, 0, 0, 2, 0], [31, 32, 3, 66, 82, 51, 83], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 7, 6, 5, 5, 9, 3, 9], [1, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [3], [64], [0, 1, 1, 1, 1, 1], [1, 5, 9, 1, 2], [3, 0, 2], [73, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 19, 11, 7, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))))))), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1196945393.6455157, 22798097505.787876, 107256265540.13367, 293353949109.6109, 637549668159.6703, 1158338311920.1416], "accuracy": [0.09470347315073013, 0.0956280529499054, 0.10315678268671036, 0.1026284471154213, 0.10077928751707077, 0.10434553027153015], "val_loss": [4490224493.714286, 35910797604.57143, 121186928932.57143, 287243904146.2857, 561004169508.5714, 969397913892.5714], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 3, 2], [24, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), sigma), sigma)", "other_info": {"loss": [2.3029090597991377, 2.3019637502242767, 2.301952641795356, 2.301589099344655, 2.300427802659895, 2.301319954874273], "accuracy": [0.09325055778026581, 0.09285431355237961, 0.09192973375320435, 0.0936468094587326, 0.09245806187391281, 0.09034473448991776], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 5, 8, 4, 4, 3, 2, 9], [3, 0, 0, 0, 3, 1, 2, 0, 0], [31, 32, 3, 66, 82, 51], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3029090597991377, 2.3019637502242767, 2.301952641795356, 2.301589099344655, 2.300427802659895, 2.301319954874273], "accuracy": [0.09325055778026581, 0.09285431355237961, 0.09192973375320435, 0.0936468094587326, 0.09245806187391281, 0.09034473448991776], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 5, 8, 4, 4, 3, 2, 9], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82, 51], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 1, 1, 1], [6, 5, 9, 1, 2], [3, 0, 2], [32, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 13, 13, 10, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(sigma), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029090597991377, 2.3019637502242767, 2.301952641795356, 2.301589099344655, 2.300427802659895, 2.301319954874273], "accuracy": [0.09325055778026581, 0.09285431355237961, 0.09192973375320435, 0.0936468094587326, 0.09245806187391281, 0.09034473448991776], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]