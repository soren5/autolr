[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 9, 2, 3, 0, 6, 0, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [0, 3, 3, 4], [4, 0], [77, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.838857114315033, "mapping_values": [1, 4, 4, 3, 1, 1, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3890439795465235, 2.304013809806966, 2.198639988631557, 1.6937693453357834, 1.4706012914839233, 1.104448695925044, 0.8733194137781587, 0.7048804788557357, 0.6624800728973759, 0.7093787437038903, 0.6318587438384099, 0.5987364582066932, 0.5777969639991898, 0.55650150426359, 0.5351575898409299, 0.5366430836598698, 0.5449012721912216, 0.511457521791676, 0.5072200023707555, 0.48768966062319924, 0.48309799165553136, 0.4690549637167256, 0.47405367425215195, 0.46328288089204, 0.44938910344037175, 0.42866812738697085, 0.42931080563209156, 0.4223109524381663, 0.4180155803168124, 0.4203060594658102, 0.39849372766493746, 0.39325016961357834], "accuracy": [0.2619204819202423, 0.1274600476026535, 0.2172764539718628, 0.42583543062210083, 0.47325319051742554, 0.6126006841659546, 0.6827367544174194, 0.7405890822410583, 0.7559106945991516, 0.7359662055969238, 0.7585523724555969, 0.776251494884491, 0.7832518815994263, 0.793950617313385, 0.800818920135498, 0.7959318161010742, 0.7946110367774963, 0.8101968169212341, 0.8053097128868103, 0.8182538747787476, 0.81548011302948, 0.8240655064582825, 0.8203672170639038, 0.8276317715644836, 0.8358209133148193, 0.839519202709198, 0.8372738361358643, 0.8430854678153992, 0.842028796672821, 0.8421608805656433, 0.8515387773513794, 0.8491612672805786], "val_loss": [1.9797328540257044, 1.9659159524100167, 1.4660757609776087, 1.7429484639848982, 1.363210882459368, 0.6490391152245658, 0.5606367758342198, 0.5005999803543091, 0.5150979927607945, 0.5095041990280151, 0.47719151633126394, 0.4616394894463675, 0.4428086110523769, 0.43106032269341604, 0.4229646154812404, 0.5510862214224679, 0.4124699575560434, 0.40366642815726145, 0.41248790706907, 0.40159944125584196, 0.4102897644042969, 0.3847119297300066, 0.40252710240227835, 0.3972221187182835, 0.37444898060389925, 0.3785479579653059, 0.36190831661224365, 0.37077208927699495, 0.3803108675139291, 0.36779106514794485, 0.36401500020708355, 0.3547958220754351], "val_accuracy": [0.16066665947437286, 0.1693333387374878, 0.46799999475479126, 0.32499998807907104, 0.5400000214576721, 0.7023333311080933, 0.7536666393280029, 0.7776666879653931, 0.7793333530426025, 0.7606666684150696, 0.7823333144187927, 0.7926666736602783, 0.8103333115577698, 0.8076666593551636, 0.8083333373069763, 0.7720000147819519, 0.8266666531562805, 0.824999988079071, 0.8273333311080933, 0.82833331823349, 0.8173333406448364, 0.8396666646003723, 0.8263333439826965, 0.8296666741371155, 0.8450000286102295, 0.8423333168029785, 0.8526666760444641, 0.8443333506584167, 0.8393333554267883, 0.8463333249092102, 0.8433333039283752, 0.8483333587646484]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 4, 3, 2, 2, 1, 0, 2, 8, 0, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8345714211463928, "mapping_values": [1, 4, 4, 3, 1, 1, 22, 22, 14, 8, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.add(beta, grad)), tf.math.add(tf.math.subtract(grad, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.square(grad)))))), tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3890720974137802, 2.303932411543776, 2.2021175276223834, 1.646959118115006, 1.009442785247253, 0.7929228959129534, 0.7344929566866434, 0.6747155208251322, 0.6491121144389842, 0.6174052851925342, 0.6089905730060315, 0.5642680539557049, 0.5554698552075725, 0.552080141523369, 0.5111161899832749, 0.5083284556763347, 0.5071330928704868, 0.47750802153310345, 0.47407880147938497, 0.4851968744096818, 0.4654178082580816, 0.47335668911771406, 0.462959786408361, 0.45246434927364587, 0.419618969170834, 0.4133354118038493, 0.4131750647835271, 0.41506201007567406, 0.4090936939438588, 0.3949776250869528, 0.39130461832803426, 0.39197136128126686, 0.38235119877553114, 0.3755480478059, 0.3617706884167623, 0.3495759263786232, 0.3403125531039517, 0.34028003066915957, 0.3615145304805772, 0.32198952770409506, 0.3616076250117862, 0.3337919173766877, 0.3165872654839592, 0.3203035756353185, 0.31937118590059155, 0.3111683296418823, 0.2980156925612311, 0.3011022798688483, 0.29270002488777574, 0.29001960120952486, 0.2883987086182336, 0.2803049181131497, 0.29594276774797174, 0.2815584661804406, 0.27244240906039846, 0.27165442794510214], "accuracy": [0.2619204819202423, 0.12600713968276978, 0.21965394914150238, 0.43164706230163574, 0.6268656849861145, 0.7029454708099365, 0.7224937081336975, 0.7491744756698608, 0.7553823590278625, 0.7676661014556885, 0.7638356685638428, 0.7893276810646057, 0.7924976944923401, 0.7938185334205627, 0.8078193068504333, 0.8095363974571228, 0.8049134612083435, 0.8207634687423706, 0.8222163319587708, 0.8157442808151245, 0.8245938420295715, 0.8202351331710815, 0.826310932636261, 0.8277638554573059, 0.8416325449943542, 0.8485008478164673, 0.8444063067436218, 0.8418967127799988, 0.8473120927810669, 0.850350022315979, 0.8553691506385803, 0.854708731174469, 0.8589354157447815, 0.8597279191017151, 0.8615770936012268, 0.8709549307823181, 0.874389111995697, 0.8725399374961853, 0.8631620407104492, 0.8765024542808533, 0.8622375130653381, 0.8704266548156738, 0.8766345381736755, 0.8790120482444763, 0.8795403242111206, 0.8786157965660095, 0.8850878477096558, 0.8840311765670776, 0.8912957310676575, 0.8881257176399231, 0.8907673954963684, 0.8907673954963684, 0.8887861371040344, 0.8938053250312805, 0.898428201675415, 0.8942015767097473], "val_loss": [1.979722499847412, 1.9654928616115026, 1.6459878512791224, 0.8865323747907367, 0.6190943888255528, 0.5798839330673218, 0.5399642671857562, 0.4727455036980765, 0.47157379559108187, 0.5159194469451904, 0.44066739082336426, 0.42317914962768555, 0.4276899014200483, 0.4112418634550912, 0.4196325881140573, 0.41880991629191805, 0.4005988325391497, 0.3971600617681231, 0.39031256096703665, 0.40315109491348267, 0.4465284858431135, 0.3830062917300633, 0.40710154601505827, 0.37279708896364483, 0.366142851965768, 0.40860346385410856, 0.347155008997236, 0.3639501929283142, 0.3500727755682809, 0.3620061533791678, 0.3542010017803737, 0.3560112289019993, 0.37705063819885254, 0.3433167168072292, 0.3573926602091108, 0.34965187311172485, 0.3626612424850464, 0.3600601553916931, 0.3411451918738229, 0.36184342418398174, 0.34818488359451294, 0.35580404315676006, 0.35210077251706806, 0.3339687245232718, 0.34777686425617765, 0.3318457773753575, 0.33743035793304443, 0.34234572308404104, 0.34029126167297363, 0.3401089310646057, 0.32650684458868845, 0.33744951656886507, 0.33973197426114765, 0.3386594993727548, 0.3381172588893345, 0.3499095950807844], "val_accuracy": [0.16066665947437286, 0.13199999928474426, 0.4346666634082794, 0.5913333296775818, 0.7363333106040955, 0.7436666488647461, 0.7646666765213013, 0.7933333516120911, 0.7960000038146973, 0.7570000290870667, 0.800000011920929, 0.8173333406448364, 0.8130000233650208, 0.8270000219345093, 0.8063333630561829, 0.8176666498184204, 0.8236666917800903, 0.82833331823349, 0.8370000123977661, 0.831333339214325, 0.7900000214576721, 0.8353333473205566, 0.8073333501815796, 0.8403333425521851, 0.8486666679382324, 0.8186666369438171, 0.8523333072662354, 0.8486666679382324, 0.8553333282470703, 0.8389999866485596, 0.843666672706604, 0.8519999980926514, 0.8379999995231628, 0.8586666584014893, 0.8539999723434448, 0.856333315372467, 0.8516666889190674, 0.8560000061988831, 0.8603333234786987, 0.8603333234786987, 0.8536666631698608, 0.8643333315849304, 0.859333336353302, 0.8659999966621399, 0.8613333106040955, 0.859333336353302, 0.8656666874885559, 0.8673333525657654, 0.8653333187103271, 0.8669999837875366, 0.8690000176429749, 0.8666666746139526, 0.8636666536331177, 0.8573333621025085, 0.8686666488647461, 0.8583333492279053]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 9, 2, 3, 0, 6, 0, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 5, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [5, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8299999833106995, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3890526367137617, 2.303961427125791, 2.191210394301797, 1.823046781950308, 1.3155123576700978, 0.8589703470267765, 0.7228172349419655, 0.7143252026828494, 0.6375676081511543, 0.6110263498640961, 0.6002452772574701, 0.560990420582587, 0.5451540850519173, 0.5391450044761135, 0.5116836203323962, 0.5093904324983011, 0.4961824449235107, 0.4811601808688046, 0.4766049665026047, 0.46973667538334524, 0.46035268220604214, 0.44672502797151586], "accuracy": [0.2620525658130646, 0.12732796370983124, 0.21701228618621826, 0.36045435070991516, 0.535860538482666, 0.6909258961677551, 0.7277770638465881, 0.7337207794189453, 0.7629110813140869, 0.7717606425285339, 0.7790252566337585, 0.7861577272415161, 0.7979130744934082, 0.7984414100646973, 0.8096684813499451, 0.8088759779930115, 0.8123101592063904, 0.8178576231002808, 0.821820080280304, 0.8245938420295715, 0.828820526599884, 0.8314621448516846], "val_loss": [1.9797120094299316, 1.9658253533499581, 1.5385541234697615, 1.549529756818499, 0.778131365776062, 0.5584906339645386, 0.629478931427002, 0.4968103510992868, 0.4837322405406407, 0.5519020557403564, 0.44552390916006906, 0.43467189584459576, 0.415459896836962, 0.4074350425175258, 0.4158202239445278, 0.43098307507378714, 0.38333994150161743, 0.3880792430468968, 0.3926246762275696, 0.3846302883965628, 0.39486799921308247, 0.3940615143094744], "val_accuracy": [0.15066666901111603, 0.13333334028720856, 0.4893333315849304, 0.4273333251476288, 0.6813333630561829, 0.746666669845581, 0.718999981880188, 0.7850000262260437, 0.7846666574478149, 0.7416666746139526, 0.7976666688919067, 0.8059999942779541, 0.8196666836738586, 0.8266666531562805, 0.8153333067893982, 0.8103333115577698, 0.8379999995231628, 0.8346666693687439, 0.8246666789054871, 0.8299999833106995, 0.8253333568572998, 0.8316666483879089]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 4, 0, 2, 6, 1, 6, 9, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 2, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8254285454750061, "mapping_values": [1, 4, 4, 3, 1, 1, 16, 16, 9, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(alpha, tf.math.add(beta, tf.math.divide_no_nan(grad, beta))), beta), tf.math.add(beta, grad)))), alpha)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.389052506435376, 2.3039447449107353, 2.1937677842310124, 1.535554340754549, 1.0038540558634874, 0.8259450721860389, 0.7156143301450628, 0.6743970284561487, 0.6352614142072515, 0.6282910146749157, 0.613021848428802, 0.5862980047079708, 0.5496937467941377, 0.5398154554586243, 0.5124907973593316, 0.5184222991991477, 0.5119818576598416, 0.48133326106618785, 0.4898143829749544, 0.4758379465521854, 0.4779001024452419, 0.46753651977939503, 0.4530355512363689, 0.4490776806223457, 0.4247238611217661, 0.4165004881783058, 0.406071586576451, 0.4207144303643677, 0.40955039789144154, 0.3844346385574643, 0.39657538534864034, 0.3874627852743769, 0.37108529230874715, 0.37100386301902116, 0.36180500888301714, 0.35861867937460995, 0.33917688049613176, 0.33564344338611163, 0.3481667609325631, 0.31943686106705377, 0.35390632397557575, 0.31910673408554907, 0.3105234960917043, 0.30715821871762544, 0.31965523163451337, 0.3100333171175172, 0.29855351744232206, 0.30124547605217883, 0.2835486600183619, 0.29347461509257416, 0.2843377071679654, 0.278993643655942], "accuracy": [0.2619204819202423, 0.12719587981700897, 0.21991810202598572, 0.4431383013725281, 0.6259410977363586, 0.6902654767036438, 0.7313432693481445, 0.7466648817062378, 0.7644960880279541, 0.7683265209197998, 0.7681944370269775, 0.7827235460281372, 0.7959318161010742, 0.7988376617431641, 0.8098005652427673, 0.8054417967796326, 0.8033285140991211, 0.8202351331710815, 0.816008448600769, 0.8224804997444153, 0.8195747137069702, 0.8252542614936829, 0.830669641494751, 0.835160493850708, 0.8409721255302429, 0.8438779711723328, 0.8495575189590454, 0.8454629778862, 0.8453308939933777, 0.8585391640663147, 0.8521991968154907, 0.8578787446022034, 0.8668603897094727, 0.8584070801734924, 0.8647470474243164, 0.8659358024597168, 0.8733324408531189, 0.8735966086387634, 0.8652753829956055, 0.8780874609947205, 0.8648791313171387, 0.8802007436752319, 0.8802007436752319, 0.8842953443527222, 0.8790120482444763, 0.8799365758895874, 0.8865407705307007, 0.889050304889679, 0.8903711438179016, 0.889578640460968, 0.8942015767097473, 0.8945978283882141], "val_loss": [1.9797253608703613, 1.9656431334359306, 1.5653246811458044, 0.9200568539755685, 0.6233853101730347, 0.5452766418457031, 0.5447122880390712, 0.47744146415165495, 0.4961079699652536, 0.5613121134894234, 0.4623450722013201, 0.48499689783368793, 0.41744881868362427, 0.4038269008908953, 0.42106584140232634, 0.4678992714200701, 0.39000179937907625, 0.41153555256979807, 0.40704200097492765, 0.408144337790353, 0.45893207618168425, 0.37828145708356586, 0.40009193761008127, 0.3666082961218698, 0.35860222578048706, 0.3708885397229876, 0.3527941533497402, 0.37280432667051044, 0.35981968470982145, 0.3740395818437849, 0.3512874756540571, 0.35179477078574045, 0.3679312382425581, 0.3438544613974435, 0.3519216775894165, 0.3377672178404672, 0.36320745944976807, 0.3565113289015634, 0.3397321275302342, 0.36695810726710726, 0.347704929964883, 0.35368763548987253, 0.33967110088893343, 0.33894591672079905, 0.34511516775403706, 0.3283437660762242, 0.3388188566480364, 0.34789163725716726, 0.3389174086706979, 0.3317417587552752, 0.3384846959795271, 0.332525977066585], "val_accuracy": [0.16099999845027924, 0.15433333814144135, 0.48233333230018616, 0.6036666631698608, 0.7250000238418579, 0.7620000243186951, 0.7599999904632568, 0.7893333435058594, 0.7896666526794434, 0.7400000095367432, 0.7929999828338623, 0.7736666798591614, 0.8233333230018616, 0.8273333311080933, 0.8066666722297668, 0.7903333306312561, 0.8353333473205566, 0.8193333148956299, 0.8133333325386047, 0.8183333277702332, 0.7883333563804626, 0.8456666469573975, 0.8176666498184204, 0.8410000205039978, 0.8486666679382324, 0.8456666469573975, 0.8546666502952576, 0.8473333120346069, 0.8460000157356262, 0.828000009059906, 0.8493333458900452, 0.856333315372467, 0.843666672706604, 0.859333336353302, 0.8579999804496765, 0.8579999804496765, 0.8550000190734863, 0.8539999723434448, 0.862666666507721, 0.8603333234786987, 0.8516666889190674, 0.8666666746139526, 0.8629999756813049, 0.8603333234786987, 0.8633333444595337, 0.8643333315849304, 0.8696666955947876, 0.8653333187103271, 0.8579999804496765, 0.8616666793823242, 0.8656666874885559, 0.8693333268165588]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 9, 4, 0, 3, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 1, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [3, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8022857308387756, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.math.add(beta, grad)), beta))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4097493316802554, 2.028493381683396, 2.2048417178158903, 2.1692686571247934, 1.786420688511374, 1.4819518985088238, 0.972111505634513, 0.8288175785672223, 0.75795848960685, 0.7049542302390005, 0.688302001633806, 0.6334669126527122, 0.6339864907971998, 0.5995378910180458, 0.5968942710783629, 0.5752332487898008, 0.5571164389831862, 0.5510127484176484, 0.5796184237953411, 0.5329912478629987, 0.5311570376563207, 0.5228261995419472, 0.5031278873825149, 0.5042382292680737, 0.48509973379693655, 0.503847143165408, 0.5003981055277781, 0.4765041274574722, 0.4760868974160902, 0.4651510110345137, 0.4731872569001535, 0.4497336714519029, 0.44548574165976074, 0.45138560445112497, 0.439372241831632, 0.4466513259661842, 0.4211114160711613, 0.4210621865985101, 0.4361420011578644, 0.40745787295163377, 0.3978109636980356, 0.42553944421828527, 0.3954028400683904, 0.37254410627070605], "accuracy": [0.28741249442100525, 0.27341169118881226, 0.23682472109794617, 0.22335226833820343, 0.4085325598716736, 0.4772156774997711, 0.653150200843811, 0.6939638257026672, 0.7199841737747192, 0.7320036888122559, 0.739400327205658, 0.7623828053474426, 0.7646281719207764, 0.7754589915275574, 0.7761194109916687, 0.7829877138137817, 0.7915731072425842, 0.789459764957428, 0.7790252566337585, 0.7997622489929199, 0.7994980812072754, 0.802271842956543, 0.8117818236351013, 0.8099326491355896, 0.8191784620285034, 0.8128384351730347, 0.8148196935653687, 0.8212917447090149, 0.8228767514228821, 0.8232730031013489, 0.8247259259223938, 0.8267071843147278, 0.8358209133148193, 0.830669641494751, 0.8327829837799072, 0.8323867321014404, 0.8449346423149109, 0.8448025584220886, 0.8358209133148193, 0.8448025584220886, 0.8500858545303345, 0.8409721255302429, 0.8506141901016235, 0.8634262084960938], "val_loss": [1.7179184300558907, 1.9672299793788366, 1.9610013280596053, 1.6639526912144251, 1.499997956412179, 0.7896074056625366, 0.7018296037401471, 0.5818393741335187, 0.5507212706974575, 0.5375005177089146, 0.49579523290906635, 0.500994086265564, 0.46189056124006, 0.4506394692829677, 0.44359757219042095, 0.46461520876203266, 0.44371187686920166, 0.4542681319372995, 0.4479236773082188, 0.47248452050345285, 0.4193530763898577, 0.4222061974661691, 0.420089100088392, 0.3961891787392752, 0.3954138330050877, 0.4371968422617231, 0.40478884322302683, 0.3912541014807565, 0.3762456348964146, 0.4015652963093349, 0.3915009583745684, 0.42429988724844797, 0.3778691717556545, 0.38247088875089374, 0.38839408329554964, 0.3636783446584429, 0.3803004877907889, 0.3825779982975551, 0.3579725537981306, 0.3663653816495623, 0.36113806281770977, 0.3556707501411438, 0.3702702948025295, 0.3544811350958688], "val_accuracy": [0.3346666693687439, 0.10366666316986084, 0.14000000059604645, 0.2943333387374878, 0.45533332228660583, 0.6880000233650208, 0.6940000057220459, 0.7523333430290222, 0.7666666507720947, 0.7726666927337646, 0.7786666750907898, 0.7829999923706055, 0.800000011920929, 0.8090000152587891, 0.8059999942779541, 0.7993333339691162, 0.8130000233650208, 0.7896666526794434, 0.8043333292007446, 0.7743333578109741, 0.8163333535194397, 0.8169999718666077, 0.8213333487510681, 0.8303333520889282, 0.8296666741371155, 0.7990000247955322, 0.8216666579246521, 0.8270000219345093, 0.840666651725769, 0.8230000138282776, 0.8253333568572998, 0.8109999895095825, 0.8463333249092102, 0.8323333263397217, 0.8379999995231628, 0.8513333201408386, 0.840666651725769, 0.8330000042915344, 0.8536666631698608, 0.843999981880188, 0.846666693687439, 0.8529999852180481, 0.8416666388511658, 0.8503333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [42, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 4, 0, 3, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 1, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [3, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7951428294181824, "mapping_values": [1, 4, 4, 3, 1, 1, 16, 16, 9, 7, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.negative(alpha), grad), tf.math.add(beta, alpha)))), grad), alpha)), tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.026346736910982, 1.3955584149933165, 1.0121127393550846, 0.8948437306922205, 0.8087143374393172, 0.7830032492200413, 0.7370194533969968, 0.7135649524376204, 0.6851824753398766, 0.6694867067317511, 0.6474585094157148, 0.6438082047599009, 0.6322993536934546, 0.6235982095403222, 0.6181908360703463, 0.5804188405250309, 0.559075934161694], "accuracy": [0.33007529377937317, 0.5126138925552368, 0.6318848133087158, 0.6675472259521484, 0.6992471218109131, 0.7079645991325378, 0.7197200059890747, 0.7288337349891663, 0.7400607466697693, 0.7429665923118591, 0.7526086568832397, 0.7548540234565735, 0.7650244235992432, 0.7614582180976868, 0.7577598690986633, 0.7836481332778931, 0.7884030938148499], "val_loss": [1.1372170788901192, 0.8809089320046561, 0.72557418687003, 0.6420789616448539, 0.6156307629176548, 0.6090503079550607, 0.5929737601961408, 0.5219189269202096, 0.5480945110321045, 0.5433802093778338, 0.5176394156047276, 0.48031740529196604, 0.5014914274215698, 0.48511065755571636, 0.5260883399418422, 0.47459140845707487, 0.4716280698776245], "val_accuracy": [0.5, 0.612333357334137, 0.6786666512489319, 0.7273333072662354, 0.7110000252723694, 0.7083333134651184, 0.7273333072662354, 0.7756666541099548, 0.7516666650772095, 0.7509999871253967, 0.765333354473114, 0.7986666560173035, 0.7850000262260437, 0.7776666879653931, 0.7590000033378601, 0.7846666574478149, 0.7926666736602783]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [5, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 9, 4, 0, 3, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 1, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.2571428716182709, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3029828868632176, 2.299583636254777, 2.302142284581249, 2.302434467132522, 2.3001584219438147, 2.3005508473363174, 2.301283745828038, 2.3003842321448023, 2.298842681570611, 2.3002346707309917, 2.2988422795561374, 2.298539936015036, 2.298901622164062, 2.2980799887237326, 2.2993232140435897, 2.2992066397658744, 2.2972357814117683, 2.298994734680585, 2.298170245381835, 2.2976767888016876, 2.295341503886247, 2.296429094778879, 2.296020973123942, 2.2963495871110946, 2.296467164031676, 2.295588529246941, 2.2959525612571756, 2.295970923298181, 2.29392845292747, 2.2949082714109026, 2.2938312513008565, 2.294054938376682, 2.2931275072036055, 2.2931598797922734, 2.2930811937254307, 2.291248990339673, 2.291564126009041, 2.291125232171011, 2.2923802951260517, 2.292517610717963, 2.2917863644345595, 2.291164255633472, 2.290556409875116, 2.2914782068937556, 2.2918630594811056, 2.2916046003576724, 2.2895646869955186, 2.2903410450594377, 2.2892040900267063, 2.2903272005639703, 2.288360101671865, 2.288675308070084, 2.289096929960562, 2.2883044462225395, 2.2873818423407597, 2.2882339731419736, 2.287243656116375, 2.2867263977349066, 2.288278735749962, 2.2873498420705256, 2.287044975027322, 2.2862162740553975, 2.2847997480301006, 2.286623607049009, 2.285706093062216, 2.285222202574871, 2.2830048539871237, 2.285856209442427, 2.2833025311560853, 2.2835838391308174, 2.282794510510462, 2.2850741712786595, 2.2831965207014386, 2.2834134833404276, 2.2820429466876373, 2.2813413628749624, 2.280465335862323, 2.2826300617757647, 2.2824929959077123, 2.2807149062649827, 2.281663543402385, 2.2820150584214716, 2.2799016881407907, 2.2809405633565882, 2.2796634226710712, 2.280663870927475, 2.279822438038131, 2.2789427542242437, 2.278146411418096, 2.2790589999560558, 2.2784789472035034, 2.277264253826441, 2.2789664004913743, 2.2787917108426177, 2.276757365818651, 2.277411162530458, 2.2778149105853505, 2.2760409528805106, 2.277127001437025, 2.277360356982988], "accuracy": [0.08942015469074249, 0.0936468094587326, 0.09509972482919693, 0.09166556596755981, 0.09087307006120682, 0.09391097724437714, 0.09417514503002167, 0.09787346422672272, 0.10328886657953262, 0.09760929644107819, 0.09906221181154251, 0.10236428678035736, 0.09681680053472519, 0.10487385839223862, 0.09813763201236725, 0.1006472036242485, 0.10394927859306335, 0.09826971590518951, 0.10157178342342377, 0.1006472036242485, 0.10553427785634995, 0.10566636174917221, 0.10342095047235489, 0.10566636174917221, 0.10394927859306335, 0.10698718577623367, 0.10989301651716232, 0.10593052208423615, 0.11002509295940399, 0.10672302544116974, 0.10711926966905594, 0.10989301651716232, 0.11094967275857925, 0.11213842034339905, 0.11966715008020401, 0.1200634017586708, 0.11821424216032028, 0.11781799048185349, 0.11491216719150543, 0.11293092370033264, 0.11319508403539658, 0.120459645986557, 0.11887465417385101, 0.11372341960668564, 0.11940298229455948, 0.11279883980751038, 0.12561088800430298, 0.1200634017586708, 0.120459645986557, 0.12230881303548813, 0.12534672021865845, 0.1228371411561966, 0.12521463632583618, 0.13155461847782135, 0.13089419901371002, 0.12653546035289764, 0.12759213149547577, 0.1290450394153595, 0.12481838464736938, 0.13274335861206055, 0.12679962813854218, 0.1294412910938263, 0.13142253458499908, 0.12878087162971497, 0.13432836532592773, 0.13578127324581146, 0.1348566859960556, 0.1340641975402832, 0.13829085230827332, 0.1410645842552185, 0.1418570876121521, 0.13419628143310547, 0.13578127324581146, 0.136045441031456, 0.14330999553203583, 0.14212125539779663, 0.14714039862155914, 0.1434420794248581, 0.14357416331768036, 0.1538766324520111, 0.13921542465686798, 0.14370624721050262, 0.14753665030002594, 0.1398758441209793, 0.14978206157684326, 0.149649977684021, 0.15321621298789978, 0.14740456640720367, 0.15255580842494965, 0.14700831472873688, 0.1516312211751938, 0.15717871487140656, 0.15149913728237152, 0.15691454708576202, 0.16074495017528534, 0.15942411124706268, 0.1574428677558899, 0.15361246466636658, 0.1578391194343567, 0.15242372453212738], "val_loss": [1.9706982203892298, 1.9704583712986536, 1.9702164786202567, 1.9699764251708984, 1.9697345324925013, 1.969496250152588, 1.9692564010620117, 1.96901764188494, 1.9687768391200475, 1.9685358319963728, 1.9682977540152413, 1.9680572237287248, 1.9678172383989607, 1.967578751700265, 1.9673399244035994, 1.9671002796718053, 1.966860634940011, 1.9666240555899483, 1.9663827759878976, 1.9661447661263602, 1.9659081867762975, 1.9656690188816615, 1.9654303278241838, 1.9651900700160436, 1.9649536950247628, 1.9647155489240373, 1.9644747461591447, 1.9642361913408553, 1.9640003613063268, 1.963768141610282, 1.963528769356864, 1.9632892608642578, 1.9630532945905412, 1.9628172601972307, 1.9625805446079798, 1.962343420301165, 1.962106500353132, 1.9618709427969796, 1.9616321155003138, 1.9613988740103585, 1.9611634526933943, 1.9609247616359167, 1.9606879098074776, 1.9604507173810686, 1.9602133205958776, 1.9599755832127161, 1.959738322666713, 1.9595030375889368, 1.9592687743050712, 1.95903137751988, 1.9587958880833216, 1.9585596493312292, 1.9583244323730469, 1.9580884660993303, 1.9578511374337333, 1.9576117651803153, 1.957374027797154, 1.9571407181876046, 1.9569059780665807, 1.9566702842712402, 1.956437042781285, 1.9561982154846191, 1.9559594563075475, 1.955723421914237, 1.9554858207702637, 1.9552505356924874, 1.9550112996782576, 1.954775265284947, 1.9545367785862513, 1.9542981556483678, 1.9540613038199288, 1.9538256100245885, 1.9535873958042689, 1.953349999019078, 1.9531094687325614, 1.9528704370771135, 1.9526363100324358, 1.9523991857256209, 1.9521609715053014, 1.9519222123282296, 1.951683589390346, 1.9514433997017997, 1.9512006214686803, 1.9509639058794295, 1.950725827898298, 1.9504857063293457, 1.9502459253583635, 1.9500044413975306, 1.9497640473502023, 1.949526650565011, 1.9492875507899694, 1.9490442276000977, 1.9488035610743932, 1.9485639844621931, 1.9483225005013602, 1.9480832644871302, 1.9478444371904646, 1.9476049968174525, 1.9473651477268763, 1.9471235956464494], "val_accuracy": [0.03999999910593033, 0.041999999433755875, 0.04233333468437195, 0.044333335012197495, 0.045666664838790894, 0.04600000008940697, 0.04699999839067459, 0.049666665494441986, 0.05066666752099991, 0.05400000140070915, 0.054999999701976776, 0.056333333253860474, 0.057999998331069946, 0.05900000035762787, 0.06199999898672104, 0.06366666406393051, 0.06533333659172058, 0.06733333319425583, 0.06966666877269745, 0.07100000232458115, 0.07100000232458115, 0.07233333587646484, 0.07566666603088379, 0.07733333110809326, 0.07900000363588333, 0.08100000023841858, 0.0833333358168602, 0.08399999886751175, 0.08633333444595337, 0.08833333104848862, 0.09000000357627869, 0.09133332967758179, 0.09466666728258133, 0.0976666659116745, 0.10100000351667404, 0.10366666316986084, 0.10633333027362823, 0.109333336353302, 0.11033333092927933, 0.11366666853427887, 0.11566666513681412, 0.11733333021402359, 0.11933333426713943, 0.12133333086967468, 0.12433333694934845, 0.12666666507720947, 0.12966667115688324, 0.1313333362340927, 0.13300000131130219, 0.13699999451637268, 0.1393333375453949, 0.14300000667572021, 0.14733333885669708, 0.1496666669845581, 0.15266667306423187, 0.15700000524520874, 0.15933333337306976, 0.16066665947437286, 0.16333332657814026, 0.16466666758060455, 0.16633333265781403, 0.16733333468437195, 0.17000000178813934, 0.1720000058412552, 0.1733333319425583, 0.17533333599567413, 0.1783333271741867, 0.18066667020320892, 0.18299999833106995, 0.18400000035762787, 0.18666666746139526, 0.1889999955892563, 0.19333332777023315, 0.19566667079925537, 0.19699999690055847, 0.19900000095367432, 0.20133332908153534, 0.20399999618530273, 0.20733332633972168, 0.21066667139530182, 0.2123333364725113, 0.21400000154972076, 0.2173333317041397, 0.21899999678134918, 0.22100000083446503, 0.22366666793823242, 0.22599999606609344, 0.2290000021457672, 0.23133333027362823, 0.2329999953508377, 0.2370000034570694, 0.2383333295583725, 0.2396666705608368, 0.24266666173934937, 0.24500000476837158, 0.2473333328962326, 0.24899999797344208, 0.2526666522026062, 0.25433334708213806, 0.25866666436195374]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 9, 4, 0, 3, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [3, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.2314285784959793, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.082612380564504, 1.9129200466021477, 4.91546366211918, 2.366345774590489, 2.6639139445356137, NaN, NaN, NaN], "accuracy": [0.31145158410072327, 0.4027208983898163, 0.12640337646007538, 0.2226918488740921, 0.20116232335567474, 0.10817593336105347, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.4905738489968436, 4.424980436052595, 1.5771564074925013, 1.9141404288155692, 6.79260117667062, NaN, NaN, NaN], "val_accuracy": [0.37066665291786194, 0.15600000321865082, 0.4073333442211151, 0.1770000010728836, 0.10466666519641876, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 9, 4, 0, 3, 2, 3, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 1, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 6, 6, 4, 2, 1, 2, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.negative(alpha)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302702415542139, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 0, 4, 9, 2, 3, 0, 6, 0, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 1, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 6, 6, 3, 3, 0, 2, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302568381693322, 2.302493611283983, 2.302460981602556, 2.30260354400925, 2.302672865022018, 2.302858148378829, 2.3029806740516054], "accuracy": [0.09959053993225098, 0.10500594228506088, 0.10170386731624603, 0.10302469879388809, 0.09536388516426086, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736062458583288, 1.9734891482761927, 1.9736430304391044, 1.9736598559788294, 1.9737060410635812, 1.9738672801426478, 1.97417756489345], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 6, 4, 9, 2, 3, 0, 6, 0, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [2, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 4, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 8, 4, 0, 2, 6, 1, 6, 5, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 1, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [2, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 22, 22, 14, 8, 2, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 9, 2, 3, 0, 6, 0, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 1, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 7, 3, 4, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.3029689882031805, 2.3028004765274375, 2.302841898441126, 2.302796994217981, 2.302944001425936, 2.3027452939474005], "accuracy": [0.09008057415485382, 0.09615638852119446, 0.09298639744520187, 0.09998679161071777, 0.09232597798109055, 0.09866596013307571], "val_loss": [1.973667825971331, 1.9736754553658622, 1.9736265454973494, 1.973602294921875, 1.9735760007585799, 1.9736111504690987], "val_accuracy": [0.10366666316986084, 0.10233332961797714, 0.10233332961797714, 0.09799999743700027, 0.10366666316986084, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [54, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 0, 2, 3, 0, 6, 2, 4, 2, 5, 1, 9, 2, 5, 8, 2, 2, 6, 5, 8, 4, 9], [1, 3, 2, 1, 3, 0, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [3, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, beta))))), tf.math.negative(tf.math.add(tf.math.add(beta, alpha), tf.math.multiply(tf.math.negative(grad), tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.549407040800448, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20459648966789246, 0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2560558319091797, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [42, 66, 89, 50, 85, 46], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 9, 0, 2, 3, 0, 3, 0, 4, 3, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [53, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [42, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 2, 4, 5, 2, 2, 0, 3, 0, 4, 3, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 1, 3, 0, 3, 3, 3, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, beta))))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(grad, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.812828152769545, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.13512085378170013, 0.0936468094587326, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2965128081185475, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 4, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 6, 4, 0, 2, 3, 0, 3, 0, 4, 3, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [53, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 22, 22, 13, 9, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.pow(tf.math.add(beta, grad), grad))), tf.math.negative(tf.math.add(grad, tf.math.multiply(grad, tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad))), grad)), tf.math.square(tf.math.negative(alpha))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 9, 4, 0, 3, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 1, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [3, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(grad, tf.math.add(beta, beta))))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302702415542139, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 7, 4, 0, 2, 6, 0, 6, 9, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06538105756044388, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 9, 4, 0, 6, 2, 0, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 2, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [55, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0], [0, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.negative(alpha), grad), beta))), beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303090685315498, 2.299954893314733, 2.3027796854574163, 2.303333104861301, 2.3013258246760784, 2.301969461027878], "accuracy": [0.08942015469074249, 0.09192973375320435, 0.09298639744520187, 0.08955223858356476, 0.08809932321310043, 0.09074098616838455], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]