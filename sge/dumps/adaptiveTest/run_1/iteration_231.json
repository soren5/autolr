[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8], [1, 0, 2, 3, 3, 2, 3], [15, 86, 13]], "fitness": -0.8402857184410095, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.032733652680195, 1.1517833396507025, 0.8382431531405924, 0.7317851286727393, 0.6491999255746441, 0.6225862700972874, 0.5710175876698679, 0.547170821717544, 0.5159124009219679, 0.49955701113156575, 0.4715293735057104, 0.4565250186510153, 0.4331554089476168, 0.4223684907164225, 0.4004332867587924, 0.3931871103320879, 0.38103292773995245, 0.36630179601464496, 0.3603139369557987, 0.3674007974886828, 0.3418064564801069, 0.33256956318885644, 0.32808030126762744], "accuracy": [0.3140932619571686, 0.599128246307373, 0.6877558827400208, 0.7195879220962524, 0.7481178045272827, 0.7605336308479309, 0.7844406366348267, 0.7922335267066956, 0.8049134612083435, 0.8109893202781677, 0.8236692547798157, 0.8338396549224854, 0.8368775844573975, 0.842028796672821, 0.8518029451370239, 0.8545766472816467, 0.8618412613868713, 0.8651432991027832, 0.8663320541381836, 0.863558292388916, 0.8732003569602966, 0.8729361891746521, 0.8780874609947205], "val_loss": [0.8657416275569371, 0.6770750624792916, 0.582173194204058, 0.5170236825942993, 0.4988856996808733, 0.4647317443575178, 0.4478937898363386, 0.41914963722229004, 0.4090278148651123, 0.3897740159715925, 0.37523421219417025, 0.3617609994752066, 0.35750911065510343, 0.3467379552977426, 0.3423933557101658, 0.33496340683528353, 0.3316214254924229, 0.3287350705691746, 0.3388638751847403, 0.34262282507760183, 0.3321655477796282, 0.3208587425095694, 0.31811903204236713], "val_accuracy": [0.675000011920929, 0.718666672706604, 0.7363333106040955, 0.7649999856948853, 0.7876666784286499, 0.8006666898727417, 0.79666668176651, 0.815666675567627, 0.8216666579246521, 0.8330000042915344, 0.843999981880188, 0.8516666889190674, 0.8516666889190674, 0.8606666922569275, 0.859333336353302, 0.8619999885559082, 0.8613333106040955, 0.8683333396911621, 0.8529999852180481, 0.8556666374206543, 0.8666666746139526, 0.8646666407585144, 0.8666666746139526]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 7, 8, 4], [2, 1], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.8377143144607544, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1562437408431143, 1.2929353224225033, 0.8949254973925745, 0.7609469463812315, 0.6821249379631141, 0.6494373959431228, 0.6143517527188512, 0.5931898824700338, 0.5687935212898909, 0.5486249007474572, 0.526926509747652, 0.5060801691642731, 0.49066550244965085, 0.47437676612601193, 0.45642026871139696, 0.44795619734856806, 0.4361428572336098, 0.41754587030665846, 0.4160687149303181, 0.4054075727184388, 0.3950696310756418, 0.3797170292739115, 0.3772352639560639, 0.373860623035543, 0.3586651100427121, 0.35203792830861996, 0.3437758494188694, 0.3271093569049399, 0.32590946262664705, 0.3278501962689581, 0.32195475298762244, 0.3220489120848694, 0.31088565908969745, 0.30023746506775123, 0.292013285355624, 0.28994942400685675, 0.2827552401622714, 0.2784306957870978, 0.26144989796712054, 0.2709207569981264, 0.25987910547308113, 0.260562228807731], "accuracy": [0.2782987654209137, 0.5540879964828491, 0.6664905548095703, 0.7127195596694946, 0.7404569983482361, 0.7511557340621948, 0.7688548564910889, 0.7726852297782898, 0.7836481332778931, 0.793950617313385, 0.8059701323509216, 0.8140271902084351, 0.8170651197433472, 0.8234050869941711, 0.8315942287445068, 0.8318583965301514, 0.8388587832450867, 0.8462554216384888, 0.8455950617790222, 0.8479725122451782, 0.8510104417800903, 0.8602562546730042, 0.8597279191017151, 0.8628978729248047, 0.8671245574951172, 0.870030403137207, 0.8721436858177185, 0.8800686597824097, 0.8771628737449646, 0.8778232932090759, 0.878879964351654, 0.8800686597824097, 0.8864086866378784, 0.8898428082466125, 0.8908994793891907, 0.8934090733528137, 0.8919561505317688, 0.8932769894599915, 0.9010698795318604, 0.8961827754974365, 0.9035794734954834, 0.8994848728179932], "val_loss": [1.2782321657453264, 0.7269378389630999, 0.5776617697307042, 0.5541136945996966, 0.509098938533238, 0.4857126304081508, 0.4740814481462751, 0.45645056452069965, 0.43897702012743267, 0.42797727244240896, 0.4116675427981785, 0.39873885256903513, 0.38660929032734465, 0.379555881023407, 0.3717260701315744, 0.360047595841544, 0.36293329511369976, 0.35011784519468037, 0.3488243307386126, 0.35274626527513775, 0.35536917618342806, 0.34719386271068026, 0.3364142520087106, 0.3357873729297093, 0.3351650323186602, 0.3265510882650103, 0.3309640373502459, 0.3253624609538487, 0.3305835468428476, 0.32167281423296246, 0.3169991118567331, 0.3141699177878244, 0.3260976161275591, 0.320454614503043, 0.31661106858934673, 0.31798235859189716, 0.3098648020199367, 0.315123907157353, 0.3190993240901402, 0.31573632785252165, 0.32062602043151855, 0.3299587879862104], "val_accuracy": [0.5666666626930237, 0.70333331823349, 0.7453333139419556, 0.7583333253860474, 0.7713333368301392, 0.7906666398048401, 0.7893333435058594, 0.8029999732971191, 0.8053333163261414, 0.8166666626930237, 0.824999988079071, 0.8333333134651184, 0.8389999866485596, 0.8443333506584167, 0.8446666598320007, 0.8529999852180481, 0.8496666550636292, 0.8519999980926514, 0.856333315372467, 0.859000027179718, 0.8513333201408386, 0.8556666374206543, 0.8640000224113464, 0.8629999756813049, 0.8646666407585144, 0.8653333187103271, 0.8676666617393494, 0.8706666827201843, 0.8683333396911621, 0.8713333606719971, 0.8690000176429749, 0.8679999709129333, 0.8673333525657654, 0.871666669845581, 0.8703333139419556, 0.8723333477973938, 0.878000020980835, 0.878000020980835, 0.874666690826416, 0.8743333220481873, 0.871666669845581, 0.8706666827201843]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [8, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8], [1, 0, 2, 3, 3, 2, 3], [15, 52, 13]], "fitness": -0.7342857122421265, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1448590780812924, 1.2863120246462583, 0.8958081447878188, 0.8235572788142541, 0.7487591188644547, 0.664761454650298, 0.6427395298669619, 0.6015166365050085, 0.5649351872520487, 0.5457063394609365, 0.5324945533595238, 0.5214581983263592, 0.5054342042280304, 0.49733182244281315, 0.48770862883895444, 0.4639441235316444, 0.46699193745493306, 0.46860516913704603, 0.4565844873372102, 0.43846629791255987, 0.42375688893117014, 0.44053958195579396, 0.4196504592942744, 0.4163601764866138, 0.4219655998512707, 0.42472296930370296, 0.44416120999902703, 0.45826951331387517, 0.4550113981197759, 0.4890157504718475], "accuracy": [0.2657508850097656, 0.5606921315193176, 0.6634526252746582, 0.6852463483810425, 0.7240787148475647, 0.7449478507041931, 0.7601373791694641, 0.772288978099823, 0.7824593782424927, 0.791969358921051, 0.7988376617431641, 0.8029322624206543, 0.8090080618858337, 0.8170651197433472, 0.8144234418869019, 0.8298771381378174, 0.8224804997444153, 0.8260467648506165, 0.8309338092803955, 0.8338396549224854, 0.8376700282096863, 0.8367455005645752, 0.8433496356010437, 0.8450667262077332, 0.834632158279419, 0.8449346423149109, 0.8378021121025085, 0.8285563588142395, 0.8272355198860168, 0.8235371708869934], "val_loss": [1.1882733958108085, 0.7015132904052734, 0.6106549671718052, 0.6124906199319022, 0.5283725772585187, 0.49200006893702913, 0.4527738945824759, 0.4643263816833496, 0.4451990808759417, 0.42461263281958445, 0.4182871920721872, 0.40871942043304443, 0.40779837540217806, 0.4065206050872803, 0.3960223112787519, 0.398159316607884, 0.4207484381539481, 0.4172132355826242, 0.4021270104816982, 0.39981636830738615, 0.3978714176586696, 0.3964928984642029, 0.3945781758853367, 0.41833823919296265, 0.40419615166527884, 0.44507934365953716, 0.4526815414428711, 0.4212405937058585, 0.44307067564555574, 0.4939135994229998], "val_accuracy": [0.5926666855812073, 0.7183333039283752, 0.7239999771118164, 0.7473333477973938, 0.7739999890327454, 0.7826666831970215, 0.8026666641235352, 0.8069999814033508, 0.8083333373069763, 0.8166666626930237, 0.8236666917800903, 0.8296666741371155, 0.8346666693687439, 0.8236666917800903, 0.8330000042915344, 0.8420000076293945, 0.8393333554267883, 0.8426666855812073, 0.843666672706604, 0.8489999771118164, 0.846666693687439, 0.8420000076293945, 0.8510000109672546, 0.843999981880188, 0.8533333539962769, 0.8429999947547913, 0.843999981880188, 0.8403333425521851, 0.8356666564941406, 0.8216666579246521]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1], [3, 0, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.5428571701049805, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303159416060422, 2.3016201027033905, 2.299820715142531, 2.297983345559024, 2.294491592194851, 2.2920896010297462, 2.2932642233952745, 2.2894132877022852, 2.2885508507061094, 2.2859021641748014, 2.284825578420516, 2.282821375003281, 2.280181933954612, 2.278213885072641, 2.277203318969118, 2.275216999433107, 2.2724791147516483, 2.2708974581164076, 2.2683449952263226, 2.266415869161485, 2.263671276985363, 2.262706883626607, 2.259961465724219, 2.2576611138700162, 2.2574736581360737, 2.2551192588274582, 2.251916395879425, 2.2493156566438484, 2.247945102135645, 2.2448792573782463, 2.2423506435890084, 2.240415998249006, 2.2384455853984844, 2.2356539114890492, 2.2326757388265457, 2.23016166205199, 2.2271791276300683, 2.226183772354771, 2.2230689925855223, 2.21977802491884, 2.2170222629692735, 2.213682020250612, 2.2105586311175065, 2.2074847286246033, 2.207430404049137, 2.2035535514598763, 2.198648994908341, 2.1959669069764542, 2.192150030783564, 2.1871711019007853, 2.1863178591198533, 2.184092476635309, 2.1792068198340964, 2.175259867994273, 2.1719377599513887, 2.1655653938247608, 2.164575230664329, 2.1589921943862063, 2.154167070207406, 2.148486983711536, 2.144253000748896, 2.1419133000669226, 2.1354904871071336, 2.1337711319175803, 2.128856530924515, 2.122240412898146, 2.1163708821988108, 2.1135111318965394, 2.1063048954196435, 2.0984992703835976, 2.096325347893085, 2.0869464753027116, 2.082405338953704, 2.07976412732194, 2.0717944870252083, 2.0633667066128436, 2.0635446327835765, 2.054707714500775, 2.048460941178656, 2.040820162734965, 2.031992491729791, 2.0290348974469, 2.0165103796907404, 2.011606538552398, 2.0044931467765705, 1.996216715570958, 1.9889791595339066, 1.9780164004127978, 1.9773208935656614, 1.9660004462548346, 1.9560071161441706, 1.9443496022289297, 1.9419532047365446, 1.931064658491855, 1.9207569950402548, 1.9159369995533877, 1.9049042373080816, 1.8982103294652954, 1.888302146624801, 1.8827451895162208], "accuracy": [0.08611807972192764, 0.08730682730674744, 0.10038304328918457, 0.10711926966905594, 0.107647605240345, 0.11319508403539658, 0.11200633645057678, 0.1216483935713768, 0.1200634017586708, 0.13036586344242096, 0.14040417969226837, 0.14172500371932983, 0.14515915513038635, 0.15017831325531006, 0.1542728841304779, 0.16272619366645813, 0.16999074816703796, 0.17276449501514435, 0.1784440577030182, 0.1842557191848755, 0.18702945113182068, 0.2005019187927246, 0.20274733006954193, 0.21265354752540588, 0.2067098170518875, 0.21040813624858856, 0.23193766176700592, 0.22137102484703064, 0.23035265505313873, 0.23840972781181335, 0.244485542178154, 0.24924051761627197, 0.2502971887588501, 0.2534671723842621, 0.26258090138435364, 0.2661471366882324, 0.26826047897338867, 0.27116629481315613, 0.2794875204563141, 0.27380794286727905, 0.2919033169746399, 0.2868841588497162, 0.2996962070465088, 0.29282790422439575, 0.29137498140335083, 0.3000924587249756, 0.3077532649040222, 0.30986660718917847, 0.31739532947540283, 0.3245278000831604, 0.32003697752952576, 0.31898030638694763, 0.32545238733291626, 0.3230748772621155, 0.32967904210090637, 0.34460440278053284, 0.3387927711009979, 0.3427552580833435, 0.34764233231544495, 0.3520010709762573, 0.354510635137558, 0.35820895433425903, 0.36520934104919434, 0.35886937379837036, 0.3597939610481262, 0.3595297932624817, 0.3675868511199951, 0.3707568347454071, 0.37947431206703186, 0.3796063959598541, 0.37339848279953003, 0.38647469878196716, 0.38647469878196716, 0.38766345381736755, 0.39307886362075806, 0.3963809311389923, 0.389380544424057, 0.3971734344959259, 0.3953242599964142, 0.40628713369369507, 0.4003434181213379, 0.39941883087158203, 0.40787214040756226, 0.41249504685401917, 0.4119667112827301, 0.4127592146396637, 0.4163254499435425, 0.4251750111579895, 0.414608359336853, 0.42425042390823364, 0.4291374981403351, 0.4319112300872803, 0.4287412464618683, 0.42926958203315735, 0.4345529079437256, 0.43270373344421387, 0.43706247210502625, 0.43626996874809265, 0.4418174624443054, 0.43811914324760437], "val_loss": [1.9703480175563268, 1.9691079684666224, 1.9675660814557756, 1.965900148664202, 1.9641708646501814, 1.9624108586992537, 1.960646493094308, 1.9588700703212194, 1.9571072714669364, 1.9553279876708984, 1.9535488401140486, 1.951770850590297, 1.9499998773847307, 1.948218481881278, 1.9464338847569056, 1.9446328026907784, 1.9428165299551827, 1.9409847940717424, 1.9391330991472517, 1.9372706413269043, 1.935396603175572, 1.9335002899169922, 1.9315805435180664, 1.9296225139072962, 1.927642890385219, 1.9256339754377092, 1.9235828944614954, 1.921524933406285, 1.9194226264953613, 1.917292254311698, 1.9151044573102678, 1.9128837585449219, 1.9106318610055106, 1.908339364188058, 1.9059950964791434, 1.903609343937465, 1.9011839457920618, 1.8987138611929757, 1.896195684160505, 1.8936089788164412, 1.8909664154052734, 1.8882666315351213, 1.8854976381574358, 1.8826918601989746, 1.8798084940229143, 1.8768835067749023, 1.8738861083984375, 1.8708128929138184, 1.8676506451198034, 1.8644012723650252, 1.861091205051967, 1.857708317892892, 1.8542419842311315, 1.850708075932094, 1.847086020878383, 1.8433657373700822, 1.8395440237862724, 1.8356465612139021, 1.8316499846322196, 1.827526433127267, 1.823291437966483, 1.8189666611807687, 1.8145598002842493, 1.8100842067173548, 1.8055294581821986, 1.8008578164236886, 1.796074049813407, 1.7911886487688338, 1.786174706050328, 1.7810251372201102, 1.7757763862609863, 1.7704097884041923, 1.764866897038051, 1.7592404910496302, 1.7534929003034319, 1.7476046425955636, 1.7416345732552665, 1.7355664798191615, 1.7293768610273088, 1.7230267524719238, 1.7165194579533167, 1.7099027633666992, 1.7031127384730749, 1.6962338515690394, 1.689197404044015, 1.6820169176374162, 1.6746947084154402, 1.6672326496669225, 1.659681762967791, 1.6519971234457833, 1.6441356795174735, 1.6361652442387171, 1.628099032810756, 1.6198956285204207, 1.6115305423736572, 1.6031109605516707, 1.5945657661982946, 1.5859460830688477, 1.5771818501608712, 1.568354947226388], "val_accuracy": [0.04233333468437195, 0.04800000041723251, 0.059333331882953644, 0.0716666653752327, 0.0860000029206276, 0.10466666519641876, 0.12066666781902313, 0.14033333957195282, 0.16099999845027924, 0.17666666209697723, 0.1926666647195816, 0.21166667342185974, 0.22833333909511566, 0.24766667187213898, 0.2639999985694885, 0.27566665410995483, 0.28999999165534973, 0.3009999990463257, 0.31200000643730164, 0.32733333110809326, 0.33533334732055664, 0.343666672706604, 0.3526666760444641, 0.3606666624546051, 0.3683333396911621, 0.37433332204818726, 0.3766666650772095, 0.3813333213329315, 0.3856666684150696, 0.38999998569488525, 0.39233332872390747, 0.3956666588783264, 0.39766666293144226, 0.4009999930858612, 0.4026666581630707, 0.40533334016799927, 0.4086666703224182, 0.4116666615009308, 0.41600000858306885, 0.4183333218097687, 0.4216666519641876, 0.4243333339691162, 0.4266666769981384, 0.4300000071525574, 0.4323333203792572, 0.4336666762828827, 0.43799999356269836, 0.44066667556762695, 0.4440000057220459, 0.4436666667461395, 0.445333331823349, 0.4483333230018616, 0.44966667890548706, 0.45100000500679016, 0.453000009059906, 0.45500001311302185, 0.4583333432674408, 0.46166667342185974, 0.4650000035762787, 0.4690000116825104, 0.47200000286102295, 0.4740000069141388, 0.4779999852180481, 0.47833332419395447, 0.4816666543483734, 0.4833333194255829, 0.484333336353302, 0.48500001430511475, 0.4883333444595337, 0.4946666657924652, 0.4963333308696747, 0.4986666738986969, 0.500333309173584, 0.5023333430290222, 0.5046666860580444, 0.5080000162124634, 0.5099999904632568, 0.5113333463668823, 0.512333333492279, 0.5173333287239075, 0.5206666588783264, 0.5233333110809326, 0.5263333320617676, 0.528333306312561, 0.5299999713897705, 0.5320000052452087, 0.5333333611488342, 0.534333348274231, 0.5363333225250244, 0.5373333096504211, 0.5389999747276306, 0.5423333048820496, 0.543666660785675, 0.5440000295639038, 0.54666668176651, 0.5460000038146973, 0.5473333597183228, 0.550000011920929, 0.5519999861717224, 0.5529999732971191]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [6, 4, 8, 4], [0, 1], [64], [0, 1, 0, 1, 1, 1], [6, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10028571635484695, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 5, 4, 1, 1, 5, 2, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, tf.math.pow(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [286861610.3143154, 21476307.022784308, 2770106.5388973965, 740716.8769721506, 217149.02266790534, 33822.06035737364, 1903379.8453535943, 553174.8672703421, 2345576.0581001975, 1161406.916010961, 304797.2556940133, 3780867.8493511425, 1605460.7224672774], "accuracy": [0.07819310575723648, 0.09008057415485382, 0.10328886657953262, 0.09998679161071777, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10077928751707077], "val_loss": [42831289.14285714, 4511583.428571428, 312040.59375, 31573.252301897322, 59779.15865652902, 100130.88539341518, 291980.2657296317, 12369.172031947544, 2327.179027421134, 3518.0266309465683, 27427.119698660714, 21130.05733816964, 25547.41614818573], "val_accuracy": [0.05900000035762787, 0.09333333373069763, 0.09566666930913925, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.09600000083446503, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09700000286102295, 0.09666666388511658, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [8, 7, 8, 4], [2, 1], [64], [1, 1, 0, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 7, 8, 4], [2, 1], [64], [0, 1, 0, 1, 0, 1], [3, 0, 9, 1, 2], [0, 0, 2], [85, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [306940536.64531523, 5813551933.912033, 26678943740.212917, 74928161180.25096, 156996221407.06592, 288644644632.44696], "accuracy": [0.08889182657003403, 0.09496764093637466, 0.09866596013307571, 0.09998679161071777, 0.10434553027153015, 0.09985470771789551], "val_loss": [1115547538.2857144, 8920097060.571428, 30100524470.857143, 71343833088.0, 139336749641.14285, 240765988278.85715], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 1, 6, 0, 5, 3, 2, 2, 8], [1, 0, 2, 3, 3, 2, 3], [72, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 18, 11, 7, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.sqrt(sigma), sigma)), beta))), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [2, 7, 8, 4], [2, 1], [64], [1, 0, 1, 0, 0, 1], [3, 0, 9, 1, 2], [1, 3, 2], [40, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [30.022482119625618, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03288865461945534, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1057.3612234933037, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [0, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [5, 8, 4, 0, 1, 0, 3, 9], [2, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1], [0, 4, 3, 1, 2, 3, 8, 7, 7, 9], [1, 0, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 7, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, beta), tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.multiply(grad, grad))), grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3024658234427084, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 2, 3, 1, 2, 4, 0, 1, 5, 4, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 98, 5, 49, 25], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 8, 6, 5, 9, 9, 3, 9], [0, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 7, 8, 4], [2, 1], [64], [1, 1, 1, 1, 0, 1], [7, 1, 9, 1, 2], [1, 0, 2], [74, 83, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [37644997.69936607, 5574567387.143574, 93660661220.34077, 673117969450.6047, 2871058022588.272, 9482909992662.715], "accuracy": [0.08902391046285629, 0.09496764093637466, 0.09866596013307571, 0.09998679161071777, 0.10434553027153015, 0.09985470771789551], "val_loss": [298461403.4285714, 16073838592.0, 172493640265.14285, 940327174144.0, 3522063723958.857, 10388779602505.143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 12, 28, 25], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [5, 3, 4, 0, 2, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85, 55], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 7, 8, 4], [2, 1], [64], [0, 1, 1, 1, 0, 1], [0, 4, 3, 1, 2, 3, 8, 7, 7, 9], [0, 0, 2], [74, 83, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 4, 11, 11, 7, 4, 1, 2, 1, 1, 0, 0, 2, 1, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.pow(alpha, tf.math.negative(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1241095238.2171023, 23513865873.735043, 107917708602.73358, 303100843949.4957, 635099184991.8605, 1167671089930.7864], "accuracy": [0.08889182657003403, 0.09496764093637466, 0.09866596013307571, 0.09998679161071777, 0.10434553027153015, 0.09998679161071777], "val_loss": [4511483172.571428, 36080964169.14286, 121761876260.57143, 288606650368.0, 563666728667.4286, 973994309339.4286], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 7, 8, 4], [1, 1], [64], [0, 1, 1, 1, 0, 1], [3, 4, 9, 1, 2], [1, 0, 2], [38, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3217872071810968, 2.4690955509646315, 9.399308163208685, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.057852331548929214, 0.010566635988652706, 0.035001982003450394, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.032971109662737, 2.341224806649344, 227.47252546037947, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004666666500270367, 0.007000000216066837, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 98, 5, 49, 25], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 7, 8, 4], [5, 1], [64], [0, 1, 0, 1, 0, 1], [1, 1, 9, 1, 2], [1, 1, 2], [15, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.subtract(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302463587579663, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 7, 8, 4], [2, 1], [64], [0, 1, 0, 1, 0, 1, 1], [4, 1, 6, 2, 2, 2, 4, 3, 4, 7, 6, 2, 9, 7, 1, 5, 2, 9, 3, 0, 5, 7, 0, 0, 4, 6, 2, 8, 5, 0, 2, 5, 5, 3, 2, 9, 8, 6, 1, 4, 0, 0, 6, 6, 1, 2, 8], [1, 0, 2, 3], [15, 52, 13, 19, 8, 16, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 0, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.negative(tf.math.negative(grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0], [2, 7, 8, 4], [1, 1], [64], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 9, 2, 5, 2, 8, 7, 7, 9, 3], [1, 0, 2, 3, 3, 2, 3], [40, 52, 13]], "fitness": -0.07085714489221573, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 15, 10, 5, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(sigma, tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), sigma))))))))", "other_info": {"loss": [2.3028531128688496, 2.301293168227277, 2.3003152658784742, 2.301140162104298, 2.3020573347283393, 2.3023009278503124, 2.302605402483806, 2.30280083196668, 2.3033036800848574, 2.3042712535966485], "accuracy": [0.08651433140039444, 0.09325055778026581, 0.10289261490106583, 0.09325055778026581, 0.09219389408826828, 0.10249637067317963, 0.108440101146698, 0.10500594228506088, 0.10117553919553757, 0.10011887550354004], "val_loss": [1.9700237682887487, 1.9706629344395228, 1.9720305715288435, 1.9726723262241908, 1.973379339490618, 1.9736320631844657, 1.9738710267203194, 1.9742542675563268, 1.9749114853995187, 1.976219313485282], "val_accuracy": [0.05700000002980232, 0.08100000023841858, 0.08166666328907013, 0.09700000286102295, 0.11599999666213989, 0.109333336353302, 0.10266666859388351, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [4, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 7, 8, 4], [2, 1], [64], [0, 1, 1, 1, 0, 1], [3, 9, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 17, 17, 10, 7, 4, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303343522156612, 2.3027897250178375, 2.302509268371578, 2.3024255365916626, 2.3008042804600617, 2.3002769195990966], "accuracy": [0.08572183549404144, 0.08506141602993011, 0.09285431355237961, 0.09628847241401672, 0.09351472556591034, 0.09391097724437714], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 7, 8, 4], [1, 1], [64], [0, 1, 0, 1, 0, 1], [3, 7, 9, 1, 2], [1, 2, 2], [15, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 17, 17, 10, 7, 4, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303343522156612, 2.3027897250178375, 2.302509268371578, 2.3024255365916626, 2.3008042804600617, 2.3002769195990966], "accuracy": [0.08572183549404144, 0.08506141602993011, 0.09285431355237961, 0.09628847241401672, 0.09351472556591034, 0.09391097724437714], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 6, 2, 4, 0, 1, 5, 9, 4, 2, 6, 3, 6, 5, 8], [1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 7, 8, 4], [2, 1], [64], [1, 1, 1, 1, 0, 1], [3, 1, 9, 1, 2, 0, 5, 3, 2, 2, 8], [1, 0, 2, 3, 3, 2, 3], [15, 86, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 17, 17, 10, 7, 4, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303343522156612, 2.3027897250178375, 2.302509268371578, 2.3024255365916626, 2.3008042804600617, 2.3002769195990966], "accuracy": [0.08572183549404144, 0.08506141602993011, 0.09285431355237961, 0.09628847241401672, 0.09351472556591034, 0.09391097724437714], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 3, 6, 2, 6, 0, 9, 5, 4, 4, 2, 6, 3, 6, 5, 8], [3, 0, 1, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [38, 32, 5, 49, 25], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 8, 2, 0, 0, 9, 3, 9], [1, 3, 3, 3, 1, 5, 3, 2, 1, 4, 4, 0], [85], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [0, 7, 8, 4], [2, 1], [64], [0, 1, 1, 1, 0, 1], [3, 1, 9, 1, 2], [1, 0, 2], [15, 52, 13]], "fitness": -0.03200000151991844, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3041535616708297, 2.3056291948141374, 2.307389503047451, 2.3093278646752537, 2.3097905879322376, 2.3113521338926253], "accuracy": [0.08321225643157959, 0.08083476126194, 0.08360850811004639, 0.08215559273958206, 0.07489103078842163, 0.07053229212760925], "val_loss": [1.9727576800755091, 1.9746036529541016, 1.9764675412859236, 1.978348868233817, 1.9802470888410295, 1.9821771212986536], "val_accuracy": [0.03233333304524422, 0.024666666984558105, 0.01733333244919777, 0.014000000432133675, 0.011666666716337204, 0.009666666388511658]}}]