[{"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 1, 2, 2, 4, 8, 4, 2, 4, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 3, 3, 3, 3, 2, 1, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8334285616874695, "mapping_values": [1, 4, 4, 2, 2, 1, 24, 24, 14, 10, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, grad), grad), tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), grad))))))), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, beta)))))), tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9776823338012433, 1.4823992161183326, 1.067215913235787, 0.8464311433033684, 0.7818149869168959, 0.7517211967140629, 0.6947887734084507, 0.6832363804286387, 0.6445189370392272, 0.6131148328319469, 0.5930454621398769, 0.5864237503541884, 0.5639652300819414, 0.5495358063969645, 0.5196285802202296, 0.5353428487607028, 0.4951700924992514, 0.4963842504815875, 0.4882039889730656, 0.4820055875047921, 0.460350117741984, 0.45720715629678155, 0.4484160639519831, 0.4547149548204961, 0.43405782237202184, 0.4347401671657756, 0.43544108974557305, 0.4213066432517297, 0.3992996382092945, 0.3916198262968682, 0.39243060339002594, 0.39031427628281345, 0.37590443656555084, 0.37373558238686005, 0.3846004327266853, 0.3700735311088718, 0.3551768992263974], "accuracy": [0.3549068868160248, 0.5081230998039246, 0.6322810649871826, 0.6859067678451538, 0.6985867023468018, 0.711530864238739, 0.7256637215614319, 0.7318716049194336, 0.7499669790267944, 0.7617223858833313, 0.7666094303131104, 0.770439863204956, 0.7857614755630493, 0.7893276810646057, 0.8043851256370544, 0.7903843522071838, 0.81548011302948, 0.8087438941001892, 0.8158763647079468, 0.8161405324935913, 0.8231409192085266, 0.8304054737091064, 0.828292191028595, 0.8343679904937744, 0.8381983637809753, 0.8350284099578857, 0.8422929644584656, 0.8428213000297546, 0.8479725122451782, 0.8532558679580688, 0.8561616539955139, 0.8518029451370239, 0.8590674996376038, 0.8623695969581604, 0.8535200357437134, 0.8621054291725159, 0.8672566413879395], "val_loss": [1.3977081435067313, 0.8404591253825596, 0.6545625584466117, 0.651661923953465, 0.6502741234643119, 0.5544649532863072, 0.5299491882324219, 0.5428167070661273, 0.5163661071232387, 0.47867938450404574, 0.4777377332959856, 0.49555397033691406, 0.44239883763449533, 0.4415422933442252, 0.4560548577989851, 0.4130554624966213, 0.40543198585510254, 0.4073322245052883, 0.41363195862088886, 0.3992730379104614, 0.41192352771759033, 0.38037064245768953, 0.38472104924065725, 0.3877249870981489, 0.37177829231534687, 0.36920940024512156, 0.3683903387614659, 0.35878158467156546, 0.3554630620138986, 0.3656846710613796, 0.35941448381968905, 0.35350596053259714, 0.35549852677753996, 0.3565834505217416, 0.3560553022793361, 0.3580119950430734, 0.34667534487588064], "val_accuracy": [0.5146666765213013, 0.6496666669845581, 0.703000009059906, 0.6896666884422302, 0.7056666612625122, 0.7223333120346069, 0.7580000162124634, 0.731333315372467, 0.765333354473114, 0.784333348274231, 0.7753333449363708, 0.7559999823570251, 0.8016666769981384, 0.7903333306312561, 0.7866666913032532, 0.8133333325386047, 0.8199999928474426, 0.812666654586792, 0.8209999799728394, 0.8199999928474426, 0.8146666884422302, 0.8323333263397217, 0.8343333601951599, 0.8326666951179504, 0.8399999737739563, 0.8446666598320007, 0.8396666646003723, 0.8513333201408386, 0.8510000109672546, 0.8353333473205566, 0.8426666855812073, 0.8539999723434448, 0.843666672706604, 0.8463333249092102, 0.8479999899864197, 0.8443333506584167, 0.8513333201408386]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 1, 2, 2, 4, 8, 0, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 0, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8334285616874695, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 8, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(grad)))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9772695657394785, 1.4752679755107965, 1.0648483700913491, 0.8298270755660627, 0.7827649620923667, 0.753399093602044, 0.7000547090478624, 0.6796362807233934, 0.6458994374614051, 0.615198738988144, 0.5937431173128711, 0.5852460831053394, 0.5618432742839854, 0.5527741632850777, 0.5219124155258065, 0.5256018593736124, 0.49077915051011456, 0.5032251250899746, 0.4860400249063378, 0.47798720850463966, 0.4658890101714708, 0.46210505914033095, 0.4447597158213396, 0.4500960698177817, 0.43114223971563387, 0.43518695221081416, 0.4382122567875857, 0.41795208819113105, 0.3982716290989509, 0.3906798458504025, 0.39193014505910617, 0.3863957492178772, 0.37365577476702627, 0.37745000376142074], "accuracy": [0.3551710546016693, 0.509311854839325, 0.6316206455230713, 0.6869634389877319, 0.6930392384529114, 0.7112666964530945, 0.7213049530982971, 0.7339849472045898, 0.7481178045272827, 0.7619865536689758, 0.767401933670044, 0.7718927264213562, 0.7873464822769165, 0.789459764957428, 0.8016114234924316, 0.7965922355651855, 0.8152159452438354, 0.8057059645652771, 0.8171972036361694, 0.8197067975997925, 0.8195747137069702, 0.824329674243927, 0.8330471515655518, 0.837537944316864, 0.8412362933158875, 0.8358209133148193, 0.8381983637809753, 0.8448025584220886, 0.8512746095657349, 0.8537842035293579, 0.8549728989601135, 0.8548408150672913, 0.8597279191017151, 0.8577466607093811], "val_loss": [1.3973113128117152, 0.8250654765537807, 0.6453503540584019, 0.6333409036908831, 0.6281364815575736, 0.541026132447379, 0.5389910084860665, 0.5349948746817452, 0.5154040370668683, 0.47628278391701834, 0.46771797112056185, 0.49042303221566336, 0.44564939396721975, 0.43847398247037617, 0.44770097732543945, 0.4099616067750113, 0.40375337430409025, 0.4090850438390459, 0.40260617222104755, 0.4020243457385472, 0.4259384870529175, 0.3806396041597639, 0.38877267496926443, 0.3852182797023228, 0.3705106888498579, 0.3710984928267343, 0.36413910559245516, 0.35662547179630827, 0.35746272121156963, 0.3627489038876125, 0.3557072877883911, 0.3577514461108616, 0.35291617257254465, 0.349931001663208], "val_accuracy": [0.5149999856948853, 0.6476666927337646, 0.7073333263397217, 0.6919999718666077, 0.7126666903495789, 0.734666645526886, 0.7666666507720947, 0.734666645526886, 0.7606666684150696, 0.7870000004768372, 0.7870000004768372, 0.7553333044052124, 0.8073333501815796, 0.7916666865348816, 0.7893333435058594, 0.8143333196640015, 0.8190000057220459, 0.8136666417121887, 0.8270000219345093, 0.815666675567627, 0.809333324432373, 0.8386666774749756, 0.8309999704360962, 0.8309999704360962, 0.8460000157356262, 0.8443333506584167, 0.8433333039283752, 0.8479999899864197, 0.8529999852180481, 0.8383333086967468, 0.8460000157356262, 0.8496666550636292, 0.8483333587646484, 0.8476666808128357]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 1, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [0, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8320000171661377, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9772677399841014, 1.47800878964521, 1.0233875150221403, 0.877805302486664, 0.7807197897441478, 0.7478146526665814, 0.7077627804033383, 0.6662806696848327, 0.6410523773483581, 0.6073100913973879, 0.5900227592416868, 0.5812537717135858, 0.5608252522936271, 0.5467402190501428, 0.5144038070320469, 0.5304319482626869, 0.4931088675833523, 0.5021601935907394, 0.48140977031566434, 0.47691328036881175, 0.4608247782284668, 0.45546761163001237, 0.44566378089509634, 0.440156171405635, 0.4301911194515644, 0.4307641882142843, 0.4371596089585299, 0.42394383356571513, 0.3945428619232349, 0.39093031551875396, 0.38904285267154853, 0.3877482346264347, 0.36902547179432343, 0.36941984223809304, 0.37570627681835217, 0.3620389920333751, 0.3573648018245574, 0.34465454067882845, 0.3335446967558696], "accuracy": [0.35503897070884705, 0.5079910159111023, 0.640338122844696, 0.6712455153465271, 0.6970016956329346, 0.7205125093460083, 0.7243428826332092, 0.7367587089538574, 0.7514199018478394, 0.763967752456665, 0.7667415142059326, 0.7749306559562683, 0.7835160493850708, 0.7924976944923401, 0.8049134612083435, 0.7943468689918518, 0.81548011302948, 0.8045172095298767, 0.8182538747787476, 0.817461371421814, 0.8207634687423706, 0.8289526104927063, 0.8313300609588623, 0.839519202709198, 0.839519202709198, 0.8362171649932861, 0.839519202709198, 0.8388587832450867, 0.8470479249954224, 0.8558974862098694, 0.8561616539955139, 0.8507462739944458, 0.8609166741371155, 0.8602562546730042, 0.8556333184242249, 0.8643507957458496, 0.8651432991027832, 0.8673887252807617, 0.8732003569602966], "val_loss": [1.3970185007367815, 0.8677996737616402, 0.6558664015361241, 0.636589629309518, 0.6466791459492275, 0.536388635635376, 0.5476417541503906, 0.5364245346614293, 0.5067590985979352, 0.4721831594194685, 0.47149557726723806, 0.47824651854378836, 0.44129750558308195, 0.43267366715839933, 0.4328690937587193, 0.4092093961579459, 0.4026363917759487, 0.40231760910579134, 0.4098321199417114, 0.394225469657353, 0.4075214011328561, 0.3816328985350473, 0.3760711295264108, 0.3942418694496155, 0.3678283265658787, 0.3691491740090506, 0.3691870059285845, 0.35601502656936646, 0.3544943758419582, 0.35808065107890535, 0.36148905754089355, 0.3520150099481855, 0.36237968717302593, 0.3395726680755615, 0.34837788343429565, 0.3563098396573748, 0.33269877093178885, 0.34630806956972393, 0.35233168942587717], "val_accuracy": [0.515333354473114, 0.6420000195503235, 0.7073333263397217, 0.6946666836738586, 0.7049999833106995, 0.7446666955947876, 0.7403333187103271, 0.7396666407585144, 0.7770000100135803, 0.7876666784286499, 0.7833333611488342, 0.7680000066757202, 0.8073333501815796, 0.79666668176651, 0.8003333210945129, 0.8183333277702332, 0.8233333230018616, 0.8190000057220459, 0.8196666836738586, 0.8266666531562805, 0.8143333196640015, 0.8353333473205566, 0.8410000205039978, 0.8270000219345093, 0.8429999947547913, 0.8423333168029785, 0.8429999947547913, 0.8479999899864197, 0.8500000238418579, 0.8433333039283752, 0.8399999737739563, 0.8519999980926514, 0.8393333554267883, 0.859000027179718, 0.8526666760444641, 0.8456666469573975, 0.8576666712760925, 0.8496666550636292, 0.8479999899864197]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 1, 2, 2, 4, 4, 4, 2, 1, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 0, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [17, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8288571238517761, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9774230964242696, 1.495585389534685, 1.0413024245535363, 0.8275529805065508, 0.7715021188878554, 0.7558953588460147, 0.7017226295857901, 0.6710710789250062, 0.6442748811329675, 0.6056147416065303, 0.5942696739244517, 0.5768676044650917, 0.563619860434781, 0.5457292382333887, 0.5155671220713162, 0.521369655103007, 0.4913428127017744, 0.500958991104255, 0.48456091572028803, 0.4795908709684651, 0.4655474346106976, 0.45623368789270774, 0.44193705001983974, 0.44906428024485723, 0.43226465694247107, 0.42863978980680606, 0.4415152086565728, 0.4168265159174814, 0.3922048924526975, 0.3910401096874303, 0.39223472154639605, 0.3866244188908809, 0.3711361388732823, 0.37218341009334377, 0.3752232587663426, 0.3645544819048666, 0.3489093474936507, 0.34462831212371775, 0.33385970973618956], "accuracy": [0.3547748029232025, 0.5021793842315674, 0.6279223561286926, 0.6905296444892883, 0.7025492191314697, 0.7136441469192505, 0.7207766771316528, 0.7387399077415466, 0.7486461400985718, 0.7689869403839111, 0.7705719470977783, 0.7761194109916687, 0.7827235460281372, 0.7923656105995178, 0.8024039268493652, 0.7988376617431641, 0.8149517774581909, 0.8064984679222107, 0.8195747137069702, 0.8190463781356812, 0.8198388814926147, 0.8304054737091064, 0.8343679904937744, 0.833179235458374, 0.8413683772087097, 0.8354246616363525, 0.8397833704948425, 0.8400475382804871, 0.8514066934585571, 0.8535200357437134, 0.856689989566803, 0.8533879518508911, 0.8632941246032715, 0.863029956817627, 0.8556333184242249, 0.8646149635314941, 0.8665962219238281, 0.867520809173584, 0.8709549307823181], "val_loss": [1.4117108072553362, 1.0042497771126884, 0.6471541609082904, 0.6873546327863421, 0.6640874147415161, 0.5667868171419416, 0.5185195548193795, 0.5238939693995884, 0.5152708292007446, 0.47234526702335905, 0.46588666098458426, 0.4796644449234009, 0.4390063626425607, 0.4307957717350551, 0.4485136185373579, 0.41230606181280954, 0.4029622418539865, 0.40550029277801514, 0.40769537006105694, 0.39732115609305246, 0.41439138991492136, 0.3891453572681972, 0.3762224146298, 0.39404332637786865, 0.3671899608203343, 0.3758412855012076, 0.3613452230181013, 0.35811218193599154, 0.3594196949686323, 0.3601574557168143, 0.36035346133368357, 0.3552116411072867, 0.3541795015335083, 0.3433716212000166, 0.3709790451186044, 0.350405820778438, 0.34044584206172396, 0.34276057141167776, 0.34786287375858854], "val_accuracy": [0.5063333511352539, 0.5993333458900452, 0.7160000205039978, 0.6940000057220459, 0.7039999961853027, 0.7160000205039978, 0.7643333077430725, 0.7483333349227905, 0.7630000114440918, 0.7893333435058594, 0.7863333225250244, 0.768666684627533, 0.8090000152587891, 0.8013333082199097, 0.7943333387374878, 0.8133333325386047, 0.8206666707992554, 0.8169999718666077, 0.8259999752044678, 0.8256666660308838, 0.8130000233650208, 0.828000009059906, 0.8416666388511658, 0.8289999961853027, 0.843666672706604, 0.8433333039283752, 0.8450000286102295, 0.8393333554267883, 0.8510000109672546, 0.843999981880188, 0.8423333168029785, 0.8476666808128357, 0.8483333587646484, 0.8553333282470703, 0.8309999704360962, 0.8476666808128357, 0.8529999852180481, 0.8523333072662354, 0.8483333587646484]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 1, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 0, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8205714225769043, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9774959170350688, 1.481034357723165, 1.0591697588793243, 0.8840447422882128, 0.7793457421959195, 0.7465488708345189, 0.7122090749453402, 0.6651727018213354, 0.6455965167448553, 0.6063695175221662, 0.5933111882748274, 0.5786872126674766, 0.5598297749905932, 0.5415431607621394, 0.5191036073712153, 0.5235167140139407, 0.4898750443405652, 0.500250019071093, 0.4819393565767807, 0.47535178227478786, 0.46063904449877063, 0.456355037694405, 0.43880902505302, 0.44285732643117115, 0.42826598786627534, 0.42975516920596096, 0.44676705523331434, 0.41779581228771295, 0.3937204028904761, 0.38834745674762494, 0.39147551024531674, 0.38617237350566275, 0.3770400539814064, 0.37067525449556177, 0.37377513090711717, 0.36321611184611563, 0.34948583702054775, 0.34670196287604593, 0.33125316146074774], "accuracy": [0.35503897070884705, 0.5068022608757019, 0.6312243938446045, 0.6742834448814392, 0.6993792057037354, 0.7181349992752075, 0.7199841737747192, 0.7338528633117676, 0.7532690763473511, 0.7643640041351318, 0.7680623531341553, 0.7758552432060242, 0.7857614755630493, 0.7902522683143616, 0.8050455451011658, 0.7979130744934082, 0.8173292875289917, 0.8068947196006775, 0.8210275769233704, 0.8189142942428589, 0.8212917447090149, 0.8304054737091064, 0.8350284099578857, 0.8368775844573975, 0.8418967127799988, 0.8374059200286865, 0.8364813327789307, 0.846387505531311, 0.8498216867446899, 0.8535200357437134, 0.8537842035293579, 0.8524633646011353, 0.8603883385658264, 0.8636903762817383, 0.8601241707801819, 0.8646149635314941, 0.8709549307823181, 0.8664641380310059, 0.8702945709228516], "val_loss": [1.3981563363756453, 0.8577802521841866, 0.6371050902775356, 0.630128298486982, 0.6120714800698417, 0.5396372761045184, 0.5443275315420968, 0.5345293964658465, 0.5077064207621983, 0.47475319249289377, 0.47238610471997944, 0.4824132578713553, 0.4396379164287022, 0.43616752113614765, 0.44553518295288086, 0.4085518717765808, 0.4019234776496887, 0.4016027706010001, 0.4049061962536403, 0.39679012128285, 0.4205569624900818, 0.3757419926779611, 0.3734692931175232, 0.38412535190582275, 0.37195303610392977, 0.36535286051886423, 0.3707658052444458, 0.35498138836451937, 0.3544178775378636, 0.3667041318757193, 0.3571606619017465, 0.3521028331347874, 0.3561504398073469, 0.3432072826794216, 0.35375423090798513, 0.3554250512804304, 0.3404980983052935, 0.3391778724534171, 0.35301776443208965], "val_accuracy": [0.515666663646698, 0.6446666717529297, 0.7229999899864197, 0.6980000138282776, 0.7289999723434448, 0.7386666536331177, 0.7429999709129333, 0.734333336353302, 0.7733333110809326, 0.7866666913032532, 0.7823333144187927, 0.765666663646698, 0.8113333582878113, 0.7976666688919067, 0.793666660785675, 0.8163333535194397, 0.8230000138282776, 0.8223333358764648, 0.8299999833106995, 0.8243333101272583, 0.8050000071525574, 0.840666651725769, 0.8423333168029785, 0.8339999914169312, 0.8399999737739563, 0.843999981880188, 0.8403333425521851, 0.8476666808128357, 0.8536666631698608, 0.8379999995231628, 0.8450000286102295, 0.8519999980926514, 0.8450000286102295, 0.8576666712760925, 0.846666693687439, 0.847000002861023, 0.8526666760444641, 0.8513333201408386, 0.8479999899864197]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 3, 5, 8, 4, 2, 4, 2, 6, 2, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 3, 1, 3, 1, 3, 2, 0, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.8134285807609558, "mapping_values": [1, 4, 4, 2, 2, 1, 24, 24, 14, 10, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(beta, grad), alpha), tf.math.add(beta, grad)), tf.math.add(beta, alpha))), grad)), beta))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))), tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.119406157417887, 1.3248281742776657, 1.0528171622694884, 0.8874429538816493, 0.8311595894074506, 0.7922791804871807, 0.7458320189744191, 0.7141507748426338, 0.6828292868534461, 0.6756342677644309, 0.6531476070143685, 0.6593666924556106, 0.6245443802531118, 0.6380934470585702, 0.6077427001614155, 0.6088358127225297, 0.5899550888075757, 0.5855352542325096, 0.5744737600921215, 0.5748826941604926, 0.566235672071893, 0.5556590596619629, 0.5490830506174367, 0.5538126962721198, 0.5382662239154694, 0.5335441828167685, 0.5337796138577127, 0.5393185417067342, 0.502775792259314, 0.5127729226600981, 0.5044677681958183, 0.5050978003365725, 0.4925673922779475], "accuracy": [0.3039228618144989, 0.5366530418395996, 0.6269977688789368, 0.6767930388450623, 0.6950204968452454, 0.7129837274551392, 0.718399167060852, 0.7283053994178772, 0.7378153204917908, 0.7436270117759705, 0.752212405204773, 0.7530049085617065, 0.7660810947418213, 0.7540615797042847, 0.7695152759552002, 0.7683265209197998, 0.770439863204956, 0.7786290049552917, 0.7829877138137817, 0.7788931727409363, 0.780610203742981, 0.7872143983840942, 0.7901201844215393, 0.7890635132789612, 0.7997622489929199, 0.7996301651000977, 0.7967243194580078, 0.7905164361000061, 0.8088759779930115, 0.8037247657775879, 0.8100647330284119, 0.8092722296714783, 0.8144234418869019], "val_loss": [1.2597877298082625, 0.8219719444002423, 0.6902488980974469, 0.6770171778542655, 0.6100947856903076, 0.5796914100646973, 0.5605102777481079, 0.5406902687890189, 0.5527757235935756, 0.5101366553987775, 0.5190210683005196, 0.5124521936689105, 0.4923706906182425, 0.49681433609553743, 0.49447308267865864, 0.48060103825160433, 0.46677701813834055, 0.46025984627859934, 0.4558722291673933, 0.45452187742505756, 0.46515566962105886, 0.44218805006572176, 0.4417734316417149, 0.4563177653721401, 0.4296149356024606, 0.4273882678576878, 0.44683970723833355, 0.42453385250908987, 0.4208085536956787, 0.4171471766063145, 0.4092604177338736, 0.4226155195917402, 0.41269522053854807], "val_accuracy": [0.562333345413208, 0.6553333401679993, 0.7043333053588867, 0.6949999928474426, 0.731333315372467, 0.7223333120346069, 0.7440000176429749, 0.7486666440963745, 0.7403333187103271, 0.768666684627533, 0.7596666812896729, 0.7670000195503235, 0.7713333368301392, 0.7696666717529297, 0.7549999952316284, 0.778333306312561, 0.7893333435058594, 0.7876666784286499, 0.7993333339691162, 0.8006666898727417, 0.781000018119812, 0.8069999814033508, 0.8059999942779541, 0.7850000262260437, 0.8106666803359985, 0.8173333406448364, 0.7893333435058594, 0.8186666369438171, 0.8163333535194397, 0.8183333277702332, 0.8153333067893982, 0.8136666417121887, 0.8100000023841858]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 3, 4, 2, 4, 2, 4, 2, 6, 2, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 0, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.7737143039703369, "mapping_values": [1, 4, 4, 2, 2, 1, 25, 25, 13, 12, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(grad, tf.math.add(beta, beta)))), tf.math.add(beta, beta))), tf.math.add(beta, grad)), beta), tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.math.sqrt(tf.math.add(beta, beta)))))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.138393977204523, 1.462891574863902, 1.0729456119423355, 0.9970143936046, 0.8371167773221698, 0.8393935804133402, 0.7502140695817907, 0.7564287904530406, 0.7034175158601946, 0.6951340034086438, 0.7003858508198977, 0.6593769480523621, 0.6595395122930405, 0.646723094468009], "accuracy": [0.2903183102607727, 0.49966979026794434, 0.6161669492721558, 0.6320168972015381, 0.6944921612739563, 0.6795667409896851, 0.7189275026321411, 0.7148329019546509, 0.7331924438476562, 0.7380794882774353, 0.7358341217041016, 0.755118191242218, 0.7493065595626831, 0.7559106945991516], "val_loss": [1.345702852521624, 0.8342747688293457, 0.7988701036998204, 0.7089718069349017, 0.6200539554868426, 0.580674580165318, 0.5830683197293963, 0.5395692416599819, 0.5245417867388044, 0.5884684153965541, 0.5247834580285209, 0.5159521273204258, 0.5221504994801113, 0.5111680371420724], "val_accuracy": [0.5789999961853027, 0.6499999761581421, 0.6480000019073486, 0.6919999718666077, 0.7103333473205566, 0.7403333187103271, 0.7229999899864197, 0.7566666603088379, 0.768666684627533, 0.7123333215713501, 0.7606666684150696, 0.7546666860580444, 0.7666666507720947, 0.7643333077430725]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [22, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 1, 2, 2, 4, 4, 5, 2, 1, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 3, 1, 3, 0, 3, 2, 0, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.6977142691612244, "mapping_values": [1, 4, 4, 2, 2, 1, 19, 19, 10, 9, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(grad, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3004489952720246, 2.290242630776287, 2.282940275271366, 2.2750324384490055, 2.2647904475855394, 2.2578002680026623, 2.2492527240901308, 2.2411980759969965, 2.2291811780686457, 2.2169922306679024, 2.205374601479015, 2.189980279783673, 2.175838869891194, 2.159939698476392, 2.1398786876526303, 2.118464145079706, 2.1008140727151354, 2.0762062630145115, 2.051794783062293, 2.017873377296761, 1.9892822515222894, 1.9556864696864706, 1.9251221699595624, 1.8803990518317766, 1.8445882098612736, 1.8099096206043532, 1.774814423962418, 1.7218452830434932, 1.6823973615549621, 1.649442501103385, 1.6116911455183895, 1.5680711354876806, 1.5343901957692156, 1.503771885574108, 1.4609363023017015, 1.4286889787111394, 1.4122243997931339, 1.375774767940165, 1.3590631063005565, 1.3285742117319093, 1.2992847406506742, 1.2897423577267717, 1.2784501608761782, 1.2510572097336439, 1.2270160725151056, 1.2147264102383564, 1.206528861587861, 1.1786974153781942, 1.1661071858275693, 1.1533326710440368, 1.1419516306795134, 1.1357786761708248, 1.1227769788230146, 1.1008215430169892, 1.0962696474903153, 1.0781570420588296, 1.0701938197124967, 1.0683685547214976, 1.0580311377979683, 1.052882409524042, 1.0389628565117761, 1.0312559552999487, 1.026690840925822, 1.01383364046286, 1.006156857333966, 0.9948768256252563, 0.988764198519818, 0.996016177062298, 0.9824282562003679], "accuracy": [0.09774138033390045, 0.11953506618738174, 0.1414608359336853, 0.1608770340681076, 0.19178444147109985, 0.2071060687303543, 0.22322018444538116, 0.2339189052581787, 0.25901466608047485, 0.28345000743865967, 0.29797911643981934, 0.3179236650466919, 0.32981112599372864, 0.3416985869407654, 0.35609564185142517, 0.36785101890563965, 0.3683793544769287, 0.38726720213890076, 0.3991546630859375, 0.4006075859069824, 0.41883501410484314, 0.4221371114253998, 0.42689210176467896, 0.4411570429801941, 0.4542332589626312, 0.4523840844631195, 0.46044114232063293, 0.4827631711959839, 0.4839519262313843, 0.49214106798171997, 0.49227315187454224, 0.5012547969818115, 0.5180293321609497, 0.5260863900184631, 0.5285959839820862, 0.5388984084129333, 0.531369686126709, 0.5473517179489136, 0.5468233823776245, 0.5489367246627808, 0.5680887699127197, 0.5675604343414307, 0.5645225048065186, 0.5691454410552979, 0.5766741633415222, 0.5868445634841919, 0.5818253755569458, 0.5886936783790588, 0.6015057563781738, 0.6009774208068848, 0.6020340919494629, 0.6048077940940857, 0.6071853041648865, 0.6145819425582886, 0.6168273687362671, 0.6166952848434448, 0.6238277554512024, 0.617751955986023, 0.625148594379425, 0.6289790272712708, 0.6402060389518738, 0.6386210322380066, 0.6373002529144287, 0.6429798007011414, 0.6462818384170532, 0.64667809009552, 0.656980574131012, 0.6470743417739868, 0.6556597352027893], "val_loss": [1.9639221600123815, 1.956495761871338, 1.948972157069615, 1.9413666043962752, 1.933361189705985, 1.9251257351466589, 1.9163430758884974, 1.9069633483886719, 1.8968761989048548, 1.8856759752546037, 1.8734802518572127, 1.8598807879856654, 1.8451001303536552, 1.8288359642028809, 1.8107810701642717, 1.7909622192382812, 1.7693584987095423, 1.7455699784415108, 1.7200101443699427, 1.6917733805520194, 1.6614341735839844, 1.628840548651559, 1.5946746553693498, 1.558058398110526, 1.5201777049473353, 1.4813297816685267, 1.4417570999690466, 1.4009406566619873, 1.3600051062447684, 1.3202078001839774, 1.281240701675415, 1.2438387530190604, 1.2082042694091797, 1.1741234574999129, 1.1415690694536482, 1.1108379364013672, 1.0829750469752721, 1.0559160368783134, 1.0313615798950195, 1.0081350803375244, 0.9858732223510742, 0.9656739916120257, 0.9478520665849958, 0.9306663445064, 0.9140487057822091, 0.899313109261649, 0.8855575493403843, 0.8719658851623535, 0.8587322916303363, 0.8471040214811053, 0.8358683075223651, 0.8256875787462506, 0.8159326485225132, 0.8060746533530099, 0.7965986217771258, 0.788056458745684, 0.780521103313991, 0.7731539011001587, 0.7662066221237183, 0.7591863700321743, 0.7526171888623919, 0.7458405664988926, 0.7399022238595145, 0.7337293795176915, 0.7288511140005929, 0.7238548142569405, 0.7186441421508789, 0.7137227399008614, 0.7089344263076782], "val_accuracy": [0.08699999749660492, 0.16200000047683716, 0.23600000143051147, 0.28833332657814026, 0.32633334398269653, 0.3543333411216736, 0.3726666569709778, 0.38966667652130127, 0.4013333320617676, 0.414000004529953, 0.43533334136009216, 0.4476666748523712, 0.4569999873638153, 0.4716666638851166, 0.4806666672229767, 0.49166667461395264, 0.5009999871253967, 0.5083333253860474, 0.5166666507720947, 0.5270000100135803, 0.5329999923706055, 0.5396666526794434, 0.546999990940094, 0.5486666560173035, 0.5583333373069763, 0.5636666417121887, 0.5680000185966492, 0.5733333230018616, 0.5799999833106995, 0.5823333263397217, 0.5883333086967468, 0.5946666598320007, 0.6026666760444641, 0.612666666507721, 0.621999979019165, 0.6340000033378601, 0.6413333415985107, 0.6449999809265137, 0.6510000228881836, 0.6536666750907898, 0.6556666493415833, 0.659333348274231, 0.6606666445732117, 0.6646666526794434, 0.6690000295639038, 0.668666660785675, 0.6693333387374878, 0.6726666688919067, 0.6759999990463257, 0.6779999732971191, 0.6826666593551636, 0.6823333501815796, 0.6833333373069763, 0.6846666932106018, 0.6866666674613953, 0.6886666417121887, 0.6890000104904175, 0.690666675567627, 0.6926666498184204, 0.6943333148956299, 0.6966666579246521, 0.6966666579246521, 0.6973333358764648, 0.7009999752044678, 0.6993333101272583, 0.6990000009536743, 0.6976666450500488, 0.699999988079071, 0.7006666660308838]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 1, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 3, 1, 3, 2, 3, 2, 0, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10371428728103638, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [4.176503138472265, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19535067677497864, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0591356413705006, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 7, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 0, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10028571635484695, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.6126332748992264e+29, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06617355346679688, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 1, 2, 2, 4, 4, 4, 2, 1, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 2, 3, 1, 3, 2, 3, 2, 0, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 25, 25, 14, 11, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), beta), tf.math.add(beta, grad)), beta)), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))))), tf.math.square(tf.math.add(beta, grad)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [31, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 3, 5, 2, 4, 2, 4, 2, 0, 2, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 1, 3, 3, 3, 2, 3, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 17, 17, 9, 8, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), grad)))), tf.math.add(beta, beta)), tf.math.add(beta, grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3254797788989574, 2.399580610867552, 2.663810436358116, 8.41494766626522e+29, 2.304267780514063, 2.304333840914217, 2.3044086479476227, 2.304484561449816, 2.3045625248290387], "accuracy": [0.05639941990375519, 0.022057851776480675, 0.013208295218646526, 0.09021265059709549, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0246567044939314, 2.129328863961356, 3.058295726776123, NaN, 1.9755768094744002, 1.9756457465035575, 1.9757210186549596, 1.975796835763114, 1.9758789879935128], "val_accuracy": [0.0033333334140479565, 0.004666666500270367, 0.06533333659172058, 0.0989999994635582, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [32, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 1, 2, 2, 4, 8, 4, 2, 0, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 0, 3, 3, 3, 1, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 16, 16, 9, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(alpha, tf.math.sqrt(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), grad)), tf.math.pow(tf.math.add(beta, grad), grad))), tf.math.add(beta, tf.math.add(tf.math.negative(alpha), tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302803218325352, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [19, 66, 89, 50, 85, 46], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 1, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 0, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [34, 44, 52, 66, 2, 57, 35, 9, 54, 64], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0], [4, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 13, 9, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, beta)), tf.math.add(beta, beta)))), grad))), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, beta))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.7732555571252703e+24, 45.111643517982564, 144.38377902769471, 300.870094792088, 515.3763472234978, 787.0318375369419], "accuracy": [0.08334434032440186, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16.205896650041854, 80.99644470214844, 195.26406860351562, 359.10646275111606, 572.4290422712054, 835.286603655134], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 1, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [4, 0, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [17, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08228767663240433, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 0, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3025289096411554, 2.3024527666638352, 2.3025248029905616, 2.3026181329526385, 2.3024106358241063, 2.3024710317439627], "accuracy": [0.10434553027153015, 0.09906221181154251, 0.10170386731624603, 0.1022322028875351, 0.10381719470024109, 0.09998679161071777], "val_loss": [1.9737367630004883, 1.9737937109810966, 1.9737757274082728, 1.973780972617013, 1.9739928245544434, 1.9743274280003138], "val_accuracy": [0.10466666519641876, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 5, 9, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 1, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [33, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [7, 0, 2], [67, 2], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.08342856913805008, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.3031107957069317, 2.3001302272069566, 2.3002165738129583, 2.3003106804067874, 2.299120881601237, 2.2994065997370985, 2.3003369992230596, 2.3007457308277335, 2.3003820687111234, 2.3003152333797323, 2.3009561289098395, 2.3006914131173115], "accuracy": [0.09192973375320435, 0.09747721254825592, 0.0952318087220192, 0.10157178342342377, 0.10619468986988068, 0.10593052208423615, 0.09549596905708313, 0.09074098616838455, 0.09272222965955734, 0.09906221181154251, 0.09496764093637466, 0.09192973375320435], "val_loss": [1.9702560561043876, 1.9701403209141322, 1.9700893674577986, 1.9699837139674596, 1.9700086457388741, 1.9702412060328893, 1.9706776482718331, 1.9709839820861816, 1.9713608196803503, 1.9716949462890625, 1.9719481468200684, 1.9721251896449499], "val_accuracy": [0.05000000074505806, 0.05833333358168602, 0.06566666811704636, 0.070333331823349, 0.07500000298023224, 0.07199999690055847, 0.07566666603088379, 0.07199999690055847, 0.07366666942834854, 0.07366666942834854, 0.06866666674613953, 0.06366666406393051]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [40, 66, 89, 50, 85, 46], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 3, 5, 2, 4, 2, 4, 2, 6, 6, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [17, 78, 52, 66, 2, 57, 35, 9, 54, 64], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [4, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.07514286041259766, "mapping_values": [1, 4, 4, 2, 2, 0, 25, 25, 14, 11, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(grad, grad)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))), grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, grad))))), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3034545772221455, 2.300742964340853, 2.3009496116524817, 2.3010161038576227, 2.2999917058550436, 2.3006683262253262, 2.3014476044208556, 2.301627355528199, 2.3001023328630223, 2.299497533168901, 2.2999314162489006, 2.2997483260218083, 2.299647667813909, 2.300092156474081], "accuracy": [0.09206181764602661, 0.09140139818191528, 0.09325055778026581, 0.0936468094587326, 0.10276053100824356, 0.10011887550354004, 0.08849557489156723, 0.09153348207473755, 0.09615638852119446, 0.10342095047235489, 0.1018359512090683, 0.09602430462837219, 0.09734513610601425, 0.09840179979801178], "val_loss": [1.9708521025521415, 1.9706085068838937, 1.970365388052804, 1.9704393659319197, 1.9706313950674874, 1.9706557818821497, 1.9704741750444685, 1.9701824188232422, 1.9701333727155412, 1.9702580996922083, 1.9703943388802665, 1.9705520357404436, 1.9707421575273787, 1.9709760802132743], "val_accuracy": [0.04399999976158142, 0.04866666719317436, 0.05400000140070915, 0.0560000017285347, 0.057999998331069946, 0.061666667461395264, 0.06499999761581421, 0.06866666674613953, 0.07133333384990692, 0.07066666334867477, 0.07100000232458115, 0.06833333522081375, 0.07133333384990692, 0.06933332979679108]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [19, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 6, 2, 2, 4, 8, 4, 1, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [2, 0, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [34, 44, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.04028571397066116, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3037831135839126, 2.301548555337868, 2.3024578337908075, 2.302409277741998, 2.3011026933224383, 2.302109959984909], "accuracy": [0.09087307006120682, 0.09060890227556229, 0.08902391046285629, 0.0882314071059227, 0.0944393053650856, 0.09430722147226334], "val_loss": [1.9714491707938058, 1.9714578901018416, 1.9714665412902832, 1.971475464957101, 1.9714842523847307, 1.9714930398123605], "val_accuracy": [0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161, 0.03500000014901161]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [8, 1, 2, 2, 4, 8, 4, 2, 6, 8, 6, 0, 8, 5, 0, 0, 2, 1, 2, 6, 5, 3, 9, 2, 1, 2, 2, 3, 9, 0, 6, 3, 0, 0, 8, 0, 7, 2, 6, 0, 2, 1, 6, 0, 2], [1, 0, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3, 3, 3, 2, 4, 3, 0, 1, 4, 1, 1, 1, 5, 1, 3, 3, 4, 2, 1, 4, 4], [17, 78, 52, 66, 2, 57, 35, 9, 54, 64], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0], [3, 7, 3, 4, 9], [4, 0, 2], [67, 2], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 7, 7, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 2, 0, 2, 2], [30, 23, 13, 96, 41]], "fitness": -0.02857142873108387, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [6.246293277284488, 242.00229135779594, NaN, NaN, NaN, NaN], "accuracy": [0.1814819723367691, 0.10315678268671036, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [31.68978554861886, 1452.744873046875, NaN, NaN, NaN, NaN], "val_accuracy": [0.13466666638851166, 0.10466666519641876, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]