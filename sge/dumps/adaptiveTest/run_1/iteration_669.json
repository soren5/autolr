[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.831428587436676, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 8, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0684536127382187, 1.7304977767298393, 1.236247659028718, 0.9565946482994836, 0.828494271511226, 0.7756707083516038, 0.7335725734105057, 0.6652224136932477, 0.6418818178556032, 0.6212639201743932, 0.5936731332643645, 0.5691046825158771, 0.5813126649209112, 0.5373921386554115, 0.5327448339872294, 0.5166495271000517, 0.5278272351426944, 0.5111571150551288, 0.5323138216845253, 0.4725253559838921, 0.4685114314842375, 0.4871055507278871, 0.4431593369782609, 0.4323734414497182, 0.4626436833503334, 0.43968139363081543, 0.43515959160045437, 0.41091661521897516, 0.4134654159937017, 0.3995127755739685, 0.39022675526219275, 0.3890671174657847, 0.3762728331930145, 0.3869996095385455, 0.36558614779677545, 0.3598283205199566, 0.367068919893332, 0.36458631047420276, 0.35476386686436423, 0.3366716454577342, 0.33506697152174536, 0.3162603761895993, 0.3344524737126193, 0.33584509400439033, 0.30796979734800306, 0.31994147853230315, 0.3155760675286888, 0.3001747938580816, 0.30490295864713507, 0.30106949577116143, 0.2944668307359177, 0.3025950146522882, 0.28025861063795227, 0.28543206620895, 0.26853511697895505, 0.2615296019932786, 0.26829946713047004, 0.2656072607058985, 0.2642097483851481, 0.261306449776832], "accuracy": [0.27605336904525757, 0.42543917894363403, 0.5415400862693787, 0.637828528881073, 0.6896050572395325, 0.7111346125602722, 0.7181349992752075, 0.7504953145980835, 0.7557786107063293, 0.761590301990509, 0.7765156626701355, 0.7864218950271606, 0.7751948237419128, 0.7950072884559631, 0.7994980812072754, 0.8070268034934998, 0.8016114234924316, 0.8145555257797241, 0.8061022162437439, 0.8220842480659485, 0.829216718673706, 0.8168009519577026, 0.8364813327789307, 0.8451988101005554, 0.8300092220306396, 0.8374059200286865, 0.8376700282096863, 0.8461233377456665, 0.850350022315979, 0.8492933511734009, 0.856689989566803, 0.856689989566803, 0.8570862412452698, 0.852331280708313, 0.8693699836730957, 0.8688416481018066, 0.8618412613868713, 0.8597279191017151, 0.8643507957458496, 0.8737286925315857, 0.8749174475669861, 0.8845595121383667, 0.874389111995697, 0.8737286925315857, 0.8898428082466125, 0.8787478804588318, 0.880729079246521, 0.8878615498542786, 0.8836349248886108, 0.8825782537460327, 0.8845595121383667, 0.889578640460968, 0.8938053250312805, 0.8943336606025696, 0.8989565372467041, 0.9019944667816162, 0.89552241563797, 0.89988112449646, 0.8993527889251709, 0.8949940800666809], "val_loss": [1.3571483407701765, 1.3767098699297224, 0.710492593901498, 0.6265731028148106, 0.5836353302001953, 0.6227156434740339, 0.5624047177178519, 0.5158130441393171, 0.4867767095565796, 0.45664024353027344, 0.49940526485443115, 0.4903226409639631, 0.4417137588773455, 0.43009609835488455, 0.4313404219491141, 0.47025627749306814, 0.474393401827131, 0.3986594421522958, 0.3907451033592224, 0.42250495297568186, 0.42581361532211304, 0.37749299832752775, 0.3941467915262495, 0.40191225494657246, 0.3660609040941511, 0.3894673671041216, 0.3741547805922372, 0.3558992658342634, 0.3615561468260629, 0.3649751203400748, 0.3683226534298488, 0.3525484800338745, 0.3720531463623047, 0.3528524211474827, 0.35042308058057514, 0.34672872509275166, 0.3657222901071821, 0.3275737592152187, 0.35242451088769094, 0.34316819054739817, 0.34883417401994976, 0.33554854563304354, 0.3552595887865339, 0.3284007396016802, 0.34318103960582186, 0.32776578835078646, 0.32956572089876446, 0.32425942591258455, 0.3858931745801653, 0.3339776567050389, 0.33642074891499113, 0.317800053528377, 0.333040714263916, 0.3414591806275504, 0.3266417554446629, 0.31845684562410626, 0.33856920685086933, 0.33585284437452045, 0.3356537904058184, 0.37202538762773785], "val_accuracy": [0.42766666412353516, 0.4273333251476288, 0.6890000104904175, 0.7226666808128357, 0.7433333396911621, 0.7026666402816772, 0.7603333592414856, 0.768666684627533, 0.7806666493415833, 0.8056666851043701, 0.7680000066757202, 0.7763333320617676, 0.8033333420753479, 0.8113333582878113, 0.8100000023841858, 0.7876666784286499, 0.7993333339691162, 0.82833331823349, 0.8366666436195374, 0.8026666641235352, 0.8163333535194397, 0.8389999866485596, 0.8320000171661377, 0.8253333568572998, 0.8453333377838135, 0.8349999785423279, 0.8363333344459534, 0.8479999899864197, 0.8453333377838135, 0.8433333039283752, 0.8389999866485596, 0.8503333330154419, 0.8416666388511658, 0.846666693687439, 0.8556666374206543, 0.856333315372467, 0.8503333330154419, 0.8629999756813049, 0.859000027179718, 0.859000027179718, 0.8560000061988831, 0.8663333058357239, 0.8493333458900452, 0.8619999885559082, 0.8569999933242798, 0.862666666507721, 0.8676666617393494, 0.8693333268165588, 0.8253333568572998, 0.8600000143051147, 0.8610000014305115, 0.8700000047683716, 0.859333336353302, 0.8600000143051147, 0.871666669845581, 0.8703333139419556, 0.8610000014305115, 0.8646666407585144, 0.8690000176429749, 0.8489999771118164]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 2, 3, 4, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 0, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 27, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.822857141494751, "mapping_values": [1, 4, 4, 3, 1, 1, 14, 14, 8, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad), tf.math.add(beta, grad))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.08076106486398, 1.665710253108368, 1.3560208150692084, 1.070962464836185, 0.8585229082082981, 0.7937410469887168, 0.7288034856831157, 0.6773757009206431, 0.6462089732858121, 0.6242317117483955, 0.6113160671480516, 0.5916270335525837, 0.6040304173032573, 0.5630290640611312, 0.55526520342733, 0.5280785002468789, 0.5208352259625344, 0.5157865204862742, 0.5418920153876211, 0.5003671827191579, 0.46606057443796384, 0.4608826189071999, 0.4646790003370316, 0.46366225504021774, 0.43669188502851713, 0.4602257109132378, 0.44119455610929526, 0.42757130853252134, 0.4299700649312742, 0.4175065281628586, 0.40716242937836367, 0.41492887565787634, 0.40095159566523675, 0.4043756314807832, 0.381578306212732, 0.3811032272419673, 0.3869081746396639], "accuracy": [0.2641659080982208, 0.4418174624443054, 0.5241051316261292, 0.6242240071296692, 0.6752080321311951, 0.7066437602043152, 0.7239466309547424, 0.7425703406333923, 0.76106196641922, 0.7601373791694641, 0.7671377658843994, 0.7770439982414246, 0.7712323069572449, 0.7881389260292053, 0.7897239327430725, 0.8017435073852539, 0.8026680946350098, 0.8098005652427673, 0.7955356240272522, 0.813498854637146, 0.828292191028595, 0.8286884427070618, 0.8256505131721497, 0.8274996876716614, 0.8379341959953308, 0.8269713521003723, 0.8347642421722412, 0.8404437899589539, 0.8391229510307312, 0.841500461101532, 0.8481045961380005, 0.8449346423149109, 0.8511425256729126, 0.8486329317092896, 0.8619733452796936, 0.8544445633888245, 0.8618412613868713], "val_loss": [1.7965587207249232, 1.220891066959926, 1.0306424413408553, 0.6689599752426147, 0.6081353596278599, 0.5687706640788487, 0.5990523951394218, 0.5240799529211861, 0.50499085017613, 0.4897694247109549, 0.48493504524230957, 0.5046363728387016, 0.46173785414014545, 0.43226449830191477, 0.4680767740522112, 0.418323244367327, 0.4687480926513672, 0.40726772376469206, 0.42626820291791645, 0.4029048340661185, 0.40416060175214497, 0.3872739332062857, 0.41167054006031584, 0.3921133960996355, 0.39740222692489624, 0.4016202007021223, 0.3873979960169111, 0.36297730037144255, 0.37344592809677124, 0.38755240610667635, 0.3711503658975874, 0.35325235979897635, 0.38818280185971943, 0.3463536926678249, 0.3618596111025129, 0.3742183191435678, 0.37137036664145334], "val_accuracy": [0.45266667008399963, 0.4976666569709778, 0.5849999785423279, 0.7009999752044678, 0.734666645526886, 0.7356666922569275, 0.7139999866485596, 0.7676666378974915, 0.7753333449363708, 0.7799999713897705, 0.7836666703224182, 0.7649999856948853, 0.7960000038146973, 0.8096666932106018, 0.7883333563804626, 0.8186666369438171, 0.7993333339691162, 0.8230000138282776, 0.8196666836738586, 0.8263333439826965, 0.8236666917800903, 0.8306666612625122, 0.8246666789054871, 0.8343333601951599, 0.8236666917800903, 0.828000009059906, 0.8360000252723694, 0.8446666598320007, 0.843666672706604, 0.8309999704360962, 0.8396666646003723, 0.8550000190734863, 0.8376666903495789, 0.8519999980926514, 0.8429999947547913, 0.8426666855812073, 0.8423333168029785]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 0, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.821142852306366, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0684745640031035, 1.5720978879405838, 1.3507087516306004, 0.9935749267086361, 0.8736406985905034, 0.7753018383982316, 0.7278956808135053, 0.697024190249523, 0.6457646896716012, 0.6514143824356894, 0.6327546192686146, 0.5864698920330556, 0.5750924751207798, 0.5572084064780288, 0.5453579977377138, 0.5305712134090822, 0.541971992326844, 0.5051056514515648, 0.5335070925019657, 0.49163584070844324, 0.47159351699183155, 0.4916185641710737, 0.4592798995918145, 0.4500699950687921, 0.4412337397390652, 0.4493671476549681, 0.45499003741247085, 0.4272186986884547, 0.41568093260659394, 0.41247579190063755, 0.3962861619463623, 0.4005866661213172, 0.39530343716375393, 0.3904224385470132, 0.3777455989049489, 0.37186561573482285, 0.394071546559478], "accuracy": [0.27605336904525757, 0.4449874460697174, 0.537709653377533, 0.6355831623077393, 0.6823405027389526, 0.7083608508110046, 0.7230220437049866, 0.7362303733825684, 0.7569673657417297, 0.7518161535263062, 0.7613261342048645, 0.7751948237419128, 0.7820631265640259, 0.7897239327430725, 0.7927618622779846, 0.7975168228149414, 0.7959318161010742, 0.811649739742279, 0.7994980812072754, 0.8177255392074585, 0.8203672170639038, 0.813498854637146, 0.8297450542449951, 0.837537944316864, 0.8356888294219971, 0.8319904804229736, 0.8321225643157959, 0.842028796672821, 0.8469158411026001, 0.8492933511734009, 0.8525954484939575, 0.850350022315979, 0.8527275323867798, 0.8535200357437134, 0.8623695969581604, 0.8631620407104492, 0.8564258217811584], "val_loss": [1.3679162434169225, 1.324455806187221, 1.004296030317034, 0.7676669699805123, 0.5880544185638428, 0.5779447896139962, 0.6197628634316581, 0.5301798752376011, 0.5002499648502895, 0.47779977321624756, 0.4797405004501343, 0.4703210932867868, 0.44419424874441965, 0.4301926919392177, 0.4585550342287336, 0.5033955233437675, 0.44497358798980713, 0.40727771180016653, 0.3981239710535322, 0.4001119477408273, 0.4398318699428013, 0.38466390541621615, 0.39633157423564364, 0.40624513796397616, 0.3808214068412781, 0.3887345790863037, 0.39220769916261944, 0.3605771405356271, 0.3676840662956238, 0.39166635274887085, 0.35921560866492136, 0.3522423335484096, 0.363553592136928, 0.35116744892937796, 0.3484627604484558, 0.3879228745188032, 0.3817874108042036], "val_accuracy": [0.4259999990463257, 0.4313333332538605, 0.5640000104904175, 0.6826666593551636, 0.7393333315849304, 0.734666645526886, 0.7196666598320007, 0.7620000243186951, 0.7826666831970215, 0.781000018119812, 0.7883333563804626, 0.7836666703224182, 0.7973333597183228, 0.8143333196640015, 0.7963333129882812, 0.7766666412353516, 0.8096666932106018, 0.8256666660308838, 0.8299999833106995, 0.8203333616256714, 0.8059999942779541, 0.8363333344459534, 0.8296666741371155, 0.8236666917800903, 0.8366666436195374, 0.8373333215713501, 0.8366666436195374, 0.843999981880188, 0.8476666808128357, 0.8243333101272583, 0.8526666760444641, 0.8556666374206543, 0.8489999771118164, 0.8476666808128357, 0.8516666889190674, 0.8306666612625122, 0.8379999995231628]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [44, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8197143077850342, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 8, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0284606866738297, 1.330018665087993, 1.053850942110861, 0.883326327733045, 0.8289914593059216, 0.7401646641755322, 0.7373364169552593, 0.7351203034062979, 0.6851704845480742, 0.650748008104631, 0.6581671291480305, 0.6252984619883813, 0.6038817540450796, 0.6063116324214005, 0.617722941018083, 0.579138554334483, 0.5850572734933409, 0.5484720584171922, 0.5461196825016507, 0.5441364119703491, 0.5268151773721188, 0.5302841916312284, 0.5201890859401079, 0.5026188392239854, 0.4900403577598677, 0.5027640378785376, 0.49157417042537876, 0.48616829329887323, 0.4564369052998882, 0.45954106043295506, 0.44453129722630863, 0.4489592686935171, 0.4597357163977519, 0.4349036079434954, 0.4407102577383366, 0.42478648372503275, 0.43510800959049606, 0.41968087214898314, 0.40828025525256456, 0.4090778031062299, 0.3990454193410809, 0.3919401818719349, 0.3879508323216593, 0.39143037276024895, 0.36753970640462386, 0.3942212934200207, 0.3887295150651341, 0.3783018729233581, 0.36243758336144544], "accuracy": [0.31699907779693604, 0.5301809310913086, 0.6189407110214233, 0.6705851554870605, 0.6922467350959778, 0.7250033020973206, 0.7213049530982971, 0.7255316376686096, 0.7448157668113708, 0.7528728246688843, 0.7512878179550171, 0.7631752490997314, 0.7724210619926453, 0.7683265209197998, 0.7609298825263977, 0.7862898111343384, 0.7814027070999146, 0.7944789528846741, 0.8014793395996094, 0.7895918488502502, 0.8045172095298767, 0.805177628993988, 0.8059701323509216, 0.8136309385299683, 0.8219521641731262, 0.8142913579940796, 0.8168009519577026, 0.8144234418869019, 0.8335754871368408, 0.82683926820755, 0.8330471515655518, 0.8325188159942627, 0.8269713521003723, 0.8430854678153992, 0.8354246616363525, 0.8388587832450867, 0.839519202709198, 0.8446704745292664, 0.8486329317092896, 0.8498216867446899, 0.8512746095657349, 0.8568220734596252, 0.8549728989601135, 0.8570862412452698, 0.863558292388916, 0.8520671129226685, 0.8536521196365356, 0.8613129258155823, 0.867520809173584], "val_loss": [1.4741343430110387, 0.8026282957621983, 0.8177374431065151, 0.6590981142861503, 0.5765292644500732, 0.6347418853214809, 0.6470421041761126, 0.5228658063071114, 0.5509486879621234, 0.4866518293108259, 0.5066648040499006, 0.4870034285954067, 0.466984714780535, 0.4840548889977591, 0.47662780966077534, 0.4769082580293928, 0.4674475022724697, 0.43143828426088604, 0.44020586354391916, 0.42184782879693167, 0.4845834118979318, 0.40899587529046194, 0.4158501284463065, 0.40943968296051025, 0.4038955569267273, 0.4088235412325178, 0.421414315700531, 0.39279247181756155, 0.38688796758651733, 0.4293710333960397, 0.37547064679009573, 0.38702971594674246, 0.36546988998140606, 0.3665485978126526, 0.3862916742052351, 0.38692467553274973, 0.3773754835128784, 0.35499454396111624, 0.3819829395839146, 0.3806437339101519, 0.3510445696966989, 0.3491613950048174, 0.3823293958391462, 0.3383219838142395, 0.34971673999513897, 0.38302499055862427, 0.35420707293919157, 0.3369450143405369, 0.4088527730533055], "val_accuracy": [0.4723333418369293, 0.6669999957084656, 0.6209999918937683, 0.718999981880188, 0.7483333349227905, 0.6986666917800903, 0.7160000205039978, 0.7723333239555359, 0.7400000095367432, 0.7923333048820496, 0.7799999713897705, 0.7903333306312561, 0.7973333597183228, 0.7889999747276306, 0.7873333096504211, 0.7866666913032532, 0.8006666898727417, 0.8133333325386047, 0.812666654586792, 0.8193333148956299, 0.7816666960716248, 0.8226666450500488, 0.8240000009536743, 0.8306666612625122, 0.8343333601951599, 0.8256666660308838, 0.812666654586792, 0.8230000138282776, 0.8416666388511658, 0.8036666512489319, 0.8450000286102295, 0.8366666436195374, 0.8513333201408386, 0.8503333330154419, 0.8293333053588867, 0.840666651725769, 0.8383333086967468, 0.8529999852180481, 0.8399999737739563, 0.8326666951179504, 0.8539999723434448, 0.8600000143051147, 0.8303333520889282, 0.8603333234786987, 0.8483333587646484, 0.8330000042915344, 0.8493333458900452, 0.8600000143051147, 0.812333345413208]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 0, 6, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8180000185966492, "mapping_values": [1, 4, 4, 2, 2, 1, 12, 12, 8, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.068436472360185, 1.547308049244793, 1.5024558036019695, 1.1689324712378553, 0.8585979936460163, 0.785777236641894, 0.7286577201664267, 0.6578457836682188, 0.6622358852326515, 0.6239276575437548, 0.597686698061679, 0.5978355544307181, 0.5636494294637545, 0.5466361481751969, 0.5350961412389627, 0.5158049842354298, 0.552571848973685, 0.4783323511251007, 0.5293099028149993, 0.4740264587996894, 0.4575424602262852, 0.4760546842310738, 0.4404258303685731, 0.4492681110028058, 0.44789990424920917, 0.4389446592641119, 0.43081264186607704, 0.4083796692066157, 0.41542906858634165, 0.41127342913506953, 0.38040933460528586, 0.3866693011214783, 0.386271374297416, 0.3935805894183508, 0.3670426350165163, 0.36726266853073414, 0.36720980445013823, 0.3637136517656226, 0.35130763213711014, 0.34815210214994524, 0.326817372971522, 0.31886303674401606, 0.3226403407590138, 0.32162758698552874, 0.32010471244545474, 0.31857781372979144, 0.30583054766899337], "accuracy": [0.27618545293807983, 0.45568618178367615, 0.4974243938922882, 0.5888257622718811, 0.6798309087753296, 0.7096816897392273, 0.7232862114906311, 0.7520803213119507, 0.7498348951339722, 0.7629110813140869, 0.7758552432060242, 0.7736098170280457, 0.7803460359573364, 0.7931581139564514, 0.7955356240272522, 0.807158887386322, 0.7988376617431641, 0.822348415851593, 0.8038568496704102, 0.8189142942428589, 0.8318583965301514, 0.8190463781356812, 0.8364813327789307, 0.8348963260650635, 0.8355567455291748, 0.8352925777435303, 0.8384625315666199, 0.8479725122451782, 0.8433496356010437, 0.846387505531311, 0.8614450097084045, 0.8565579056739807, 0.8537842035293579, 0.8504821062088013, 0.8651432991027832, 0.8615770936012268, 0.8663320541381836, 0.8618412613868713, 0.8681812286376953, 0.867520809173584, 0.8787478804588318, 0.8813894987106323, 0.8726720213890076, 0.8796724081039429, 0.8816536664962769, 0.8787478804588318, 0.8874653577804565], "val_loss": [1.3673111370631628, 1.0987954820905412, 1.2432224750518799, 0.7287160839353289, 0.5961154188428607, 0.5956603969846453, 0.5498335531779698, 0.5091841561453683, 0.5227400234767369, 0.4574906996318272, 0.5412757226399013, 0.4690568617412022, 0.44121197291782926, 0.4168621982846941, 0.43471527099609375, 0.5161076954432896, 0.4237499237060547, 0.40656332458768574, 0.3964438353266035, 0.40020430088043213, 0.41446527412959505, 0.3786041736602783, 0.4000600576400757, 0.37839380332401823, 0.3753150360924857, 0.38384711742401123, 0.3795094575200762, 0.3666497213499887, 0.3598776374544416, 0.35191954033715384, 0.3735984223229544, 0.35302920852388653, 0.35983550548553467, 0.3429040483066014, 0.3512113775525774, 0.3599487543106079, 0.38530729498182026, 0.32956240858350483, 0.39022025891712736, 0.347689151763916, 0.34286696570260183, 0.32798015219824656, 0.38098718438829693, 0.32201482568468365, 0.33303076880318777, 0.3260157193456377, 0.33348649740219116], "val_accuracy": [0.4273333251476288, 0.5109999775886536, 0.4886666536331177, 0.6570000052452087, 0.7396666407585144, 0.7149999737739563, 0.7670000195503235, 0.7699999809265137, 0.7706666588783264, 0.7979999780654907, 0.7563333511352539, 0.7863333225250244, 0.8026666641235352, 0.8230000138282776, 0.8059999942779541, 0.781333327293396, 0.8163333535194397, 0.8213333487510681, 0.824999988079071, 0.8230000138282776, 0.8153333067893982, 0.8373333215713501, 0.8240000009536743, 0.8426666855812073, 0.8396666646003723, 0.8373333215713501, 0.8370000123977661, 0.8413333296775818, 0.846666693687439, 0.8546666502952576, 0.8396666646003723, 0.8556666374206543, 0.8533333539962769, 0.8586666584014893, 0.8546666502952576, 0.8506666421890259, 0.8363333344459534, 0.8613333106040955, 0.8453333377838135, 0.8506666421890259, 0.8579999804496765, 0.8683333396911621, 0.8413333296775818, 0.8646666407585144, 0.862666666507721, 0.8669999837875366, 0.8650000095367432]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 4, 2, 3, 8, 8, 2, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7960000038146973, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 8, 5, 1, 6, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), grad)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2877246541842147, 1.9795340429506818, 1.741991390736033, 1.428684874060226, 1.2138562225599518, 1.0414107143052298, 1.0740183938558878, 0.9512181526964933, 0.8635433693729482, 0.8063099369507077, 0.761368648605324, 0.746125515166086, 0.7151468762427494, 0.7120536191667217, 0.6748190527389929, 0.6790738673793358, 0.6233589576928529, 0.6201417511322904, 0.6284364563299917, 0.5956677406250824, 0.5792636716244574, 0.575605377466325, 0.5865799778125951, 0.5665195722306614], "accuracy": [0.27222296595573425, 0.3933430314064026, 0.4375908076763153, 0.49689605832099915, 0.5522388219833374, 0.6173557043075562, 0.59661865234375, 0.6357152462005615, 0.6744155287742615, 0.6848500967025757, 0.7034738063812256, 0.7055870890617371, 0.7182670831680298, 0.7251353859901428, 0.7343811988830566, 0.7292299270629883, 0.7581561207771301, 0.7530049085617065, 0.7576277852058411, 0.7736098170280457, 0.7724210619926453, 0.7770439982414246, 0.7765156626701355, 0.7798177003860474], "val_loss": [1.748480933053153, 1.5629992144448417, 1.180309772491455, 0.9255533218383789, 0.8443422317504883, 0.9237778527396066, 0.8529418877192906, 0.6770998920713153, 0.5818621941975185, 0.6726581539426532, 0.5888737099511283, 0.52456191607884, 0.6061283349990845, 0.5162708418709892, 0.5884033100945609, 0.5144630159650531, 0.4891197851725987, 0.5105245283671788, 0.4912822587149484, 0.5069730281829834, 0.4837838411331177, 0.5263098308018276, 0.48997548648289274, 0.4824882745742798], "val_accuracy": [0.4086666703224182, 0.4560000002384186, 0.5643333196640015, 0.5806666612625122, 0.6113333106040955, 0.5870000123977661, 0.5736666917800903, 0.6953333616256714, 0.7396666407585144, 0.6986666917800903, 0.7226666808128357, 0.7586666941642761, 0.7303333282470703, 0.7706666588783264, 0.7239999771118164, 0.7630000114440918, 0.7829999923706055, 0.765666663646698, 0.7913333177566528, 0.7636666893959045, 0.7739999890327454, 0.7670000195503235, 0.784333348274231, 0.7733333110809326]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 2, 3, 9, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [2, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7937142848968506, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 9, 4, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.sqrt(grad))), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2878146639841423, 1.9868137898808536, 1.7639243330040375, 1.5108608144417006, 1.2315849878564094, 1.112559160614971, 0.955351999194599, 0.92057165196858, 0.8488624754787798, 0.7975806774574736, 0.764328429625255, 0.7685759930310863, 0.6931533603273945, 0.7211761735118911, 0.6695990282483719, 0.6698321653253225, 0.6249033231713815, 0.6339932316880987, 0.6274986024923832, 0.6199131528966856, 0.5917994767494363, 0.5607155118210914, 0.5682345144170198, 0.5611600943953842, 0.5409644049203722], "accuracy": [0.2723550498485565, 0.38885220885276794, 0.42543917894363403, 0.46691322326660156, 0.5383700728416443, 0.5727116465568542, 0.6289790272712708, 0.6522256135940552, 0.6765288710594177, 0.6917183995246887, 0.703209638595581, 0.700171709060669, 0.7302865982055664, 0.7194558382034302, 0.7354378700256348, 0.7309470176696777, 0.7626469135284424, 0.7497028112411499, 0.7666094303131104, 0.76542067527771, 0.7647602558135986, 0.7816668748855591, 0.7732135653495789, 0.7854973077774048, 0.789459764957428], "val_loss": [1.7486109052385603, 1.5720318385532923, 1.7416099139622279, 1.053147315979004, 0.8364174365997314, 0.7453197581427438, 0.7853461163384574, 0.6760399341583252, 0.5875532456806728, 0.5787501335144043, 0.6268738508224487, 0.5317880085536412, 0.620234761919294, 0.5462613786969867, 0.5434668234416417, 0.5031017235347203, 0.5078954526356289, 0.5041557380131313, 0.4967435598373413, 0.46781502451215473, 0.4517230646950858, 0.48109383242470877, 0.4875109876905169, 0.44560820715767996, 0.4868313585008894], "val_accuracy": [0.4113333225250244, 0.4556666612625122, 0.41499999165534973, 0.5363333225250244, 0.6179999709129333, 0.6499999761581421, 0.6763333082199097, 0.6940000057220459, 0.7450000047683716, 0.7390000224113464, 0.6990000009536743, 0.7549999952316284, 0.7153333425521851, 0.7453333139419556, 0.749666690826416, 0.7823333144187927, 0.7680000066757202, 0.7693333625793457, 0.7846666574478149, 0.8013333082199097, 0.7929999828338623, 0.778333306312561, 0.7760000228881836, 0.7940000295639038, 0.7546666860580444]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 2, 3, 8, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 1, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7922857403755188, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(grad, tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, alpha)), grad)), tf.math.add(beta, grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.6573587428183525, 2.2609250038181234, 2.249943469950331, 2.3025563027108933, 2.2983790890352678, 2.1999890841135277, 2.251404850663384, 2.0375683386375276, 1.977039395463843, 1.4931621116307654, 1.4545897427740162, 1.271586847280105, 1.0806201674667064, 0.985830292347762, 0.8690339770016023, 0.8389683645068536, 0.8644183701087046, 0.7761891712649246, 0.7557793670263682, 0.7278289711391921, 0.6936008772436244, 0.6952555722501284, 0.6762617563984067, 0.6776633931582456, 0.6736979387723192, 0.6754422713075536, 0.6373169985366709, 0.6249408471019056, 0.6300659093323353, 0.6203435557613819, 0.6296698147311203, 0.5818518197941128], "accuracy": [0.18121780455112457, 0.1612732857465744, 0.1492537260055542, 0.09919429570436478, 0.12996962666511536, 0.24607053399085999, 0.17434948682785034, 0.28820499777793884, 0.3090741038322449, 0.5140668153762817, 0.5329546928405762, 0.559899628162384, 0.6244881749153137, 0.6543388962745667, 0.6911900639533997, 0.6952846646308899, 0.6823405027389526, 0.700700044631958, 0.7150970697402954, 0.7256637215614319, 0.7375511527061462, 0.7408532500267029, 0.7489103078842163, 0.7457403540611267, 0.7395324110984802, 0.7412495017051697, 0.7560427784919739, 0.769911527633667, 0.763967752456665, 0.7658169269561768, 0.7626469135284424, 0.7751948237419128], "val_loss": [1.9752565792628698, 1.7502328327723913, 1.9741802215576172, 1.9722529820033483, 1.9607833453587122, 2.021592344556536, 1.422555650983538, 1.5843962941850935, 1.2544074739728654, 1.0678143160683768, 1.400397743497576, 0.7178272519792829, 0.8356762102672032, 0.7279601778302874, 0.7177437543869019, 0.7287601743425641, 0.5847016402653286, 0.6336709431239537, 0.5771539381572178, 0.5643775974001203, 0.5705207586288452, 0.5790537084851947, 0.5576367207935878, 0.6186075551169259, 0.5998717887060983, 0.5412893635886056, 0.507809008870806, 0.5624304669243949, 0.5335095609937396, 0.5331404038837978, 0.5125671965735299, 0.5094661031450544], "val_accuracy": [0.10366666316986084, 0.40833333134651184, 0.09799999743700027, 0.10400000214576721, 0.29733332991600037, 0.11833333224058151, 0.43566668033599854, 0.30433332920074463, 0.578000009059906, 0.6236666440963745, 0.3816666603088379, 0.6980000138282776, 0.6819999814033508, 0.6830000281333923, 0.6803333163261414, 0.6890000104904175, 0.7353333234786987, 0.7006666660308838, 0.7526666522026062, 0.7440000176429749, 0.7513333559036255, 0.753000020980835, 0.7666666507720947, 0.6993333101272583, 0.7243333458900452, 0.7720000147819519, 0.7846666574478149, 0.765333354473114, 0.7559999823570251, 0.7743333578109741, 0.7566666603088379, 0.753000020980835]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 1, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [4, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7851428389549255, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad)), grad)), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.175354109999526, 2.018984681422196, 1.7583081399791387, 1.3772672831091064, 1.1455351509957847, 0.9695210475427851, 0.9668795495001143, 0.8389037433962985, 0.7513021144648395, 0.7009417340110211, 0.7039923174207111, 0.6766083318370602, 0.6431393517069829, 0.613875407324554, 0.6031829886716102, 0.6145926901000193, 0.5930860860630223, 0.5561231558963119, 0.5562607102374579, 0.5425031287417262, 0.5569056170711963, 0.5140249936918557], "accuracy": [0.2662792205810547, 0.3346982002258301, 0.44644036889076233, 0.5085193514823914, 0.5999207496643066, 0.6421872973442078, 0.6280544400215149, 0.6880200505256653, 0.7037379741668701, 0.7231541275978088, 0.7346453666687012, 0.7386078238487244, 0.7497028112411499, 0.7650244235992432, 0.7668735980987549, 0.7588165402412415, 0.7692511081695557, 0.7903843522071838, 0.7902522683143616, 0.7903843522071838, 0.7862898111343384, 0.7967243194580078], "val_loss": [1.5902066911969865, 1.5307623318263464, 1.5339250564575195, 0.9358342034476144, 0.6839578662599836, 0.7614125694547381, 0.7743214539119175, 0.6212143557412284, 0.5939145769391742, 0.608867849622454, 0.5604671239852905, 0.5648863656180245, 0.4990574632372175, 0.4752426658357893, 0.4637922389166696, 0.5135966879980904, 0.45991080147879465, 0.49277664933885845, 0.4790973493031093, 0.5113006659916469, 0.4810685430254255, 0.4613030638013567], "val_accuracy": [0.24266666173934937, 0.4009999930858612, 0.3736666738986969, 0.6100000143051147, 0.7049999833106995, 0.6273333430290222, 0.625, 0.6830000281333923, 0.7229999899864197, 0.7423333525657654, 0.7356666922569275, 0.737333357334137, 0.7749999761581421, 0.7929999828338623, 0.7926666736602783, 0.7636666893959045, 0.8003333210945129, 0.7666666507720947, 0.7773333191871643, 0.7730000019073486, 0.7646666765213013, 0.7929999828338623]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [14, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 2, 3, 9, 8, 1, 8, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 4, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 4, 4], [1, 2], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.5168571472167969, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 8, 5, 1, 6, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.sqrt(grad), tf.math.add(beta, grad))))), tf.math.add(beta, grad)), grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, alpha), tf.math.add(sigma, beta))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3001830090684128, 2.2989799577987364, 2.2978584946831533, 2.294337394041959, 2.2930210395307116, 2.2931938208861045, 2.2926783410864515, 2.2903139812284063, 2.2893730394592406, 2.2879420866063716, 2.285291689639834, 2.283605798014151, 2.283221324673261, 2.2806455223646305, 2.278933381360394, 2.276458179473625, 2.275269758211639, 2.274632260469067, 2.273021865624793, 2.2721720376680428, 2.2701816804782826, 2.2675282614121834, 2.2649772871030303, 2.264508440415495, 2.2637051369583037, 2.2614057015245304, 2.2584051858511236, 2.2568012324653015, 2.256324903414848, 2.255653426915175, 2.2509995404960077, 2.2504516662529133, 2.2485652946131562, 2.245783716444137, 2.2449569949982835, 2.2421407946159717, 2.2420859540599984, 2.2392889461056305, 2.2354268671861335, 2.23567565541462, 2.230894225164254, 2.23120955973096, 2.228912672488256, 2.224716633066226, 2.223679573276748, 2.222270800909582, 2.2176683892852296, 2.2166284316597897, 2.2160777785223487, 2.213023353577164, 2.2080478858418706, 2.206387830243497, 2.202649010044945, 2.202060424420245, 2.1990552282982088, 2.196910991581786, 2.194291284669738, 2.1889470756927802, 2.189134847880071, 2.1823431525673174, 2.182250562266525, 2.178633764136217, 2.1736080585422295, 2.1716714982957477, 2.16728577889692, 2.1644008851180443, 2.162785139696048, 2.1580205129326893, 2.154867091277776, 2.149233751135763, 2.1482280402560794, 2.1441133472000242, 2.139627481448479, 2.1385049704374213, 2.131148577618199, 2.130075591319997, 2.1229151374455126, 2.1225092515591477, 2.1147397640847005, 2.1120135146455836, 2.106218483816159, 2.1042075570012915, 2.0963845045149934, 2.0885677677434686, 2.0900790914332217, 2.085928222711422, 2.0773883619800992, 2.073345900589622, 2.069613673384352, 2.062051135724357, 2.0600574915325005, 2.053021110390565, 2.0489448148183, 2.0447857497689776, 2.0353196846290964, 2.0264516239546673, 2.0227815263133717, 2.0163565970304824, 2.01216151345565, 2.0082912022458754], "accuracy": [0.09536388516426086, 0.09747721254825592, 0.10091137140989304, 0.10619468986988068, 0.10711926966905594, 0.11015717685222626, 0.1158367469906807, 0.1228371411561966, 0.1216483935713768, 0.12679962813854218, 0.136045441031456, 0.1368379294872284, 0.13921542465686798, 0.1472724825143814, 0.14819706976413727, 0.16100911796092987, 0.16431118547916412, 0.15902787446975708, 0.1728965789079666, 0.16655659675598145, 0.17421740293502808, 0.17791573703289032, 0.1896711140871048, 0.1900673657655716, 0.18940694630146027, 0.1958790123462677, 0.20116232335567474, 0.20591731369495392, 0.21278563141822815, 0.21212521195411682, 0.2172764539718628, 0.2218993455171585, 0.23259806632995605, 0.2324659824371338, 0.2355038970708847, 0.24224013090133667, 0.2401268035173416, 0.24739135801792145, 0.25042927265167236, 0.2513538599014282, 0.2611279785633087, 0.25597676634788513, 0.2641659080982208, 0.2724871337413788, 0.26865673065185547, 0.27327960729599, 0.2797516882419586, 0.2805441915988922, 0.2837141752243042, 0.2860916554927826, 0.292959988117218, 0.2981112003326416, 0.30682867765426636, 0.31184783577919006, 0.3043191134929657, 0.30101704597473145, 0.31739532947540283, 0.3140932619571686, 0.3206973969936371, 0.32782986760139465, 0.3203011453151703, 0.320169061422348, 0.33443403244018555, 0.3440760672092438, 0.33403778076171875, 0.3291507065296173, 0.33747193217277527, 0.3409060835838318, 0.3420948386192322, 0.3485668897628784, 0.34684982895851135, 0.35279354453086853, 0.3579447865486145, 0.3595297932624817, 0.3619072735309601, 0.35081231594085693, 0.36745476722717285, 0.3611147701740265, 0.37762513756752014, 0.37088891863822937, 0.3743230700492859, 0.3715493381023407, 0.38343679904937744, 0.3870030343532562, 0.38409721851348877, 0.3765684962272644, 0.390569269657135, 0.3897767663002014, 0.38026681542396545, 0.3885880410671234, 0.392550528049469, 0.4011359214782715, 0.39823007583618164, 0.3932109475135803, 0.4035134017467499, 0.40668338537216187, 0.4035134017467499, 0.4057588279247284, 0.4147404432296753, 0.40443798899650574], "val_loss": [1.9694552421569824, 1.9679717336382185, 1.966491426740374, 1.9650049890790666, 1.9635400772094727, 1.9620841571262904, 1.9606197902134486, 1.959155763898577, 1.9576879228864397, 1.9562292098999023, 1.9547604833330428, 1.9532851491655623, 1.9518358366830009, 1.9503634997776575, 1.948877947671073, 1.9473930086408342, 1.945913655417306, 1.9444258553641183, 1.9429200717381068, 1.9413973944527763, 1.939878191266741, 1.9383418219430106, 1.9367671012878418, 1.9351889746529716, 1.9336145264761788, 1.9319939613342285, 1.9303676060267858, 1.928716046469552, 1.9270591735839844, 1.9253674915858678, 1.9236480849129813, 1.9219322204589844, 1.920173168182373, 1.91839633669172, 1.9166091510227747, 1.9147698538643974, 1.912921360560826, 1.9110313143048967, 1.9091168812343053, 1.907200608934675, 1.9052180562700545, 1.90321683883667, 1.9011879648481096, 1.8991107940673828, 1.8970046724591936, 1.894869259425572, 1.8926518985203333, 1.890444210597447, 1.8881913593837194, 1.885878222329276, 1.8835207394191198, 1.881124837057931, 1.878664561680385, 1.8761702946254186, 1.8736329759870256, 1.8710522651672363, 1.8684351103646415, 1.8657169342041016, 1.8629846572875977, 1.8601596696036202, 1.8573124749319894, 1.8543971606663294, 1.8514156341552734, 1.8483738899230957, 1.845252241407122, 1.8421133586338587, 1.838921138218471, 1.8356122970581055, 1.8322694642203194, 1.8288215909685408, 1.8253699030194963, 1.8218035697937012, 1.8181844438825334, 1.8145383426121302, 1.8107677868434362, 1.806978975023542, 1.8030715669904436, 1.799152101789202, 1.7951122692653112, 1.7910244124276298, 1.7868001120431083, 1.7825500624520438, 1.7781673158918108, 1.7736615453447615, 1.769176619393485, 1.764606203351702, 1.7599296569824219, 1.7551753861563546, 1.7503225462777274, 1.7453857149396623, 1.7404167311532157, 1.7353503363473075, 1.7301654134477888, 1.7249624388558524, 1.7195703983306885, 1.7140464101518904, 1.708458423614502, 1.7027808598109655, 1.697047199521746, 1.6912672179085868], "val_accuracy": [0.045666664838790894, 0.056333333253860474, 0.06866666674613953, 0.07866666465997696, 0.08933333307504654, 0.10700000077486038, 0.11900000274181366, 0.13433332741260529, 0.1550000011920929, 0.16699999570846558, 0.17933332920074463, 0.1940000057220459, 0.20933333039283752, 0.2240000069141388, 0.23866666853427887, 0.2529999911785126, 0.265666663646698, 0.2759999930858612, 0.2866666615009308, 0.29499998688697815, 0.3070000112056732, 0.3173333406448364, 0.3256666660308838, 0.3330000042915344, 0.34033334255218506, 0.3466666638851166, 0.3553333282470703, 0.36133334040641785, 0.36800000071525574, 0.37433332204818726, 0.3776666522026062, 0.38100001215934753, 0.3853333294391632, 0.3883333206176758, 0.390666663646698, 0.3930000066757202, 0.3959999978542328, 0.3973333239555359, 0.39933332800865173, 0.4026666581630707, 0.4050000011920929, 0.406333327293396, 0.4090000092983246, 0.4113333225250244, 0.41333332657814026, 0.41733333468437195, 0.4189999997615814, 0.42100000381469727, 0.4243333339691162, 0.4259999990463257, 0.42766666412353516, 0.43066665530204773, 0.4320000112056732, 0.43566668033599854, 0.437666654586792, 0.4403333365917206, 0.44333332777023315, 0.44433334469795227, 0.44566667079925537, 0.445333331823349, 0.4466666579246521, 0.4493333399295807, 0.45100000500679016, 0.4543333351612091, 0.45533332228660583, 0.4580000042915344, 0.4606666564941406, 0.4633333384990692, 0.46666666865348816, 0.46799999475479126, 0.4699999988079071, 0.4740000069141388, 0.4763333201408386, 0.4776666760444641, 0.47866666316986084, 0.48100000619888306, 0.48266667127609253, 0.4833333194255829, 0.4846666753292084, 0.4860000014305115, 0.4883333444595337, 0.492000013589859, 0.49433332681655884, 0.4959999918937683, 0.4970000088214874, 0.4976666569709778, 0.5006666779518127, 0.5036666393280029, 0.5076666474342346, 0.5090000033378601, 0.5099999904632568, 0.5133333206176758, 0.515333354473114, 0.518666684627533, 0.5213333368301392, 0.5243333578109741, 0.5270000100135803, 0.527999997138977, 0.5289999842643738, 0.5306666493415833]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 0, 6, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.38428571820259094, "mapping_values": [1, 4, 4, 3, 1, 1, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.3332533989096236, 2.3041523429680146, 2.302599271999264, 2.3001836136016927, 2.257608803870136, 2.192498045070942, 2.2386149578185175, 2.2295602771820504, 1.9111761768748181, 2.305597736536, 2.2890058588184905], "accuracy": [0.19112402200698853, 0.09919429570436478, 0.10051512718200684, 0.11662924289703369, 0.20974771678447723, 0.190859854221344, 0.17263241112232208, 0.20182274281978607, 0.3358869254589081, 0.10474177449941635, 0.1504424810409546], "val_loss": [1.975630487714495, 1.973557812826974, 1.9725604057312012, 1.967534133366176, 1.9753615515572684, 1.358902965273176, 1.9187304633004325, 1.8779068674360002, 1.9784629004342216, 1.9733820642743791, 1.9389304433550154], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.2849999964237213, 0.1223333328962326, 0.41333332657814026, 0.2523333430290222, 0.3386666774749756, 0.09566666930913925, 0.10199999809265137, 0.2540000081062317]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 2, 3, 2, 8, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.26171427965164185, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 8, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(beta, grad))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1039338239101197, 2.3102606029369417, 7.7648832282181095, NaN, NaN, NaN, NaN], "accuracy": [0.28820499777793884, 0.23814556002616882, 0.14714039862155914, 0.10434553027153015, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0028832299368724, 3.147538798195975, 2.2957002094813754, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.2396666705608368, 0.10366666316986084, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [25, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.14428570866584778, "mapping_values": [1, 4, 4, 3, 1, 1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.3332315618335895, 2.3040667017295675, 2.3025991805808075, 2.3004425043726577, 2.286984953693253, 2.29480897522149, 2.3041427612241705, 2.302090735625062, 2.24720420350551], "accuracy": [0.19112402200698853, 0.09932637959718704, 0.10091137140989304, 0.11055342853069305, 0.19191652536392212, 0.17210407555103302, 0.10302469879388809, 0.1072513535618782, 0.18993528187274933], "val_loss": [1.975625923701695, 1.9735302925109863, 1.9726555006844657, 1.9682931218828474, 1.9707864352634974, 1.9762605939592635, 1.973778179713658, 1.967017446245466, 1.9221773828778947], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10700000077486038, 0.26766666769981384, 0.11866666376590729, 0.10066666454076767, 0.10066666454076767, 0.17766666412353516, 0.1366666704416275]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 2, 3, 9, 8, 1, 9, 2, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [21, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [1, 7, 6, 4], [4, 2], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 14, 14, 9, 5, 2, 7, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, beta))))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 2, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 37, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 11, 11, 8, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad))), tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 0, 6, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [54, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3018904269536757, 2.302274790989205, 2.302933261473543, 2.3060996292793456, 2.3196279267593383, 2.3868201137644], "accuracy": [0.10487385839223862, 0.10791176557540894, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736131259373255, 1.9737022263663155, 1.974698271070208, 1.9799579892839705, 2.0048986843654086, 2.1567651884896413], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [18, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 8, 6, 3, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [54, 13, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0], [0, 7, 6, 4], [7, 0], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 14, 14, 7, 7, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad)), grad)), tf.math.add(beta, alpha))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [38, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 3, 0, 6, 5, 0, 2, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 3, 0, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [34, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [2, 7, 6, 4], [1, 2], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 2, 11, 11, 8, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.square(tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.300847083129399, 2.3012801521033217, 2.3017860632593985, 2.299912640006393, 2.3001107183886464, 2.301901179722917], "accuracy": [0.0940430611371994, 0.0936468094587326, 0.08968432247638702, 0.09285431355237961, 0.09298639744520187, 0.08928807079792023], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 8, 5, 9, 4, 6, 1, 9, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [57, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 0], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 4, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.300847083129399, 2.3012801521033217, 2.3017860632593985, 2.299912640006393, 2.3001107183886464, 2.301901179722917], "accuracy": [0.0940430611371994, 0.0936468094587326, 0.08968432247638702, 0.09285431355237961, 0.09298639744520187, 0.08928807079792023], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]