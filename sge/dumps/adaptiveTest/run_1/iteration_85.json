[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [59, 52, 13]], "fitness": -0.7402856945991516, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.589846003970387, 2.0187845817410226, 2.6676553190187486, 1.6268910870749196, 1.5452471907899963, 1.7469688806047592, 1.3078418223613195, 1.816702346649971, 1.3188452611525674, 1.2707536545223044, 1.2209060817362531, 1.1889250296107876, 1.0566913838856382, 0.9351841281543964, 1.0499897659840507, 0.80633905988564, 0.8008871147692747, 0.8221297072633666, 0.7425473620862915, 0.7013772691261373, 0.7404259062162905, 0.6853789793281444, 0.6147371350325425, 0.5961883918736133, 0.5823943762337732, 0.5855270794999597, 0.5583691931025951, 0.5464515488035313, 0.5551713923846788, 0.5178656426828299, 0.4891916954317396, 0.4972970203488274, 0.4654833558701316, 0.484557599490581], "accuracy": [0.19918107986450195, 0.3205653131008148, 0.3447364866733551, 0.469819039106369, 0.5068022608757019, 0.44247788190841675, 0.5521067380905151, 0.4201558530330658, 0.5577862858772278, 0.5712587237358093, 0.5857878923416138, 0.5980715751647949, 0.627129852771759, 0.669792652130127, 0.632941484451294, 0.7036058902740479, 0.7083608508110046, 0.6930392384529114, 0.7273808121681213, 0.7407211661338806, 0.7275128960609436, 0.7469290494918823, 0.7631752490997314, 0.77677983045578, 0.7737419009208679, 0.778232753276825, 0.7943468689918518, 0.7943468689918518, 0.7930260300636292, 0.8050455451011658, 0.8230088353157043, 0.8092722296714783, 0.819970965385437, 0.8189142942428589], "val_loss": [1.8803697313581194, 1.8445027896336146, 1.2833235604422433, 1.1818951198032923, 1.7200817380632674, 0.9239436558314732, 0.9891398974827358, 1.0001105921609061, 0.9283433641706195, 0.8496635811669486, 0.7440912553242275, 0.7828759125300816, 0.6415140969412667, 0.8388442482267108, 0.6416556324277606, 0.6125035115650722, 0.5781344175338745, 0.5641032797949654, 0.5432513611657279, 0.4897574356624058, 0.504212634904044, 0.4820801189967564, 0.45424437522888184, 0.45112928322383333, 0.47520307132175993, 0.4655446835926601, 0.47013393470219206, 0.41608682700565885, 0.4122806021145412, 0.42672118118831087, 0.4141327142715454, 0.4136139324733189, 0.4472566843032837, 0.39067965745925903], "val_accuracy": [0.23133333027362823, 0.40433332324028015, 0.5226666927337646, 0.5576666593551636, 0.31033334136009216, 0.6323333382606506, 0.559333324432373, 0.6243333220481873, 0.6483333110809326, 0.6483333110809326, 0.7056666612625122, 0.7020000219345093, 0.722000002861023, 0.668666660785675, 0.7300000190734863, 0.7509999871253967, 0.7486666440963745, 0.7286666631698608, 0.753333330154419, 0.7943333387374878, 0.7870000004768372, 0.7726666927337646, 0.8059999942779541, 0.796999990940094, 0.8069999814033508, 0.7983333468437195, 0.8136666417121887, 0.8259999752044678, 0.8353333473205566, 0.815666675567627, 0.8259999752044678, 0.8296666741371155, 0.8203333616256714, 0.8326666951179504]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.722000002861023, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.295865685570399, 2.255033771611633, 2.168556038446241, 1.9831329705991985, 1.6552600673381537, 1.4184105883279512, 1.3571113444527205, 1.2098570125859727, 0.9797221145389291, 0.9181970954886076, 0.8956899950454232, 0.8456177694796572, 0.7949019090106789, 0.7908952715468995, 0.8259539370523578, 0.7825827352548115, 0.7441920229094675, 0.7184374013817495, 0.7251992913411042, 0.7192549582769087, 0.7135670807902934, 0.6943625612045402, 0.6703791846106034, 0.6642992012237183, 0.6524039874097627, 0.6309542656023551, 0.6232132372319533, 0.6133550647668331, 0.6000949278200276, 0.5914887137668732, 0.5898696579055827, 0.5897344708474179, 0.5672847510580814, 0.5562806943498662, 0.5624620526568481, 0.5422159091057385, 0.5320144980149955, 0.5448204991587905, 0.5411085411699582, 0.5272041805085568, 0.5173763652692429, 0.5141845047513272, 0.5097650596809236, 0.5051688437039243, 0.5118628549986763, 0.49111053676668837, 0.4933449620339912, 0.48790760392037996, 0.4774967264568549, 0.47058829429394944, 0.47071425290218577, 0.4690394655958442, 0.45681303047532373, 0.4533574301623996, 0.46330300245885253, 0.4366831513183968, 0.44775077353819975, 0.4329752911429883, 0.43304312720416543, 0.43325083223253336, 0.4305627026719786, 0.4180053526801582, 0.431727809487805, 0.422225714536816, 0.41143240686247706, 0.40732433523216643, 0.40931484685393216, 0.4043828744016634, 0.41096503226638326, 0.41243781556605724, 0.38879404535556217], "accuracy": [0.10593052208423615, 0.21714437007904053, 0.33945319056510925, 0.40707963705062866, 0.46044114232063293, 0.5112931132316589, 0.5425967574119568, 0.6044115424156189, 0.646149754524231, 0.6441685557365417, 0.6791704893112183, 0.6900013089179993, 0.6944921612739563, 0.6940959095954895, 0.6857746839523315, 0.7045304179191589, 0.7058512568473816, 0.713908314704895, 0.7157574892044067, 0.7314753532409668, 0.7288337349891663, 0.7411174178123474, 0.7478536367416382, 0.7456082701683044, 0.7516840696334839, 0.7557786107063293, 0.765949010848999, 0.76542067527771, 0.770439863204956, 0.7736098170280457, 0.7781006693840027, 0.7765156626701355, 0.7893276810646057, 0.7915731072425842, 0.7915731072425842, 0.7936864495277405, 0.7926297783851624, 0.7935543656349182, 0.7996301651000977, 0.7911768555641174, 0.8031964302062988, 0.8083476424217224, 0.8043851256370544, 0.8095363974571228, 0.807158887386322, 0.8171972036361694, 0.8186501264572144, 0.8185180425643921, 0.819970965385437, 0.8169330358505249, 0.8271034359931946, 0.829216718673706, 0.8286884427070618, 0.8253863453865051, 0.8264430165290833, 0.8354246616363525, 0.8319904804229736, 0.8341038227081299, 0.8350284099578857, 0.8309338092803955, 0.8330471515655518, 0.841500461101532, 0.8379341959953308, 0.8421608805656433, 0.845859169960022, 0.8442742228507996, 0.847840428352356, 0.8487650156021118, 0.8411042094230652, 0.8481045961380005, 0.8561616539955139], "val_loss": [1.9489874839782715, 1.8914520399911063, 1.771465573992048, 1.4987125056130546, 1.1062074388776506, 0.8449856724057879, 0.7494509220123291, 0.7306631462914603, 0.6665330954960415, 0.6833733831133161, 0.6703846624919346, 0.6199885436466762, 0.5951422793524606, 0.592664190701076, 0.59334055015019, 0.5781608990260533, 0.5649408442633492, 0.560359171458653, 0.5615689073290143, 0.5564232724053519, 0.54728593145098, 0.5351552452359881, 0.5183432102203369, 0.5090137720108032, 0.4975883790424892, 0.4851111854825701, 0.47772865636008127, 0.47389377866472515, 0.4615980727331979, 0.45883262157440186, 0.4584596838269915, 0.44927997248513357, 0.4443765708378383, 0.4497607776096889, 0.445201005254473, 0.4397113152912685, 0.4393962962286813, 0.43879824025290354, 0.4367152622767857, 0.4291083131517683, 0.4203666363443647, 0.42065487589154926, 0.42259406191962107, 0.42306579862322125, 0.4202309676579067, 0.4111347198486328, 0.40429018224988666, 0.40028599330357145, 0.3988254496029445, 0.3999067544937134, 0.40242837156568256, 0.3988610931805202, 0.39402600697108675, 0.39054503611155916, 0.3870904871395656, 0.3865944232259478, 0.38983364616121563, 0.39041497026171, 0.3878671441759382, 0.38192009925842285, 0.37621536425181795, 0.37896318095070974, 0.3882642388343811, 0.37740522623062134, 0.3761266895702907, 0.3792115535054888, 0.3852852327483041, 0.38897899218967985, 0.3930635026523045, 0.39056301968438284, 0.38688160691942486], "val_accuracy": [0.24933333694934845, 0.41233333945274353, 0.4636666774749756, 0.5249999761581421, 0.597000002861023, 0.6766666769981384, 0.6946666836738586, 0.7116666436195374, 0.6973333358764648, 0.7273333072662354, 0.7279999852180481, 0.7300000190734863, 0.7393333315849304, 0.7263333201408386, 0.7336666584014893, 0.746666669845581, 0.7450000047683716, 0.7580000162124634, 0.7609999775886536, 0.7593333125114441, 0.7590000033378601, 0.7643333077430725, 0.7716666460037231, 0.7786666750907898, 0.7876666784286499, 0.7876666784286499, 0.7886666655540466, 0.7946666479110718, 0.8036666512489319, 0.8006666898727417, 0.8009999990463257, 0.8019999861717224, 0.8090000152587891, 0.8096666932106018, 0.8149999976158142, 0.8166666626930237, 0.8149999976158142, 0.809333324432373, 0.8149999976158142, 0.8159999847412109, 0.8236666917800903, 0.8253333568572998, 0.8246666789054871, 0.8259999752044678, 0.831333339214325, 0.8346666693687439, 0.8376666903495789, 0.8356666564941406, 0.8339999914169312, 0.8383333086967468, 0.8420000076293945, 0.8429999947547913, 0.840666651725769, 0.8389999866485596, 0.8433333039283752, 0.8479999899864197, 0.8496666550636292, 0.8483333587646484, 0.8476666808128357, 0.846666693687439, 0.8503333330154419, 0.8506666421890259, 0.8463333249092102, 0.8486666679382324, 0.8513333201408386, 0.8543333411216736, 0.8543333411216736, 0.8523333072662354, 0.8506666421890259, 0.8506666421890259, 0.8500000238418579]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [68, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7148571610450745, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.295865685570399, 2.2550336771385466, 2.168555988973835, 1.9831329616085098, 1.6552594465555028, 1.4184030942661163, 1.357105364432314, 1.209879012691063, 0.9797038938847704, 0.9181914847398778, 0.8957494463839977, 0.8458322165601557, 0.7948350832919245, 0.7908075299670494, 0.8255287938744023, 0.7826207956192658, 0.7440391107478461, 0.7181556463288814, 0.7250417363311416, 0.7192003637131069, 0.7135900092351675, 0.6943708132396931, 0.6706617405039523, 0.6640249170316697, 0.6527671838842757, 0.6316594342120398, 0.6241705335205289, 0.6146402211866957, 0.6012592090355517, 0.5911500609987023, 0.5895576748660905, 0.5911040797981179, 0.5676114967690955, 0.5568014083127808, 0.5619833028831376, 0.5419330370345876, 0.532217765953468, 0.5444085635623723, 0.5400614814751373, 0.5274556737927997, 0.5177128101462749, 0.5137699939209189, 0.5094092450578372, 0.5060049910523935, 0.5129567996472447, 0.4912787088786039, 0.4953857925211859, 0.4893210632469455, 0.4775356737897538, 0.47058864647780646, 0.47135199009466794, 0.4686063183312875, 0.45704827035785023, 0.45419026168660875, 0.464678355810145, 0.4366133163562934, 0.4484926781846768, 0.4334961753031046, 0.43543394131746116, 0.4342638922680827, 0.4301984823729463, 0.41814975302925733, 0.43425086908226457, 0.42225857921217286, 0.4099698649571005, 0.4033016144024808, 0.4072131582018785, 0.4066539689093501, 0.40766673951479016, 0.4066513234149385, 0.3883264170952949, 0.37938143337533425, 0.3856840622683306, 0.39054972542716276, 0.37488353339404856, 0.37576718563653094, 0.3811557265068672, 0.37547255818082703, 0.36079301013843873, 0.35309589750353276, 0.3626040594964499, 0.358785871257399, 0.35246463018228286, 0.340808028440119], "accuracy": [0.10593052208423615, 0.21714437007904053, 0.33945319056510925, 0.40707963705062866, 0.46044114232063293, 0.5112931132316589, 0.5424646735191345, 0.6048077940940857, 0.6457535624504089, 0.6436402201652527, 0.6794346570968628, 0.6901333928108215, 0.6947563290596008, 0.6942279934883118, 0.6859067678451538, 0.7038700580596924, 0.7062475085258484, 0.7144366502761841, 0.7161537408828735, 0.7308149337768555, 0.7284374833106995, 0.7412495017051697, 0.7474573850631714, 0.7461365461349487, 0.7503632307052612, 0.7555144429206848, 0.7663452625274658, 0.7646281719207764, 0.7692511081695557, 0.7730814814567566, 0.7781006693840027, 0.7763835787773132, 0.7906485199928284, 0.7917051911354065, 0.7906485199928284, 0.7938185334205627, 0.7923656105995178, 0.791969358921051, 0.7987055778503418, 0.7909126877784729, 0.8029322624206543, 0.8084797263145447, 0.8030643463134766, 0.8107251524925232, 0.8055738806724548, 0.8164047002792358, 0.8182538747787476, 0.8171972036361694, 0.8215559124946594, 0.8182538747787476, 0.8240655064582825, 0.8274996876716614, 0.8280280232429504, 0.8234050869941711, 0.8249900937080383, 0.8359529972076416, 0.8313300609588623, 0.8334434032440186, 0.8348963260650635, 0.828292191028595, 0.833179235458374, 0.8411042094230652, 0.8385946154594421, 0.8401796221733093, 0.8455950617790222, 0.8466516733169556, 0.8475762605667114, 0.8453308939933777, 0.8432175517082214, 0.8459912538528442, 0.8543124794960022, 0.8540483713150024, 0.857218325138092, 0.8556333184242249, 0.8561616539955139, 0.8544445633888245, 0.8465195894241333, 0.8529917001724243, 0.8603883385658264, 0.8659358024597168, 0.8640866279602051, 0.869502067565918, 0.86553955078125, 0.8676528930664062], "val_loss": [1.9489874839782715, 1.8914519718715124, 1.7714653015136719, 1.4987128121512276, 1.106208086013794, 0.844981483050755, 0.7494503429957798, 0.7306270939963204, 0.666562557220459, 0.6833424397877285, 0.6705175297600883, 0.6199066809245518, 0.5952364546912057, 0.5926506349018642, 0.5934655666351318, 0.5779348952429635, 0.5646884611674717, 0.56004570211683, 0.5619193315505981, 0.556654691696167, 0.5473275525229317, 0.5355126006262643, 0.5186331272125244, 0.5095706496919904, 0.49832047734941753, 0.4856952428817749, 0.4780668871743338, 0.4748283965247018, 0.46208528109959196, 0.4588622195380075, 0.4585910865238735, 0.44894955839429584, 0.4439945731844221, 0.44963485854012625, 0.445209230695452, 0.439736008644104, 0.4388554266520909, 0.43698619093213764, 0.43549065930502756, 0.4287777032170977, 0.4198153018951416, 0.4201540606362479, 0.4228199635233198, 0.423352198941367, 0.41971343755722046, 0.41070401668548584, 0.4053483264786856, 0.4014128531728472, 0.39978197642735075, 0.40215364524296354, 0.4044766936983381, 0.4008104290281023, 0.3960417764527457, 0.39259069306509836, 0.38893295185906546, 0.38701886790139334, 0.3896821822438921, 0.39045374734061106, 0.3881599392209734, 0.3830729212079729, 0.37810795647757395, 0.38236079045704435, 0.3905503068651472, 0.37811605419431416, 0.37490309136254446, 0.37738880940846037, 0.38485240936279297, 0.38548602376665386, 0.3852144054004124, 0.38213939326150076, 0.3809156928743635, 0.3870127626827785, 0.3922684873853411, 0.3907921995435442, 0.3768070765904018, 0.37400697810309275, 0.3697643109730312, 0.37388209785733906, 0.38276513133730206, 0.39915716648101807, 0.40984037944248747, 0.400232195854187, 0.3840934378760202, 0.37884193658828735], "val_accuracy": [0.24933333694934845, 0.41233333945274353, 0.4636666774749756, 0.5249999761581421, 0.597000002861023, 0.6766666769981384, 0.6946666836738586, 0.7116666436195374, 0.6973333358764648, 0.7269999980926514, 0.7279999852180481, 0.7296666502952576, 0.7393333315849304, 0.7273333072662354, 0.7336666584014893, 0.7456666827201843, 0.7456666827201843, 0.7583333253860474, 0.7606666684150696, 0.7599999904632568, 0.7583333253860474, 0.7646666765213013, 0.7710000276565552, 0.778333306312561, 0.7846666574478149, 0.7873333096504211, 0.7876666784286499, 0.7919999957084656, 0.8029999732971191, 0.8016666769981384, 0.8026666641235352, 0.8006666898727417, 0.8080000281333923, 0.8073333501815796, 0.8159999847412109, 0.8163333535194397, 0.8140000104904175, 0.8073333501815796, 0.812333345413208, 0.8163333535194397, 0.8220000267028809, 0.8240000009536743, 0.8253333568572998, 0.8256666660308838, 0.8330000042915344, 0.8339999914169312, 0.8339999914169312, 0.8360000252723694, 0.8339999914169312, 0.8386666774749756, 0.8389999866485596, 0.8443333506584167, 0.8403333425521851, 0.8389999866485596, 0.8460000157356262, 0.8486666679382324, 0.8519999980926514, 0.8479999899864197, 0.8473333120346069, 0.8500000238418579, 0.8500000238418579, 0.8529999852180481, 0.847000002861023, 0.8476666808128357, 0.8510000109672546, 0.8543333411216736, 0.8560000061988831, 0.8529999852180481, 0.8510000109672546, 0.8539999723434448, 0.8506666421890259, 0.856333315372467, 0.8586666584014893, 0.8606666922569275, 0.8613333106040955, 0.859000027179718, 0.8586666584014893, 0.8586666584014893, 0.8619999885559082, 0.8600000143051147, 0.8583333492279053, 0.8586666584014893, 0.8566666841506958, 0.859000027179718]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [1, 52, 13]], "fitness": -0.6994285583496094, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.30210778889891, 2.3009359937349663, 2.298295802821919, 2.296956152507201, 2.2935663046475967, 2.288447973703302, 2.2828266574344176, 2.2756625676372377, 2.2685648430418803, 2.260732062819328, 2.2535297433540507, 2.244339781414642, 2.2333059844686023, 2.2216196103638284, 2.2078659772211613, 2.1939615359978353, 2.1792775371905724, 2.1600850741026534, 2.142554482606266, 2.119713973218046, 2.0962479372444, 2.0662328837617294, 2.0359555561749407, 2.000755593808509, 1.9580320883515236, 1.9162025425522602, 1.8714864874685981, 1.8205813814258185, 1.7577554543162255, 1.7040765379807574, 1.6572611261242338, 1.6079616245419168, 1.5560588227475969, 1.5126257711445037, 1.480826551935314, 1.4459439948281876, 1.4244380315155354, 1.410331065376689, 1.3841863766070512, 1.3640628641370642, 1.3584467055003688, 1.3788266437023133, 1.3508871880662188, 1.363973064350808, 1.3716334680981246, 1.3499845510082726, 1.3701999045917308, 1.3311361901244594, 1.2730093051602795, 1.2413883328264605, 1.2095488402128944, 1.168726883402527, 1.1617943964078836, 1.1117596201152848, 1.0719025934282593, 1.0333130042534997, 0.9915537191593038, 0.9812944374300501, 0.9328867116104799, 0.930368411660651, 0.9094053382146722, 0.8988706195721332, 0.9063085206369635, 0.9018226313301286, 0.9026760805583728], "accuracy": [0.09021265059709549, 0.09245806187391281, 0.09879804402589798, 0.10857218503952026, 0.11345925182104111, 0.12072381377220154, 0.1414608359336853, 0.16219785809516907, 0.18214239180088043, 0.20340773463249207, 0.21991810202598572, 0.24184387922286987, 0.2690529525279999, 0.2921674847602844, 0.3105269968509674, 0.31501781940460205, 0.33826443552970886, 0.354510635137558, 0.35886937379837036, 0.3693039119243622, 0.378549724817276, 0.3875313699245453, 0.3921542763710022, 0.3951921761035919, 0.4049663245677948, 0.4131554663181305, 0.41566503047943115, 0.43428874015808105, 0.4504028558731079, 0.45185577869415283, 0.44789329171180725, 0.4593845009803772, 0.4695548713207245, 0.4807819426059723, 0.490159809589386, 0.49491479992866516, 0.5032360553741455, 0.509840190410614, 0.5256901383399963, 0.5279355645179749, 0.5311055183410645, 0.531898021697998, 0.5453705191612244, 0.5429930090904236, 0.5469554662704468, 0.5555408596992493, 0.5453705191612244, 0.5638620853424072, 0.5778629183769226, 0.591731607913971, 0.6009774208068848, 0.6127327680587769, 0.6223748326301575, 0.6254127621650696, 0.639809787273407, 0.6425835490226746, 0.6528860330581665, 0.6479989290237427, 0.6602826714515686, 0.6572447419166565, 0.6592260003089905, 0.6619997620582581, 0.6561880707740784, 0.6528860330581665, 0.6543388962745667], "val_loss": [1.9704525811331612, 1.9691049030848913, 1.9669031415666853, 1.9638779503958566, 1.9600272859845842, 1.9553879329136439, 1.949979645865304, 1.9438393456595284, 1.9369757516043526, 1.9293986048017229, 1.9211140360151018, 1.9121031079973494, 1.9022948401314872, 1.8915724073137556, 1.87974670955113, 1.866529941558838, 1.8516461508614677, 1.8347509929112025, 1.8155243056161063, 1.7936162948608398, 1.7687290736607142, 1.7404223850795202, 1.7082985469273158, 1.6720402240753174, 1.6313279015677316, 1.5859740802219935, 1.5361105033329554, 1.4820952756064278, 1.4246935163225447, 1.3648693902151925, 1.304100854056222, 1.2439361299787248, 1.185929809297834, 1.1312482697623116, 1.0806006704057967, 1.0341230119977678, 0.9915578365325928, 0.9526660782950265, 0.9166130338396344, 0.8830654621124268, 0.8525134154728481, 0.8264768975121635, 0.8067456483840942, 0.7941038608551025, 0.7860409532274518, 0.7775523832866124, 0.7636872189385551, 0.7467517682484218, 0.7331008911132812, 0.7268916879381452, 0.7269221884863717, 0.7290044001170567, 0.7290213789258685, 0.7241262027195522, 0.7140071051461356, 0.7003429276602608, 0.6850683689117432, 0.6713235889162336, 0.6625023909977504, 0.6592857156481061, 0.6602333954402378, 0.6634142909731183, 0.6669048581804548, 0.6700258084705898, 0.6728386197771344], "val_accuracy": [0.0416666679084301, 0.04766666516661644, 0.06533333659172058, 0.08699999749660492, 0.12600000202655792, 0.17499999701976776, 0.23366667330265045, 0.28733333945274353, 0.33133333921432495, 0.36033332347869873, 0.37466666102409363, 0.3840000033378601, 0.39133334159851074, 0.4033333361148834, 0.41066667437553406, 0.4193333387374878, 0.42399999499320984, 0.4309999942779541, 0.4359999895095825, 0.4449999928474426, 0.44966667890548706, 0.4580000042915344, 0.46666666865348816, 0.4776666760444641, 0.4873333275318146, 0.49933332204818726, 0.5066666603088379, 0.5183333158493042, 0.5289999842643738, 0.5440000295639038, 0.5553333163261414, 0.5686666369438171, 0.581333339214325, 0.597000002861023, 0.6086666584014893, 0.6266666650772095, 0.6359999775886536, 0.6523333191871643, 0.6629999876022339, 0.6696666479110718, 0.675000011920929, 0.6826666593551636, 0.6800000071525574, 0.6813333630561829, 0.6736666560173035, 0.6733333468437195, 0.6836666464805603, 0.6973333358764648, 0.7013333439826965, 0.7046666741371155, 0.7096666693687439, 0.7126666903495789, 0.7126666903495789, 0.7170000076293945, 0.7176666855812073, 0.7170000076293945, 0.7160000205039978, 0.7160000205039978, 0.7193333506584167, 0.7246666550636292, 0.7233333587646484, 0.7173333168029785, 0.7126666903495789, 0.7110000252723694, 0.7080000042915344]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 3, 3], [1, 52, 13]], "fitness": -0.4074285626411438, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, sigma), sigma)", "other_info": {"loss": [2.576708132769406, 2.6486596734280345, 2.2404654666716475, 2.291486245388242, 2.3088311990647976, 2.3044065814118393, 2.3031102488337254, 2.3035629642417543], "accuracy": [0.18161405622959137, 0.17712323367595673, 0.1826707124710083, 0.20604939758777618, 0.09893012791872025, 0.09760929644107819, 0.09853387624025345, 0.09536388516426086], "val_loss": [1.967738424028669, 1.8507518087114607, 1.6225712639944894, 1.9836492538452148, 1.9752939088003976, 1.9737985474722726, 1.9736855370657784, 1.9738035202026367], "val_accuracy": [0.10766666382551193, 0.30799999833106995, 0.40533334016799927, 0.0949999988079071, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.09566666930913925]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4, 8], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [2, 3, 9, 1, 2], [0, 0, 1], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 13, 7, 3, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))))), tf.math.pow(tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(alpha))), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [1, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 3, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3017855857294376, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [1, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 1], [1, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 1, 2], [1, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 2, 1], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(beta, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 0, 1, 1], [1, 8, 9, 1, 2], [3, 1, 2, 0], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 1, 0, 1], [0, 3, 9, 1, 2], [3, 3, 2], [1, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.3028113718880574, 2.3041056784908327, 2.304686699844449, 2.3085599537334107, 2.3114666299513855, 2.314028384395484, 2.317251045942275, 2.321577492422825, 2.327348018760112, 2.338727189880147, 2.364492355635641, 979925.6009119807, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08942015469074249, 0.08585391938686371, 0.08730682730674744, 0.08479725569486618, 0.08321225643157959, 0.07951393723487854, 0.07726852595806122, 0.0750231146812439, 0.07700435817241669, 0.0758156105875969, 0.07370228320360184, 0.09351472556591034, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9719841820853097, 1.9731826782226562, 1.9743341718401228, 1.9760774203709193, 1.9782306126185827, 1.9803336007254464, 1.9829055922372, 1.9864294188363212, 1.9915573937552316, 2.0016051019941057, 2.0302488463265553, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03400000184774399, 0.02800000086426735, 0.025333333760499954, 0.024666666984558105, 0.026000000536441803, 0.03633333370089531, 0.04699999839067459, 0.06933332979679108, 0.08433333039283752, 0.09833333641290665, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 2, 1], [24, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(tf.math.add(beta, tf.math.multiply(grad, alpha)), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 0, 0, 1, 0, 1, 1], [1, 3, 9, 1, 2], [3, 2, 1], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(beta, alpha))", "other_info": {"loss": [24198.97427407147, 2.6954045569057463, 2.4720878014396352, 2.5834510913378277, 2.657325474372897, 2.50409687647116, 2.605614510005759], "accuracy": [0.09338264167308807, 0.09681680053472519, 0.10210011899471283, 0.09668471664190292, 0.09549596905708313, 0.09893012791872025, 0.10196803510189056], "val_loss": [2.3292926379612515, 2.274054527282715, 2.346150738852365, 2.1975937570844377, 2.3052449907575334, 2.275229181562151, 2.140292235783168], "val_accuracy": [0.09666666388511658, 0.10366666316986084, 0.09799999743700027, 0.0949999988079071, 0.10366666316986084, 0.09799999743700027, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [41, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [2, 0, 2], [18, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09245806187391281, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 3, 2], [1, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, sigma)", "other_info": {"loss": [2.302247370238853, 2.301996455767592, 2.3012013976694554, 2.302648992271408, 2.302993651315631, 2.3024953731440627], "accuracy": [0.08994849026203156, 0.08994849026203156, 0.09074098616838455, 0.09338264167308807, 0.09113723784685135, 0.0886276587843895], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [6, 3, 9, 1, 2], [3, 0, 2], [72, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.302247370238853, 2.301996455767592, 2.3012013976694554, 2.302648992271408, 2.302993651315631, 2.3024953731440627], "accuracy": [0.08994849026203156, 0.08994849026203156, 0.09074098616838455, 0.09338264167308807, 0.09113723784685135, 0.0886276587843895], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [5, 8, 9, 1, 2], [3, 0, 2], [1, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 2, 2, 2, 0, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.302247370238853, 2.301996455767592, 2.3012013976694554, 2.302648992271408, 2.302993651315631, 2.3024953731440627], "accuracy": [0.08994849026203156, 0.08994849026203156, 0.09074098616838455, 0.09338264167308807, 0.09113723784685135, 0.0886276587843895], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [6, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [5, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 0, 1, 1, 1], [1, 7, 9, 1, 2], [3, 0, 2], [99, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 14, 14, 10, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302247370238853, 2.301996455767592, 2.3012013976694554, 2.302648992271408, 2.302993651315631, 2.3024953731440627], "accuracy": [0.08994849026203156, 0.08994849026203156, 0.09074098616838455, 0.09338264167308807, 0.09113723784685135, 0.0886276587843895], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]