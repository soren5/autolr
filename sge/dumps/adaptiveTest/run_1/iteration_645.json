[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 2, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.8428571224212646, "mapping_values": [1, 4, 4, 3, 1, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.423205132403189, 2.2817825961815226, 1.9155320800479692, 1.7372705035945917, 1.2793488148070913, 0.9870961204952552, 0.8532568879524919, 0.7844059556750196, 0.7521808309766673, 0.6963434501126332, 0.6738711341953769, 0.6400531380089314, 0.6367858765210616, 0.6124068189369547, 0.6202206192645162, 0.5871976365061831, 0.5814221693524406, 0.5452121494783465, 0.5530665622112096, 0.5314983920870897, 0.5383461169625916, 0.5153337322867322, 0.5069760653824933, 0.5110542167328951, 0.49258802351131575, 0.471930914326839, 0.4926095750345735, 0.4806296342572736, 0.44180856791343737, 0.4534278588091236, 0.465712277754785, 0.45157303238242547, 0.4606667899531207], "accuracy": [0.23457930982112885, 0.21740853786468506, 0.3646810054779053, 0.45608243346214294, 0.5481442213058472, 0.6421872973442078, 0.6795667409896851, 0.7074362635612488, 0.717870831489563, 0.7380794882774353, 0.7464007139205933, 0.7625148296356201, 0.7568352818489075, 0.767930269241333, 0.7625148296356201, 0.7798177003860474, 0.7761194109916687, 0.7948752045631409, 0.7902522683143616, 0.8014793395996094, 0.7979130744934082, 0.8070268034934998, 0.8078193068504333, 0.8125742673873901, 0.8153480291366577, 0.8269713521003723, 0.819442629814148, 0.8191784620285034, 0.8354246616363525, 0.8334434032440186, 0.8300092220306396, 0.8333113193511963, 0.8285563588142395], "val_loss": [1.9724111557006836, 1.8292153222220284, 0.9694551740373883, 1.1048170839037215, 0.8168036086218697, 0.6176186118807111, 0.6734823329108102, 0.5912495170320783, 0.5272184099469867, 0.5139667817524501, 0.4936417170933315, 0.5173868622098651, 0.4692512239728655, 0.4643934794834682, 0.44937000955854145, 0.47391022954668316, 0.43980843680245535, 0.44705084392002653, 0.4320346287318638, 0.431682220527104, 0.40541477714266094, 0.4060536878449576, 0.3941134810447693, 0.41487838540758404, 0.40834300007138935, 0.37900123425892424, 0.4424369846071516, 0.36665370634623934, 0.39608499833515715, 0.4069918394088745, 0.36644583089011057, 0.3773026466369629, 0.37279993295669556], "val_accuracy": [0.10766666382551193, 0.4086666703224182, 0.6136666536331177, 0.5896666646003723, 0.6613333225250244, 0.7363333106040955, 0.6936666369438171, 0.7413333058357239, 0.7743333578109741, 0.7620000243186951, 0.7846666574478149, 0.746999979019165, 0.793666660785675, 0.793666660785675, 0.8013333082199097, 0.7889999747276306, 0.8090000152587891, 0.8066666722297668, 0.8103333115577698, 0.8056666851043701, 0.824999988079071, 0.8259999752044678, 0.82833331823349, 0.8233333230018616, 0.8276666402816772, 0.8403333425521851, 0.8040000200271606, 0.8500000238418579, 0.8336666822433472, 0.8216666579246521, 0.843999981880188, 0.843999981880188, 0.8443333506584167]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 3, 2, 3, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.8317142724990845, "mapping_values": [1, 4, 4, 2, 2, 1, 16, 16, 9, 7, 0, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(grad), tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), beta))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1501129347461485, 2.039617876602816, 2.000847971560602, 1.3553120176695468, 0.9759760162125268, 0.7676596964559755, 0.6841967184514323, 0.6698055432032065, 0.6404336484872654, 0.5963573982104365, 0.571475005034899, 0.5555364032069438, 0.5459036215216713, 0.523125649577103, 0.5164372788019121, 0.527471867026969, 0.4910310864794949, 0.47593052624050086, 0.4810862287774676, 0.46576157228396536, 0.48693473964413914, 0.44448577016965984], "accuracy": [0.2748646140098572, 0.32162198424339294, 0.378549724817276, 0.5563333630561829, 0.6606789231300354, 0.7150970697402954, 0.7413815855979919, 0.743891179561615, 0.7622507214546204, 0.7724210619926453, 0.7874785661697388, 0.7913089394569397, 0.793422281742096, 0.8005547523498535, 0.8059701323509216, 0.7998943328857422, 0.8145555257797241, 0.8226125836372375, 0.817461371421814, 0.8276317715644836, 0.819970965385437, 0.8335754871368408], "val_loss": [1.8981712205069405, 1.2851594516209193, 1.280754566192627, 0.7563720090048653, 0.609323331287929, 0.5257033279963902, 0.5085881096976144, 0.504118834223066, 0.5020055770874023, 0.4658486672810146, 0.4286601373127529, 0.45547732285090853, 0.4230285712650844, 0.4224028502191816, 0.4323331117630005, 0.399663439818791, 0.3799728921481541, 0.4098277432577951, 0.39194248403821674, 0.4576672485896519, 0.37991044351032804, 0.38829117161887033], "val_accuracy": [0.2693333327770233, 0.3876666724681854, 0.5483333468437195, 0.6983333230018616, 0.7266666889190674, 0.7556666731834412, 0.7573333382606506, 0.7786666750907898, 0.768666684627533, 0.7760000228881836, 0.8193333148956299, 0.8106666803359985, 0.8119999766349792, 0.8119999766349792, 0.8090000152587891, 0.8306666612625122, 0.8450000286102295, 0.8133333325386047, 0.8293333053588867, 0.7946666479110718, 0.8360000252723694, 0.8223333358764648]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.8142856955528259, "mapping_values": [1, 4, 4, 2, 2, 1, 18, 18, 11, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4231795816216186, 2.281830259050282, 1.9283162959420905, 1.651473915871376, 1.0761118094918907, 0.9033049164651612, 0.8186317823582228, 0.7567659911620005, 0.705096146977258, 0.6559462089265232, 0.671678952112048, 0.6230642436565016, 0.6127208131195107, 0.5957300216530323, 0.5802107319351925, 0.5731636270193801, 0.5692356756303163, 0.5177219473312654, 0.5319573921676105, 0.5131034947200585], "accuracy": [0.2347113937139511, 0.21780477464199066, 0.35807687044143677, 0.42583543062210083, 0.5987319946289062, 0.6650376319885254, 0.7003037929534912, 0.7128516435623169, 0.7378153204917908, 0.7560427784919739, 0.7511557340621948, 0.7642319202423096, 0.7724210619926453, 0.7724210619926453, 0.7807422876358032, 0.7781006693840027, 0.7915731072425842, 0.8123101592063904, 0.8006868362426758, 0.8047813773155212], "val_loss": [1.972390856061663, 1.829763412475586, 1.2029990128108434, 0.8791646616799491, 0.705329418182373, 0.6135065725871495, 0.6158667632511684, 0.6086515358516148, 0.5030683960233416, 0.5149032388414655, 0.48632287979125977, 0.4704678569521223, 0.4708419697625296, 0.44547079290662495, 0.427591758114951, 0.4507936068943569, 0.4211874859673636, 0.4293286204338074, 0.4168206197874887, 0.4462481566837856], "val_accuracy": [0.10766666382551193, 0.4103333353996277, 0.5166666507720947, 0.6886666417121887, 0.7009999752044678, 0.7393333315849304, 0.753333330154419, 0.7206666469573975, 0.7803333401679993, 0.7570000290870667, 0.7823333144187927, 0.7879999876022339, 0.7963333129882812, 0.8063333630561829, 0.8186666369438171, 0.8009999990463257, 0.812333345413208, 0.8109999895095825, 0.8149999976158142, 0.7996666431427002]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [29, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 2, 8, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 1, 3, 2, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0], [0, 7, 6, 4], [4, 1], [64], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.795714259147644, "mapping_values": [1, 4, 4, 3, 1, 1, 18, 18, 10, 8, 0, 8, 4, 4, 0, 0, 7, 4, 3, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))), tf.math.pow(grad, grad))))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.pow(sigma, sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.274534511622846, 2.189373069073404, 2.018707319619775, 1.7341492224079726, 1.4476429280698133, 1.2566125783874942, 1.1137636509144453, 1.0429471002955872, 1.0010893614284901, 0.9591300368875859, 0.9201735647646443, 0.8765445662810739, 0.8558768190727919, 0.8280895408575073, 0.8118734769203313, 0.8032820728460969, 0.777553372339975, 0.7634968907762875, 0.7581103619347002, 0.7593044953544016, 0.7394597941086734, 0.7453738470685921, 0.7244602614909651, 0.722476636909963, 0.7150880608025196, 0.7033182133095942, 0.700810497384329, 0.6901283376976767, 0.6870515568538853, 0.678859567645361, 0.6728637557712449, 0.6669039213504647, 0.657715444071355, 0.660710757796822, 0.654189186230973, 0.6544625548134863, 0.6444358933934006, 0.6373789843047347, 0.6297808517365486, 0.6336364424255435, 0.6288005341990371, 0.6254659867116631, 0.6149065664588909, 0.6147629692097539, 0.6220268360171194, 0.6136468573646964], "accuracy": [0.16378284990787506, 0.31197991967201233, 0.4023246467113495, 0.46849822998046875, 0.5184255838394165, 0.5669000148773193, 0.6077136397361755, 0.6283186078071594, 0.6428477168083191, 0.6530181169509888, 0.6730946898460388, 0.6843217611312866, 0.6863030195236206, 0.6980583667755127, 0.7042662501335144, 0.7103421092033386, 0.7211728692054749, 0.7199841737747192, 0.7197200059890747, 0.722229540348053, 0.726192057132721, 0.7255316376686096, 0.7354378700256348, 0.7283053994178772, 0.7326641082763672, 0.7386078238487244, 0.7378153204917908, 0.7429665923118591, 0.7458723783493042, 0.7474573850631714, 0.750231146812439, 0.7530049085617065, 0.750759482383728, 0.7544577717781067, 0.7512878179550171, 0.7580240368843079, 0.7598732113838196, 0.7606657147407532, 0.7633073329925537, 0.7618544697761536, 0.7586844563484192, 0.7718927264213562, 0.7656848430633545, 0.7712323069572449, 0.767401933670044, 0.7677981853485107], "val_loss": [1.9065863064357214, 1.793635368347168, 1.559173277446202, 1.2434789112636022, 1.0047639097486223, 0.8613051516669137, 0.7721607003893171, 0.7350781985691616, 0.6887795754841396, 0.6600702660424369, 0.6340185744421822, 0.6229147059576852, 0.6030570268630981, 0.5920632907322475, 0.5805053540638515, 0.57497239112854, 0.5689363820212228, 0.5495155368532453, 0.54662367275783, 0.5418227570397514, 0.539966174534389, 0.5280320303780692, 0.5246834584644863, 0.5217392444610596, 0.526583058493478, 0.5096174308231899, 0.5083898135593959, 0.5041280303682599, 0.5021221126828875, 0.494041987827846, 0.5026086398533413, 0.4974507604326521, 0.49076855182647705, 0.4899122714996338, 0.48271684987204416, 0.48048579692840576, 0.4835796867098127, 0.4761089086532593, 0.47419616154261995, 0.476263233593532, 0.4701102631432669, 0.47098476546151297, 0.4704353468758719, 0.46537634304591585, 0.4648423024586269, 0.4669668504170009], "val_accuracy": [0.38600000739097595, 0.492333322763443, 0.5616666674613953, 0.621666669845581, 0.659333348274231, 0.6850000023841858, 0.7053333520889282, 0.7070000171661377, 0.7206666469573975, 0.734000027179718, 0.7450000047683716, 0.7456666827201843, 0.7476666569709778, 0.7443333268165588, 0.7540000081062317, 0.7580000162124634, 0.7543333172798157, 0.7606666684150696, 0.7633333206176758, 0.7563333511352539, 0.7706666588783264, 0.7699999809265137, 0.7736666798591614, 0.7743333578109741, 0.7689999938011169, 0.7839999794960022, 0.7806666493415833, 0.7796666622161865, 0.7829999923706055, 0.7866666913032532, 0.7856666445732117, 0.7799999713897705, 0.7910000085830688, 0.7893333435058594, 0.7943333387374878, 0.7963333129882812, 0.7829999923706055, 0.8016666769981384, 0.7946666479110718, 0.7986666560173035, 0.8056666851043701, 0.8026666641235352, 0.7979999780654907, 0.8023333549499512, 0.8053333163261414, 0.7990000247955322]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.7540000081062317, "mapping_values": [1, 4, 4, 3, 1, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.150220986732702, 2.0520280260278283, 2.5969639713139725, 2.0249665826618113, 1.5421397670888946, 1.1150978441330357, 0.8659765559212091, 0.7572577214669306, 0.7009978139121786, 0.6529802287401162, 0.6524844931384686, 0.5901809663914922, 0.5865127030553882, 0.6008401043489703, 0.5838887229760593, 0.5586554382250781, 0.5440207891665146], "accuracy": [0.2748646140098572, 0.31765949726104736, 0.2715625464916229, 0.28318583965301514, 0.4791969358921051, 0.6370360851287842, 0.6950204968452454, 0.7211728692054749, 0.7421740889549255, 0.7627789974212646, 0.754589855670929, 0.7771760821342468, 0.7769119143486023, 0.78113853931427, 0.774798572063446, 0.7857614755630493, 0.7922335267066956], "val_loss": [1.8985641343253, 1.2806266375950404, 1.9597807611737932, 1.0391333103179932, 0.9491404465266636, 0.6999064683914185, 0.5921062401362828, 0.5453144993100848, 0.5228087391172137, 0.5358342613492694, 0.4625965527125767, 0.45084461144038607, 0.493815541267395, 0.47238028049468994, 0.461498532976423, 0.4308440259524754, 0.4181657263210842], "val_accuracy": [0.26866665482521057, 0.3853333294391632, 0.15466666221618652, 0.5696666836738586, 0.671999990940094, 0.7083333134651184, 0.7269999980926514, 0.7646666765213013, 0.7733333110809326, 0.7269999980926514, 0.7993333339691162, 0.8226666450500488, 0.7713333368301392, 0.762666642665863, 0.8019999861717224, 0.8106666803359985, 0.8203333616256714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [13, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 9, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.4774285852909088, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 3, 1, 1, 6, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3016025296701117, 2.3004309732081665, 2.298445070424431, 2.299112586738285, 2.2982784045953415, 2.294999754802032, 2.2930432652375323, 2.2924069841823496, 2.2888837130219946, 2.290189059875613, 2.287540281107082, 2.2870376479151764, 2.285388410870803, 2.284652649403689, 2.2834807402422213, 2.282161537776801, 2.2802414902921493, 2.2796044415171752, 2.2792444546870456, 2.276282137757547, 2.2749064272861785, 2.274445452348132, 2.273575230738144, 2.2727982213452758, 2.270366255664838, 2.269610982545221, 2.2680494265077042, 2.26533875542861, 2.2662294053004763, 2.264082654749697, 2.262775050367205, 2.2611607182940725, 2.2588890864785793, 2.25687310784138, 2.2573438917310433, 2.2535634011860775, 2.2516738737043593, 2.2519333511217003, 2.2504979430440395, 2.2506507791469534, 2.248606227943532, 2.245664055100868, 2.243622261220438, 2.2442009894288275, 2.2414860695801266, 2.2387689763150904, 2.2376689608259883, 2.236706603236281, 2.2358430688722244, 2.232366002073629, 2.2305361314803034, 2.22916566451716, 2.227658217058143, 2.224297036930649, 2.2225167555123146, 2.222799974457148, 2.2216410966612927, 2.2198855778670596, 2.215125336638846, 2.2130624357389026, 2.2108946779951713, 2.2106245507527618, 2.2096338172268166, 2.207407103899904, 2.204721460599374, 2.2023600358311777, 2.199632227019296, 2.196423407070798, 2.19453524444176, 2.1915727903688307, 2.1901837841331715, 2.187035635682523, 2.186413405672466, 2.181853311220259, 2.181445992429101, 2.1781058041584287, 2.177703966979164, 2.171122218009708, 2.171010684437992, 2.1680912406232613, 2.1652063931676895, 2.161326214432984, 2.1591431930820626, 2.1550503394953595, 2.1527925195821194, 2.15025991584804, 2.1470169502714795, 2.1460518580008303, 2.1411898091421655, 2.137779530154999, 2.1360351720018125, 2.1324738065847835, 2.127346326961273, 2.1278483455427697, 2.1237815382804666, 2.1162976855221456, 2.114069959160328, 2.1120207405140716, 2.107842684673863, 2.1058722646118957], "accuracy": [0.09113723784685135, 0.0882314071059227, 0.10579843819141388, 0.09826971590518951, 0.10117553919553757, 0.11094967275857925, 0.10976093262434006, 0.11649715900421143, 0.12389380484819412, 0.11781799048185349, 0.12732796370983124, 0.1290450394153595, 0.13736626505851746, 0.1348566859960556, 0.13168670237064362, 0.1434420794248581, 0.14740456640720367, 0.14714039862155914, 0.1468762308359146, 0.1592920422554016, 0.1682736724615097, 0.1674811840057373, 0.1670849323272705, 0.1670849323272705, 0.1802932173013687, 0.18082155287265778, 0.17593449354171753, 0.1912561058998108, 0.19112402200698853, 0.19693566858768463, 0.1942940205335617, 0.1946902722120285, 0.19878484308719635, 0.2098798006772995, 0.20776647329330444, 0.22639016807079315, 0.2262580841779709, 0.2188614457845688, 0.22837141156196594, 0.23365473747253418, 0.22533351182937622, 0.2324659824371338, 0.23563598096370697, 0.2452780306339264, 0.24184387922286987, 0.24712719023227692, 0.24607053399085999, 0.2479196935892105, 0.25439175963401794, 0.2584863305091858, 0.266939640045166, 0.26958128809928894, 0.2674679756164551, 0.27565711736679077, 0.27843084931373596, 0.27658170461654663, 0.2705058753490448, 0.28001585602760315, 0.28701624274253845, 0.2903183102607727, 0.2915070652961731, 0.2933562397956848, 0.2925637364387512, 0.29203540086746216, 0.3123761713504791, 0.3055078685283661, 0.3077532649040222, 0.3129045069217682, 0.31462156772613525, 0.3143574297428131, 0.3127724230289459, 0.31884822249412537, 0.31805574893951416, 0.3307357132434845, 0.3291507065296173, 0.3299432098865509, 0.3214899003505707, 0.3377360999584198, 0.33681151270866394, 0.3435477614402771, 0.3273015320301056, 0.34288734197616577, 0.3401135802268982, 0.35081231594085693, 0.34764233231544495, 0.3389248549938202, 0.3539822995662689, 0.35226520895957947, 0.3529256284236908, 0.3575485348701477, 0.35820895433425903, 0.3611147701740265, 0.3641526997089386, 0.3553031384944916, 0.3657376766204834, 0.37445515394210815, 0.3695680797100067, 0.3681151866912842, 0.37445515394210815, 0.3747193217277527], "val_loss": [1.9697095326014928, 1.968494279044015, 1.9672807965959822, 1.966073649270194, 1.9648692267281669, 1.9636902809143066, 1.9624961444309779, 1.961311204092843, 1.9601226534162248, 1.9589320591517858, 1.9577405793326241, 1.9565503937857491, 1.9553607531956263, 1.9541693414960588, 1.9529638971601213, 1.9517698969159807, 1.950580392565046, 1.9493803977966309, 1.9481752940586634, 1.9469665799822127, 1.945742062159947, 1.9445159775870187, 1.9432872363499232, 1.9420628547668457, 1.9408208983285087, 1.9395761489868164, 1.9383089882986886, 1.9370405333382743, 1.9357781410217285, 1.93447664805821, 1.933178152356829, 1.9318524769374303, 1.930532727922712, 1.9291959490094865, 1.9278644153050013, 1.926492486681257, 1.9250966480800085, 1.9236910002572196, 1.9222801072256905, 1.920865603855678, 1.919428893498012, 1.917976243155343, 1.9165098326546806, 1.9150239399501257, 1.9135292598179408, 1.9120091710771834, 1.9104623113359724, 1.9089133398873466, 1.9073598044259208, 1.9057600157601493, 1.9041318212236678, 1.9024885722569056, 1.9008162362234933, 1.8991028921944755, 1.8973932947431291, 1.8956473214285714, 1.8939079557146346, 1.8921401841299874, 1.8903092656816756, 1.8884520530700684, 1.8865714073181152, 1.8846736635480608, 1.8827647481645857, 1.8808271544320243, 1.878847530909947, 1.8768298966544015, 1.8747762271336146, 1.8726818220955985, 1.8705532891409737, 1.868391786302839, 1.8662033762250627, 1.8639539309910365, 1.8617061887468611, 1.8594024521963937, 1.8570908137730189, 1.8547183445521764, 1.8523214885166712, 1.8498452731541224, 1.847374711717878, 1.8448504039219447, 1.8422858374459403, 1.8396687507629395, 1.8370238712855749, 1.8343114171709334, 1.8315629277910506, 1.8287815366472517, 1.825960431780134, 1.8230795860290527, 1.8201781681605749, 1.81723267691476, 1.814237322126116, 1.8111797741481237, 1.8080973625183105, 1.804988248007638, 1.8018230029514857, 1.7985694749014718, 1.7952735083443778, 1.7919467517307825, 1.7885640008108956, 1.7851567268371582], "val_accuracy": [0.045666664838790894, 0.054666668176651, 0.06233333423733711, 0.07100000232458115, 0.07999999821186066, 0.08900000154972076, 0.10233332961797714, 0.1146666631102562, 0.125, 0.13733333349227905, 0.1536666601896286, 0.16500000655651093, 0.1743333339691162, 0.18666666746139526, 0.19633333384990692, 0.2096666693687439, 0.2213333398103714, 0.23366667330265045, 0.24433332681655884, 0.257999986410141, 0.2669999897480011, 0.2759999930858612, 0.28433331847190857, 0.2919999957084656, 0.29766666889190674, 0.3070000112056732, 0.31566667556762695, 0.3240000009536743, 0.3306666612625122, 0.3370000123977661, 0.3423333466053009, 0.3486666679382324, 0.3566666543483734, 0.3596666753292084, 0.36666667461395264, 0.37066665291786194, 0.37599998712539673, 0.3773333430290222, 0.38066667318344116, 0.3853333294391632, 0.3866666555404663, 0.3889999985694885, 0.390666663646698, 0.39399999380111694, 0.3946666717529297, 0.39633333683013916, 0.39899998903274536, 0.4013333320617676, 0.4036666750907898, 0.4059999883174896, 0.4086666703224182, 0.4103333353996277, 0.41100001335144043, 0.414000004529953, 0.41499999165534973, 0.4180000126361847, 0.4193333387374878, 0.42233332991600037, 0.42399999499320984, 0.4259999990463257, 0.4283333420753479, 0.42933332920074463, 0.4320000112056732, 0.43299999833106995, 0.4359999895095825, 0.43833333253860474, 0.4413333237171173, 0.4426666796207428, 0.44433334469795227, 0.4449999928474426, 0.44600000977516174, 0.4466666579246521, 0.4480000138282776, 0.44966667890548706, 0.45100000500679016, 0.45366665720939636, 0.45399999618530273, 0.45500001311302185, 0.4583333432674408, 0.4586666524410248, 0.460999995470047, 0.4636666774749756, 0.46566668152809143, 0.46799999475479126, 0.468666672706604, 0.4716666638851166, 0.47466665506362915, 0.47600001096725464, 0.47733333706855774, 0.4779999852180481, 0.47866666316986084, 0.4816666543483734, 0.48233333230018616, 0.484333336353302, 0.48500001430511475, 0.4860000014305115, 0.4873333275318146, 0.48899999260902405, 0.49266666173934937, 0.49399998784065247]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4.07711043888158, 2345665124519518.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2390701323747635, 0.11913882195949554, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0629879406520297, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.13866665959358215, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 9, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021489292198183, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 22, 22, 13, 9, 1, 6, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(grad, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad)))), grad)))), tf.math.square(tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 9, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07132479548454285, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 6, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [1, 1], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 21, 21, 14, 7, 2, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(grad)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, alpha))))))), grad))), tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [66132803325.81047, 8.792406246899013e+17, 4.715763298913412e+25, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.09655263274908066, 0.10500594228506088, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [8, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0], [6, 7, 2, 4], [2, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07211729139089584, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 2, 3, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0], [0, 7, 6, 4], [7, 2], [64], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 18, 18, 11, 7, 1, 8, 5, 4, 1, 0, 7, 3, 4, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, beta)))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(grad, beta)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 0, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035993890330273, 2.305841941560154, 2.3087803247094296, 2.3101791963286296, 2.308922848350667, 2.3111001556544113], "accuracy": [0.09311848133802414, 0.1010434553027153, 0.10210011899471283, 0.09509972482919693, 0.1026284471154213, 0.10210011899471283], "val_loss": [1.9739421435764857, 1.974687167576381, 1.977538994380406, 1.979543617793492, 1.9834794998168945, 1.9809801919119698], "val_accuracy": [0.10366666316986084, 0.10066666454076767, 0.10199999809265137, 0.10366666316986084, 0.10199999809265137, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 4, 9, 8, 8, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 3, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [51, 72, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.07085714489221573, "mapping_values": [1, 5, 5, 3, 2, 1, 13, 13, 9, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, beta))))))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302031390781274, 2.3018691948203047, 2.300979101205971, 2.302592113521577, 2.3028261422512633, 2.3007362846527686, 2.3000398878219217, 2.3003447772552468, 2.298401119529201, 2.3005535765063287, 2.2993024724774656, 2.3000202964971157, 2.2994509858068555, 2.300124688281391, 2.3000179176018176, 2.300027911626211, 2.299473231038114, 2.3001153335878644, 2.3007303403116977, 2.2995336143300675, 2.299431388593227, 2.2998870915236678, 2.300373970163245, 2.300737859613592, 2.2992966380085944, 2.2999495550500026, 2.300238592119863, 2.2988373009189558, 2.3007180008984607, 2.3001935396054636, 2.299737638942853, 2.2999876042430145, 2.299096629541186, 2.2991529099299783, 2.3001708193320356, 2.299017027683734], "accuracy": [0.08968432247638702, 0.08558975160121918, 0.09919429570436478, 0.09060890227556229, 0.08836349099874496, 0.09615638852119446, 0.09272222965955734, 0.0956280529499054, 0.09985470771789551, 0.09034473448991776, 0.09826971590518951, 0.09708096832036972, 0.10210011899471283, 0.09694888442754745, 0.09272222965955734, 0.09826971590518951, 0.09826971590518951, 0.09417514503002167, 0.09140139818191528, 0.09628847241401672, 0.1022322028875351, 0.09642054885625839, 0.09959053993225098, 0.09826971590518951, 0.1022322028875351, 0.1014397069811821, 0.09959053993225098, 0.10394927859306335, 0.09615638852119446, 0.09919429570436478, 0.09285431355237961, 0.09932637959718704, 0.10328886657953262, 0.10434553027153015, 0.09721305221319199, 0.10011887550354004], "val_loss": [1.9707221303667342, 1.970449651990618, 1.9703388895307268, 1.9701275144304549, 1.9699648448399134, 1.9698625292096819, 1.9697917529514857, 1.9697209085736955, 1.969708033970424, 1.9696222714015417, 1.9696144376482283, 1.9696053096226283, 1.9695726803370885, 1.9695918219430106, 1.9695632117135184, 1.9695570128304618, 1.9696276528494698, 1.9696762221200126, 1.9696753365652901, 1.9696770395551408, 1.9696809904915946, 1.9696997233799525, 1.9696498598371233, 1.9696198872157507, 1.9695640972682409, 1.9695281982421875, 1.9695139612470354, 1.9695303780691964, 1.9695321491786413, 1.9695426395961217, 1.9695563316345215, 1.969559669494629, 1.9695806503295898, 1.969663347516741, 1.969691549028669, 1.9697647094726562], "val_accuracy": [0.041333332657814026, 0.044333335012197495, 0.045666664838790894, 0.04933333396911621, 0.052000001072883606, 0.052666667848825455, 0.054999999701976776, 0.054999999701976776, 0.0560000017285347, 0.058666665107011795, 0.059333331882953644, 0.06133333221077919, 0.06333333253860474, 0.06400000303983688, 0.06433333456516266, 0.06433333456516266, 0.06533333659172058, 0.06499999761581421, 0.06700000166893005, 0.0689999982714653, 0.06933332979679108, 0.06933332979679108, 0.06933332979679108, 0.07199999690055847, 0.07199999690055847, 0.07333333045244217, 0.07433333247900009, 0.07466666400432587, 0.07433333247900009, 0.07533333450555801, 0.07766667008399963, 0.07633333653211594, 0.07699999958276749, 0.07599999755620956, 0.07599999755620956, 0.07466666400432587]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 5, 6, 3, 6, 4, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.07000000029802322, "mapping_values": [1, 5, 5, 3, 2, 1, 4, 4, 2, 2, 0, 6, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3019138672064954, 2.3013192867920966, 2.3002303068616747, 2.301515598275705, 2.301698607917255, 2.299755823248492, 2.299308771879886, 2.2994818569347606, 2.2981476204632423, 2.299823098383591, 2.2988230028582004, 2.2995923405640855, 2.2987627711955505, 2.2994792923368657, 2.2991837524010474, 2.2994281216509167, 2.299138115979992], "accuracy": [0.08928807079792023, 0.0878351628780365, 0.10117553919553757, 0.09576013684272766, 0.0948355570435524, 0.09787346422672272, 0.09945846349000931, 0.10091137140989304, 0.1026284471154213, 0.09694888442754745, 0.10130762308835983, 0.09747721254825592, 0.10434553027153015, 0.09959053993225098, 0.09668471664190292, 0.09998679161071777, 0.09906221181154251], "val_loss": [1.9703888211931502, 1.9699337823050362, 1.9696941375732422, 1.9694547653198242, 1.9692997251238142, 1.9692750658307756, 1.9693677765982491, 1.9694319452558244, 1.9695773805890764, 1.9694993836539132, 1.969510623386928, 1.969545568738665, 1.9695614406040736, 1.9696307182312012, 1.9697140284946986, 1.9698936598641532, 1.9701025826590401], "val_accuracy": [0.04466666653752327, 0.050999999046325684, 0.054666668176651, 0.05900000035762787, 0.06300000101327896, 0.06666667014360428, 0.06833333522081375, 0.07133333384990692, 0.07100000232458115, 0.07466666400432587, 0.07699999958276749, 0.07733333110809326, 0.07699999958276749, 0.07633333653211594, 0.07699999958276749, 0.07433333247900009, 0.0716666653752327]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 0, 3, 2, 6, 1, 1, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 3, 2, 3, 3, 2, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [96, 97, 13, 96, 41]], "fitness": -0.07000000029802322, "mapping_values": [1, 4, 4, 2, 2, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3017572324667404, 2.301058978609925, 2.2999849414246003, 2.3011754189877855, 2.3015569516334238, 2.2997922084555413, 2.299381185406156, 2.2994081203129157, 2.2981856593901786, 2.2995961604573707, 2.2989950643601653, 2.300085089162923, 2.29929106913506, 2.3002592696962165], "accuracy": [0.09087307006120682, 0.08928807079792023, 0.10196803510189056, 0.09602430462837219, 0.09576013684272766, 0.10011887550354004, 0.10077928751707077, 0.10447761416435242, 0.10315678268671036, 0.09681680053472519, 0.10170386731624603, 0.09509972482919693, 0.10117553919553757, 0.09576013684272766], "val_loss": [1.9702352115086146, 1.969714845929827, 1.9696331024169922, 1.9693946838378906, 1.9694359643118722, 1.9694760867527552, 1.9695334434509277, 1.9695565359933036, 1.969644205910819, 1.969710009438651, 1.9700121879577637, 1.9703280585152763, 1.9705379349844796, 1.9707742418561662], "val_accuracy": [0.045666664838790894, 0.05366666615009308, 0.058666665107011795, 0.06333333253860474, 0.06733333319425583, 0.07000000029802322, 0.07400000095367432, 0.07699999958276749, 0.07766667008399963, 0.07566666603088379, 0.0716666653752327, 0.06700000166893005, 0.06733333319425583, 0.061666667461395264]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 5, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 9, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 5, 5, 3, 2, 0, 4, 4, 3, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3021546038402274, 2.3023121658648167, 2.301675327135005, 2.3036841458774213, 2.3041887227586075, 2.3021062941142456], "accuracy": [0.08994849026203156, 0.08519349992275238, 0.09681680053472519, 0.08849557489156723, 0.08651433140039444, 0.09298639744520187], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 2, 9, 4, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [4, 1, 2, 3, 3, 3, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0], [0, 7, 6, 4], [0, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 0, 17, 17, 10, 7, 1, 6, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.multiply(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), beta), grad)))), tf.math.add(beta, grad)), tf.math.pow(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3021546038402274, 2.3023121658648167, 2.301675327135005, 2.3036841458774213, 2.3041887227586075, 2.3021062941142456], "accuracy": [0.08994849026203156, 0.08519349992275238, 0.09681680053472519, 0.08849557489156723, 0.08651433140039444, 0.09298639744520187], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [1, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 3, 3, 2, 5, 1, 2, 8, 9, 2, 5, 0, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [1, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [50, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0], [0, 7, 6, 4], [7, 1], [64], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 3, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 1, 0, 0, 0, 2, 2], [53, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 3, 1, 1, 15, 15, 8, 7, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad)))), grad)), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3021546038402274, 2.3023121658648167, 2.301675327135005, 2.3036841458774213, 2.3041887227586075, 2.3021062941142456], "accuracy": [0.08994849026203156, 0.08519349992275238, 0.09681680053472519, 0.08849557489156723, 0.08651433140039444, 0.09298639744520187], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]