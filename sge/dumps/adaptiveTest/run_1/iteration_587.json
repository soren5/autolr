[{"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [45, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8360000252723694, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 7, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0178980918340614, 1.707578826054543, 1.0357862210796493, 0.8556768930174057, 0.7958751157400489, 0.730325243767809, 0.7051480952790542, 0.6580855869944573, 0.6206177894890568, 0.6196534490745932, 0.5946190658577397, 0.5684383300081015, 0.5525500771864262, 0.5433068416295287, 0.5304260938678671, 0.51934911733243, 0.5059173307193977, 0.48330320196853355, 0.4825229511489611, 0.46355882113037516, 0.47511510113840955, 0.4400794462182377, 0.434979728621231, 0.434240138592926, 0.43307495334081964, 0.4328338585596169, 0.4165939170340222, 0.39620115707075243, 0.39646353606755125, 0.39645329038260113, 0.39850482073804533, 0.37743227143077296, 0.37341190831079585, 0.3573118328985175, 0.361937396369039, 0.3527212553862898, 0.34527804211949187, 0.34417676979981204, 0.35382998025475587, 0.33396920017389303, 0.33812078843027327, 0.35162012129254455, 0.31816643321786525, 0.3258567179875871, 0.31978728278453844, 0.3121863013450039, 0.3050205842134833, 0.29529908237644964, 0.29297639604541276], "accuracy": [0.3333773612976074, 0.4377228915691376, 0.62660151720047, 0.6841896772384644, 0.7010962963104248, 0.7302865982055664, 0.7298903465270996, 0.7578919529914856, 0.7650244235992432, 0.763967752456665, 0.7730814814567566, 0.7841764688491821, 0.793950617313385, 0.7960638999938965, 0.807158887386322, 0.804649293422699, 0.8153480291366577, 0.8177255392074585, 0.8202351331710815, 0.8255184292793274, 0.8161405324935913, 0.8367455005645752, 0.8358209133148193, 0.8381983637809753, 0.8374059200286865, 0.8355567455291748, 0.8422929644584656, 0.8549728989601135, 0.8521991968154907, 0.8539162874221802, 0.8515387773513794, 0.8615770936012268, 0.8588033318519592, 0.8677849769592285, 0.8646149635314941, 0.8704266548156738, 0.8726720213890076, 0.8701624870300293, 0.8663320541381836, 0.8766345381736755, 0.8710870146751404, 0.8697662353515625, 0.8787478804588318, 0.8803328275680542, 0.8808611631393433, 0.8817857503890991, 0.8792761564254761, 0.8914278149604797, 0.8886540532112122], "val_loss": [1.9272241592407227, 0.932884693145752, 0.6488658019474575, 0.5674220493861607, 0.5996573482240949, 0.5198407684053693, 0.5110341140202114, 0.507033211844308, 0.4799383708408901, 0.4787936210632324, 0.4681790896824428, 0.4369040046419416, 0.44550306456429617, 0.4358707666397095, 0.4222124900136675, 0.410533675125667, 0.40003184761319843, 0.4343803439821516, 0.38689530747277395, 0.4105615871293204, 0.3790227004459926, 0.39665085077285767, 0.3647431305476597, 0.3773272718702044, 0.40538167101996286, 0.3676969238689968, 0.35400451932634625, 0.3542243412562779, 0.35692855290004183, 0.3776250055858067, 0.3765098452568054, 0.3574476497513907, 0.36748638323375155, 0.337675358567919, 0.33438239778791157, 0.3347369432449341, 0.32727296011788504, 0.3218411547797067, 0.3356873903955732, 0.3254914539200919, 0.3437402418681553, 0.3229543481554304, 0.33464804717472624, 0.32505874974387033, 0.32385052953447613, 0.3108922072819301, 0.31484832082475933, 0.3315311755452837, 0.32853695324489046], "val_accuracy": [0.2616666555404663, 0.609333336353302, 0.7110000252723694, 0.7483333349227905, 0.7516666650772095, 0.7646666765213013, 0.781333327293396, 0.7649999856948853, 0.7916666865348816, 0.7893333435058594, 0.7906666398048401, 0.8130000233650208, 0.8040000200271606, 0.8133333325386047, 0.8186666369438171, 0.8253333568572998, 0.8296666741371155, 0.8059999942779541, 0.8293333053588867, 0.8230000138282776, 0.8413333296775818, 0.828000009059906, 0.846666693687439, 0.8353333473205566, 0.8293333053588867, 0.8413333296775818, 0.8550000190734863, 0.8516666889190674, 0.8493333458900452, 0.843999981880188, 0.8386666774749756, 0.856333315372467, 0.8413333296775818, 0.859000027179718, 0.8600000143051147, 0.8643333315849304, 0.8616666793823242, 0.8663333058357239, 0.8516666889190674, 0.8640000224113464, 0.8610000014305115, 0.8686666488647461, 0.8656666874885559, 0.8713333606719971, 0.8676666617393494, 0.8703333139419556, 0.8700000047683716, 0.8606666922569275, 0.8709999918937683]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0], [0, 1, 6, 5], [3, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8360000252723694, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, beta)", "other_info": {"loss": [2.4235506909571587, 1.9910439583824107, 1.528508898525694, 1.0544962101860635, 0.8869772933934265, 0.8340747266901546, 0.8265175973781741, 0.7336022995560948, 0.6924888500448042, 0.6740431564988839, 0.6406115899468929, 0.5977122745635471, 0.6022261551673213, 0.5813176718527819, 0.5576485504075568, 0.5966210366791234, 0.5424296770979463, 0.5083091590681946, 0.5097279124618317, 0.4947157141641461, 0.49631555940748723, 0.4673679404254949, 0.46430969016269497, 0.47011268225879466, 0.45205980174813243, 0.43837773719987755, 0.43208555135398163, 0.4268379456307894, 0.4001277745391998, 0.4070751051333728, 0.4129020546437129, 0.4107830488938445, 0.38551102558367634, 0.37545272080480396, 0.3764824546118769, 0.3669122928924974, 0.3673552818750866, 0.3673346805581957, 0.35199411482449455, 0.3534434093121824, 0.34090911226895476, 0.34414964700182904, 0.3362436923155963], "accuracy": [0.2712983787059784, 0.3183199167251587, 0.4745740294456482, 0.6129969358444214, 0.6767930388450623, 0.6897371411323547, 0.6936996579170227, 0.7297582626342773, 0.7423061728477478, 0.7456082701683044, 0.7580240368843079, 0.7736098170280457, 0.7750627398490906, 0.7816668748855591, 0.7901201844215393, 0.7825914621353149, 0.7944789528846741, 0.8094043135643005, 0.8103289008140564, 0.8133667707443237, 0.8145555257797241, 0.8261788487434387, 0.8273676037788391, 0.8251221776008606, 0.83119797706604, 0.8372738361358643, 0.8374059200286865, 0.8389908671379089, 0.848368763923645, 0.8500858545303345, 0.8424250483512878, 0.8471800088882446, 0.8531237840652466, 0.8556333184242249, 0.8568220734596252, 0.8582749962806702, 0.8638224601745605, 0.8636903762817383, 0.8672566413879395, 0.8654074668884277, 0.8693699836730957, 0.8729361891746521, 0.8765024542808533], "val_loss": [1.9121956144060408, 1.1940954753330775, 0.7975418737956456, 0.6680024010794503, 0.6495864391326904, 0.5709438834871564, 0.542084881237575, 0.523903318813869, 0.492206335067749, 0.46889688287462505, 0.48346127782549175, 0.5247313295091901, 0.4872086899621146, 0.43178508962903706, 0.44613565717424664, 0.41874754428863525, 0.4180835655757359, 0.4143203837530954, 0.4118712714740208, 0.4258044362068176, 0.39005790437970844, 0.40612480470112394, 0.3859688128743853, 0.37796157598495483, 0.38466950825282503, 0.38435752051217215, 0.3753244025366647, 0.35378187894821167, 0.354194096156529, 0.3694604550089155, 0.37632037912096294, 0.3536134191921779, 0.36866159098488943, 0.35134310381753103, 0.34124745641435894, 0.35488962275641306, 0.34544211626052856, 0.33361795118876864, 0.33647825036730084, 0.3551178915160043, 0.3478990537779672, 0.32969330889838083, 0.33922622885022846], "val_accuracy": [0.19333332777023315, 0.4819999933242798, 0.6766666769981384, 0.7123333215713501, 0.7093333601951599, 0.737333357334137, 0.7703333497047424, 0.7789999842643738, 0.7870000004768372, 0.7926666736602783, 0.7720000147819519, 0.7516666650772095, 0.7793333530426025, 0.8133333325386047, 0.8100000023841858, 0.8159999847412109, 0.815666675567627, 0.8226666450500488, 0.8166666626930237, 0.8119999766349792, 0.831333339214325, 0.8196666836738586, 0.8356666564941406, 0.8383333086967468, 0.8330000042915344, 0.8399999737739563, 0.8420000076293945, 0.8510000109672546, 0.8519999980926514, 0.8533333539962769, 0.8370000123977661, 0.8510000109672546, 0.8460000157356262, 0.8556666374206543, 0.8583333492279053, 0.8579999804496765, 0.8586666584014893, 0.8636666536331177, 0.859666645526886, 0.8500000238418579, 0.8583333492279053, 0.8633333444595337, 0.8586666584014893]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 57, 85, 46], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 0, 3, 3, 3, 2, 2, 1, 4, 4, 3, 1, 4, 1, 3], [67, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8234285712242126, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4421982210010915, 2.1573883294744296, 1.890450153825085, 1.4057509683898222, 1.012520635904275, 0.8885302289743717, 0.8088040287940887, 0.7850494594338422, 0.702112268518227, 0.7316298900720009, 0.6662626119731297, 0.6307609880589349, 0.6213442770528788, 0.605406912287008, 0.588950619170411, 0.5821311549503633, 0.558349599258507, 0.529306596406557, 0.5233328943837667, 0.5391000333305962, 0.5106760684241866, 0.4939102696515881, 0.47952263342028895, 0.4715142553437734, 0.47247775479424914, 0.461308665106152], "accuracy": [0.26918503642082214, 0.24118345975875854, 0.3629639446735382, 0.5070664286613464, 0.6240919232368469, 0.6724342703819275, 0.6930392384529114, 0.7057191729545593, 0.7279091477394104, 0.7257958054542542, 0.7510236501693726, 0.7577598690986633, 0.76542067527771, 0.774798572063446, 0.7800818681716919, 0.7843085527420044, 0.7921014428138733, 0.7957997918128967, 0.8063663840293884, 0.8017435073852539, 0.8092722296714783, 0.8148196935653687, 0.8207634687423706, 0.81548011302948, 0.8257825970649719, 0.8286884427070618], "val_loss": [1.9139620235988073, 1.375833375113351, 1.403132336480277, 0.8932891573224749, 0.6368436983653477, 0.5909969295774188, 0.5442181995936802, 0.5211411373955863, 0.4982572283063616, 0.49403601033346994, 0.4777412584849766, 0.4625312089920044, 0.48659418310437885, 0.44967801230294363, 0.48116205419812885, 0.43157386779785156, 0.4119489107813154, 0.4119803820337568, 0.40357671465192524, 0.40958012853349957, 0.3909535322870527, 0.4156486562320164, 0.3838273712566921, 0.39673107862472534, 0.41611201422555105, 0.3819067307880947], "val_accuracy": [0.1940000057220459, 0.49799999594688416, 0.5933333039283752, 0.6600000262260437, 0.6963333487510681, 0.7310000061988831, 0.765333354473114, 0.7639999985694885, 0.7839999794960022, 0.7836666703224182, 0.7820000052452087, 0.7986666560173035, 0.7806666493415833, 0.7986666560173035, 0.7703333497047424, 0.8086666464805603, 0.8236666917800903, 0.8190000057220459, 0.8220000267028809, 0.8240000009536743, 0.8413333296775818, 0.8153333067893982, 0.8396666646003723, 0.8286666870117188, 0.8230000138282776, 0.8386666774749756]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [2, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.8174285888671875, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 3, 2, 0, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.sqrt(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.163406857913905, 1.944551056701399, 1.4131006762304672, 1.0716116390743464, 0.8201366241235523, 0.8024098613416167, 0.6989427982871212, 0.7045617278588052, 0.6529715168729607, 0.6450912499660829, 0.6014507162792965, 0.5722077928041628, 0.589296479487164, 0.5519283618814894, 0.5641970180281086, 0.5343395121432, 0.5198790605561672, 0.4883385730410107, 0.5169652827962861, 0.48910150821922854, 0.4843708732817482, 0.47323311859228356], "accuracy": [0.27724209427833557, 0.3623035252094269, 0.5027077198028564, 0.6213181614875793, 0.6940959095954895, 0.7049266695976257, 0.737022876739502, 0.72672039270401, 0.7563069462776184, 0.7544577717781067, 0.7708360552787781, 0.7865539789199829, 0.7720248103141785, 0.7880068421363831, 0.793950617313385, 0.7959318161010742, 0.8075551390647888, 0.8171972036361694, 0.8037247657775879, 0.8142913579940796, 0.8158763647079468, 0.8259146809577942], "val_loss": [1.759380272456578, 1.264272826058524, 0.7895275184086391, 0.6645632130759103, 0.6176936967032296, 0.5398637056350708, 0.5514232771737235, 0.536064624786377, 0.5476870877402169, 0.4909376587186541, 0.4794994592666626, 0.5014741591044835, 0.46241988454546246, 0.5025073289871216, 0.41479296343667166, 0.4410008873258318, 0.3996600423540388, 0.4560811349323818, 0.41778124230248587, 0.4286333577973502, 0.41700154542922974, 0.4331024374280657], "val_accuracy": [0.3163333237171173, 0.484333336353302, 0.684333324432373, 0.7176666855812073, 0.7229999899864197, 0.753333330154419, 0.7369999885559082, 0.7463333606719971, 0.7413333058357239, 0.7870000004768372, 0.7839999794960022, 0.765999972820282, 0.7990000247955322, 0.7903333306312561, 0.8240000009536743, 0.8103333115577698, 0.8330000042915344, 0.7903333306312561, 0.8140000104904175, 0.7990000247955322, 0.8226666450500488, 0.8106666803359985]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [16, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 3, 1, 1, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 78, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [1, 3, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.5820000171661377, "mapping_values": [1, 4, 4, 2, 2, 1, 24, 24, 14, 10, 3, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, alpha))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3012607889625105, 2.299216842134914, 2.2966955735651635, 2.2946261214920245, 2.290079496004767, 2.2889203710358266, 2.286552770278552, 2.283299729147324, 2.2831265158609804, 2.2795718974913464, 2.2775728153656534, 2.2758689349936203, 2.2741111195586567, 2.270688855558291, 2.2686111657154355, 2.2656179297916674, 2.2613971150231604, 2.257875753289846, 2.2583494765521386, 2.2548852851126, 2.251611651399305, 2.2497782815228584, 2.246751313857619, 2.2449030915838364, 2.2396115926372975, 2.23605231756327, 2.2370935695644665, 2.230585303210217, 2.226703972691133, 2.226862787082447, 2.221933744870409, 2.2163566472019895, 2.2138213392702846, 2.212325261111871, 2.2077327460786687, 2.2049952820543726, 2.198963021873058, 2.1944436256392064, 2.1902461179479586, 2.1854045106718774, 2.1809434229435465, 2.1755570951879237, 2.1710521986203943, 2.1687251138113997, 2.1645303694579296, 2.156620306849653, 2.1534739232192406, 2.1458080720592876, 2.1414004785194845, 2.135591762539198, 2.1315728729080767, 2.1227483984942546, 2.1160409998474905, 2.108775511173414, 2.102226024857444, 2.0963702169722414, 2.0884929631348723, 2.082826898460454, 2.0748063861071993, 2.067504081491781, 2.0578993725628663, 2.052590211967294, 2.0461699544100194, 2.0348990389920023, 2.0281334266592057, 2.0173256299625124, 2.006877853381966, 1.9937163334733004, 1.989215033071042, 1.980234577765696, 1.9686169501828512, 1.9600525511065336, 1.9496067155857664, 1.939154876457812, 1.9274661108140916, 1.9201226966917366, 1.9088896538178053, 1.8979051769716613, 1.8880381363572825, 1.8784516494445136, 1.8639489600939, 1.8520843094492065, 1.8412691773739724, 1.8309200633990845, 1.8182511167629536, 1.8047625892245145, 1.7946502818502, 1.7833268619594542, 1.76669061308319, 1.7546444751205161, 1.747704356180568, 1.7317204784644735, 1.722278757621867, 1.7049323987998604, 1.6943212054298853, 1.6805781200656078, 1.6731904862878377, 1.6642643722796941, 1.6519761683682346, 1.6399326099931855], "accuracy": [0.09087307006120682, 0.10011887550354004, 0.10910051316022873, 0.10936468094587326, 0.11940298229455948, 0.1274600476026535, 0.13195087015628815, 0.1398758441209793, 0.14278165996074677, 0.14555540680885315, 0.16074495017528534, 0.16299036145210266, 0.16523577272891998, 0.17395325005054474, 0.18016114830970764, 0.19019944965839386, 0.20023775100708008, 0.20538897812366486, 0.20538897812366486, 0.21833311021327972, 0.22123894095420837, 0.2215031087398529, 0.23735305666923523, 0.23457930982112885, 0.24725927412509918, 0.25201427936553955, 0.2483159452676773, 0.25980716943740845, 0.2689208686351776, 0.2705058753490448, 0.2735437750816345, 0.28397834300994873, 0.28780874609947205, 0.2856954038143158, 0.2965262234210968, 0.29718664288520813, 0.3125082552433014, 0.31145158410072327, 0.3147536516189575, 0.32241448760032654, 0.32465988397598267, 0.3381323516368866, 0.33601900935173035, 0.3362831771373749, 0.339321106672287, 0.3463214933872223, 0.3501518964767456, 0.3479065001010895, 0.35147273540496826, 0.3603222966194153, 0.360190212726593, 0.3681151866912842, 0.372209757566452, 0.37181350588798523, 0.3851538896560669, 0.37762513756752014, 0.3870030343532562, 0.381719708442688, 0.38409721851348877, 0.38805970549583435, 0.39783385396003723, 0.39664509892463684, 0.39770177006721497, 0.40245673060417175, 0.40430590510368347, 0.41368380188941956, 0.4143442213535309, 0.4237220883369446, 0.41962751746177673, 0.41645753383636475, 0.4231937527656555, 0.4235900044441223, 0.4255712628364563, 0.42887333035469055, 0.4375908076763153, 0.4352133274078369, 0.44168537855148315, 0.43891164660453796, 0.44445911049842834, 0.4411570429801941, 0.4451195299625397, 0.4435345530509949, 0.4515916109085083, 0.45766741037368774, 0.45608243346214294, 0.46030908823013306, 0.45779949426651, 0.45779949426651, 0.4659886360168457, 0.4679698944091797, 0.4679698944091797, 0.4784044325351715, 0.4760269522666931, 0.4873860776424408, 0.4880464971065521, 0.4831594228744507, 0.4810461103916168, 0.48831066489219666, 0.4855369031429291, 0.4896314740180969], "val_loss": [1.9686712537493025, 1.9664481707981654, 1.9642596926007951, 1.9620742116655623, 1.9598824637276786, 1.9577076094491142, 1.9555179732186454, 1.9533254759652274, 1.9511519840785436, 1.948960508619036, 1.9467574528285436, 1.9445343017578125, 1.9422991616385323, 1.9400349344526018, 1.937723227909633, 1.9353926522391183, 1.9329932757786341, 1.9305538449968611, 1.9280971799577986, 1.9255717822483607, 1.9230313301086426, 1.9204448972429549, 1.9177962030683244, 1.9150987352643694, 1.9123124395098006, 1.9094531195504325, 1.9065879413059779, 1.9036001477922713, 1.9005436897277832, 1.8974627767290388, 1.894275324685233, 1.8909548350742884, 1.887554100581578, 1.884120328085763, 1.8805492264883858, 1.8769267627171107, 1.8731579099382674, 1.869269711630685, 1.8652722494942802, 1.8611341203962053, 1.8568518502371651, 1.8524011203220911, 1.8478789329528809, 1.8432372638157435, 1.8384944370814733, 1.833571093423026, 1.8285542215619768, 1.8233230454581124, 1.8179734774998255, 1.812441417149135, 1.8068232536315918, 1.8009932381766183, 1.7949638366699219, 1.7887780325753349, 1.7824714524405343, 1.7759520666939872, 1.7692469188145228, 1.7623990603855677, 1.755338396344866, 1.7481160845075334, 1.740654604775565, 1.7330871990748815, 1.725370270865304, 1.717371872493199, 1.7092337608337402, 1.700819969177246, 1.6922064849308558, 1.6832633018493652, 1.674266951424735, 1.6650407654898507, 1.6556271144321986, 1.6460370676858085, 1.6362815925053187, 1.6263073512486048, 1.6161585194723946, 1.605858223778861, 1.595367329461234, 1.5848006861550468, 1.5740525381905692, 1.563173464366368, 1.5520568234579903, 1.5409017971583776, 1.529604162488665, 1.5182913030896867, 1.506765501839774, 1.4950693675449915, 1.4833813735416956, 1.471599783216204, 1.4596882888248988, 1.4477493422372, 1.435856716973441, 1.4238222667149134, 1.411855629512242, 1.399766002382551, 1.3877436774117606, 1.375577790396554, 1.3635921818869454, 1.3517921992710658, 1.3399483476366316, 1.3281734670911516], "val_accuracy": [0.052000001072883606, 0.0689999982714653, 0.0846666693687439, 0.1080000028014183, 0.12800000607967377, 0.15566666424274445, 0.17466667294502258, 0.19499999284744263, 0.2163333296775818, 0.23800000548362732, 0.2593333423137665, 0.2770000100135803, 0.2906666696071625, 0.30533334612846375, 0.3190000057220459, 0.3333333432674408, 0.3449999988079071, 0.3553333282470703, 0.3643333315849304, 0.3733333349227905, 0.37833333015441895, 0.38366666436195374, 0.3893333375453949, 0.39266666769981384, 0.3970000147819519, 0.39933332800865173, 0.40400001406669617, 0.40666666626930237, 0.40933331847190857, 0.4129999876022339, 0.4183333218097687, 0.42233332991600037, 0.4256666600704193, 0.429666668176651, 0.4326666593551636, 0.43799999356269836, 0.4426666796207428, 0.44466665387153625, 0.44600000977516174, 0.4493333399295807, 0.45266667008399963, 0.4543333351612091, 0.4580000042915344, 0.4606666564941406, 0.46399998664855957, 0.46666666865348816, 0.4723333418369293, 0.47466665506362915, 0.47866666316986084, 0.4806666672229767, 0.4816666543483734, 0.48366665840148926, 0.4883333444595337, 0.492333322763443, 0.49566665291786194, 0.49900001287460327, 0.5006666779518127, 0.5040000081062317, 0.5053333044052124, 0.5083333253860474, 0.5120000243186951, 0.5136666893959045, 0.5173333287239075, 0.5213333368301392, 0.5239999890327454, 0.5263333320617676, 0.5293333530426025, 0.5326666831970215, 0.5350000262260437, 0.5356666445732117, 0.5376666784286499, 0.5389999747276306, 0.5410000085830688, 0.5416666865348816, 0.5443333387374878, 0.5473333597183228, 0.5483333468437195, 0.5503333210945129, 0.5516666769981384, 0.5533333420753479, 0.5540000200271606, 0.5559999942779541, 0.5563333630561829, 0.5590000152587891, 0.5596666932106018, 0.5613333582878113, 0.5636666417121887, 0.5643333196640015, 0.5666666626930237, 0.5696666836738586, 0.5720000267028809, 0.5746666789054871, 0.5776666402816772, 0.5796666741371155, 0.5843333601951599, 0.5853333473205566, 0.5863333344459534, 0.5866666436195374, 0.5879999995231628, 0.5913333296775818]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [5, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.49085715413093567, "mapping_values": [1, 4, 4, 2, 2, 1, 13, 13, 7, 6, 2, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.add(tf.math.subtract(beta, tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(beta, grad), grad)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.44221228498903, 2.1581195480457276, 2.0983710027625926, 2.4131917159917284, 2.301768805325354, 2.086822980446287, 1.454617773190686], "accuracy": [0.2693171203136444, 0.23973055183887482, 0.2727513015270233, 0.12812046706676483, 0.11557257920503616, 0.26099589467048645, 0.4687623679637909], "val_loss": [1.913961683000837, 1.4210998671395438, 2.181766850607736, 1.9751193864004952, 1.956324509211949, 1.8829685619899206, 1.7902661732264928], "val_accuracy": [0.19366666674613953, 0.4873333275318146, 0.3713333308696747, 0.10199999809265137, 0.20533333718776703, 0.30799999833106995, 0.19499999284744263]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [0, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [5, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 7, 6, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.add(tf.math.subtract(beta, tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(beta, grad), grad)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [93385311.08798693, 1832197846.8154802, 8437186491.832519, 23464915002.158764, 49686774362.687096, 91309812494.5735], "accuracy": [0.10249637067317963, 0.10328886657953262, 0.09457138925790787, 0.09959053993225098, 0.10210011899471283, 0.10117553919553757], "val_loss": [353571172.5714286, 2826568411.428571, 9537417508.571428, 22604607488.0, 44146286592.0, 76281317668.57143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [1, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5.070946320440665, 150.48163239238852, 1813.4837797238229, 11790.821321180327, 50141.645158128056, 162785.8906869139], "accuracy": [0.09906221181154251, 0.10342095047235489, 0.0948355570435524, 0.09959053993225098, 0.1022322028875351, 0.10117553919553757], "val_loss": [16.818477630615234, 352.5936017717634, 3173.9178292410716, 16541.1796875, 60849.00669642857, 177851.88839285713], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [30, 66, 89, 50, 85, 46], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 8, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [30, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 8, 2, 5, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 3, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [37, 30, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 8, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3598737769579734, 52.622132640803855, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04213446006178856, 0.033284902572631836, 0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.212783540998186, 9948.23521205357, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007666666526347399, 0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [3, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 24, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [6, 1, 6, 5], [7, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, beta)", "other_info": {"loss": [2.303804564139059, 3.171410849191698, 29.3687940584182, 111.89090953177433, 251.94877289749485, 449.62283148240925], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.992988450186593, 8.534752437046595, 58.61535208565848, 157.82134137834822, 306.2115216936384, 503.80076381138394], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [30, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 8, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 3, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 70, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 6, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 4, 13, 13, 7, 6, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.square(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))), grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 5, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 1, 6, 5], [7, 1], [64], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 13, 13, 8, 5, 3, 4, 4, 2, 2, 0, 3, 1, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 4, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 2, 1, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 5, 8, 3, 4, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 11, 9, 3, 9, 9, 5, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302131294243686, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 8, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 7, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.09914285689592361, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.454450758141833, 4.292982384985653, 8.832379452855658, 16.18376129612931, 26.145057941739584, 39.48502057515997], "accuracy": [0.09655263274908066, 0.10130762308835983, 0.0944393053650856, 0.09985470771789551, 0.10289261490106583, 0.10117553919553757], "val_loss": [2.3276398522513255, 4.2536933081490655, 7.953059332711356, 13.392585754394531, 20.752261025565012, 30.248473031180247], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 2, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [5, 1, 6, 5], [4, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.07199999690055847, "mapping_values": [1, 4, 4, 2, 2, 0, 13, 13, 7, 6, 2, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.add(tf.math.subtract(beta, tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, grad)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3019293450471543, 2.3013211308122705, 2.3006540644107445, 2.300436589412717, 2.2988267681775327, 2.299538997438023, 2.3000108119660774, 2.298918447064969, 2.300458404508013, 2.2993503363219707, 2.2998822790961366, 2.2995631155667287, 2.3008374900802755, 2.30009939308101, 2.3008842503846583], "accuracy": [0.08915598690509796, 0.09338264167308807, 0.09840179979801178, 0.09668471664190292, 0.10117553919553757, 0.1006472036242485, 0.09959053993225098, 0.10421344637870789, 0.10117553919553757, 0.10381719470024109, 0.09985470771789551, 0.1026284471154213, 0.09589222073554993, 0.09628847241401672, 0.09430722147226334], "val_loss": [1.9702554430280412, 1.969700745173863, 1.9694318090166365, 1.9692743846348353, 1.9694462503705705, 1.9694572176252092, 1.9695134844098772, 1.969514983040946, 1.9694921629769462, 1.9696062632969447, 1.9698115076337541, 1.9700724737984794, 1.9703126634870256, 1.9705835751124792, 1.9707245145525252], "val_accuracy": [0.04933333396911621, 0.05400000140070915, 0.061666667461395264, 0.06866666674613953, 0.06933332979679108, 0.0716666653752327, 0.0716666653752327, 0.07400000095367432, 0.07766667008399963, 0.07966666668653488, 0.07566666603088379, 0.07066666334867477, 0.06933332979679108, 0.06833333522081375, 0.06733333319425583]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 2, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 4, 8, 2, 9, 1, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [8, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.07199999690055847, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3019293630285316, 2.301321378174302, 2.3006566058627334, 2.300441407445651, 2.298829984450778, 2.2995399513012855, 2.3000107398516216, 2.2989178577733473, 2.3004583504694076, 2.299354537477142, 2.299888950250152, 2.2995743074468757, 2.3008470045592824, 2.3001055338316276, 2.300891753626128], "accuracy": [0.08915598690509796, 0.09351472556591034, 0.09840179979801178, 0.09668471664190292, 0.10130762308835983, 0.1006472036242485, 0.09985470771789551, 0.10421344637870789, 0.10117553919553757, 0.10368511080741882, 0.10011887550354004, 0.10276053100824356, 0.09589222073554993, 0.09615638852119446, 0.09417514503002167], "val_loss": [1.9702554430280412, 1.969700813293457, 1.9694367136274065, 1.9692772456577845, 1.9694487707955497, 1.9694561277117049, 1.9695135525294714, 1.9695136887686593, 1.9694948196411133, 1.9696104185921806, 1.9698214530944824, 1.970083372933524, 1.9703200885227747, 1.970590455191476, 1.970730917794364], "val_accuracy": [0.04933333396911621, 0.05400000140070915, 0.061666667461395264, 0.06866666674613953, 0.0689999982714653, 0.0716666653752327, 0.0716666653752327, 0.07400000095367432, 0.07733333110809326, 0.07900000363588333, 0.07533333450555801, 0.07066666334867477, 0.06933332979679108, 0.0676666647195816, 0.06733333319425583]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 5, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 0, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [87, 66, 89, 50, 85, 46], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 2, 3, 3, 9, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 1, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 30, 73, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [6, 8, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 2, 2, 1, 10, 10, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.multiply(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302294222024674, 2.3027233973533217, 2.3025927887207263, 2.302931488938005, 2.3007840893886122, 2.301949703682368], "accuracy": [0.0886276587843895, 0.09008057415485382, 0.09298639744520187, 0.09021265059709549, 0.09021265059709549, 0.09576013684272766], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 8, 3, 8, 2, 1, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 0, 2, 2, 0, 2, 3, 3, 0], [30, 66, 89, 50, 85, 46], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 3, 8, 2, 3, 3, 3, 4, 8, 3, 7, 2, 7, 9, 2, 5, 8, 2, 4, 6, 5, 8, 9, 9], [0, 2, 0, 3, 3, 3, 3, 2, 1, 4, 4, 3, 1, 4, 1, 3], [8, 31, 29, 73, 40, 57, 35, 9, 54, 64], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [6, 1, 6, 5], [7, 1], [64], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [7, 3, 9, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 0, 0, 2, 2], [42, 97, 13, 96, 41]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302294222024674, 2.3027233973533217, 2.3025927887207263, 2.302931488938005, 2.3007840893886122, 2.301949703682368], "accuracy": [0.0886276587843895, 0.09008057415485382, 0.09298639744520187, 0.09021265059709549, 0.09021265059709549, 0.09576013684272766], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]