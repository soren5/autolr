[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7425714135169983, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.294926645733409, 2.2560347227482764, 2.1687140489030807, 1.9866429050884165, 1.6641311858229713, 1.4146507490643294, 1.3668797482211026, 1.2073163962587783, 0.9957027067959884, 0.9112091697895169, 0.9005034606942663, 0.8531065314531862, 0.8190062509835152, 0.8219963353087385, 0.814970547575693, 0.80380454021375, 0.7496110623727748, 0.7362324135997245, 0.7177429261885897, 0.7209554696048429, 0.7081652382629076, 0.6935861026291299, 0.6896215919506091, 0.6801381315128159, 0.6707627207076214, 0.647164981024471, 0.6200345619448172, 0.6206931273982258, 0.6174877457662171, 0.6039048761755264, 0.5954865417255623, 0.5847015798272962, 0.5793663277964252, 0.5677195771133202, 0.5585673414894051, 0.553642714343224, 0.5578750693771298, 0.5458025132203698, 0.5321940369987689, 0.5248279925571094], "accuracy": [0.10777968913316727, 0.2106723040342331, 0.33707568049430847, 0.3979659080505371, 0.45925241708755493, 0.5081230998039246, 0.5476158857345581, 0.6041474342346191, 0.6326773166656494, 0.654999315738678, 0.6785101294517517, 0.6917183995246887, 0.6910579800605774, 0.6872276067733765, 0.6873596906661987, 0.6999075412750244, 0.7082287669181824, 0.7161537408828735, 0.7240787148475647, 0.7284374833106995, 0.7333245277404785, 0.7382115721702576, 0.7408532500267029, 0.7456082701683044, 0.7388719916343689, 0.7523444890975952, 0.7642319202423096, 0.7681944370269775, 0.7646281719207764, 0.7677981853485107, 0.7754589915275574, 0.7820631265640259, 0.7810064554214478, 0.7843085527420044, 0.7943468689918518, 0.7961959838867188, 0.7984414100646973, 0.7989697456359863, 0.8013472557067871, 0.7994980812072754], "val_loss": [1.9490750176565987, 1.8916894367762975, 1.7743286405290877, 1.5040112904139928, 1.1078698294503349, 0.8423912695475987, 0.7463031496320452, 0.7214670862470355, 0.6654484272003174, 0.6923944439206805, 0.6771360465458461, 0.6212772130966187, 0.6062327112470355, 0.5991827419825962, 0.5984683547701154, 0.5810561350413731, 0.5668423516409737, 0.5626135894230434, 0.5659091813223702, 0.5588144745145526, 0.5386501891272408, 0.5276067938123431, 0.5238328150340489, 0.5105754818235125, 0.4978426354272025, 0.48540432112557547, 0.47733732632228304, 0.4803283044270107, 0.47868597507476807, 0.4693481240953718, 0.4624084745134626, 0.45529483045850483, 0.45431506633758545, 0.45782746587480816, 0.45186189242771696, 0.44543845312935965, 0.44270905426570345, 0.43790394919259207, 0.43652431453977314, 0.4280370133263724], "val_accuracy": [0.24833333492279053, 0.3856666684150696, 0.44866666197776794, 0.5143333077430725, 0.6043333411216736, 0.6806666851043701, 0.6940000057220459, 0.7179999947547913, 0.70333331823349, 0.7263333201408386, 0.7289999723434448, 0.7326666712760925, 0.7326666712760925, 0.7303333282470703, 0.7363333106040955, 0.7429999709129333, 0.7463333606719971, 0.7546666860580444, 0.7583333253860474, 0.7590000033378601, 0.7643333077430725, 0.7716666460037231, 0.7733333110809326, 0.778333306312561, 0.7826666831970215, 0.7889999747276306, 0.7903333306312561, 0.7943333387374878, 0.7940000295639038, 0.800000011920929, 0.79666668176651, 0.8003333210945129, 0.8119999766349792, 0.8159999847412109, 0.8196666836738586, 0.8153333067893982, 0.8193333148956299, 0.8173333406448364, 0.8176666498184204, 0.8169999718666077]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 0, 6, 5, 2, 0, 6, 6, 8, 4, 4, 8], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7214285731315613, "mapping_values": [1, 20, 20, 13, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), tf.math.pow(tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(alpha))), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2949266142423803, 2.2560347542393053, 2.1687140489030807, 1.9866427386425836, 1.6641304391234417, 1.4146500134968787, 1.36688048597718, 1.2073210342417555, 0.9957105619103414, 0.911242164223658, 0.9005166925632596, 0.8530474189108452, 0.8190202821656745, 0.8220916580546093, 0.8149675444573491, 0.8038178071007673, 0.7497599616955772, 0.7363720747930436, 0.7176585105888564, 0.7208636551800185, 0.7087732187005208, 0.6941428783862283, 0.6900127270375701, 0.6801765473794943, 0.6706211753588122, 0.6476003785474095, 0.6199232829387051, 0.6208126758146658, 0.6173537363544384, 0.6039936189654008, 0.5958693480888425, 0.5850584298832825, 0.5797856766408256, 0.5678300686311476, 0.5589597812654351, 0.5541045310207252, 0.5576362566799299, 0.5461551475250931, 0.5321266662175425, 0.5258424045969986, 0.5249178729918906, 0.5289677354118308, 0.5239213321541499, 0.520714098326109, 0.5056844599581414, 0.5005849094210425, 0.500119112171218, 0.49685232474929575, 0.4844915855515036, 0.4657324304307976, 0.4758976940953768, 0.46299162198838745, 0.4666333350334122, 0.46570145524866025, 0.4661155479923609], "accuracy": [0.10777968913316727, 0.2106723040342331, 0.33707568049430847, 0.3979659080505371, 0.45925241708755493, 0.5081230998039246, 0.5476158857345581, 0.6041474342346191, 0.6326773166656494, 0.6547351479530334, 0.6787742972373962, 0.6919825673103333, 0.6910579800605774, 0.6866992712020874, 0.687887966632843, 0.6996433734893799, 0.7077004313468933, 0.7164179086685181, 0.7243428826332092, 0.7288337349891663, 0.7342491149902344, 0.7386078238487244, 0.7413815855979919, 0.7446836829185486, 0.7382115721702576, 0.7523444890975952, 0.7643640041351318, 0.7684586048126221, 0.7648923397064209, 0.7675340175628662, 0.7759873270988464, 0.7812706232070923, 0.7816668748855591, 0.7835160493850708, 0.7946110367774963, 0.7947431206703186, 0.7984414100646973, 0.7977809906005859, 0.8006868362426758, 0.7997622489929199, 0.8045172095298767, 0.791969358921051, 0.7981772422790527, 0.8016114234924316, 0.8113855719566345, 0.8113855719566345, 0.8141592741012573, 0.81112140417099, 0.8168009519577026, 0.8253863453865051, 0.8256505131721497, 0.8267071843147278, 0.8276317715644836, 0.8274996876716614, 0.8248580098152161], "val_loss": [1.9490750857761927, 1.8916894367762975, 1.7743285724094935, 1.5040110179356165, 1.1078681605202811, 0.8423895835876465, 0.7463025195258004, 0.7214736938476562, 0.6654626982552665, 0.6924464532307216, 0.6771390267780849, 0.621247410774231, 0.6062160730361938, 0.5991708551134381, 0.5985430819647652, 0.5809688568115234, 0.567023617880685, 0.5626575776508876, 0.5657257522855487, 0.5588837351117816, 0.5390226330075946, 0.5279087168829781, 0.5238313504627773, 0.5104997668947492, 0.49796249185289654, 0.4855060577392578, 0.47743095670427593, 0.48030807290758404, 0.47859534195491243, 0.46948703697749544, 0.4625531094414847, 0.45524183341435026, 0.45412038053785053, 0.45790519033159527, 0.4521384579794748, 0.4454303639275687, 0.44259023666381836, 0.43796380928584505, 0.43706885405949186, 0.42837231499808176, 0.42903866938182283, 0.43252022777284893, 0.4296672173908779, 0.4337579011917114, 0.4296100991112845, 0.42280920914241243, 0.4222674625260489, 0.41420293705804007, 0.4080203430993216, 0.40926209517887663, 0.40643008266176495, 0.40286560569490704, 0.40057761328560965, 0.39890922818865093, 0.3944419877869742], "val_accuracy": [0.24833333492279053, 0.3856666684150696, 0.44866666197776794, 0.5143333077430725, 0.6043333411216736, 0.6806666851043701, 0.6940000057220459, 0.7179999947547913, 0.703000009059906, 0.7263333201408386, 0.7293333411216736, 0.7323333621025085, 0.7326666712760925, 0.7306666374206543, 0.7356666922569275, 0.7436666488647461, 0.7459999918937683, 0.7549999952316284, 0.7583333253860474, 0.7583333253860474, 0.7633333206176758, 0.7723333239555359, 0.7733333110809326, 0.778333306312561, 0.7826666831970215, 0.7883333563804626, 0.7906666398048401, 0.7946666479110718, 0.793666660785675, 0.8003333210945129, 0.7973333597183228, 0.8016666769981384, 0.8119999766349792, 0.8153333067893982, 0.8180000185966492, 0.8166666626930237, 0.8190000057220459, 0.8190000057220459, 0.8180000185966492, 0.8173333406448364, 0.8233333230018616, 0.8176666498184204, 0.824999988079071, 0.8216666579246521, 0.8299999833106995, 0.8303333520889282, 0.82833331823349, 0.8323333263397217, 0.8366666436195374, 0.8393333554267883, 0.8353333473205566, 0.8389999866485596, 0.8370000123977661, 0.8323333263397217, 0.8373333215713501]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 86, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 1, 2], [20, 52, 13]], "fitness": -0.4620000123977661, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [2.8314665370944185, 2.268388883328441, 2.6168289496016586, 2.231600734866637, 2.185438176061751, 2.2748685516087357, 2.3054602656303347], "accuracy": [0.2102760523557663, 0.14317791163921356, 0.17183992266654968, 0.1550653874874115, 0.2141064554452896, 0.15176330506801605, 0.09576013684272766], "val_loss": [1.9781923294067383, 1.3984357288905553, 1.9713657242911202, 1.6761159896850586, 1.9762787137712752, 1.9772528920854842, 1.9738832882472448], "val_accuracy": [0.09666666388511658, 0.4740000069141388, 0.10199999809265137, 0.3503333330154419, 0.10599999874830246, 0.10366666316986084, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [5, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [0, 0, 2], [20, 52, 13]], "fitness": -0.1397142857313156, "mapping_values": [1, 14, 14, 10, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.303801859437577, 2.3033994424769815, 2.304237548150186, 2.309316478621423, 2.3106864670468927, 2.30787023633872, 2.3062509675114744, 2.307442015093772], "accuracy": [0.09536388516426086, 0.09417514503002167, 0.09879804402589798, 0.10302469879388809, 0.09879804402589798, 0.09919429570436478, 0.09959053993225098, 0.09879804402589798], "val_loss": [1.9740091051374162, 1.974119050162179, 1.971510410308838, 1.9758191789899553, 1.9778336116245814, 1.9784504345485143, 1.9753904342651367, 1.9758477210998535], "val_accuracy": [0.0949999988079071, 0.09799999743700027, 0.11733333021402359, 0.10366666316986084, 0.09799999743700027, 0.10199999809265137, 0.09799999743700027, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 5, 9, 1, 2], [1, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 1, 2, 3, 1, 0, 0, 0], [31, 86, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 0, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [16.935878885420575, 162.86109192515283, 592.1423228027924, 1481.1153086071647, 3065.672151613166, 5462.109044018706], "accuracy": [0.10421344637870789, 0.09945846349000931, 0.09774138033390045, 0.09708096832036972, 0.10091137140989304, 0.10117553919553757], "val_loss": [42.454268319266184, 216.1512930733817, 626.6127406529018, 1393.974574497768, 2631.2282366071427, 4454.309849330357], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 9, 0, 5, 6, 8, 4, 4], [0, 0, 1, 2, 3, 1, 0, 0, 0], [63, 86, 3, 66], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [3, 7, 6, 5, 5, 7, 3, 9, 2, 2, 9, 9], [4, 0, 0, 4, 1], [98, 10, 40, 68, 95], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 5, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 12, 5, 5, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07013604789972305, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 0, 0, 1, 0, 0], [1, 3, 5, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07013604789972305, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 0, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 1, 2], [1, 0, 2], [89, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 0, 6, 5, 2, 0, 1, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), tf.math.subtract(grad, tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07013604789972305, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [9, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027575248425523, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [74, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [291112772.7079501, 5792061062.103289, 26820944430.865143, 73863947500.55739, 160162564428.45172, 292990700893.35834], "accuracy": [0.10302469879388809, 0.09840179979801178, 0.09813763201236725, 0.09760929644107819, 0.10091137140989304, 0.1010434553027153], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 6, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [2, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06987188011407852, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 0, 6, 5, 2, 0, 8, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [3, 2, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [13, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 8, 3, 1, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [16.935878885420575, 162.86109192515283, 592.1423228027924, 1481.1153086071647, 3065.672151613166, 5462.109044018706], "accuracy": [0.10421344637870789, 0.09945846349000931, 0.09774138033390045, 0.09708096832036972, 0.10091137140989304, 0.10117553919553757], "val_loss": [42.454268319266184, 216.1512930733817, 626.6127406529018, 1393.974574497768, 2631.2282366071427, 4454.309849330357], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 7, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301237876656789, 2.302543390916717, 2.3013425781238412, 2.3019473661033, 2.3032470658281774, 2.3022305399214886], "accuracy": [0.09008057415485382, 0.08598599582910538, 0.09972262382507324, 0.09259014576673508, 0.0874389111995697, 0.09140139818191528], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 7, 9, 1, 2], [3, 0, 0], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301237876656789, 2.302543390916717, 2.3013425781238412, 2.3019473661033, 2.3032470658281774, 2.3022305399214886], "accuracy": [0.09008057415485382, 0.08598599582910538, 0.09972262382507324, 0.09259014576673508, 0.0874389111995697, 0.09140139818191528], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301237876656789, 2.302543390916717, 2.3013425781238412, 2.3019473661033, 2.3032470658281774, 2.3022305399214886], "accuracy": [0.09008057415485382, 0.08598599582910538, 0.09972262382507324, 0.09259014576673508, 0.0874389111995697, 0.09140139818191528], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 0, 6, 5, 2, 0, 8, 6, 8, 4, 4], [3, 0, 1, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [13, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 11, 11, 8, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), tf.math.sqrt(alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301237876656789, 2.302543390916717, 2.3013425781238412, 2.3019473661033, 2.3032470658281774, 2.3022305399214886], "accuracy": [0.09008057415485382, 0.08598599582910538, 0.09972262382507324, 0.09259014576673508, 0.0874389111995697, 0.09140139818191528], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 86, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301237876656789, 2.302543390916717, 2.3013425781238412, 2.3019473661033, 2.3032470658281774, 2.3022305399214886], "accuracy": [0.09008057415485382, 0.08598599582910538, 0.09972262382507324, 0.09259014576673508, 0.0874389111995697, 0.09140139818191528], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]