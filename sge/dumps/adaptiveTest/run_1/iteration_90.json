[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.744857132434845, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.295801234204362, 2.256049273178137, 2.1714981054160667, 1.9902907950829962, 1.6695428915688895, 1.4181384105629469, 1.3452316396791606, 1.2176653603993512, 0.9838229888749239, 0.8914747492055599, 0.8939010113883153, 0.8409314069844287, 0.7978424834395759, 0.8038038155658134, 0.8187454964711194, 0.7831445332169297, 0.750689176630744, 0.7266583197215418, 0.727486607452441, 0.7213889051973229, 0.7111675770621904, 0.697212895571107, 0.6845640687264818, 0.6833922324431272, 0.6607077392636195, 0.6442788907675743, 0.6279074933078264, 0.6211761659115312, 0.6025338748411149, 0.6002812616939416, 0.601710815038254, 0.5849594380231723, 0.5751797693390747, 0.5541154800420581, 0.5681461030072414, 0.5478625568920328, 0.5474521485711479, 0.5400332068809665, 0.5317765975341726, 0.5241934446343153, 0.5169716249556511, 0.5171124721444152, 0.5127556880136696, 0.5135498081593859, 0.5121109323447423, 0.5004730989565829, 0.49355035537678915, 0.49397608453980874, 0.4876089195423532, 0.4855383099770864, 0.48507412054110133, 0.47841304966156684, 0.46150325171589424, 0.4613980835124313, 0.4614456088244403, 0.4588994802209632, 0.4595115783979486, 0.44711775282795685, 0.4485524154578564, 0.44083621626784536, 0.429900719564132, 0.43783207870886987, 0.4282460109220126, 0.4199312302485559, 0.43082285802425124, 0.4127394004882744, 0.4125458934342998, 0.404357058233384, 0.406094217911341, 0.4066876957933302, 0.3969304204979089, 0.3918027848245414, 0.38422852540847535, 0.3918899740005733], "accuracy": [0.10672302544116974, 0.2114647924900055, 0.34301942586898804, 0.4007396697998047, 0.4558182656764984, 0.5070664286613464, 0.5506538152694702, 0.6042794585227966, 0.6384889483451843, 0.6606789231300354, 0.6818121671676636, 0.6884163022041321, 0.6948884129524231, 0.6919825673103333, 0.6930392384529114, 0.7106062769889832, 0.7127195596694946, 0.7224937081336975, 0.7176066637039185, 0.7283053994178772, 0.7371549606323242, 0.733060359954834, 0.7342491149902344, 0.7436270117759705, 0.7503632307052612, 0.7531369924545288, 0.7626469135284424, 0.7580240368843079, 0.7685906887054443, 0.7685906887054443, 0.7693831920623779, 0.7824593782424927, 0.7779685854911804, 0.7860256433486938, 0.7880068421363831, 0.785629391670227, 0.7943468689918518, 0.7967243194580078, 0.7987055778503418, 0.7987055778503418, 0.7973847389221191, 0.8017435073852539, 0.8010830879211426, 0.8053097128868103, 0.8064984679222107, 0.8105930685997009, 0.8119139075279236, 0.8141592741012573, 0.8178576231002808, 0.8208954930305481, 0.8137630224227905, 0.8148196935653687, 0.8226125836372375, 0.8363492488861084, 0.8304054737091064, 0.8314621448516846, 0.826310932636261, 0.8310658931732178, 0.830669641494751, 0.8345000743865967, 0.83119797706604, 0.8334434032440186, 0.8376700282096863, 0.8405758738517761, 0.8391229510307312, 0.8470479249954224, 0.8481045961380005, 0.8481045961380005, 0.8518029451370239, 0.8551049828529358, 0.8548408150672913, 0.8524633646011353, 0.8486329317092896, 0.8474441766738892], "val_loss": [1.9490790367126465, 1.8929291452680315, 1.7775440216064453, 1.5106145313807897, 1.1136134692600794, 0.8483846017292568, 0.7455638306481498, 0.7139919996261597, 0.6556024381092617, 0.6850130217415946, 0.6745751755578178, 0.6085430894579206, 0.5932119744164603, 0.5931542090007237, 0.5952039275850568, 0.5851676974977765, 0.5658864634377616, 0.5699066264288766, 0.5694900580814907, 0.560300316129412, 0.5429044961929321, 0.5304946899414062, 0.5213520697184971, 0.5082298176629203, 0.489325966153826, 0.48087029797690256, 0.4786829267229353, 0.470280579158238, 0.45901845182691303, 0.45716021742139545, 0.45205237184252056, 0.44786243779318674, 0.44433142457689556, 0.4433647394180298, 0.44736473900931223, 0.4453529970986502, 0.4401733364377703, 0.4354016099657331, 0.4299914240837097, 0.4252046687262399, 0.41916810614722116, 0.41617861815861296, 0.41651041167122976, 0.4192608424595424, 0.4220719848360334, 0.4175506830215454, 0.4145872678075518, 0.41144484281539917, 0.409601628780365, 0.4101341792515346, 0.4121407951627459, 0.4100331493786403, 0.40880330971309115, 0.413315406867436, 0.4059893488883972, 0.3995558364050729, 0.3955082467624119, 0.39540930305208477, 0.3958522081375122, 0.38723411730357576, 0.38282428468976704, 0.3836668133735657, 0.3824952244758606, 0.3844871095248631, 0.3790122866630554, 0.37489110231399536, 0.3770091789109366, 0.38392867360796246, 0.39087952034814016, 0.3854835033416748, 0.3748223866735186, 0.3686184968267168, 0.3680835281099592, 0.37272742816380094], "val_accuracy": [0.23933333158493042, 0.40066665410995483, 0.44433334469795227, 0.5166666507720947, 0.6029999852180481, 0.6779999732971191, 0.6956666707992554, 0.7166666388511658, 0.718999981880188, 0.7106666564941406, 0.7333333492279053, 0.7423333525657654, 0.7419999837875366, 0.7350000143051147, 0.7390000224113464, 0.7453333139419556, 0.7506666779518127, 0.7616666555404663, 0.7633333206176758, 0.7636666893959045, 0.7643333077430725, 0.7639999985694885, 0.7716666460037231, 0.7816666960716248, 0.7839999794960022, 0.7803333401679993, 0.7799999713897705, 0.7860000133514404, 0.8003333210945129, 0.800000011920929, 0.8040000200271606, 0.8013333082199097, 0.8100000023841858, 0.8109999895095825, 0.815666675567627, 0.815666675567627, 0.8173333406448364, 0.8159999847412109, 0.8159999847412109, 0.8193333148956299, 0.8236666917800903, 0.8256666660308838, 0.8273333311080933, 0.8253333568572998, 0.8233333230018616, 0.8270000219345093, 0.8296666741371155, 0.8336666822433472, 0.8360000252723694, 0.8303333520889282, 0.8320000171661377, 0.8306666612625122, 0.8376666903495789, 0.8403333425521851, 0.8393333554267883, 0.8349999785423279, 0.8379999995231628, 0.8426666855812073, 0.8403333425521851, 0.840666651725769, 0.8410000205039978, 0.8386666774749756, 0.8476666808128357, 0.8483333587646484, 0.8503333330154419, 0.8513333201408386, 0.8516666889190674, 0.8556666374206543, 0.8579999804496765, 0.8560000061988831, 0.8560000061988831, 0.8536666631698608, 0.8506666421890259, 0.8519999980926514]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7388571500778198, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.295801234204362, 2.256049273178137, 2.1714981054160667, 1.9902908355647138, 1.6695421313124719, 1.418137222469412, 1.345234096908393, 1.217705541157121, 0.9838316859255504, 0.8914765569874324, 0.8939134304266186, 0.8410082889853404, 0.797797726594446, 0.8040452210532518, 0.8194829431491489, 0.7836170736997985, 0.7507590796134695, 0.7264903391183816, 0.7278881438293981, 0.7210398815516168, 0.7105786992479797, 0.6973369764283411, 0.6851004165838486, 0.6843015166510523, 0.6610323233753069, 0.6451709636639232, 0.628014254469236, 0.6217870292898497, 0.6034124308274234, 0.600829022655933, 0.601540234708956, 0.5851091934847023, 0.5753704221918441, 0.5547322889659793, 0.5676400725316567, 0.547414101944655, 0.5483129668575882, 0.5412291479762582, 0.5325613644034588, 0.5235045828784319, 0.5165095737565857, 0.5166340034320732, 0.5138396882283421, 0.5128110177119205, 0.5105070734083881, 0.5009296247239882, 0.49341973047907706, 0.4947392078847965, 0.48823828786009293, 0.48512587048877986, 0.48445190564280155, 0.47847345065935143, 0.46025196107513067, 0.46198399587156846, 0.4604451777345831, 0.4598520281386964, 0.45780023361288436, 0.4459791657254208, 0.44668615414261453, 0.4401464964877093, 0.42884620328573675, 0.4346840105445992, 0.4258750130503232, 0.4185899501550057, 0.4320200491283768, 0.41557677454873476, 0.4115857086271705, 0.4020788093536537, 0.404743406109255, 0.40340591820475763, 0.3976650783343637, 0.39153425964098626, 0.3824568912219598, 0.3922075961228485], "accuracy": [0.10672302544116974, 0.2114647924900055, 0.34301942586898804, 0.4007396697998047, 0.4558182656764984, 0.5069343447685242, 0.550521731376648, 0.6044115424156189, 0.6387531161308289, 0.6609430909156799, 0.6814159154891968, 0.6892088055610657, 0.6948884129524231, 0.6925109028816223, 0.691850483417511, 0.7106062769889832, 0.7116629481315613, 0.722229540348053, 0.7181349992752075, 0.7294940948486328, 0.7364945411682129, 0.7329282760620117, 0.7358341217041016, 0.7429665923118591, 0.7486461400985718, 0.7531369924545288, 0.7618544697761536, 0.7569673657417297, 0.7687227725982666, 0.7689869403839111, 0.7687227725982666, 0.7824593782424927, 0.7790252566337585, 0.7868181467056274, 0.7895918488502502, 0.7861577272415161, 0.7928939461708069, 0.7968564033508301, 0.7989697456359863, 0.7979130744934082, 0.798309326171875, 0.8006868362426758, 0.7998943328857422, 0.8042530417442322, 0.807158887386322, 0.8101968169212341, 0.8128384351730347, 0.8133667707443237, 0.8170651197433472, 0.8220842480659485, 0.8141592741012573, 0.8153480291366577, 0.8227446675300598, 0.8354246616363525, 0.8318583965301514, 0.8305375576019287, 0.824329674243927, 0.830669641494751, 0.8322546482086182, 0.8338396549224854, 0.834632158279419, 0.8338396549224854, 0.8407079577445984, 0.8418967127799988, 0.8388587832450867, 0.8453308939933777, 0.848368763923645, 0.8498216867446899, 0.8500858545303345, 0.8533879518508911, 0.854708731174469, 0.852859616279602, 0.8514066934585571, 0.8470479249954224], "val_loss": [1.9490790367126465, 1.8929290771484375, 1.7775440897260393, 1.5106142589024134, 1.1136137757982527, 0.8483927931104388, 0.7455779824938092, 0.7140272344861712, 0.6556198937552316, 0.6849357230322701, 0.6745401791163853, 0.608466352735247, 0.5931570529937744, 0.5932854754584176, 0.5952568054199219, 0.5851073265075684, 0.5656191962105888, 0.5702728543962751, 0.5701601334980556, 0.5603381565638951, 0.5433109828404018, 0.5309403964451381, 0.5218524762562343, 0.5083217109952655, 0.4897501468658447, 0.4811202457972935, 0.47937049184526714, 0.4715628283364432, 0.4597267082759312, 0.45723468916756765, 0.4516817161015102, 0.4477829933166504, 0.4445455585207258, 0.4431994301932199, 0.4465995175497873, 0.4452209642955235, 0.4408349650246756, 0.4364744595118931, 0.43046497447150095, 0.4254976085254124, 0.4200558066368103, 0.4169257623808725, 0.41702542134693693, 0.41796490124293734, 0.4217908041817801, 0.4177899445806231, 0.41495014088494436, 0.4130462833813259, 0.41019244704927715, 0.4111720493861607, 0.4119205985750471, 0.4096821631704058, 0.40890531880514963, 0.4136538250105722, 0.407852794442858, 0.401437555040632, 0.3967231256621225, 0.3960516793387277, 0.3958187699317932, 0.38732130186898367, 0.38308560848236084, 0.3822136010442461, 0.38148207323891775, 0.3852783867291042, 0.38135108777454924, 0.37735659735543386, 0.37763180903026033, 0.3835474763597761, 0.38610899448394775, 0.3803232993398394, 0.3737369179725647, 0.36780656235558645, 0.37135628291538786, 0.37272435426712036], "val_accuracy": [0.23933333158493042, 0.40066665410995483, 0.44433334469795227, 0.5166666507720947, 0.6029999852180481, 0.6779999732971191, 0.6956666707992554, 0.7163333296775818, 0.718666672706604, 0.7113333344459534, 0.7329999804496765, 0.7426666617393494, 0.7429999709129333, 0.7356666922569275, 0.7400000095367432, 0.7443333268165588, 0.75, 0.7616666555404663, 0.7609999775886536, 0.7633333206176758, 0.7636666893959045, 0.7633333206176758, 0.7713333368301392, 0.781000018119812, 0.7833333611488342, 0.7803333401679993, 0.778333306312561, 0.7863333225250244, 0.800000011920929, 0.7983333468437195, 0.8046666383743286, 0.8036666512489319, 0.8100000023841858, 0.8136666417121887, 0.8149999976158142, 0.8163333535194397, 0.8169999718666077, 0.8159999847412109, 0.8149999976158142, 0.8199999928474426, 0.8236666917800903, 0.8273333311080933, 0.828000009059906, 0.8256666660308838, 0.8213333487510681, 0.8256666660308838, 0.8299999833106995, 0.8323333263397217, 0.8326666951179504, 0.8306666612625122, 0.8306666612625122, 0.831333339214325, 0.8363333344459534, 0.8386666774749756, 0.8376666903495789, 0.8343333601951599, 0.8370000123977661, 0.8420000076293945, 0.8386666774749756, 0.8410000205039978, 0.8393333554267883, 0.8420000076293945, 0.8486666679382324, 0.8486666679382324, 0.8516666889190674, 0.8506666421890259, 0.8529999852180481, 0.856333315372467, 0.8566666841506958, 0.856333315372467, 0.8546666502952576, 0.8560000061988831, 0.8516666889190674, 0.8513333201408386]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7388571500778198, "mapping_values": [1, 14, 14, 10, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.295801234204362, 2.256049273178137, 2.171498073925038, 1.99029074561059, 1.6695414993977424, 1.4181308774049997, 1.345227675824637, 1.217694643529147, 0.9838349446644479, 0.8914769158513239, 0.8938646923281718, 0.8410156416130923, 0.7978927989000374, 0.8040073846608672, 0.8191078708644525, 0.7834582421616194, 0.7509936379986416, 0.7262106532229251, 0.727541750251436, 0.7204381021069592, 0.7105858486483771, 0.6973687052537799, 0.6844757985146038, 0.6837762554859237, 0.6611229488169749, 0.6449500948226117, 0.6274579315295136, 0.6220652474986721, 0.6032798955973034, 0.6005685693394821, 0.6009811910073267, 0.5858705073315564, 0.5765297063243167, 0.5550217759560412, 0.5671547179476555, 0.5475938370781741, 0.5486788628611818, 0.5415602562379025, 0.5326434981474991, 0.5236626447128849, 0.5167813831552805, 0.5162701086439965, 0.5142382562018782, 0.513081831513867, 0.5110033481521944, 0.5010023080299654, 0.49273329874024085, 0.49505499379667295, 0.48771822998914516, 0.48574577289455206, 0.48454850092933727, 0.4780781379803816, 0.46145780503616013, 0.46337031438728254, 0.46079093466628857, 0.4604824613255753, 0.4595612923482689, 0.4456093170702371, 0.44846625137385787, 0.4424025362603275, 0.4317399998933663, 0.4385178049148239, 0.42760567758943363, 0.4182222976959802, 0.4319613492995867, 0.41480880438801226, 0.4119087187306378, 0.4052481403747302, 0.4057256630296484, 0.4040011881270413, 0.39835503899725183, 0.3900113904583235, 0.3843979203603397, 0.39094078656137893], "accuracy": [0.10672302544116974, 0.2114647924900055, 0.34301942586898804, 0.4007396697998047, 0.4558182656764984, 0.5069343447685242, 0.5503896474838257, 0.6042794585227966, 0.6387531161308289, 0.6609430909156799, 0.6818121671676636, 0.689869225025177, 0.6940959095954895, 0.6919825673103333, 0.6922467350959778, 0.7099458575248718, 0.7123233675956726, 0.7230220437049866, 0.7189275026321411, 0.7290979027748108, 0.7359662055969238, 0.7325320243835449, 0.7362303733825684, 0.7429665923118591, 0.7491744756698608, 0.7532690763473511, 0.7621186375617981, 0.7568352818489075, 0.770439863204956, 0.7695152759552002, 0.7691190242767334, 0.7817989587783813, 0.7791573405265808, 0.7865539789199829, 0.7887993454933167, 0.7843085527420044, 0.7924976944923401, 0.7977809906005859, 0.7981772422790527, 0.7991018295288086, 0.7980451583862305, 0.800290584564209, 0.8006868362426758, 0.8038568496704102, 0.8068947196006775, 0.8108572363853455, 0.8124422430992126, 0.8108572363853455, 0.816008448600769, 0.8222163319587708, 0.8146876096725464, 0.816008448600769, 0.8231409192085266, 0.832650899887085, 0.8313300609588623, 0.830669641494751, 0.824329674243927, 0.8318583965301514, 0.8327829837799072, 0.8339717388153076, 0.8333113193511963, 0.833179235458374, 0.8381983637809753, 0.8421608805656433, 0.8399154543876648, 0.8470479249954224, 0.8490291833877563, 0.8465195894241333, 0.8466516733169556, 0.8536521196365356, 0.857218325138092, 0.8529917001724243, 0.8518029451370239, 0.8455950617790222], "val_loss": [1.9490790367126465, 1.8929290771484375, 1.7775440897260393, 1.5106138842446464, 1.1136104719979423, 0.8483920267650059, 0.7455750192914691, 0.7140167781284877, 0.6556364808763776, 0.6849019357136318, 0.6744862283979144, 0.608590841293335, 0.593281660761152, 0.5930801459721157, 0.5951155424118042, 0.5849899564470563, 0.5655611753463745, 0.5700978210994175, 0.5698323931012835, 0.5605097327913556, 0.5439770902906146, 0.531156165259225, 0.5217714820589338, 0.5087465558733258, 0.4903015579496111, 0.4813241277422224, 0.479914733341762, 0.47205778530665804, 0.4597588266645159, 0.45670350960322786, 0.45176022393362864, 0.4485797882080078, 0.4444315092904227, 0.442813651902335, 0.4468765599387033, 0.4458319629941668, 0.4415006807872227, 0.4367026090621948, 0.43009025709969656, 0.42548429114477976, 0.4200132829802377, 0.41722212518964497, 0.4173670070511954, 0.41802968297685894, 0.42199828795024324, 0.4177339162145342, 0.4157239965030125, 0.4132653134209769, 0.40987162930624826, 0.4118738855634417, 0.4124442849840437, 0.4109800713402884, 0.41061783688408987, 0.4142346296991621, 0.4069305232592991, 0.4009223239762442, 0.3960791655949184, 0.3963585836546762, 0.3964803048542568, 0.3876704147883824, 0.38382987465177265, 0.3825695088931492, 0.381368168762752, 0.385477466242654, 0.38074833154678345, 0.3767808164869036, 0.37686251742499216, 0.38134281975882395, 0.38437301771981375, 0.3822962897164481, 0.37438682998929707, 0.3676042982510158, 0.36689830677849905, 0.3682102986744472], "val_accuracy": [0.23933333158493042, 0.40066665410995483, 0.44433334469795227, 0.5166666507720947, 0.6029999852180481, 0.6779999732971191, 0.6956666707992554, 0.7163333296775818, 0.718666672706604, 0.7110000252723694, 0.7329999804496765, 0.7423333525657654, 0.7423333525657654, 0.7356666922569275, 0.7400000095367432, 0.7443333268165588, 0.7493333220481873, 0.7613333463668823, 0.7603333592414856, 0.7643333077430725, 0.7643333077430725, 0.7643333077430725, 0.7716666460037231, 0.781333327293396, 0.7833333611488342, 0.781000018119812, 0.778333306312561, 0.7870000004768372, 0.800000011920929, 0.7983333468437195, 0.8023333549499512, 0.8013333082199097, 0.8113333582878113, 0.8149999976158142, 0.8163333535194397, 0.8163333535194397, 0.8176666498184204, 0.8133333325386047, 0.8166666626930237, 0.8203333616256714, 0.8230000138282776, 0.8273333311080933, 0.8289999961853027, 0.8253333568572998, 0.8233333230018616, 0.8253333568572998, 0.828000009059906, 0.8320000171661377, 0.8309999704360962, 0.8293333053588867, 0.8289999961853027, 0.8309999704360962, 0.8373333215713501, 0.8370000123977661, 0.8346666693687439, 0.8320000171661377, 0.8383333086967468, 0.8416666388511658, 0.8426666855812073, 0.8399999737739563, 0.8413333296775818, 0.8420000076293945, 0.8460000157356262, 0.8479999899864197, 0.8506666421890259, 0.8533333539962769, 0.8533333539962769, 0.8553333282470703, 0.8603333234786987, 0.856333315372467, 0.8553333282470703, 0.8553333282470703, 0.8516666889190674, 0.8529999852180481]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 0, 9, 1, 2], [3, 0, 0], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022348052553765, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [8, 5, 0, 6, 5, 2, 0, 6, 6, 8, 4, 1, 8], [3, 0, 2, 0, 3, 1, 0, 0, 0], [15, 32, 3, 66], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [3, 7, 6, 4, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad)))), grad), tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [17.347034337702933, 159.52688648615373, 597.11858499628, 1480.0468876891211, 3071.7108884525965, 5441.159768514314], "accuracy": [0.10038304328918457, 0.09615638852119446, 0.10011887550354004, 0.09866596013307571, 0.09932637959718704, 0.10157178342342377], "val_loss": [42.454268319266184, 216.1512930733817, 626.6127406529018, 1393.974574497768, 2631.2282366071427, 4454.309849330357], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 0, 6, 5, 2, 0, 8, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 2, 3, 3, 9], [4, 3, 3, 3, 1, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 1, 1, 1], [1, 1, 9, 1, 2], [3, 0, 1], [13, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 8, 3, 1, 14, 14, 8, 6, 1, 1, 1, 0, 1, 1, 5, 2, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), grad), tf.math.add(tf.math.multiply(tf.math.multiply(grad, tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 86, 3, 66], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], [3, 7, 6, 5, 5, 4, 3, 9, 2, 2, 9, 2], [3, 0, 0, 4, 1], [98, 10, 40, 68, 95], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [301398051.04344636, 5652216496.0317, 27055054810.129177, 73744232049.27434, 160403058951.47272, 291872560926.6686], "accuracy": [0.09985470771789551, 0.09681680053472519, 0.09998679161071777, 0.09800554811954498, 0.09959053993225098, 0.10157178342342377], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [3, 3, 0, 6, 5, 2, 0, 5, 6, 8, 5, 4, 8], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 13, 7, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))))), tf.math.square(grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [7, 5, 9, 1, 2], [0, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022348052553765, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [8, 2, 8, 6, 2, 2, 0, 5, 6, 8, 4, 4, 6, 9], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66, 82], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [1, 0, 2], [20, 54, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 14, 8, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), alpha), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 2, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, beta)", "other_info": {"loss": [2.305571465869511, 3.4639274507481517, 14.053128144870486, 46.050895002650044, 100.87445762673578, 218.38303403560874, 489.1262483950761, 1090.6183913864118, 2396.6820580922476], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09840179979801178, 0.10157178342342377, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.019016674586705, 8.473545619419642, 19.080044882638113, 62.62573678152902, 133.03794642857142, 292.43967982700894, 655.8689488002232, 1453.3623744419642, 3175.2000558035716], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 1, 8, 5, 5, 2, 0, 5, 6, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 0, 1, 1], [1, 8, 9, 1, 2], [0, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(tf.math.multiply(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [605826057.2753841, 11363186803.776516, 54394171532.12205, 148265691140.5986, 322501658136.2779, 586832504081.3462], "accuracy": [0.09985470771789551, 0.09681680053472519, 0.09998679161071777, 0.09800554811954498, 0.09945846349000931, 0.10157178342342377], "val_loss": [2247712621.714286, 17974805650.285713, 60657591442.28571, 143771144777.14285, 280792147090.2857, 485196281563.4286], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 1, 5, 6, 8, 4, 4], [3, 0, 2, 2, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [5, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [0, 0, 2], [82, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.303021001368623, 2.3051236349719786, 2.3102322559409596, 2.322605697375877, NaN, NaN], "accuracy": [0.09747721254825592, 0.09985470771789551, 0.10117553919553757, 0.09998679161071777, 0.09245806187391281, 0.09998679161071777], "val_loss": [1.9744791303362166, 1.977590765271868, 1.9836655344281877, 2.0048184394836426, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10199999809265137, 0.10366666316986084, 0.10366666316986084, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 0, 6, 5, 2, 0, 8, 6, 8, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 0, 1, 1], [1, 3, 5, 1, 2], [3, 0, 2], [13, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.3022229161638514, 2.3024342849884114, 2.301491558433697, 2.302645763811135, 2.3033076742809873, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09232597798109055, 0.09219389408826828, 0.09219389408826828, 0.09972262382507324, 0.08770307898521423, 0.0886276587843895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9709384781973702, 1.970938001360212, 1.970937728881836, 1.9709372520446777, 1.9709366389683314, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 86, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 0, 1, 1, 1], [1, 9, 9, 1, 2], [3, 1, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3022231455445055, 2.302435018225526, 2.301492849471405, 2.3026475092328975, 2.3033099010116342, 2.302580992275808], "accuracy": [0.09232597798109055, 0.09219389408826828, 0.09219389408826828, 0.09972262382507324, 0.08770307898521423, 0.08928807079792023], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [5, 5, 0, 6, 5, 2, 0, 3, 6, 8, 4, 4, 8], [3, 0, 2, 0, 0, 1, 0, 0, 0], [51, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 1, 0, 1, 1, 1], [3, 8, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3022231455445055, 2.302435018225526, 2.301492849471405, 2.3026475092328975, 2.3033099010116342, 2.302580992275808], "accuracy": [0.09232597798109055, 0.09219389408826828, 0.09219389408826828, 0.09972262382507324, 0.08770307898521423, 0.08928807079792023], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [0, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 14, 14, 10, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3022231455445055, 2.302435018225526, 2.301492849471405, 2.3026475092328975, 2.3033099010116342, 2.302580992275808], "accuracy": [0.09232597798109055, 0.09219389408826828, 0.09219389408826828, 0.09972262382507324, 0.08770307898521423, 0.08928807079792023], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 0, 0, 1, 0, 0], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3022231455445055, 2.302435018225526, 2.301492849471405, 2.3026475092328975, 2.3033099010116342, 2.302580992275808], "accuracy": [0.09232597798109055, 0.09219389408826828, 0.09219389408826828, 0.09972262382507324, 0.08770307898521423, 0.08928807079792023], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31, 86, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 1, 2], [1, 1, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022231455445055, 2.302435018225526, 2.301492849471405, 2.3026475092328975, 2.3033099010116342, 2.302580992275808], "accuracy": [0.09232597798109055, 0.09219389408826828, 0.09219389408826828, 0.09972262382507324, 0.08770307898521423, 0.08928807079792023], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 0, 1, 1], [1, 3, 9, 1, 2], [3, 2, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 14, 14, 10, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(beta, beta))", "other_info": {"loss": [2.3022231455445055, 2.302435018225526, 2.301492849471405, 2.3026475092328975, 2.3033099010116342, 2.302580992275808], "accuracy": [0.09232597798109055, 0.09219389408826828, 0.09219389408826828, 0.09972262382507324, 0.08770307898521423, 0.08928807079792023], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]