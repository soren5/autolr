[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.7074285745620728, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.296462106792887, 2.256326536413638, 2.1724648160421776, 1.9916627464387646, 1.6583462372085658, 1.414953448454056, 1.3535912637587126, 1.2164201285341207, 0.9939031910587689, 0.9035825145447716, 0.9140818145658992, 0.8585744041021017, 0.8044873891001475, 0.8065775129237999, 0.8174748203112323, 0.7886137153651689, 0.752669115643444, 0.7208238456936057, 0.7265363956218887, 0.7226541731272864, 0.707362289804084, 0.6957596009039939, 0.6806630060153473, 0.669623830149659, 0.6679382432390434, 0.6381371550005126, 0.6220409047995671, 0.5984739019744479, 0.6025009735338188, 0.6027216558852578, 0.5891709313999156, 0.5755224526440227, 0.5714075791758632, 0.5615418848659478, 0.553136166698346, 0.5568131799978776, 0.553535010175084, 0.5323248108647928, 0.5442164042575123, 0.5275940583673655, 0.5193716215892097, 0.49949443330854204, 0.510547649488788, 0.4983303057101928, 0.4956168201715718, 0.48700426327412266, 0.475937528050319, 0.4739331419654353, 0.47182413527458855, 0.475755663993352, 0.47583160030685945, 0.46947192763135953, 0.46213893694113023, 0.4562223970834936, 0.4565408515294057, 0.44747773262771395, 0.4382853773307523, 0.44121657125922464, 0.4389567449029568, 0.4316243520423548, 0.4282303402342297, 0.4154124527032019, 0.4116526377349088, 0.4182341175544783, 0.41782379872716097, 0.4124459301664876, 0.4144389854957871, 0.3939728831153709, 0.4015660277092855, 0.3941886232686852, 0.38780489457266093, 0.38774015462677225, 0.3801793370500705, 0.3811307972716051, 0.37600992718597587, 0.37177188697429364, 0.3587998047465142, 0.3613244370383798, 0.36025476713521276], "accuracy": [0.10210011899471283, 0.21463479101657867, 0.3407739996910095, 0.4006075859069824, 0.45991283655166626, 0.5124818682670593, 0.5540879964828491, 0.6003170013427734, 0.646149754524231, 0.6600185036659241, 0.6686038970947266, 0.6827367544174194, 0.6980583667755127, 0.6960771083831787, 0.6970016956329346, 0.7014925479888916, 0.7116629481315613, 0.7218332886695862, 0.7197200059890747, 0.7283053994178772, 0.7285695672035217, 0.7413815855979919, 0.7467969655990601, 0.7465327978134155, 0.7396644949913025, 0.7539294958114624, 0.7631752490997314, 0.7664773464202881, 0.7703077793121338, 0.7689869403839111, 0.7769119143486023, 0.7770439982414246, 0.778761088848114, 0.7915731072425842, 0.791441023349762, 0.7907806038856506, 0.791969358921051, 0.7943468689918518, 0.793950617313385, 0.7976489067077637, 0.7975168228149414, 0.8079513907432556, 0.8096684813499451, 0.8084797263145447, 0.8129705190658569, 0.8203672170639038, 0.8214238286018372, 0.8207634687423706, 0.8216879963874817, 0.8226125836372375, 0.8152159452438354, 0.8208954930305481, 0.8187822103500366, 0.83119797706604, 0.8264430165290833, 0.8280280232429504, 0.828820526599884, 0.8309338092803955, 0.8317263126373291, 0.8392550349235535, 0.8441421389579773, 0.8469158411026001, 0.8437458872795105, 0.844010055065155, 0.8389908671379089, 0.8380662798881531, 0.8469158411026001, 0.8508783578872681, 0.847840428352356, 0.8486329317092896, 0.8437458872795105, 0.8462554216384888, 0.8560295701026917, 0.8558974862098694, 0.8560295701026917, 0.8565579056739807, 0.8597279191017151, 0.863558292388916, 0.8622375130653381], "val_loss": [1.948983941759382, 1.892075674874442, 1.7756523404802596, 1.509331362588065, 1.113600219999041, 0.8453170742307391, 0.7472432851791382, 0.7203854492732457, 0.6645030464444842, 0.6890804767608643, 0.685234648840768, 0.6191003322601318, 0.6017550911222186, 0.5965001923697335, 0.596753682409014, 0.5847292968205043, 0.5611472981316703, 0.5616440091814313, 0.5639136178152901, 0.5569520677839007, 0.5441090038844517, 0.5313447032655988, 0.5158067090170724, 0.5039534909384591, 0.4896078620638166, 0.4787569897515433, 0.4743019683020456, 0.4758333819253104, 0.47212255001068115, 0.4634601558957781, 0.45697546005249023, 0.45153255122048513, 0.44879819665636334, 0.4475411857877459, 0.4446531193596976, 0.4379111868994577, 0.43392122643334524, 0.4323156646319798, 0.42692948239190237, 0.41953000000544954, 0.41500783818108694, 0.41594650064195904, 0.417645411831992, 0.4140319398471287, 0.4108003888811384, 0.40569948298590525, 0.40522314820970806, 0.40948602982929777, 0.409845232963562, 0.40888054030282156, 0.4073153393609183, 0.40711493151528494, 0.40728549446378437, 0.4044763275555202, 0.4023421917642866, 0.397071897983551, 0.39155570098332, 0.3892774667058672, 0.3884449941771371, 0.38918730190822054, 0.38871857949665617, 0.3825926440102713, 0.38313645124435425, 0.3857314246041434, 0.3873958843094962, 0.39777183532714844, 0.3967144318989345, 0.3892829247883388, 0.38536485603877474, 0.37585205691201345, 0.3764649544443403, 0.3884584307670593, 0.3921240142413548, 0.3748109085219247, 0.3737987535340445, 0.381894724709647, 0.4008867144584656, 0.40070869241442, 0.384137111050742], "val_accuracy": [0.2396666705608368, 0.38866665959358215, 0.4449999928474426, 0.5173333287239075, 0.6116666793823242, 0.6756666898727417, 0.6976666450500488, 0.7160000205039978, 0.7196666598320007, 0.7163333296775818, 0.7300000190734863, 0.7433333396911621, 0.737666666507721, 0.7246666550636292, 0.7326666712760925, 0.7383333444595337, 0.746666669845581, 0.7576666474342346, 0.7706666588783264, 0.7710000276565552, 0.7703333497047424, 0.7736666798591614, 0.7816666960716248, 0.7823333144187927, 0.7889999747276306, 0.7879999876022339, 0.7850000262260437, 0.7896666526794434, 0.800000011920929, 0.8080000281333923, 0.8029999732971191, 0.8086666464805603, 0.8136666417121887, 0.815666675567627, 0.8193333148956299, 0.8223333358764648, 0.8209999799728394, 0.8190000057220459, 0.8243333101272583, 0.831333339214325, 0.8299999833106995, 0.8303333520889282, 0.831333339214325, 0.8339999914169312, 0.8316666483879089, 0.8330000042915344, 0.8356666564941406, 0.8336666822433472, 0.8343333601951599, 0.8396666646003723, 0.8393333554267883, 0.8393333554267883, 0.8416666388511658, 0.843999981880188, 0.8396666646003723, 0.8426666855812073, 0.8460000157356262, 0.8473333120346069, 0.8489999771118164, 0.8519999980926514, 0.8516666889190674, 0.8550000190734863, 0.8536666631698608, 0.8506666421890259, 0.8536666631698608, 0.856333315372467, 0.856333315372467, 0.856333315372467, 0.8553333282470703, 0.8576666712760925, 0.8636666536331177, 0.8600000143051147, 0.859666645526886, 0.8653333187103271, 0.856333315372467, 0.862666666507721, 0.8640000224113464, 0.8616666793823242, 0.8576666712760925]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [59, 52, 13]], "fitness": -0.1459999978542328, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [3.2974351892192932, 2.603689283632473, 5.577607557333031, 2.8737845510586832, 3.872920749083864, 3.363822963873566, 4.222431930773262], "accuracy": [0.22044643759727478, 0.10672302544116974, 0.1364416927099228, 0.10738343745470047, 0.10685510188341141, 0.09734513610601425, 0.09496764093637466], "val_loss": [2.02375670841762, 2.46811580657959, 3.490597588675363, 2.2478466033935547, 2.8365960802350725, 3.031534808022635, 3.936492374965123], "val_accuracy": [0.09966666996479034, 0.16066665947437286, 0.1316666603088379, 0.15433333814144135, 0.10233332961797714, 0.10366666316986084, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [1, 52, 13]], "fitness": -0.12200000137090683, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3029090997297623, 2.302774236753648, 2.3028484931034323, 2.302001306267777, 2.3019697360075413, 2.301450940139573, 2.300868247399603, 2.301803636198204, 2.3012768812876145, 2.301719446916622, 2.300482898797058, 2.3026832157767854, 2.3002010208032133, 2.3006093433709145, 2.30089874176884, 2.3000228147402164, 2.29919622606054, 2.299684993972899, 2.3005743191116568, 2.2989637555384506, 2.2994412327833054, 2.2994581940403673, 2.300229433678428, 2.297842913614902, 2.298643188831781, 2.298635990266015, 2.298642506169259, 2.298904672133184, 2.300454946446649, 2.2983497111489664, 2.298766418423525, 2.297491484251414, 2.2985950501965586, 2.2967656931904217, 2.298143343792584, 2.2971775741813962, 2.298339507394321, 2.2983363248164768, 2.2980349275807916, 2.2983723916177343, 2.2968345316346643, 2.2988962726570343, 2.297133421806564, 2.298697193363922, 2.296885108147882, 2.296997106338237, 2.29876109288117, 2.2971547530422027, 2.2956504867754246, 2.2975861488977647, 2.2961535695647486, 2.295104218354362, 2.295547246145708, 2.2949009057852288, 2.2977578478435152, 2.2946645798794645, 2.2938535789441374, 2.2962727898761597, 2.2956895146466296, 2.2941787943249885, 2.2944807708696398, 2.2974345083202685, 2.2955382489383402, 2.295153668622425, 2.295471419590245, 2.2949142450701214, 2.294722989660134, 2.2962712726069006, 2.2948823260782323, 2.2937625784364437, 2.2936272475351323, 2.294823262953188, 2.292951870241721, 2.294513625869378, 2.2923195817451343, 2.292931675674767, 2.294323403648555, 2.293919600326907, 2.2932333789087793, 2.293046678550145, 2.293360787989866, 2.2932040477866558, 2.2907122130942557, 2.293132535470648, 2.293113604040351, 2.2923521326360072, 2.292248173443995, 2.293284884659275, 2.2928778588921404, 2.2911782347215968, 2.2910552380689935, 2.291442334171709, 2.2912786240276013, 2.2916811048520036, 2.2914020311657652, 2.2912014368077656, 2.290214869985806, 2.290040559835438, 2.289406564745527, 2.2915859064642055], "accuracy": [0.08611807972192764, 0.09153348207473755, 0.09166556596755981, 0.09034473448991776, 0.09245806187391281, 0.09549596905708313, 0.09338264167308807, 0.0956280529499054, 0.09298639744520187, 0.08968432247638702, 0.09377889335155487, 0.09430722147226334, 0.09219389408826828, 0.09430722147226334, 0.09470347315073013, 0.09615638852119446, 0.09919429570436478, 0.09866596013307571, 0.09100515395402908, 0.09126931428909302, 0.10236428678035736, 0.09760929644107819, 0.09840179979801178, 0.09800554811954498, 0.09906221181154251, 0.09985470771789551, 0.10051512718200684, 0.09840179979801178, 0.09694888442754745, 0.09998679161071777, 0.09708096832036972, 0.10870426893234253, 0.10355303436517715, 0.10091137140989304, 0.09998679161071777, 0.1026284471154213, 0.10355303436517715, 0.1022322028875351, 0.10249637067317963, 0.09932637959718704, 0.10117553919553757, 0.09840179979801178, 0.10011887550354004, 0.09959053993225098, 0.10553427785634995, 0.1014397069811821, 0.09668471664190292, 0.1026284471154213, 0.10698718577623367, 0.1072513535618782, 0.10672302544116974, 0.10830801725387573, 0.10685510188341141, 0.10606260597705841, 0.10672302544116974, 0.11293092370033264, 0.11266675591468811, 0.10091137140989304, 0.1014397069811821, 0.1162329912185669, 0.10685510188341141, 0.1018359512090683, 0.10527011007070541, 0.10051512718200684, 0.11108175665140152, 0.10606260597705841, 0.1080438494682312, 0.10289261490106583, 0.10711926966905594, 0.11134592443704605, 0.11847840249538422, 0.10474177449941635, 0.1158367469906807, 0.10949676483869553, 0.11411966383457184, 0.10949676483869553, 0.1072513535618782, 0.11517632752656937, 0.11491216719150543, 0.11068551242351532, 0.11253467202186584, 0.10566636174917221, 0.12072381377220154, 0.11279883980751038, 0.11279883980751038, 0.11094967275857925, 0.11121384054422379, 0.11557257920503616, 0.109232597053051, 0.12191256135702133, 0.12059172987937927, 0.1208558976650238, 0.11728965491056442, 0.11649715900421143, 0.1158367469906807, 0.11557257920503616, 0.1216483935713768, 0.11874257028102875, 0.11887465417385101, 0.11795007437467575], "val_loss": [1.970829963684082, 1.9707226753234863, 1.9706151826041085, 1.9705078261239188, 1.9703987666538783, 1.970292023250035, 1.9701852798461914, 1.9700773102896554, 1.9699688638959612, 1.969860008784703, 1.969752379826137, 1.9696452958243233, 1.969538348061698, 1.9694304466247559, 1.969322885785784, 1.9692151887076241, 1.9691087859017509, 1.9690008844648088, 1.9688943454197474, 1.968787738255092, 1.9686806542532784, 1.9685735702514648, 1.9684664862496513, 1.9683596066066198, 1.968252318246024, 1.968146596636091, 1.968038899557931, 1.967930725642613, 1.9678240503583635, 1.967717170715332, 1.9676104954310827, 1.9675034114292689, 1.9673965317862374, 1.9672908101763045, 1.9671847479684013, 1.967078617640904, 1.9669723510742188, 1.9668660845075334, 1.9667601585388184, 1.9666528701782227, 1.9665468079703194, 1.9664409501211983, 1.9663348197937012, 1.966228757585798, 1.9661219460623605, 1.966015338897705, 1.9659083911350794, 1.9658021926879883, 1.965695585523333, 1.9655895914350237, 1.9654837335859026, 1.96537903376988, 1.9652727672031947, 1.9651665687561035, 1.9650615964617049, 1.9649557386125838, 1.9648483821323939, 1.9647414343697684, 1.9646355765206474, 1.9645306042262487, 1.964425700051444, 1.9643203190394811, 1.9642135075160436, 1.9641075815473283, 1.9640015193394251, 1.9638957296098982, 1.9637892586844308, 1.9636829239981515, 1.9635768617902483, 1.9634720257350378, 1.9633660997663225, 1.9632602419172014, 1.9631542478288924, 1.9630487986973353, 1.9629428727286202, 1.9628379004342216, 1.962733200618199, 1.9626272746494837, 1.9625210762023926, 1.9624158314296178, 1.9623106547764368, 1.9622043882097517, 1.9620985984802246, 1.9619922637939453, 1.9618870871407645, 1.9617812292916434, 1.9616749627249581, 1.9615697179521834, 1.9614644731794084, 1.961357866014753, 1.9612524850027901, 1.961146286555699, 1.9610418592180525, 1.9609360694885254, 1.9608308928353446, 1.9607258524213518, 1.9606191090175085, 1.9605133874075753, 1.9604077339172363, 1.9603030341012138], "val_accuracy": [0.038333334028720856, 0.03999999910593033, 0.04066666588187218, 0.04100000113248825, 0.041999999433755875, 0.04233333468437195, 0.04266666620969772, 0.04333333298563957, 0.044333335012197495, 0.04500000178813934, 0.045666664838790894, 0.045666664838790894, 0.045666664838790894, 0.04633333161473274, 0.046666666865348816, 0.04699999839067459, 0.04766666516661644, 0.04899999871850014, 0.05000000074505806, 0.05066666752099991, 0.052000001072883606, 0.05433333292603493, 0.054666668176651, 0.054999999701976776, 0.054999999701976776, 0.0560000017285347, 0.056333333253860474, 0.05666666850447655, 0.05766666680574417, 0.058666665107011795, 0.059333331882953644, 0.059333331882953644, 0.06133333221077919, 0.061666667461395264, 0.06199999898672104, 0.06366666406393051, 0.06400000303983688, 0.06466666609048843, 0.06533333659172058, 0.0663333311676979, 0.0676666647195816, 0.0689999982714653, 0.070333331823349, 0.07066666334867477, 0.07100000232458115, 0.07133333384990692, 0.0716666653752327, 0.07199999690055847, 0.07266666740179062, 0.07366666942834854, 0.07500000298023224, 0.07633333653211594, 0.07733333110809326, 0.07766667008399963, 0.07833333313465118, 0.07833333313465118, 0.07966666668653488, 0.0806666687130928, 0.08133333176374435, 0.08233333379030228, 0.08266666531562805, 0.08299999684095383, 0.08433333039283752, 0.0846666693687439, 0.08633333444595337, 0.08733333647251129, 0.08799999952316284, 0.08900000154972076, 0.08966666460037231, 0.09000000357627869, 0.09066666662693024, 0.09233333170413971, 0.09399999678134918, 0.09466666728258133, 0.0963333323597908, 0.09799999743700027, 0.0989999994635582, 0.10000000149011612, 0.10233332961797714, 0.10300000011920929, 0.10433333367109299, 0.10633333027362823, 0.10700000077486038, 0.10766666382551193, 0.10833333432674408, 0.109333336353302, 0.10966666787862778, 0.1106666699051857, 0.11299999803304672, 0.11433333158493042, 0.11533333361148834, 0.11533333361148834, 0.11599999666213989, 0.11699999868869781, 0.11733333021402359, 0.11933333426713943, 0.11966666579246521, 0.12066666781902313, 0.12166666984558105, 0.12300000339746475]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 1], [1, 52, 13]], "fitness": -0.12200000137090683, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.3029090997297623, 2.302774236753648, 2.3028484931034323, 2.302001306267777, 2.3019697360075413, 2.301450940139573, 2.300868278890632, 2.301803636198204, 2.301276818305557, 2.301719446916622, 2.300482898797058, 2.3026832157767854, 2.3002010208032133, 2.3006093433709145, 2.30089874176884, 2.3000228147402164, 2.29919622606054, 2.299684895028087, 2.3005742381482217, 2.2989637105377705, 2.2994412327833054, 2.2994581940403673, 2.300229501132212, 2.297842913614902, 2.29864322032281, 2.298635990266015, 2.298642506169259, 2.2989046091511267, 2.300454946446649, 2.2983497111489664, 2.298766418423525, 2.297491452760385, 2.2985950816875875, 2.2967656931904217, 2.2981433617739615, 2.2971775741813962, 2.298339507394321, 2.2983363248164768, 2.298034833107705, 2.298372423108763, 2.2968345316346643, 2.2988962726570343, 2.2971333588245066, 2.2986971753825443, 2.296885108147882, 2.296997106338237, 2.2987611063908213, 2.297154721551174, 2.2956504867754246, 2.2975861309163874, 2.2961536010557775, 2.295104218354362, 2.2955472776367363, 2.2949009057852288, 2.2977578478435152, 2.2946646113704934, 2.2938535789441374, 2.2962727718947824, 2.2956894831556007, 2.2941788258160174, 2.294480820342046, 2.2974345083202685, 2.2955382489383402, 2.295153700113454, 2.2954714510812737, 2.2949142450701214, 2.294722989660134, 2.2962712411158717, 2.294882276605826, 2.2937625784364437, 2.2936272295537545, 2.294823262953188, 2.292951870241721, 2.294513580868698, 2.2923195817451343, 2.292931707165796, 2.294323403648555, 2.293919600326907, 2.2932333789087793, 2.293046678550145, 2.293360819480895, 2.2932040477866558, 2.2907122130942557, 2.293132566961677, 2.293113554567945, 2.2923521326360072, 2.2922482364260524, 2.293284884659275, 2.2928778903831692, 2.2911782662126257, 2.2910552065779646, 2.2914423161903312, 2.2912785925365724, 2.2916811048520036, 2.2914019681837074, 2.2912014682987945, 2.290214838494777, 2.290040559835438, 2.2894065017634695, 2.2915859064642055], "accuracy": [0.08611807972192764, 0.09153348207473755, 0.09166556596755981, 0.09034473448991776, 0.09245806187391281, 0.09549596905708313, 0.09338264167308807, 0.0956280529499054, 0.09298639744520187, 0.08968432247638702, 0.09377889335155487, 0.09430722147226334, 0.09219389408826828, 0.09430722147226334, 0.09470347315073013, 0.09615638852119446, 0.09919429570436478, 0.09866596013307571, 0.09100515395402908, 0.09126931428909302, 0.10236428678035736, 0.09760929644107819, 0.09840179979801178, 0.09800554811954498, 0.09906221181154251, 0.09985470771789551, 0.10051512718200684, 0.09840179979801178, 0.09694888442754745, 0.09998679161071777, 0.09708096832036972, 0.10870426893234253, 0.10355303436517715, 0.10091137140989304, 0.09998679161071777, 0.1026284471154213, 0.10355303436517715, 0.1022322028875351, 0.10249637067317963, 0.09932637959718704, 0.10117553919553757, 0.09840179979801178, 0.10011887550354004, 0.09959053993225098, 0.10553427785634995, 0.1014397069811821, 0.09668471664190292, 0.1026284471154213, 0.10698718577623367, 0.1072513535618782, 0.10672302544116974, 0.10830801725387573, 0.10685510188341141, 0.10606260597705841, 0.10672302544116974, 0.11293092370033264, 0.11266675591468811, 0.10091137140989304, 0.1014397069811821, 0.1162329912185669, 0.10685510188341141, 0.1018359512090683, 0.10527011007070541, 0.10051512718200684, 0.11108175665140152, 0.10606260597705841, 0.1080438494682312, 0.10289261490106583, 0.10711926966905594, 0.11134592443704605, 0.11847840249538422, 0.10474177449941635, 0.1158367469906807, 0.10949676483869553, 0.11411966383457184, 0.10949676483869553, 0.1072513535618782, 0.11517632752656937, 0.11491216719150543, 0.11068551242351532, 0.11253467202186584, 0.10566636174917221, 0.12072381377220154, 0.11279883980751038, 0.11279883980751038, 0.11094967275857925, 0.11121384054422379, 0.11557257920503616, 0.109232597053051, 0.12191256135702133, 0.12059172987937927, 0.1208558976650238, 0.11728965491056442, 0.11649715900421143, 0.1158367469906807, 0.11557257920503616, 0.1216483935713768, 0.11874257028102875, 0.11887465417385101, 0.11795007437467575], "val_loss": [1.970829963684082, 1.9707226753234863, 1.9706151826041085, 1.9705078261239188, 1.9703987666538783, 1.970292023250035, 1.9701852798461914, 1.9700773102896554, 1.9699688638959612, 1.969860008784703, 1.969752379826137, 1.9696452958243233, 1.969538348061698, 1.9694304466247559, 1.969322885785784, 1.969215256827218, 1.969108717782157, 1.9690008844648088, 1.9688943454197474, 1.968787738255092, 1.9686806542532784, 1.9685735702514648, 1.9684664862496513, 1.9683596066066198, 1.968252318246024, 1.968146596636091, 1.968038899557931, 1.967930793762207, 1.9678240503583635, 1.967717170715332, 1.9676104954310827, 1.9675034114292689, 1.9673965317862374, 1.9672908101763045, 1.9671847479684013, 1.967078617640904, 1.9669723510742188, 1.9668660845075334, 1.9667601585388184, 1.9666528701782227, 1.9665468079703194, 1.9664409501211983, 1.9663347516741072, 1.966228757585798, 1.9661219460623605, 1.966015338897705, 1.9659083911350794, 1.9658021926879883, 1.965695585523333, 1.9655895914350237, 1.9654837335859026, 1.96537903376988, 1.9652727672031947, 1.9651665687561035, 1.9650615964617049, 1.9649557386125838, 1.9648483821323939, 1.9647414343697684, 1.9646355765206474, 1.9645305361066545, 1.9644255638122559, 1.964320250919887, 1.9642135756356376, 1.9641075815473283, 1.9640015193394251, 1.9638957296098982, 1.9637892586844308, 1.9636829239981515, 1.9635768617902483, 1.9634721619742257, 1.9633662360055106, 1.9632602419172014, 1.9631542478288924, 1.9630487986973353, 1.9629429408482142, 1.9628379685538155, 1.962733200618199, 1.962627342769078, 1.9625210762023926, 1.9624158314296178, 1.9623106547764368, 1.9622043882097517, 1.9620985984802246, 1.9619922637939453, 1.9618871552603585, 1.9617812292916434, 1.9616749627249581, 1.9615696498325892, 1.9614644731794084, 1.961357797895159, 1.9612524850027901, 1.961146286555699, 1.9610418592180525, 1.9609360694885254, 1.9608308928353446, 1.960725920540946, 1.9606191090175085, 1.9605133874075753, 1.9604075976780482, 1.9603030341012138], "val_accuracy": [0.038333334028720856, 0.03999999910593033, 0.04066666588187218, 0.04100000113248825, 0.041999999433755875, 0.04233333468437195, 0.04266666620969772, 0.04333333298563957, 0.044333335012197495, 0.04500000178813934, 0.045666664838790894, 0.045666664838790894, 0.045666664838790894, 0.04633333161473274, 0.046666666865348816, 0.04699999839067459, 0.04766666516661644, 0.04899999871850014, 0.05000000074505806, 0.05066666752099991, 0.052000001072883606, 0.05433333292603493, 0.054666668176651, 0.054999999701976776, 0.054999999701976776, 0.0560000017285347, 0.056333333253860474, 0.05666666850447655, 0.05766666680574417, 0.058666665107011795, 0.059333331882953644, 0.059333331882953644, 0.06133333221077919, 0.061666667461395264, 0.06199999898672104, 0.06366666406393051, 0.06400000303983688, 0.06466666609048843, 0.06533333659172058, 0.0663333311676979, 0.0676666647195816, 0.0689999982714653, 0.070333331823349, 0.07066666334867477, 0.07100000232458115, 0.07133333384990692, 0.0716666653752327, 0.07199999690055847, 0.07266666740179062, 0.07366666942834854, 0.07500000298023224, 0.07633333653211594, 0.07733333110809326, 0.07766667008399963, 0.07833333313465118, 0.07833333313465118, 0.07966666668653488, 0.0806666687130928, 0.08133333176374435, 0.08233333379030228, 0.08266666531562805, 0.08299999684095383, 0.08433333039283752, 0.0846666693687439, 0.08633333444595337, 0.08733333647251129, 0.08799999952316284, 0.08900000154972076, 0.08966666460037231, 0.09000000357627869, 0.09066666662693024, 0.09233333170413971, 0.09399999678134918, 0.09466666728258133, 0.0963333323597908, 0.09799999743700027, 0.0989999994635582, 0.10000000149011612, 0.10233332961797714, 0.10300000011920929, 0.10433333367109299, 0.10633333027362823, 0.10700000077486038, 0.10766666382551193, 0.10833333432674408, 0.109333336353302, 0.10966666787862778, 0.1106666699051857, 0.11299999803304672, 0.11433333158493042, 0.11533333361148834, 0.11533333361148834, 0.11599999666213989, 0.11699999868869781, 0.11733333021402359, 0.11933333426713943, 0.11966666579246521, 0.12066666781902313, 0.12166666984558105, 0.12300000339746475]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [0, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 0, 4, 1, 4], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 1, 3, 0], [1, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(alpha, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 1, 1, 0, 1], [1, 3, 9, 1, 2], [3, 0, 2], [62, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1009007580.5371515, 18662222947.951923, 86688717587.44261, 243969004353.69913, 524123276133.9469, 949468078881.7794], "accuracy": [0.09998679161071777, 0.09774138033390045, 0.1010434553027153, 0.10011887550354004, 0.10196803510189056, 0.10091137140989304], "val_loss": [3657808603.428571, 29252943872.0, 98718480091.42857, 233987347017.14285, 456991993270.8571, 789669234980.5714], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [8, 1, 8, 4, 3, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 2, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 3, 6, 3, 5, 6, 1, 1, 9, 9, 5, 5, 5, 1, 1, 2, 1, 1, 2, 3, 5, 3, 1, 0, 1, 0, 7, 1, 8, 0, 9], [4, 3, 3, 4, 1, 2, 0, 2], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2, 2], [0, 0, 2, 3, 0], [20, 52, 13, 24]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 6, 5, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, sigma), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.307329152569149, 14240.56122841241, 2927926014104.883, 6.10311018985661e+20, 1.2988058540659142e+29, NaN], "accuracy": [0.1026284471154213, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10011887550354004], "val_loss": [2.044929708753313, 1495234.75, 308487329864557.7, 6.4496217540130465e+22, 1.3731969396725533e+31, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 8, 1, 2, 1, 2], [3, 2, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 3, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.sqrt(sigma), beta), beta)", "other_info": {"loss": [2.3026100838456753, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 2, 9, 1, 2], [2, 0, 2], [13, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [4.197213395113297, 21.14752943577815, 61.674675720400266, 134.4179758543761, 247.94938817475813, 406.7184498426291], "accuracy": [0.09826971590518951, 0.09787346422672272, 0.10077928751707077, 0.10051512718200684, 0.1026284471154213, 0.10117553919553757], "val_loss": [6.8484072004045755, 25.121347154889786, 60.357879638671875, 117.84456525530133, 203.6418195452009, 324.3031441824777], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 1, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), alpha)", "other_info": {"loss": [2.302609170700313, 2.3025840724448265, 2.3025839914813915, 2.302583937537259, 2.302584243315149, 2.3025843468261606, 2.3025839552352174, 2.302584198314469], "accuracy": [0.10487385839223862, 0.10632677376270294, 0.09998679161071777, 0.10751552134752274, 0.10302469879388809, 0.10170386731624603, 0.10553427785634995, 0.09998679161071777], "val_loss": [1.9736442565917969, 1.9736439159938268, 1.973644188472203, 1.9736440522330148, 1.973644188472203, 1.9736443247113908, 1.973644392830985, 1.973644188472203], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [6, 7, 9, 1, 2], [0, 3, 2], [8, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3024587694522554, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [7], [64], [1, 0, 0, 0, 0, 1], [1, 5, 9, 1, 2], [3, 2, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [58, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [0, 3, 3, 4, 1], [14], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 0, 1, 1, 1, 1], [1, 3, 8, 1, 2], [3, 0, 2, 0], [20, 19, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.subtract(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), beta), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 1], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.3026100838456753, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 1, 1, 1], [1, 8, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(sigma), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [8, 1, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 50, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [308482414.7685608, 5704071490.984018, 26494111365.29177, 74559991132.27632, 160175558457.4487, 290160057767.4769], "accuracy": [0.09998679161071777, 0.09774138033390045, 0.1010434553027153, 0.10011887550354004, 0.10196803510189056, 0.10091137140989304], "val_loss": [1118118326.857143, 8940659858.285715, 30169999652.57143, 71508478244.57143, 139658082011.42856, 241321827181.7143], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [6, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [0, 52, 13]], "fitness": -0.09857142716646194, "mapping_values": [1, 14, 14, 10, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30616641268203, 2.3185975111045733, 2.3469599399584284, 2.3977533370244615, 2.488629088378491, 2.5949913490528695, 2.7367490015608085, 2.9555561800422514, 3.1973692904122046, 3.4791892848671733, 3.800728909926187, 4.202377442843752], "accuracy": [0.08572183549404144, 0.08889182657003403, 0.09470347315073013, 0.09192973375320435, 0.1014397069811821, 0.09893012791872025, 0.09945846349000931, 0.09285431355237961, 0.10011887550354004, 0.09800554811954498, 0.09787346422672272, 0.09906221181154251], "val_loss": [1.974520138331822, 1.9794587407793318, 1.994818823678153, 2.0231001717703685, 2.0665765489850725, 2.128370557512556, 2.21163204738072, 2.3191418647766113, 2.4532602855137418, 2.615653855460031, 2.807426316397531, 3.028886999402727], "val_accuracy": [0.04100000113248825, 0.09333333373069763, 0.09733333438634872, 0.10066666454076767, 0.10166666656732559, 0.10233332961797714, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [6, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [48, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [1, 0, 0, 0, 1, 1, 1], [1, 4, 9, 1, 2], [3, 0, 2], [1, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302958359067718, 2.3029401948533557, 2.3031337385904425, 2.302403998396983, 2.3024946389937084, 2.302085627433788], "accuracy": [0.08572183549404144, 0.09113723784685135, 0.09087307006120682, 0.08902391046285629, 0.09166556596755981, 0.09377889335155487], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 9, 8, 6, 5, 2, 0, 5, 6, 8, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32, 3, 66], [0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 0, 1], [3, 3, 9, 1, 2], [3, 0, 2], [20, 52, 13]], "fitness": -0.04171428456902504, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302958359067718, 2.3029401948533557, 2.3031337385904425, 2.302403998396983, 2.3024946389937084, 2.302085627433788], "accuracy": [0.08572183549404144, 0.09113723784685135, 0.09087307006120682, 0.08902391046285629, 0.09166556596755981, 0.09377889335155487], "val_loss": [1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345, 1.9709388869149345], "val_accuracy": [0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}]