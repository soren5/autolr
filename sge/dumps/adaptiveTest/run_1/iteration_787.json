[{"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [0, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8088571429252625, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.34526614669827, 1.9874829313994682, 1.7559858252422418, 1.3322345080266713, 1.0240262748385465, 0.9103870365471967, 0.855747657610425, 0.7949343426919427, 0.7207546106749648, 0.7145469799379962, 0.6940023190608948, 0.6676921063268725, 0.6306204310796831, 0.6394999572676816, 0.6284558233914358, 0.5813862606046568, 0.5725058759948314, 0.5599813827701831, 0.5733444665826433, 0.5433781436248274, 0.5431055645538972, 0.5552436411302041, 0.5027504417055775, 0.5129693524397564, 0.4889363390642654, 0.5063495376303432, 0.5089783553378993, 0.47046461447496707, 0.4710432103186897, 0.4698919937193685, 0.45443470218493054, 0.46025185992200973, 0.45483728632746184, 0.4468013691454988, 0.4295281448329303, 0.43637100856821565], "accuracy": [0.2604675590991974, 0.3517369031906128, 0.43626996874809265, 0.5412759184837341, 0.6277902722358704, 0.6701889038085938, 0.6822084188461304, 0.7016246318817139, 0.7343811988830566, 0.7323999404907227, 0.737947404384613, 0.7461365461349487, 0.7621186375617981, 0.7664773464202881, 0.7638356685638428, 0.7843085527420044, 0.7840443849563599, 0.7874785661697388, 0.7840443849563599, 0.7988376617431641, 0.8029322624206543, 0.7911768555641174, 0.8101968169212341, 0.8082155585289001, 0.8166688680648804, 0.8083476424217224, 0.8086118102073669, 0.8212917447090149, 0.8256505131721497, 0.8265751004219055, 0.830669641494751, 0.8269713521003723, 0.8293488025665283, 0.834632158279419, 0.837537944316864, 0.835160493850708], "val_loss": [1.7903103147234236, 1.3027264050074987, 1.4678171702793665, 0.7746184383119855, 0.8350883892604283, 0.6651284524372646, 0.653803893498012, 0.5651135955538068, 0.5756662743432182, 0.5636036566325596, 0.5132302386420113, 0.5174020528793335, 0.5532990864345005, 0.4925945826939174, 0.4625161715916225, 0.5326052563531058, 0.4478506360735212, 0.465819103377206, 0.45887511117117746, 0.46885381426130024, 0.511756420135498, 0.4193458982876369, 0.4181546994618007, 0.4039534500667027, 0.44503610474722727, 0.43819924763270784, 0.39527892214911325, 0.41867853913988384, 0.4266878366470337, 0.3909509267125811, 0.36955476658684866, 0.39309621708733694, 0.3714011141232082, 0.36659287554877146, 0.3838441627366202, 0.39232124601091656], "val_accuracy": [0.40833333134651184, 0.4476666748523712, 0.5276666879653931, 0.6733333468437195, 0.6393333077430725, 0.6986666917800903, 0.6899999976158142, 0.7333333492279053, 0.7326666712760925, 0.7300000190734863, 0.7609999775886536, 0.7593333125114441, 0.7383333444595337, 0.7663333415985107, 0.7919999957084656, 0.7433333396911621, 0.7973333597183228, 0.7820000052452087, 0.7863333225250244, 0.7929999828338623, 0.7563333511352539, 0.8136666417121887, 0.8103333115577698, 0.8226666450500488, 0.8106666803359985, 0.8009999990463257, 0.8273333311080933, 0.8263333439826965, 0.8096666932106018, 0.8203333616256714, 0.8456666469573975, 0.8309999704360962, 0.843999981880188, 0.840666651725769, 0.8286666870117188, 0.8353333473205566]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 0, 4, 2, 2, 9, 6, 2, 6, 2, 2, 1, 9, 6, 2, 8, 2, 6, 6, 0, 0, 9, 6, 2, 5, 9, 2, 9, 9], [4, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7620000243186951, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0703375503891226, 1.1944023937896227, 0.8830282961876637, 0.7789906108730489, 0.6908647201993698, 0.6377611053445005, 0.5973057706972328, 0.5736631835377716, 0.5362546269242726, 0.5164241210785462, 0.5225125469347079, 0.5055268780902675, 0.4927332358998929, 0.480875195253637, 0.4683063054333557, 0.47175321440733875, 0.4445792932819618, 0.4350088536621258, 0.4125885160812345, 0.4432164154560055, 0.4368833394066973, 0.4449223914694052, 0.45493795725380065, 0.4703513233653149], "accuracy": [0.2991678714752197, 0.5893540978431702, 0.6742834448814392, 0.7043983340263367, 0.735569953918457, 0.757099449634552, 0.7713643908500671, 0.7876105904579163, 0.7936864495277405, 0.8080834746360779, 0.8026680946350098, 0.8084797263145447, 0.8127063512802124, 0.8181217908859253, 0.8191784620285034, 0.8280280232429504, 0.824329674243927, 0.8276317715644836, 0.8343679904937744, 0.8383304476737976, 0.8385946154594421, 0.8319904804229736, 0.8239334225654602, 0.8315942287445068], "val_loss": [0.9572051593235561, 0.7475465365818569, 0.5746294430324009, 0.5542564051491874, 0.49969116279057096, 0.46566098076956614, 0.45722389221191406, 0.4379302178110395, 0.4261472821235657, 0.42553492954799105, 0.41471568175724577, 0.42760269130979267, 0.4323258825710842, 0.43562380756650654, 0.41932776996067594, 0.42848879950387136, 0.41876258168901714, 0.42970651388168335, 0.45888168471200125, 0.4403015204838344, 0.46836791719709125, 0.43817971433912006, 0.5179472480501447, 0.47479445593697683], "val_accuracy": [0.6236666440963745, 0.6976666450500488, 0.7429999709129333, 0.7553333044052124, 0.7829999923706055, 0.8029999732971191, 0.7993333339691162, 0.8053333163261414, 0.8220000267028809, 0.8133333325386047, 0.8289999961853027, 0.8366666436195374, 0.8243333101272583, 0.8423333168029785, 0.8479999899864197, 0.8413333296775818, 0.8433333039283752, 0.843666672706604, 0.8486666679382324, 0.847000002861023, 0.8453333377838135, 0.8443333506584167, 0.8353333473205566, 0.8429999947547913]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [6, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [3, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.6980000138282776, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3011896965478815, 2.2990310852475027, 2.294819690044042, 2.2876038546292, 2.2770679458698275, 2.2650136953930042, 2.2501019491511345, 2.23540933043052, 2.2163834958233304, 2.1941346491741984, 2.169835255744671, 2.139824256983888, 2.101003978041736, 2.0588875456477327, 2.006071013623949, 1.9383355355013978, 1.8615677933005799, 1.7772192476038542, 1.6923735471150312, 1.6280972532797104, 1.5689492619757197, 1.5085217016185075, 1.438961406913589, 1.38776187185976, 1.348323256442607, 1.308899865394822, 1.2912800144982328, 1.2515813189884297, 1.2304229695232332, 1.1968038493868005, 1.1702230493421835, 1.1478566036027862, 1.1152751034025061, 1.1062808869584455], "accuracy": [0.09430722147226334, 0.09377889335155487, 0.11306300014257431, 0.12415797263383865, 0.15757495164871216, 0.19442610442638397, 0.24065512418746948, 0.2611279785633087, 0.3035266101360321, 0.3329811096191406, 0.34566107392311096, 0.3693039119243622, 0.3929467797279358, 0.39400342106819153, 0.3983621597290039, 0.40985339879989624, 0.41923126578330994, 0.4287412464618683, 0.4373266398906708, 0.44287413358688354, 0.46083739399909973, 0.4802536070346832, 0.5003302097320557, 0.516180157661438, 0.5263505578041077, 0.547087550163269, 0.5555408596992493, 0.5671641826629639, 0.5739004015922546, 0.5744287371635437, 0.5894861817359924, 0.601109504699707, 0.6026945114135742, 0.605468213558197], "val_loss": [1.9695965221949987, 1.965895107814244, 1.9599247659955705, 1.9518324307032995, 1.9417942592075892, 1.9299632481166296, 1.9164511816842216, 1.9012024062020438, 1.883725643157959, 1.8630337715148926, 1.8379242760794503, 1.807168619973319, 1.7694387435913086, 1.7229517527988978, 1.6657928398677282, 1.596442120415824, 1.5152018070220947, 1.426668609891619, 1.3393618719918388, 1.2590197495051794, 1.1834350994655065, 1.1090830734797887, 1.0373132569449288, 0.9716637475149972, 0.9176925931658063, 0.8777226039341518, 0.8444950580596924, 0.8106611967086792, 0.7776283706937518, 0.7514476946422032, 0.7334661143166679, 0.7224996260234288, 0.7164129529680524, 0.7133246319634574], "val_accuracy": [0.04600000008940697, 0.0729999989271164, 0.12833333015441895, 0.21299999952316284, 0.3006666600704193, 0.3580000102519989, 0.3776666522026062, 0.39366665482521057, 0.4076666533946991, 0.42133334279060364, 0.43033334612846375, 0.4403333365917206, 0.44999998807907104, 0.4659999907016754, 0.47733333706855774, 0.4893333315849304, 0.5043333172798157, 0.5139999985694885, 0.5246666669845581, 0.5370000004768372, 0.5550000071525574, 0.5766666531562805, 0.6019999980926514, 0.6349999904632568, 0.6546666622161865, 0.6756666898727417, 0.6859999895095825, 0.687666654586792, 0.6936666369438171, 0.6919999718666077, 0.6913333535194397, 0.6919999718666077, 0.6923333406448364, 0.6869999766349792]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [12, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [0, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [68, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.4522857069969177, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301125219359201, 2.3004119363773956, 2.300209060368395, 2.29932070990847, 2.297757234461256, 2.2964050420570397, 2.294050704565314, 2.2940160898783772, 2.292726279848114, 2.2911001544476752, 2.290719332176665, 2.289708031229985, 2.287512937163349, 2.28646253966353, 2.286694955958068, 2.2872129132514303, 2.2845065365724433, 2.2833712165854188, 2.2811813055957235, 2.2813647463494573, 2.281753527505633, 2.2794979652472303, 2.2772968293432987, 2.2773877379601704, 2.2767496523115818, 2.2726496416327975, 2.27376205265215, 2.2717761205187754, 2.2728541407838962, 2.2693789217529075, 2.270611332171723, 2.2689762738056154, 2.266052233150937, 2.2662201127387496, 2.263180820177638, 2.2643905804220554, 2.26244774577703, 2.261524627804205, 2.2617038581758964, 2.2598820746677144, 2.258371691142626, 2.2563192294242596, 2.2578668599084004, 2.254797641454104, 2.254053805151856, 2.2507142698791567, 2.251301552971923, 2.2498963279431883, 2.2493810611488545, 2.247658081310395, 2.2462635889911162, 2.2443694083949817, 2.2439705961809624, 2.242859867097459, 2.240555510623596, 2.238837930709301, 2.2376020925549813, 2.2397296446000485, 2.234034648613608, 2.2350388039939233, 2.232217155569155, 2.2320609594049583, 2.23104668268202, 2.226713617480017, 2.2251913211821504, 2.2251920721487144, 2.2242188960050058, 2.224432732403601, 2.2215918702629533, 2.2195201459546303, 2.2162393950168973, 2.2143762941137517, 2.2134728752595243, 2.214097730298761, 2.21176639366553, 2.2103013830445684, 2.208161892781971, 2.2087439964507567, 2.203459431608324, 2.2035668784317766, 2.1986652933107376, 2.198870724879708, 2.198858785339555, 2.1942783059886164, 2.191937050500078, 2.191753153787738, 2.1896552516799703, 2.1879724987651286, 2.1848789048059474, 2.1853555712827744, 2.180543975335039, 2.179263442498881, 2.178213964474121, 2.1749467215502123, 2.173482221650756, 2.1721871551694556, 2.1681941411813583, 2.1676177278155144, 2.1647634187221465, 2.16144995619482], "accuracy": [0.09430722147226334, 0.09047681838274002, 0.09959053993225098, 0.09417514503002167, 0.10421344637870789, 0.10315678268671036, 0.11002509295940399, 0.11306300014257431, 0.11649715900421143, 0.11227050423622131, 0.12217672914266586, 0.12719587981700897, 0.13419628143310547, 0.13274335861206055, 0.13115836679935455, 0.12970545887947083, 0.136045441031456, 0.13617752492427826, 0.13934750854969025, 0.14753665030002594, 0.1422533392906189, 0.14872540533542633, 0.15493330359458923, 0.1508387327194214, 0.16140536963939667, 0.17183992266654968, 0.16682076454162598, 0.1702549159526825, 0.16563200950622559, 0.17091533541679382, 0.1748778223991394, 0.18174614012241364, 0.1810857206583023, 0.18531237542629242, 0.19521859288215637, 0.1966715157032013, 0.19455818831920624, 0.1978602558374405, 0.19918107986450195, 0.19799233973026276, 0.20512482523918152, 0.21582353115081787, 0.2082948088645935, 0.21701228618621826, 0.2188614457845688, 0.2246730923652649, 0.22982433438301086, 0.22559767961502075, 0.22572976350784302, 0.2312772423028946, 0.23352265357971191, 0.23735305666923523, 0.23735305666923523, 0.23973055183887482, 0.2429005354642868, 0.24712719023227692, 0.25016510486602783, 0.24778760969638824, 0.251750111579895, 0.25478801131248474, 0.26443007588386536, 0.26244881749153137, 0.26403382420539856, 0.2736758589744568, 0.2769779562950134, 0.2736758589744568, 0.2678642272949219, 0.27024170756340027, 0.27618545293807983, 0.2793554365634918, 0.28741249442100525, 0.2900541424751282, 0.2946770489215851, 0.2868841588497162, 0.28582748770713806, 0.2907145619392395, 0.2934883236885071, 0.2953374683856964, 0.30180954933166504, 0.30180954933166504, 0.3066965937614441, 0.30418702960014343, 0.30841368436813354, 0.3090741038322449, 0.31779158115386963, 0.3089420199394226, 0.31581032276153564, 0.3140932619571686, 0.3217540681362152, 0.31845200061798096, 0.32281073927879333, 0.32624489068984985, 0.3280940353870392, 0.3319244384765625, 0.3327169418334961, 0.3350944519042969, 0.33866068720817566, 0.3323206901550293, 0.3349623680114746, 0.33786818385124207], "val_loss": [1.9699411392211914, 1.9689441408429826, 1.9679577691214425, 1.9669814790998186, 1.9659946305411202, 1.9650146620614188, 1.9640405518668038, 1.9630679403032576, 1.9620860644749232, 1.961104461124965, 1.96012966973441, 1.9591530391148158, 1.958171776362828, 1.9571941239493233, 1.9562350000653947, 1.9552464485168457, 1.9542700903756278, 1.9532898494175501, 1.9523070199148995, 1.9513203075953893, 1.9503370693751745, 1.949352400643485, 1.9483562878199987, 1.9473590850830078, 1.946366310119629, 1.9453616823468889, 1.9443591662815638, 1.9433554921831404, 1.9423482758658273, 1.9413256645202637, 1.9403156552995955, 1.9393004008701868, 1.9382561956133162, 1.93723235811506, 1.9361833844866072, 1.9351349558149065, 1.9340876170567103, 1.9330164364406042, 1.9319508416312081, 1.930877344948905, 1.929788316999163, 1.9286850520542689, 1.9275777680533273, 1.9264671461922782, 1.9253362246922083, 1.924196652003697, 1.9230540820530482, 1.9218974113464355, 1.9207408768790108, 1.9195644514901298, 1.9183785574776786, 1.9171783583504813, 1.9159654208592005, 1.9147525514875139, 1.913520676749093, 1.9122706140790666, 1.911003930228097, 1.9097388812473841, 1.9084375245230538, 1.9071403912135534, 1.905818053654262, 1.90449857711792, 1.903160844530378, 1.9017924581255232, 1.9004062243870325, 1.8990206037248885, 1.8976170676095145, 1.8962016105651855, 1.894765853881836, 1.8933077539716447, 1.8918230193001884, 1.89031526020595, 1.8888085910252161, 1.8873075076511927, 1.8857710702078683, 1.8842055456978934, 1.8826133864266532, 1.8810225214276994, 1.8793943950108118, 1.877746854509626, 1.8760626656668526, 1.8743698937552316, 1.8726662227085658, 1.8709128924778529, 1.8691513197762626, 1.8673816408429826, 1.8655899592808314, 1.8637595857892717, 1.8618855476379395, 1.8600106920514787, 1.858092989240374, 1.8561707905360632, 1.8542120797293526, 1.8522367477416992, 1.85023832321167, 1.8482094492231096, 1.8461530549185616, 1.8440662792750768, 1.8419537544250488, 1.8398071697780065], "val_accuracy": [0.04466666653752327, 0.049666665494441986, 0.05700000002980232, 0.06400000303983688, 0.0716666653752327, 0.07900000363588333, 0.0860000029206276, 0.09466666728258133, 0.10766666382551193, 0.11533333361148834, 0.12566666305065155, 0.1353333294391632, 0.14800000190734863, 0.1613333374261856, 0.16766667366027832, 0.17533333599567413, 0.18299999833106995, 0.195333331823349, 0.20399999618530273, 0.21466666460037231, 0.22333332896232605, 0.23333333432674408, 0.2436666637659073, 0.25433334708213806, 0.2619999945163727, 0.27133333683013916, 0.2763333320617676, 0.2840000092983246, 0.28866666555404663, 0.2939999997615814, 0.3006666600704193, 0.3096666634082794, 0.31566667556762695, 0.32233333587646484, 0.32733333110809326, 0.3333333432674408, 0.3373333215713501, 0.34333333373069763, 0.35066667199134827, 0.35499998927116394, 0.35766667127609253, 0.3633333444595337, 0.3683333396911621, 0.3713333308696747, 0.37466666102409363, 0.3773333430290222, 0.3779999911785126, 0.3803333342075348, 0.382999986410141, 0.38600000739097595, 0.3893333375453949, 0.39100000262260437, 0.39233332872390747, 0.39366665482521057, 0.3946666717529297, 0.3970000147819519, 0.39800000190734863, 0.3986666798591614, 0.40166667103767395, 0.4036666750907898, 0.40566667914390564, 0.40666666626930237, 0.40799999237060547, 0.40933331847190857, 0.4103333353996277, 0.4113333225250244, 0.41333332657814026, 0.41466665267944336, 0.4180000126361847, 0.41966667771339417, 0.421999990940094, 0.42399999499320984, 0.42500001192092896, 0.42633333802223206, 0.42766666412353516, 0.429666668176651, 0.4313333332538605, 0.4323333203792572, 0.4346666634082794, 0.4359999895095825, 0.43666666746139526, 0.44066667556762695, 0.44333332777023315, 0.4440000057220459, 0.44466665387153625, 0.445333331823349, 0.4449999928474426, 0.44699999690055847, 0.4476666748523712, 0.4493333399295807, 0.44999998807907104, 0.45100000500679016, 0.4533333480358124, 0.4560000002384186, 0.4566666781902313, 0.45899999141693115, 0.46000000834465027, 0.460999995470047, 0.4623333215713501, 0.46399998664855957]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [37, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 0, 4, 2, 2, 9, 6, 2, 6, 2, 2, 1, 9, 6, 2, 8, 2, 6, 6, 0, 0, 9, 6, 2, 5, 9, 2, 9, 9], [0, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [75, 19, 85, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.410571426153183, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.subtract(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.47476280571652, 2.3086139630836784, 2.3635193581720304, 2.2975596042593254, 2.2318976102110226, 2.3158582664515444, 2.3034390483975113], "accuracy": [0.20882314443588257, 0.16959451138973236, 0.17144367098808289, 0.12613920867443085, 0.21357811987400055, 0.10830801725387573, 0.10474177449941635], "val_loss": [1.6865459510258265, 1.6238161495753698, 1.9764917918613978, 1.9494348934718542, 2.0098983219691684, 1.974637235913958, 1.9740428924560547], "val_accuracy": [0.23100000619888306, 0.45133334398269653, 0.10133333504199982, 0.15199999511241913, 0.14000000059604645, 0.09566666930913925, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [6, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [1, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.2945714294910431, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301441711882527, 2.301496610696904, 2.3020497532316626, 2.301890404563554, 2.301115503684011, 2.3005106818202057, 2.2988780863989517, 2.2995778579029187, 2.2990899029944503, 2.29822401436108, 2.298532990637142, 2.298303523823853, 2.2968432006110384, 2.2965159708435476, 2.29732878890571, 2.2988794336166554, 2.2967306661599536, 2.296388906935628, 2.294984781542128, 2.295978797409497, 2.2969844633199914, 2.295475579334713, 2.294122931664693, 2.294985722934943, 2.2950256201159984, 2.2916419273039383, 2.293543916100666, 2.2922749006044376, 2.2941577313929153, 2.2916647872400793, 2.2933832568704116, 2.2924830130991634, 2.290740241338044, 2.2913191937310677, 2.2893049612399246, 2.2911454415702392, 2.289985468831312, 2.289844559892577, 2.2908853564705156, 2.29004798082234, 2.2893136101565137, 2.2883076437586225, 2.290824757905889, 2.288478323875118, 2.288619874349092, 2.2861476847681748, 2.2875108101962818, 2.2871178681304696, 2.287253280152671, 2.286811220867916, 2.2862934956634366, 2.285480035719634, 2.286362790129267, 2.2856127167138536, 2.2844249381207833, 2.2840727523742745, 2.2837283608463417, 2.286656705190981, 2.2825827540313375, 2.284369551604844, 2.282898095809489, 2.2833602901746444, 2.2835584482921822, 2.280761350493909, 2.280639650452926, 2.2813659304751224, 2.2815158510756075, 2.2826063320888994, 2.281072437015302, 2.280528473832021, 2.27884148338987, 2.278372696598271, 2.2779271930767133, 2.2790123823060338, 2.278998646549088, 2.279190553602935, 2.2779630397556794, 2.2795138459211297, 2.276339113184836, 2.277629456263744, 2.2752722428223207, 2.2758890077847655, 2.2770334369297656, 2.2754121799793983, 2.2739334185802704, 2.275117124312621, 2.274256977155114, 2.274613421874323, 2.273814905998241, 2.2746845013461394, 2.272438650102254, 2.272488788827189, 2.272977302197562, 2.271806847575224, 2.2714085324470945, 2.272456669772794, 2.2702649036780826, 2.271388006594518, 2.2703700047033086, 2.269727583023472], "accuracy": [0.09325055778026581, 0.08730682730674744, 0.09536388516426086, 0.08849557489156723, 0.09470347315073013, 0.09338264167308807, 0.09694888442754745, 0.09800554811954498, 0.09840179979801178, 0.09113723784685135, 0.10434553027153015, 0.10394927859306335, 0.10976093262434006, 0.10540219396352768, 0.10474177449941635, 0.09615638852119446, 0.10302469879388809, 0.10038304328918457, 0.09972262382507324, 0.107647605240345, 0.10289261490106583, 0.108440101146698, 0.10989301651716232, 0.1080438494682312, 0.11636507511138916, 0.11768590658903122, 0.1142517477273941, 0.11319508403539658, 0.10870426893234253, 0.11332716792821884, 0.1142517477273941, 0.11293092370033264, 0.11557257920503616, 0.11596883088350296, 0.12138422578573227, 0.12296922504901886, 0.11940298229455948, 0.11993131786584854, 0.12072381377220154, 0.11795007437467575, 0.12468630075454712, 0.12098798155784607, 0.1224408894777298, 0.1274600476026535, 0.12772421538829803, 0.13300752639770508, 0.13300752639770508, 0.13076211512088776, 0.13049794733524323, 0.1278562992811203, 0.13261127471923828, 0.1348566859960556, 0.1286487877368927, 0.13195087015628815, 0.1332716941833496, 0.137630432844162, 0.13961167633533478, 0.13129045069217682, 0.13921542465686798, 0.13181878626346588, 0.14581957459449768, 0.13895125687122345, 0.13749834895133972, 0.14898955821990967, 0.14634791016578674, 0.14119666814804077, 0.14330999553203583, 0.14212125539779663, 0.15057456493377686, 0.14595165848731995, 0.1488574892282486, 0.15453705191612244, 0.15731078386306763, 0.14674416184425354, 0.1530841439962387, 0.15110288560390472, 0.15281997621059418, 0.15598995983600616, 0.15810328722000122, 0.15400871634483337, 0.15229164063930511, 0.16114120185375214, 0.15638621151447296, 0.16312244534492493, 0.16523577272891998, 0.1624620258808136, 0.16457535326480865, 0.16193369030952454, 0.16761326789855957, 0.16299036145210266, 0.17131158709526062, 0.1690661758184433, 0.1694624274969101, 0.16576409339904785, 0.17038699984550476, 0.1698586642742157, 0.17316074669361115, 0.17712323367595673, 0.17778365314006805, 0.17316074669361115], "val_loss": [1.9706416811261858, 1.9703436579023088, 1.970048155103411, 1.96975462777274, 1.9694572857448034, 1.9691614423479353, 1.968867642538888, 1.9685743195669991, 1.968278135572161, 1.9679816790989466, 1.9676880836486816, 1.9673942157200404, 1.9671000753130232, 1.9668072291782923, 1.966519560132708, 1.9662246704101562, 1.965933186667306, 1.96564177104405, 1.965348175593785, 1.9650560787745885, 1.96476411819458, 1.9644737924848283, 1.9641811507088798, 1.963888236454555, 1.9635971614292689, 1.9633060182843889, 1.9630157606942313, 1.962726388658796, 1.9624351092747279, 1.9621427399771554, 1.9618549346923828, 1.9615671975272042, 1.9612730571201868, 1.9609849793570382, 1.9606945174080985, 1.9604063034057617, 1.9601201329912459, 1.959829875401088, 1.9595428194318498, 1.9592548779078893, 1.9589650290352958, 1.9586740221296037, 1.9583817890712194, 1.9580917358398438, 1.9578029768807548, 1.9575140135628837, 1.9572243690490723, 1.9569344520568848, 1.9566477366856165, 1.9563562529427665, 1.956066404070173, 1.9557775088718958, 1.9554861613682337, 1.955197879246303, 1.9549095971243722, 1.9546183858598982, 1.9543274470738001, 1.9540375300816126, 1.9537438665117537, 1.9534533364432198, 1.953158242361886, 1.9528681210109167, 1.9525773865836007, 1.9522834505353654, 1.9519900594438826, 1.9516956465584892, 1.9514024598257882, 1.9511115210396903, 1.950819764818464, 1.9505267143249512, 1.9502310071672713, 1.9499345506940569, 1.9496419089181083, 1.949352536882673, 1.9490602357046944, 1.9487669127328056, 1.9484731810433524, 1.9481810161045618, 1.9478866713387626, 1.9475913047790527, 1.9472906930106026, 1.9469955989292689, 1.9467026165553503, 1.9464020047869002, 1.9461041859218053, 1.9458073207310267, 1.945509569985526, 1.9452133859906877, 1.9449144772120885, 1.9446162496294295, 1.9443163871765137, 1.94401672908238, 1.943718433380127, 1.943418298448835, 1.9431193896702357, 1.9428202084132604, 1.94251925604684, 1.9422175543648856, 1.941915648324149, 1.9416121074131556], "val_accuracy": [0.0403333343565464, 0.04233333468437195, 0.04333333298563957, 0.045666664838790894, 0.04600000008940697, 0.04699999839067459, 0.05000000074505806, 0.05400000140070915, 0.054999999701976776, 0.05700000002980232, 0.058666665107011795, 0.06199999898672104, 0.06366666406393051, 0.06666667014360428, 0.06833333522081375, 0.07100000232458115, 0.07133333384990692, 0.0729999989271164, 0.07666666805744171, 0.07833333313465118, 0.08033332973718643, 0.08266666531562805, 0.0846666693687439, 0.08666666597127914, 0.08933333307504654, 0.09133332967758179, 0.09366666525602341, 0.0989999994635582, 0.10300000011920929, 0.10700000077486038, 0.10899999737739563, 0.11133333295583725, 0.1146666631102562, 0.11599999666213989, 0.11833333224058151, 0.12166666984558105, 0.12466666847467422, 0.12800000607967377, 0.13099999725818634, 0.13466666638851166, 0.1379999965429306, 0.14133332669734955, 0.1446666717529297, 0.14733333885669708, 0.15333333611488342, 0.1576666682958603, 0.15966667234897614, 0.16333332657814026, 0.16466666758060455, 0.1666666716337204, 0.16899999976158142, 0.17166666686534882, 0.17299999296665192, 0.17633333802223206, 0.17900000512599945, 0.18166667222976685, 0.18333333730697632, 0.1863333284854889, 0.19033333659172058, 0.19433332979679108, 0.195333331823349, 0.1979999989271164, 0.2006666660308838, 0.20466665923595428, 0.2070000022649765, 0.2123333364725113, 0.21466666460037231, 0.21766667068004608, 0.2199999988079071, 0.2213333398103714, 0.22566667199134827, 0.22833333909511566, 0.2303333282470703, 0.2329999953508377, 0.23600000143051147, 0.2396666705608368, 0.24266666173934937, 0.24533332884311676, 0.24899999797344208, 0.2516666650772095, 0.25466665625572205, 0.257999986410141, 0.25999999046325684, 0.26233333349227905, 0.2643333375453949, 0.2669999897480011, 0.26899999380111694, 0.2720000147819519, 0.2736666798591614, 0.2770000100135803, 0.2783333361148834, 0.2796666622161865, 0.281333327293396, 0.28299999237060547, 0.2849999964237213, 0.28733333945274353, 0.28866666555404663, 0.28999999165534973, 0.2930000126361847, 0.2930000126361847]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [1, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.11571428924798965, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.6013267654012835, 3.057455895016647, 2.304947749388421, 2.3002387622344007, 2.303072375707056, 2.302544164903223, 2.2972373822267267, 2.517094963687428], "accuracy": [0.1872936189174652, 0.1732928305864334, 0.11345925182104111, 0.09932637959718704, 0.09351472556591034, 0.10949676483869553, 0.12996962666511536, 0.20116232335567474], "val_loss": [1.942502771105085, 1.978283132825579, 1.9598851885114397, 1.9737197331019811, 1.9733634676252092, 1.9727448735918318, 1.9237371172223772, 1.9918364797319685], "val_accuracy": [0.164000004529953, 0.10366666316986084, 0.18333333730697632, 0.09533333033323288, 0.10366666316986084, 0.10199999809265137, 0.10199999809265137, 0.09433333575725555]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 3, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [95, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 3, 0, 4, 2, 2, 9, 6, 2, 6, 2, 2, 1, 9, 6, 2, 8, 2, 6, 6, 0, 0, 9, 6, 2, 5, 9, 2, 9, 9], [5, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 85, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [5, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 2, 44, 44, 28, 16, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 58, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), grad)), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.subtract(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, alpha), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))))), grad)))), tf.math.add(beta, grad)))), tf.math.add(beta, alpha)), tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.square(grad), tf.math.add(beta, alpha))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(alpha, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 1, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [1, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 3, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.302160297481218, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [0, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [0, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302160297481218, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 7, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [3, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05956941097974777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302332434026305, 2.4218212009153315, 13.037550092955874, 72.41023727112663, 189.70906038880113, 364.31644938011306], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9820825031825475, 2.8513457434517995, 33.37954929896763, 113.77554757254464, 243.63204520089286, 423.0874982561384], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 1, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [9, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [0, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [46, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [0, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), alpha))))))), lambda shape,  alpha, beta, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05956941097974777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [6, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [1, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06987188011407852, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [4, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [4, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0602298229932785, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [12, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 0, 4, 2, 2, 9, 6, 2, 6, 2, 2, 1, 9, 6, 2, 8, 2, 6, 6, 0, 0, 9, 6, 2, 5, 9, 2, 9, 9], [0, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [1, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [51868556534.77366, 7679991137413.766, 131558695942943.34, 929062379729401.9, 4104496398922595.0, 1.3289077323910342e+16], "accuracy": [0.1010434553027153, 0.1006472036242485, 0.10170386731624603, 0.10302469879388809, 0.10302469879388809, 0.09998679161071777], "val_loss": [418528371858.2857, 22562590275291.43, 242162829473499.44, 1320175696459483.5, 4946174072211749.0, 1.4590643547855726e+16], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 9, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [3, 66, 89, 50, 85, 46], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 4, 2, 3, 9, 6, 8, 4, 2, 5, 2, 9, 2, 5, 8, 2, 4, 6, 9, 3, 9, 9], [1, 3, 2, 3, 1, 1, 3, 3, 1, 3, 4, 3, 1, 4, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [84, 19, 30, 73, 40, 57, 35, 9, 54, 64], [0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [9, 9, 3, 4], [3, 0], [53, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3017867534482765, 2.3035628832783193, 2.3072732862558945, 2.3116919197001398, 2.3172367907408096, 2.3244865064403055], "accuracy": [0.09219389408826828, 0.08400475233793259, 0.08400475233793259, 0.07211729139089584, 0.060493990778923035, 0.049927353858947754], "val_loss": [1.971672807421003, 1.973717417035784, 1.977081366947719, 1.9818038940429688, 1.987959316798619, 1.9955996104649134], "val_accuracy": [0.03566666692495346, 0.0273333340883255, 0.01666666753590107, 0.01066666655242443, 0.007000000216066837, 0.004666666500270367]}}]