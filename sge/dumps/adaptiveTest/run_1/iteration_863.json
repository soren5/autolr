[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 6, 1, 0, 8, 5, 2, 9, 3, 8, 2, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [96, 97, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8299999833106995, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 4, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.subtract(beta, grad), tf.math.add(beta, tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.145778653171667, 2.2100760582148076, 2.097381703715991, 1.3242747960561743, 0.8916284214740164, 0.8043333706429385, 0.7018923289063207, 0.6436906552680054, 0.6295758151280614, 0.5960074034050203, 0.5757900865527349, 0.5808863385305303, 0.5314547411321003, 0.5296500485964644, 0.49980622252862467, 0.4881999688125825, 0.5477046145030521, 0.4780137073472506, 0.5008459574534452, 0.4834983993152885], "accuracy": [0.30999869108200073, 0.18372738361358643, 0.2728833854198456, 0.549068808555603, 0.6757363677024841, 0.7046625018119812, 0.7395324110984802, 0.7523444890975952, 0.7567031979560852, 0.776251494884491, 0.7852331399917603, 0.7741381525993347, 0.7973847389221191, 0.7979130744934082, 0.8117818236351013, 0.8137630224227905, 0.7931581139564514, 0.8195747137069702, 0.8096684813499451, 0.8206313848495483], "val_loss": [1.9825640405927385, 1.9653850964137487, 1.604290587561471, 0.6546307631901332, 0.6909875188555036, 0.5371071100234985, 0.49480036326817106, 0.4968459095273699, 0.47711385999407085, 0.4639082636151995, 0.48866883346012663, 0.4444504124777658, 0.4298820836203439, 0.4084238750594003, 0.39275643655232023, 0.576352562223162, 0.4314640590122768, 0.4334950532232012, 0.44978976249694824, 0.40812116861343384], "val_accuracy": [0.10366666316986084, 0.11266666650772095, 0.41333332657814026, 0.7116666436195374, 0.6953333616256714, 0.746666669845581, 0.7776666879653931, 0.7770000100135803, 0.7873333096504211, 0.8016666769981384, 0.7856666445732117, 0.8166666626930237, 0.8006666898727417, 0.8240000009536743, 0.8376666903495789, 0.7323333621025085, 0.8019999861717224, 0.8180000185966492, 0.8063333630561829, 0.8209999799728394]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 1, 1, 0, 8, 1, 2, 4, 4, 8, 2, 3, 8, 5, 2, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [96, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8291428685188293, "mapping_values": [1, 4, 4, 2, 2, 1, 23, 23, 14, 9, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.negative(grad), tf.math.add(beta, tf.math.sqrt(grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(grad, grad), tf.math.pow(tf.math.pow(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(beta, tf.math.square(beta))))), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1661003851194613, 1.9551730688143212, 1.4429477727676128, 1.0127418048550911, 0.8708684357512251, 0.771525094167762, 0.7206373949013744, 0.7079315447630963, 0.6309300089367408, 0.6422352823661917, 0.5900907222983104, 0.5839648328877994, 0.5662133464676561, 0.5579459100524747, 0.5442336983117666, 0.5209268036614225, 0.5235603553995937, 0.4985896121273109, 0.4925012629596769, 0.5147247569215548, 0.48764775290921886, 0.4839067988588731, 0.4627543391174943, 0.44954764937460145, 0.4450288498130819, 0.4366307700582546, 0.41701456049429886, 0.42413253921401844, 0.3977966996948276, 0.39639761362565806, 0.394358487220378, 0.40006443484584336, 0.3894704654704562, 0.39435729134068626, 0.37203808332541366, 0.3674861146765709, 0.37048791569568196, 0.3576223943699872, 0.36025313751383575, 0.3375388634337127, 0.3501352624587096, 0.3524207248624447, 0.33404393581713604, 0.32692983300930567, 0.3124441061242224, 0.3275090516235504, 0.30944963700782985, 0.3149577406427061, 0.31533470291266935], "accuracy": [0.25782591104507446, 0.3489631414413452, 0.49729230999946594, 0.6211860775947571, 0.6831330060958862, 0.7084929347038269, 0.7268524765968323, 0.7316074371337891, 0.7650244235992432, 0.7574957013130188, 0.7725531458854675, 0.7770439982414246, 0.7835160493850708, 0.7882710099220276, 0.7980451583862305, 0.8030643463134766, 0.8033285140991211, 0.8099326491355896, 0.8171972036361694, 0.811649739742279, 0.8202351331710815, 0.8181217908859253, 0.82683926820755, 0.8315942287445068, 0.8360850811004639, 0.8409721255302429, 0.8417646288871765, 0.843481719493866, 0.8504821062088013, 0.8498216867446899, 0.8519350290298462, 0.8552370667457581, 0.8525954484939575, 0.8531237840652466, 0.8626337051391602, 0.8646149635314941, 0.8644828796386719, 0.8708229064941406, 0.8636903762817383, 0.8768987059593201, 0.8664641380310059, 0.8712190985679626, 0.8770307898521423, 0.876370370388031, 0.8825782537460327, 0.880729079246521, 0.8833707571029663, 0.8804649114608765, 0.8746532797813416], "val_loss": [1.9310109955923898, 1.2990763187408447, 0.814380441393171, 0.7411742891584124, 0.6019079855510167, 0.5991447653089251, 0.5151052474975586, 0.5113583121980939, 0.5502228907176426, 0.47774432386670795, 0.5045705693108695, 0.46142240933009554, 0.44351773602621897, 0.4202119878360203, 0.42174934489386423, 0.49464925697871615, 0.4100642033985683, 0.44815637384142193, 0.4434771878378732, 0.4957100323268345, 0.4365341493061611, 0.37403881549835205, 0.37673305613654, 0.4290615575654166, 0.4201290266854422, 0.36248951298849924, 0.36877587863377165, 0.39267895902906147, 0.36585297754832674, 0.36502905402864727, 0.35542536633355276, 0.362305223941803, 0.3574791806084769, 0.40470583949770245, 0.35402473381587435, 0.36467995813914705, 0.3313546521323068, 0.38375747203826904, 0.3438781670161656, 0.33366367646626066, 0.3277507339205061, 0.32867412907736643, 0.35848275252750944, 0.32565769127437044, 0.4146242822919573, 0.3414334143911089, 0.32229697704315186, 0.34864139556884766, 0.32418867519923616], "val_accuracy": [0.28033334016799927, 0.5853333473205566, 0.6460000276565552, 0.6736666560173035, 0.7246666550636292, 0.7139999866485596, 0.7713333368301392, 0.7713333368301392, 0.7319999933242798, 0.7846666574478149, 0.7773333191871643, 0.7973333597183228, 0.8026666641235352, 0.8173333406448364, 0.8166666626930237, 0.7763333320617676, 0.828000009059906, 0.7983333468437195, 0.8023333549499512, 0.7806666493415833, 0.7860000133514404, 0.8396666646003723, 0.8393333554267883, 0.8106666803359985, 0.8253333568572998, 0.8476666808128357, 0.8489999771118164, 0.8379999995231628, 0.8446666598320007, 0.8503333330154419, 0.8496666550636292, 0.8473333120346069, 0.8539999723434448, 0.8353333473205566, 0.8476666808128357, 0.8460000157356262, 0.8646666407585144, 0.8286666870117188, 0.8583333492279053, 0.862666666507721, 0.862666666507721, 0.8656666874885559, 0.8613333106040955, 0.8713333606719971, 0.8343333601951599, 0.8566666841506958, 0.8666666746139526, 0.8606666922569275, 0.8650000095367432]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 1, 1, 0, 8, 1, 2, 4, 4, 4, 9, 3, 8, 5, 2, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [17, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8259999752044678, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1667523818040615, 2.209508606786379, 1.7978651772054306, 1.4416754657345803, 1.0527666545169323, 0.8706620428792363, 0.8023978121339559, 0.7141366273719778, 0.6908209826637332, 0.6697014417898354, 0.6375699985170598, 0.6170262453924821, 0.5848574733941971, 0.5838030347687425, 0.5642165115653972, 0.5445789978992607, 0.5538480781671189, 0.5127307429187381, 0.5223239664002621, 0.5257056647713126, 0.47787247932566596, 0.5083102169817528], "accuracy": [0.25822216272354126, 0.2677321434020996, 0.39704135060310364, 0.48368775844573975, 0.6198652982711792, 0.6627922058105469, 0.6942279934883118, 0.7294940948486328, 0.7401928305625916, 0.7428345084190369, 0.7606657147407532, 0.7662131786346436, 0.7795535326004028, 0.7815347909927368, 0.7903843522071838, 0.7930260300636292, 0.7940827012062073, 0.8104609847068787, 0.8067626357078552, 0.8024039268493652, 0.8231409192085266, 0.8092722296714783], "val_loss": [1.9219825608389718, 1.6561858994620187, 1.3046238422393799, 0.8930518627166748, 0.6626925298145839, 0.6248650550842285, 0.5545490639550346, 0.5086422307150704, 0.554845758846828, 0.4877344880785261, 0.5477225610188076, 0.49366332803453716, 0.46683151381356375, 0.4243699482509068, 0.49274749415261404, 0.5495563234601702, 0.40537458658218384, 0.4414834976196289, 0.4521761110850743, 0.4361186538423811, 0.41735557998929707, 0.39341568095343454], "val_accuracy": [0.31299999356269836, 0.3656666576862335, 0.4116666615009308, 0.6456666588783264, 0.718999981880188, 0.7086666822433472, 0.7400000095367432, 0.7713333368301392, 0.7350000143051147, 0.784333348274231, 0.7413333058357239, 0.7826666831970215, 0.7919999957084656, 0.8176666498184204, 0.7706666588783264, 0.746666669845581, 0.8363333344459534, 0.8103333115577698, 0.7979999780654907, 0.7979999780654907, 0.8059999942779541, 0.828000009059906]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 6, 1, 4, 8, 5, 4, 9, 3, 8, 1, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [96, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8234285712242126, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1667754798123804, 2.207939108931834, 1.916886061520514, 1.4784362668201294, 1.006455899418589, 0.8873267732811578, 0.8007219720352847, 0.7498703203684997, 0.7077149018131589, 0.7136022046950389, 0.6305555513647995, 0.6608729151576628, 0.5974352915745842, 0.5884970823661322, 0.5899851014900359, 0.5563607963320917, 0.5530111977389901, 0.530317414111591, 0.5453920956135678, 0.539385332131918, 0.509420579135725, 0.4939312484396321, 0.4903333362350847, 0.48659240541330906, 0.47114755883429105, 0.47762714889087005, 0.45612597090771895, 0.4614677129325897, 0.44162041611360314, 0.4255332515743887, 0.4294707692137106, 0.40330024585354174, 0.4271313570131794, 0.4259368218191233, 0.41478841323043847, 0.39692957330657, 0.401513086381196, 0.3825118427011457, 0.3865996322509336, 0.38788090188662927, 0.3811210488614909, 0.3687604219292165, 0.35800074102494067, 0.3642970397920814, 0.3544529062913409, 0.35845919710581153], "accuracy": [0.25822216272354126, 0.26680755615234375, 0.35385021567344666, 0.47153612971305847, 0.6269977688789368, 0.6631884574890137, 0.7018887996673584, 0.7185312509536743, 0.7371549606323242, 0.7313432693481445, 0.7576277852058411, 0.7504953145980835, 0.7732135653495789, 0.7744023203849792, 0.7763835787773132, 0.7897239327430725, 0.7921014428138733, 0.8034605979919434, 0.7952714562416077, 0.8010830879211426, 0.811649739742279, 0.8149517774581909, 0.8148196935653687, 0.8157442808151245, 0.83119797706604, 0.8240655064582825, 0.8315942287445068, 0.8241975903511047, 0.834632158279419, 0.8391229510307312, 0.8412362933158875, 0.8557654023170471, 0.8389908671379089, 0.8376700282096863, 0.8470479249954224, 0.8543124794960022, 0.8481045961380005, 0.8593316674232483, 0.8539162874221802, 0.8492933511734009, 0.8533879518508911, 0.8632941246032715, 0.8647470474243164, 0.8621054291725159, 0.8659358024597168, 0.8713511824607849], "val_loss": [1.9217306545802526, 1.6416430132729667, 1.3914801733834403, 0.8456170729228428, 0.6707194192068917, 0.6089429344449725, 0.566531845501491, 0.534134932926723, 0.6107179267065865, 0.5011331183569772, 0.5435452801840646, 0.4942737988063267, 0.4965617997305734, 0.43336338656289236, 0.4951186350413731, 0.5253888368606567, 0.4362725785800389, 0.45161201272692, 0.485168525150844, 0.496456435748509, 0.4126134770257132, 0.4106494018009731, 0.406015830380576, 0.41068387031555176, 0.4408448764256069, 0.37707975081035067, 0.3755854623658316, 0.4078421337263925, 0.36300458226885113, 0.38252287251608713, 0.3674749306270054, 0.3787124923297337, 0.40988950218473164, 0.44252891199929373, 0.3623887981687273, 0.3482101729937962, 0.3427887388638088, 0.38524203641074045, 0.367939293384552, 0.34119580473218647, 0.3278571367263794, 0.34260025194713045, 0.42982845646994455, 0.3409531967980521, 0.39746763025011334, 0.3374722685132708], "val_accuracy": [0.312666654586792, 0.37033334374427795, 0.49000000953674316, 0.6299999952316284, 0.6903333067893982, 0.7139999866485596, 0.7306666374206543, 0.762333333492279, 0.6909999847412109, 0.7753333449363708, 0.7620000243186951, 0.7853333353996277, 0.7696666717529297, 0.8076666593551636, 0.7856666445732117, 0.7456666827201843, 0.8159999847412109, 0.7983333468437195, 0.7770000100135803, 0.781333327293396, 0.8199999928474426, 0.8176666498184204, 0.8183333277702332, 0.8306666612625122, 0.8153333067893982, 0.8363333344459534, 0.8443333506584167, 0.8220000267028809, 0.8423333168029785, 0.8410000205039978, 0.8456666469573975, 0.8383333086967468, 0.8076666593551636, 0.8223333358764648, 0.8410000205039978, 0.8573333621025085, 0.8603333234786987, 0.8289999961853027, 0.8433333039283752, 0.8603333234786987, 0.8709999918937683, 0.8543333411216736, 0.8333333134651184, 0.8629999756813049, 0.8353333473205566, 0.8613333106040955]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 1, 1, 0, 8, 1, 2, 4, 4, 8, 2, 2, 8, 5, 2, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 2, 3, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [96, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [2, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8142856955528259, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.166108666630217, 1.9624482666449445, 1.5034974565154542, 1.1780225352966365, 0.8854562401803037, 0.7988859879704452, 0.755562894923135, 0.7062926986560436, 0.6423230179155098, 0.6490871101920914, 0.629736508793756, 0.5903898449763488, 0.5770576244426552, 0.5682137342743854, 0.5575939667553965, 0.5351436983293562, 0.5605345919557047, 0.5273477218768632, 0.48821460574042636, 0.5107917375710064, 0.47914209027788535, 0.4867859940762848, 0.48077744742300155, 0.4586310618628506, 0.4481059014403573, 0.4638588993249552, 0.4372563397155352, 0.43746229113053653, 0.40321531941421185, 0.41456879896809634, 0.38642140474648223, 0.38277631501291154, 0.4010636099789987, 0.4042517716512074, 0.39318617870936445, 0.3658615443700529, 0.3873476943540189, 0.3626044726508751], "accuracy": [0.25742965936660767, 0.34843480587005615, 0.49266940355300903, 0.5560691952705383, 0.6740192770957947, 0.6948884129524231, 0.7117950320243835, 0.7342491149902344, 0.7633073329925537, 0.752212405204773, 0.7617223858833313, 0.7788931727409363, 0.778761088848114, 0.7861577272415161, 0.7918372750282288, 0.800290584564209, 0.7887993454933167, 0.802271842956543, 0.8175934553146362, 0.8105930685997009, 0.819442629814148, 0.8149517774581909, 0.8198388814926147, 0.8244617581367493, 0.8385946154594421, 0.83119797706604, 0.8374059200286865, 0.8379341959953308, 0.846387505531311, 0.8430854678153992, 0.8537842035293579, 0.8602562546730042, 0.8487650156021118, 0.846387505531311, 0.8519350290298462, 0.8625016212463379, 0.8539162874221802, 0.8691058158874512], "val_loss": [1.930896486554827, 1.6038966178894043, 1.1244480609893799, 0.7700307369232178, 0.6383952072688511, 0.6055971554347447, 0.5269918612071446, 0.507995639528547, 0.5261470079421997, 0.4873704399381365, 0.5010446650641305, 0.46637231963021414, 0.43949505261012484, 0.4276856780052185, 0.4397231340408325, 0.5357443605150495, 0.4252152613231114, 0.42001943928854807, 0.39220815896987915, 0.4451263632093157, 0.408530524798802, 0.39173634563173565, 0.3954902376447405, 0.3905572465487889, 0.38699064935956684, 0.3674751264708383, 0.3722535712378366, 0.3847305859838213, 0.3977367196764265, 0.37285717896052767, 0.3588747978210449, 0.4027475118637085, 0.35235133341380526, 0.4231903467859541, 0.34880053997039795, 0.35246069942201885, 0.34448234524045673, 0.3833745207105364], "val_accuracy": [0.2783333361148834, 0.3656666576862335, 0.4963333308696747, 0.6646666526794434, 0.734333336353302, 0.7093333601951599, 0.7683333158493042, 0.7696666717529297, 0.746666669845581, 0.7903333306312561, 0.781000018119812, 0.7986666560173035, 0.8063333630561829, 0.8100000023841858, 0.8016666769981384, 0.7463333606719971, 0.8130000233650208, 0.8133333325386047, 0.8370000123977661, 0.7916666865348816, 0.8143333196640015, 0.8303333520889282, 0.8243333101272583, 0.8393333554267883, 0.8353333473205566, 0.8446666598320007, 0.843666672706604, 0.8426666855812073, 0.8336666822433472, 0.8410000205039978, 0.8463333249092102, 0.8360000252723694, 0.8550000190734863, 0.828000009059906, 0.8486666679382324, 0.8533333539962769, 0.8539999723434448, 0.82833331823349]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 8, 1, 0, 8, 1, 2, 4, 4, 1, 2, 3, 8, 5, 2, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 1, 3, 3, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [96, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.8122857213020325, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 5, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.negative(grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1667659162388597, 2.209778282321471, 1.7679372058332306, 1.794502256553029, 1.2062458266293636, 0.9197654142639247, 0.8101117620378705, 0.7270566235837558, 0.6757811592586005, 0.6623499419600689, 0.6422531784423166, 0.595769123536028, 0.5630169077997179, 0.5873755482304066, 0.5604065021330481, 0.5338785758958186, 0.549103758385814, 0.4980379683214676, 0.5142196175003757, 0.5137993163003457, 0.47643053736338414, 0.49017635947913857], "accuracy": [0.2583542466163635, 0.266939640045166, 0.39849424362182617, 0.41830670833587646, 0.5587108731269836, 0.6472064256668091, 0.6930392384529114, 0.7264562249183655, 0.7424382567405701, 0.7475894689559937, 0.7520803213119507, 0.7724210619926453, 0.7835160493850708, 0.7820631265640259, 0.7952714562416077, 0.8020076751708984, 0.7946110367774963, 0.8136309385299683, 0.8084797263145447, 0.8144234418869019, 0.8228767514228821, 0.8198388814926147], "val_loss": [1.9216977528163366, 1.6576675006321497, 1.562124252319336, 1.112401076725551, 0.7089052030018398, 0.6355725526809692, 0.568230220249721, 0.5087094136646816, 0.530984776360648, 0.5433295965194702, 0.5030572754996163, 0.47079757281712126, 0.44131592341831755, 0.41275806937898907, 0.4505011865070888, 0.5390120915004185, 0.39376677785600933, 0.4333888718060085, 0.4620872735977173, 0.42904311418533325, 0.40080056871686665, 0.39231359107153757], "val_accuracy": [0.31466665863990784, 0.3659999966621399, 0.3553333282470703, 0.5609999895095825, 0.7073333263397217, 0.7039999961853027, 0.7353333234786987, 0.7753333449363708, 0.7720000147819519, 0.753333330154419, 0.7733333110809326, 0.7929999828338623, 0.8056666851043701, 0.8273333311080933, 0.7963333129882812, 0.749666690826416, 0.8356666564941406, 0.8026666641235352, 0.7866666913032532, 0.8076666593551636, 0.8176666498184204, 0.8323333263397217]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 8, 1, 0, 8, 1, 4, 0, 4, 8, 2, 5, 8, 5, 2, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 0, 3, 2, 0, 3, 0, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [96, 97, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7977142930030823, "mapping_values": [1, 4, 4, 2, 2, 1, 23, 23, 15, 8, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.negative(beta), tf.math.sqrt(grad)))), tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.pow(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2065446779570794, 1.9315354651180414, 1.2941375869281886, 0.9987889585588209, 0.8078187250772944, 0.7404595819982036, 0.6918751429950935, 0.7300191366551275, 0.6516403854011371, 0.6234116252733654, 0.6028572846365926, 0.5895245849905139, 0.5652084236194775, 0.5619130521607264, 0.5241340609463435, 0.5482131100806262, 0.51037839396739], "accuracy": [0.24659886956214905, 0.3555673062801361, 0.5469554662704468, 0.6384889483451843, 0.691850483417511, 0.7187954187393188, 0.7351737022399902, 0.7187954187393188, 0.7539294958114624, 0.759080708026886, 0.7726852297782898, 0.778232753276825, 0.7841764688491821, 0.7923656105995178, 0.7998943328857422, 0.7968564033508301, 0.8043851256370544], "val_loss": [1.8960059029715401, 1.133753742490496, 0.91081816809518, 0.605302061353411, 0.5690774577004569, 0.6027989898409162, 0.5326338495526995, 0.5755367789949689, 0.5196174042565482, 0.4910366875784738, 0.4636671883719308, 0.45428102357046946, 0.5072720391409737, 0.4660107748849051, 0.4729714904512678, 0.4415981428963797, 0.4810929979596819], "val_accuracy": [0.33500000834465027, 0.6476666927337646, 0.6510000228881836, 0.731333315372467, 0.746999979019165, 0.7250000238418579, 0.7590000033378601, 0.7229999899864197, 0.7649999856948853, 0.7836666703224182, 0.7953333258628845, 0.8096666932106018, 0.7770000100135803, 0.7873333096504211, 0.7973333597183228, 0.8026666641235352, 0.7883333563804626]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 2, 6, 1, 0, 8, 5, 2, 9, 3, 8, 1, 0, 4, 2, 2, 9, 1, 6, 2, 9, 5, 1, 2, 0, 3, 2, 4, 6, 6, 0, 8, 8, 6, 7, 4, 7, 7, 0, 6, 9, 2, 7, 4, 3, 5, 8], [2, 0, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 3, 1, 5, 3, 4, 4], [96, 90, 51, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.7951428294181824, "mapping_values": [1, 4, 4, 2, 2, 1, 29, 29, 19, 10, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(grad, tf.math.negative(grad)))))), tf.math.sqrt(tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.pow(grad, grad))), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1708000479058156, 1.718727719372825, 1.4367962588786511, 1.1552340273828146, 1.0032734803362389, 0.981548964630863, 0.8596128316650522, 0.8040141780079474, 0.843554558818209, 0.7608223428437738, 0.7223725871025154, 0.6753480389543008, 0.6425317575619472, 0.638368341389302, 0.6136588057931923, 0.5968156073386596, 0.5917052971594022, 0.5882037682241027, 0.5608414962401621, 0.5388803974811537, 0.5566575540968487, 0.5419813017047801, 0.5148984457539246], "accuracy": [0.26443007588386536, 0.41923126578330994, 0.4967639744281769, 0.5728437304496765, 0.609959065914154, 0.6236956715583801, 0.6736230254173279, 0.6984546184539795, 0.6976621150970459, 0.7106062769889832, 0.719852089881897, 0.7388719916343689, 0.7465327978134155, 0.7518161535263062, 0.7667415142059326, 0.763439416885376, 0.7666094303131104, 0.772288978099823, 0.7860256433486938, 0.7965922355651855, 0.7889314293861389, 0.7866860628128052, 0.8013472557067871], "val_loss": [1.4021314893450056, 1.7508866446358817, 0.9099477018628802, 0.7839053017752511, 0.76111900806427, 0.6860234907695225, 0.6124110732759748, 0.737779072352818, 0.6041460377829415, 0.5918593917574201, 0.6129099471228463, 0.5341387476239886, 0.5412285157612392, 0.5223407404763358, 0.5387892041887555, 0.5034472942352295, 0.47351796286446707, 0.4508887699672154, 0.4535974604742868, 0.49713618414742605, 0.48518615109579905, 0.4646156515393938, 0.4945380006517683], "val_accuracy": [0.4896666705608368, 0.2866666615009308, 0.640333354473114, 0.6136666536331177, 0.6783333420753479, 0.7160000205039978, 0.7273333072662354, 0.7043333053588867, 0.7286666631698608, 0.7196666598320007, 0.7153333425521851, 0.746999979019165, 0.753333330154419, 0.7616666555404663, 0.7493333220481873, 0.7646666765213013, 0.7900000214576721, 0.8130000233650208, 0.8013333082199097, 0.7943333387374878, 0.7983333468437195, 0.793666660785675, 0.7846666574478149]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [69, 66, 89, 50, 85, 46], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 1, 1, 0, 8, 1, 2, 4, 4, 8, 2, 3, 8, 5, 2, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [1, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [96, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.6422857046127319, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.2414142427002326, 2.3047400822713153, 2.2463432194424215, 2.30415958344834, 2.3007377202972807, 2.263823900870234, 2.033608873821662, 1.920475635105325, 1.586673766913872, 1.5565061444666848, 1.500355826566059, 1.2786183255680201, 1.228791976963855, 1.038918941626538, 0.9492006807940716, 0.864264342141205, 0.8227148020681594, 0.7536951672320731, 0.7635221212468584, 0.6707218653096688, 0.7036487869519789, 0.6486981089136242, 0.6023639077051299, 0.5907099146837288, 0.5782004110864472, 0.555370751522819, 0.549409863278378], "accuracy": [0.18835029006004333, 0.10460969805717468, 0.2086910605430603, 0.10038304328918457, 0.10619468986988068, 0.16497160494327545, 0.304979532957077, 0.3745872378349304, 0.4772156774997711, 0.48751816153526306, 0.5148593187332153, 0.5634658336639404, 0.5711266398429871, 0.6296393871307373, 0.6650376319885254, 0.6848500967025757, 0.700700044631958, 0.7209087014198303, 0.7182670831680298, 0.7441553473472595, 0.7353057861328125, 0.7506273984909058, 0.7700436115264893, 0.767401933670044, 0.7833839654922485, 0.785101056098938, 0.7909126877784729], "val_loss": [1.9824754851205009, 1.9601220403398787, 1.9768968990870885, 1.9736262048993791, 1.9669591358729772, 1.775956494467599, 1.6701356683458601, 1.5717874935695104, 1.0925479957035609, 1.3599037442888533, 0.8801350593566895, 0.7878035477229527, 0.7685024397713798, 0.9789739336286273, 0.6151794365474156, 0.7006980010441372, 0.5467160258974347, 0.5203373432159424, 0.5227346249989101, 0.4790828398295811, 0.5581752402441842, 0.451153073992048, 0.5127378872462681, 0.49904610429491314, 0.467089193207877, 0.4704645701817104, 0.47011653014591764], "val_accuracy": [0.10066666454076767, 0.12666666507720947, 0.0976666659116745, 0.09666666388511658, 0.14133332669734955, 0.18733333051204681, 0.4020000100135803, 0.41733333468437195, 0.5763333439826965, 0.4753333330154419, 0.6549999713897705, 0.6786666512489319, 0.6806666851043701, 0.6026666760444641, 0.7120000123977661, 0.7126666903495789, 0.7670000195503235, 0.7553333044052124, 0.7856666445732117, 0.7870000004768372, 0.7559999823570251, 0.8016666769981384, 0.7506666779518127, 0.7673333287239075, 0.7853333353996277, 0.7726666927337646, 0.7926666736602783]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 7, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [4, 66, 89, 50, 85, 46], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 6, 5, 6, 4, 5, 8, 5, 2, 9, 3, 3, 1, 9, 0, 2, 2, 2, 2, 2, 6, 9, 6, 1, 1, 8, 2, 2, 4, 8, 6, 0, 8, 8, 6, 7, 3, 5, 4, 1, 4, 5, 1, 0, 5, 4, 4, 5], [1, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 1, 2, 4, 3, 0, 0, 4, 2, 1, 1, 5, 3, 4, 4], [96, 90, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.22028571367263794, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3027800495252, 2.3020369278488695, 2.3023626863554942, 2.3017900752794507, 2.301130392516467, 2.3009672343786036, 2.301196506482861, 2.29976800782034, 2.298687517997249, 2.3005424197071878, 2.3006629405665975, 2.299153981947581, 2.3006140811961986, 2.300046887458859, 2.29802195563875, 2.2997465184367547, 2.299171845202181, 2.298314364642011, 2.2991870529127945, 2.297617448366644, 2.297301036869735, 2.2980760007943175, 2.297991188620186, 2.298498376454061, 2.296498429206825, 2.297173589810467, 2.2968834879659408, 2.295965489332214, 2.295015888600821, 2.296467299159681, 2.295907421040261, 2.296345722185638, 2.2940787695591336, 2.295363967318844, 2.295568241372069, 2.2952346749482704, 2.295941335429699, 2.294307879862485, 2.2942077496331743, 2.293642650679071, 2.292870635228024, 2.2927187952808246, 2.2932184642536795, 2.292883992336839, 2.292962455762108, 2.292659194918829, 2.293710332646771, 2.2925434370460356, 2.2923678183489473, 2.28989572028096, 2.2910958807056825, 2.291097840108986, 2.2906149712221073, 2.291126598724206, 2.291223924771874, 2.291511578346366, 2.29139820056553, 2.2896499231963534, 2.290601234142539, 2.2895239334789173, 2.2886293171230263, 2.2892485793870376, 2.290576073629288, 2.2870497354946555, 2.2872833226571356, 2.2876058894220264, 2.2904529532799236, 2.28828941709755, 2.287042883204242, 2.2865526597765315, 2.2858103437351907, 2.2861338076794926, 2.286920337125279, 2.287572582211115, 2.2867788208190714, 2.2862489116410725, 2.287461567580062, 2.284357378401257, 2.2861372107575204, 2.2855433506689145, 2.286086644415905, 2.2846785163866796, 2.283927425811036, 2.2858863020491182, 2.2843206283706383, 2.2838694903167513, 2.2835688446774505, 2.2841669878608846, 2.284484037051127, 2.282314523178683, 2.28313728236031, 2.2829175759394724, 2.2834461225321454, 2.282526007795756, 2.2824843722784194, 2.2810691939117005, 2.2820188221977435, 2.2805418820192846, 2.281904065708175, 2.2803412965417555], "accuracy": [0.09074098616838455, 0.08981640636920929, 0.0866464152932167, 0.09126931428909302, 0.09232597798109055, 0.09457138925790787, 0.09866596013307571, 0.09734513610601425, 0.09602430462837219, 0.09774138033390045, 0.0948355570435524, 0.10130762308835983, 0.09589222073554993, 0.10038304328918457, 0.09602430462837219, 0.09668471664190292, 0.10460969805717468, 0.09972262382507324, 0.09945846349000931, 0.1006472036242485, 0.10117553919553757, 0.10460969805717468, 0.09906221181154251, 0.10210011899471283, 0.10368511080741882, 0.10315678268671036, 0.10355303436517715, 0.10051512718200684, 0.10698718577623367, 0.10355303436517715, 0.10210011899471283, 0.10751552134752274, 0.10989301651716232, 0.11187426000833511, 0.10381719470024109, 0.10949676483869553, 0.10553427785634995, 0.11279883980751038, 0.11081759631633759, 0.10606260597705841, 0.11596883088350296, 0.11068551242351532, 0.11253467202186584, 0.11147800832986832, 0.11319508403539658, 0.11689341068267822, 0.11002509295940399, 0.11028926074504852, 0.11728965491056442, 0.12072381377220154, 0.11200633645057678, 0.11517632752656937, 0.11966715008020401, 0.11874257028102875, 0.1220446452498436, 0.11649715900421143, 0.11610091477632523, 0.1200634017586708, 0.12217672914266586, 0.11993131786584854, 0.11781799048185349, 0.1254788041114807, 0.1200634017586708, 0.1220446452498436, 0.12798838317394257, 0.12112006545066833, 0.11676132678985596, 0.12878087162971497, 0.1278562992811203, 0.13036586344242096, 0.13076211512088776, 0.13512085378170013, 0.12376172095537186, 0.12640337646007538, 0.13274335861206055, 0.12468630075454712, 0.13010171055793762, 0.13736626505851746, 0.12798838317394257, 0.1348566859960556, 0.13380002975463867, 0.1348566859960556, 0.13393211364746094, 0.1328754425048828, 0.12996962666511536, 0.13895125687122345, 0.13855500519275665, 0.1450270712375641, 0.13630960881710052, 0.13578127324581146, 0.14053626358509064, 0.13815876841545105, 0.13710209727287292, 0.1422533392906189, 0.1434420794248581, 0.14330999553203583, 0.14317791163921356, 0.14951789379119873, 0.14370624721050262, 0.14436666667461395], "val_loss": [1.9707420212881905, 1.970545836857387, 1.9703491755894251, 1.9701515606471471, 1.969954490661621, 1.9697581699916296, 1.9695607594081335, 1.9693620545523507, 1.9691660744803292, 1.9689675058637346, 1.968771253313337, 1.9685741833278112, 1.968376295907157, 1.9681788172040666, 1.9679835183279855, 1.9677869932992118, 1.967590059552874, 1.9673916271754675, 1.9671961239406042, 1.9670004844665527, 1.966806275503976, 1.9666097504752023, 1.9664148603166853, 1.9662207875932967, 1.9660257611955916, 1.9658323696681432, 1.9656378201075964, 1.9654428618294852, 1.9652477673121862, 1.9650544439043318, 1.964859894343785, 1.9646644592285156, 1.9644713401794434, 1.9642761775425501, 1.9640826497759138, 1.9638875552586146, 1.9636950492858887, 1.9635009765625, 1.9633068357195174, 1.963113512311663, 1.9629192352294922, 1.9627247537885393, 1.9625293867928642, 1.9623354503086634, 1.9621419225420271, 1.9619499615260534, 1.961756978716169, 1.961564200265067, 1.9613689695085799, 1.9611770084926061, 1.9609836850847517, 1.9607898848397392, 1.9605953352791923, 1.9604024205889021, 1.9602089609418596, 1.9600146838596888, 1.9598225866045271, 1.9596319879804338, 1.9594392776489258, 1.959247316632952, 1.9590541975838798, 1.9588616234915597, 1.9586670058114188, 1.9584731374468123, 1.958278042929513, 1.9580838339669364, 1.9578922816685267, 1.9577006612505232, 1.9575065204075404, 1.9573116983686174, 1.9571163313729423, 1.956923348563058, 1.9567286627633231, 1.9565354074750627, 1.9563414028712682, 1.9561497824532645, 1.9559568677629744, 1.9557628631591797, 1.9555698803492956, 1.9553757395063127, 1.9551824160984583, 1.95498868397304, 1.9547927720206124, 1.9545989717755998, 1.9544062614440918, 1.954212256840297, 1.9540179797581263, 1.9538251331874303, 1.9536309242248535, 1.953434876033238, 1.953239849635533, 1.953047207423619, 1.9528532028198242, 1.9526596750531877, 1.9524646486554826, 1.9522705078125, 1.9520770481654577, 1.9518837247576033, 1.9516874722072057, 1.9514921052115304], "val_accuracy": [0.03966666758060455, 0.04100000113248825, 0.04233333468437195, 0.0430000014603138, 0.044333335012197495, 0.045666664838790894, 0.045666664838790894, 0.04633333161473274, 0.047333333641290665, 0.04933333396911621, 0.05133333429694176, 0.05366666615009308, 0.054999999701976776, 0.0560000017285347, 0.056333333253860474, 0.05833333358168602, 0.059333331882953644, 0.061000000685453415, 0.06233333423733711, 0.06400000303983688, 0.06533333659172058, 0.06700000166893005, 0.06933332979679108, 0.07066666334867477, 0.07133333384990692, 0.07199999690055847, 0.07400000095367432, 0.07533333450555801, 0.07733333110809326, 0.07833333313465118, 0.07900000363588333, 0.08100000023841858, 0.08266666531562805, 0.08366666734218597, 0.08500000089406967, 0.08733333647251129, 0.08866667002439499, 0.08966666460037231, 0.09133332967758179, 0.09399999678134918, 0.09566666930913925, 0.0989999994635582, 0.10166666656732559, 0.10400000214576721, 0.10700000077486038, 0.10833333432674408, 0.10866666585206985, 0.1106666699051857, 0.11400000005960464, 0.11500000208616257, 0.11633333563804626, 0.11766666918992996, 0.11966666579246521, 0.12066666781902313, 0.12333333492279053, 0.12600000202655792, 0.12866666913032532, 0.13066667318344116, 0.1313333362340927, 0.13433332741260529, 0.1366666704416275, 0.13899999856948853, 0.14100000262260437, 0.1433333307504654, 0.1459999978542328, 0.1483333259820938, 0.15166667103767395, 0.1550000011920929, 0.1576666682958603, 0.1589999943971634, 0.1599999964237213, 0.16300000250339508, 0.16433332860469818, 0.16566666960716248, 0.16599999368190765, 0.16866666078567505, 0.17000000178813934, 0.17133332788944244, 0.17233332991600037, 0.1743333339691162, 0.1756666600704193, 0.17866666615009308, 0.18000000715255737, 0.18199999630451202, 0.18299999833106995, 0.18433333933353424, 0.18566666543483734, 0.18933333456516266, 0.1913333386182785, 0.1940000057220459, 0.195333331823349, 0.1966666728258133, 0.19733333587646484, 0.20033332705497742, 0.20233333110809326, 0.20533333718776703, 0.20666666328907013, 0.20866666734218597, 0.2123333364725113, 0.21466666460037231]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 1, 1, 0, 8, 1, 2, 4, 4, 8, 2, 3, 8, 5, 2, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [96, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.negative(grad), tf.math.add(beta, grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07885351777076721, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 0, 1, 0, 8, 1, 2, 4, 4, 8, 2, 3, 8, 5, 2, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 3, 1, 3, 3, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [96, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [3, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 11, 11, 7, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.add(grad, alpha)))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06736230105161667, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [8, 1, 1, 0, 8, 1, 2, 4, 4, 8, 2, 3, 8, 5, 2, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [3, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [96, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0664377212524414, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 7, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 1, 1, 0, 6, 1, 2, 8, 5, 4, 9, 3, 5, 1, 0, 9, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 5, 3, 3, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [96, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 24, 24, 15, 9, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(beta)), grad)), grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.add(tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.negative(grad)), beta))), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06656980514526367, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 7, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 2, 5, 6, 4, 5, 8, 5, 2, 9, 3, 3, 1, 9, 0, 2, 2, 4, 2, 6, 2, 9, 1, 1, 3, 0, 3, 2, 4, 2, 6, 0, 8, 8, 6, 3, 3, 5, 4, 1, 4, 0, 1, 7, 5, 4, 4, 0], [2, 0, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 1, 3, 4, 4], [96, 77, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 7, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [3, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 2, 1, 0, 6, 1, 4, 8, 5, 4, 9, 3, 8, 1, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [96, 97, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 7, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 5, 6, 4, 5, 8, 5, 2, 9, 3, 3, 1, 9, 0, 2, 2, 2, 2, 6, 2, 9, 5, 1, 3, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7, 3, 5, 4, 1, 4, 0, 1, 7, 5, 4, 4, 5], [2, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5, 3, 4, 4], [96, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 14, 14, 9, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.square(alpha), grad)))), tf.math.sqrt(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0664377212524414, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 3, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [9, 1, 1, 0, 2, 1, 2, 8, 5, 5, 2, 3, 8, 1, 8, 0, 2, 2, 2, 1, 6, 3, 9, 5, 1, 0, 0, 3, 2, 4, 8, 6, 0, 8, 0, 6, 7], [3, 1, 3, 3, 3, 0, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [14, 90, 16, 0, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [2, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 7, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [48, 66, 89, 50, 85, 46], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 6, 9, 6, 1, 4, 8, 5, 4, 9, 3, 8, 1, 0, 0, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 0, 3, 3, 0, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [96, 97, 16, 66, 40, 57, 35, 9, 54, 64], [1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [1, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 0, 2, 8, 2, 4, 0, 1, 5, 3, 1, 2, 6, 3, 6, 5, 8], [2, 2, 2, 0, 1, 2, 2, 2, 0, 2, 3, 3, 0], [17, 66, 89, 50, 85, 46], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [4, 1, 1, 4, 1, 2, 2, 8, 5, 0, 9, 3, 5, 1, 0, 9, 2, 2, 2, 6, 6, 3, 9, 5, 1, 2, 0, 3, 2, 4, 8, 6, 0, 8, 8, 6, 7], [2, 3, 1, 3, 3, 2, 3, 2, 3, 3, 3, 3, 2, 3, 1, 3, 4, 3, 0, 0, 4, 1, 1, 1, 5], [96, 90, 16, 66, 40, 57, 35, 9, 54, 64], [0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0], [6, 9, 3, 4], [4, 0], [69, 2], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 4, 3, 9, 3, 0, 1, 3, 2, 2, 5], [1, 2, 0, 2, 0, 2, 2], [40, 23, 13, 96, 41]], "fitness": -0.07457143068313599, "mapping_values": [1, 4, 4, 2, 2, 0, 24, 24, 16, 8, 2, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.pow(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.sqrt(grad), alpha)), tf.math.square(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.negative(grad), tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), beta))), grad)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302326684299792, 2.3008469255168, 2.3005827575737, 2.300087831496185, 2.2993541890918903, 2.2995432398464417, 2.2992870554774743, 2.2980147708345635, 2.2977146720999597, 2.2992373341976173, 2.299172928493572, 2.2989807657955534, 2.2999746428189765, 2.2994764107502745, 2.298674398204827, 2.300174414347884], "accuracy": [0.09192973375320435, 0.09166556596755981, 0.09417514503002167, 0.09509972482919693, 0.09642054885625839, 0.10447761416435242, 0.10157178342342377, 0.10593052208423615, 0.10685510188341141, 0.10315678268671036, 0.10632677376270294, 0.10949676483869553, 0.09734513610601425, 0.09972262382507324, 0.10342095047235489, 0.10170386731624603], "val_loss": [1.97001280103411, 1.969557762145996, 1.9692376000540597, 1.9690653937203544, 1.9690450259617396, 1.969099657876151, 1.9690211841038294, 1.9689813341413225, 1.9690816061837333, 1.9691023145403181, 1.9692237036568778, 1.969491754259382, 1.9698066711425781, 1.9701038088117326, 1.9703868457249232, 1.9706117085048132], "val_accuracy": [0.04933333396911621, 0.052666667848825455, 0.06199999898672104, 0.06700000166893005, 0.07266666740179062, 0.07566666603088379, 0.08033332973718643, 0.08399999886751175, 0.08766666799783707, 0.08866667002439499, 0.08933333307504654, 0.08866667002439499, 0.08500000089406967, 0.0793333351612091, 0.07633333653211594, 0.07800000160932541]}}]