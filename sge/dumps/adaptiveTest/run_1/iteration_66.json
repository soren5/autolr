[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.7148571610450745, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.303443330264189, 2.2995516678219725, 2.2922894187559937, 2.284350738580815, 2.27205624644625, 2.25822593274291, 2.2416399881241738, 2.2214183751948835, 2.1968089726150404, 2.166194575353463, 2.1319894387564244, 2.0882807833218475, 2.0278466408042672, 1.9580128869171456, 1.876294707940192, 1.786290875247693, 1.6901679705351635, 1.587031590184358, 1.517526780247389, 1.4455469379241142, 1.410232426877413, 1.3956425959612668, 1.3894409388756441, 1.3868656263942212, 1.4018111384666008, 1.3615789029419052, 1.3369305268758638, 1.2707241953891486, 1.1997972644000494, 1.115570500038398, 1.07008111042322, 0.99323234026222, 0.9580693330432225, 0.9359754688231826, 0.9277587599679384, 0.9259034906396021, 0.9282282820042052, 0.9306956474429282], "accuracy": [0.0878351628780365, 0.09932637959718704, 0.1228371411561966, 0.1344604343175888, 0.17223615944385529, 0.2122572958469391, 0.2506934404373169, 0.2864879071712494, 0.31620657444000244, 0.34566107392311096, 0.3667943477630615, 0.3763043284416199, 0.39941883087158203, 0.4127592146396637, 0.4247787594795227, 0.4407607913017273, 0.4414212107658386, 0.4649319648742676, 0.4695548713207245, 0.4983489513397217, 0.5153876543045044, 0.520671010017395, 0.5292563438415527, 0.5336151123046875, 0.5444459319114685, 0.5507858991622925, 0.5626733303070068, 0.5845991373062134, 0.609430730342865, 0.6252806782722473, 0.6302998065948486, 0.6429798007011414, 0.6507726907730103, 0.6479989290237427, 0.6427156329154968, 0.6527539491653442, 0.6581693291664124, 0.6584334969520569], "val_loss": [1.968968459538051, 1.964472770690918, 1.9572231428963798, 1.9474050658089774, 1.9352126802716936, 1.9207076345171248, 1.9038738523210799, 1.884110655103411, 1.8601531301225935, 1.8302616391863142, 1.7924697058541434, 1.7447124208722795, 1.684624399457659, 1.610053266797747, 1.5207547460283553, 1.419234377997262, 1.3115694522857666, 1.2070567267281669, 1.1136823722294398, 1.034560169492449, 0.9675250394003732, 0.9085743427276611, 0.8594291380473545, 0.8301223175866264, 0.8195928505488804, 0.7914764710835048, 0.7549094813210624, 0.7432949032102313, 0.7417658226830619, 0.7282834223338536, 0.7001201936176845, 0.6738514048712594, 0.6669356652668544, 0.6746299948011126, 0.6866157054901123, 0.6985879966190883, 0.7106384720121112, 0.7203372546604702], "val_accuracy": [0.04766666516661644, 0.07866666465997696, 0.14733333885669708, 0.24766667187213898, 0.33033332228660583, 0.3733333349227905, 0.3930000066757202, 0.4126666784286499, 0.42800000309944153, 0.4386666715145111, 0.4556666612625122, 0.46566668152809143, 0.47966668009757996, 0.49266666173934937, 0.503333330154419, 0.5166666507720947, 0.5426666736602783, 0.5699999928474426, 0.5989999771118164, 0.628000020980835, 0.6460000276565552, 0.6553333401679993, 0.6643333435058594, 0.6639999747276306, 0.6420000195503235, 0.6673333048820496, 0.6903333067893982, 0.7009999752044678, 0.7026666402816772, 0.706333339214325, 0.70333331823349, 0.7103333473205566, 0.7176666855812073, 0.7139999866485596, 0.7086666822433472, 0.6990000009536743, 0.7023333311080933, 0.7110000252723694]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [9, 7, 6, 5, 5, 7, 3, 9], [5, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.7148571610450745, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.303443330264189, 2.2995516993130014, 2.292289450247022, 2.284350707089786, 2.27205624644625, 2.258225901251881, 2.241639956633145, 2.2214183437038546, 2.196808941124012, 2.1661945573720853, 2.1319894072653955, 2.0882806888487613, 2.0278466272946156, 1.9580129611257548, 1.8762945414943593, 1.7862904659115548, 1.6901676668986636, 1.5870306073021123, 1.5175266835856762, 1.4455460117414658, 1.4102310416972743, 1.3956429108243182, 1.3894485323546568, 1.3868804918288429, 1.401825426166808, 1.36158507789178, 1.3369373096813222, 1.2707287845295403, 1.1998088760241195, 1.1155785202995787, 1.070092343808543, 0.9932457614080419, 0.9580985420352637, 0.9360109366729448, 0.9277757804596256, 0.9259154754717274, 0.9282369818732786, 0.9307075159235748], "accuracy": [0.0878351628780365, 0.09932637959718704, 0.1228371411561966, 0.1344604343175888, 0.17223615944385529, 0.2122572958469391, 0.2506934404373169, 0.2864879071712494, 0.31620657444000244, 0.34566107392311096, 0.3667943477630615, 0.3763043284416199, 0.39941883087158203, 0.4127592146396637, 0.4247787594795227, 0.4407607913017273, 0.4414212107658386, 0.46506404876708984, 0.4695548713207245, 0.4982168674468994, 0.5153876543045044, 0.520671010017395, 0.5292563438415527, 0.5336151123046875, 0.5444459319114685, 0.5506538152694702, 0.5628054141998291, 0.5844670534133911, 0.6095628142356873, 0.6254127621650696, 0.6302998065948486, 0.6429798007011414, 0.6505085229873657, 0.6479989290237427, 0.6427156329154968, 0.652621865272522, 0.6580372452735901, 0.6585655808448792], "val_loss": [1.968968459538051, 1.964472838810512, 1.9572231428963798, 1.9474050658089774, 1.9352126802716936, 1.9207075663975306, 1.9038738523210799, 1.884110655103411, 1.8601530620029993, 1.8302617073059082, 1.7924697058541434, 1.7447124208722795, 1.684624433517456, 1.6100530283791679, 1.520754269191197, 1.4192335946219308, 1.311568328312465, 1.207055194037301, 1.1136798858642578, 1.034555162702288, 0.9675185680389404, 0.9085702555520194, 0.8594303471701485, 0.8301294360842023, 0.8195941277912685, 0.791474563734872, 0.7549101625170026, 0.74330016544887, 0.7417672531945365, 0.7282851934432983, 0.7001253877367292, 0.6738652501787458, 0.6669518777302333, 0.6746405533381871, 0.6866252422332764, 0.6985973290034703, 0.710654786654881, 0.7203596830368042], "val_accuracy": [0.04766666516661644, 0.07866666465997696, 0.14733333885669708, 0.24766667187213898, 0.33033332228660583, 0.3733333349227905, 0.3930000066757202, 0.4126666784286499, 0.42800000309944153, 0.4386666715145111, 0.4556666612625122, 0.46566668152809143, 0.47966668009757996, 0.49266666173934937, 0.503333330154419, 0.5166666507720947, 0.5426666736602783, 0.5699999928474426, 0.5989999771118164, 0.628000020980835, 0.6460000276565552, 0.6553333401679993, 0.6643333435058594, 0.6639999747276306, 0.6420000195503235, 0.6676666736602783, 0.6903333067893982, 0.7009999752044678, 0.7026666402816772, 0.706333339214325, 0.70333331823349, 0.7103333473205566, 0.7176666855812073, 0.7139999866485596, 0.7086666822433472, 0.6993333101272583, 0.7026666402816772, 0.7110000252723694]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.7145714163780212, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.303443330264189, 2.2995516993130014, 2.292289436737371, 2.284350707089786, 2.272056241974524, 2.258225757306388, 2.2416396372511307, 2.221417461955048, 2.1968075196504624, 2.166192780459294, 2.131987374047121, 2.0882781112450712, 2.0278429587314695, 1.958009425423259, 1.8762907200422678, 1.7862879943381589, 1.6901676845493854, 1.5870282549852426, 1.5175235841913843, 1.4455429477430906, 1.4102242870133046, 1.3956375776611347, 1.389436577604337, 1.3868736190692608, 1.4018228918632827, 1.361571416248971, 1.3369158080634722, 1.2707208590563561, 1.1998267844368549, 1.1156087767068563, 1.0701191662450933, 0.9932487919708174, 0.9580975583499969, 0.9360473981119024, 0.9278168001462754, 0.9259447255516884, 0.9282627304263827, 0.9307237840237288], "accuracy": [0.0878351628780365, 0.09932637959718704, 0.1228371411561966, 0.1344604343175888, 0.17223615944385529, 0.2122572958469391, 0.2506934404373169, 0.2864879071712494, 0.31620657444000244, 0.3457931578159332, 0.3667943477630615, 0.3763043284416199, 0.39928674697875977, 0.4127592146396637, 0.4247787594795227, 0.44089287519454956, 0.4414212107658386, 0.4647998809814453, 0.46968695521354675, 0.4983489513397217, 0.5153876543045044, 0.520671010017395, 0.5292563438415527, 0.5336151123046875, 0.5443138480186462, 0.5506538152694702, 0.5628054141998291, 0.5844670534133911, 0.609430730342865, 0.6256769299507141, 0.6302998065948486, 0.6429798007011414, 0.6505085229873657, 0.6479989290237427, 0.6429798007011414, 0.652621865272522, 0.657508909702301, 0.6588297486305237], "val_loss": [1.968968459538051, 1.9644729069301061, 1.9572232110159737, 1.9474049976893835, 1.9352126802716936, 1.9207072939191545, 1.9038730348859514, 1.8841094289507185, 1.8601515633719308, 1.8302600724356515, 1.7924674579075404, 1.7447095598493303, 1.6846210956573486, 1.6100498608180456, 1.520751885005406, 1.4192317894526891, 1.31156553540911, 1.207050153187343, 1.113673516682216, 1.0345491681780135, 0.967512811933245, 0.9085615362439837, 0.859418545450483, 0.8301191840853009, 0.8195887293134417, 0.7914554732186454, 0.7548964193889073, 0.7433213336127145, 0.7418310982840401, 0.7283484765461513, 0.7001467943191528, 0.6738669361386981, 0.6669821739196777, 0.6746980803353446, 0.6866789715630668, 0.6986451830182757, 0.7106941768101284, 0.7203846829278129], "val_accuracy": [0.04766666516661644, 0.07866666465997696, 0.14733333885669708, 0.24766667187213898, 0.33033332228660583, 0.3733333349227905, 0.3930000066757202, 0.4126666784286499, 0.42800000309944153, 0.4386666715145111, 0.4556666612625122, 0.46566668152809143, 0.47966668009757996, 0.49266666173934937, 0.503333330154419, 0.5166666507720947, 0.5426666736602783, 0.5696666836738586, 0.5989999771118164, 0.628000020980835, 0.6460000276565552, 0.6556666493415833, 0.6643333435058594, 0.6639999747276306, 0.6420000195503235, 0.6669999957084656, 0.6899999976158142, 0.7009999752044678, 0.7026666402816772, 0.706333339214325, 0.70333331823349, 0.7103333473205566, 0.7176666855812073, 0.7136666774749756, 0.7086666822433472, 0.6990000009536743, 0.7026666402816772, 0.7110000252723694]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07119271159172058, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.4039103220545495, 3.564809138008695, 6.467975635223731, 11.229572075453449, 17.77895937581907, 26.77087307064493, 37.448410959764004], "accuracy": [0.09166556596755981, 0.09998679161071777, 0.10210011899471283, 0.10038304328918457, 0.10011887550354004, 0.09853387624025345, 0.09681680053472519], "val_loss": [2.183520930153983, 3.3617442675999234, 5.781754902430943, 9.353759765625, 14.13108389718192, 20.22251456124442, 27.75063214983259], "val_accuracy": [0.09966666996479034, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 1, 1, 1], [1, 3, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09245806187391281, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 0, 1, 1], [1, 3, 9, 3, 2], [1, 0, 3], [23, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), grad), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07053229212760925, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [3, 4, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4, 4, 0, 2, 5, 5, 6, 8, 9, 5, 8, 8, 5, 9, 5], [2, 2, 2, 0, 3, 1, 0, 0, 0, 1, 3, 2], [31, 32, 28, 90, 45, 78], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 9, 1, 2], [0, 1, 3, 3], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 38, 26, 12, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.pow(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))))), tf.math.square(tf.math.add(alpha, grad))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 0, 0, 1, 1, 1], [2, 3, 9, 1, 2], [3, 2, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07053229212760925, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 6, 5, 5, 7, 3, 9], [4, 0, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [2], [64], [0, 0, 0, 1, 1, 1], [5, 8, 2, 3, 2, 3, 9], [3, 1, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.sqrt(tf.math.add(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [1, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 4, 3, 2, 3, 1, 1, 4], [3, 0, 2, 3, 2, 2, 3, 2, 2], [92, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 3, 1, 1, 0, 0, 18, 9, 9, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.add(tf.math.multiply(sigma, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(sigma, tf.math.subtract(beta, beta))), tf.math.pow(sigma, beta))), beta)", "other_info": {"loss": [2.8448650282072654, 30.752228415542984, 29.758530343796018, 26.94010256549481, 24.313774724347386, 18.6281899078222], "accuracy": [0.09866596013307571, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0430056027003696, 15.648568834577288, 19.411691393171036, 20.05740683419364, 18.755428314208984, 14.052240644182477], "val_accuracy": [0.0989999994635582, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 0, 9, 1, 2], [3, 0, 0], [19, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301994799465441, 2.3045982573845163, 2.311629398198821, 2.3893817372373096, 698.3076413043376, 29020971.030591648], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.10038304328918457, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973930835723877, 1.9776759828839983, 1.9908407075064523, 2.518095016479492, 17828.67801339286, 783724982.8571428], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0], [9, 7, 6, 5, 5, 7, 3, 9], [4, 5, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [0, 1, 0, 1, 1, 1], [1, 8, 4, 3, 2, 3, 9], [3, 0, 2, 3, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3454.6297416596317, 64919.889700419364, 287621.73135566636, 794644.6870294545, 1689785.4803526616, 3144196.0083212256], "accuracy": [0.09760929644107819, 0.10170386731624603, 0.10381719470024109, 0.09959053993225098, 0.09813763201236725, 0.09826971590518951], "val_loss": [12598.451729910714, 98010.76785714286, 328021.41964285716, 774406.0178571428, 1508943.8214285714, 2603412.1428571427], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [5, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 3, 2], [2, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 5, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [7], [64], [1, 0, 0, 1, 1, 1], [1, 6, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1], [9, 7, 6, 5, 5, 7, 3, 9], [5, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 3, 2], [3, 2, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(beta, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 0, 1], [6, 0, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.09799999743700027, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.679638342944044e+27, 2512.490622481524, 2676.2335552215072, 2238.338450332942, 2245.215166250382, 2383.1934303502367], "accuracy": [0.13049794733524323, 0.10170386731624603, 0.10170386731624603, 0.09813763201236725, 0.10091137140989304, 0.09245806187391281], "val_loss": [2400.089773995536, 1683.7758091517858, 946.3413434709821, 2487.995535714286, 2396.4338727678573, 2395.1490652901784], "val_accuracy": [0.10333333164453506, 0.1003333330154419, 0.10233332961797714, 0.09833333641290665, 0.09666666388511658, 0.10333333164453506]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [1, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [0], [64], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 8, 4, 3, 2, 3, 9], [3, 0, 2, 3, 1], [92, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303905487343966, 2.3030436717917526, 2.3019430751672054, 2.3028589405041675, 2.3023783601333343, 2.3028738189760753], "accuracy": [0.08598599582910538, 0.09166556596755981, 0.09628847241401672, 0.08453308790922165, 0.08809932321310043, 0.0886276587843895], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]