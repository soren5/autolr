[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 2, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 1, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.7374285459518433, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.303578537972596, 2.298144145837597, 2.2933387373101835, 2.2845325526654556, 2.272087342168173, 2.256668935283741, 2.240095564088077, 2.2194549036284226, 2.196359603947589, 2.1669289381465324, 2.1307093892445765, 2.083453895928853, 2.0264267483407545, 1.9548462869437333, 1.8733842771255802, 1.7762090789171148, 1.6798743778105818, 1.590949083300409, 1.5089816299994483, 1.4676052624791007, 1.4096629034652528, 1.3925250564284721, 1.3872321529505574, 1.3825304178498157, 1.396688765806214, 1.3863432364866262, 1.3270587171971002, 1.2574794273240424, 1.1820507233468156, 1.1248987281736587, 1.0554227031469188, 0.9983537487617777, 0.9588800485674825, 0.9333475073409544, 0.9227590392908447, 0.9287367685832179, 0.9294181588051609, 0.9372560610120575, 0.9480494228509659, 0.9399479417564091, 0.9240447089908587, 0.9111755363945286, 0.8859208134722479, 0.8582269244457925, 0.8392308158818458], "accuracy": [0.08611807972192764, 0.09813763201236725, 0.11927089840173721, 0.13961167633533478, 0.17276449501514435, 0.21582353115081787, 0.258090078830719, 0.2953374683856964, 0.31726324558258057, 0.3369435966014862, 0.36124685406684875, 0.38502180576324463, 0.39347511529922485, 0.4138158857822418, 0.4315149784088135, 0.4419495463371277, 0.44828951358795166, 0.4640074074268341, 0.4827631711959839, 0.49108439683914185, 0.5130101442337036, 0.5196143388748169, 0.5292563438415527, 0.5378417372703552, 0.5362567901611328, 0.5482763051986694, 0.563730001449585, 0.5890899300575256, 0.6003170013427734, 0.6211860775947571, 0.6357152462005615, 0.641791045665741, 0.6490556001663208, 0.6544709801673889, 0.655527651309967, 0.655527651309967, 0.6605468392372131, 0.6597543358802795, 0.6672830581665039, 0.6659622192382812, 0.6686038970947266, 0.6745476126670837, 0.6767930388450623, 0.6814159154891968, 0.6873596906661987], "val_loss": [1.9689512252807617, 1.96444000516619, 1.9571612903050013, 1.9472690990992956, 1.9350039618355888, 1.9204147202628, 1.903390543801444, 1.8833964211600167, 1.8591036796569824, 1.828878947666713, 1.7906817708696638, 1.7423127719334193, 1.6814640590122767, 1.606201410293579, 1.5161971364702498, 1.4140833105359758, 1.3065096650804793, 1.2029003756386893, 1.111103160040719, 1.0334819725581579, 0.9670030389513288, 0.9074147428785052, 0.8572328601564679, 0.8259288242885044, 0.8123402765819004, 0.7878515550068447, 0.7518417324338641, 0.7381041901452201, 0.7358517476490566, 0.7232623270579747, 0.6977130855832782, 0.674414941242763, 0.6693580150604248, 0.6773304768971035, 0.6889849901199341, 0.7004140785762242, 0.7116530111857823, 0.7195824725287301, 0.7210955619812012, 0.713495135307312, 0.6970061915261405, 0.6741085052490234, 0.6498347350529262, 0.6285396644047329, 0.6133655309677124], "val_accuracy": [0.04766666516661644, 0.08033332973718643, 0.1509999930858612, 0.24966666102409363, 0.32899999618530273, 0.37299999594688416, 0.3889999985694885, 0.41066667437553406, 0.4300000071525574, 0.44733333587646484, 0.46566668152809143, 0.47566667199134827, 0.4883333444595337, 0.500333309173584, 0.5116666555404663, 0.5243333578109741, 0.5503333210945129, 0.5786666870117188, 0.6086666584014893, 0.6353333592414856, 0.6510000228881836, 0.6583333611488342, 0.6629999876022339, 0.6660000085830688, 0.6603333353996277, 0.6690000295639038, 0.690666675567627, 0.7013333439826965, 0.703000009059906, 0.7066666483879089, 0.7066666483879089, 0.7103333473205566, 0.7170000076293945, 0.7163333296775818, 0.7146666646003723, 0.7113333344459534, 0.7136666774749756, 0.7260000109672546, 0.7303333282470703, 0.7323333621025085, 0.7303333282470703, 0.7300000190734863, 0.7303333282470703, 0.7296666502952576, 0.7306666374206543]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.7371428608894348, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3035786009546535, 2.298144145837597, 2.2933387373101835, 2.2845325526654556, 2.272087454622637, 2.256668935283741, 2.2400955955791058, 2.2194549351194515, 2.196359603947589, 2.1669289381465324, 2.1307094342452566, 2.0834538779474756, 2.026426815794538, 1.9548462239616755, 1.8733838925256454, 1.7762084873896296, 1.6798739167661747, 1.590947879933725, 1.5089816367070374, 1.4676066346219534, 1.4096651592621194, 1.3925274945583956, 1.387236755159726, 1.382542222561129, 1.3966946281761368, 1.3863421642643319, 1.3270472930863613, 1.2574749108806909, 1.182050329819174, 1.124889848412083, 1.055408531412425, 0.9983344029095415, 0.958856856330133, 0.9333431137834699, 0.9227613648560856, 0.9287431405094778, 0.9294302109651058, 0.9372794265130476, 0.9480639813740208, 0.9399670704307652, 0.924049834643908, 0.9111646208166683, 0.885914906652738, 0.8582375320728822, 0.8392845061099005], "accuracy": [0.08611807972192764, 0.09813763201236725, 0.11927089840173721, 0.13961167633533478, 0.17276449501514435, 0.21582353115081787, 0.258090078830719, 0.29520538449287415, 0.31726324558258057, 0.3369435966014862, 0.36124685406684875, 0.38502180576324463, 0.39347511529922485, 0.4138158857822418, 0.4315149784088135, 0.4419495463371277, 0.44828951358795166, 0.4640074074268341, 0.4827631711959839, 0.49108439683914185, 0.5130101442337036, 0.5196143388748169, 0.5292563438415527, 0.5378417372703552, 0.5361247062683105, 0.5481442213058472, 0.563730001449585, 0.5890899300575256, 0.6001849174499512, 0.6210539937019348, 0.6355831623077393, 0.6416589617729187, 0.6490556001663208, 0.6547351479530334, 0.654999315738678, 0.6553955674171448, 0.6606789231300354, 0.6598864197731018, 0.6670188903808594, 0.6659622192382812, 0.6687359809875488, 0.6745476126670837, 0.6769251227378845, 0.6811517477035522, 0.6869634389877319], "val_loss": [1.9689512252807617, 1.96444000516619, 1.9571612903050013, 1.9472690990992956, 1.9350039618355888, 1.920414856501988, 1.903390543801444, 1.8833963530404227, 1.8591036115373885, 1.828878947666713, 1.7906818389892578, 1.7423127038138253, 1.6814638887132918, 1.6062010356358118, 1.5161965574537004, 1.4140823228018624, 1.3065085070473808, 1.2029002734592982, 1.1111047608511788, 1.0334844929831368, 0.9670055253165108, 0.9074170248849052, 0.8572344609669277, 0.8259308508464268, 0.8123422690800258, 0.7878503288541522, 0.7518363850457328, 0.7381045477730888, 0.7358603307179042, 0.7232685089111328, 0.6977126598358154, 0.6744053193501064, 0.6693517139979771, 0.6773300170898438, 0.6889918531690326, 0.7004271064485822, 0.7116776193891253, 0.7196046454565865, 0.7211148738861084, 0.713503190449306, 0.6970004694802421, 0.6740999902997699, 0.649833219391959, 0.6285597596849714, 0.6133990287780762], "val_accuracy": [0.04766666516661644, 0.08033332973718643, 0.1509999930858612, 0.24966666102409363, 0.32899999618530273, 0.37299999594688416, 0.3889999985694885, 0.41066667437553406, 0.4300000071525574, 0.44733333587646484, 0.46566668152809143, 0.47566667199134827, 0.4883333444595337, 0.500333309173584, 0.5116666555404663, 0.5243333578109741, 0.5503333210945129, 0.5789999961853027, 0.6086666584014893, 0.6353333592414856, 0.6510000228881836, 0.6583333611488342, 0.6629999876022339, 0.6660000085830688, 0.6600000262260437, 0.6690000295639038, 0.690666675567627, 0.7013333439826965, 0.703000009059906, 0.7066666483879089, 0.706333339214325, 0.7103333473205566, 0.7173333168029785, 0.7160000205039978, 0.7143333554267883, 0.7113333344459534, 0.7133333086967468, 0.7263333201408386, 0.7303333282470703, 0.7326666712760925, 0.7306666374206543, 0.7303333282470703, 0.7306666374206543, 0.7296666502952576, 0.7306666374206543]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [1, 1, 0, 1, 1, 1], [1, 3, 9, 3, 2], [0, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026128235651817, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1], [9, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [2], [64], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 8, 2, 3, 2, 3, 9], [3, 1, 2, 2, 0], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(sigma, alpha), beta), tf.math.multiply(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [3, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1, 1], [6, 3, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 2, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [9, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07872143387794495, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.40364766530294, 3.495018106331332, 6.411398277212175, 11.290767965315514, 17.96719064008385, 26.34376025070777, 37.16691344884314], "accuracy": [0.09391097724437714, 0.10474177449941635, 0.10500594228506088, 0.09589222073554993, 0.09325055778026581, 0.09826971590518951, 0.10170386731624603], "val_loss": [2.183520930153983, 3.3617442675999234, 5.781754902430943, 9.353759765625, 14.13108389718192, 20.22251456124442, 27.75063214983259], "val_accuracy": [0.09966666996479034, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 3, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [98], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 3, 2], [0, 0, 2], [10, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [305510109.6715158, 5743536806.2934885, 26488239465.531105, 74869322691.54193, 161045383422.54602, 291673168217.977], "accuracy": [0.09813763201236725, 0.10553427785634995, 0.10355303436517715, 0.0956280529499054, 0.09377889335155487, 0.09826971590518951], "val_loss": [1136734537.142857, 9089529270.857143, 30672244150.857143, 72698705627.42857, 141983055872.0, 245338154130.2857], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [1, 0, 0, 1, 1, 1], [1, 6, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07687227427959442, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 2, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 3, 2], [2, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07647603005170822, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [9, 7, 6, 5, 5, 7, 3, 9], [5, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [4], [64], [0, 1, 1, 1, 1, 1], [1, 3, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [3, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [0, 0, 1], [3, 2, 8, 4], [0], [64], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 8, 4, 3, 2, 3, 9], [3, 0, 2, 3, 2], [92, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 3, 1, 1, 0, 0, 12, 7, 5, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(sigma), tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), beta), sigma), tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 0, 1], [1, 3, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.337937433863549, 2.6656412029027026, 3.644392397740356, 5.416057885204875, 7.868198139572093, 10.907033141829853, 14.781031008362534, 19.39955227788508], "accuracy": [0.09060890227556229, 0.10474177449941635, 0.10328886657953262, 0.09457138925790787, 0.09285431355237961, 0.09826971590518951, 0.10130762308835983, 0.1010434553027153], "val_loss": [2.0308243887765065, 2.3596223422459195, 3.1377385003226146, 4.411685126168387, 6.144138199942453, 8.320453098842076, 10.954773221697126, 14.072442735944476], "val_accuracy": [0.0976666659116745, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 0, 1], [1, 7, 9, 3, 2], [3, 0, 3], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [2, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 3, 9, 1, 2], [0, 1, 3, 3], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [3], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [6], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 3, 2], [3, 0, 2], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(grad, tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [3.5069791783817052e+25, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08492933213710785, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [0, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 3, 2], [3, 0, 3], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07872143387794495, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 2, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 0, 1, 1, 1, 1], [1, 3, 9, 3, 2], [3, 1, 0], [7, 52, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.multiply(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, alpha), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.40364766530294, 3.495018106331332, 6.411398277212175, 11.290767965315514, 17.96719064008385, 26.34376025070777, 37.16691344884314], "accuracy": [0.09391097724437714, 0.10474177449941635, 0.10500594228506088, 0.09589222073554993, 0.09325055778026581, 0.09826971590518951, 0.10170386731624603], "val_loss": [2.183520930153983, 3.3617442675999234, 5.781754902430943, 9.353759765625, 14.13108389718192, 20.22251456124442, 27.75063214983259], "val_accuracy": [0.09966666996479034, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [1, 0, 2, 2, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 0, 1, 1], [1, 3, 9, 3, 2], [3, 1, 2], [7, 52, 13]], "fitness": -0.04342857003211975, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.3040414413267736, 2.301668347841272, 2.302971785047413, 2.303388906208563, 2.302430919731109, 2.301811794327109], "accuracy": [0.08532558381557465, 0.08849557489156723, 0.09602430462837219, 0.09140139818191528, 0.09219389408826828, 0.09100515395402908], "val_loss": [1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983, 1.9705913407461983], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1], [0, 8, 8, 6, 1, 2, 6, 2, 3, 5, 4, 4], [2, 0, 2, 0, 3, 1, 0, 0, 0], [31, 32], [1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1], [3, 7, 6, 5, 5, 7, 3, 9], [4, 3, 3, 4, 1], [25], [1, 1, 1, 0, 1], [1, 0, 1], [3, 2, 8, 4], [5], [64], [0, 1, 0, 1, 1, 1], [1, 3, 9, 3, 2], [3, 2, 2], [7, 52, 13]], "fitness": -0.01600000075995922, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.multiply(beta, beta))", "other_info": {"loss": [2.315103419216601, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07687227427959442, 0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0504016876220703, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]