[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.845714271068573, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9356015207997057, 1.0970631791395582, 0.7864415663155614, 0.676310317375562, 0.6229998134524358, 0.5743230817151375, 0.527209267108794, 0.5162182733005206, 0.47579639635979143, 0.46615960054850425, 0.43748302453654775, 0.4334632742280548, 0.41214165606786546, 0.39712378748372373, 0.3883044918365073, 0.3667470913450747, 0.3645173612996304, 0.35429127631075963, 0.33460140974608865, 0.33324987375662235, 0.3213888128057935, 0.3162685927697901, 0.30903763254446803, 0.3013308086627982, 0.2868696635960745, 0.2863814717176143, 0.28809308840409403, 0.269624267976518, 0.265184853751945, 0.258803150208556, 0.25120573181753947, 0.24267470833687121, 0.24082182036997415, 0.22428908512112392, 0.22675553835134277, 0.22395283523063775, 0.21032549134216855, 0.20916324589372454], "accuracy": [0.3520010709762573, 0.624620258808136, 0.7046625018119812, 0.7363624572753906, 0.7564390301704407, 0.7862898111343384, 0.8038568496704102, 0.8092722296714783, 0.8264430165290833, 0.8343679904937744, 0.8413683772087097, 0.8408400416374207, 0.852859616279602, 0.8533879518508911, 0.8626337051391602, 0.8659358024597168, 0.863558292388916, 0.8672566413879395, 0.8747853636741638, 0.8758420348167419, 0.8824461698532104, 0.8786157965660095, 0.885219931602478, 0.886672854423523, 0.8927486538887024, 0.8924844861030579, 0.8922203183174133, 0.9029190540313721, 0.9010698795318604, 0.9025228023529053, 0.9022586345672607, 0.9074098467826843, 0.9046360850334167, 0.9133535623550415, 0.9138818979263306, 0.9153348207473755, 0.9167877435684204, 0.9191652536392212], "val_loss": [0.9141780648912702, 0.6338187967027936, 0.5430173363004412, 0.508345229285104, 0.477853570665632, 0.4452759027481079, 0.419695896761758, 0.3929905380521502, 0.37747184719358173, 0.3735917806625366, 0.3582489490509033, 0.34936013392039705, 0.34425231388636995, 0.3380467551095145, 0.320116971220289, 0.3218626209667751, 0.3354100499834333, 0.3117454733167376, 0.3180145025253296, 0.30521420921598164, 0.2909333365304129, 0.299252450466156, 0.29960499491010395, 0.29769020421164377, 0.2949587106704712, 0.28917528901781353, 0.29349128689084736, 0.2970756377492632, 0.28724290643419537, 0.28971182448523386, 0.28244676760264803, 0.2889078174318586, 0.2882297379629953, 0.30130950042179655, 0.2869673030717032, 0.2974768451281956, 0.2941720059939793, 0.3039608768054417], "val_accuracy": [0.6343333125114441, 0.7139999866485596, 0.7483333349227905, 0.7663333415985107, 0.7879999876022339, 0.7903333306312561, 0.8133333325386047, 0.8253333568572998, 0.8353333473205566, 0.8306666612625122, 0.8399999737739563, 0.8473333120346069, 0.8516666889190674, 0.8510000109672546, 0.8619999885559082, 0.859333336353302, 0.8526666760444641, 0.862333357334137, 0.8586666584014893, 0.862666666507721, 0.8690000176429749, 0.8640000224113464, 0.8713333606719971, 0.8666666746139526, 0.8703333139419556, 0.8726666569709778, 0.8673333525657654, 0.8703333139419556, 0.875333309173584, 0.878333330154419, 0.8763333559036255, 0.8769999742507935, 0.8826666474342346, 0.8766666650772095, 0.874666690826416, 0.8806666731834412, 0.8796666860580444, 0.8806666731834412]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [4, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.6980000138282776, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302989247263761, 2.2971608647266004, 2.2918665860984397, 2.2810669663622867, 2.2685057592902123, 2.252234619842497, 2.234797727194098, 2.2124235481082835, 2.1857703884972746, 2.153152011719677, 2.113264681026684, 2.060062282924025, 1.989210508833661, 1.903558172349523, 1.8021999022680708, 1.7159553458110894, 1.6402299561599432, 1.5364171960775517, 1.447871888239685, 1.3876798885090005, 1.3169261247663608, 1.2784168932179985, 1.221399248095079, 1.166445427488232, 1.130141879762436, 1.1085160470137962, 1.0940112844827925, 1.0508502849640076, 1.0286488852968871, 1.018144100719455, 1.0087244271397544, 0.9890303389428707, 0.9628561867100609, 0.9416865964906406, 0.9418410892027433, 0.9023208637294863, 0.8943219003172252, 0.8881981462110319, 0.8790902982707887], "accuracy": [0.08796724677085876, 0.1002509593963623, 0.11861048638820648, 0.14780081808567047, 0.1846519559621811, 0.23378682136535645, 0.2670717239379883, 0.3051116168498993, 0.34328359365463257, 0.35702019929885864, 0.3737947344779968, 0.39189010858535767, 0.3903051018714905, 0.3883238732814789, 0.39387133717536926, 0.4138158857822418, 0.4303262531757355, 0.46506404876708984, 0.4955752193927765, 0.5101043581962585, 0.540219247341156, 0.5517104864120483, 0.5688812732696533, 0.5836745500564575, 0.5955620408058167, 0.6056002974510193, 0.615770697593689, 0.6272619366645813, 0.6273940205574036, 0.6284506916999817, 0.6351869106292725, 0.6408664584159851, 0.6505085229873657, 0.666358470916748, 0.6612072587013245, 0.6732267737388611, 0.6734909415245056, 0.6753401160240173, 0.677189290523529], "val_loss": [1.969080993107387, 1.9638209342956543, 1.9553383418491908, 1.9440409115382604, 1.930318968636649, 1.9145353181021554, 1.8965749740600586, 1.8754190036228724, 1.8491880553109306, 1.815572806767055, 1.7715254511151994, 1.7127374240330286, 1.6338482924870081, 1.5350580215454102, 1.4324116706848145, 1.334996121270316, 1.2337819848741804, 1.1352071080889021, 1.0469636917114258, 0.9776041167122977, 0.9148002011435372, 0.8539531741823468, 0.811930775642395, 0.7870434863226754, 0.7695587703159877, 0.7544723408562797, 0.7374369757516044, 0.7145013468606132, 0.6936330284391131, 0.685589109148298, 0.6871165377753121, 0.6876095192773002, 0.6843761375972203, 0.6754739625113351, 0.6658549989972796, 0.6598243713378906, 0.655207804271153, 0.6496097700936454, 0.6424590178898403], "val_accuracy": [0.04933333396911621, 0.0833333358168602, 0.16433332860469818, 0.2770000100135803, 0.3490000069141388, 0.3779999911785126, 0.39899998903274536, 0.4143333435058594, 0.429666668176651, 0.4440000057220459, 0.4519999921321869, 0.4569999873638153, 0.46133333444595337, 0.46299999952316284, 0.47466665506362915, 0.49300000071525574, 0.5083333253860474, 0.531333327293396, 0.5796666741371155, 0.6273333430290222, 0.6570000052452087, 0.6706666946411133, 0.6826666593551636, 0.6896666884422302, 0.6919999718666077, 0.6883333325386047, 0.687333345413208, 0.6940000057220459, 0.7020000219345093, 0.7070000171661377, 0.7076666951179504, 0.7066666483879089, 0.7083333134651184, 0.718999981880188, 0.718999981880188, 0.7173333168029785, 0.7183333039283752, 0.7163333296775818, 0.718666672706604]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.32028570771217346, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.256533115515698, 2.266946039998442, 2.241460422530481, 2.648054060918969, 2.3055078419302557, 2.3037329420453254, 2.303604170001021, 2.301170631312203, 2.200021655095677, 2.208449404300432, 2.3063028159788366, 2.303440794260148, 2.3033140685028957], "accuracy": [0.21991810202598572, 0.15295206010341644, 0.16391493380069733, 0.1500462293624878, 0.10447761416435242, 0.09747721254825592, 0.0956280529499054, 0.11094967275857925, 0.20499274134635925, 0.1884823739528656, 0.09972262382507324, 0.09813763201236725, 0.10355303436517715], "val_loss": [1.95871182850429, 1.9438355990818568, 1.9547546931675501, 1.9766758510044642, 1.974001135144915, 1.9735707555498396, 1.9730096544538225, 1.960780416216169, 1.9710050310407365, 1.980037076132638, 1.973867961338588, 1.973672866821289, 1.9736574036734444], "val_accuracy": [0.10000000149011612, 0.09933333098888397, 0.18566666543483734, 0.10000000149011612, 0.10133333504199982, 0.10066666454076767, 0.1003333330154419, 0.195333331823349, 0.16733333468437195, 0.09833333641290665, 0.1003333330154419, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 5, 9], [4, 0, 0, 2, 0], [36, 49, 6], [1, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.2808571457862854, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.256499161069671, 2.25836101199941, 2.425617598114296, 2.226237941459028, 2.3064094835252904, 2.303269741730746, 2.3030807130828967], "accuracy": [0.22057852149009705, 0.15453705191612244, 0.1364416927099228, 0.17434948682785034, 0.10474177449941635, 0.10117553919553757, 0.09087307006120682], "val_loss": [1.9588851928710938, 1.8641226632254464, 1.9761463574000768, 1.9835196903773717, 1.974191325051444, 1.9737340382167272, 1.973684515271868], "val_accuracy": [0.10000000149011612, 0.24666666984558105, 0.09833333641290665, 0.09833333641290665, 0.09933333098888397, 0.09933333098888397, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 49, 6], [1, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.17428570985794067, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.4481019412269838, 4.534427342271886, 2.429718541179461, 3.8458258245032555, 3.800911187401317, 25.1115882975818], "accuracy": [0.19521859288215637, 0.15849953889846802, 0.10170386731624603, 0.10381719470024109, 0.09853387624025345, 0.10038304328918457], "val_loss": [1.9648981094360352, 2.1225201061793735, 2.1119350024632046, 2.897158622741699, 93.44658987862724, 1.994792870112828], "val_accuracy": [0.14366666972637177, 0.1003333330154419, 0.10733333230018616, 0.0820000022649765, 0.10633333027362823, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0], [6, 3, 3, 8, 1, 9], [3, 0, 3, 5, 0], [36, 49, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.12542857229709625, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.4475566603330936, 445902.16962015844, 3.318398752672596e+34, 3.3795073386968135, 2.8850391292458655, 3.0897550157127034], "accuracy": [0.1954827606678009, 0.1516312211751938, 0.10606260597705841, 0.10038304328918457, 0.09668471664190292, 0.09774138033390045], "val_loss": [1.9740606716700964, 66773350837686.86, 2.8075712748936246, 2.8968407767159596, 2.345304080418178, 2.3554917744227817], "val_accuracy": [0.10599999874830246, 0.10133333504199982, 0.09933333098888397, 0.10133333504199982, 0.1003333330154419, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [6, 1, 3, 5, 1, 9], [3, 0, 3, 5, 0], [4, 49, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.11599999666213989, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), grad)), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.02556039603595e+27, 1.7050612452753086e+29, 1.2811462119818931e+30, 4.7562215952898195e+30, 1.3857418017483226e+31, 3.1447021246261665e+31], "accuracy": [0.10289261490106583, 0.10949676483869553, 0.10579843819141388, 0.11002509295940399, 0.1154404953122139, 0.11094967275857925], "val_loss": [1.6781682851643193e+28, 2.685068770533787e+29, 1.359316105222845e+30, 4.2961110690761906e+30, 1.0488552677502757e+31, 2.174906528252781e+31], "val_accuracy": [0.1303333342075348, 0.1303333342075348, 0.1303333342075348, 0.1303333342075348, 0.1303333342075348, 0.1303333342075348]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [4, 0, 0, 2, 0], [36, 49, 6], [1, 1, 0], [0], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [4, 3, 3, 0, 1, 9], [4, 0, 0, 1, 0], [45, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(grad, tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [1, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [98, 49, 6], [1, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1293543.7305221176, 2.3136045899389286, 2.3054824431873726, 2.3035290657867766, 2.3030309109970593, 2.302966341287736, 2.302988151848324, 2.302914130768016, 2.303046898268091], "accuracy": [0.09721305221319199, 0.10236428678035736, 0.09642054885625839, 0.09589222073554993, 0.09509972482919693, 0.0956280529499054, 0.09430722147226334, 0.09826971590518951, 0.09430722147226334], "val_loss": [1.98837069102696, 1.9768611363002233, 1.9743689809526717, 1.9736984797886439, 1.9736615589686803, 1.973651613507952, 1.9736849921090263, 1.9737011364528112, 1.9737227303641183], "val_accuracy": [0.09833333641290665, 0.09933333098888397, 0.09933333098888397, 0.10066666454076767, 0.09933333098888397, 0.10066666454076767, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [4, 0, 0, 2, 0], [4, 49, 6], [1, 1, 0], [0], [8], [3], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [636791782.9805484, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08849557489156723, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [2, 3, 7, 6, 1, 9, 8], [3, 0, 3, 5, 0], [1, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302727464010309, 2.3025539298618725, 2.3025480723730594, 2.3025511980781057, 2.302556275849046, 2.302555336251219], "accuracy": [0.09985470771789551, 0.10447761416435242, 0.10896842926740646, 0.09998679161071777, 0.10157178342342377, 0.09998679161071777], "val_loss": [1.9736430304391044, 1.9736430304391044, 1.9736434391566686, 1.9736430985586983, 1.973642349243164, 1.9736426217215401], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [6, 3, 3, 0, 1, 9], [4, 0, 3, 5, 0], [4, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 0, 2, 0], [36, 49, 6], [0, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028311229353613, 2.304958991559741, 2.4036611453212404, 3.080369183384527, 4.759529162139751, 7.33985488075606], "accuracy": [0.09325055778026581, 0.09311848133802414, 0.09430722147226334, 0.09734513610601425, 0.09813763201236725, 0.09932637959718704], "val_loss": [1.973949636731829, 1.991565363747733, 2.268507412501744, 3.3448404584612166, 5.241012437003, 7.966153008597238], "val_accuracy": [0.10133333504199982, 0.10066666454076767, 0.1003333330154419, 0.10066666454076767, 0.1003333330154419, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [6, 4, 7, 3, 1, 9, 9], [1, 0, 2, 5, 0], [58, 58, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 3, 7, 6, 1, 9], [3, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 3, 3, 0, 1, 9, 3], [1, 0, 3, 3, 0], [39, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 3, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(grad, tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3639829439997846, 3.030820376239102, 4.9446904083300325, 7.968982767702928, 12.338787693940196, 17.74600305356968], "accuracy": [0.09298639744520187, 0.09377889335155487, 0.09866596013307571, 0.1026284471154213, 0.10011887550354004, 0.10157178342342377], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [6, 3, 7, 5, 1, 9], [3, 0, 3, 5, 0], [36, 93, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.09799999743700027, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.448395181908316, 2.548007788486201, 2.4680424435043284, 2.3078420927118017, 2.4165530222722835, 8490754.205312079, NaN, NaN], "accuracy": [0.19521859288215637, 0.18293488025665283, 0.11874257028102875, 0.13657376170158386, 0.09945846349000931, 0.09747721254825592, 0.09945846349000931, 0.09998679161071777], "val_loss": [1.9570649691990443, 2.23603732245309, 2.0102789061410085, 2.033227034977504, 2.016953536442348, 4.464781686765164e+22, NaN, NaN], "val_accuracy": [0.14800000190734863, 0.1003333330154419, 0.16500000655651093, 0.10733333230018616, 0.1003333330154419, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [6, 3, 3, 8, 1, 9, 0], [3, 0, 3, 5, 0], [36, 49, 6], [0, 1, 0], [0], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.07914285361766815, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3036299856851254, 2.3022088429805327, 2.3061254327764225, 2.308879439353061, 2.3173039278822207, 2.3253086777159155, 2.351722434936592, 2.417469720672922, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08585391938686371, 0.08717474341392517, 0.08757099509239197, 0.07977809756994247, 0.07700435817241669, 0.08347642421722412, 0.07898560166358948, 0.08228767663240433, 0.09153348207473755, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9714012145996094, 1.9725545474461146, 1.9747391428266252, 1.9781973021371024, 1.9834745270865304, 1.9915817124503, 2.011306490216936, 2.112457411629813, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.032999999821186066, 0.025333333760499954, 0.02266666665673256, 0.023000000044703484, 0.03766666725277901, 0.06966666877269745, 0.09533333033323288, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [2, 5, 8, 0, 1, 9], [4, 0, 3, 5, 0], [4, 49, 6], [1, 1, 0], [1], [8], [3], [64], [1, 0, 0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.negative(grad))))), tf.math.subtract(tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3035134826401173, 2.301214132452559, 2.3029242038034003, 2.302429063870308, 2.303175544505736, 2.3019523307269734], "accuracy": [0.08717474341392517, 0.09060890227556229, 0.09060890227556229, 0.08875974267721176, 0.08955223858356476, 0.08889182657003403], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]