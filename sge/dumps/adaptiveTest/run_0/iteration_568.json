[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8497142791748047, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 11, 8, 6, 2, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.030599100573062, 1.1022928978757238, 0.791300517803233, 0.6951487518540935, 0.6421555765725996, 0.5922849799317297, 0.5562509248017666, 0.5221007485447023, 0.4941316720060369, 0.4703013433669741, 0.46075178296842184, 0.4424032621639689, 0.43374772807783724, 0.4125925894300652, 0.39783065409361806, 0.37703559839053163, 0.368686529387415, 0.35953629610875754, 0.34606411436671325, 0.3503442719714548, 0.3506870925890976, 0.32559650793933376, 0.31711987306523426, 0.3254793832417351, 0.3024304572263052, 0.2989687788181018, 0.2900983185705775, 0.28146152224491583, 0.27010553057293585, 0.2621607248454975, 0.2528559932926343, 0.2565115256127491, 0.24515284152669267, 0.23800998249892877, 0.23672224751489981, 0.22104736801624109, 0.22676672854868807, 0.2073170917027221, 0.2102324648374863, 0.20877436487555992, 0.18911209534998852, 0.17713608641461326, 0.18075829625263537, 0.18481330904411428, 0.17867523733107735, 0.17752641145390385, 0.1736705264891175, 0.17120762905267095, 0.17355552477693956, 0.15999669084782298, 0.15719315470871026, 0.15470795545556273, 0.15042161616481858, 0.14188524973808167, 0.15391297692935135, 0.14152511004065763, 0.13956222406168656, 0.13365419411530127, 0.1327327240089683, 0.12621977942915893, 0.13434870979805127, 0.12587043112078677, 0.1244725128737864, 0.1203645478927653, 0.11492316173115237, 0.11499983382959565, 0.11329230169389604, 0.11066267065277756], "accuracy": [0.31303659081459045, 0.6085061430931091, 0.7079645991325378, 0.7383436560630798, 0.7604015469551086, 0.776251494884491, 0.7955356240272522, 0.8049134612083435, 0.8161405324935913, 0.826310932636261, 0.8322546482086182, 0.835160493850708, 0.842028796672821, 0.8516708612442017, 0.8537842035293579, 0.8628978729248047, 0.8643507957458496, 0.8668603897094727, 0.8730682730674744, 0.8701624870300293, 0.8714832663536072, 0.873860776424408, 0.8812574148178101, 0.8772949576377869, 0.886672854423523, 0.891559898853302, 0.8861445188522339, 0.8961827754974365, 0.8985602855682373, 0.8996169567108154, 0.9076740145683289, 0.9014661312103271, 0.9111081957817078, 0.9076740145683289, 0.9124290347099304, 0.9178444147109985, 0.91124027967453, 0.9173160791397095, 0.9170519113540649, 0.9211464524269104, 0.9277506470680237, 0.9330339431762695, 0.9293355941772461, 0.9257693886756897, 0.9310526847839355, 0.9323735237121582, 0.9344868659973145, 0.9351472854614258, 0.9323735237121582, 0.9369964599609375, 0.936732292175293, 0.9426760077476501, 0.9437326788902283, 0.9447893500328064, 0.939109742641449, 0.9447893500328064, 0.9494122266769409, 0.9495443105697632, 0.9490159749984741, 0.9503368139266968, 0.9478272199630737, 0.953903079032898, 0.9517897367477417, 0.9549596905708313, 0.9533747434616089, 0.9582617878913879, 0.9572051167488098, 0.956280529499054], "val_loss": [0.9323030880519322, 0.6342330489839826, 0.5641428913388934, 0.5061929907117572, 0.478789176259722, 0.4496446166719709, 0.4325866273471287, 0.41102964537484304, 0.39353974376405987, 0.3918291756084987, 0.36584517785481047, 0.35337425981249126, 0.3511196034295218, 0.3466407997267587, 0.3374395881380354, 0.32515244824545725, 0.3226105400494167, 0.3188520499638149, 0.31197783776691984, 0.3300326296261379, 0.3292413779667446, 0.31539662395204815, 0.31219206537519184, 0.29797611066273283, 0.3085756131580898, 0.3042906011853899, 0.29581973382404875, 0.30631883655275616, 0.29087493249348234, 0.2916098577635629, 0.29948817832129343, 0.296113772051675, 0.2972961153302874, 0.28912616627556936, 0.3050380689757211, 0.30688547236578806, 0.2937056762831552, 0.30339616537094116, 0.289129410471235, 0.29493710824421476, 0.3072857175554548, 0.31406220367976595, 0.3148756538118635, 0.2953747936657497, 0.3070126601627895, 0.30483633279800415, 0.30780134882245747, 0.3045473183904375, 0.3046852775982448, 0.31169181210654123, 0.31878253391810824, 0.31685298681259155, 0.3211438741002764, 0.33810967206954956, 0.31071919202804565, 0.32852697372436523, 0.31942487614495413, 0.32734319993427824, 0.3252136451857431, 0.3333468352045332, 0.3294688548360552, 0.3329380324908665, 0.3398630363600595, 0.34877586364746094, 0.3382874471800668, 0.34899485962731497, 0.3524984461920602, 0.36402047531945364], "val_accuracy": [0.5809999704360962, 0.7239999771118164, 0.749666690826416, 0.7633333206176758, 0.7763333320617676, 0.7976666688919067, 0.8040000200271606, 0.815666675567627, 0.8246666789054871, 0.8230000138282776, 0.8423333168029785, 0.8500000238418579, 0.846666693687439, 0.8416666388511658, 0.8519999980926514, 0.8556666374206543, 0.8603333234786987, 0.8606666922569275, 0.8656666874885559, 0.8556666374206543, 0.8566666841506958, 0.8656666874885559, 0.8646666407585144, 0.8673333525657654, 0.862333357334137, 0.862333357334137, 0.8690000176429749, 0.8700000047683716, 0.8786666393280029, 0.8773333430290222, 0.874666690826416, 0.8736666440963745, 0.8759999871253967, 0.8790000081062317, 0.8740000128746033, 0.8776666522026062, 0.8759999871253967, 0.8799999952316284, 0.8820000290870667, 0.8823333382606506, 0.8820000290870667, 0.878333330154419, 0.8740000128746033, 0.8820000290870667, 0.8826666474342346, 0.8776666522026062, 0.8796666860580444, 0.8759999871253967, 0.8796666860580444, 0.8840000033378601, 0.8813333511352539, 0.8849999904632568, 0.8836666941642761, 0.8853333592414856, 0.8823333382606506, 0.8830000162124634, 0.8843333125114441, 0.887333333492279, 0.8863333463668823, 0.8849999904632568, 0.8856666684150696, 0.8853333592414856, 0.890333354473114, 0.8859999775886536, 0.8870000243186951, 0.8896666765213013, 0.8856666684150696, 0.8846666812896729]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 2, 1, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8448571562767029, "mapping_values": [1, 12, 12, 7, 5, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.030598853258267, 1.1022780841887352, 0.791881881243895, 0.696019266928979, 0.6401646565751723, 0.5923200111032682, 0.5548994367495189, 0.5211066862556204, 0.4942880150758831, 0.4713434026288854, 0.4617226059843662, 0.4426521715305705, 0.43776186471680734, 0.4113047637518733, 0.3982429177163378, 0.38002383697931996, 0.37237007698882385, 0.35811675035359913, 0.34143515516344614, 0.34045123535534016, 0.3459325996388093, 0.3265148936174864, 0.31708789596846076, 0.3184678553708273], "accuracy": [0.31303659081459045, 0.6086382269859314, 0.7071720957756042, 0.7375511527061462, 0.7623828053474426, 0.7778365015983582, 0.793422281742096, 0.8061022162437439, 0.8145555257797241, 0.8249900937080383, 0.833179235458374, 0.8393871188163757, 0.8411042094230652, 0.8511425256729126, 0.8556333184242249, 0.8627657890319824, 0.863558292388916, 0.868049144744873, 0.8754457831382751, 0.8750495314598083, 0.8757099509239197, 0.8739928603172302, 0.8798044919967651, 0.8808611631393433], "val_loss": [0.9323031221117292, 0.63417649269104, 0.5635171958378383, 0.505159820829119, 0.4778040647506714, 0.4500296967370169, 0.4308437534740993, 0.4134647420474461, 0.3926359159605844, 0.39127581460135324, 0.3664344038282122, 0.35418303523744854, 0.35154291561671663, 0.3419041803904942, 0.33170551913125174, 0.3302418163844517, 0.3228785310472761, 0.3160472937992641, 0.3104088987622942, 0.31996857268469675, 0.3253439835139683, 0.3182881900242397, 0.30541783571243286, 0.2960145814078195], "val_accuracy": [0.5809999704360962, 0.7246666550636292, 0.7509999871253967, 0.765333354473114, 0.7760000228881836, 0.7996666431427002, 0.8053333163261414, 0.8143333196640015, 0.8273333311080933, 0.8256666660308838, 0.840666651725769, 0.8476666808128357, 0.8463333249092102, 0.843666672706604, 0.8529999852180481, 0.8523333072662354, 0.859000027179718, 0.8629999756813049, 0.8736666440963745, 0.8556666374206543, 0.8569999933242798, 0.8579999804496765, 0.8669999837875366, 0.8693333268165588]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 0, 2, 4, 6, 9, 4, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8411428332328796, "mapping_values": [1, 12, 12, 7, 5, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.077464720922895, 1.919164011633045, 1.2955619377498504, 0.8834217218297142, 0.7793854065716715, 0.7153817221016506, 0.6308479376709015, 0.5937497398250564, 0.5599328822872941, 0.5612479995475107, 0.533765578199891, 0.5189502665064732, 0.5056973290465464, 0.5079307022812407, 0.47568900244126716, 0.4640699954214601, 0.4527144777603185, 0.44035893818800237, 0.41434025912473166, 0.41701502524677475, 0.3964415748538815, 0.4023586678160117, 0.39627915157885707, 0.3811309928427031, 0.369402449455527, 0.36666130168547234, 0.37354428094486125, 0.3494332764071874, 0.3418505636259486, 0.33931751433711216], "accuracy": [0.3349623680114746, 0.39545634388923645, 0.5768062472343445, 0.6800950765609741, 0.7173424959182739, 0.7367587089538574, 0.7677981853485107, 0.7843085527420044, 0.7897239327430725, 0.7868181467056274, 0.8041210174560547, 0.8107251524925232, 0.8123101592063904, 0.8152159452438354, 0.828292191028595, 0.8293488025665283, 0.8356888294219971, 0.8397833704948425, 0.848368763923645, 0.8477083444595337, 0.8569541573524475, 0.8518029451370239, 0.857218325138092, 0.8643507957458496, 0.8667283058166504, 0.8639545440673828, 0.8610487580299377, 0.8708229064941406, 0.8732003569602966, 0.8742570281028748], "val_loss": [1.8867408207484655, 1.1116743428366525, 0.6962824889591762, 0.600655334336417, 0.5335601738521031, 0.4771770238876343, 0.4512826715196882, 0.43170794418879915, 0.4276476332119533, 0.42140393597739084, 0.40377667972019743, 0.3854581117630005, 0.4477769817624773, 0.3769078850746155, 0.38495372022901264, 0.35250409160341534, 0.3586505481175014, 0.3451498491423471, 0.33849700008119854, 0.3305490016937256, 0.34444559471947805, 0.3363359825951712, 0.32956577198846, 0.32670150484357563, 0.31763458251953125, 0.31759749140058247, 0.3210221103259495, 0.3100047622408186, 0.3152614917073931, 0.30545476504734587], "val_accuracy": [0.31566667556762695, 0.5636666417121887, 0.7093333601951599, 0.7450000047683716, 0.7576666474342346, 0.781000018119812, 0.7990000247955322, 0.793666660785675, 0.7956666946411133, 0.7983333468437195, 0.812333345413208, 0.8320000171661377, 0.8003333210945129, 0.8353333473205566, 0.8236666917800903, 0.8379999995231628, 0.8393333554267883, 0.8493333458900452, 0.8519999980926514, 0.847000002861023, 0.8393333554267883, 0.8513333201408386, 0.8600000143051147, 0.8496666550636292, 0.8633333444595337, 0.8553333282470703, 0.856333315372467, 0.8629999756813049, 0.8606666922569275, 0.859666645526886]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [6, 3, 0, 2, 9, 6, 3, 0, 3, 5, 2, 9], [0, 2, 0, 2, 0, 1, 0, 1, 2, 1, 3, 2, 0, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8377143144607544, "mapping_values": [1, 18, 18, 12, 6, 5, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad)))), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0774798518583806, 1.9197810628804328, 1.334409474680972, 0.8881724389662847, 0.7548128219643415, 0.6857102368218378, 0.6330372766181857, 0.604125959864382, 0.5769412671223828, 0.565634656835777, 0.5329201901239285, 0.5164167637428855, 0.5086459784522868, 0.5032037694330433, 0.4739235643705341, 0.46369972677829796, 0.4516200568847306, 0.44024429979372837, 0.42263651300399313, 0.4148399941027834, 0.4120348758622561, 0.420451078318397, 0.4085469488706477, 0.38419731551582753, 0.37236198353068295, 0.3704686717444785, 0.3722503956211966, 0.35785734871548275, 0.34140649942548096, 0.33873975250179644], "accuracy": [0.3349623680114746, 0.3959846794605255, 0.568749189376831, 0.674679696559906, 0.722229540348053, 0.7446836829185486, 0.7604015469551086, 0.7773081660270691, 0.7847048044204712, 0.7868181467056274, 0.8061022162437439, 0.8145555257797241, 0.8121780753135681, 0.81112140417099, 0.8302733898162842, 0.8273676037788391, 0.8323867321014404, 0.8367455005645752, 0.8417646288871765, 0.8471800088882446, 0.8490291833877563, 0.844010055065155, 0.852859616279602, 0.8560295701026917, 0.8672566413879395, 0.863558292388916, 0.8654074668884277, 0.8651432991027832, 0.874389111995697, 0.8732003569602966], "val_loss": [1.8867488588605608, 1.1172988074166434, 0.7024634735924857, 0.5942171130861554, 0.5245684215000698, 0.507259692464556, 0.47343993186950684, 0.4480336734226772, 0.4322697860854013, 0.4042730246271406, 0.39790771688733784, 0.39711934328079224, 0.4210840037890843, 0.3694215416908264, 0.3672998036657061, 0.3543631434440613, 0.3537295716149466, 0.3612684692655291, 0.33944767713546753, 0.34153127670288086, 0.36556187697819303, 0.34252807072230745, 0.3375075544629778, 0.32138754640306744, 0.3256750021662031, 0.3213775839124407, 0.3310816969190325, 0.3113135354859488, 0.3300994804927281, 0.3105288488524301], "val_accuracy": [0.31566667556762695, 0.5619999766349792, 0.7043333053588867, 0.7490000128746033, 0.753333330154419, 0.7586666941642761, 0.7916666865348816, 0.777999997138977, 0.7889999747276306, 0.8140000104904175, 0.8169999718666077, 0.8216666579246521, 0.8006666898727417, 0.8370000123977661, 0.8349999785423279, 0.8373333215713501, 0.8413333296775818, 0.8373333215713501, 0.8493333458900452, 0.843666672706604, 0.8299999833106995, 0.8386666774749756, 0.8506666421890259, 0.8519999980926514, 0.8603333234786987, 0.8546666502952576, 0.8510000109672546, 0.859666645526886, 0.8569999933242798, 0.8573333621025085]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [6, 5, 0, 2, 6, 6, 3, 0, 3, 5, 2, 9], [1, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8337143063545227, "mapping_values": [1, 14, 14, 8, 6, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), grad)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0774767581797104, 1.920473075766432, 1.3272359557139828, 0.9262508297042131, 0.7913646285937935, 0.7018248450093186, 0.6230470671897488, 0.6033431911717285, 0.5710214229543935, 0.5498879339874161, 0.5257753130427882, 0.5226619066169879, 0.5073051721412649, 0.4913001729906385, 0.4745970701363581, 0.4693969087302488, 0.4625588836072852, 0.44330447266650097, 0.4236708343257332, 0.4139443479036501, 0.41540312137208235, 0.4073275716321154, 0.39299831547757275, 0.3828959544856613, 0.3754141461328036, 0.3755161726180321, 0.3746951693801076, 0.3583858319796969, 0.3396018312442194, 0.3457679486608524, 0.32676757347188556, 0.3285988648931946, 0.3158590293374626, 0.297067382521145, 0.3078431372259271, 0.3023678466526115], "accuracy": [0.3349623680114746, 0.3955884277820587, 0.570730447769165, 0.6634526252746582, 0.7103421092033386, 0.7448157668113708, 0.7676661014556885, 0.7781006693840027, 0.7849689722061157, 0.7977809906005859, 0.8053097128868103, 0.8090080618858337, 0.8136309385299683, 0.819970965385437, 0.8286884427070618, 0.8281601071357727, 0.8297450542449951, 0.8352925777435303, 0.843481719493866, 0.8498216867446899, 0.8491612672805786, 0.8502179384231567, 0.8581429123878479, 0.8569541573524475, 0.8617091774940491, 0.8599920868873596, 0.8609166741371155, 0.8673887252807617, 0.8753136992454529, 0.8710870146751404, 0.8751816153526306, 0.878351628780365, 0.8836349248886108, 0.8865407705307007, 0.8833707571029663, 0.889578640460968], "val_loss": [1.8867500850132533, 1.117098603929792, 0.6823790924889701, 0.6637459823063442, 0.5268712895257133, 0.4781220129558018, 0.4617182867867606, 0.4337125079972403, 0.4272346496582031, 0.42219408069338116, 0.4063131128038679, 0.38383560521262033, 0.4127552594457354, 0.3710475564002991, 0.3705724222319467, 0.3598812052181789, 0.34902431283678326, 0.35575744083949495, 0.34663569927215576, 0.34194475412368774, 0.3459380694798061, 0.3367369430405753, 0.3328100528035845, 0.3226336581366403, 0.327447772026062, 0.32178642068590435, 0.3201919708933149, 0.3160825712340219, 0.3324781741414751, 0.31720043080193655, 0.31442781005586895, 0.3109644225665501, 0.3023638554981777, 0.3082236477306911, 0.31754609516688753, 0.30484494992664884], "val_accuracy": [0.31566667556762695, 0.5643333196640015, 0.7099999785423279, 0.7149999737739563, 0.7643333077430725, 0.7829999923706055, 0.7863333225250244, 0.7986666560173035, 0.8023333549499512, 0.8023333549499512, 0.8169999718666077, 0.8263333439826965, 0.8130000233650208, 0.8366666436195374, 0.8356666564941406, 0.8383333086967468, 0.8463333249092102, 0.8429999947547913, 0.8479999899864197, 0.8399999737739563, 0.8399999737739563, 0.8443333506584167, 0.8569999933242798, 0.8576666712760925, 0.859666645526886, 0.8550000190734863, 0.8539999723434448, 0.8619999885559082, 0.8550000190734863, 0.8556666374206543, 0.8690000176429749, 0.8650000095367432, 0.8669999837875366, 0.8676666617393494, 0.8636666536331177, 0.8659999966621399]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [6, 3, 0, 2, 9, 6, 3, 0, 1, 5, 2, 9], [1, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [20, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8325714468955994, "mapping_values": [1, 13, 13, 8, 5, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))), tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.07746487900786, 1.9197471869887772, 1.2914040618490124, 0.8806343597270526, 0.7312622406085595, 0.6823718587342286, 0.6206614534931412, 0.5947987479091934, 0.5535543803305217, 0.5383482922132792, 0.5138782179114715, 0.5037916177976495, 0.49095871023073046, 0.48195656747897353, 0.4597061768050176, 0.44976936181333826, 0.43851289308586017, 0.43138516461765763, 0.4033803817673508, 0.4047958530596833, 0.3973427508304368, 0.4015327983717515, 0.3939365761989553, 0.3724331662576464, 0.3649142857642458, 0.3568028020600538, 0.3615434761131444, 0.34269058727994495, 0.32211685547534546, 0.33419161848797696, 0.3163763842192529, 0.3235290230556549, 0.30596692065568476, 0.2830205874207816, 0.29160949428398625, 0.29083698874199476, 0.2826585801301804, 0.2777396595245024, 0.28242813058816496, 0.27034273070902354, 0.25294037073704984, 0.23769277134245223, 0.26369462998047827, 0.24797516666808384, 0.24830597634753845, 0.24267212982781416, 0.24268849637089246, 0.22501857877328743], "accuracy": [0.3349623680114746, 0.3963809311389923, 0.5807687044143677, 0.6744155287742615, 0.7305507659912109, 0.746268630027771, 0.767401933670044, 0.7832518815994263, 0.7989697456359863, 0.7985734939575195, 0.8148196935653687, 0.8152159452438354, 0.8207634687423706, 0.8219521641731262, 0.833179235458374, 0.8334434032440186, 0.8355567455291748, 0.8408400416374207, 0.8520671129226685, 0.8545766472816467, 0.8508783578872681, 0.8524633646011353, 0.86118084192276, 0.8631620407104492, 0.8673887252807617, 0.8709549307823181, 0.8625016212463379, 0.8704266548156738, 0.878879964351654, 0.8746532797813416, 0.8805969953536987, 0.8808611631393433, 0.8874653577804565, 0.8923524022102356, 0.8864086866378784, 0.8905032277107239, 0.8914278149604797, 0.8963148593902588, 0.8938053250312805, 0.9006736278533936, 0.9054285883903503, 0.9060890078544617, 0.8997490406036377, 0.9062210917472839, 0.90423983335495, 0.9055606722831726, 0.9088627696037292, 0.91559898853302], "val_loss": [1.8867840085710799, 1.1088596412113734, 0.6831329379762922, 0.5592153412955148, 0.5376545190811157, 0.5023611273084369, 0.46139449732644217, 0.4379985673086984, 0.4085236191749573, 0.4065229041235788, 0.38779423918042866, 0.3814422999109541, 0.40886974334716797, 0.3654114774295262, 0.3754019481795175, 0.34270578622817993, 0.3541175808225359, 0.3455364278384617, 0.3363203746931894, 0.32857509170259747, 0.35770768778664724, 0.340903103351593, 0.32221418619155884, 0.316558233329228, 0.3208487629890442, 0.32500000510896954, 0.3153204917907715, 0.30827767508370535, 0.33695467029299053, 0.3017078297478812, 0.31499929087502615, 0.309786319732666, 0.2989398751940046, 0.31170702832085745, 0.3055497237614223, 0.3044453774179731, 0.29734454836164204, 0.3016057695661272, 0.2922386186463492, 0.298890335219247, 0.29830358709607807, 0.31057492324284147, 0.2850607292992728, 0.293269830090659, 0.30938862902777536, 0.3193566884313311, 0.2954980049814497, 0.30051015104566303], "val_accuracy": [0.3153333365917206, 0.5683333277702332, 0.7059999704360962, 0.7493333220481873, 0.750333309173584, 0.765666663646698, 0.8006666898727417, 0.7876666784286499, 0.8203333616256714, 0.8109999895095825, 0.8259999752044678, 0.8276666402816772, 0.8066666722297668, 0.8389999866485596, 0.8296666741371155, 0.8433333039283752, 0.8413333296775818, 0.846666693687439, 0.8556666374206543, 0.8479999899864197, 0.8356666564941406, 0.8456666469573975, 0.8603333234786987, 0.8569999933242798, 0.8610000014305115, 0.8483333587646484, 0.8579999804496765, 0.8633333444595337, 0.8546666502952576, 0.8656666874885559, 0.8640000224113464, 0.8703333139419556, 0.8686666488647461, 0.8613333106040955, 0.8696666955947876, 0.8713333606719971, 0.8703333139419556, 0.8740000128746033, 0.8733333349227905, 0.8756666779518127, 0.8759999871253967, 0.874666690826416, 0.8790000081062317, 0.8730000257492065, 0.8683333396911621, 0.8663333058357239, 0.8769999742507935, 0.8759999871253967]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [6, 3, 9, 2, 4, 0, 1, 0, 3, 5, 2], [1, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8325714468955994, "mapping_values": [1, 10, 10, 6, 4, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.077463893748041, 1.9199829581328325, 1.297112884459762, 0.8817183248685918, 0.7926790408171116, 0.712146282259027, 0.6337173793530342, 0.597002812415822, 0.5674602914133627, 0.5543671003296202, 0.5444132231009587, 0.524915881011118, 0.5094874926672132, 0.4995832877341137, 0.4693611626926745, 0.4530776287460403, 0.4503794287638563, 0.43321697807362397, 0.4109342999036963, 0.41353914600636715, 0.40912214814317605, 0.41166402959489806, 0.38843204424901173, 0.37492807121907307, 0.3653307718969906, 0.3592137814575828, 0.36865556678594363, 0.3529700348838886, 0.33370032535725425, 0.3326294953206495, 0.3239435698015815, 0.32289294932953294, 0.3174189279076603, 0.29478911630560334, 0.3067693570782527, 0.2984653906287802, 0.29410019167394463, 0.2868287429526466, 0.29231069024134115, 0.28168813271167303, 0.26220413849983926, 0.2557767748541411, 0.26115065615852007, 0.25092527872189363, 0.2526707107112896, 0.24237511743250273, 0.2505758685671091], "accuracy": [0.3349623680114746, 0.3955884277820587, 0.5781270861625671, 0.6807554960250854, 0.7156254053115845, 0.7342491149902344, 0.7604015469551086, 0.7783648371696472, 0.7906485199928284, 0.791969358921051, 0.798309326171875, 0.809140145778656, 0.8098005652427673, 0.8178576231002808, 0.8302733898162842, 0.8330471515655518, 0.8319904804229736, 0.8417646288871765, 0.8486329317092896, 0.8471800088882446, 0.847840428352356, 0.8482366800308228, 0.8605204224586487, 0.8607845902442932, 0.8679170608520508, 0.8668603897094727, 0.863029956817627, 0.8702945709228516, 0.878351628780365, 0.8759741187095642, 0.8802007436752319, 0.8809932470321655, 0.8828424215316772, 0.8883898854255676, 0.8824461698532104, 0.8916919827461243, 0.8848236799240112, 0.8928807377815247, 0.8874653577804565, 0.8953903317451477, 0.8992207050323486, 0.9017302989959717, 0.9025228023529053, 0.90423983335495, 0.9062210917472839, 0.9025228023529053, 0.9021265506744385], "val_loss": [1.8868118694850378, 1.1100965908595495, 0.6802018710545131, 0.605323314666748, 0.5392364604132516, 0.484372649874006, 0.45286491938999723, 0.4385827098573957, 0.41615223033087595, 0.4327965293611799, 0.40681053910936626, 0.39197736978530884, 0.4385279587336949, 0.36818815980638775, 0.3699682950973511, 0.3500639966556004, 0.3555393729891096, 0.3485914809363229, 0.3436072724206107, 0.3383946589061192, 0.357368528842926, 0.33350672892161776, 0.33890179225376676, 0.31909907715661184, 0.3200412818363735, 0.30972215959003996, 0.32766129289354595, 0.3099489297185625, 0.31973032440458027, 0.30772803510938374, 0.30620527267456055, 0.3084824936730521, 0.30424428837639944, 0.3067474365234375, 0.30767940623419626, 0.3086165019444057, 0.29478786672864643, 0.3089239937918527, 0.29587656259536743, 0.3013415592057364, 0.300605263028826, 0.2925442372049604, 0.2882386531148638, 0.29403931753976004, 0.30609238147735596, 0.31162284101758686, 0.2966543010302952], "val_accuracy": [0.31566667556762695, 0.5709999799728394, 0.7080000042915344, 0.7293333411216736, 0.7553333044052124, 0.7733333110809326, 0.79666668176651, 0.7896666526794434, 0.8029999732971191, 0.7903333306312561, 0.8100000023841858, 0.8216666579246521, 0.8029999732971191, 0.8386666774749756, 0.8333333134651184, 0.8393333554267883, 0.8460000157356262, 0.8500000238418579, 0.8489999771118164, 0.8489999771118164, 0.8330000042915344, 0.8496666550636292, 0.8506666421890259, 0.8529999852180481, 0.8619999885559082, 0.8576666712760925, 0.8519999980926514, 0.8619999885559082, 0.8613333106040955, 0.8650000095367432, 0.8653333187103271, 0.8646666407585144, 0.8619999885559082, 0.8663333058357239, 0.8669999837875366, 0.8646666407585144, 0.871999979019165, 0.8650000095367432, 0.875, 0.8683333396911621, 0.871666669845581, 0.878000020980835, 0.8776666522026062, 0.8759999871253967, 0.8740000128746033, 0.8679999709129333, 0.8766666650772095]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 4, 8, 2, 9, 6, 1, 2, 2, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [4, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.34685713052749634, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.047179853061187, 2.1583000025996726, 1.453991256794988, 2.8295490513104866, 6.026585906299193, NaN, NaN], "accuracy": [0.30062079429626465, 0.2709021270275116, 0.549068808555603, 0.18055738508701324, 0.10077928751707077, 0.09721305221319199, 0.09998679161071777], "val_loss": [1.9547885486057825, 1.1204241003308977, 1.8438115119934082, 3.3385677337646484, 10.44988305228097, NaN, NaN], "val_accuracy": [0.11533333361148834, 0.5693333148956299, 0.3543333411216736, 0.09933333098888397, 0.09933333098888397, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 3, 0, 2, 4, 1, 1, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 2, 1, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [2, 7, 9, 0, 1, 9], [3, 5, 3, 3, 0], [59, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.2785714268684387, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.438325975045489, 2.676248609555191, 5321816489634.605, NaN, NaN, NaN], "accuracy": [0.22031435370445251, 0.15202747285366058, 0.13670584559440613, 0.0956280529499054, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.585644926343645, 1.9984427179609026, 8.936569459945018e+30, NaN, NaN, NaN], "val_accuracy": [0.2446666657924652, 0.10266666859388351, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 3, 0, 2, 2, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 0, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [20, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.13685713708400726, "mapping_values": [1, 12, 12, 7, 5, 1, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), grad))), tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.30178782241125, 2.303624654631841, 2.304380980654006, 2.3041230564686788, 2.3033498003025885, 2.3027444072545022, 2.3027397015500677, 2.302596434027748, 2.3027254196442097, 2.303749450240956, 2.311560637568911, 2.747823799228026, 34.42911049718508, 2183.803434050236, 151220.83034151696, 10344203.905824859], "accuracy": [0.09496764093637466, 0.09192973375320435, 0.07674019038677216, 0.06907938420772552, 0.0664377212524414, 0.07977809756994247, 0.08215559273958206, 0.09021265059709549, 0.09760929644107819, 0.09021265059709549, 0.09259014576673508, 0.11874257028102875, 0.11332716792821884, 0.09760929644107819, 0.09985470771789551, 0.09998679161071777], "val_loss": [1.9705307824271066, 1.9730839048113142, 1.9745191165379115, 1.974409852709089, 1.9738561766488212, 1.973503725869315, 1.973616463797433, 1.9736859457833427, 1.9739668709891183, 1.9757941790989466, 2.0065699986049106, 4.651350975036621, 177.362788609096, 11779.728515625, 804496.75, 55331153.14285714], "val_accuracy": [0.04699999839067459, 0.05533333495259285, 0.06300000101327896, 0.024666666984558105, 0.055666666477918625, 0.09799999743700027, 0.10100000351667404, 0.1106666699051857, 0.10899999737739563, 0.10533333569765091, 0.11766666918992996, 0.10466666519641876, 0.08933333307504654, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [6, 3, 8, 2, 9, 5, 6, 5, 2, 5, 2], [1, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [33, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3027250890828803, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 8, 2, 2, 9, 3, 0, 0, 3, 5, 2], [0, 2, 0, 2, 0, 1, 0, 1, 2, 1, 3, 2, 0, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [35, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 3, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3027250890828803, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 3, 0, 4, 4, 2, 0, 0, 3, 5, 2, 8, 4, 1], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [67, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 1, 3, 3, 1, 2, 1, 11, 8, 6, 2, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(grad))))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 4, 8, 2, 9, 6, 1, 2, 2, 5, 2], [2, 2, 0, 2, 1, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [41, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [18, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [1, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3063318826393004, 2.337997591081407, 2.4120467962165, 2.599848878224607, 3.694505923806149, 99.50764735197552, 1.2236766187798765e+28, 2.311733646635933, 2.3244091824234405, 2.343811710512854, 2.3723864531740615], "accuracy": [0.08492933213710785, 0.04385153949260712, 0.015453704632818699, 0.00845330860465765, 0.011887465603649616, 0.0796460211277008, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.98652526310512, 2.033106667654855, 2.1328637259347096, 2.448348113468715, 6.236693790980747, 2661.5514787946427, 1.9783197130475725, 1.9868392944335938, 2.0008696147373746, 2.0219952038356235, 2.052564893450056], "val_accuracy": [0.009333333000540733, 0.007000000216066837, 0.004000000189989805, 0.004999999888241291, 0.03099999949336052, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 2, 2, 9, 3, 0, 0, 3, 3, 2], [0, 2, 0, 2, 0, 1, 0, 1, 2, 1, 3, 2, 0, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 9, 9, 4, 5, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3605454655497256, 3.0417520460782033, 4.907186017737429, 8.000754511572067, 12.376767146415746, 17.93294493000442], "accuracy": [0.09708096832036972, 0.10130762308835983, 0.10157178342342377, 0.09813763201236725, 0.10117553919553757, 0.09906221181154251], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 4, 8, 2, 9, 6, 1, 2, 2, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3605454655497256, 3.0417520460782033, 4.907186017737429, 8.000754511572067, 12.376767146415746, 17.93294493000442], "accuracy": [0.09708096832036972, 0.10130762308835983, 0.10157178342342377, 0.09813763201236725, 0.10117553919553757, 0.09906221181154251], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 8, 4, 6, 1, 0, 3, 5, 2], [1, 2, 2, 2, 1, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [82, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 17, 17, 10, 7, 2, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))), grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3605454655497256, 3.0417520460782033, 4.907186017737429, 8.000754511572067, 12.376767146415746, 17.93294493000442], "accuracy": [0.09708096832036972, 0.10130762308835983, 0.10157178342342377, 0.09813763201236725, 0.10117553919553757, 0.09906221181154251], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 8, 2, 9, 6, 1, 0, 3, 5, 2, 7, 0, 5], [2, 2, 2, 1, 1, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [74, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 2, 3, 3, 0], [12, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 16, 16, 10, 6, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3020455166175933, 2.303910103456424, 2.3039987570007225, 2.3033428144272308, 2.301744939282334, 2.3023902411001735], "accuracy": [0.09457138925790787, 0.09153348207473755, 0.08928807079792023, 0.09060890227556229, 0.08849557489156723, 0.08928807079792023], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [6, 3, 0, 2, 9, 6, 1, 0, 3, 5, 2], [1, 2, 0, 2, 1, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [2, 3, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 10, 10, 6, 4, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3020455166175933, 2.303910103456424, 2.3039987570007225, 2.3033428144272308, 2.301744939282334, 2.3023902411001735], "accuracy": [0.09457138925790787, 0.09153348207473755, 0.08928807079792023, 0.09060890227556229, 0.08849557489156723, 0.08928807079792023], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 0, 5, 9, 6, 1, 0, 3, 5, 2], [0, 2, 0, 2, 0, 1, 0, 1, 2, 1, 3, 2, 0, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [2, 3, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 9, 9, 6, 3, 3, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3020455166175933, 2.303910103456424, 2.3039987570007225, 2.3033428144272308, 2.301744939282334, 2.3023902411001735], "accuracy": [0.09457138925790787, 0.09153348207473755, 0.08928807079792023, 0.09060890227556229, 0.08849557489156723, 0.08928807079792023], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]