[{"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9, 9], [2, 3, 3], [41, 55], [0], [1], [], [5], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.3214285671710968, "mapping_values": [1, 3, 3, 2, 1, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.9525765027698823, 2.304540597562698, 2.284807395091099, 2.2726811348974683, 2.197711618270038, 2.620305832083262, 2.304300975113056, 2.3032860217423816], "accuracy": [0.186104878783226, 0.09998679161071777, 0.12917712330818176, 0.1410645842552185, 0.1966715157032013, 0.17183992266654968, 0.09602430462837219, 0.09708096832036972], "val_loss": [1.9765149525233678, 1.9727651732308524, 1.7230214732033866, 1.9664761679513114, 1.9590304919651575, 1.9747835568019323, 1.9739087649754115, 1.9737319946289062], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.2849999964237213, 0.10066666454076767, 0.24199999868869781, 0.10133333504199982, 0.10000000149011612, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9, 9], [2, 3, 3], [41, 55], [0], [1], [], [4], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.28371429443359375, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.9483579252815173, 2.304515274776176, 2.2872587885319393, 2.218371765630246, 2.302198114994731, 2.2722955209200237, 2.3068611181612106, 2.303785018602209], "accuracy": [0.186104878783226, 0.09998679161071777, 0.13234710693359375, 0.1558578759431839, 0.10817593336105347, 0.17580240964889526, 0.09549596905708313, 0.09826971590518951], "val_loss": [1.9765031678336007, 1.972658702305385, 1.7797236442565918, 1.9742954799107142, 1.9684741156441825, 1.9780394009181432, 1.9740653719220842, 1.9737167358398438], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.273333340883255, 0.10133333504199982, 0.10999999940395355, 0.10133333504199982, 0.10000000149011612, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [0, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9, 9], [5, 5, 5, 3, 1], [41, 55], [0], [1], [], [4], [6], [0, 1, 0, 0, 0, 0, 1, 1], [1, 1, 5, 2, 9], [2, 0, 2], [6, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.subtract(tf.math.square(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [1, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9, 9], [5, 5, 5, 3, 1], [41, 55], [0], [1], [], [5], [6], [1, 0], [0, 1, 5, 2, 9], [3, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 8, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 6, 2, 3, 2, 1, 6, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [3, 5, 5, 3, 1], [41, 55], [0], [1], [], [5], [], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 5, 2, 9, 4, 2, 1, 6, 6, 1, 8, 6, 0, 6, 5, 8, 7], [2, 0, 1, 0, 1, 0, 3, 1, 0, 2, 3], [56, 40, 23, 53, 78]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 29, 18, 11, 5], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.divide_no_nan(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(sigma)), alpha)))), tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), beta)))), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [57, 83, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 1, 9], [3, 5, 5, 3, 1], [41, 55], [0], [1], [], [5], [], [0, 0, 0, 0, 1, 1, 0, 1], [2, 4, 5, 2, 9], [2, 0, 0], [6, 2, 77]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 5, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.square(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3018584692908033, 2.3025839160288863, 2.3025845320563922, 2.3025871836010174, 2.3025857391705085, 2.302585429330276, 2.302585672441018, 2.3025860805332607, 2.302583710046067, 2.3025848257417265, 2.302587058203741], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10011887550354004, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.10038304328918457, 0.10196803510189056], "val_loss": [1.9736437116350447, 1.973644597189767, 1.9736434391566686, 1.97364228112357, 1.9736411912100655, 1.973640305655343, 1.9736402375357491, 1.9736409187316895, 1.9736418724060059, 1.9736439159938268, 1.9736446653093611], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 9, 4, 1, 8, 5], [2, 0, 1, 1, 2, 0, 0, 1], [57, 83, 84, 57], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 1, 9], [3, 5, 5, 3, 1], [41, 55], [0], [1], [], [5], [], [0, 1], [0, 4, 5, 2, 9], [2, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [120.63465205688739, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19693566858768463, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1238.9786202566963, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07833333313465118, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 9, 4, 1, 8, 5], [2, 0, 1, 1, 2, 0, 0, 1], [57, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 1, 9], [0, 5, 5, 3, 1], [41, 55], [0, 1, 0], [0, 1], [2], [3], [], [0, 1], [0, 4, 5, 2, 9], [1, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3018582355328965, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [9, 9, 4, 1, 8, 5], [0, 0, 1, 1, 2, 0, 0, 1], [57, 83, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 3, 8, 1, 9], [5, 5, 5, 3, 1], [41, 55], [1], [1], [], [5], [], [0, 0, 1, 1], [8, 4, 5, 2, 9], [2, 0], [6, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9, 9], [2, 3, 3], [41, 55], [0], [1], [], [4], [6], [1, 0, 1, 0, 1], [0, 4, 5, 2, 9], [1, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [3, 0, 1, 1, 2, 0, 0, 1], [57, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1], [2, 6, 2, 3, 2, 1, 6, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 3, 3], [41, 55], [0], [1], [], [5], [], [0, 1, 0, 1, 1], [4, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [57, 83, 84, 57], [0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9, 9], [3, 5, 5, 3, 1], [41, 55], [0], [1], [], [4], [], [0, 1], [0, 4, 5, 2, 9], [2, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 7, 2, 9, 9], [5, 3, 3], [41, 55], [0, 0], [1], [], [4], [], [1, 0], [0, 4, 5, 2, 9], [2, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08994849026203156, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [1, 3, 8, 2, 9, 9], [2, 3, 3], [41, 55], [0, 1, 0], [0, 1], [4], [4], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [9, 9, 4, 1, 8, 5], [0, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9, 9], [5, 5, 5, 3, 1], [41, 55], [0, 1, 1], [0], [4], [4], [], [0, 0, 1, 0, 0, 1, 0], [8, 4, 5, 2, 9], [2, 0], [6, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 6, 6, 3, 3, 0, 3, 1, 1, 0, 0, 7, 5, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(beta, tf.math.square(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [3, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 1, 9], [5, 5, 5, 3, 1], [41, 55], [0], [1], [], [5], [], [0, 1], [0, 4, 5, 2, 9], [0, 0], [6]], "fitness": -0.09828571230173111, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3596213888010378, 3.038527955185106, 4.926220334075335, 8.061498261430181, 12.320370317780819, 17.903957314542286], "accuracy": [0.09708096832036972, 0.09774138033390045, 0.09985470771789551, 0.0956280529499054, 0.10500594228506088, 0.10011887550354004], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9, 9], [2, 3, 3], [41, 55], [0, 1, 1], [0], [7], [2], [6], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3007502988218995, 2.303630728495513, 2.302468834457428, 2.3032408106391613, 2.3031595580219797, 2.30093245726094], "accuracy": [0.09536388516426086, 0.08492933213710785, 0.0886276587843895, 0.09060890227556229, 0.09219389408826828, 0.09272222965955734], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 5, 2, 5, 6, 1, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [2, 3, 0, 2], [41, 55], [0, 0, 1], [0, 1], [6], [5], [], [1, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3007502988218995, 2.303630728495513, 2.302468834457428, 2.3032408106391613, 2.3031595580219797, 2.30093245726094], "accuracy": [0.09536388516426086, 0.08492933213710785, 0.0886276587843895, 0.09060890227556229, 0.09219389408826828, 0.09272222965955734], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [57, 83, 84, 57], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 1, 9], [2, 3, 3], [41, 55], [0], [1], [], [4], [], [0, 1], [0, 4, 5, 2, 9], [2, 0], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3007502988218995, 2.303630728495513, 2.302468834457428, 2.3032408106391613, 2.3031595580219797, 2.30093245726094], "accuracy": [0.09536388516426086, 0.08492933213710785, 0.0886276587843895, 0.09060890227556229, 0.09219389408826828, 0.09272222965955734], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [81, 83, 84, 57], [0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 6, 2, 5, 6, 1, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [3, 5, 0, 3, 1], [41, 55], [1], [1], [], [5], [], [1, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 2, 0, 1, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3007502988218995, 2.303630728495513, 2.302468834457428, 2.3032408106391613, 2.3031595580219797, 2.30093245726094], "accuracy": [0.09536388516426086, 0.08492933213710785, 0.0886276587843895, 0.09060890227556229, 0.09219389408826828, 0.09272222965955734], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]