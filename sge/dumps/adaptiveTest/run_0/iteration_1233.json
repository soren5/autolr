[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 8, 3, 9, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8431428670883179, "mapping_values": [1, 13, 13, 8, 5, 4, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.multiply(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.039502523562943, 1.0858599616788114, 0.7642570593180421, 0.6802614044047239, 0.6194164428130243, 0.5794594987681703, 0.5388835773350241, 0.5103931793636256, 0.493970177129842, 0.4881374453981838, 0.46237845136079775, 0.42682902628499064, 0.4166167450107052, 0.4041255673696462, 0.3856794950575042, 0.38432855446498315, 0.371610750450261, 0.3616763109292305, 0.34048866587166365, 0.32914732886878584, 0.32508808150424967, 0.322049528466649, 0.31208347879018544, 0.29372361150825216, 0.2984109682854786, 0.2775832965720079, 0.2868636559816541, 0.2821192610391363, 0.2765253390405849, 0.2709664590661678, 0.25737127871514, 0.24735537107988134, 0.24656181215547127, 0.22752600949020937, 0.21926921367125662, 0.21614807923676835, 0.2160450362329391, 0.21061222967714477, 0.2120306412494414, 0.1957456551865186, 0.19085918196267015, 0.18155501197751456, 0.17872791814963107], "accuracy": [0.30365869402885437, 0.613789439201355, 0.7082287669181824, 0.7483819723129272, 0.7712323069572449, 0.7887993454933167, 0.8038568496704102, 0.8113855719566345, 0.8212917447090149, 0.8272355198860168, 0.8317263126373291, 0.8462554216384888, 0.8470479249954224, 0.8504821062088013, 0.8568220734596252, 0.8556333184242249, 0.863558292388916, 0.8671245574951172, 0.8739928603172302, 0.8799365758895874, 0.878351628780365, 0.8836349248886108, 0.8837670087814331, 0.8877294659614563, 0.8912957310676575, 0.8949940800666809, 0.8914278149604797, 0.8924844861030579, 0.8956544995307922, 0.8976356983184814, 0.9037115573883057, 0.9014661312103271, 0.904768168926239, 0.9132214784622192, 0.91559898853302, 0.9187690019607544, 0.9196935892105103, 0.9210143685340881, 0.9149385690689087, 0.9270902276039124, 0.9261656403541565, 0.9285431504249573, 0.9303922653198242], "val_loss": [0.9032816205705915, 0.6172839743750436, 0.5423738956451416, 0.5077542236873082, 0.4762636423110962, 0.43859985896519255, 0.42020020314625334, 0.3971909284591675, 0.3993266224861145, 0.3909279363495963, 0.3664076754025051, 0.35648924112319946, 0.34291553497314453, 0.3343281660761152, 0.3255151169640677, 0.333274177142552, 0.3186666710036142, 0.3121390513011387, 0.3183333022253854, 0.31671180043901714, 0.3177546433040074, 0.29434612819126676, 0.2937638589314052, 0.3039278302873884, 0.29914930037089754, 0.3021354675292969, 0.29505144698279245, 0.29950058460235596, 0.2926689641816275, 0.29833641222545076, 0.2863850508417402, 0.2894021953855242, 0.2959348218781607, 0.2873137337820871, 0.2834221294948033, 0.28847059181758333, 0.2979706610952105, 0.28698224680764334, 0.2900369678224836, 0.2957735402243478, 0.30334278515407015, 0.2958446315356663, 0.29419524329049246], "val_accuracy": [0.652999997138977, 0.7356666922569275, 0.7583333253860474, 0.7773333191871643, 0.7886666655540466, 0.7996666431427002, 0.8036666512489319, 0.8236666917800903, 0.8159999847412109, 0.8299999833106995, 0.8366666436195374, 0.8429999947547913, 0.8513333201408386, 0.8496666550636292, 0.8556666374206543, 0.8486666679382324, 0.8583333492279053, 0.8636666536331177, 0.859666645526886, 0.859000027179718, 0.862333357334137, 0.8703333139419556, 0.8686666488647461, 0.8713333606719971, 0.8659999966621399, 0.8713333606719971, 0.8686666488647461, 0.8700000047683716, 0.8766666650772095, 0.8766666650772095, 0.8769999742507935, 0.8766666650772095, 0.8756666779518127, 0.8796666860580444, 0.8840000033378601, 0.8786666393280029, 0.8759999871253967, 0.8846666812896729, 0.8823333382606506, 0.8799999952316284, 0.878333330154419, 0.8806666731834412, 0.8830000162124634]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 8, 3, 9, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8425714373588562, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 3, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0394990204694077, 1.0854707471194789, 0.7645223421852713, 0.682944335737217, 0.6182826622255789, 0.5818909266448181, 0.5377705483199772, 0.5075573882784559, 0.49023580760169166, 0.48626925055739145, 0.46227320109565007, 0.42681441910042345, 0.4129844174023239, 0.40413309583543017, 0.3850304143634439, 0.38999897043986204, 0.3740474747833622, 0.36438954827524433, 0.34679826602424374, 0.33143347325405, 0.33046002744478936, 0.32569988551959855, 0.3163983354502665, 0.295066353336632, 0.29987194184314747, 0.2770018715270207, 0.28357147176535596, 0.2800675864390347, 0.2711955548167276, 0.2602333472098153, 0.26002365852611536, 0.2458680436013161, 0.24798842451520772, 0.2308302493088155, 0.22597783609089078, 0.22720359819259123, 0.22202581424266593, 0.21679258576835767, 0.20824973714263478, 0.20078437656199596, 0.19325342882247948, 0.1914604944957482, 0.18932414318411153, 0.18714120602839185], "accuracy": [0.3035266101360321, 0.6140536069869995, 0.7094175219535828, 0.7481178045272827, 0.7705719470977783, 0.7845727205276489, 0.8067626357078552, 0.8115176558494568, 0.8219521641731262, 0.8252542614936829, 0.8284242749214172, 0.8451988101005554, 0.8467837572097778, 0.8496896028518677, 0.8599920868873596, 0.8535200357437134, 0.8626337051391602, 0.8688416481018066, 0.8708229064941406, 0.8791441321372986, 0.8795403242111206, 0.8790120482444763, 0.8791441321372986, 0.8908994793891907, 0.8882578015327454, 0.8956544995307922, 0.8923524022102356, 0.896446943283081, 0.896446943283081, 0.89988112449646, 0.9012019634246826, 0.906749427318573, 0.9034473896026611, 0.9138818979263306, 0.9100515246391296, 0.9146744012832642, 0.913617730140686, 0.9159952402114868, 0.9166556596755981, 0.921938955783844, 0.9232597947120667, 0.9232597947120667, 0.9257693886756897, 0.9256373047828674], "val_loss": [0.9034383637564523, 0.616990498134068, 0.5406086785452706, 0.506314890725272, 0.4787206138883318, 0.43743790899004253, 0.4174080661364964, 0.39613852330616545, 0.3965730241366795, 0.38893556594848633, 0.3671503152166094, 0.3537576454026358, 0.3409503698348999, 0.3376827495438712, 0.332663221018655, 0.3349753703389849, 0.32513274465288433, 0.31373895917619976, 0.31787323100226267, 0.32061303513390677, 0.32040331193378996, 0.2988080552646092, 0.29386069093431744, 0.30078311477388653, 0.2999712995120457, 0.307456978729793, 0.29348563296454294, 0.29247366530554636, 0.2907574006489345, 0.29720702341624666, 0.28982957771846224, 0.2859038710594177, 0.28959245341164724, 0.28413175685065134, 0.2872071351323809, 0.29006281069346834, 0.29463995354516165, 0.2856619187763759, 0.2913288729531424, 0.2916595595223563, 0.30563383443014963, 0.29955909081867765, 0.29534408024379183, 0.30062652485711233], "val_accuracy": [0.6536666750907898, 0.734000027179718, 0.7583333253860474, 0.7749999761581421, 0.781333327293396, 0.7963333129882812, 0.8116666674613953, 0.828000009059906, 0.8149999976158142, 0.8270000219345093, 0.8363333344459534, 0.8446666598320007, 0.8506666421890259, 0.8519999980926514, 0.8526666760444641, 0.8483333587646484, 0.8526666760444641, 0.859666645526886, 0.8616666793823242, 0.8579999804496765, 0.8656666874885559, 0.8646666407585144, 0.8683333396911621, 0.8696666955947876, 0.8659999966621399, 0.8693333268165588, 0.8650000095367432, 0.8756666779518127, 0.8776666522026062, 0.875, 0.8766666650772095, 0.878333330154419, 0.8776666522026062, 0.8833333253860474, 0.8799999952316284, 0.8759999871253967, 0.8820000290870667, 0.8833333253860474, 0.8853333592414856, 0.8853333592414856, 0.8813333511352539, 0.878333330154419, 0.8820000290870667, 0.8826666474342346]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 8, 3, 9, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8420000076293945, "mapping_values": [1, 13, 13, 8, 5, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.039501280234144, 1.08597595073512, 0.7640496403974801, 0.6806075913306823, 0.6178614215261318, 0.5797802698437438, 0.5389414184113315, 0.5078340148677002, 0.49352292405332415, 0.48714953386993015, 0.4639325510233684, 0.4249311271140195, 0.41566935060770915, 0.40169892584989414, 0.38210654987351705, 0.3826880252057409, 0.3700708759821417, 0.35899102441418396, 0.34014262034042464, 0.3308616310629658, 0.32685043459964574, 0.32470398689021746, 0.31561722118998436, 0.2982841761530099, 0.3021969230474813, 0.2813058338105765, 0.289960921782985, 0.28097846145170746, 0.27758011936338395, 0.264296547989599, 0.260981580423342, 0.2478938000809326, 0.24822985960027688, 0.23344888902138788, 0.23097449849704002, 0.22237235559621712, 0.222336766183211, 0.2129878973062595, 0.20904642503731727, 0.20133180437055262], "accuracy": [0.30365869402885437, 0.6141856908798218, 0.707568347454071, 0.7497028112411499, 0.7695152759552002, 0.785629391670227, 0.8043851256370544, 0.8094043135643005, 0.8203672170639038, 0.8265751004219055, 0.8302733898162842, 0.8457271456718445, 0.8473120927810669, 0.8529917001724243, 0.8601241707801819, 0.8605204224586487, 0.8648791313171387, 0.8665962219238281, 0.871879518032074, 0.8800686597824097, 0.8778232932090759, 0.8805969953536987, 0.8838990926742554, 0.8844274282455444, 0.8887861371040344, 0.8916919827461243, 0.8893144726753235, 0.8956544995307922, 0.8920882344245911, 0.9037115573883057, 0.9019944667816162, 0.9046360850334167, 0.9035794734954834, 0.9111081957817078, 0.9108440279960632, 0.9140139818191528, 0.9163914918899536, 0.9167877435684204, 0.9215427041053772, 0.9215427041053772], "val_loss": [0.9031922476632255, 0.6169282027653286, 0.5408682141985212, 0.5084891319274902, 0.4783359595707485, 0.43796098232269287, 0.4174387625285557, 0.3955258216176714, 0.3974313225064959, 0.398144577230726, 0.3661211133003235, 0.35357784373419626, 0.34032091924122404, 0.3367870364870344, 0.3254151770046779, 0.3328316296849932, 0.31737570251737324, 0.311345636844635, 0.32031379427228657, 0.3206674371446882, 0.3168078235217503, 0.2960599490574428, 0.29524244580950054, 0.3037855199405125, 0.2996638076645987, 0.30260791948863436, 0.2978717088699341, 0.29900323493140085, 0.2925371527671814, 0.29690184763499666, 0.2947831835065569, 0.28901842662266325, 0.2955062985420227, 0.29293411118643625, 0.28509407384055, 0.2883601358958653, 0.2937708156449454, 0.2913957153047834, 0.2954967532839094, 0.29285092864717754], "val_accuracy": [0.6526666879653931, 0.7353333234786987, 0.7609999775886536, 0.7713333368301392, 0.7850000262260437, 0.7973333597183228, 0.8063333630561829, 0.8263333439826965, 0.8159999847412109, 0.8216666579246521, 0.8386666774749756, 0.8483333587646484, 0.8536666631698608, 0.8516666889190674, 0.8573333621025085, 0.8463333249092102, 0.8550000190734863, 0.8629999756813049, 0.856333315372467, 0.8576666712760925, 0.8669999837875366, 0.8663333058357239, 0.8679999709129333, 0.8653333187103271, 0.8679999709129333, 0.8726666569709778, 0.8700000047683716, 0.8669999837875366, 0.8776666522026062, 0.8730000257492065, 0.871666669845581, 0.8766666650772095, 0.875333309173584, 0.8796666860580444, 0.8846666812896729, 0.8826666474342346, 0.8773333430290222, 0.8806666731834412, 0.8830000162124634, 0.8823333382606506]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 8, 3, 9, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [38, 77, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8417142629623413, "mapping_values": [1, 13, 13, 8, 5, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0395024718546737, 1.0859045705948334, 0.7641059909167937, 0.6806855494587759, 0.6194832134224783, 0.5794894305737956, 0.5386036345751184, 0.5090698383826274, 0.49247844803208896, 0.48474868105434393, 0.46311632973753214, 0.42646673278030134, 0.41541925964653376, 0.40161205222578, 0.3800869650332809, 0.38406448126264364, 0.3685163911724796, 0.36004192858497464, 0.3414271363980892, 0.33776384341308957, 0.32757348922013513, 0.3197875218368745, 0.31131913014894874, 0.2932562096999731, 0.29288729655271856, 0.27662011126029007, 0.28245867402042457], "accuracy": [0.30365869402885437, 0.6139215230941772, 0.7087571024894714, 0.7475894689559937, 0.7684586048126221, 0.7861577272415161, 0.8058380484580994, 0.8105930685997009, 0.8206313848495483, 0.8285563588142395, 0.8284242749214172, 0.8453308939933777, 0.8481045961380005, 0.8525954484939575, 0.8609166741371155, 0.859199583530426, 0.8652753829956055, 0.86553955078125, 0.8739928603172302, 0.8762382864952087, 0.8759741187095642, 0.884691596031189, 0.8808611631393433, 0.8870691061019897, 0.8886540532112122, 0.8963148593902588, 0.8926165699958801], "val_loss": [0.9032878194536481, 0.6167661632810321, 0.541990978377206, 0.5094907794679914, 0.4791094405310495, 0.4384666681289673, 0.41809479679380146, 0.39437414918627056, 0.39552288396017893, 0.3926820755004883, 0.37025223459516254, 0.3533428226198469, 0.34635898896626066, 0.33528690678732737, 0.32495843512671335, 0.33431276253291536, 0.31722526039396015, 0.3115347283227103, 0.3216181993484497, 0.3176884480885097, 0.3199565751211984, 0.29497842277799335, 0.2964990905353001, 0.30084758145468576, 0.2943143589156015, 0.2980178679738726, 0.299909736428942], "val_accuracy": [0.652999997138977, 0.7350000143051147, 0.7603333592414856, 0.7706666588783264, 0.7853333353996277, 0.79666668176651, 0.809333324432373, 0.8259999752044678, 0.8220000267028809, 0.824999988079071, 0.8343333601951599, 0.8456666469573975, 0.8463333249092102, 0.8500000238418579, 0.8576666712760925, 0.8463333249092102, 0.8569999933242798, 0.8619999885559082, 0.8560000061988831, 0.8560000061988831, 0.8636666536331177, 0.8743333220481873, 0.8659999966621399, 0.8663333058357239, 0.8686666488647461, 0.8700000047683716, 0.8669999837875366]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 8, 3, 9, 9, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 1, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [54, 60, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [3, 0, 3, 3, 0], [38, 77, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7977142930030823, "mapping_values": [1, 10, 10, 7, 3, 2, 9, 9, 4, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.sqrt(alpha), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.219045368057783, 1.7187702398195621, 1.2650346033892155, 1.0528362898101675, 0.981502787445861, 0.8811000846931569, 0.8409312682979379, 0.846443979219911, 0.780742369126713, 0.7560401225700952, 0.7547707454466376, 0.7293959974911959, 0.6977594910265039, 0.6853585603010102, 0.6830969689906691, 0.6684055300578308, 0.6541544610735069, 0.6641814292713226, 0.6353486979705247, 0.6303402502239813, 0.6344403099972794, 0.6299849189015868, 0.6165938496573915, 0.6159029186771783, 0.6002380939805985, 0.6000640723746545, 0.592673917621937, 0.5859796882872379, 0.598062286759884, 0.5779313545390175, 0.5587103409364695, 0.5728482546555667], "accuracy": [0.24580636620521545, 0.46704530715942383, 0.5556729435920715, 0.6215823292732239, 0.6419231295585632, 0.6807554960250854, 0.6977941989898682, 0.6856426000595093, 0.71100252866745, 0.7191916704177856, 0.7187954187393188, 0.7318716049194336, 0.7413815855979919, 0.7428345084190369, 0.7371549606323242, 0.7493065595626831, 0.759080708026886, 0.752212405204773, 0.7582882046699524, 0.7651565074920654, 0.7609298825263977, 0.7670056819915771, 0.7664773464202881, 0.7775723338127136, 0.7778365015983582, 0.7786290049552917, 0.7819310426712036, 0.7864218950271606, 0.774270236492157, 0.7823272943496704, 0.7917051911354065, 0.7825914621353149], "val_loss": [1.7007712296077184, 1.0162174361092704, 0.8286358799253192, 0.7570972953523908, 0.6727551903043475, 0.6085351535252163, 0.6676055192947388, 0.5766694886343819, 0.5720906938825335, 0.5854956592832293, 0.5303141048976353, 0.5207811423710415, 0.5163628714425224, 0.5099984748022897, 0.5418706110545567, 0.5032070364270892, 0.4929478849683489, 0.48836210795811247, 0.4873299428394863, 0.48259191853659494, 0.481809173311506, 0.48256237166268484, 0.4760427985872541, 0.4700309549059187, 0.47386445317949566, 0.4626288414001465, 0.44798554692949566, 0.4766510043825422, 0.43903064727783203, 0.4615626846040998, 0.46122004304613384, 0.4439149924686977], "val_accuracy": [0.5249999761581421, 0.6133333444595337, 0.6556666493415833, 0.637333333492279, 0.7106666564941406, 0.7440000176429749, 0.687666654586792, 0.7386666536331177, 0.7310000061988831, 0.7440000176429749, 0.7720000147819519, 0.7733333110809326, 0.7713333368301392, 0.7693333625793457, 0.7390000224113464, 0.7826666831970215, 0.7756666541099548, 0.7793333530426025, 0.7956666946411133, 0.7903333306312561, 0.7956666946411133, 0.7693333625793457, 0.784333348274231, 0.8013333082199097, 0.7963333129882812, 0.796999990940094, 0.8063333630561829, 0.7916666865348816, 0.8046666383743286, 0.7739999890327454, 0.7933333516120911, 0.7976666688919067]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 1, 8, 3, 9, 3, 4, 1, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 2, 0, 0, 2, 0, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 10, 0, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [5, 0, 0, 3, 0], [38, 24, 61], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7968571186065674, "mapping_values": [1, 19, 19, 11, 8, 5, 9, 9, 4, 5, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.229609148550531, 1.794952396986869, 1.3011144881770595, 1.0816182661538332, 0.9852099092550534, 0.904593266752402, 0.8556548032809747, 0.8141938125169226, 0.7959524330257063, 0.7698727421567834, 0.7779643180001571, 0.7220247297821705, 0.7109076740514679, 0.7019237502297359, 0.6880324132737545, 0.673696760645695, 0.6616398508065979, 0.6413405577598892, 0.632061131319208, 0.6320538899413882, 0.6333402197799662, 0.6344942020198467, 0.6224220990504823, 0.6232750738742502, 0.6152934618535342, 0.6073687159153827, 0.607631131973186, 0.57988642100818], "accuracy": [0.24105137586593628, 0.45304450392723083, 0.5445780158042908, 0.6127327680587769, 0.6478668451309204, 0.6753401160240173, 0.6893408894538879, 0.6970016956329346, 0.7074362635612488, 0.7040021419525146, 0.7098137736320496, 0.7238145470619202, 0.7292299270629883, 0.7339849472045898, 0.7367587089538574, 0.7449478507041931, 0.7464007139205933, 0.7541936039924622, 0.7560427784919739, 0.7623828053474426, 0.7548540234565735, 0.7627789974212646, 0.7629110813140869, 0.7619865536689758, 0.7647602558135986, 0.7714964747428894, 0.7666094303131104, 0.7820631265640259], "val_loss": [1.7442689623151506, 1.1017851829528809, 0.868340253829956, 0.7248684849057879, 0.7302556378500802, 0.6243113960538592, 0.6092862742287772, 0.6113680260522025, 0.559431961604527, 0.5968219212123326, 0.5911312103271484, 0.5355902910232544, 0.5140842029026577, 0.5068596431187221, 0.5177045038768223, 0.5104438747678485, 0.5031137466430664, 0.49771571159362793, 0.4890298332486834, 0.4777319942201887, 0.4992190088544573, 0.5113287482942853, 0.4630722999572754, 0.49193268162863596, 0.47361157621656147, 0.4760237421308245, 0.4717198610305786, 0.5006710631506783], "val_accuracy": [0.5230000019073486, 0.6259999871253967, 0.6333333253860474, 0.7013333439826965, 0.6616666913032532, 0.7363333106040955, 0.7326666712760925, 0.734000027179718, 0.7710000276565552, 0.7336666584014893, 0.7396666407585144, 0.7580000162124634, 0.784333348274231, 0.7866666913032532, 0.7786666750907898, 0.7710000276565552, 0.7749999761581421, 0.7873333096504211, 0.7953333258628845, 0.7983333468437195, 0.7863333225250244, 0.7583333253860474, 0.8009999990463257, 0.7826666831970215, 0.7839999794960022, 0.7839999794960022, 0.7986666560173035, 0.7676666378974915]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 1, 8, 3, 9, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [38, 77, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7951428294181824, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2186340555428608, 1.7160269964829318, 1.2700141793968907, 1.0724188112201722, 0.9717632784362892, 0.892203803083538, 0.8253130071655382, 0.825595340433059, 0.7711047210382858, 0.7505976460660532, 0.7337427756900029, 0.737953585325656, 0.6922773322598054, 0.6749047240986091, 0.6746502220512555, 0.6558790663292915, 0.6576247049234547, 0.6541376045398614, 0.6226650590846851, 0.6243956276470124, 0.6353699849376494, 0.6177136761448434, 0.6031755510338261, 0.608784586706843, 0.5871391166879862, 0.5924251779919807], "accuracy": [0.24541011452674866, 0.4679698944091797, 0.557390034198761, 0.6108836531639099, 0.6458855867385864, 0.6774534583091736, 0.7040021419525146, 0.6930392384529114, 0.7117950320243835, 0.7162858247756958, 0.7253995537757874, 0.7283053994178772, 0.7432307600975037, 0.7485140562057495, 0.7360982894897461, 0.7564390301704407, 0.7532690763473511, 0.7531369924545288, 0.7627789974212646, 0.7663452625274658, 0.759609043598175, 0.7687227725982666, 0.7692511081695557, 0.7773081660270691, 0.7815347909927368, 0.778761088848114], "val_loss": [1.6988463742392403, 1.0141098158700126, 0.8414769342967442, 0.7255668299538749, 0.684379117829459, 0.6207079376493182, 0.6189957516533988, 0.570718629019601, 0.5650468383516584, 0.5442374093191964, 0.5335757562092373, 0.5168313809803554, 0.5149842160088676, 0.5030982324055263, 0.5136523246765137, 0.5135509456907, 0.4997802461896624, 0.47821766989571707, 0.48303944723946707, 0.48005305017743793, 0.47897512572152273, 0.4760969877243042, 0.4722956929888044, 0.4647443635123117, 0.47635865211486816, 0.4658609458378383], "val_accuracy": [0.5249999761581421, 0.6133333444595337, 0.6413333415985107, 0.67166668176651, 0.7070000171661377, 0.7323333621025085, 0.7266666889190674, 0.7400000095367432, 0.731333315372467, 0.7723333239555359, 0.7696666717529297, 0.7716666460037231, 0.7710000276565552, 0.7786666750907898, 0.7516666650772095, 0.7776666879653931, 0.7726666927337646, 0.7933333516120911, 0.7973333597183228, 0.79666668176651, 0.7979999780654907, 0.7789999842643738, 0.7850000262260437, 0.7973333597183228, 0.7906666398048401, 0.7863333225250244]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 8, 3, 2, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 4, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7891428470611572, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2137528758841953, 1.6610579413666056, 1.216624971016161, 1.0225358013825852, 0.9181172359951767, 0.85335867590105, 0.8300303643752146, 0.7769011598473542, 0.7634422380485555, 0.7393236699640916, 0.7441818321527444, 0.6938814918410116, 0.6866065943639481, 0.6662527294348511, 0.6545255815489984, 0.6550872163482235, 0.6384139422569859, 0.6219270421434875, 0.6107213144777253], "accuracy": [0.2537313401699066, 0.4835556745529175, 0.5708624720573425, 0.6302998065948486, 0.6668868064880371, 0.6886804699897766, 0.6996433734893799, 0.7092854380607605, 0.7160216569900513, 0.7153612375259399, 0.7201162576675415, 0.7353057861328125, 0.7376832365989685, 0.7471932172775269, 0.7555144429206848, 0.7506273984909058, 0.7560427784919739, 0.7619865536689758, 0.7644960880279541], "val_loss": [1.6710391725812639, 0.9929486683436802, 0.7900815520967756, 0.6806223222187587, 0.7077663625989642, 0.5955313444137573, 0.5854363782065255, 0.5747443948473249, 0.5375570910317558, 0.5774209839957101, 0.5676671607153756, 0.5251674992697579, 0.4979917662484305, 0.487694297518049, 0.48989689350128174, 0.486049975667681, 0.4867195742470877, 0.4858722857066563, 0.48128494194575716], "val_accuracy": [0.5496666431427002, 0.6236666440963745, 0.6800000071525574, 0.7183333039283752, 0.6723333597183228, 0.7473333477973938, 0.7379999756813049, 0.7549999952316284, 0.7739999890327454, 0.7329999804496765, 0.7456666827201843, 0.7599999904632568, 0.7860000133514404, 0.7976666688919067, 0.7823333144187927, 0.7839999794960022, 0.7793333530426025, 0.7929999828338623, 0.7929999828338623]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 2, 6, 7, 2, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 2, 0, 0, 0, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 67, 83, 0, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [5, 0, 0, 3, 0], [38, 31, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10428571701049805, "mapping_values": [1, 17, 17, 9, 8, 4, 10, 10, 6, 4, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.subtract(grad, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302513077211512, 2.3023883157071814, 2.3016029087906076, 2.301053961207287, 2.3027967683328314, 2.3028424835759322, 2.3019289442608306, 2.3013299415927473, 2.3017023159544054, 2.3011970978528913, 2.300965155561319, 2.3012948217582174, 2.2999126357551045, 2.300098366378998, 2.3014493195797394, 2.3003103034906633, 2.2995272393491777, 2.3000439661305894, 2.299567673042891, 2.3008630712191978, 2.3000688747471005, 2.3006386904589897, 2.3001284303603438, 2.3003019338680093, 2.3011978653207543, 2.2992385494049277, 2.3017163358549038, 2.2999932790208786, 2.2999621011703524, 2.2996996324516763, 2.2990611727841386, 2.3014278684892453, 2.2980451071188357, 2.300064079608144, 2.301095332829802, 2.298464370520202, 2.299663234396287, 2.2981790776391935, 2.299106814779106, 2.2991081086195155, 2.2986518904328612, 2.298455508283384, 2.2979399601481987, 2.3003025847560834, 2.2995891488538427, 2.298510368993616, 2.2975567129734973, 2.297006259237251, 2.297564356003644, 2.2973711024878787, 2.2978560952557046, 2.296618343486038, 2.297895344477351, 2.296748609401767, 2.2962299761219804, 2.2965246094940612, 2.295924610701755, 2.2972218416559382, 2.2982932144797883, 2.296102494139162, 2.2965946613506256, 2.2977964403827382, 2.2955614078188176, 2.294116477483866, 2.2962636564700927, 2.2958708981544333, 2.295343920854199, 2.2944619939028392, 2.295161041585509, 2.296926716142059, 2.295253378572465, 2.294318072626761, 2.2949169803179013, 2.2948782593897543, 2.295693589900668, 2.295089714783152, 2.2953275906773545, 2.2943283124071434, 2.2943935858464872, 2.2943416793096683, 2.294889316740226, 2.2932139688778266, 2.2938402641592655, 2.2937888882777724, 2.2931869256104367, 2.2945259755801812, 2.294362902468096, 2.29411996461145, 2.2935525417453846, 2.293756683221378, 2.2932986566623943, 2.2930687871418294, 2.2920692762788795, 2.292707217226191, 2.292169513672161, 2.2939600859808174, 2.2914586133330865, 2.2919018309208634, 2.293694199446312, 2.2936941097283707], "accuracy": [0.08981640636920929, 0.08387266844511032, 0.09113723784685135, 0.09206181764602661, 0.09285431355237961, 0.08875974267721176, 0.09919429570436478, 0.09008057415485382, 0.09021265059709549, 0.09681680053472519, 0.09285431355237961, 0.09100515395402908, 0.09417514503002167, 0.09245806187391281, 0.09034473448991776, 0.0948355570435524, 0.10051512718200684, 0.0936468094587326, 0.09932637959718704, 0.09087307006120682, 0.0952318087220192, 0.09417514503002167, 0.10117553919553757, 0.0948355570435524, 0.09166556596755981, 0.09681680053472519, 0.09734513610601425, 0.09298639744520187, 0.09602430462837219, 0.09615638852119446, 0.10117553919553757, 0.09351472556591034, 0.09126931428909302, 0.09787346422672272, 0.0948355570435524, 0.09734513610601425, 0.09655263274908066, 0.09628847241401672, 0.0956280529499054, 0.09417514503002167, 0.09668471664190292, 0.10196803510189056, 0.10011887550354004, 0.09470347315073013, 0.09826971590518951, 0.09708096832036972, 0.10011887550354004, 0.10077928751707077, 0.09721305221319199, 0.10394927859306335, 0.09668471664190292, 0.10474177449941635, 0.10645885765552521, 0.09642054885625839, 0.10051512718200684, 0.109232597053051, 0.108440101146698, 0.10117553919553757, 0.09853387624025345, 0.10896842926740646, 0.109232597053051, 0.09932637959718704, 0.10579843819141388, 0.10619468986988068, 0.10355303436517715, 0.1080438494682312, 0.11161009222269058, 0.10857218503952026, 0.10936468094587326, 0.10355303436517715, 0.10989301651716232, 0.11293092370033264, 0.107647605240345, 0.10910051316022873, 0.10619468986988068, 0.10751552134752274, 0.10910051316022873, 0.11108175665140152, 0.10777968913316727, 0.10500594228506088, 0.10896842926740646, 0.11530841141939163, 0.11068551242351532, 0.11451591551303864, 0.11715757846832275, 0.10408136248588562, 0.11332716792821884, 0.11266675591468811, 0.11279883980751038, 0.11213842034339905, 0.11015717685222626, 0.11028926074504852, 0.11570466309785843, 0.11266675591468811, 0.11702549457550049, 0.11134592443704605, 0.11240258812904358, 0.11557257920503616, 0.11742173880338669, 0.11728965491056442], "val_loss": [1.9709022385733468, 1.9708044188363212, 1.970707961491176, 1.970609256199428, 1.970512526375907, 1.9704156603131975, 1.97031797681536, 1.9702208382742745, 1.9701238359723772, 1.9700273786272322, 1.9699315343584334, 1.9698351451328822, 1.969738279070173, 1.969641889844622, 1.9695449556623186, 1.969449247632708, 1.969352858407157, 1.969256809779576, 1.9691606249128069, 1.9690648487636022, 1.9689685276576452, 1.9688728196280343, 1.9687770434788294, 1.968681812286377, 1.9685846056256975, 1.9684892381940569, 1.968392780848912, 1.9682960510253906, 1.9681994574410575, 1.9681025232587541, 1.968005657196045, 1.9679091998508997, 1.967813219342913, 1.967717170715332, 1.9676215989249093, 1.9675258227757044, 1.9674301828656877, 1.9673336574009486, 1.9672367232186454, 1.9671416963849748, 1.9670446940830775, 1.9669486454554967, 1.9668522562299455, 1.9667562757219588, 1.9666592053004675, 1.9665634291512626, 1.9664677211216517, 1.9663728986467635, 1.9662776674543108, 1.9661822319030762, 1.9660863876342773, 1.965991497039795, 1.9658970151628767, 1.965801170894078, 1.9657056672232491, 1.9656104360307967, 1.9655138424464635, 1.9654182706560408, 1.9653236525399345, 1.9652280126299178, 1.965132577078683, 1.9650378908429826, 1.9649432727268763, 1.9648483140128, 1.9647529465811593, 1.9646590777805872, 1.9645641871861048, 1.964470522744315, 1.9643755640302385, 1.9642813546316964, 1.9641855784824915, 1.9640904835292272, 1.9639949117388045, 1.963899884905134, 1.9638056073869978, 1.9637111936296736, 1.9636166436331612, 1.963522161756243, 1.9634273392813546, 1.9633324486868722, 1.9632378305707658, 1.9631436892918177, 1.9630496842520577, 1.9629541805812292, 1.9628590856279646, 1.9627655574253626, 1.9626708711896623, 1.962575912475586, 1.9624812262398856, 1.962386199406215, 1.9622923987252372, 1.9621987342834473, 1.9621044567653112, 1.9620094980512346, 1.9619150161743164, 1.961820329938616, 1.9617253031049455, 1.961630071912493, 1.9615372249058314, 1.9614428792681013], "val_accuracy": [0.03866666555404663, 0.039000000804662704, 0.03966666758060455, 0.03999999910593033, 0.0403333343565464, 0.04100000113248825, 0.041333332657814026, 0.041999999433755875, 0.041999999433755875, 0.04233333468437195, 0.043666668236255646, 0.044333335012197495, 0.04500000178813934, 0.04633333161473274, 0.047333333641290665, 0.04766666516661644, 0.04800000041723251, 0.04800000041723251, 0.04899999871850014, 0.049666665494441986, 0.050333332270383835, 0.05066666752099991, 0.05133333429694176, 0.05166666582226753, 0.052666667848825455, 0.0533333346247673, 0.05366666615009308, 0.05400000140070915, 0.054666668176651, 0.054999999701976776, 0.054999999701976776, 0.05533333495259285, 0.056333333253860474, 0.05666666850447655, 0.0573333315551281, 0.05766666680574417, 0.057999998331069946, 0.057999998331069946, 0.05966666713356972, 0.06066666543483734, 0.06066666543483734, 0.06066666543483734, 0.061000000685453415, 0.06199999898672104, 0.06233333423733711, 0.06266666948795319, 0.06400000303983688, 0.06466666609048843, 0.06533333659172058, 0.06599999964237213, 0.06599999964237213, 0.06800000369548798, 0.06800000369548798, 0.07000000029802322, 0.070333331823349, 0.07100000232458115, 0.0716666653752327, 0.07199999690055847, 0.07266666740179062, 0.0729999989271164, 0.07333333045244217, 0.07400000095367432, 0.07566666603088379, 0.07633333653211594, 0.07666666805744171, 0.07733333110809326, 0.07800000160932541, 0.07800000160932541, 0.07866666465997696, 0.07900000363588333, 0.07900000363588333, 0.0806666687130928, 0.08100000023841858, 0.08233333379030228, 0.08299999684095383, 0.08366666734218597, 0.08500000089406967, 0.0860000029206276, 0.08699999749660492, 0.08733333647251129, 0.08799999952316284, 0.08833333104848862, 0.08933333307504654, 0.09066666662693024, 0.09200000017881393, 0.09233333170413971, 0.09233333170413971, 0.09300000220537186, 0.09333333373069763, 0.09466666728258133, 0.09533333033323288, 0.09533333033323288, 0.0963333323597908, 0.09700000286102295, 0.09799999743700027, 0.09966666996479034, 0.1003333330154419, 0.10066666454076767, 0.10233332961797714, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 8, 3, 1, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [93, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 3, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))))), grad), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.1269361680887, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1946902722120285, 0.10870426893234253, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9745115552629744, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 1, 5, 8, 3, 9, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 9, 8, 9], [4, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [4, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [54, 55], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.4546252139697002, 2.27786570186915e+29, 2.311934085239304, 2.313642944815357, 2.315679490810309, 2.3181672778663036, 2.3211596338677447], "accuracy": [0.03143574297428131, 0.09232597798109055, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [4.014311245509556, 1.9811926569257463, 1.9825468744550432, 1.9841675758361816, 1.9861506053379603, 1.988499709538051, 1.9914797374180384], "val_accuracy": [0.05966666713356972, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 8, 3, 9, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [7, 4, 7, 7, 8, 9], [4, 0, 0, 3, 3], [38, 77, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.subtract(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.3004192037651797e+17, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08625016361474991, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 8, 3, 2, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [38, 77, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [54, 55], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [7, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 2, 6, 7, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 2, 0, 0, 2, 1, 1, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 6, 17, 0, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [3, 3, 7, 7, 8, 9, 9], [5, 1, 0, 3, 0], [38, 77, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 2, 10, 10, 7, 3, 3, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), alpha), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(beta), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301928415526457, 2.3025852239142948, 2.3025851789136147, 2.302585030496396, 2.3025852509335976, 2.3025851609322374], "accuracy": [0.09708096832036972, 0.09100515395402908, 0.09628847241401672, 0.09377889335155487, 0.08994849026203156, 0.09311848133802414], "val_loss": [1.973644392830985, 1.973644392830985, 1.9736443247113908, 1.9736443247113908, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 1, 5, 8, 3, 9, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [5, 3, 0, 3, 0], [21, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 9, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [54, 55], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 9, 9, 4, 5, 2, 2, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(alpha)), grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303615172588594, 2.314506051121859, 2425.373702331289, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0878351628780365, 0.07885351777076721, 0.0936468094587326, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9739372389657157, 1.9860918862479073, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.01966666616499424, 0.07999999821186066, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 1, 5, 8, 3, 9, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 6, 17, 0, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [5, 3, 7, 9, 8, 9], [5, 0, 0, 3, 0], [62, 62, 80], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.059714287519454956, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302931982150498, 2.304203530501664, 2.3050778952603483, 2.307098471619245, 2.3117461367652337, 2.3152573950743207, 2.319112008195181, 2.323082512742288, 2.3304191425476155, 2.3400865452652675, 2.3612789968851615, 136.5545329599175, NaN, NaN, NaN, NaN], "accuracy": [0.0878351628780365, 0.08136309683322906, 0.0870426595211029, 0.08241976052522659, 0.08334434032440186, 0.07436270266771317, 0.07898560166358948, 0.07687227427959442, 0.07330603897571564, 0.0758156105875969, 0.0750231146812439, 0.09140139818191528, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9718025752476283, 1.9728666714259557, 1.9742001805986678, 1.976182528904506, 1.9783935546875, 1.9807671819414412, 1.983957358769008, 1.9876223291669572, 1.9932305472237724, 2.0031065940856934, 2.029365267072405, 1.0924671937445733e+21, NaN, NaN, NaN, NaN], "val_accuracy": [0.03133333474397659, 0.027666667476296425, 0.027666667476296425, 0.02500000037252903, 0.028999999165534973, 0.03733333200216293, 0.049666665494441986, 0.0663333311676979, 0.0846666693687439, 0.0949999988079071, 0.10000000149011612, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 0, 3, 5, 3, 1, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [3, 1, 0, 3, 0], [38, 77, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 18, 18, 10, 8, 3, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.negative(grad), tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3025551577285768, 2.3025341478903782, 2.3018519148425405, 2.301411807529206, 2.303253599838763, 2.3034008080539543], "accuracy": [0.08981640636920929, 0.08334434032440186, 0.09074098616838455, 0.09126931428909302, 0.09179764986038208, 0.08770307898521423], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 8, 3, 2, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [2, 0, 0, 3, 0], [38, 77, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3025551577285768, 2.3025341478903782, 2.3018519148425405, 2.301411807529206, 2.303253599838763, 2.3034008080539543], "accuracy": [0.08981640636920929, 0.08334434032440186, 0.09074098616838455, 0.09126931428909302, 0.09179764986038208, 0.08770307898521423], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 8, 3, 2, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [5, 77, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [54, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.03514285758137703, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [2.3026617872023767, 2.302904551480472, 2.3024842634555007, 2.3023206362587634, 2.304414799279226, 2.3048223301624624], "accuracy": [0.08968432247638702, 0.08228767663240433, 0.08889182657003403, 0.08889182657003403, 0.09008057415485382, 0.08506141602993011], "val_loss": [1.971245629446847, 1.9714937210083008, 1.9717393602643694, 1.9719907896859306, 1.9722375869750977, 1.972484929221017], "val_accuracy": [0.03500000014901161, 0.03400000184774399, 0.03333333507180214, 0.03200000151991844, 0.03133333474397659, 0.03033333271741867]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 2, 1, 8, 3, 2, 3, 0, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 64, 17, 0, 60, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [5, 0, 0, 3, 0], [38, 77, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.03371428698301315, "mapping_values": [1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302913685484868, 2.3037810111483563, 2.30398251443192, 2.304480880872842, 2.3071823332681634, 2.3082173292930683], "accuracy": [0.08902391046285629, 0.08017434924840927, 0.08572183549404144, 0.08440100401639938, 0.08572183549404144, 0.07779685407876968], "val_loss": [1.9718273026602608, 1.9726647649492537, 1.973493984767369, 1.9743452072143555, 1.9751826013837541, 1.9760263987949915], "val_accuracy": [0.03266666829586029, 0.028999999165534973, 0.026333333924412727, 0.02500000037252903, 0.021666666492819786, 0.02033333294093609]}}]