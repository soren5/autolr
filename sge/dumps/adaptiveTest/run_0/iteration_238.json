[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8377143144607544, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.923869644095003, 1.0218638783637417, 0.7636716474143348, 0.6696216975220789, 0.6080581213678147, 0.5667022833215121, 0.5346607117762482, 0.4943619640417355, 0.4670778949144825, 0.4605536318064649, 0.43247099025705155, 0.4069411057475504, 0.4106838705084343, 0.3896847763207642, 0.3724342662707737, 0.362321245368792, 0.35615608682249517, 0.3508188769235083, 0.34646921078085885, 0.33016565026797323, 0.32151881970781077, 0.30190724779224004, 0.29448908176546196, 0.29677719869759767, 0.27780871740610624, 0.26267329617309343, 0.26430999391098786, 0.26013323293071083, 0.259015371499202, 0.2516201232733303, 0.23443008486140657, 0.23231346843036693, 0.22650848866973367, 0.21819472872286647, 0.2183040183363747, 0.20805071567492384, 0.20477821949041278, 0.1978801148517367, 0.18975507355699953, 0.18087842261605433, 0.1850507676290436, 0.18145752781732696, 0.1854258087848581, 0.16709624209211582, 0.1595465957630328, 0.15837849630947048, 0.16102755388776152, 0.15806064486952348], "accuracy": [0.3531897962093353, 0.6453573107719421, 0.7147008180618286, 0.754589855670929, 0.7730814814567566, 0.7913089394569397, 0.8067626357078552, 0.8193105459213257, 0.8273676037788391, 0.8278959393501282, 0.8437458872795105, 0.8570862412452698, 0.8527275323867798, 0.8557654023170471, 0.8697662353515625, 0.8660678863525391, 0.871879518032074, 0.8689737319946289, 0.8722757697105408, 0.8753136992454529, 0.8787478804588318, 0.8881257176399231, 0.8901069760322571, 0.8898428082466125, 0.8947299122810364, 0.902390718460083, 0.9014661312103271, 0.9014661312103271, 0.9012019634246826, 0.9059569239616394, 0.913089394569397, 0.910711944103241, 0.9149385690689087, 0.9146744012832642, 0.9132214784622192, 0.9190331697463989, 0.9202219247817993, 0.925901472568512, 0.9273543953895569, 0.9285431504249573, 0.9262977242469788, 0.9301280975341797, 0.9285431504249573, 0.9360718727111816, 0.9371285438537598, 0.9360718727111816, 0.937656819820404, 0.9373927116394043], "val_loss": [0.874565771647862, 0.6257356234959194, 0.5436197859900338, 0.49490506308419363, 0.4565619911466326, 0.43708603722708567, 0.41067309038979666, 0.38408137219292776, 0.37919057267052786, 0.3628649796758379, 0.3437588555472238, 0.3412316526685442, 0.35169975246701923, 0.3225005013602121, 0.33228335210255217, 0.31473043135234285, 0.3199813791683742, 0.31222790479660034, 0.30939851488385883, 0.3085020439965384, 0.3019998329026358, 0.29765595708574566, 0.30324405431747437, 0.306175240448543, 0.2929095114980425, 0.2897223745073591, 0.29785417658942087, 0.28521846873419626, 0.28483690534319195, 0.28349154336111887, 0.30592415162495207, 0.2913782170840672, 0.295436544077737, 0.2982062101364136, 0.29342793566840036, 0.29970053264072966, 0.29595411675316946, 0.3078388401440212, 0.2981836795806885, 0.3074076345988682, 0.2917584947177342, 0.3113358361380441, 0.2980105366025652, 0.31256971188953947, 0.31052591119493755, 0.3295491167477199, 0.3168048858642578, 0.3089859400476728], "val_accuracy": [0.6146666407585144, 0.7179999947547913, 0.7540000081062317, 0.7776666879653931, 0.7979999780654907, 0.8076666593551636, 0.8136666417121887, 0.8266666531562805, 0.8320000171661377, 0.8363333344459534, 0.8483333587646484, 0.8479999899864197, 0.8460000157356262, 0.8600000143051147, 0.8503333330154419, 0.8636666536331177, 0.8673333525657654, 0.8606666922569275, 0.8673333525657654, 0.8683333396911621, 0.8636666536331177, 0.8640000224113464, 0.8690000176429749, 0.8679999709129333, 0.8696666955947876, 0.8736666440963745, 0.8786666393280029, 0.878333330154419, 0.8736666440963745, 0.8790000081062317, 0.8769999742507935, 0.8759999871253967, 0.8763333559036255, 0.8756666779518127, 0.8793333172798157, 0.8763333559036255, 0.874666690826416, 0.8773333430290222, 0.8786666393280029, 0.8803333044052124, 0.8796666860580444, 0.8756666779518127, 0.8840000033378601, 0.8836666941642761, 0.8820000290870667, 0.8799999952316284, 0.8813333511352539, 0.8793333172798157]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 1, 0, 1, 9], [0, 1, 3, 0, 0], [32, 89, 6], [0, 1, 0], [1], [8], [4], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.4097142815589905, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.536359204781164, 2.3106209397898563, 2.303686834486988, 2.3004083747420374, 2.2206806941606176, 2.3723051147438263, 2.222059662252952, 2.2889493175580156, 2.2620401310016924, 2.309885330172483], "accuracy": [0.19614318013191223, 0.09430722147226334, 0.09325055778026581, 0.11478008329868317, 0.19191652536392212, 0.15651829540729523, 0.19284109771251678, 0.13076211512088776, 0.20882314443588257, 0.10157178342342377], "val_loss": [1.9932674680437361, 1.9745159149169922, 1.9731320653642928, 1.963139533996582, 1.395252329962594, 1.9724117006574358, 1.6710547379084997, 2.0354659216744557, 1.9862049647739954, 1.9748708180018835], "val_accuracy": [0.10066666454076767, 0.09933333098888397, 0.10000000149011612, 0.11900000274181366, 0.4569999873638153, 0.09833333641290665, 0.25033333897590637, 0.10199999809265137, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [6, 9, 7, 4, 1, 9], [3, 0, 3, 0, 0], [32, 49, 6], [0, 1, 0], [1], [8], [4], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.2800000011920929, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.5365962971470783, 2.3106519266158014, 2.3037623394245736, 2.299275545506445, 2.1573761729453422, 7.672415367537612, 2.305051540827723, 2.3023090457021915, 2.2921526901568594, 2.6964936797739476, 2.121397132209704, 1.87465991605117, 1.720480955051724, 1.5717410461195016, 1.9503092059464329, 1.7104108009387504, 1.5742298805828596, 1.1791734247789596, 1.0830122051363718, 0.9885099393155329, 0.9456769434011624, 0.9219674293265256, 0.9004970563479923, 0.8808614063209405, 0.8577369764701108, 0.8381416674586745, 0.8201645582800198, 0.7907668030446215, 0.7627998199508238, 0.7609131016184578, 0.7640979253321496, 0.7557105785268976, 0.7144079097840512, 0.7182427012862121, 0.6993393787791653, 0.6677929377118121, 0.6329334542153298, 0.6201901433883862, 0.6151305299787128, 0.5636879303562108, 0.5665811452221924, 0.5577641868115794, 0.541864977804362, 0.5416058738470046, 0.5388620836214225, 0.5180206511550025, 0.5030349707598731], "accuracy": [0.19680359959602356, 0.0940430611371994, 0.09338264167308807, 0.11649715900421143, 0.21820102632045746, 0.11240258812904358, 0.0956280529499054, 0.1026284471154213, 0.13036586344242096, 0.13010171055793762, 0.24105137586593628, 0.3553031384944916, 0.4041738212108612, 0.4410249590873718, 0.3793422281742096, 0.40985339879989624, 0.47272488474845886, 0.5778629183769226, 0.6045436263084412, 0.6189407110214233, 0.6395456194877625, 0.6482630968093872, 0.6473385095596313, 0.6542068123817444, 0.6637167930603027, 0.6704530715942383, 0.6737551093101501, 0.6852463483810425, 0.6942279934883118, 0.6866992712020874, 0.6913221478462219, 0.696209192276001, 0.7112666964530945, 0.713908314704895, 0.7228899598121643, 0.7366266250610352, 0.7500990629196167, 0.7514199018478394, 0.7559106945991516, 0.7758552432060242, 0.7781006693840027, 0.7858935594558716, 0.7857614755630493, 0.7836481332778931, 0.7885351777076721, 0.7957997918128967, 0.7959318161010742], "val_loss": [1.993319034576416, 1.9744905744280135, 1.97287688936506, 1.9563463074820382, 3.122335297720773, 1.9766387258257185, 1.9740499087742396, 1.9717696053641183, 1.8658161844526018, 1.8186418669564384, 1.694131851196289, 1.3027374063219344, 1.269174269267491, 1.4283102921077184, 1.768017155783517, 1.133204460144043, 0.9602270126342773, 0.8609453780310494, 0.7779536076954433, 0.7669116258621216, 0.7569192477634975, 0.6890286036900112, 0.7230908530099052, 0.666617785181318, 0.6524479218891689, 0.6263353824615479, 0.6356777974537441, 0.632422685623169, 0.6048989636557442, 0.6244466815676007, 0.5971301283155169, 0.581835286957877, 0.5756670236587524, 0.5728397199085781, 0.5653595754078456, 0.5260865347726005, 0.5028634582247052, 0.5660243204661778, 0.48742032051086426, 0.48143815994262695, 0.5260824305670602, 0.45205012389591764, 0.455648558480399, 0.45885189941951204, 0.44373156343187603, 0.43525344984872, 0.4503991774150303], "val_accuracy": [0.10066666454076767, 0.09933333098888397, 0.09933333098888397, 0.14399999380111694, 0.12099999934434891, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.16433332860469818, 0.30133333802223206, 0.31066668033599854, 0.46399998664855957, 0.5063333511352539, 0.4776666760444641, 0.34033334255218506, 0.5646666884422302, 0.6046666502952576, 0.6290000081062317, 0.652999997138977, 0.643666684627533, 0.6700000166893005, 0.6813333630561829, 0.6476666927337646, 0.690666675567627, 0.6980000138282776, 0.6996666789054871, 0.7046666741371155, 0.7003333568572998, 0.7133333086967468, 0.7143333554267883, 0.7239999771118164, 0.7250000238418579, 0.7323333621025085, 0.7419999837875366, 0.7480000257492065, 0.7689999938011169, 0.7723333239555359, 0.7286666631698608, 0.7739999890327454, 0.778333306312561, 0.7753333449363708, 0.8043333292007446, 0.8036666512489319, 0.7870000004768372, 0.7963333129882812, 0.8026666641235352, 0.7910000085830688]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [5, 3, 3, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [4], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 1], [6, 32, 85]], "fitness": -0.16942857205867767, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.527550959930349, 2.3103881547353713, 2.303218805117614, 2.289980262954867, 2.203344131804035, 2.304234013061765, 2.297605557039256, 2.152220852134754, 2.311450383194276, 2.301104923076224, 2.2758783581801345, 2.3056118976107802], "accuracy": [0.19601109623908997, 0.09206181764602661, 0.10038304328918457, 0.13697001338005066, 0.2016906589269638, 0.10157178342342377, 0.1270637959241867, 0.24805177748203278, 0.1014397069811821, 0.1072513535618782, 0.14555540680885315, 0.09840179979801178], "val_loss": [1.9918595041547502, 1.974564824785505, 1.9721531186785017, 1.7861229351588659, 1.974857943398612, 1.9731627191816057, 1.9421878542218889, 1.9960026741027832, 1.9744507244655065, 1.9233520371573312, 1.976529257638114, 1.9742119652884347], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10000000149011612, 0.16633333265781403, 0.10000000149011612, 0.09833333641290665, 0.2029999941587448, 0.09833333641290665, 0.09833333641290665, 0.14533333480358124, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 5, 1, 9], [3, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.14142857491970062, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [156.30936486439825, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17170783877372742, 0.10434553027153015, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [329497.6964285714, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.13199999928474426, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 3, 2, 5, 0], [36, 91, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.14028571546077728, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), grad), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [153.6413696252785, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17170783877372742, 0.10487385839223862, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [334795.5, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1316666603088379, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 0, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [4], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10114285349845886, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5864233586459574e+17, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09087307006120682, 0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.3983719064231897e+20, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [0, 1, 0], [0], [9], [4], [64], [1, 1, 1, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08519349992275238, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [6, 9, 7, 4, 1, 9], [3, 0, 3, 0, 0], [32, 49, 6], [0, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0878351628780365, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 4, 2, 2, 1, 9], [4, 0, 4, 5, 0, 0], [36, 49, 6], [1, 1, 0], [1], [9], [4], [64], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(beta, tf.math.subtract(grad, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 6, 7, 0, 1, 9], [4, 0, 4, 5, 3], [36, 49, 6], [1, 1, 0], [1], [8], [4], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(grad, grad)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [29139.550226879663, 543371.1246367719, 2557091.62679963, 6985665.253863426, 14863101.697265882, 27769999.469026547], "accuracy": [0.09100515395402908, 0.10157178342342377, 0.09800554811954498, 0.1018359512090683, 0.09549596905708313, 0.09893012791872025], "val_loss": [108206.97991071429, 855372.625, 2875996.714285714, 6804584.285714285, 13275674.57142857, 22923777.14285714], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [6, 4, 7, 8, 1, 9], [1, 3, 3, 0, 3], [36, 49, 6], [0, 1, 0], [1], [8], [4], [64], [1, 1, 1, 0, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3018628781293096, 2.3025847650585143, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [4, 4, 2, 2, 1, 9], [4, 0, 4, 2, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 3, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [6, 9, 7, 4, 1, 9], [4, 0, 4, 5, 0], [32, 49, 6], [0, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08611807972192764, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 2, 9, 0, 1, 9], [4, 0, 4, 5, 3], [69, 68, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 9, 7, 2, 1, 9], [3, 0, 3, 0, 0], [10, 49, 61], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09942857176065445, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [120.97378779219724, 12854.834216165096, 131881.8204125941, 600957.0091137234, 1783640.088297451, 4177155.0000660415, 8328882.194954432], "accuracy": [0.09060890227556229, 0.08915598690509796, 0.08241976052522659, 0.08651433140039444, 0.0878351628780365, 0.08955223858356476, 0.08981640636920929], "val_loss": [1084.913609095982, 32880.23772321428, 207548.0580357143, 698134.3928571428, 1706891.75, 3511676.3571428573, 6462047.0], "val_accuracy": [0.10100000351667404, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.08500000089406967, 0.060333333909511566]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [4, 4, 1, 2, 1, 9], [4, 0, 4, 5, 0, 2], [36, 49, 6], [0, 1, 0], [1], [8], [4], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 1], [6, 32, 85]], "fitness": -0.09942857176065445, "mapping_values": [1, 3, 3, 1, 2, 0, 11, 11, 5, 6, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(grad, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, grad))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3669044621285824, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08955223858356476, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1846429961068288, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [5, 3, 7, 0, 3, 3], [4, 1, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09457142651081085, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), grad)), grad))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3033069476254973, 2.3022453969794965, 2.3022017109553103, 2.3028609898143584, 2.300866345467427, 2.301889505778101, 2.3019285932618234, 2.3009761436000367, 2.3010748385312363, 2.3019802619469023, 2.300753668802856, 2.300997314199937, 2.3002547449392337, 2.3009613311963073, 2.3005939410772336, 2.298989665475205, 2.300687886027612, 2.2990698950748243, 2.300235297119046, 2.2984229426232186, 2.2991494406892987, 2.298330713556018, 2.299641844524353, 2.298231317760481, 2.2977349836560856, 2.29834632831967, 2.2990208131258343, 2.297998086446627, 2.2991400459391835, 2.2990976962053136, 2.298679144784617, 2.297973372413183, 2.2995718314332447], "accuracy": [0.08770307898521423, 0.08915598690509796, 0.09008057415485382, 0.09113723784685135, 0.09325055778026581, 0.09549596905708313, 0.09140139818191528, 0.09285431355237961, 0.09153348207473755, 0.09391097724437714, 0.09668471664190292, 0.09681680053472519, 0.09893012791872025, 0.09800554811954498, 0.09285431355237961, 0.10117553919553757, 0.09259014576673508, 0.10302469879388809, 0.09945846349000931, 0.10751552134752274, 0.10355303436517715, 0.10949676483869553, 0.10038304328918457, 0.10381719470024109, 0.10976093262434006, 0.10989301651716232, 0.10751552134752274, 0.10606260597705841, 0.10738343745470047, 0.11187426000833511, 0.10315678268671036, 0.120459645986557, 0.09959053993225098], "val_loss": [1.970984731401716, 1.9709471293858118, 1.970883914402553, 1.9707984243120467, 1.9706849370683943, 1.9705527850559779, 1.9704021726335799, 1.970245088849749, 1.9700725419180733, 1.969895839691162, 1.9697237695966447, 1.9695500646318709, 1.969365119934082, 1.9691995893205916, 1.9690514973231725, 1.9689206395830428, 1.9688218661717005, 1.9687411444527763, 1.9686758858816964, 1.968630313873291, 1.9685828345162528, 1.9685401916503906, 1.9685064724513464, 1.9684880801609583, 1.9685112408229284, 1.9685869216918945, 1.9687136922563826, 1.9688544273376465, 1.9689982959202357, 1.9691548347473145, 1.9693354879106795, 1.9695391654968262, 1.9697634833199638], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.03933333232998848, 0.04066666588187218, 0.0430000014603138, 0.04399999976158142, 0.04399999976158142, 0.04600000008940697, 0.04899999871850014, 0.05233333259820938, 0.054999999701976776, 0.05700000002980232, 0.058666665107011795, 0.06199999898672104, 0.06566666811704636, 0.07000000029802322, 0.07533333450555801, 0.08100000023841858, 0.08566666394472122, 0.09066666662693024, 0.09166666865348816, 0.09700000286102295, 0.10300000011920929, 0.10766666382551193, 0.11033333092927933, 0.11433333158493042, 0.11500000208616257, 0.11733333021402359, 0.11533333361148834, 0.11366666853427887, 0.11366666853427887, 0.11266666650772095, 0.10999999940395355]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [4, 8, 2, 2, 1, 9], [4, 0, 4, 5, 0, 2], [36, 49, 6], [1, 1, 0], [1], [8], [4], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 1], [6, 32, 85]], "fitness": -0.06971428543329239, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.sqrt(grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [193.11251907351152, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17157575488090515, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [13893.36439732143, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [4, 4, 2, 2, 1, 9], [4, 5, 4, 5, 0, 4], [36, 49, 6], [1, 1, 0], [1], [8], [4], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 1], [6, 32, 85]], "fitness": -0.06771428883075714, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [192.4511869419457, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17170783877372742, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [12091.02036830357, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]