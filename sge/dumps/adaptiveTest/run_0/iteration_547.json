[{"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.842285692691803, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9870570873965394, 1.348175558156152, 0.8775945199227148, 0.717095669029789, 0.6389840059134907, 0.6227125670805647, 0.5693780272832998, 0.5346538902132062, 0.5094770700499177, 0.49982267585113743, 0.4610554225857956, 0.470001466825197, 0.4552994460524853, 0.44670836923695856, 0.40675324747559577, 0.4040414203726431, 0.38280533192148614, 0.378744093198125, 0.3569288620733393, 0.3584858363000015, 0.3475567087907014, 0.32900148491975323, 0.33058349729340075, 0.31960449054130646, 0.32057357337087167, 0.29903316847353156, 0.308761236776592, 0.29054550389414685, 0.2946914752689193, 0.28029705307912267, 0.27999234245185917, 0.2670843597132973, 0.26609199191317534, 0.26687752980487445, 0.2416459800107935, 0.2484486144094608, 0.241532218852268, 0.2350285241215252, 0.23823679160322292, 0.23649900822575853, 0.2139746413794113, 0.2202204395956005, 0.21351906710753682, 0.20958941750373067, 0.19296949391926535, 0.20445869085401702, 0.20086464614341318, 0.19199503664571407, 0.20382839721569596, 0.18401283097580487, 0.1852190770221629, 0.18516159541398117], "accuracy": [0.3497556447982788, 0.5357284545898438, 0.6773213744163513, 0.7351737022399902, 0.7622507214546204, 0.769911527633667, 0.7873464822769165, 0.807158887386322, 0.8124422430992126, 0.816008448600769, 0.8304054737091064, 0.828292191028595, 0.8366134166717529, 0.8359529972076416, 0.8486329317092896, 0.8474441766738892, 0.8613129258155823, 0.8601241707801819, 0.8714832663536072, 0.8650112152099609, 0.8741249442100525, 0.8779553771018982, 0.8749174475669861, 0.8772949576377869, 0.8811253309249878, 0.8870691061019897, 0.8824461698532104, 0.8936732411384583, 0.8930128216743469, 0.8942015767097473, 0.8930128216743469, 0.8986923694610596, 0.8969752788543701, 0.8972394466400146, 0.9089948534965515, 0.9074098467826843, 0.9116365313529968, 0.9120327830314636, 0.9084665179252625, 0.9132214784622192, 0.9192973375320435, 0.9158631563186646, 0.9190331697463989, 0.9203540086746216, 0.926429808139801, 0.9199577569961548, 0.9203540086746216, 0.9265618920326233, 0.9203540086746216, 0.930788516998291, 0.926429808139801, 0.9276185631752014], "val_loss": [1.5097861630575997, 0.7265620061329433, 0.5949549334389823, 0.5117563860757011, 0.46973657608032227, 0.4747259957449777, 0.41126432589122225, 0.39806959458759855, 0.4144528423036848, 0.3780691793986729, 0.3646552562713623, 0.36711983169828144, 0.3991198880331857, 0.34399581807000296, 0.3438533544540405, 0.3429770129067557, 0.3288820556231907, 0.32824139084134785, 0.3158758282661438, 0.31257693256650654, 0.3125559091567993, 0.3096775497709002, 0.3125561901501247, 0.3024387104170663, 0.29592125756399973, 0.31577720812388826, 0.2964131236076355, 0.30000801597322735, 0.29610070160457064, 0.30127194949558805, 0.2908043605940683, 0.3005280835287912, 0.3021230271884373, 0.29783003670828684, 0.3091619185038975, 0.3036424858229501, 0.30184039899281095, 0.3038447839873178, 0.2889312335423061, 0.3166394318853106, 0.29807214226041523, 0.2943626982825143, 0.31829175778797697, 0.3096163868904114, 0.3309429883956909, 0.30373977763312204, 0.2962685653141567, 0.32580818448747906, 0.3169736862182617, 0.32502624818256926, 0.31682562828063965, 0.31816759279796053], "val_accuracy": [0.45366665720939636, 0.6753333210945129, 0.737666666507721, 0.7680000066757202, 0.7856666445732117, 0.7876666784286499, 0.8176666498184204, 0.8263333439826965, 0.8116666674613953, 0.8363333344459534, 0.847000002861023, 0.8353333473205566, 0.8193333148956299, 0.8510000109672546, 0.8460000157356262, 0.8500000238418579, 0.8573333621025085, 0.8536666631698608, 0.8583333492279053, 0.8600000143051147, 0.8650000095367432, 0.8619999885559082, 0.8603333234786987, 0.8683333396911621, 0.8706666827201843, 0.8650000095367432, 0.8696666955947876, 0.8653333187103271, 0.8723333477973938, 0.8726666569709778, 0.871999979019165, 0.875333309173584, 0.8736666440963745, 0.8703333139419556, 0.8766666650772095, 0.8733333349227905, 0.8803333044052124, 0.8769999742507935, 0.878000020980835, 0.8763333559036255, 0.8813333511352539, 0.8820000290870667, 0.8743333220481873, 0.8790000081062317, 0.875333309173584, 0.8806666731834412, 0.8840000033378601, 0.8703333139419556, 0.875, 0.8806666731834412, 0.8806666731834412, 0.8820000290870667]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 7, 0, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.6545714139938354, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1714305078443235, 2.0796403142014324, 1.9840337778551704, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.30801743268966675, 0.2657508850097656, 0.3082816004753113, 0.49306565523147583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9680870601109095, 1.8115088599068778, 1.160464150565011, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.390666663646698, 0.5993333458900452, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 1, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [20, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.402571439743042, "mapping_values": [1, 5, 5, 3, 2, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301748335022952, 2.338442766812846, 2.315044420301765, 2.312922401293441, 2.3099397301374722, 2.306767148899758], "accuracy": [0.1838594675064087, 0.1670849323272705, 0.10157178342342377, 0.0948355570435524, 0.09945846349000931, 0.09998679161071777], "val_loss": [1.9294649532863073, 1.983896051134382, 1.9817314147949219, 1.9798947743007116, 1.9773868833269392, 1.9759890011378698], "val_accuracy": [0.1783333271741867, 0.13066667318344116, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 4, 0, 1, 9, 6, 2, 0, 3, 5, 2, 0, 4], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [5, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.24142856895923615, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3004162479086228, 2.302608203610818, 2.3025822819908925, 2.3014505940216754, 2.3003317194056785, 2.3017755902564567, 2.3008920332349727, 2.3005206851974345, 2.3016508180766673, 2.3005817343986834, 2.2999331248891415, 2.299595013900503, 2.2999615180824633, 2.2997076763941107, 2.29827316455113, 2.299094198937618, 2.298361636833067, 2.298056534236968, 2.297101533518428, 2.297968359828672, 2.2967099037152776, 2.297324286160956, 2.296863367812288, 2.2983640387797983, 2.29698295209701, 2.2965140158489885, 2.294550378734189, 2.295943129095718, 2.2944294753532524, 2.294520675482578, 2.294226939447363, 2.295600114292583, 2.2956388739232043, 2.294761061180285, 2.2924795574626082, 2.2944576652719832, 2.293554724136663, 2.292778827384825, 2.2921565685604763, 2.292108953621063, 2.2912746078192425, 2.292110745492093, 2.2923397453249152, 2.2913171379022343, 2.2912843808710868, 2.29127296219255, 2.2916345612688813, 2.2913269328718346, 2.2901571574165143, 2.2894811283847707, 2.2881553128662837, 2.289534397223496, 2.290476035731674, 2.2886966164117446, 2.288898272206361, 2.288333142359558, 2.2891328843703374, 2.288151499302695, 2.2888856017594295, 2.288168470542413, 2.2851931194131088, 2.2865190800107653, 2.2886319225018035, 2.2871417974389665, 2.2869315904759144, 2.2856019227543465, 2.2867466343423835, 2.286491651167219, 2.2855422585285443, 2.285895868078939, 2.285612945527669, 2.2854675152329818, 2.2853175006317756, 2.284827653458877, 2.2832305439553635, 2.282328328656766, 2.28350828579152, 2.282486198537653, 2.281563119771159, 2.2817625806095765, 2.281505288323234, 2.279893407322837, 2.282599013164421, 2.2809124392226168, 2.2807369143373033, 2.2803408520143926, 2.2805990626736086, 2.280377410957448, 2.2787214993895195, 2.2775447585595017, 2.279299092850177, 2.279568900868027, 2.278107475185785, 2.278681758246512, 2.278798886734843, 2.2785218403780574, 2.277717001166373, 2.2775850466072063, 2.2779083078752467, 2.275351874722214], "accuracy": [0.09813763201236725, 0.09113723784685135, 0.08994849026203156, 0.08955223858356476, 0.09509972482919693, 0.09311848133802414, 0.09747721254825592, 0.09470347315073013, 0.09206181764602661, 0.09351472556591034, 0.09840179979801178, 0.09549596905708313, 0.09681680053472519, 0.09457138925790787, 0.10091137140989304, 0.1022322028875351, 0.09932637959718704, 0.10474177449941635, 0.10196803510189056, 0.09668471664190292, 0.10355303436517715, 0.10157178342342377, 0.10117553919553757, 0.09840179979801178, 0.10315678268671036, 0.1018359512090683, 0.11161009222269058, 0.09985470771789551, 0.11068551242351532, 0.10962884873151779, 0.11042134463787079, 0.10593052208423615, 0.11015717685222626, 0.11293092370033264, 0.11570466309785843, 0.1138555034995079, 0.11266675591468811, 0.11728965491056442, 0.11438383162021637, 0.11279883980751038, 0.11530841141939163, 0.11940298229455948, 0.11755382269620895, 0.11728965491056442, 0.11649715900421143, 0.1228371411561966, 0.11993131786584854, 0.12072381377220154, 0.1258750557899475, 0.12112006545066833, 0.11993131786584854, 0.11808215826749802, 0.11953506618738174, 0.12521463632583618, 0.12032756209373474, 0.1254788041114807, 0.11834631860256195, 0.12957337498664856, 0.12151630967855453, 0.12930920720100403, 0.12838461995124817, 0.13538502156734467, 0.13010171055793762, 0.13221503794193268, 0.13274335861206055, 0.12719587981700897, 0.13221503794193268, 0.13036586344242096, 0.13472460210323334, 0.12970545887947083, 0.13247919082641602, 0.13274335861206055, 0.1328754425048828, 0.14014001190662384, 0.1356491893529892, 0.14093250036239624, 0.1406683325767517, 0.14014001190662384, 0.14132875204086304, 0.14674416184425354, 0.1430458277463913, 0.14753665030002594, 0.14014001190662384, 0.14568749070167542, 0.1434420794248581, 0.14581957459449768, 0.14515915513038635, 0.14581957459449768, 0.1516312211751938, 0.15136705338954926, 0.14898955821990967, 0.14674416184425354, 0.1558578759431839, 0.15691454708576202, 0.15638621151447296, 0.14938580989837646, 0.1550653874874115, 0.15215955674648285, 0.1554616242647171, 0.16272619366645813], "val_loss": [1.970750331878662, 1.9705048288617815, 1.9702568735395158, 1.9700090544564384, 1.9697637557983398, 1.9695187296186174, 1.9692710467747279, 1.9690262249537878, 1.9687816756112235, 1.968541485922677, 1.9683001382010323, 1.968055316380092, 1.9678144454956055, 1.9675737108503069, 1.9673315456935339, 1.967087745666504, 1.96684387751988, 1.9666015761239188, 1.9663585935320174, 1.9661148616245814, 1.9658704485212053, 1.9656299182346888, 1.9653878211975098, 1.965146814073835, 1.9649081911359514, 1.9646673202514648, 1.9644289697919572, 1.9641870771135603, 1.9639442307608468, 1.9637031555175781, 1.9634606497628349, 1.963221822466169, 1.9629782949175154, 1.962735312325614, 1.9624951907566615, 1.962254319872175, 1.9620136533464705, 1.9617742810930525, 1.9615325246538435, 1.9612889289855957, 1.961050033569336, 1.9608090945652552, 1.960569177355085, 1.960327216557094, 1.9600872993469238, 1.9598466328212194, 1.9596076692853654, 1.9593624387468611, 1.9591212272644043, 1.9588830130440849, 1.9586434364318848, 1.9584038598196847, 1.9581634657723563, 1.9579214368547713, 1.95768404006958, 1.957444327218192, 1.9572060448782784, 1.9569683756147112, 1.956728458404541, 1.956486361367362, 1.9562451498849052, 1.9560035296848841, 1.955766064780099, 1.9555272374834334, 1.9552874565124512, 1.9550474030630929, 1.954808167048863, 1.9545672961643763, 1.9543255397251673, 1.9540839876447404, 1.9538437298366003, 1.9536018371582031, 1.9533602169581823, 1.9531194823128837, 1.9528789520263672, 1.9526365825108118, 1.952397005898612, 1.9521570886884416, 1.951918057032994, 1.951676504952567, 1.951434748513358, 1.9511911528451102, 1.9509500776018416, 1.9507073674883162, 1.9504633631025041, 1.9502216747828893, 1.9499780791146415, 1.9497340747288294, 1.9494925226484026, 1.9492481776646204, 1.94900723866054, 1.9487641879490443, 1.948524066380092, 1.9482786996023995, 1.948033264705113, 1.9477899415152413, 1.9475478444780623, 1.9473041806902205, 1.947061198098319, 1.9468139239719935], "val_accuracy": [0.03933333232998848, 0.04066666588187218, 0.041999999433755875, 0.04266666620969772, 0.04500000178813934, 0.04766666516661644, 0.04800000041723251, 0.050333332270383835, 0.050999999046325684, 0.05299999937415123, 0.05366666615009308, 0.054999999701976776, 0.0560000017285347, 0.05700000002980232, 0.05833333358168602, 0.060333333909511566, 0.061000000685453415, 0.06333333253860474, 0.06499999761581421, 0.06666667014360428, 0.06966666877269745, 0.07066666334867477, 0.07266666740179062, 0.07366666942834854, 0.07599999755620956, 0.07699999958276749, 0.07800000160932541, 0.07900000363588333, 0.08166666328907013, 0.08299999684095383, 0.08666666597127914, 0.08833333104848862, 0.09033333510160446, 0.09233333170413971, 0.09333333373069763, 0.0949999988079071, 0.09666666388511658, 0.09933333098888397, 0.10199999809265137, 0.10400000214576721, 0.10733333230018616, 0.10999999940395355, 0.11266666650772095, 0.11433333158493042, 0.11666666716337204, 0.11900000274181366, 0.11999999731779099, 0.12099999934434891, 0.12333333492279053, 0.12466666847467422, 0.12600000202655792, 0.1276666671037674, 0.12933333218097687, 0.13233333826065063, 0.1353333294391632, 0.13733333349227905, 0.140666663646698, 0.1433333307504654, 0.1456666737794876, 0.15033333003520966, 0.15333333611488342, 0.1550000011920929, 0.1576666682958603, 0.15966667234897614, 0.16099999845027924, 0.164000004529953, 0.16599999368190765, 0.1693333387374878, 0.17299999296665192, 0.17399999499320984, 0.17800000309944153, 0.18166667222976685, 0.1850000023841858, 0.18666666746139526, 0.1889999955892563, 0.1899999976158142, 0.19200000166893005, 0.19366666674613953, 0.19566667079925537, 0.19766665995121002, 0.19866666197776794, 0.2006666660308838, 0.2016666680574417, 0.20466665923595428, 0.20766666531562805, 0.2096666693687439, 0.21433334052562714, 0.21666666865348816, 0.21933333575725555, 0.2213333398103714, 0.22499999403953552, 0.22699999809265137, 0.22866666316986084, 0.2329999953508377, 0.23399999737739563, 0.2370000034570694, 0.23866666853427887, 0.2423333376646042, 0.2436666637659073, 0.24566666781902313]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.20714285969734192, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3323729485411135, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16061286628246307, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9888339723859514, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.13866665959358215, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 1, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [20, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.18485714495182037, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.293728634162019, 2.368205717163882, 2.3040175067592745, 2.3033434906970744, 2.303053130941022, 2.302914204425532], "accuracy": [0.2164839506149292, 0.11570466309785843, 0.09377889335155487, 0.09008057415485382, 0.09602430462837219, 0.10038304328918457], "val_loss": [1.8630199432373047, 1.975130558013916, 1.9739911215645927, 1.9737930297851562, 1.973618984222412, 1.9735823358808244], "val_accuracy": [0.1863333284854889, 0.09933333098888397, 0.10000000149011612, 0.10000000149011612, 0.1003333330154419, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [20, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [158.61503358215404, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0804385170340538, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [48391.95982142857, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 1, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.567384256489635, 172941749648284.4, 3.5704744140847704, 8.05717408088661, 13.791757832523256, 19.540669443112606], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [444.67989676339283, 2.403115749359131, 4.9078505379813055, 9.780081340244838, 14.709526062011719, 19.64479555402483], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 1, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [7, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [20, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3016207040245855, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [5, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 3, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3027632424482154, 2.302706798967385, 2.3027611095923253, 2.302722814926744, 2.3027056211084345, 2.3027115873987523], "accuracy": [0.09549596905708313, 0.09496764093637466, 0.09192973375320435, 0.09272222965955734, 0.09589222073554993, 0.09391097724437714], "val_loss": [1.9736459595816476, 1.9736458914620536, 1.97364228112357, 1.9736455508640833, 1.9736412593296595, 1.9736347879682268], "val_accuracy": [0.10133333504199982, 0.09933333098888397, 0.09933333098888397, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 1, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [6.026129113486322e+31, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16299036145210266, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 8, 0, 4, 9, 6, 2, 0, 3, 5, 2], [1, 0, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [3, 4, 6], [64, 55], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3016207040245855, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1233727070.3656366, 179843192472.49768, 3098606684040.166, 22022862534886.2, 96884973067767.55, 320086029871299.06], "accuracy": [0.10910051316022873, 0.09602430462837219, 0.10315678268671036, 0.0940430611371994, 0.10355303436517715, 0.10421344637870789], "val_loss": [10050816292.571428, 541704678838.8571, 5814076946139.429, 31695955071561.145, 118720834081353.14, 350201614921142.9], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [7, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [20, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.357469910628067, 3.036623402262849, 4.920335388359944, 7.992551548511534, 12.296955024750478, 17.81351070003487], "accuracy": [0.10196803510189056, 0.09549596905708313, 0.10368511080741882, 0.09576013684272766, 0.10249637067317963, 0.10394927859306335], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 4, 0, 1, 9, 6, 2, 1, 3, 5, 2, 0, 4], [1, 2, 0, 0, 2, 0, 1, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 96, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [83, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 22, 22, 13, 9, 4, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.357469910628067, 3.036623402262849, 4.920335388359944, 7.992551548511534, 12.296955024750478, 17.81351070003487], "accuracy": [0.10196803510189056, 0.09549596905708313, 0.10368511080741882, 0.09576013684272766, 0.10249637067317963, 0.10394927859306335], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 8, 0, 1, 9, 6, 2, 0, 3, 5, 2, 0, 7, 3], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 61, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 5, 3, 3, 0], [20, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 1, 5, 2, 9, 3, 9], [2, 1, 2], [6, 32, 85]], "fitness": -0.07685714215040207, "mapping_values": [1, 22, 22, 14, 8, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), grad))), tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(beta), alpha))", "other_info": {"loss": [2.3008809571473385, 2.3048362307434527, 2.307179465947008, 2.3083603611050374, 2.3102527023416703, 2.3151236344731605, 2.319107170889737, 2.3239706603999877, 2.3331605420057815, 2.344859018742747, 2.371777284729514, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.08730682730674744, 0.0804385170340538, 0.07766477018594742, 0.07594769448041916, 0.07515519857406616, 0.07317395508289337, 0.07674019038677216, 0.07357019931077957, 0.06868313252925873, 0.07792893797159195, 0.09311848133802414, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9718081610543388, 1.9731647627694267, 1.9747913224356515, 1.9767352512904577, 1.978886604309082, 1.9811081205095564, 1.9839873313903809, 1.9879277093069894, 1.9941592897687639, 2.006525448390416, 2.047189371926444, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.030666666105389595, 0.02566666714847088, 0.02500000037252903, 0.023000000044703484, 0.025333333760499954, 0.03466666489839554, 0.04633333161473274, 0.057999998331069946, 0.0820000022649765, 0.0976666659116745, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [7, 7, 9, 0, 1, 9], [4, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3005246266146, 2.3029790607032177, 2.303214563842872, 2.3023471977763945, 2.301479755533118, 2.3031855704935236], "accuracy": [0.09800554811954498, 0.09021265059709549, 0.0878351628780365, 0.0874389111995697, 0.09153348207473755, 0.08849557489156723], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 1, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [7, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [82, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3005246266146, 2.3029790607032177, 2.303214563842872, 2.3023471977763945, 2.301479755533118, 2.3031855704935236], "accuracy": [0.09800554811954498, 0.09021265059709549, 0.0878351628780365, 0.0874389111995697, 0.09153348207473755, 0.08849557489156723], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]