[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [8, 5, 4, 5, 8, 6, 5, 7, 4, 8], [2, 2, 1, 1, 2, 0, 0, 1], [20, 60, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.339428573846817, "mapping_values": [1, 15, 15, 10, 5, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(alpha))))))))))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3043782581600922, 2.5856956194546465, 2.30430473526786, 2.3033052842378647, 2.3031004298679614, 2.302709022611911], "accuracy": [0.19970941543579102, 0.1418570876121521, 0.09509972482919693, 0.0956280529499054, 0.09655263274908066, 0.10328886657953262], "val_loss": [1.6732779230390276, 1.9758827345711845, 1.9744019508361816, 1.9739353997366769, 1.9737982068743025, 1.9736646243504115], "val_accuracy": [0.41233333945274353, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [5, 3, 9, 2, 8, 6, 5], [2, 2, 2, 1, 2, 0, 0, 1], [35, 60, 84, 57], [1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1], [1, 3, 8, 2, 0, 9], [5, 1, 3, 0], [41, 55], [0, 1, 0], [1, 1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.3368571400642395, "mapping_values": [1, 9, 9, 6, 3, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3044495273338663, 2.5768998780538377, 2.304237618028779, 2.3033213283187126, 2.303102038681641, 2.3027094362780653], "accuracy": [0.19931316375732422, 0.14238542318344116, 0.09774138033390045, 0.09615638852119446, 0.09655263274908066, 0.10328886657953262], "val_loss": [1.6778770174298967, 1.975729124886649, 1.9743638038635254, 1.9739362171718053, 1.9737982068743025, 1.973663398197719], "val_accuracy": [0.38466668128967285, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [5, 3, 9, 2, 8, 6, 5], [3, 0, 2, 1, 2, 0, 0, 1], [76, 19, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [9, 3, 8, 1, 9, 9], [1, 3, 3, 3], [41, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 74]], "fitness": -0.3354285657405853, "mapping_values": [1, 9, 9, 6, 3, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.304397076128213, 2.5888216066921013, 2.3043293995769694, 2.3033133316758034, 2.303102000514514, 2.3027191618729295], "accuracy": [0.19957733154296875, 0.1410645842552185, 0.09509972482919693, 0.09496764093637466, 0.0940430611371994, 0.10328886657953262], "val_loss": [1.67609361239842, 1.9759486062186105, 1.9744123731340681, 1.9739364215305872, 1.9737975256783622, 1.9736631938389368], "val_accuracy": [0.40033334493637085, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [8, 5, 4, 1, 8, 6, 5, 6, 8], [2, 2, 1, 1, 2, 0, 0, 1], [43, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 9, 9], [3, 3, 3, 2], [90, 55], [0, 1, 0], [1, 1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.3351428508758545, "mapping_values": [1, 14, 14, 9, 5, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.304447992303667, 2.574545242090141, 2.3042257382585984, 2.3033168292899, 2.303094537613052, 2.2993057299724673], "accuracy": [0.19931316375732422, 0.14291374385356903, 0.09760929644107819, 0.09430722147226334, 0.09536388516426086, 0.11570466309785843], "val_loss": [1.6782785483769007, 1.975752558026995, 1.9743661880493164, 1.9739381926400321, 1.9737546784537179, 1.9254397664751326], "val_accuracy": [0.38100001215934753, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.09833333641290665, 0.18033333122730255]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 6, 4, 5, 8, 6, 5], [2, 2, 1, 1, 2, 0, 0, 1], [76, 19, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [9, 3, 8, 1, 9, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.33485713601112366, "mapping_values": [1, 10, 10, 6, 4, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(grad, grad)))), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.304401163222878, 2.5541339019475093, 2.3041844496464354, 2.3032653053375896, 2.2769990256118926, 2.235938768408255], "accuracy": [0.19944524765014648, 0.14238542318344116, 0.09536388516426086, 0.0956280529499054, 0.13089419901371002, 0.17884030938148499], "val_loss": [1.6743847302028112, 1.975698471069336, 1.9743523597717285, 1.9734955515180315, 1.974855559212821, 1.9767478534153529], "val_accuracy": [0.3866666555404663, 0.09933333098888397, 0.09933333098888397, 0.10066666454076767, 0.1003333330154419, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 9, 2, 1, 6, 5], [3, 0, 2, 1, 2, 0, 0, 1], [74, 19, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [9, 3, 8, 1, 9, 9], [1, 3, 3, 3], [41, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 74]], "fitness": -0.334285706281662, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3044216465940566, 2.567967845968141, 2.303283856324768, 2.250235160076387, 2.3031020926257733, 2.152172866986806], "accuracy": [0.19944524765014648, 0.14251750707626343, 0.10302469879388809, 0.1690661758184433, 0.10566636174917221, 0.22823932766914368], "val_loss": [1.676515817642212, 1.9757864815848214, 1.966965675354004, 1.974494116646903, 1.9714222635541643, 1.9794975008283342], "val_accuracy": [0.3843333423137665, 0.09933333098888397, 0.09833333641290665, 0.10066666454076767, 0.10266666859388351, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [5, 3, 9, 2, 8, 6, 5], [3, 0, 2, 1, 2, 0, 0, 1], [76, 19, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 4, 6, 0, 9], [4, 3, 3, 0], [90, 55], [0, 1, 0], [1, 1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 74]], "fitness": -0.3334285616874695, "mapping_values": [1, 9, 9, 6, 3, 2, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), grad))), tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3043845856525107, 2.553675229885417, 2.3041210248249553, 2.3032495974234743, 2.299999633910492, 2.2689700639951718], "accuracy": [0.19997358322143555, 0.1434420794248581, 0.09509972482919693, 0.09338264167308807, 0.10751552134752274, 0.1406683325767517], "val_loss": [1.6737189292907715, 1.9756219046456474, 1.9743380546569824, 1.9738911901201521, 1.9390350069318498, 1.9734649658203125], "val_accuracy": [0.37966665625572205, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.14266666769981384, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 9, 2, 5, 6, 5], [2, 2, 1, 1, 2, 0, 0, 1], [43, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1], [1, 3, 8, 1, 9, 9], [1, 3, 3, 3], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 74]], "fitness": -0.33228570222854614, "mapping_values": [1, 10, 10, 7, 3, 1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(grad)))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3043768962990607, 2.5535699541164725, 2.30405918447459, 2.3032481293432023, 2.3030880713081787, 2.30272695042312], "accuracy": [0.19970941543579102, 0.1434420794248581, 0.0948355570435524, 0.09338264167308807, 0.0940430611371994, 0.10276053100824356], "val_loss": [1.6738500935690743, 1.9755332810538155, 1.974322932107108, 1.9739181654793876, 1.9737896238054549, 1.9736418724060059], "val_accuracy": [0.38199999928474426, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 5, 4, 1, 8, 6, 5], [3, 0, 2, 1, 2, 0, 0, 1], [43, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1], [0, 3, 8, 2, 9, 9], [4, 3, 3, 2], [90, 55], [0, 1, 0], [1, 1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.3319999873638153, "mapping_values": [1, 10, 10, 6, 4, 1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.30441484440587, 2.549334298003981, 2.304059498156728, 2.3023074562240033, 2.259158618666508, 2.3037035593408968], "accuracy": [0.2001056671142578, 0.14410249888896942, 0.0948355570435524, 0.10170386731624603, 0.15242372453212738, 0.09721305221319199], "val_loss": [1.674055746623448, 1.9755169323512487, 1.9743054253714425, 1.9650491305759974, 1.9749924795968192, 1.9737520899091447], "val_accuracy": [0.39500001072883606, 0.09933333098888397, 0.09933333098888397, 0.12333333492279053, 0.1003333330154419, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [5, 3, 9, 2, 8, 6, 5], [3, 0, 2, 1, 2, 0, 0, 1], [23, 60, 84, 57], [1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 9, 9], [1, 3, 3, 3], [90, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 74]], "fitness": -0.3319999873638153, "mapping_values": [1, 4, 4, 3, 1, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.304401163506297, 2.582221393398778, 2.3042861031597917, 2.303306556916303, 2.3030994802874787, 2.3027096703193917], "accuracy": [0.19957733154296875, 0.14159291982650757, 0.09536388516426086, 0.0956280529499054, 0.09655263274908066, 0.10328886657953262], "val_loss": [1.675945213862828, 1.9758526257106237, 1.9743947301592146, 1.9739338329860143, 1.9737977981567383, 1.973663602556501], "val_accuracy": [0.38366666436195374, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [5, 3, 9, 3, 1, 6, 5], [3, 0, 2, 1, 2, 0, 0, 1], [23, 60, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [2, 3, 8, 1, 9, 9], [1, 3, 3, 3], [41, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.3305714428424835, "mapping_values": [1, 10, 10, 6, 4, 2, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3044155758794873, 2.5479707791584514, 2.3040759824191763, 2.3032720451105573, 2.3030856781789355, 2.302512713143728], "accuracy": [0.2001056671142578, 0.1430458277463913, 0.09496764093637466, 0.09377889335155487, 0.09325055778026581, 0.10117553919553757], "val_loss": [1.6735861982618059, 1.97552946635655, 1.9743480682373047, 1.973916462489537, 1.9737940515790666, 1.9704993111746651], "val_accuracy": [0.39800000190734863, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 9, 2, 8, 6, 5], [0, 0, 2, 1, 2, 0, 0, 1], [76, 19, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [9, 3, 8, 1, 9, 9], [1, 3, 3, 3], [41, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [1, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3028518719648594, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 9, 4, 5, 8, 6, 5], [3, 0, 2, 1, 2, 0, 0, 1], [23, 60, 84, 57], [0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1], [9, 3, 8, 1, 9, 9], [4, 3, 3, 2], [41, 55], [1, 1, 0], [1, 1], [8], [3], [], [0, 1, 0, 1, 1], [7, 4, 5, 2, 9], [1, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 5, 4, 5, 8, 6, 5], [2, 2, 2, 1, 2, 0, 0, 1], [20, 60, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [9, 3, 8, 1, 9, 9], [4, 3, 3, 0], [90, 55], [0, 1, 0], [1, 1], [8], [4], [], [0, 1, 0, 1, 1], [1, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 7, 5, 2, 6, 0, 5], [3, 0, 2, 1, 2, 0, 0, 1], [23, 60, 84, 57], [0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 9, 9], [5, 2, 3, 0], [41, 55], [0, 1, 0], [1, 1], [8], [7], [], [0, 1, 0, 0, 0, 1, 1, 1], [2, 4, 5, 2, 9], [1, 0, 1, 3], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 8, 4, 4, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(grad)), beta)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), alpha)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 5, 4, 5, 8, 8, 5], [3, 0, 2, 1, 2, 0, 0, 1], [43, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 8, 2, 0, 9], [4, 3, 3, 0], [41, 55], [0, 1, 0], [1, 1], [8], [7], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 6, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.sqrt(grad)))), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1311753875.1457675, 25961088536.2779, 133581206929.56598, 401226650453.17554, 927020332409.7615, 1849669164390.5554], "accuracy": [0.09760929644107819, 0.10038304328918457, 0.09800554811954498, 0.09747721254825592, 0.09998679161071777, 0.09959053993225098], "val_loss": [5323418916.571428, 49105314962.28571, 188558849755.42856, 503988935533.7143, 1104797237248.0, 2139448784603.4285], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 5, 4, 5, 8, 6, 5], [2, 2, 1, 1, 2, 0, 0, 1], [23, 60, 84, 57], [1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 8, 2, 0, 9], [0, 3, 5, 2], [90, 55], [0, 1, 0], [1, 1], [8], [4], [], [1, 1, 0, 1, 1], [1, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 5, 2, 5, 8, 6, 5], [3, 0, 2, 1, 2, 0, 0, 1], [81, 60, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 9, 9], [4, 3, 3, 2], [90, 55], [0, 1, 0], [1, 1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6]], "fitness": -0.09828571230173111, "mapping_values": [1, 7, 7, 5, 2, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3613145969578806, 3.023882026008532, 4.935629686265653, 8.040987377169268, 12.273001602312924, 17.95113808386645], "accuracy": [0.09417514503002167, 0.09509972482919693, 0.09549596905708313, 0.09853387624025345, 0.10091137140989304, 0.10196803510189056], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 1, 9, 0, 8, 5, 5], [0, 2, 1, 1, 2, 0, 0, 1], [57, 19, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [9, 3, 8, 1, 9, 9], [3, 3, 3, 0], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6]], "fitness": -0.09828571230173111, "mapping_values": [1, 9, 9, 7, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3613145969578806, 3.023882026008532, 4.935629686265653, 8.040987377169268, 12.273001602312924, 17.95113808386645], "accuracy": [0.09417514503002167, 0.09509972482919693, 0.09549596905708313, 0.09853387624025345, 0.10091137140989304, 0.10196803510189056], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [5, 2, 5, 2, 8, 6, 5], [3, 0, 2, 1, 2, 0, 0, 1], [76, 59, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [6, 3, 8, 1, 9, 9], [1, 3, 3, 3], [41, 55], [0, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 74]], "fitness": -0.035999998450279236, "mapping_values": [1, 10, 10, 6, 4, 1, 6, 6, 3, 3, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3025929846579074, 2.3012858470354445, 2.3027997416842805, 2.3019515837597697, 2.303137459035059, 2.302616616250218], "accuracy": [0.08889182657003403, 0.09906221181154251, 0.0866464152932167, 0.09391097724437714, 0.09496764093637466, 0.09100515395402908], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]