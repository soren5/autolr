[{"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 6, 4, 4, 6, 2, 1, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 0, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8497142791748047, "mapping_values": [1, 34, 34, 21, 13, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))), tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad), tf.math.subtract(grad, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))), grad)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0427188437455177, 1.0803291066022613, 0.8016458002882643, 0.7098506676160333, 0.6395806187588887, 0.6078496835313972, 0.5551651128924613, 0.5239925036466888, 0.5032382525583347, 0.4796709514816817, 0.45998962291825984, 0.4479658322728872, 0.42985352715559766, 0.4124672882994011, 0.4067443903167061, 0.38284257341290917, 0.3740972474723239, 0.35879467222842054, 0.35463622252561033, 0.3423088039932722, 0.3289405009600433, 0.3237633264973305, 0.3262879807738706, 0.30971618755035996, 0.2913630051131671, 0.2984364523021316, 0.2860221756353291, 0.26638515218019704, 0.25620630546063955, 0.26045807260784254, 0.2515819007497595, 0.2488259560242935, 0.23513645937673924, 0.23153091095394823, 0.22856275843764656, 0.2256581758416765, 0.21791748562784652, 0.2081268515549536, 0.2000925150966726, 0.1944498753940519, 0.19168360007594937, 0.18852390929920768, 0.18845340101364, 0.17935933934392048, 0.1699285634957316, 0.1769926773086279, 0.16688017112948025, 0.15830006193861182, 0.15103387512614022, 0.16029360345790508, 0.15773761346827975, 0.15019281792083294, 0.1473804451667905, 0.15393771364224065, 0.1490504532548588, 0.14350738486302386, 0.13347466887342554, 0.13819863761672727, 0.12552772445736812, 0.12283951358402473, 0.10914927308786311, 0.11649155921239139, 0.1138644603865494, 0.11252038781814698, 0.10899359538409184, 0.10718627895984227, 0.10249992404706317, 0.10592360415963008, 0.09862537252597521, 0.09505958957005926, 0.098940735130522, 0.08892968585049203, 0.088181370287925, 0.09410046091495866, 0.09264655271698817, 0.0931143311560036, 0.08611780908015332], "accuracy": [0.3074890971183777, 0.6190727949142456, 0.6996433734893799, 0.7329282760620117, 0.7630431652069092, 0.7685906887054443, 0.7959318161010742, 0.8088759779930115, 0.8144234418869019, 0.8234050869941711, 0.8315942287445068, 0.8404437899589539, 0.841500461101532, 0.8481045961380005, 0.8491612672805786, 0.8593316674232483, 0.8639545440673828, 0.8693699836730957, 0.869502067565918, 0.8758420348167419, 0.8794082403182983, 0.8812574148178101, 0.8782195448875427, 0.8804649114608765, 0.891559898853302, 0.8837670087814331, 0.8906353116035461, 0.8993527889251709, 0.9038436412811279, 0.9006736278533936, 0.9045040011405945, 0.9043719172477722, 0.9082023501396179, 0.9100515246391296, 0.9165235757827759, 0.9157310724258423, 0.9152027368545532, 0.9206181764602661, 0.9233918786048889, 0.9253731369972229, 0.9256373047828674, 0.927882730960846, 0.9288073182106018, 0.9299960136413574, 0.9359397888183594, 0.9315810203552246, 0.9311847686767578, 0.937656819820404, 0.9408268332481384, 0.935279369354248, 0.9379209876060486, 0.9381851553916931, 0.9434685111045837, 0.9406947493553162, 0.941091001033783, 0.9442610144615173, 0.9484876394271851, 0.947959303855896, 0.9495443105697632, 0.9545634388923645, 0.9574692845344543, 0.9550917744636536, 0.954827606678009, 0.9573372006416321, 0.958790123462677, 0.9593184590339661, 0.9590542912483215, 0.9583938717842102, 0.9605072140693665, 0.9619601368904114, 0.9610355496406555, 0.967111349105835, 0.9660546779632568, 0.963677167892456, 0.9652621746063232, 0.965130090713501, 0.9663188457489014], "val_loss": [0.9259095532553536, 0.6217684745788574, 0.5707372597285679, 0.5192942278725761, 0.4847968646458217, 0.45540242535727365, 0.433222906930106, 0.41669567993709017, 0.40211247546332224, 0.3882299150739397, 0.3721229008265904, 0.3671543598175049, 0.35041547673089163, 0.36021536588668823, 0.33518557037625996, 0.33101703439440044, 0.322547367640904, 0.32019719055720736, 0.31959305490766254, 0.304493818964277, 0.30623131138937815, 0.3029114178248814, 0.311305616583143, 0.29806425741740633, 0.3039224403245108, 0.299927864755903, 0.302649940763201, 0.28881989206586567, 0.2913535492760794, 0.2873030049460275, 0.29076688630240305, 0.29107339893068584, 0.29304182529449463, 0.2875522289957319, 0.2934173856462751, 0.2936842782156808, 0.2971173780305045, 0.30248014416013447, 0.29532699074063984, 0.2913568786212376, 0.3048037886619568, 0.3034193345478603, 0.292357793876103, 0.3070260116032192, 0.29782577923366, 0.2962453620774405, 0.2936778834887913, 0.30320664814540316, 0.30783739260264803, 0.2980621371950422, 0.3198077252932957, 0.3113872153418405, 0.31628280878067017, 0.30966716153281076, 0.3197547878537859, 0.3214529241834368, 0.3285629664148603, 0.31890582186835154, 0.3266588194029672, 0.32131584201540264, 0.3335758021899632, 0.3387090989521572, 0.34648733479636057, 0.33677907500948223, 0.3462119272777012, 0.33768012693950106, 0.3461518713406154, 0.3387144037655422, 0.3639845848083496, 0.3723565340042114, 0.3672834975378854, 0.36818762336458477, 0.37089994124003817, 0.3673871670450483, 0.36650984627859934, 0.35236421653202604, 0.37974240098680767], "val_accuracy": [0.6193333268165588, 0.7336666584014893, 0.7329999804496765, 0.765666663646698, 0.7856666445732117, 0.7993333339691162, 0.8056666851043701, 0.8190000057220459, 0.8209999799728394, 0.8263333439826965, 0.8373333215713501, 0.8360000252723694, 0.8493333458900452, 0.8429999947547913, 0.8543333411216736, 0.8533333539962769, 0.8576666712760925, 0.8550000190734863, 0.8573333621025085, 0.8669999837875366, 0.8676666617393494, 0.8683333396911621, 0.8666666746139526, 0.8709999918937683, 0.8656666874885559, 0.8666666746139526, 0.8659999966621399, 0.871999979019165, 0.8730000257492065, 0.8756666779518127, 0.8763333559036255, 0.8773333430290222, 0.8786666393280029, 0.878333330154419, 0.8769999742507935, 0.8809999823570251, 0.878333330154419, 0.8806666731834412, 0.8826666474342346, 0.8843333125114441, 0.8816666603088379, 0.8830000162124634, 0.8846666812896729, 0.8816666603088379, 0.8833333253860474, 0.8866666555404663, 0.887666642665863, 0.887333333492279, 0.8836666941642761, 0.8866666555404663, 0.8856666684150696, 0.8893333077430725, 0.8843333125114441, 0.887666642665863, 0.8863333463668823, 0.890333354473114, 0.8853333592414856, 0.8866666555404663, 0.8870000243186951, 0.890666663646698, 0.8899999856948853, 0.8843333125114441, 0.8880000114440918, 0.8883333206176758, 0.8933333158493042, 0.8923333287239075, 0.8916666507720947, 0.8953333497047424, 0.8899999856948853, 0.887666642665863, 0.890999972820282, 0.8960000276565552, 0.890666663646698, 0.8939999938011169, 0.8920000195503235, 0.8913333415985107, 0.890999972820282]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 6, 4, 4, 6, 3, 1, 5, 2, 0, 0, 0, 9, 5, 0, 6, 1, 1, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [98, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8382856845855713, "mapping_values": [1, 26, 26, 16, 10, 1, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.negative(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0418449086661763, 1.0768022914336515, 0.8011560307722428, 0.7100812422207333, 0.6396057960489848, 0.6073697198651266, 0.5603590528600645, 0.5252229670775391, 0.504294720552286, 0.47881921453089243, 0.46518673550073325, 0.45674035217248377, 0.4333236043707664, 0.41274456867783094, 0.4102273361164235, 0.3901153703241962, 0.37706798692153287, 0.358461927011926, 0.36002322817680116, 0.34572290021273216, 0.3367176277132681, 0.3308513565164878, 0.32856170429828824, 0.31134566226576804, 0.29816500984477706, 0.29981886036029787, 0.29618397884128933, 0.2752693710609308, 0.26411849678373606], "accuracy": [0.3069607615470886, 0.6206578016281128, 0.7003037929534912, 0.7316074371337891, 0.7611940503120422, 0.7726852297782898, 0.7935543656349182, 0.805177628993988, 0.8132346868515015, 0.8227446675300598, 0.8309338092803955, 0.8363492488861084, 0.8445383906364441, 0.8512746095657349, 0.8473120927810669, 0.8544445633888245, 0.8599920868873596, 0.867520809173584, 0.8650112152099609, 0.8710870146751404, 0.8747853636741638, 0.8770307898521423, 0.8766345381736755, 0.8845595121383667, 0.8901069760322571, 0.8864086866378784, 0.8857482671737671, 0.8948619961738586, 0.9012019634246826], "val_loss": [0.9185573373522077, 0.6210172176361084, 0.5686527490615845, 0.518321326800755, 0.48620472635541645, 0.454892771584647, 0.43405561787741526, 0.41672649553843905, 0.3968019826071603, 0.38528768505368916, 0.3749259965760367, 0.37462776047842844, 0.34993885244641987, 0.3599215235028948, 0.33781898021698, 0.3266235419682094, 0.3244111793381827, 0.3245628561292376, 0.31553020647593905, 0.30527617250170025, 0.30130457878112793, 0.302454480103084, 0.3024190068244934, 0.29483831780297415, 0.2972509605543954, 0.30272144079208374, 0.2947374497141157, 0.29324279512677875, 0.28844255208969116], "val_accuracy": [0.6203333139419556, 0.7303333282470703, 0.7356666922569275, 0.7689999938011169, 0.7866666913032532, 0.8043333292007446, 0.8113333582878113, 0.8173333406448364, 0.8230000138282776, 0.8266666531562805, 0.8396666646003723, 0.8309999704360962, 0.8483333587646484, 0.8376666903495789, 0.8496666550636292, 0.8560000061988831, 0.862333357334137, 0.8519999980926514, 0.8586666584014893, 0.8636666536331177, 0.8700000047683716, 0.8686666488647461, 0.8690000176429749, 0.8756666779518127, 0.8676666617393494, 0.8709999918937683, 0.8723333477973938, 0.871999979019165, 0.875]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 6, 4, 9, 6, 2, 1, 5, 4, 0, 0, 1, 1, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 0, 2, 2, 1, 0, 1, 2, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 14, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [48, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8299999833106995, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.8318778231253856, 2.169151713079418, 1.7650120416731174, 2.0278432877654837, 1.366176794438456, 1.097463707457192, 1.1481532802387802, 0.8877327442956465, 0.8167327098118363, 0.7432729094145935, 0.7388575199871897, 0.6986512430843786, 0.8138349755423464, 0.7039320459140369, 0.6758892211963189, 0.662276628121031, 0.6277701206462982, 0.6227243405921411, 0.6354909214314027, 0.6129375862297428, 0.5987059020205668, 0.5939974049378096, 0.5749940174744822, 0.5708614331919204, 0.5630098251288105, 0.5632057759929028, 0.5476905592066375, 0.5458326871605156, 0.5400337710624294, 0.5355905103110334, 0.5160191938499529, 0.5074062671100522, 0.5107250113796485, 0.5005111887100397, 0.4873715608253172, 0.476187062478415, 0.46982945092617795, 0.48356238052813827], "accuracy": [0.24422137439250946, 0.22639016807079315, 0.42808082699775696, 0.3358869254589081, 0.5297846794128418, 0.605468213558197, 0.6034870147705078, 0.6691322326660156, 0.7055870890617371, 0.7244749665260315, 0.7235503792762756, 0.7467969655990601, 0.700700044631958, 0.7354378700256348, 0.7471932172775269, 0.759080708026886, 0.7700436115264893, 0.7692511081695557, 0.7697794437408447, 0.7808743715286255, 0.7821952104568481, 0.7790252566337585, 0.7873464822769165, 0.7873464822769165, 0.796328067779541, 0.7891955971717834, 0.7985734939575195, 0.7993659973144531, 0.7993659973144531, 0.7984414100646973, 0.8053097128868103, 0.8092722296714783, 0.8138951063156128, 0.8137630224227905, 0.8175934553146362, 0.8219521641731262, 0.8227446675300598, 0.8212917447090149], "val_loss": [1.9860148429870605, 1.8355790546962194, 1.9029507637023926, 1.331998450415475, 0.7548706872122628, 0.9433749403272357, 0.6321002074650356, 0.5999738488878522, 0.5537246635981968, 0.5289204120635986, 0.4844564710344587, 0.49914142063685824, 0.5019458362034389, 0.45760115555354525, 0.4540153741836548, 0.44797611236572266, 0.427832339491163, 0.42812994548252653, 0.4549452747617449, 0.43493726423808504, 0.417828585420336, 0.41132152932030813, 0.3988072531563895, 0.4027518459728786, 0.389741701739175, 0.4082405822617667, 0.37455718006406513, 0.3871283105441502, 0.38611010142735075, 0.3808556284223284, 0.37307522126606535, 0.365436179297311, 0.362834564277104, 0.3642147694315229, 0.3681168726512364, 0.3540026715823582, 0.34656559569495066, 0.3694626433508737], "val_accuracy": [0.09933333098888397, 0.3540000021457672, 0.1860000044107437, 0.5103333592414856, 0.6706666946411133, 0.6636666655540466, 0.7286666631698608, 0.7480000257492065, 0.7519999742507935, 0.7580000162124634, 0.7893333435058594, 0.7689999938011169, 0.7680000066757202, 0.7886666655540466, 0.7923333048820496, 0.7906666398048401, 0.8090000152587891, 0.8146666884422302, 0.7836666703224182, 0.809333324432373, 0.812333345413208, 0.8149999976158142, 0.8186666369438171, 0.8113333582878113, 0.8263333439826965, 0.815666675567627, 0.8293333053588867, 0.8233333230018616, 0.8240000009536743, 0.828000009059906, 0.8346666693687439, 0.8349999785423279, 0.8383333086967468, 0.8333333134651184, 0.8370000123977661, 0.8373333215713501, 0.8370000123977661, 0.8366666436195374]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [9, 3, 4, 1, 4, 3, 6, 3, 2, 5, 2, 0, 4, 8, 5, 5, 7, 2, 2, 9, 8, 8, 3, 6, 3, 0, 6, 3, 3, 5, 4, 8, 8, 1, 0, 3, 9], [3, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 14, 17, 62, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7968571186065674, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.216576611030497, 1.7131535651393774, 1.247709075237199, 1.0747194869438608, 1.0179844955018074, 0.8869503875450137, 0.8328199936744953, 0.7929287760753074, 0.7987015045881114, 0.7456357892021575, 0.7263340797044534, 0.7205863279311286, 0.7139955818487779, 0.6852850944626491, 0.6726798831023056, 0.6552137753604788, 0.646825474180235, 0.6443374358966855, 0.6424921221736872, 0.628053160068649, 0.629156769943779, 0.6002306043038893, 0.6154190148612559, 0.6187535020984191, 0.5994983301375599, 0.5923490657184134, 0.5860719331865534], "accuracy": [0.2541275918483734, 0.4671773910522461, 0.5679566860198975, 0.6110157370567322, 0.6317527294158936, 0.674679696559906, 0.6991150379180908, 0.7061154246330261, 0.7024171352386475, 0.7215691208839417, 0.7263241410255432, 0.728701651096344, 0.7279091477394104, 0.7425703406333923, 0.7478536367416382, 0.7589486241340637, 0.76106196641922, 0.7598732113838196, 0.7647602558135986, 0.763439416885376, 0.7664773464202881, 0.7749306559562683, 0.7647602558135986, 0.7672698497772217, 0.7796856164932251, 0.7753269076347351, 0.7815347909927368], "val_loss": [1.6955836500440324, 1.0132621015821184, 0.8238128934587751, 0.8190795012882778, 0.6792353561946324, 0.6040162188666207, 0.611319933618818, 0.6396991355078561, 0.6014021294457572, 0.5395057201385498, 0.5609439611434937, 0.5610371998378209, 0.5302864483424595, 0.5534658942903791, 0.49494683742523193, 0.5027680567332676, 0.49312732900891987, 0.4828514201300485, 0.4703876631600516, 0.5480968100684029, 0.467483537537711, 0.4584563119070871, 0.4986297743661063, 0.48697519302368164, 0.4654750313077654, 0.4492518731525966, 0.4384746125766209], "val_accuracy": [0.5389999747276306, 0.6466666460037231, 0.6623333096504211, 0.6183333396911621, 0.7193333506584167, 0.7486666440963745, 0.734666645526886, 0.715666651725769, 0.7256666421890259, 0.7536666393280029, 0.7379999756813049, 0.7543333172798157, 0.7633333206176758, 0.7393333315849304, 0.7720000147819519, 0.7749999761581421, 0.7696666717529297, 0.7889999747276306, 0.7990000247955322, 0.7383333444595337, 0.7903333306312561, 0.8069999814033508, 0.7553333044052124, 0.7670000195503235, 0.793666660785675, 0.8033333420753479, 0.8013333082199097]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 3, 6, 1, 4, 4, 6, 2, 2, 5, 2, 0, 0, 1, 3, 5, 7, 6, 1, 6, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 0, 0, 2, 2, 1, 2, 2, 2, 1, 2, 1, 0, 2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 1, 2, 3, 3, 2, 2], [5, 98, 27, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [61, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7688571214675903, "mapping_values": [1, 46, 46, 26, 20, 7, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(tf.math.add(alpha, alpha), grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3109659139962955, 2.11903888167423, 2.3233342139539213, 2.3091420025133327, 2.264473984222906, 2.1930728536539577, 2.027106670104533, 2.2630203135214177, 1.9781318562393884, 2.195152169315649, 1.3110593616560922, 0.940684838624694, 0.8863607859252514, 0.7981510863186362, 0.7642325046370767, 0.7392283164593585, 0.7143092295119255, 0.6739942315405449, 0.6385964143151825, 0.6712799652251648, 0.6095526370437249, 0.6361013146801522, 0.5881002220211878, 0.6095732928833957, 0.5680989722975052, 0.5617787031654385, 0.5691622896374586, 0.5520999457511478, 0.5219874314628241, 0.5255089894285481, 0.5299413451791329, 0.5130835233733261, 0.5102513732376068, 0.4851020652588726], "accuracy": [0.20063400268554688, 0.25280675292015076, 0.17633073031902313, 0.10091137140989304, 0.14212125539779663, 0.24395720660686493, 0.3225465714931488, 0.17382116615772247, 0.3185840845108032, 0.2588825821876526, 0.568220853805542, 0.6680755615234375, 0.6790384650230408, 0.709549605846405, 0.7202483415603638, 0.7339849472045898, 0.739400327205658, 0.7467969655990601, 0.7619865536689758, 0.7614582180976868, 0.7728173136711121, 0.7623828053474426, 0.7812706232070923, 0.7712323069572449, 0.789459764957428, 0.7886672616004944, 0.7829877138137817, 0.7944789528846741, 0.8064984679222107, 0.8017435073852539, 0.7993659973144531, 0.8087438941001892, 0.8057059645652771, 0.8198388814926147], "val_loss": [1.9155622209821428, 1.9283639362880163, 1.9896956171308244, 1.9730161258152552, 1.601377350943429, 1.6606087684631348, 1.5227439403533936, 1.9498396600995744, 2.078042507171631, 1.0543466636112757, 0.6958049024854388, 0.7606670175279889, 0.6785137823649815, 0.6729116439819336, 0.5599404914038522, 0.5408901827675956, 0.5498154163360596, 0.5563785008021763, 0.544502854347229, 0.4879083292824881, 0.47266900539398193, 0.4627961090632847, 0.5379113980701992, 0.505868945802961, 0.4477947098868234, 0.4538607597351074, 0.4467472178595407, 0.4907535655157907, 0.43448664460863384, 0.45463052817753385, 0.43879570279802593, 0.44356907265526907, 0.47051944051470074, 0.4302369100706918], "val_accuracy": [0.23499999940395355, 0.19466666877269745, 0.10066666454076767, 0.10066666454076767, 0.3720000088214874, 0.3970000147819519, 0.4410000145435333, 0.1509999930858612, 0.484333336353302, 0.6129999756813049, 0.7043333053588867, 0.6846666932106018, 0.7266666889190674, 0.6886666417121887, 0.7480000257492065, 0.7696666717529297, 0.7743333578109741, 0.7440000176429749, 0.765666663646698, 0.7823333144187927, 0.7963333129882812, 0.79666668176651, 0.753333330154419, 0.7826666831970215, 0.8100000023841858, 0.812333345413208, 0.8059999942779541, 0.7886666655540466, 0.8193333148956299, 0.8106666803359985, 0.8109999895095825, 0.8036666512489319, 0.8029999732971191, 0.815666675567627]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 3, 6, 1, 4, 4, 6, 2, 2, 5, 2, 0, 8, 1, 3, 2, 7, 6, 1, 8, 1, 8, 1, 6, 5, 0, 2, 3, 3, 5, 1, 8, 8, 2, 0, 3, 9], [3, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 2, 2, 2, 1, 2, 3, 3, 2, 2], [5, 98, 27, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7394285798072815, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2091684702317855, 1.6505586357164566, 1.1867134849456134, 1.02282240477063, 0.9791772102305067, 0.8532891495589016, 0.8043003791295904, 0.7710192374360559, 0.7758727291114987, 0.7309961455325882, 0.7163640416577004], "accuracy": [0.25861841440200806, 0.4784044325351715, 0.585391640663147, 0.6287148594856262, 0.6456214785575867, 0.6859067678451538, 0.7084929347038269, 0.7165499925613403, 0.7094175219535828, 0.7250033020973206, 0.7300224304199219], "val_loss": [1.6593546867370605, 0.9581352983202253, 0.7873669181551252, 0.7594671589987618, 0.6497984613691058, 0.5865808555058071, 0.5867809057235718, 0.631722092628479, 0.5895424740655082, 0.5387681892939976, 0.5605055093765259], "val_accuracy": [0.54666668176651, 0.6526666879653931, 0.6600000262260437, 0.6389999985694885, 0.7323333621025085, 0.7540000081062317, 0.7456666827201843, 0.7369999885559082, 0.7360000014305115, 0.746999979019165, 0.7433333396911621]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 3, 6, 1, 4, 4, 6, 2, 2, 5, 2, 0, 0, 1, 6, 2, 7, 2, 1, 8, 1, 8, 1, 6, 4, 0, 3, 3, 3, 5, 1, 8, 8, 2, 0, 3, 9], [3, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 0, 2, 2, 2, 1, 2, 3, 3, 2, 2], [5, 98, 27, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7388571500778198, "mapping_values": [1, 30, 30, 16, 14, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))))))), grad)), tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2091684837414367, 1.6505507709894671, 1.187072488121967, 1.0187874761916988, 0.9824459032690552, 0.8535929724383174, 0.8003660729296408, 0.7789128743630706, 0.7836752921252313, 0.7235087695343462, 0.7176160433855764], "accuracy": [0.25861841440200806, 0.478140264749527, 0.5845991373062134, 0.6318848133087158, 0.6450931429862976, 0.6880200505256653, 0.7098137736320496, 0.7136441469192505, 0.7034738063812256, 0.7269845604896545, 0.7276449799537659], "val_loss": [1.6593531199863978, 0.9580464022500175, 0.7866056646619525, 0.7600375243595668, 0.6524707249232701, 0.5870437111173358, 0.5823046479906354, 0.658051575933184, 0.5673012733459473, 0.5410006727491107, 0.5564010994774955], "val_accuracy": [0.546999990940094, 0.6523333191871643, 0.6616666913032532, 0.6370000243186951, 0.7316666841506958, 0.7509999871253967, 0.75, 0.703000009059906, 0.7413333058357239, 0.7446666955947876, 0.7453333139419556]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [9, 3, 4, 1, 4, 3, 6, 3, 2, 5, 2, 0, 4, 8, 5, 5, 7, 2, 2, 9, 8, 8, 3, 6, 3, 0, 6, 3, 3, 5, 4, 8, 8, 1, 0, 3, 9], [3, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [47, 98, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [1, 3, 3, 3, 0], [51, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06128648668527603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [1, 3, 5, 1, 4, 3, 6, 6, 1, 5, 6, 0, 0, 1, 5, 5, 2, 6, 2, 8, 1, 4, 1, 2, 2, 0, 3, 1, 3, 5, 5, 8, 8, 1, 0, 6, 9], [3, 2, 1, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 14, 17, 62, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [8, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [9.6972066312182, 266.44329198722147, 2847.0353341879168, 16537.968095260698, 66706.17903843614, 208848.26041391495], "accuracy": [0.10328886657953262, 0.09774138033390045, 0.09945846349000931, 0.10540219396352768, 0.10051512718200684, 0.1010434553027153], "val_loss": [34.17795780726841, 599.4352329799107, 4765.516462053572, 22808.374441964286, 79308.65625, 222864.75], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 6, 1, 3, 4, 6, 9, 1, 5, 0, 9, 4, 9, 2, 2, 7, 6, 2, 2, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 0, 0, 3, 2], [3, 2, 1, 0, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 0, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302068152621028, 2.3025507172415867, 2.30254617768382, 2.3025637785866593, 2.302546091429892, 2.3025507071644578], "accuracy": [0.10513802617788315, 0.09998679161071777, 0.10593052208423615, 0.10157178342342377, 0.10249637067317963, 0.10527011007070541], "val_loss": [1.9736419405255998, 1.9736431666782923, 1.9736414636884416, 1.9736426217215401, 1.9736418724060059, 1.9736426217215401], "val_accuracy": [0.10133333504199982, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [9, 3, 4, 1, 4, 3, 6, 3, 2, 5, 2, 0, 4, 8, 5, 5, 7, 2, 2, 9, 8, 8, 3, 6, 3, 0, 6, 3, 3, 5, 4, 8, 8, 1, 0, 3, 9], [3, 2, 1, 0, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [86, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 2, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302090387397265, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [2, 3, 4, 1, 4, 3, 6, 3, 2, 5, 2, 2, 4, 8, 5, 5, 0, 8, 2, 9, 8, 0, 3, 6, 5, 0, 6, 3, 3, 5, 4, 8, 1, 1, 0, 3, 9], [1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 0, 2, 2, 0, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 14, 17, 62, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.09971428662538528, "mapping_values": [1, 58, 58, 37, 21, 5, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.pow(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))))))), tf.math.sqrt(tf.math.negative(alpha))), tf.math.add(alpha, alpha)), tf.math.multiply(tf.math.add(alpha, grad), grad))))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(grad, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.multiply(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301278994493103, 2.302637798092416, 2.3014111167734894, 2.2985456382215865, 2.2989853920481225, 2.298978524704997, 2.299985371497581, 2.300001669553576, 2.300382138337788, 2.300812239660138, 2.301315891996209, 2.3014399688540825], "accuracy": [0.09325055778026581, 0.08757099509239197, 0.0878351628780365, 0.10091137140989304, 0.10302469879388809, 0.10817593336105347, 0.10936468094587326, 0.10553427785634995, 0.10527011007070541, 0.10276053100824356, 0.09945846349000931, 0.10236428678035736], "val_loss": [1.9707542146955217, 1.9700226783752441, 1.9692838532584054, 1.9690547670636858, 1.9690651212419783, 1.9694510187421526, 1.970191138131278, 1.9709815979003906, 1.971576350075858, 1.9721229416983468, 1.9725149699619837, 1.9728304318019323], "val_accuracy": [0.04266666620969772, 0.05066666752099991, 0.06599999964237213, 0.08666666597127914, 0.10700000077486038, 0.11933333426713943, 0.12200000137090683, 0.11699999868869781, 0.11766666918992996, 0.11100000143051147, 0.10499999672174454, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 3, 4, 1, 4, 3, 6, 3, 2, 5, 2, 0, 4, 8, 5, 5, 7, 2, 2, 9, 8, 8, 3, 6, 3, 0, 6, 3, 3, 5, 4, 8, 8, 1, 0, 3, 9], [3, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 14, 17, 62, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [4, 3, 3, 3, 0], [48, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.08457142859697342, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [4.423510855561502, 2.4211684988631768, 2.361218134961061, 2.3523501811986742, 2.3791924470199364, 2.3760737975700863, 2.3942558433810843], "accuracy": [0.17738740146160126, 0.09681680053472519, 0.10421344637870789, 0.09800554811954498, 0.10315678268671036, 0.09906221181154251, 0.10077928751707077], "val_loss": [2.0843334197998047, 1.9969432694571358, 2.004079682486398, 2.068300655909947, 1.9880685806274414, 1.9938479151044572, 2.182798385620117], "val_accuracy": [0.09933333098888397, 0.10066666454076767, 0.09833333641290665, 0.1003333330154419, 0.09833333641290665, 0.09933333098888397, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 3, 3, 4, 3, 3, 4, 9, 2, 0, 8, 9, 5, 9, 8, 6, 2, 2, 0, 8, 2, 6, 5, 0, 3, 3, 3, 5, 1, 1, 8, 0, 0, 3, 2], [3, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 14, 17, 62, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [86, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.08257143199443817, "mapping_values": [1, 50, 50, 32, 18, 4, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.sqrt(grad))), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, grad), grad))))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(grad))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4444008508079387, 3.5564226782033788, 2.3222206159117293, 2.318054619812931, 2.3278096900907697, 2.3329206550944797, 2.3491117007948734, 2.3570686412635435], "accuracy": [0.10632677376270294, 0.10355303436517715, 0.1022322028875351, 0.10196803510189056, 0.09932637959718704, 0.09576013684272766, 0.10091137140989304, 0.09774138033390045], "val_loss": [2.677467414311, 1.9899629184177943, 1.9738543374197823, 1.9742365564618791, 1.9748381887163435, 1.9753849846976144, 1.9761216299874442, 1.976924010685512], "val_accuracy": [0.1003333330154419, 0.08966666460037231, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 3, 6, 1, 4, 4, 6, 2, 2, 5, 2, 8, 2, 1, 3, 5, 2, 6, 1, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 5, 8, 1, 0, 3, 9], [1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [5, 98, 35, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 3, 3, 3, 0], [42, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [86, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.06914285570383072, "mapping_values": [1, 30, 30, 16, 14, 0, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))), tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301027245730016, 2.302095531267875, 2.301506116232458, 2.299039172805012, 2.30014456774911, 2.30057624176493, 2.3018060859798077, 2.3006948800906373, 2.300444003440102, 2.2998519080772595, 2.3000701712957383, 2.2999825420601336, 2.300382781384596, 2.300747027974701, 2.299520103104158], "accuracy": [0.09338264167308807, 0.0874389111995697, 0.08757099509239197, 0.09536388516426086, 0.0948355570435524, 0.09668471664190292, 0.09655263274908066, 0.09245806187391281, 0.09813763201236725, 0.10236428678035736, 0.09945846349000931, 0.09959053993225098, 0.0944393053650856, 0.09536388516426086, 0.09774138033390045], "val_loss": [1.9703119141714913, 1.969848905290876, 1.9696664128984724, 1.969857965196882, 1.9699787412370955, 1.9700183868408203, 1.969928809574672, 1.9698412077767509, 1.9697174344744002, 1.969771453312465, 1.9699640955243791, 1.970174993787493, 1.970365047454834, 1.970498698098319, 1.9706825528826033], "val_accuracy": [0.04600000008940697, 0.052666667848825455, 0.058666665107011795, 0.06066666543483734, 0.06133333221077919, 0.06400000303983688, 0.06833333522081375, 0.07533333450555801, 0.07900000363588333, 0.08033332973718643, 0.07733333110809326, 0.07533333450555801, 0.0729999989271164, 0.0716666653752327, 0.07199999690055847]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 3, 6, 1, 3, 4, 2, 2, 2, 9, 0, 0, 6, 2, 8, 2, 7, 6, 2, 5, 0, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 0, 0, 3, 2], [1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 14, 17, 62, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [82, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [4, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.06199999898672104, "mapping_values": [1, 21, 21, 12, 9, 1, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.add(grad, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.276431673758097, 2.3225684774991087, 2.3035458017885095, 2.302952665426728, 2.3030518599001173, 2.302976218732341], "accuracy": [0.2347113937139511, 0.09985470771789551, 0.09721305221319199, 0.09325055778026581, 0.09800554811954498, 0.10289261490106583], "val_loss": [2.0742788314819336, 1.9744648933410645, 1.97389589037214, 1.9736644199916296, 1.9736134665352958, 1.973553248814174], "val_accuracy": [0.10066666454076767, 0.09933333098888397, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [9, 3, 4, 1, 4, 3, 6, 3, 2, 5, 2, 0, 4, 8, 5, 5, 7, 2, 2, 9, 8, 8, 3, 6, 3, 0, 6, 3, 3, 5, 4, 8, 8, 1, 0, 3, 9], [3, 2, 1, 0, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [47, 98, 17, 0, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.05885714292526245, "mapping_values": [1, 1, 1, 1, 0, 1, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3013315517605415, 2.3032428072018787, 2.303088279369406, 2.300305868073729, 2.3015190791050832, 2.3021593186140783, 2.303680453113419, 2.302445822010234, 2.3024365642775853, 2.3016159546735846, 2.3014008839841154, 2.301400690251306, 2.3011084610933104, 2.302269949936328, 2.299971206391949, 2.3016513948978417, 2.301468830507949, 2.3020401003810753, 2.3018173649956317, 2.3014508553342323, 2.3006690865762165, 2.3029960686929662, 2.3023362507704874, 2.3017445037928965, 2.301639939784185, 2.300551207782633, 2.3009863143520835, 2.300886824713281, 2.301076189622336, 2.3014885608026647, 2.3000744489741094, 2.301184928711647, 2.299891279736026, 2.3006513435543647, 2.30078568620421, 2.2991154863692356, 2.3007974545591305, 2.2999469755568507, 2.300399710961683, 2.3009704600991574, 2.3007508709824016, 2.2994014192109313, 2.3003839645655306, 2.3016426862427712, 2.3002197827487936, 2.3006306738822593, 2.3006195087379955, 2.3009435206576896, 2.300627339265728, 2.3012505265400787, 2.2989699516188056, 2.301017594296525, 2.299945372128137, 2.2998803276915543, 2.300413072321787], "accuracy": [0.09338264167308807, 0.08558975160121918, 0.08691058307886124, 0.09206181764602661, 0.09060890227556229, 0.09325055778026581, 0.08836349099874496, 0.0886276587843895, 0.09298639744520187, 0.09430722147226334, 0.09206181764602661, 0.09100515395402908, 0.09853387624025345, 0.09470347315073013, 0.09351472556591034, 0.0952318087220192, 0.0940430611371994, 0.0886276587843895, 0.09259014576673508, 0.08849557489156723, 0.09206181764602661, 0.09021265059709549, 0.09021265059709549, 0.09113723784685135, 0.08902391046285629, 0.09932637959718704, 0.09576013684272766, 0.09311848133802414, 0.09576013684272766, 0.09787346422672272, 0.09655263274908066, 0.09457138925790787, 0.09681680053472519, 0.09430722147226334, 0.09840179979801178, 0.09879804402589798, 0.09615638852119446, 0.10157178342342377, 0.09272222965955734, 0.09325055778026581, 0.09219389408826828, 0.09972262382507324, 0.09087307006120682, 0.09087307006120682, 0.09787346422672272, 0.09430722147226334, 0.10038304328918457, 0.09325055778026581, 0.09760929644107819, 0.09192973375320435, 0.1006472036242485, 0.09272222965955734, 0.08915598690509796, 0.1002509593963623, 0.09840179979801178], "val_loss": [1.9709277834211076, 1.9708620480128698, 1.9707953589303153, 1.970752239227295, 1.9706874574933733, 1.9706147057669503, 1.9705335753304618, 1.9704608917236328, 1.9703996522086007, 1.9703482219151087, 1.970301287514823, 1.970245701926095, 1.970210007258824, 1.970151083809989, 1.970116070338658, 1.9700728825160436, 1.9700311933244978, 1.9699886185782296, 1.969961166381836, 1.9699170930044991, 1.9698782648359026, 1.9698445456368583, 1.9698125294276647, 1.9697765622820174, 1.9697469983782088, 1.9697182519095284, 1.969700608934675, 1.969687053135463, 1.9696600096566337, 1.9696334430149622, 1.9696147782461983, 1.969604764665876, 1.9695946148463659, 1.9695732934134347, 1.9695608275277274, 1.9695573534284319, 1.9695444788251604, 1.969538348061698, 1.9695260865347726, 1.969519887651716, 1.9695138931274414, 1.9695123944963728, 1.9695003373282296, 1.969506059374128, 1.9694976125444685, 1.9694984980991908, 1.9695086479187012, 1.9695066043308802, 1.969513007572719, 1.96951048714774, 1.9695260184151786, 1.9695316042218889, 1.9695385524204798, 1.9695451600211007, 1.9695418221609933], "val_accuracy": [0.038333334028720856, 0.039000000804662704, 0.04066666588187218, 0.041999999433755875, 0.04333333298563957, 0.043666668236255646, 0.04399999976158142, 0.04500000178813934, 0.04466666653752327, 0.04533333331346512, 0.04500000178813934, 0.04600000008940697, 0.04699999839067459, 0.04766666516661644, 0.04800000041723251, 0.04866666719317436, 0.049666665494441986, 0.050999999046325684, 0.052666667848825455, 0.052666667848825455, 0.05400000140070915, 0.05400000140070915, 0.05400000140070915, 0.054999999701976776, 0.054666668176651, 0.05533333495259285, 0.05666666850447655, 0.05700000002980232, 0.0573333315551281, 0.0573333315551281, 0.0573333315551281, 0.05766666680574417, 0.05900000035762787, 0.05900000035762787, 0.05999999865889549, 0.060333333909511566, 0.061000000685453415, 0.06133333221077919, 0.06199999898672104, 0.06199999898672104, 0.06199999898672104, 0.06199999898672104, 0.06199999898672104, 0.06300000101327896, 0.06333333253860474, 0.06433333456516266, 0.06433333456516266, 0.06433333456516266, 0.06366666406393051, 0.06499999761581421, 0.06466666609048843, 0.06333333253860474, 0.06333333253860474, 0.06333333253860474, 0.06466666609048843]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 9, 4, 2, 5, 5, 2, 0, 0, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 1, 0, 2, 0, 0, 2, 1, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 2, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 11, 11, 6, 5, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3013634381277246, 2.303373845624036, 2.303310320346174, 2.300562233642076, 2.3018823078736466, 2.3026319251100165], "accuracy": [0.09338264167308807, 0.08532558381557465, 0.0866464152932167, 0.09060890227556229, 0.08915598690509796, 0.09232597798109055], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 4, 6, 1, 1, 4, 6, 2, 1, 5, 2, 0, 4, 8, 3, 9, 6, 6, 2, 2, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 0, 0, 3, 2], [3, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 3, 3, 3, 0], [64, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [6, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [3, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 51, 51, 29, 22, 3, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))), tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, grad), tf.math.add(grad, tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(grad, tf.math.add(alpha, grad)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3013634381277246, 2.303373845624036, 2.303310320346174, 2.300562233642076, 2.3018823078736466, 2.3026319251100165], "accuracy": [0.09338264167308807, 0.08532558381557465, 0.0866464152932167, 0.09060890227556229, 0.08915598690509796, 0.09232597798109055], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [8, 5, 4, 6, 4, 4, 6, 2, 1, 5, 4, 4, 0, 1, 9, 5, 7, 6, 1, 4, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 0, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 96, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 2, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 30, 30, 18, 12, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))))), tf.math.pow(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), grad))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3013634381277246, 2.303373845624036, 2.303310320346174, 2.300562233642076, 2.3018823078736466, 2.3026319251100165], "accuracy": [0.09338264167308807, 0.08532558381557465, 0.0866464152932167, 0.09060890227556229, 0.08915598690509796, 0.09232597798109055], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]