[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 4, 7, 6, 8, 5, 0, 9], [2, 7, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8479999899864197, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 11, 8, 6, 2, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, tf.math.square(sigma)))))), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9847211668189364, 1.4503191797535857, 0.8429945920672887, 0.7046620067021535, 0.6302234298596214, 0.5921923712008129, 0.5254211245258927, 0.5052237949429911, 0.4920090997239555, 0.47609126251749373, 0.4681360925374455, 0.4462660853266952, 0.4332836687431013, 0.4131500246644162, 0.392733443229741, 0.39344625905394287, 0.3923712786335782, 0.365561218474913, 0.3594873173204411, 0.343405146723048, 0.33435819568556563, 0.32632267275160143, 0.326356504059833, 0.30721734900122477, 0.30404829444776293, 0.3004394750852689, 0.29585062724535316, 0.2884044212365053, 0.29468330594101727, 0.269951824447687, 0.2802303847328484, 0.2688971490962961, 0.25976066063022285, 0.26132749326319477, 0.24309251189286982, 0.25424524567201545, 0.24622129636229054, 0.22729197331486345, 0.22643751859971956, 0.2200854193336062, 0.22909490591137244, 0.22113387672624976, 0.2104221184484207, 0.2090326665851812, 0.20411149040897839, 0.19952317666675215, 0.19541811577758264, 0.18349066752610252, 0.19130972887090075], "accuracy": [0.35147273540496826, 0.49266940355300903, 0.6804913282394409, 0.7322678565979004, 0.7577598690986633, 0.7777044177055359, 0.8057059645652771, 0.8099326491355896, 0.8244617581367493, 0.8245938420295715, 0.8264430165290833, 0.8368775844573975, 0.8387266993522644, 0.8487650156021118, 0.8562937378883362, 0.8545766472816467, 0.8562937378883362, 0.8665962219238281, 0.8664641380310059, 0.8771628737449646, 0.8771628737449646, 0.8809932470321655, 0.8794082403182983, 0.8841632604598999, 0.8870691061019897, 0.8842953443527222, 0.8901069760322571, 0.8926165699958801, 0.889578640460968, 0.8981640338897705, 0.8914278149604797, 0.8989565372467041, 0.9017302989959717, 0.9050323367118835, 0.9043719172477722, 0.9062210917472839, 0.904768168926239, 0.9111081957817078, 0.9111081957817078, 0.9166556596755981, 0.9111081957817078, 0.9138818979263306, 0.9179764986038208, 0.920089840888977, 0.9214106202125549, 0.9249768853187561, 0.9225993752479553, 0.9310526847839355, 0.9257693886756897], "val_loss": [1.5814382008143835, 0.7128514562334333, 0.5694499697004046, 0.5165175540106637, 0.4762054000582014, 0.42505230222429546, 0.40823541368756977, 0.40956737313951763, 0.3801954048020499, 0.3653767534664699, 0.3699920858655657, 0.3739678178514753, 0.3320166383470808, 0.3326882634844099, 0.3262311475617545, 0.34005279200417654, 0.33241952317101614, 0.3161765422139849, 0.3094665919031416, 0.3089296392032078, 0.2989989348820278, 0.323699951171875, 0.30948897770472933, 0.2993344323975699, 0.30116606610161917, 0.30888287510190693, 0.296963095664978, 0.3236076235771179, 0.3051735077585493, 0.29117325374058317, 0.300709136894771, 0.286804735660553, 0.3102938447679792, 0.29759753601891653, 0.29966444628579275, 0.28901989119393484, 0.2972742574555533, 0.2993089130946568, 0.31353903668267386, 0.3013244186128889, 0.3029386060578482, 0.2982558948653085, 0.3144844855581011, 0.3030247177396502, 0.3183280144418989, 0.3009746585573469, 0.3002341645104544, 0.2946786369596209, 0.30608804736818584], "val_accuracy": [0.3109999895095825, 0.6983333230018616, 0.7350000143051147, 0.753000020980835, 0.7793333530426025, 0.8086666464805603, 0.8180000185966492, 0.8183333277702332, 0.8376666903495789, 0.840666651725769, 0.8339999914169312, 0.8316666483879089, 0.859000027179718, 0.8529999852180481, 0.8583333492279053, 0.8399999737739563, 0.8546666502952576, 0.8606666922569275, 0.8686666488647461, 0.862333357334137, 0.8696666955947876, 0.8643333315849304, 0.8669999837875366, 0.8636666536331177, 0.8713333606719971, 0.8633333444595337, 0.8659999966621399, 0.8690000176429749, 0.8673333525657654, 0.8736666440963745, 0.8683333396911621, 0.8763333559036255, 0.8723333477973938, 0.8733333349227905, 0.874666690826416, 0.8823333382606506, 0.8736666440963745, 0.875, 0.8703333139419556, 0.8836666941642761, 0.8790000081062317, 0.878333330154419, 0.8736666440963745, 0.8843333125114441, 0.874666690826416, 0.878000020980835, 0.8840000033378601, 0.8826666474342346, 0.8809999823570251]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [3, 4, 7, 6, 8, 5, 0, 9], [2, 7, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8371428847312927, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9846010163727532, 1.4540254649799798, 0.8412313432253237, 0.7049140300512661, 0.6284247505792364, 0.5900495237111258, 0.5255438540400987, 0.5056070747266529, 0.49179185915695534, 0.47823396057044004, 0.4685467862733335, 0.44272572008011885, 0.437783856153992, 0.4087843313516013, 0.39119325676031746, 0.3851421329134633, 0.3885675170567719, 0.3609035351627208, 0.3634452221770218, 0.34816911452875604, 0.33766255491224845, 0.3323345435585218, 0.3293582733241779, 0.30874972686854496], "accuracy": [0.35147273540496826, 0.49148064851760864, 0.6808875799179077, 0.7321357727050781, 0.7553823590278625, 0.7769119143486023, 0.8033285140991211, 0.8088759779930115, 0.8224804997444153, 0.8208954930305481, 0.8265751004219055, 0.8356888294219971, 0.8366134166717529, 0.8477083444595337, 0.8588033318519592, 0.8576145768165588, 0.8556333184242249, 0.8691058158874512, 0.8602562546730042, 0.8757099509239197, 0.8761062026023865, 0.8767666220664978, 0.878879964351654, 0.8835028409957886], "val_loss": [1.5808371816362654, 0.7173192841666085, 0.5702314717429025, 0.5188420329775129, 0.4730020080293928, 0.4231334754398891, 0.40902903250285555, 0.410257135118757, 0.37846494572503225, 0.36485598768506733, 0.3597751685551235, 0.3738905872617449, 0.327706583908626, 0.3361626352582659, 0.33162690911974224, 0.34086603777749197, 0.33802296434129986, 0.3119059205055237, 0.31197610071727205, 0.30514727319989887, 0.30272386755262104, 0.3267773219517299, 0.3194521495274135, 0.2990230321884155], "val_accuracy": [0.31066668033599854, 0.6940000057220459, 0.7326666712760925, 0.7523333430290222, 0.7839999794960022, 0.8109999895095825, 0.8220000267028809, 0.8176666498184204, 0.8373333215713501, 0.8426666855812073, 0.8399999737739563, 0.8330000042915344, 0.862666666507721, 0.8519999980926514, 0.8533333539962769, 0.8423333168029785, 0.8496666550636292, 0.8636666536331177, 0.8690000176429749, 0.8686666488647461, 0.8679999709129333, 0.8629999756813049, 0.8569999933242798, 0.8646666407585144]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 3, 3, 3, 0], [35, 84, 6], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [3, 9, 7, 6, 8, 5, 0, 9], [4, 7, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.21571429073810577, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.0651950840590385, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20552106201648712, 0.1154404953122139, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.09816346849714, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 4, 7, 6, 8, 5, 0, 9], [4, 7, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.2037142813205719, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 7, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2235495923548294, 1.8406234384449072, 2.3036325759797003, 1.6604935478902747, 1.3522874461251984, 1.6137464315884023, 1.6881091943931554, 1.7597403078818632, 1.8691005736703588], "accuracy": [0.3327169418334961, 0.35860520601272583, 0.37762513756752014, 0.49266940355300903, 0.5399550795555115, 0.5296525955200195, 0.4575353264808655, 0.4345529079437256, 0.39162594079971313], "val_loss": [1.8993518693106515, 3.1432978766305104, 1.0900937489100866, 0.9000429255621774, 0.8871231760297503, 1.223231213433402, 1.25589690889631, 1.2605206285204207, 1.6216698374067033], "val_accuracy": [0.24566666781902313, 0.4986666738986969, 0.5479999780654907, 0.6399999856948853, 0.6370000243186951, 0.5133333206176758, 0.5346666574478149, 0.47433334589004517, 0.33500000834465027]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 1, 3, 3, 0], [32, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 4, 5, 0, 4, 0, 0, 9], [4, 4, 6], [49], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.1745714247226715, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 10, 8, 6, 2, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, grad))))))), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [11.916222418020618, 37.971530524825596, 65.70088704494265, 93.07103372114588, 117.27252425210288, 147.12364537384312, 177.40328275302397, 199.76490862293014, 226.45465066325568, 257.150582203319, 285.04092659557875, 314.39903185311215, 340.7640807766877, 362.0332035845171, 393.09149131628783, 422.6847068253541, 445.5667538746804, 463.32580706276804, 506.21655429028374, 540.0521185656643, 548.2484419387739], "accuracy": [0.137630432844162, 0.14291374385356903, 0.13908334076404572, 0.14515915513038635, 0.1434420794248581, 0.15136705338954926, 0.14040417969226837, 0.1410645842552185, 0.14476291835308075, 0.14317791163921356, 0.14515915513038635, 0.13630960881710052, 0.13749834895133972, 0.13881917297840118, 0.1340641975402832, 0.13855500519275665, 0.14317791163921356, 0.14238542318344116, 0.14595165848731995, 0.1414608359336853, 0.14568749070167542], "val_loss": [19.73792048863002, 39.28646741594587, 58.900094168526785, 78.53209795270648, 98.17296055385044, 117.81619698660714, 137.46358380998885, 157.11659022739954, 176.77293178013392, 196.43106951032365, 216.0887712751116, 235.74802943638392, 255.40717424665178, 275.0703386579241, 294.73561314174106, 314.4017421177455, 334.0682809012277, 353.73421805245533, 373.3992135184152, 393.0649850027902, 412.73179408482144], "val_accuracy": [0.18400000035762787, 0.18433333933353424, 0.18466666340827942, 0.1850000023841858, 0.1850000023841858, 0.1850000023841858, 0.1850000023841858, 0.18533332645893097, 0.18566666543483734, 0.18566666543483734, 0.1860000044107437, 0.1860000044107437, 0.1860000044107437, 0.1860000044107437, 0.1860000044107437, 0.1863333284854889, 0.1860000044107437, 0.1860000044107437, 0.1860000044107437, 0.18566666543483734, 0.18566666543483734]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [15, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.11857143044471741, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 11, 8, 6, 2, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, tf.math.square(sigma)))))), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.5100378727853068, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17817988991737366, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [19.53312247140067, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 4, 5, 0, 9], [4, 7, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08849557489156723, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [95, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [2, 4, 7, 6, 6, 5, 0, 9], [2, 7, 6], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [26, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 4, 6, 6, 8, 5, 0, 9], [7, 7, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 10, 6, 5, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06577730923891068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [49, 84, 6], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0], [1, 4, 7, 6, 4, 3, 0, 9], [0, 7, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 1, 3, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.4076658646822007, 238.86251181785252, 62407.444474340824, 16016570.469620923, 4090211181.537974, 1055818675973.7821], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [5.703583717346191, 2034.2332589285713, 522913.5535714286, 133869627.42857143, 34270624621.714287, 8773279903158.857], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 5, 3, 3, 0], [43, 84, 6], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [3, 4, 7, 6, 5, 5, 0, 9], [4, 7, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 10, 5, 5, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1073116.3982366861, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [58, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 5, 0, 1, 9], [1, 5, 3, 3, 0], [45, 88, 6], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 4, 9, 6, 4, 5, 0, 9], [0, 7, 6], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [2.3025477421266403, 2.3032064518798157, 2.303618673131356, 2.3052132728628556, 2.309636685385633, 2.3234192254662656], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09774138033390045, 0.1026284471154213, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9738807678222656, 1.9740048817225866, 1.97474091393607, 1.9771114076886858, 1.9838338579450334, 2.006823812212263], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [31, 84, 6], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0], [1, 4, 9, 6, 4, 5, 0, 9], [4, 7, 6], [64, 55], [0, 1, 1, 1, 1], [4, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [87, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 5, 3, 3, 0], [81, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0], [3, 2, 7, 6, 8, 5, 0, 9], [2, 7, 6], [64, 55], [0, 0, 0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09885714203119278, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 10, 7, 5, 2, 0, 7, 4, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.3239638435369816, 2.2984065974881354, 2.3029766644248717, 2.3041407968767755, 2.3060199063703792, 2.309757924051553], "accuracy": [0.1014397069811821, 0.11094967275857925, 0.08717474341392517, 0.09760929644107819, 0.09998679161071777, 0.09615638852119446], "val_loss": [1.963481834956578, 1.9733990260532923, 1.974550996507917, 1.975754874093192, 1.9780494826180595, 1.983041218348912], "val_accuracy": [0.13500000536441803, 0.08866667002439499, 0.10199999809265137, 0.10066666454076767, 0.10066666454076767, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 4, 7, 6, 8, 5, 0, 9], [4, 7, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09885714203119278, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 10, 6, 5, 1, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.361935795447798, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.120655127934047, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [72, 84, 6], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 1, 8, 6, 8, 5, 0, 9], [3, 7, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301585126090059, 2.3027315594500966, 2.302283523703421, 2.303151905166632, 2.3026731129193965, 2.304167109615279], "accuracy": [0.09549596905708313, 0.09219389408826828, 0.09153348207473755, 0.08347642421722412, 0.09259014576673508, 0.08889182657003403], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 2, 0, 1, 9], [0, 3, 3, 3, 0], [50, 84, 6], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0], [1, 4, 6, 0, 4, 6, 0, 9], [0, 7, 6], [64, 55], [0, 1, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [3, 0, 2], [21, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 4, 4, 2, 2, 1, 8, 8, 4, 4, 1, 3, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.301585126090059, 2.3027315594500966, 2.302283523703421, 2.303151905166632, 2.3026731129193965, 2.304167109615279], "accuracy": [0.09549596905708313, 0.09219389408826828, 0.09153348207473755, 0.08347642421722412, 0.09259014576673508, 0.08889182657003403], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [2, 5, 3, 3, 0], [31, 84, 6], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 4, 7, 6, 8, 5, 0, 9], [4, 7, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301585126090059, 2.3027315594500966, 2.302283523703421, 2.303151905166632, 2.3026731129193965, 2.304167109615279], "accuracy": [0.09549596905708313, 0.09219389408826828, 0.09153348207473755, 0.08347642421722412, 0.09259014576673508, 0.08889182657003403], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 5, 3, 3, 0], [45, 84, 6], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 4, 7, 6, 8, 5, 0, 9], [4, 7, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301585126090059, 2.3027315594500966, 2.302283523703421, 2.303151905166632, 2.3026731129193965, 2.304167109615279], "accuracy": [0.09549596905708313, 0.09219389408826828, 0.09153348207473755, 0.08347642421722412, 0.09259014576673508, 0.08889182657003403], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [26, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [2, 5, 3, 3, 0], [43, 84, 6], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 4, 7, 6, 8, 5, 0, 9], [2, 7, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301585126090059, 2.3027315594500966, 2.302283523703421, 2.303151905166632, 2.3026731129193965, 2.304167109615279], "accuracy": [0.09549596905708313, 0.09219389408826828, 0.09153348207473755, 0.08347642421722412, 0.09259014576673508, 0.08889182657003403], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]