[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 0, 8, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1], [2, 9], [3, 7], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8451428413391113, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 3, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9935686198113507, 1.3697274620538342, 0.8238986198692085, 0.6612864887363261, 0.6030226012482981, 0.5600795680033359, 0.5166807102686253, 0.5050909836388944, 0.47229872071007695, 0.46558613036570373, 0.4415996207883566, 0.43925233174859885, 0.42614345017708904, 0.40421351824281015, 0.4075884582533135, 0.39503495733908944, 0.3608234068815498, 0.36244499131499847, 0.3592033095883183, 0.34176933392242687, 0.33717862754103656, 0.31811871613336357, 0.3266246344679146, 0.31178567521623446, 0.3096765811771465, 0.29741358272844476], "accuracy": [0.35305771231651306, 0.5342755317687988, 0.6947563290596008, 0.7512878179550171, 0.7753269076347351, 0.7935543656349182, 0.8062343001365662, 0.8153480291366577, 0.8327829837799072, 0.8277638554573059, 0.8385946154594421, 0.8401796221733093, 0.8418967127799988, 0.8529917001724243, 0.848368763923645, 0.8540483713150024, 0.8667283058166504, 0.8697662353515625, 0.8668603897094727, 0.8728041052818298, 0.8751816153526306, 0.8825782537460327, 0.8819178342819214, 0.8829745054244995, 0.8823140859603882, 0.889578640460968], "val_loss": [1.6105939660753523, 0.7256717170987811, 0.5458164215087891, 0.4881833791732788, 0.45762692178998676, 0.4237097842352731, 0.40380689927509855, 0.3884970545768738, 0.37430726630347116, 0.38080912828445435, 0.36447313853672575, 0.3476593409265791, 0.36028185061046053, 0.3592976672308786, 0.35248093945639475, 0.3239139999662127, 0.32526504141943796, 0.3240994470460074, 0.3159439393452236, 0.3111801658357893, 0.309380156653268, 0.3237035700253078, 0.3122862918036325, 0.31732832533972605, 0.31485700607299805, 0.3009802613939558], "val_accuracy": [0.4806666672229767, 0.6930000185966492, 0.7493333220481873, 0.781000018119812, 0.7923333048820496, 0.8109999895095825, 0.8196666836738586, 0.828000009059906, 0.8366666436195374, 0.8326666951179504, 0.8403333425521851, 0.847000002861023, 0.8420000076293945, 0.8393333554267883, 0.8403333425521851, 0.8600000143051147, 0.8529999852180481, 0.8533333539962769, 0.8603333234786987, 0.8613333106040955, 0.8683333396911621, 0.8600000143051147, 0.8653333187103271, 0.862666666507721, 0.8659999966621399, 0.8666666746139526]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1], [2, 9], [3, 7, 6], [87, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8442857265472412, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9935821818952721, 1.3680607968270424, 0.8226019023290132, 0.6625327365730007, 0.6059967132607282, 0.5634226373803614, 0.5181570910128935, 0.5049662520274226, 0.47419462368047754, 0.46594800865330543, 0.44082257729857716, 0.4381483193826934, 0.42864891475359557, 0.4014595022109899, 0.4078393451148146, 0.3908122369460835, 0.3611131876592922, 0.36128698065611253, 0.3575608513500429, 0.3517029189973727, 0.33852751328488223, 0.3200496528693761, 0.33203953551011645, 0.3129750784944628, 0.307674593523808, 0.3003816506677158, 0.28234073187082737, 0.28049316516940964, 0.2820574006486673, 0.2645799269600315, 0.262040252313008, 0.26690392435313437, 0.25785215618021184, 0.24864215166136383, 0.23852025496567622, 0.23379435533026127, 0.22110910872505515, 0.21471091052324165, 0.225735168362322, 0.20730689248475323, 0.21360067318002576, 0.21166627198800184, 0.20696483111975136, 0.19427914598819176], "accuracy": [0.35305771231651306, 0.5342755317687988, 0.6954167485237122, 0.7495707273483276, 0.7744023203849792, 0.7921014428138733, 0.8037247657775879, 0.8156121969223022, 0.8305375576019287, 0.8261788487434387, 0.8433496356010437, 0.8378021121025085, 0.8393871188163757, 0.8520671129226685, 0.8481045961380005, 0.8558974862098694, 0.8632941246032715, 0.8721436858177185, 0.8688416481018066, 0.8688416481018066, 0.8757099509239197, 0.8824461698532104, 0.8795403242111206, 0.8831065893173218, 0.884691596031189, 0.8902390599250793, 0.8910315632820129, 0.8905032277107239, 0.8953903317451477, 0.89988112449646, 0.8994848728179932, 0.8985602855682373, 0.9021265506744385, 0.9041078090667725, 0.9120327830314636, 0.9105798602104187, 0.9173160791397095, 0.9187690019607544, 0.9119006991386414, 0.9199577569961548, 0.9187690019607544, 0.9162594079971313, 0.9216747879981995, 0.9252410531044006], "val_loss": [1.6113904884883337, 0.7190265485218593, 0.5446029560906547, 0.4894850083759853, 0.4581951584134783, 0.4251348376274109, 0.4083098258290972, 0.39728558915002005, 0.3748409833226885, 0.37628648962293354, 0.3555892195020403, 0.353121144430978, 0.359178364276886, 0.3677699395588466, 0.3446204492024013, 0.3279818722179958, 0.32149619715554373, 0.32652234179633005, 0.32336199283599854, 0.3179032461983817, 0.3127403599875314, 0.3282680596624102, 0.31833966289247784, 0.3131628377096994, 0.3137182082448687, 0.3059242367744446, 0.3281828761100769, 0.2983418107032776, 0.29488392387117657, 0.30793977635247366, 0.3110248531614031, 0.3120224816458566, 0.2917097210884094, 0.3409671527998788, 0.2942042350769043, 0.30606669187545776, 0.29277517965861727, 0.3145271454538618, 0.303831364427294, 0.29920272316251484, 0.3049850123269217, 0.31436958483287264, 0.3112195474760873, 0.3105547172682626], "val_accuracy": [0.47966668009757996, 0.6926666498184204, 0.7483333349227905, 0.7836666703224182, 0.7906666398048401, 0.8140000104904175, 0.8166666626930237, 0.8233333230018616, 0.8383333086967468, 0.8323333263397217, 0.8463333249092102, 0.843666672706604, 0.843666672706604, 0.8360000252723694, 0.8416666388511658, 0.8506666421890259, 0.859666645526886, 0.8543333411216736, 0.8566666841506958, 0.8539999723434448, 0.8633333444595337, 0.8579999804496765, 0.8650000095367432, 0.8636666536331177, 0.8613333106040955, 0.8666666746139526, 0.8576666712760925, 0.8776666522026062, 0.8793333172798157, 0.8773333430290222, 0.8666666746139526, 0.871666669845581, 0.8809999823570251, 0.8613333106040955, 0.8820000290870667, 0.8773333430290222, 0.8833333253860474, 0.8759999871253967, 0.8840000033378601, 0.8773333430290222, 0.875333309173584, 0.8793333172798157, 0.8766666650772095, 0.8763333559036255]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 4, 7, 6], [3, 7, 6], [64], [0, 1, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7725714445114136, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 7, 5, 3, 2, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0133919761543337, 1.541125567251303, 1.267980815617636, 1.0198670576796822, 0.9199465410253705, 0.8495531893598405, 0.8255695095860238, 0.7660937227939555, 0.7232134974533462, 0.6808075975149913, 0.6841916855079717, 0.7000101546900478, 0.6503531461803748, 0.6301762758229056, 0.6331949128671298], "accuracy": [0.32399946451187134, 0.4571390748023987, 0.547087550163269, 0.6231673359870911, 0.6613393425941467, 0.6774534583091736, 0.6956809163093567, 0.7041342258453369, 0.7223616242408752, 0.7448157668113708, 0.7376832365989685, 0.7232862114906311, 0.748778223991394, 0.7537974119186401, 0.7586844563484192], "val_loss": [1.5519098554338728, 0.9040887015206474, 1.0429866654532296, 0.7717655386243548, 0.6647834266935077, 0.6329187154769897, 0.5999745300837925, 0.5689986433301654, 0.5522100755146572, 0.5140054055622646, 0.5446279900414603, 0.5348326138087681, 0.523118155343192, 0.5020101581301007, 0.5175857884543282], "val_accuracy": [0.3583333194255829, 0.6316666603088379, 0.5860000252723694, 0.6516666412353516, 0.687666654586792, 0.7263333201408386, 0.7183333039283752, 0.7366666793823242, 0.7336666584014893, 0.7689999938011169, 0.7366666793823242, 0.7443333268165588, 0.7416666746139526, 0.7519999742507935, 0.750333309173584]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1], [1, 4, 7, 6, 9], [3, 7, 6], [55], [0, 1, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7699999809265137, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 9, 6, 4, 2, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.add(sigma, grad))), sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0917614321934783, 1.6088154899634706, 1.2289145109660087, 0.9695795130940665, 0.9513623469131907, 0.8303346035896496, 0.7839987239486836, 0.7849562804318847, 0.7627459464213631, 0.7060285896169133, 0.685184800212315, 0.6755978474055204, 0.6264924854729013, 0.6203234596511298, 0.6062644991687638, 0.6140782061175522, 0.5974331723779278], "accuracy": [0.3191123902797699, 0.4807819426059723, 0.5812970399856567, 0.6419231295585632, 0.656980574131012, 0.6873596906661987, 0.7041342258453369, 0.7049266695976257, 0.7152291536331177, 0.722229540348053, 0.7338528633117676, 0.7413815855979919, 0.7643640041351318, 0.7705719470977783, 0.7754589915275574, 0.7720248103141785, 0.7724210619926453], "val_loss": [1.663663591657366, 1.1445253917149134, 0.9019607475825718, 0.821915899004255, 0.6156044176646641, 0.6047977038792202, 0.6106147425515311, 0.5632611513137817, 0.5529526472091675, 0.5336410488401141, 0.5902983631406512, 0.4995308944157192, 0.5289954287665231, 0.5731819868087769, 0.5299062388283866, 0.5179402828216553, 0.49597409793308805], "val_accuracy": [0.4740000069141388, 0.6273333430290222, 0.6066666841506958, 0.6359999775886536, 0.7386666536331177, 0.7129999995231628, 0.7369999885559082, 0.731333315372467, 0.7419999837875366, 0.7536666393280029, 0.7193333506584167, 0.7713333368301392, 0.7453333139419556, 0.7509999871253967, 0.7446666955947876, 0.7553333044052124, 0.7636666893959045]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1], [1, 4, 7, 6, 8, 0], [3, 7, 6], [64, 55], [0, 1, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.6037142872810364, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 11, 7, 6, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.negative(sigma)))))), sigma)), tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.279714674351946, 2.1714643018750497, 1.768715552036017, 1.4121991842808017, 1.650251515616106, 1.89760308135943, 1.713361190719816, 1.5936430995931337], "accuracy": [0.3016774654388428, 0.22493726015090942, 0.41830670833587646, 0.5155197381973267, 0.4367983043193817, 0.3867388665676117, 0.40906089544296265, 0.45264825224876404], "val_loss": [1.974653993334089, 1.5076779297419958, 1.0341837065560477, 0.9961301939828056, 1.7250407763889857, 1.201310089656285, 1.0813961710248674, 0.9561852727617536], "val_accuracy": [0.09966666996479034, 0.4163333475589752, 0.6129999756813049, 0.578000009059906, 0.5220000147819519, 0.48533332347869873, 0.5663333535194397, 0.606333315372467]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 7, 7, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [2, 9], [3, 7, 6], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.37457144260406494, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9896437264767306, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.31964072585105896, 0.33786818385124207, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.400594677243914, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.4163333475589752, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [2, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1], [1, 4, 7, 6], [3, 7, 6], [64, 55], [0, 0, 0, 0, 1, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 7, 5, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1], [3, 4, 4, 6, 9], [3, 7, 6], [64], [0, 1, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 9, 6, 5, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303036629830873, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 0, 8, 0, 1, 9], [0, 5, 3, 3, 0], [92, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1], [6, 9, 7, 6, 9], [3, 7], [64, 55], [0, 0, 0, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 3, 2, 2, 0, 1, 7, 4, 3, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [3.223162342387633e+16, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16153743863105774, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 0, 8, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1], [2, 9], [3, 7], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 3, 2, 1, 3, 2, 2, 0, 1, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [90, 84, 6], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [1, 4, 7, 6, 9], [3, 7, 6], [64], [0, 0, 0, 0, 1, 1, 0], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 7, 5, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [72244544658812.11, 2.771825787382135, 3.641764749641101, 4.870763544015377, 6.3707729743188635, 7.9345738869836975], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1272377967834473, 2.713937827519008, 3.6308484758649553, 4.852459907531738, 6.205627032688686, 7.522192546299526], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [2, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1], [0, 0, 7, 6, 9], [3, 7, 6], [64, 55], [0, 0, 0, 0, 1, 0, 1, 1], [4, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 8, 5, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.square(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3035157463412324, 2.3030239488344466, 2.3031803637668204, 2.3033454168773426, 2.303237877281319, 2.3032587874819024, 2.3031470485256964, 2.303161142083711, 2.303195357842295], "accuracy": [0.09140139818191528, 0.09919429570436478, 0.0956280529499054, 0.09074098616838455, 0.09351472556591034, 0.09430722147226334, 0.09576013684272766, 0.09655263274908066, 0.08849557489156723], "val_loss": [1.9737694604056222, 1.9737450054713659, 1.9736569268362862, 1.9738140106201172, 1.973818234034947, 1.9737023626055037, 1.9736740929739816, 1.973707607814244, 1.9738737515040807], "val_accuracy": [0.09833333641290665, 0.10000000149011612, 0.1003333330154419, 0.10133333504199982, 0.10133333504199982, 0.09933333098888397, 0.10133333504199982, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1], [1, 4, 7, 6], [2, 7, 6], [64, 55], [0, 1, 0, 0, 1, 0, 0, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 8, 5, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.3030072678160503, 2.3025656340380762, 2.3025673440324317, 2.3025529100878868, 2.3025682510370435, 2.3025606210126917], "accuracy": [0.09840179979801178, 0.10421344637870789, 0.1026284471154213, 0.10236428678035736, 0.10408136248588562, 0.10593052208423615], "val_loss": [1.973644801548549, 1.9736443247113908, 1.9736449377877372, 1.9736457552228654, 1.9736475263323103, 1.973648956843785], "val_accuracy": [0.1003333330154419, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1], [3, 4, 7, 6, 3, 8], [3, 7, 6], [64, 55], [0, 1, 0, 0, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 5, 5, 3, 2, 2, 11, 6, 5, 1, 0, 1, 1, 0, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, sigma))), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027676128046846, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 0, 8, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1], [2, 9], [3, 7], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 3, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [30423083243.824673, 3.525597641205561e+17, 1.2976429959561154e+25, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09694888442754745, 0.1010434553027153, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [9, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [4, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1], [1, 1, 7, 6, 9], [3, 7, 6], [64], [1, 0, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 9, 6, 5, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), sigma)), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.750727299166362, 24.95956629545398, 216.01080612890033, 1169.2026745442622, 4719.093811010971, 15051.046000466418], "accuracy": [0.09047681838274002, 0.1010434553027153, 0.09668471664190292, 0.09576013684272766, 0.10276053100824356, 0.09906221181154251], "val_loss": [4.290610722133091, 50.52594103131975, 340.56368582589283, 1602.3241489955358, 5686.864118303572, 16366.226004464286], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 0, 8, 0, 1, 9], [5, 5, 3, 3, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [2, 9], [3, 7], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [1, 4, 9, 0, 1, 9], [0, 2, 3, 3, 0], [45, 87, 6], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 4, 7, 6], [3, 7, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [1, 5, 3, 3, 0], [45, 84, 6], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 1], [2, 1], [3, 7], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09914285689592361, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.369420408021662, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09113723784685135, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2991578238351003, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 2, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1], [1, 8, 7, 6, 9, 7], [3, 7, 6], [44, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 10, 6, 6, 0, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.add(sigma, sigma)))), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3037886515962387, 2.302460175117308, 2.3034313279624157, 2.302366146841668, 2.3018799468652524, 2.3022216193632854], "accuracy": [0.08770307898521423, 0.0878351628780365, 0.0870426595211029, 0.08796724677085876, 0.09430722147226334, 0.09391097724437714], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]