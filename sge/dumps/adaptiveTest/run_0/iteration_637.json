[{"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.847428560256958, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.036418387398917, 1.150805567966051, 0.8356086764321776, 0.7250232954917094, 0.6612568738485418, 0.5937159313675026, 0.5554764790226991, 0.5264075875612944, 0.5086933851336538, 0.4767616421649516, 0.46311773843359655, 0.449326177373806, 0.42462231023373653, 0.41316287262627727, 0.39327126067894924, 0.3857972626405196, 0.36870261094258716, 0.35916065757206295, 0.34098064569576053, 0.33977891293577844, 0.33755189052835477, 0.3211523433875383, 0.3138500994002232, 0.30497521350979256, 0.3098719174032749, 0.29314137319170047, 0.2825966845642322, 0.2720940064846989, 0.27308950798465215, 0.25606784882279054, 0.25528655984634424, 0.2464185723137657, 0.23569293717556405, 0.23877975473574298, 0.23513947490451673, 0.22987207838053308, 0.22421097694811898, 0.21419605288790863, 0.20545477462112471, 0.20538515637437696, 0.19480235859104167, 0.19300400746489055, 0.19340392753527133], "accuracy": [0.31779158115386963, 0.6129969358444214, 0.6873596906661987, 0.7272487282752991, 0.7532690763473511, 0.7802139520645142, 0.7923656105995178, 0.8016114234924316, 0.8198388814926147, 0.8252542614936829, 0.8310658931732178, 0.8348963260650635, 0.8471800088882446, 0.8511425256729126, 0.8610487580299377, 0.8622375130653381, 0.8681812286376953, 0.8688416481018066, 0.871879518032074, 0.8758420348167419, 0.8730682730674744, 0.8828424215316772, 0.8842953443527222, 0.889578640460968, 0.8837670087814331, 0.8899748921394348, 0.8943336606025696, 0.8975036144256592, 0.8992207050323486, 0.9043719172477722, 0.9001452922821045, 0.9055606722831726, 0.9113723635673523, 0.9082023501396179, 0.9104477763175964, 0.9128252267837524, 0.9115044474601746, 0.917580246925354, 0.9212785363197327, 0.9233918786048889, 0.925901472568512, 0.9269581437110901, 0.9261656403541565], "val_loss": [0.9026909896305629, 0.657026869910104, 0.5865516492298671, 0.5342291593551636, 0.4939366238457816, 0.4590435709272112, 0.4409693309238979, 0.40916199343545095, 0.3921834485871451, 0.388001024723053, 0.3770697627748762, 0.35573858874184744, 0.3455477271761213, 0.33686902693339754, 0.3283843994140625, 0.32561375413622173, 0.32270983287266325, 0.31380423477717806, 0.3106072885649545, 0.31714831931250437, 0.30553893532071796, 0.30136838981083464, 0.3022503767694746, 0.2964851515633719, 0.295101991721562, 0.28840088844299316, 0.30032133204596384, 0.2958867720195225, 0.29397256885256084, 0.28333536216190885, 0.2906984772000994, 0.2979821562767029, 0.2860068508556911, 0.2855838622365679, 0.29704212290900095, 0.28388688394001554, 0.2876767175538199, 0.2854400362287249, 0.2844599825995309, 0.2991211840084621, 0.2905828782490322, 0.2908033898898533, 0.3028798358780997], "val_accuracy": [0.5893333554267883, 0.7206666469573975, 0.7406666874885559, 0.7639999985694885, 0.7739999890327454, 0.7826666831970215, 0.7973333597183228, 0.8186666369438171, 0.8349999785423279, 0.8333333134651184, 0.8339999914169312, 0.8433333039283752, 0.8526666760444641, 0.8516666889190674, 0.8529999852180481, 0.8566666841506958, 0.8569999933242798, 0.8656666874885559, 0.8643333315849304, 0.8566666841506958, 0.8653333187103271, 0.8679999709129333, 0.8646666407585144, 0.8703333139419556, 0.8733333349227905, 0.8686666488647461, 0.8696666955947876, 0.8653333187103271, 0.8709999918937683, 0.874666690826416, 0.8736666440963745, 0.8733333349227905, 0.8776666522026062, 0.8790000081062317, 0.8736666440963745, 0.878333330154419, 0.8813333511352539, 0.8853333592414856, 0.878333330154419, 0.878333330154419, 0.8853333592414856, 0.8843333125114441, 0.8759999871253967]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8414285778999329, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.036417854523473, 1.1507993641940122, 0.8355123478077374, 0.7253469424933616, 0.6611735819510622, 0.5930201475095315, 0.5553945804851529, 0.5271215229033794, 0.5102690166297165, 0.4806137321616019, 0.464875471165246, 0.44738477364570206, 0.42390086194307197, 0.4157486485570508, 0.38995532605862493, 0.3845836505000586, 0.36810221148598476, 0.3608205437959382, 0.3432726785294557, 0.3391746924679592, 0.33408132343086916, 0.32053300197082596, 0.3125074584848452, 0.30307736325226187, 0.3111033779345704, 0.29429654814642436, 0.28548454584509797, 0.27576064130948474, 0.2715262049980577, 0.2587407458243416, 0.25403551037568833, 0.24320522529763033, 0.24200681733488327, 0.24120383322821506, 0.23436246328562668, 0.23124948650177332, 0.22409742298678573, 0.2158379565258666, 0.21124803564292155, 0.20560082413572062, 0.1967347586187216, 0.19400470586437765, 0.19763001921217535, 0.19298058059969442, 0.17931810149726393, 0.17834744974527975, 0.16443748495220084, 0.16464093714861933, 0.16844170119477112], "accuracy": [0.31779158115386963, 0.6127327680587769, 0.6877558827400208, 0.7279091477394104, 0.7530049085617065, 0.7807422876358032, 0.7930260300636292, 0.802800178527832, 0.8181217908859253, 0.8231409192085266, 0.829216718673706, 0.8338396549224854, 0.8499537706375122, 0.8516708612442017, 0.8610487580299377, 0.8625016212463379, 0.8688416481018066, 0.8693699836730957, 0.8706908226013184, 0.873860776424408, 0.873860776424408, 0.8817857503890991, 0.8831065893173218, 0.887597382068634, 0.884691596031189, 0.8881257176399231, 0.8942015767097473, 0.8988244533538818, 0.8968431949615479, 0.9022586345672607, 0.9045040011405945, 0.9078060984611511, 0.9066173434257507, 0.9034473896026611, 0.9068815112113953, 0.9105798602104187, 0.9154669046401978, 0.917580246925354, 0.915070652961731, 0.9194294214248657, 0.9224672913551331, 0.9231277108192444, 0.9228635430335999, 0.9270902276039124, 0.9294676780700684, 0.9315810203552246, 0.9375247359275818, 0.935279369354248, 0.932769775390625], "val_loss": [0.9026885713849749, 0.6571056842803955, 0.586815527507237, 0.5347743034362793, 0.4938138723373413, 0.45768102577754427, 0.441498909677778, 0.4102248804909842, 0.3911575845309666, 0.3891621913228716, 0.3775882380349295, 0.35833730016435894, 0.34984642267227173, 0.33946120738983154, 0.32984934534345356, 0.32541040011814665, 0.32518830469676424, 0.3167887585503714, 0.31040999719074797, 0.31052288838795256, 0.30439819608415875, 0.30206773962293354, 0.2954491802624294, 0.29725104570388794, 0.2939756512641907, 0.29191133805683683, 0.307473361492157, 0.2957548669406346, 0.2891971043178013, 0.28762309891836985, 0.2880272354398455, 0.29214764492852346, 0.2794965250151498, 0.2784661820956639, 0.2942244665963309, 0.28899129799434115, 0.28473712716783794, 0.2867359093257359, 0.285754884992327, 0.2950927955763681, 0.294207010950361, 0.2948970283780779, 0.28964195932660786, 0.3002772331237793, 0.29220577648707796, 0.3054485150745937, 0.2894889201436724, 0.29487623487200054, 0.29744781766619], "val_accuracy": [0.5893333554267883, 0.7203333377838135, 0.7416666746139526, 0.7649999856948853, 0.7736666798591614, 0.7820000052452087, 0.7990000247955322, 0.8190000057220459, 0.8333333134651184, 0.8316666483879089, 0.8336666822433472, 0.840666651725769, 0.8486666679382324, 0.8506666421890259, 0.8519999980926514, 0.8573333621025085, 0.8560000061988831, 0.8616666793823242, 0.8643333315849304, 0.8606666922569275, 0.8613333106040955, 0.8713333606719971, 0.8703333139419556, 0.8743333220481873, 0.8676666617393494, 0.8700000047683716, 0.8709999918937683, 0.8683333396911621, 0.8786666393280029, 0.875333309173584, 0.871999979019165, 0.878333330154419, 0.8823333382606506, 0.8833333253860474, 0.8759999871253967, 0.8830000162124634, 0.878333330154419, 0.8840000033378601, 0.8786666393280029, 0.8806666731834412, 0.8843333125114441, 0.8846666812896729, 0.8786666393280029, 0.8870000243186951, 0.8856666684150696, 0.8836666941642761, 0.8836666941642761, 0.8856666684150696, 0.8833333253860474]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8360000252723694, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0364178838731117, 1.1508083311148827, 0.8354265206147651, 0.7249978959615504, 0.6612849035251724, 0.5933581346754447, 0.55525763341307, 0.5267694928248986, 0.5079674372709564, 0.47629653131327276, 0.46230500206703584, 0.44685068299048897, 0.4227826845069619, 0.41347211128559097, 0.3930827312032702, 0.3822139796524504, 0.3665126565267633, 0.3570894783891943, 0.33969652339404743, 0.3384878484761285, 0.3318398940116029, 0.3163131634596395, 0.30675861935778664, 0.29911971624422506, 0.3102015283058632, 0.2945522921684632, 0.28513234460500286, 0.2748024062418494, 0.27035234704182654, 0.260177609564968, 0.2534554427829889, 0.24635240860138713, 0.23398809768913947, 0.23497054856277932, 0.23039491619487182, 0.22385826657878377, 0.22124857928349498, 0.21336410575381612, 0.20571114085668807, 0.2001696622284286, 0.19120212012057794, 0.1886298235251431, 0.19151034117485033, 0.18609257585234598, 0.17229148340680264, 0.1742023570804296, 0.15877260220497985], "accuracy": [0.31779158115386963, 0.6128648519515991, 0.6880200505256653, 0.7277770638465881, 0.7528728246688843, 0.780610203742981, 0.7927618622779846, 0.8012151718139648, 0.817989706993103, 0.8238013386726379, 0.8302733898162842, 0.8327829837799072, 0.8507462739944458, 0.8529917001724243, 0.8605204224586487, 0.863029956817627, 0.8668603897094727, 0.8714832663536072, 0.8728041052818298, 0.8768987059593201, 0.8768987059593201, 0.8840311765670776, 0.8854840993881226, 0.8897107243537903, 0.8887861371040344, 0.8889182209968567, 0.8922203183174133, 0.9006736278533936, 0.8982961177825928, 0.9035794734954834, 0.9034473896026611, 0.9030511379241943, 0.9140139818191528, 0.9095231890678406, 0.9095231890678406, 0.9121648669242859, 0.9153348207473755, 0.9181085824966431, 0.9199577569961548, 0.9222031235694885, 0.9261656403541565, 0.9282789826393127, 0.9274864792823792, 0.9289394021034241, 0.9309206008911133, 0.9322414398193359, 0.9379209876060486], "val_loss": [0.9026881626674107, 0.6571235656738281, 0.5864254917417254, 0.5349193641117641, 0.49413418769836426, 0.4578057016645159, 0.4423576593399048, 0.4090493747166225, 0.3894660898617336, 0.3890637329646519, 0.37710550001689364, 0.35616631167275564, 0.3435584987912859, 0.3366860832486834, 0.33014722381319317, 0.32468571833201815, 0.32355542693819317, 0.3169866033962795, 0.3105790785380772, 0.31319860901151386, 0.3027295640536717, 0.29894548654556274, 0.2967114107949393, 0.2998203294617789, 0.2954983115196228, 0.2952313593455723, 0.309840909072331, 0.2970147728919983, 0.30005801575524466, 0.2850960748536246, 0.2943212900842939, 0.29756035123552593, 0.28590372630528044, 0.28695892436163767, 0.2922272597040449, 0.29080437762396677, 0.28696434838431223, 0.28975829056331087, 0.29216712713241577, 0.2917696237564087, 0.2897749032293047, 0.2988383173942566, 0.29695242643356323, 0.30213174649647306, 0.2938133307865688, 0.3038445029939924, 0.2885207533836365], "val_accuracy": [0.5893333554267883, 0.7206666469573975, 0.7409999966621399, 0.7639999985694885, 0.7746666669845581, 0.7823333144187927, 0.7986666560173035, 0.8193333148956299, 0.8376666903495789, 0.8293333053588867, 0.831333339214325, 0.8423333168029785, 0.8539999723434448, 0.8523333072662354, 0.8516666889190674, 0.8556666374206543, 0.8576666712760925, 0.8606666922569275, 0.8646666407585144, 0.862333357334137, 0.8643333315849304, 0.8679999709129333, 0.8676666617393494, 0.8706666827201843, 0.8673333525657654, 0.8700000047683716, 0.8683333396911621, 0.8686666488647461, 0.871666669845581, 0.8766666650772095, 0.8693333268165588, 0.875, 0.8769999742507935, 0.8793333172798157, 0.8726666569709778, 0.8820000290870667, 0.8836666941642761, 0.8823333382606506, 0.878333330154419, 0.8846666812896729, 0.8849999904632568, 0.887333333492279, 0.874666690826416, 0.8826666474342346, 0.8846666812896729, 0.8843333125114441, 0.8856666684150696]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [41, 83, 6], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7828571200370789, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1120138443094185, 1.4786234600291104, 1.1727271265341794, 0.9822799500504568, 0.9103664243383461, 0.8433546279761864, 0.7683538408673687, 0.7648049459371112, 0.7615806701995472, 0.7425337325958229, 0.6977080620196454, 0.675646258508997, 0.68325139522521, 0.6592602977474304, 0.6789507930304916, 0.6257671547005316, 0.6277224277823341, 0.6446998386555628, 0.616387767538875, 0.583773536232437], "accuracy": [0.3109232485294342, 0.49306565523147583, 0.5665037631988525, 0.6277902722358704, 0.6556597352027893, 0.6818121671676636, 0.7069079279899597, 0.7112666964530945, 0.7152291536331177, 0.7135120630264282, 0.7334566116333008, 0.7452120184898376, 0.7449478507041931, 0.744419515132904, 0.733060359954834, 0.7598732113838196, 0.7557786107063293, 0.748778223991394, 0.7578919529914856, 0.778761088848114], "val_loss": [1.2762555394853865, 1.0912166663578577, 0.7790286030088153, 0.7166013377053397, 0.6915790864399501, 0.6050718171255929, 0.6107462985174996, 0.6021708760942731, 0.6047395297459194, 0.5304936851773944, 0.5311599969863892, 0.5232736553464618, 0.52363692011152, 0.5230472598757062, 0.4921494041170393, 0.535077622958592, 0.5739889485495431, 0.49682661465236116, 0.486476012638637, 0.4765197890145438], "val_accuracy": [0.596666693687439, 0.4973333477973938, 0.6549999713897705, 0.6776666641235352, 0.6800000071525574, 0.731333315372467, 0.7236666679382324, 0.746999979019165, 0.722000002861023, 0.7646666765213013, 0.7766666412353516, 0.7713333368301392, 0.7616666555404663, 0.7543333172798157, 0.7910000085830688, 0.7459999918937683, 0.7390000224113464, 0.7763333320617676, 0.768666684627533, 0.7816666960716248]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7628571391105652, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2581801652876834, 1.842683705372219, 1.329708059592065, 0.9675846360126868, 0.8667766177312589, 0.8471465151323508, 0.7804714198031241, 0.7622483473223403, 0.7233969090306417, 0.6910868914545236, 0.6543503906890276, 0.6220682594659952, 0.6001602184770917, 0.5791711469194782, 0.5627097903446137, 0.5419971489430796, 0.5338159652906339, 0.5303387685876088, 0.5017543869751666, 0.49610598862226285, 0.4919717521943657, 0.4861340642786297, 0.4752858377694926, 0.45755261808669234, 0.447071562566305, 0.44310720811871457, 0.4373502774623407, 0.4266832277460215, 0.4106915695965487, 0.40795928291782585, 0.40958243328204574, 0.39076706995392174, 0.38991828947932633, 0.3901948561096519, 0.3798174334554908, 0.3747524241052677, 0.3649950331354248, 0.36769481019226785, 0.3694899892959738, 0.3535828648179104, 0.35701229669603424, 0.34507934561164355, 0.3554389311093948, 0.33354053945589246, 0.37654386601112994, 0.3523696268144899, 0.3556750659708964, 0.34187323986704576], "accuracy": [0.19574692845344543, 0.42266544699668884, 0.5539559125900269, 0.6425835490226746, 0.6827367544174194, 0.6847180128097534, 0.6993792057037354, 0.7124554514884949, 0.7288337349891663, 0.7342491149902344, 0.7609298825263977, 0.7712323069572449, 0.7712323069572449, 0.7824593782424927, 0.789459764957428, 0.7959318161010742, 0.7952714562416077, 0.8005547523498535, 0.8068947196006775, 0.8177255392074585, 0.8133667707443237, 0.8127063512802124, 0.8274996876716614, 0.8260467648506165, 0.8296129703521729, 0.8321225643157959, 0.8352925777435303, 0.8400475382804871, 0.8425571322441101, 0.8453308939933777, 0.847840428352356, 0.8510104417800903, 0.8521991968154907, 0.852859616279602, 0.8541803956031799, 0.854708731174469, 0.8541803956031799, 0.8576145768165588, 0.8584070801734924, 0.8607845902442932, 0.858671247959137, 0.8634262084960938, 0.860652506351471, 0.8721436858177185, 0.8595958352088928, 0.8617091774940491, 0.8648791313171387, 0.8747853636741638], "val_loss": [1.8084118025643485, 0.9771273476736886, 0.7489865847996303, 0.6981700829097203, 0.6090313196182251, 0.5657774720873151, 0.5940509183066232, 0.5461510590144566, 0.5096183504377093, 0.48189726897648405, 0.4730936118534633, 0.45371556282043457, 0.44477936199733187, 0.43758214371544973, 0.4279335822377886, 0.42204645701817106, 0.4152463504246303, 0.40293167318616596, 0.3932921460696629, 0.3972769720213754, 0.40032410621643066, 0.3943612575531006, 0.382932756628309, 0.3745384046009609, 0.3742864727973938, 0.3616229806627546, 0.3575819560459682, 0.3672478880201067, 0.362810594694955, 0.36743849515914917, 0.3717062473297119, 0.37430197851998465, 0.36445073570523945, 0.36374419927597046, 0.36887827089854647, 0.3562851548194885, 0.36160763672419954, 0.3747121606554304, 0.3827379516192845, 0.37773282187325613, 0.36977031401225496, 0.3855590990611485, 0.37679734400340487, 0.40139499732426237, 0.40278710637773785, 0.39417329856327604, 0.38624738795416697, 0.39420972551618305], "val_accuracy": [0.4673333466053009, 0.6486666798591614, 0.6949999928474426, 0.7099999785423279, 0.7193333506584167, 0.7393333315849304, 0.7549999952316284, 0.7513333559036255, 0.7706666588783264, 0.7816666960716248, 0.7856666445732117, 0.7926666736602783, 0.7996666431427002, 0.7979999780654907, 0.8073333501815796, 0.8069999814033508, 0.8119999766349792, 0.8246666789054871, 0.8263333439826965, 0.8336666822433472, 0.8140000104904175, 0.8376666903495789, 0.8356666564941406, 0.8396666646003723, 0.8503333330154419, 0.8523333072662354, 0.8539999723434448, 0.8533333539962769, 0.856333315372467, 0.8519999980926514, 0.8503333330154419, 0.8543333411216736, 0.8610000014305115, 0.8553333282470703, 0.859333336353302, 0.8569999933242798, 0.8616666793823242, 0.8613333106040955, 0.8606666922569275, 0.8519999980926514, 0.859666645526886, 0.8636666536331177, 0.8666666746139526, 0.8643333315849304, 0.8616666793823242, 0.8560000061988831, 0.862666666507721, 0.8636666536331177]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 3, 3, 8, 1, 9], [3, 3, 5, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.4342857003211975, "mapping_values": [1, 3, 3, 2, 1, 1, 2, 2, 1, 1, 0, 11, 7, 6, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))), sigma)))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.312638299403142, 2.4321798620411688, 2.307382583901583, 2.2104031884076654, 2.2929843363902354, 2.3090058508613374], "accuracy": [0.19072777032852173, 0.22559767961502075, 0.09509972482919693, 0.1990489959716797, 0.18901069462299347, 0.09549596905708313], "val_loss": [1.509028434753418, 1.9824066162109375, 1.9703317369733537, 1.9782137870788574, 1.9800152097429549, 1.9742579460144043], "val_accuracy": [0.40966665744781494, 0.1003333330154419, 0.1263333261013031, 0.10000000149011612, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [32.51083005653979, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03513406589627266, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [12905.060546875, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 3, 5, 3, 0], [38, 83, 6], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30183410912205, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 3, 8, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5624981293812.021, 1.53572523407472e+28, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2953191135267108.5, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 5, 3, 0], [38, 43, 6], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30183410912205, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302515736723368, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 3, 3, 8, 1, 9], [3, 3, 5, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 3, 3, 8, 1, 9], [3, 3, 5, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [4, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 4, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3493511617900107, 22.70561524556061, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04966318979859352, 0.027341170236468315, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1595772334507535, 12661.321986607143, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.00566666666418314, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 83, 6], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [1, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 11, 7, 6, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))), sigma)))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2511323.8676192025, 3186816159.0785894, 192590303466.2581, 3393668891409.549, 30570616664682.375, 179035989272478.88], "accuracy": [0.1026284471154213, 0.09602430462837219, 0.0948355570435524, 0.09576013684272766, 0.09734513610601425, 0.09576013684272766], "val_loss": [39124587.428571425, 15364787638.857143, 539578147986.2857, 6865431672539.429, 49760630659949.71, 252048986154130.28], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 3, 3, 8, 1, 9], [3, 3, 5, 3, 0], [38, 83, 6], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [12349859706.214405, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0610223226249218, 0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.755083523723659e+25, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [36751273.47462938, 5593239342.594638, 94281534722.46837, 667338915067.4352, 2936475502891.991, 9611560897019.74], "accuracy": [0.10302469879388809, 0.09602430462837219, 0.0948355570435524, 0.09576013684272766, 0.09734513610601425, 0.09589222073554993], "val_loss": [301650011.4285714, 16245566902.857143, 174337055597.7143, 950371390025.1428, 3559643414528.0, 10499840578121.143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [5, 3, 9, 0, 1, 9], [4, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.356801536372624, 3.067833289305264, 4.927471549802878, 8.065406909535007, 12.423328004886667, 17.930071644700515], "accuracy": [0.09747721254825592, 0.09668471664190292, 0.0944393053650856, 0.09628847241401672, 0.09721305221319199, 0.09615638852119446], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 2, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3017541537778, 2.3049206538774145, 2.302651830022487, 2.302354174991719, 2.30438346013165, 2.303080133962877], "accuracy": [0.09179764986038208, 0.0870426595211029, 0.09219389408826828, 0.08981640636920929, 0.09047681838274002, 0.08677849918603897], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 3, 8, 1, 9], [1, 3, 3, 3, 0], [38, 43, 6], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [1, 3, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.add(sigma, beta))", "other_info": {"loss": [2.3017541537778, 2.3049206538774145, 2.302651830022487, 2.302354174991719, 2.30438346013165, 2.303080133962877], "accuracy": [0.09179764986038208, 0.0870426595211029, 0.09219389408826828, 0.08981640636920929, 0.09047681838274002, 0.08677849918603897], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]