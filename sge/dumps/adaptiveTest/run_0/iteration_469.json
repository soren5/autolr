[{"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [2, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8514285683631897, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 9, 5, 4, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0592878144477984, 1.701517849944098, 1.0078004307168082, 0.7684948613237097, 0.6608582365514423, 0.6465972610169304, 0.572973744704849, 0.545838125165207, 0.5239271597619133, 0.5028333952555709, 0.48079654291368606, 0.4631429482932891, 0.4649941055978751, 0.441949240476574, 0.42133442712513497, 0.4139795714893109, 0.4068288970672223, 0.40566446192748573, 0.3806415278882304, 0.3681027435584075, 0.3557544446671722, 0.3527953660861297, 0.34079731151947745, 0.3365229603054186, 0.3295908193735635, 0.30743391070430776, 0.3275262374943116, 0.3127670224907061, 0.29031315784428524, 0.3009572653305324, 0.29935740959674234, 0.28412968781189346, 0.26756026649267256, 0.2698292483144732, 0.2781582557884237, 0.274622581492735, 0.25717229095857536, 0.24817891486049123, 0.2534981207242338], "accuracy": [0.3319244384765625, 0.4231937527656555, 0.6489235162734985, 0.7036058902740479, 0.750759482383728, 0.7582882046699524, 0.7886672616004944, 0.7985734939575195, 0.8107251524925232, 0.8183859586715698, 0.8216879963874817, 0.8325188159942627, 0.8280280232429504, 0.8392550349235535, 0.8451988101005554, 0.8469158411026001, 0.8479725122451782, 0.8532558679580688, 0.8607845902442932, 0.8656716346740723, 0.8742570281028748, 0.8698983192443848, 0.8722757697105408, 0.8780874609947205, 0.8786157965660095, 0.8829745054244995, 0.8761062026023865, 0.8824461698532104, 0.8923524022102356, 0.889050304889679, 0.8894465565681458, 0.8931449055671692, 0.901862382888794, 0.8963148593902588, 0.8972394466400146, 0.898428201675415, 0.9043719172477722, 0.9050323367118835, 0.9043719172477722], "val_loss": [1.8457764898027693, 0.8569755724498204, 0.5938577822276524, 0.5480774811335972, 0.4938491242272513, 0.4629180942262922, 0.4249484879629953, 0.41947680711746216, 0.4070006012916565, 0.4049150858606611, 0.37812394755227224, 0.3799436943871634, 0.3814058814729963, 0.3679191640445164, 0.37183657714298796, 0.34607806376048494, 0.3655103530202593, 0.3426013503755842, 0.3275910871369498, 0.32518190145492554, 0.3287931169782366, 0.3304942675999233, 0.3141311151640756, 0.3163817354610988, 0.3130230818475996, 0.3249167629650661, 0.3206779020173209, 0.3017460448401315, 0.3173224925994873, 0.3020364556993757, 0.30034817116601126, 0.29968827962875366, 0.31499563796179636, 0.29423894201006207, 0.30255366223199026, 0.30484144176755634, 0.3042068566594805, 0.30080799545560566, 0.3080241935593741], "val_accuracy": [0.19033333659172058, 0.6466666460037231, 0.7306666374206543, 0.749666690826416, 0.7850000262260437, 0.7866666913032532, 0.8143333196640015, 0.8100000023841858, 0.8143333196640015, 0.8183333277702332, 0.8306666612625122, 0.8296666741371155, 0.8243333101272583, 0.8323333263397217, 0.82833331823349, 0.8403333425521851, 0.8399999737739563, 0.8489999771118164, 0.856333315372467, 0.8526666760444641, 0.8576666712760925, 0.8546666502952576, 0.8616666793823242, 0.859666645526886, 0.8579999804496765, 0.8576666712760925, 0.8603333234786987, 0.8663333058357239, 0.8616666793823242, 0.8659999966621399, 0.8686666488647461, 0.871666669845581, 0.8679999709129333, 0.874666690826416, 0.8696666955947876, 0.871666669845581, 0.874666690826416, 0.8676666617393494, 0.8713333606719971]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8442857265472412, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 11, 8, 6, 2, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, tf.math.square(sigma)))))), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0592733640964274, 1.703018151143948, 1.0179501615416466, 0.7717146485189736, 0.6619681006157482, 0.6463358285026842, 0.5772489493061066, 0.5492880650719851, 0.5250972765878585, 0.5013855179507798, 0.4779234742129468, 0.4551187517770199, 0.46050918610057245, 0.43883878266601956, 0.4134635212808442, 0.41539334394692146, 0.41614712395483494, 0.4015777371484275, 0.3907966573185468, 0.37110820318556353, 0.36267130492369987, 0.3582836047942691, 0.33889037055377835, 0.337000783243042, 0.33175039131564865, 0.3103122442208891, 0.3296210723168279, 0.31518973029481734, 0.29269122226347527, 0.3027940709608862, 0.30103786510325947, 0.2818505918352973, 0.26534784253499194, 0.2728821580215704, 0.27514414676837695, 0.2722443696482936, 0.25017754514503, 0.24685432000119908, 0.25188451977831705, 0.2542715260987552, 0.23871014311195224, 0.2400609292960863, 0.23622092703440248, 0.22508887226838856, 0.2105043879325726, 0.21635646022006963, 0.2278123373219114, 0.2080516149091242, 0.21363632362264573], "accuracy": [0.3319244384765625, 0.42306166887283325, 0.6468101739883423, 0.7067758440971375, 0.7531369924545288, 0.7602694630622864, 0.7886672616004944, 0.7980451583862305, 0.8057059645652771, 0.8183859586715698, 0.8210275769233704, 0.8337075710296631, 0.8314621448516846, 0.8391229510307312, 0.8445383906364441, 0.8492933511734009, 0.844010055065155, 0.8515387773513794, 0.8543124794960022, 0.8650112152099609, 0.8668603897094727, 0.8660678863525391, 0.8706908226013184, 0.8775591254234314, 0.8741249442100525, 0.8853520154953003, 0.8771628737449646, 0.8838990926742554, 0.8907673954963684, 0.8878615498542786, 0.8885219693183899, 0.8938053250312805, 0.9009377956390381, 0.8952582478523254, 0.8948619961738586, 0.8988244533538818, 0.9046360850334167, 0.9049002528190613, 0.9015982151031494, 0.9035794734954834, 0.9101836085319519, 0.9096552729606628, 0.9088627696037292, 0.9120327830314636, 0.9212785363197327, 0.91559898853302, 0.9128252267837524, 0.9192973375320435, 0.9122969508171082], "val_loss": [1.8457481520516532, 0.8589829206466675, 0.6039385114397321, 0.5382843017578125, 0.49095048223223003, 0.45929292270115446, 0.42896088532039095, 0.41677982466561453, 0.40063471453530447, 0.4048214384487697, 0.37615519762039185, 0.37642352070127216, 0.3740655950137547, 0.3576301506587437, 0.36580666473933626, 0.3528406960623605, 0.3505986843790327, 0.3386016828673227, 0.32931443623134066, 0.3190358110836574, 0.32650357484817505, 0.3282000592776707, 0.31057436977113995, 0.3067470278058733, 0.3129262328147888, 0.3291694862501962, 0.31186479330062866, 0.29944974184036255, 0.3133986251694815, 0.3041506324495588, 0.30026598487581524, 0.29711845091411043, 0.3247999889510019, 0.29188921621867586, 0.3010455455098833, 0.30323948178972515, 0.29637427840914043, 0.2998350347791399, 0.30597189494541716, 0.30317527055740356, 0.29954435995646883, 0.2892095787184579, 0.3125081743512835, 0.29688240800585064, 0.30370089837483, 0.32172848497118267, 0.29453666721071514, 0.32019892760685514, 0.3154842598097665], "val_accuracy": [0.19033333659172058, 0.6430000066757202, 0.7250000238418579, 0.7549999952316284, 0.7836666703224182, 0.7853333353996277, 0.8063333630561829, 0.8103333115577698, 0.8176666498184204, 0.8169999718666077, 0.8386666774749756, 0.8323333263397217, 0.8320000171661377, 0.8330000042915344, 0.8316666483879089, 0.8410000205039978, 0.8453333377838135, 0.8526666760444641, 0.8523333072662354, 0.8560000061988831, 0.856333315372467, 0.8536666631698608, 0.8659999966621399, 0.8629999756813049, 0.8556666374206543, 0.8506666421890259, 0.8653333187103271, 0.8669999837875366, 0.8643333315849304, 0.8619999885559082, 0.871666669845581, 0.8656666874885559, 0.8656666874885559, 0.875, 0.875, 0.8703333139419556, 0.875333309173584, 0.8740000128746033, 0.8756666779518127, 0.8723333477973938, 0.8803333044052124, 0.878000020980835, 0.874666690826416, 0.8833333253860474, 0.8736666440963745, 0.8713333606719971, 0.878000020980835, 0.8686666488647461, 0.8726666569709778]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [35, 84, 6], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [2, 3, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8411428332328796, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1671273636071593, 1.3245401561157877, 0.8894516387793209, 0.7496724964337594, 0.6994516486504988, 0.6546408544599482, 0.6132247149511304, 0.5671361337374419, 0.5330966164674962, 0.5059790768643506, 0.48344048966332953, 0.46393553364498896, 0.44896743543128204, 0.4398207199682161, 0.42345003972452205, 0.41398146082507525, 0.39663939535609954, 0.3941284481757321, 0.3733239031156072, 0.36476607652010307, 0.3611662111632214, 0.3548197669517473, 0.3373014375187576, 0.3350425201313544, 0.32615377849922234, 0.3075345655544764, 0.3052113370817603, 0.29902533583590035, 0.2887473505847978, 0.27344210194543117, 0.2766126463985116, 0.26596120259686545, 0.25027989358272784, 0.2538217943318689, 0.2508548218139395, 0.24888038389623882, 0.25089211341546214, 0.23780927774125496, 0.23456915162416134, 0.22792401488635675], "accuracy": [0.2724871337413788, 0.5499933958053589, 0.6765288710594177, 0.7173424959182739, 0.7374191284179688, 0.7549861073493958, 0.7721568942070007, 0.7884030938148499, 0.802800178527832, 0.8152159452438354, 0.8195747137069702, 0.8277638554573059, 0.837141752243042, 0.8384625315666199, 0.8417646288871765, 0.845859169960022, 0.8500858545303345, 0.8573504090309143, 0.8593316674232483, 0.8659358024597168, 0.860652506351471, 0.8691058158874512, 0.8728041052818298, 0.8754457831382751, 0.8805969953536987, 0.8845595121383667, 0.8868049383163452, 0.8902390599250793, 0.8903711438179016, 0.8967111110687256, 0.893541157245636, 0.8994848728179932, 0.9051644206047058, 0.9021265506744385, 0.901862382888794, 0.902390718460083, 0.9052965044975281, 0.9120327830314636, 0.91124027967453, 0.9105798602104187], "val_loss": [1.3223250252859933, 0.6941981315612793, 0.5929431234087262, 0.5517575911113194, 0.5191206761768886, 0.5065640892301287, 0.46598710332598003, 0.43452983243124826, 0.4207551734788077, 0.4043328421456473, 0.38712391683033537, 0.3795029691287449, 0.3668526921953474, 0.353131319795336, 0.3540482521057129, 0.3369368144444057, 0.33305822951453073, 0.33711057901382446, 0.3212854862213135, 0.33571938957486835, 0.31524378061294556, 0.31503898756844656, 0.3161552463259016, 0.3089516418320792, 0.3025556802749634, 0.3022157464708601, 0.2949847493852888, 0.29770924363817486, 0.2983070271355765, 0.2952504924365452, 0.28595525877816336, 0.28903537137167795, 0.29248011112213135, 0.2871265155928476, 0.2865400399480547, 0.29982885292598177, 0.2871320843696594, 0.29790849345070974, 0.2890309691429138, 0.3035500305039542], "val_accuracy": [0.5276666879653931, 0.7080000042915344, 0.7306666374206543, 0.7536666393280029, 0.7633333206176758, 0.7613333463668823, 0.7926666736602783, 0.8023333549499512, 0.812333345413208, 0.8199999928474426, 0.8273333311080933, 0.8376666903495789, 0.8356666564941406, 0.8483333587646484, 0.8493333458900452, 0.8533333539962769, 0.8513333201408386, 0.8489999771118164, 0.8573333621025085, 0.8516666889190674, 0.8613333106040955, 0.8600000143051147, 0.8619999885559082, 0.8663333058357239, 0.8686666488647461, 0.862666666507721, 0.8683333396911621, 0.8663333058357239, 0.8730000257492065, 0.8683333396911621, 0.8736666440963745, 0.875333309173584, 0.8773333430290222, 0.8756666779518127, 0.8823333382606506, 0.8713333606719971, 0.8813333511352539, 0.8700000047683716, 0.8733333349227905, 0.878333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [4, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7854285836219788, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 10, 6, 5, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.027052296812445, 1.772871763840674, 1.384719121001101, 1.0540259792237565, 0.9560174263384931, 0.8650472852075577, 0.8263129091549386, 0.7957183940771816, 0.7389612125052972, 0.719218438280383, 0.6854628064865135, 0.6794145791096977, 0.6317303611491855, 0.6324255124626064, 0.6275432898840491, 0.6437707991647903, 0.58781866838494, 0.6007075402651953, 0.5775838779924474, 0.5835826649736372], "accuracy": [0.3217540681362152, 0.4213446080684662, 0.521067202091217, 0.6015057563781738, 0.6415268778800964, 0.6740192770957947, 0.6955488324165344, 0.6960771083831787, 0.7172104120254517, 0.7228899598121643, 0.7453441023826599, 0.7387399077415466, 0.7647602558135986, 0.7577598690986633, 0.7676661014556885, 0.7573636174201965, 0.7837802171707153, 0.7774402499198914, 0.785101056098938, 0.7808743715286255], "val_loss": [1.2094151973724365, 1.3632688862936837, 1.0152128423963274, 0.6950265509741647, 0.7391291516167777, 0.6598671504429409, 0.6116004160472325, 0.6423488514763969, 0.5699258702141898, 0.5636288268225533, 0.5633955683026995, 0.5161445822034564, 0.4896559544972011, 0.5114321368081229, 0.4746149608067104, 0.4899522066116333, 0.5310800245829991, 0.49721159253801617, 0.485957179750715, 0.4588205814361572], "val_accuracy": [0.5839999914169312, 0.4336666762828827, 0.559333324432373, 0.6886666417121887, 0.6626666784286499, 0.703000009059906, 0.7076666951179504, 0.6986666917800903, 0.7300000190734863, 0.7536666393280029, 0.7266666889190674, 0.7646666765213013, 0.7786666750907898, 0.7606666684150696, 0.781333327293396, 0.7733333110809326, 0.7506666779518127, 0.7673333287239075, 0.7693333625793457, 0.7789999842643738]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 4, 4, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.6808571219444275, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.136261069338477, 1.7039522566673795, 1.0017296928125619, 0.8990790523857315, 1.3174429449501637, 2.629908848306396, 3.6434584815252444, 2.6082957997660294], "accuracy": [0.3106590807437897, 0.4224012792110443, 0.6490556001663208, 0.6750759482383728, 0.5785233378410339, 0.4892352521419525, 0.36626601219177246, 0.11610091477632523], "val_loss": [1.8790997777666365, 0.7525804724012103, 0.6268970455442157, 0.9146521091461182, 0.7651620592389788, 1.2819697516305106, 1.962428024836949, 2.1840165002005443], "val_accuracy": [0.16333332657814026, 0.6696666479110718, 0.7250000238418579, 0.6793333292007446, 0.6776666641235352, 0.5410000085830688, 0.1666666716337204, 0.11133333295583725]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [6, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.6511428356170654, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.136049673116722, 1.704354971753545, 0.9777848040108132, 0.9108457965637321, 0.9345622145976876, 19.15773939264449, NaN, NaN, NaN], "accuracy": [0.311319500207901, 0.42425042390823364, 0.6583014130592346, 0.6717738509178162, 0.6765288710594177, 0.5116893649101257, 0.14397041499614716, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8788233484540666, 0.7394967249461583, 0.6098434754780361, 0.6186108929770333, 0.6535794905253819, 3.998021806989397, NaN, NaN, NaN], "val_accuracy": [0.16333332657814026, 0.6769999861717224, 0.7179999947547913, 0.7279999852180481, 0.6990000009536743, 0.21566666662693024, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.6402857303619385, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 12, 8, 7, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, tf.math.square(sigma)))), sigma)))), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1537809845888227, 1.803267586894118, 1.1045134696568701, 0.9676208849738004, 0.9243763452507737, 1.167217706708136, 1.6979435340461635, 2.1779936546221887, 2.2824465120945625, 2.394611724725788], "accuracy": [0.30260202288627625, 0.3823801279067993, 0.6305639743804932, 0.655527651309967, 0.6712455153465271, 0.6152423620223999, 0.4542332589626312, 0.3245278000831604, 0.16074495017528534, 0.1394795924425125], "val_loss": [1.921177795955113, 0.8771266937255859, 0.6927915811538696, 0.5928972278322492, 0.6290862219674247, 0.9859364373343331, 1.3832988398415702, 1.8797024999346053, 2.0220699991498674, 1.984034538269043], "val_accuracy": [0.10166666656732559, 0.6733333468437195, 0.6966666579246521, 0.7293333411216736, 0.7323333621025085, 0.5726666450500488, 0.4103333353996277, 0.14766666293144226, 0.10199999809265137, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [36, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 4, 4, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.4977142810821533, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.0788076659392654, 2.4330983500139918, 2.5009950651799397, 2.9670997240350956, 3.8021721198432528, 3.7954725418675292], "accuracy": [0.3031303584575653, 0.3147536516189575, 0.2292959988117218, 0.16853784024715424, 0.1088363528251648, 0.09734513610601425], "val_loss": [1.8989439691816057, 1.825718675340925, 1.9981263705662318, 2.6843407494681224, 2.6875782012939453, 3.0019119807652066], "val_accuracy": [0.4846666753292084, 0.12833333015441895, 0.27900001406669617, 0.1860000044107437, 0.10700000077486038, 0.10466666519641876]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 0, 0, 1, 1], [8, 7, 9, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 7, 5, 3, 2, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 4, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 10, 6, 5, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3022924968201517, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 0], [6, 0, 5, 2, 9, 3, 9], [0, 0, 2], [93, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 10, 6, 5, 1, 0, 4, 2, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [54908586586282.73, 1036343872547121.4, 4833701233101998.0, 1.3345269646672234e+16, 2.8727602798318076e+16, 5.277228984285559e+16], "accuracy": [0.10117553919553757, 0.09893012791872025, 0.10130762308835983, 0.09787346422672272, 0.10487385839223862, 0.1010434553027153], "val_loss": [204762096074752.0, 1637767283249737.2, 5527772620240603.0, 1.3101928732950528e+16, 2.5586065688643876e+16, 4.422039793693023e+16], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [63, 84, 6], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 4, 7, 2, 8, 1, 0, 9], [2, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 4, 2, 2, 7, 5, 3, 2, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 7, 3, 0, 1, 9], [5, 5, 3, 3, 0], [45, 84, 6], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.306972223517917, 2.619358174852203, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08836349099874496, 0.08519349992275238, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9815391131809779, 111873.84598214286, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.05066666752099991, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 4, 4, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 9, 6, 5, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.9958481834612156, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09272222965955734, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [17891.907366071428, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 4, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [88648.56673544137, 2.3042252766630984, 2.3037916674290853, 2.3034664191401095, 2.30324919600733, 2.303090378246476], "accuracy": [0.09919429570436478, 0.0952318087220192, 0.09972262382507324, 0.09800554811954498, 0.09998679161071777, 0.09734513610601425], "val_loss": [1.975006444113595, 1.9745781081063407, 1.974301815032959, 1.9740941865103585, 1.9739583560398646, 1.9738751138959612], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [5, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [1, 1, 0, 1, 1], [7, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 10, 6, 5, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.0303665449464674, 63.4364847100847, 23710366.429129533, NaN, NaN, NaN], "accuracy": [0.09325055778026581, 0.09866596013307571, 0.09972262382507324, 0.0956280529499054, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.983440399169922, 376.39304896763394, 11731927264694.857, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 1, 0, 1, 5, 5, 3, 2, 2, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3035291795008814, 2.303285651407883, 2.301584169046203, 2.3009331067004273, 2.302845467854768, 2.301522884732933], "accuracy": [0.09074098616838455, 0.09285431355237961, 0.09628847241401672, 0.09377889335155487, 0.09206181764602661, 0.1010434553027153], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 2, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3035291795008814, 2.303285651407883, 2.301584169046203, 2.3009331067004273, 2.302845467854768, 2.301522884732933], "accuracy": [0.09074098616838455, 0.09285431355237961, 0.09628847241401672, 0.09377889335155487, 0.09206181764602661, 0.1010434553027153], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 7, 7, 0, 1, 9], [0, 5, 2, 3, 0], [70, 99, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 6, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 1, 0, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3035291795008814, 2.303285651407883, 2.301584169046203, 2.3009331067004273, 2.302845467854768, 2.301522884732933], "accuracy": [0.09074098616838455, 0.09285431355237961, 0.09628847241401672, 0.09377889335155487, 0.09206181764602661, 0.1010434553027153], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [5, 5, 3, 3, 0], [45, 84, 6], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.027714285999536514, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3050776716740438, 2.3231542207435485, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08849557489156723, 0.08268392831087112, 0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9759667260306222, 2.003586837223598, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02800000086426735, 0.09866666793823242, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]