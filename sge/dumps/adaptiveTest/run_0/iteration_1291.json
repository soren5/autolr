[{"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 3, 1, 1, 8, 9], [4, 0, 0, 3, 0], [40, 74, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [8, 6, 7, 1, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8414285778999329, "mapping_values": [1, 4, 4, 2, 2, 1, 10, 10, 6, 4, 3, 11, 7, 6, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.multiply(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, tf.math.add(sigma, sigma)))))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9481869548019906, 1.2326095853310377, 0.8208122775066861, 0.6942441478822335, 0.6294651601639217, 0.587906704775929, 0.5515039770508077, 0.5116596004242091, 0.49073294351885366, 0.46495298106184474, 0.4634615300731762, 0.43459567739396376, 0.42393062922775376, 0.4098005627108886, 0.39971133195067504, 0.37271681168941917, 0.3526942687870064, 0.36223682455729345, 0.33247945359779496, 0.33485318266279457, 0.31643805489201887, 0.3052628149508863, 0.3074703400735889, 0.30216667774079137, 0.2936297948444524, 0.2818272156942758, 0.27745523000153977, 0.27820700279095895, 0.25996473918123614, 0.25640923712216096, 0.2633644831950528, 0.25674642520125013, 0.2504144029421435, 0.22652845550143974, 0.23212406859776094, 0.2227117160819604, 0.2272174871553598, 0.217244984888366, 0.207806356409679], "accuracy": [0.34341567754745483, 0.5881653428077698, 0.6885483860969543, 0.7378153204917908, 0.7644960880279541, 0.7759873270988464, 0.7959318161010742, 0.8062343001365662, 0.8165367841720581, 0.8297450542449951, 0.8304054737091064, 0.8401796221733093, 0.8437458872795105, 0.8477083444595337, 0.850350022315979, 0.8654074668884277, 0.8665962219238281, 0.8639545440673828, 0.8787478804588318, 0.8772949576377869, 0.8804649114608765, 0.8854840993881226, 0.887597382068634, 0.8848236799240112, 0.8897107243537903, 0.8938053250312805, 0.8923524022102356, 0.8944657444953918, 0.900409460067749, 0.9015982151031494, 0.9012019634246826, 0.9066173434257507, 0.9082023501396179, 0.9128252267837524, 0.908730685710907, 0.9153348207473755, 0.91124027967453, 0.9202219247817993, 0.9202219247817993], "val_loss": [0.9915807587759835, 0.6736521891185215, 0.5772501059940883, 0.5176739522389003, 0.4717299257005964, 0.443263190133231, 0.42770943471363615, 0.4072581614766802, 0.38390431233814787, 0.38179960421153475, 0.3589784162385123, 0.3537814276559012, 0.3454724294798715, 0.3349793553352356, 0.32945587805339266, 0.31702966349465506, 0.3198720472199576, 0.3166652832712446, 0.31119926486696514, 0.31135445833206177, 0.30775852714266094, 0.3002433606556484, 0.2982808096068246, 0.29889524834496634, 0.29410416739327566, 0.3104773163795471, 0.30222476380211966, 0.2879261885370527, 0.2954266922814505, 0.2888283133506775, 0.29155103649411884, 0.2957170861107962, 0.28717791182654245, 0.29911946398871286, 0.2851105843271528, 0.3067973256111145, 0.30096069404057096, 0.2936281902449472, 0.28268819195883615], "val_accuracy": [0.5323333144187927, 0.7053333520889282, 0.7310000061988831, 0.7699999809265137, 0.7799999713897705, 0.7940000295639038, 0.8036666512489319, 0.8119999766349792, 0.8266666531562805, 0.8266666531562805, 0.8396666646003723, 0.8446666598320007, 0.8456666469573975, 0.8489999771118164, 0.8510000109672546, 0.8576666712760925, 0.8529999852180481, 0.8576666712760925, 0.8603333234786987, 0.862666666507721, 0.8686666488647461, 0.8676666617393494, 0.8673333525657654, 0.8693333268165588, 0.8733333349227905, 0.8700000047683716, 0.8733333349227905, 0.875333309173584, 0.8723333477973938, 0.8799999952316284, 0.8763333559036255, 0.8740000128746033, 0.8790000081062317, 0.8809999823570251, 0.8759999871253967, 0.878000020980835, 0.8756666779518127, 0.8776666522026062, 0.8799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 5, 1, 1, 8, 9], [4, 0, 0, 3, 0], [40, 24, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [8, 6, 7, 1, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8048571348190308, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 1, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.266132010507892, 1.927362705391821, 1.3453004347287654, 0.9759633572204569, 0.8532313354940242, 0.7837509505422187, 0.7438698003336486, 0.6908625392645514, 0.6589986523931934, 0.6418804428706851, 0.6151912428400284, 0.5869931108081472, 0.5643210013418811, 0.5447064569251192, 0.5252777992490261, 0.5034009135670083, 0.49472226146000914, 0.48613522474272314, 0.4642375062296435, 0.46420580044382864, 0.442051957453782, 0.4294015608994622, 0.4245709301324458, 0.41335284499727803, 0.4048989994170691, 0.385936772609982, 0.3814470861896847, 0.3736663127871332, 0.35595533563917214, 0.34843040199138703, 0.34552762383530405, 0.3368945576377501, 0.3293931445055445, 0.326621789296762, 0.31854985787206874, 0.3058946949222289, 0.3092175376901789, 0.2939794355175042, 0.29487605162457925, 0.2908202572356063, 0.2829054101205316, 0.27632153626635186, 0.2712539717104331, 0.25879858202544404, 0.2622214741379971, 0.25770706326072523, 0.2534555791903166, 0.2396948561534874, 0.24335977921254756, 0.23667448687633708, 0.2393526971977873, 0.22612657705711856, 0.22255870879775008, 0.22597384817722121, 0.212508350392264, 0.2119837468660991, 0.2086314310872906], "accuracy": [0.1814819723367691, 0.4105137884616852, 0.5433892607688904, 0.6530181169509888, 0.6960771083831787, 0.6997754573822021, 0.7194558382034302, 0.7359662055969238, 0.7520803213119507, 0.7597411274909973, 0.7689869403839111, 0.7817989587783813, 0.7902522683143616, 0.7972526550292969, 0.8105930685997009, 0.8133667707443237, 0.8138951063156128, 0.8206313848495483, 0.8296129703521729, 0.8294808864593506, 0.8358209133148193, 0.8412362933158875, 0.848368763923645, 0.8462554216384888, 0.8511425256729126, 0.86118084192276, 0.863558292388916, 0.8598600029945374, 0.8684453964233398, 0.8730682730674744, 0.8708229064941406, 0.876370370388031, 0.8791441321372986, 0.8774270415306091, 0.8772949576377869, 0.8873332738876343, 0.8821820020675659, 0.8928807377815247, 0.8874653577804565, 0.8874653577804565, 0.8898428082466125, 0.8947299122810364, 0.8977677822113037, 0.9043719172477722, 0.8972394466400146, 0.901862382888794, 0.9059569239616394, 0.909259021282196, 0.9056927561759949, 0.9099194407463074, 0.9122969508171082, 0.9128252267837524, 0.9173160791397095, 0.9105798602104187, 0.9149385690689087, 0.9203540086746216, 0.9171839952468872], "val_loss": [1.8398096902029855, 1.1281015872955322, 0.747191139629909, 0.6717686142240252, 0.5882862295423236, 0.5739289351872036, 0.5401420422962734, 0.5252970967973981, 0.5073670659746442, 0.4879741668701172, 0.46939984389713835, 0.4500567742756435, 0.4456568786076137, 0.42612992014203754, 0.4173561760357448, 0.4000516619001116, 0.39334332942962646, 0.38957817213875906, 0.38066959381103516, 0.3719559482165745, 0.3691043768610273, 0.35782502378736225, 0.34849133661815096, 0.3481055072375706, 0.34229810748781475, 0.3423143284661429, 0.33562702792031424, 0.32197325570242746, 0.31371378898620605, 0.30967364992414204, 0.3122022237096514, 0.3103669796671186, 0.30693873337336947, 0.3050628900527954, 0.30154683760234285, 0.30118900537490845, 0.30536010435649324, 0.3033761552401951, 0.30014159849711824, 0.2959582209587097, 0.2990895254271371, 0.29822312934058054, 0.2944354159491403, 0.30151150056294035, 0.29839296851839336, 0.2899260180337088, 0.2918077026094709, 0.31353771686553955, 0.29719518763678415, 0.29678808791296823, 0.2877982939992632, 0.2971629159791129, 0.29659794909613474, 0.2857550638062613, 0.28697545187813894, 0.2935944880758013, 0.30410310200282503], "val_accuracy": [0.4506666660308838, 0.5953333377838135, 0.6996666789054871, 0.7333333492279053, 0.7379999756813049, 0.7419999837875366, 0.7573333382606506, 0.7633333206176758, 0.762666642665863, 0.7743333578109741, 0.7860000133514404, 0.7983333468437195, 0.7950000166893005, 0.812333345413208, 0.8116666674613953, 0.8186666369438171, 0.8243333101272583, 0.8246666789054871, 0.8320000171661377, 0.8343333601951599, 0.8413333296775818, 0.8433333039283752, 0.8473333120346069, 0.8479999899864197, 0.8453333377838135, 0.8450000286102295, 0.8506666421890259, 0.8606666922569275, 0.8616666793823242, 0.862666666507721, 0.859333336353302, 0.8659999966621399, 0.8646666407585144, 0.8636666536331177, 0.8663333058357239, 0.8666666746139526, 0.8713333606719971, 0.8679999709129333, 0.8700000047683716, 0.8730000257492065, 0.8723333477973938, 0.8726666569709778, 0.8743333220481873, 0.8759999871253967, 0.8743333220481873, 0.8756666779518127, 0.8776666522026062, 0.8776666522026062, 0.874666690826416, 0.8766666650772095, 0.8806666731834412, 0.8833333253860474, 0.8776666522026062, 0.8803333044052124, 0.8820000290870667, 0.8833333253860474, 0.8813333511352539]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [2, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 2, 9, 1, 8, 9, 0, 3, 5, 3, 8], [4, 0, 3, 3, 0], [13, 24, 6], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 6, 7, 1, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7582857012748718, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 2, 10, 7, 5, 2, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.sqrt(sigma)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.298417304658367, 2.2856719677458663, 2.2729808837352508, 2.2585560275327103, 2.2439802437410568, 2.225380124889581, 2.2079131328324286, 2.1832034137223486, 2.157472331872501, 2.1288626672978794, 2.090676114606725, 2.049038100944865, 2.000186534983497, 1.9476190101925597, 1.8884569212997027, 1.8236099601563462, 1.7598384554832367, 1.6937348254683342, 1.6212107726784746, 1.5560408984791285, 1.5080176325459065, 1.4547792538486815, 1.4111265734343905, 1.3616859439719606, 1.3239913426370133, 1.2885445434309315, 1.2620409938243906, 1.2257245768645435, 1.2113172118028614, 1.1695351494837116, 1.1553242242788169, 1.1345764587521001, 1.111234120925215, 1.1033541080485938, 1.0835735661211015, 1.0590239520936422, 1.0522690649911823, 1.02724866464925, 1.020248590569376, 1.0036362246861783, 1.0117887802143548, 0.9953051539082112, 0.9797834570712386, 0.9761716007257355, 0.9512712240707227, 0.9589166086048514, 0.9387020233237685, 0.9237766370812994, 0.9248068387545236, 0.9189106972777156, 0.9144620552684621, 0.9101835622007758, 0.8973787276263975, 0.8916081131614667, 0.8821940894423538, 0.88540640529656, 0.8797287582138731, 0.8725729753800734, 0.866473520397274, 0.8636249108888281, 0.862159983160127, 0.8493025286039263, 0.850166424146465, 0.8342576428505849, 0.8307979600682408, 0.8254332023919644, 0.8255419898908593, 0.819516005383475, 0.8123030624511204, 0.817669661927453, 0.8126050316426165, 0.811844826421686, 0.8074171892829213, 0.7991201746512586, 0.7972705287704095, 0.7970207690436842, 0.7833098698805477, 0.7834483950507481, 0.789276388964995, 0.7860533657831019, 0.782076857557953, 0.777210627296865, 0.7731783871385541, 0.7733576723361264, 0.7643917255696997, 0.7692794220684668, 0.7543767785604021, 0.7689752888764531, 0.7614465995770813, 0.7565100780803734, 0.7695856101996926], "accuracy": [0.1002509593963623, 0.13129045069217682, 0.17276449501514435, 0.20961563289165497, 0.23576806485652924, 0.27420419454574585, 0.28741249442100525, 0.3261128067970276, 0.342491090297699, 0.3568881154060364, 0.3835688829421997, 0.3967771828174591, 0.41104212403297424, 0.4233258366584778, 0.43204331398010254, 0.4511953592300415, 0.4640074074268341, 0.46810197830200195, 0.4950468838214874, 0.5044247508049011, 0.5085193514823914, 0.5239730477333069, 0.5320301055908203, 0.537709653377533, 0.5531634092330933, 0.5643904209136963, 0.5700700283050537, 0.5735041499137878, 0.5824857950210571, 0.5918636918067932, 0.5951657891273499, 0.6071853041648865, 0.6159027814865112, 0.6139215230941772, 0.615770697593689, 0.6236956715583801, 0.6260731816291809, 0.6408664584159851, 0.6454893946647644, 0.6465460062026978, 0.6439043879508972, 0.6523576974868774, 0.6543388962745667, 0.655527651309967, 0.6676793098449707, 0.6584334969520569, 0.6682076454162598, 0.6699247360229492, 0.6757363677024841, 0.6753401160240173, 0.674679696559906, 0.6753401160240173, 0.6773213744163513, 0.681547999382019, 0.6837934255599976, 0.6876237988471985, 0.687491774559021, 0.6886804699897766, 0.6934354901313782, 0.6888125538825989, 0.6919825673103333, 0.6963412761688232, 0.6885483860969543, 0.7008321285247803, 0.6971337795257568, 0.7005679607391357, 0.7047945857048035, 0.707568347454071, 0.7098137736320496, 0.7057191729545593, 0.7045304179191589, 0.7062475085258484, 0.7029454708099365, 0.7059833407402039, 0.7123233675956726, 0.713908314704895, 0.7190595865249634, 0.7143045663833618, 0.7132478952407837, 0.7104741930961609, 0.7165499925613403, 0.7160216569900513, 0.7199841737747192, 0.7148329019546509, 0.7230220437049866, 0.718399167060852, 0.7253995537757874, 0.7195879220962524, 0.7223616242408752, 0.7211728692054749, 0.7214370369911194], "val_loss": [1.9587347166878837, 1.9465325900486536, 1.9338836669921875, 1.9202608380998885, 1.9052327019827706, 1.8878846168518066, 1.8680477823529924, 1.8444151878356934, 1.8167004585266113, 1.7844008718218123, 1.746547085898263, 1.702606541769845, 1.6525017874581474, 1.5967940602983748, 1.5358491284506661, 1.4716935498373849, 1.405543667929513, 1.3400451455797469, 1.2752797603607178, 1.2134732859475272, 1.1573258808680944, 1.106048924582345, 1.060241937637329, 1.0189829213278634, 0.9818916320800781, 0.9498503889356341, 0.9212455068315778, 0.8944510391780308, 0.8717750481196812, 0.849788989339556, 0.8313668966293335, 0.8142437083380563, 0.7988172599247524, 0.7846948419298444, 0.7707318919045585, 0.758760929107666, 0.7471192564283099, 0.7370384420667376, 0.7268209968294416, 0.7181431565965924, 0.7093794175556728, 0.7024019275392804, 0.6938741377421788, 0.6873825447899955, 0.6790789876665387, 0.6746031727109637, 0.6668501581464495, 0.6612613030842373, 0.6559130804879325, 0.6511503458023071, 0.6471198286328997, 0.6415349585669381, 0.637165869985308, 0.6326450109481812, 0.6277780362537929, 0.6244825124740601, 0.621737003326416, 0.6162116697856358, 0.6126116684504918, 0.609533599444798, 0.6064485481807164, 0.6030462469373431, 0.6004007714135307, 0.5971583638872419, 0.5934816428593227, 0.5906667539051601, 0.5897382327488491, 0.5849378108978271, 0.5821126188550677, 0.5799862997872489, 0.5760197809764317, 0.5740884712764195, 0.571946518761771, 0.5711039475032261, 0.5679572820663452, 0.5650031055722918, 0.5636471850531442, 0.5615072420665196, 0.5602950368608747, 0.5577518599373954, 0.5553799867630005, 0.5536867891039167, 0.5516624110085624, 0.5499839782714844, 0.5485936914171491, 0.5455032416752407, 0.544404217175075, 0.5438913958413261, 0.5408840179443359, 0.5399517672402518, 0.5389548369816372], "val_accuracy": [0.1263333261013031, 0.24799999594688416, 0.3173333406448364, 0.3630000054836273, 0.390666663646698, 0.4113333225250244, 0.4313333332538605, 0.4476666748523712, 0.46566668152809143, 0.4886666536331177, 0.5049999952316284, 0.5189999938011169, 0.5350000262260437, 0.54666668176651, 0.5529999732971191, 0.5636666417121887, 0.5793333053588867, 0.5883333086967468, 0.5929999947547913, 0.6050000190734863, 0.6233333349227905, 0.6393333077430725, 0.656333327293396, 0.6650000214576721, 0.6696666479110718, 0.6756666898727417, 0.6776666641235352, 0.6833333373069763, 0.6886666417121887, 0.6909999847412109, 0.6949999928474426, 0.6976666450500488, 0.7009999752044678, 0.7049999833106995, 0.7053333520889282, 0.7073333263397217, 0.7106666564941406, 0.7123333215713501, 0.7153333425521851, 0.7183333039283752, 0.7210000157356262, 0.7200000286102295, 0.7236666679382324, 0.7269999980926514, 0.7296666502952576, 0.7279999852180481, 0.7353333234786987, 0.737333357334137, 0.734333336353302, 0.7363333106040955, 0.7369999885559082, 0.7400000095367432, 0.7403333187103271, 0.7386666536331177, 0.7436666488647461, 0.7476666569709778, 0.7456666827201843, 0.7473333477973938, 0.7490000128746033, 0.7490000128746033, 0.7509999871253967, 0.7526666522026062, 0.7506666779518127, 0.7553333044052124, 0.753000020980835, 0.7563333511352539, 0.753333330154419, 0.7573333382606506, 0.7570000290870667, 0.7563333511352539, 0.7639999985694885, 0.7606666684150696, 0.7603333592414856, 0.7583333253860474, 0.765333354473114, 0.765999972820282, 0.7646666765213013, 0.7643333077430725, 0.765666663646698, 0.7666666507720947, 0.7713333368301392, 0.7713333368301392, 0.7710000276565552, 0.7696666717529297, 0.7699999809265137, 0.7743333578109741, 0.7720000147819519, 0.7726666927337646, 0.7739999890327454, 0.7713333368301392, 0.7736666798591614]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [7, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 5, 1, 1, 8, 9], [4, 0, 0, 2, 0], [13, 24, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 6, 7, 1, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.2891428470611572, "mapping_values": [1, 19, 19, 10, 9, 4, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.square(tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3037297303067885, 2.3038113827970537, 2.3042546366624954, 2.303478923062481, 2.303486095427711, 2.3023399503995337, 2.303537499777094, 2.3012782252302513, 2.3028850964488385, 2.3040610259754812, 2.3020353014946866, 2.3027927236565824, 2.302661530330055, 2.301908627571667, 2.3029514025734903, 2.3020552124219438, 2.303055534714233, 2.3016159191202132, 2.3021417997768605, 2.3004862674868827, 2.301322507505577, 2.3020657081928992, 2.3010379627884308, 2.300566561139255, 2.300027746455765, 2.3014476597505933, 2.300945279809541, 2.2982497502469177, 2.302019993170236, 2.3006399023597424, 2.298431679903634, 2.299475014186129, 2.29873015335475, 2.3001120840600926, 2.3007576632194233, 2.298500293438949, 2.2971989728708184, 2.298022669256954, 2.2983637415674685, 2.298601834308895, 2.298679927179228, 2.2979492865312903, 2.2976920555264897, 2.296969107475578, 2.2950751159830713, 2.2964217425683833, 2.2951358814186595, 2.2951537594425524, 2.2947460461317855, 2.2934674909637276, 2.295141440466993, 2.2959216961125657, 2.294464486323296, 2.293572787737188, 2.2921130927389073, 2.292940410750811, 2.292237642214141, 2.293748259402663, 2.291676664900361, 2.2901467911996516, 2.289428215741072, 2.291235782813245, 2.2908824028324504, 2.289309148255624, 2.2896738674630894, 2.2875271050716828, 2.2868813732438444, 2.286562790283044, 2.286869282263334, 2.2872765273654845, 2.2865769776213423, 2.2863347455416343, 2.287424947859321, 2.2849106266828905, 2.286566760577483, 2.2836993332347535, 2.281877189500693, 2.283662949035417, 2.2828107346885034, 2.282046450096083, 2.2805400419354895, 2.2813942052306846, 2.279290886665962, 2.280508247994476, 2.279453225785148, 2.2808414559244024, 2.279551998184279, 2.277041270732565, 2.278629636531493, 2.277351056485522, 2.2777172015437896, 2.2779609527507274, 2.274846646732516, 2.2753313272667914, 2.275045338371064, 2.2738037127324886, 2.2745736275114767, 2.27233075176043, 2.2716698433036235, 2.270402738808987], "accuracy": [0.08942015469074249, 0.0866464152932167, 0.08968432247638702, 0.08809932321310043, 0.08228767663240433, 0.0944393053650856, 0.09681680053472519, 0.09272222965955734, 0.08691058307886124, 0.09008057415485382, 0.09126931428909302, 0.08466517180204391, 0.09179764986038208, 0.08968432247638702, 0.08889182657003403, 0.09232597798109055, 0.09536388516426086, 0.09338264167308807, 0.09126931428909302, 0.09285431355237961, 0.09232597798109055, 0.09430722147226334, 0.09219389408826828, 0.09536388516426086, 0.09602430462837219, 0.09694888442754745, 0.09615638852119446, 0.09245806187391281, 0.09087307006120682, 0.09140139818191528, 0.10130762308835983, 0.09549596905708313, 0.1014397069811821, 0.09549596905708313, 0.09668471664190292, 0.09959053993225098, 0.10130762308835983, 0.09893012791872025, 0.10170386731624603, 0.09826971590518951, 0.1018359512090683, 0.10368511080741882, 0.10077928751707077, 0.10249637067317963, 0.1026284471154213, 0.10302469879388809, 0.10645885765552521, 0.10685510188341141, 0.10698718577623367, 0.10870426893234253, 0.11147800832986832, 0.1088363528251648, 0.11227050423622131, 0.11227050423622131, 0.11636507511138916, 0.11042134463787079, 0.1162329912185669, 0.1162329912185669, 0.11742173880338669, 0.12732796370983124, 0.12402588874101639, 0.120459645986557, 0.11940298229455948, 0.12957337498664856, 0.12138422578573227, 0.12455421686172485, 0.12812046706676483, 0.12878087162971497, 0.12732796370983124, 0.13089419901371002, 0.13578127324581146, 0.13498876988887787, 0.13115836679935455, 0.13670584559440613, 0.1310262829065323, 0.1426495909690857, 0.14753665030002594, 0.13802668452262878, 0.1438383311033249, 0.14238542318344116, 0.15215955674648285, 0.14898955821990967, 0.1562541276216507, 0.14898955821990967, 0.15136705338954926, 0.1550653874874115, 0.15176330506801605, 0.15638621151447296, 0.15968827903270721, 0.160084530711174, 0.15836745500564575, 0.1620657742023468, 0.16021661460399628, 0.1636507660150528, 0.16893409192562103, 0.16695284843444824, 0.17157575488090515, 0.1776515692472458, 0.17831197381019592, 0.18042530119419098], "val_loss": [1.9709958348955428, 1.9709862300327845, 1.970970290047782, 1.9709484917776925, 1.9709200859069824, 1.9708856173924036, 1.9708448818751745, 1.9707979474748885, 1.9707446779523576, 1.9706852095467704, 1.9706196784973145, 1.9705480166843958, 1.9704701559884208, 1.9703858920506068, 1.9702956335885184, 1.9701991081237793, 1.9700962475367956, 1.969987460545131, 1.9698724065508162, 1.9697509493146623, 1.9696235656738281, 1.9694898469107491, 1.9693499973842077, 1.9692042214529855, 1.9690519741603307, 1.9688937323434013, 1.9687294960021973, 1.9685591288975306, 1.9683827672685896, 1.9682000705174036, 1.9680115154811315, 1.9678167615618025, 1.9676159449986048, 1.9674091339111328, 1.96719605582101, 1.9669771194458008, 1.966752188546317, 1.9665211268833704, 1.9662843431745256, 1.966041428702218, 1.965792519705636, 1.9655378886631556, 1.9652772630964006, 1.9650108473641532, 1.964738368988037, 1.9644602366856165, 1.9641759055001395, 1.963885920388358, 1.9635897363935197, 1.9632878303527832, 1.9629799297877721, 1.9626661709376745, 1.9623465538024902, 1.9620214189801897, 1.9616902215140206, 1.9613536425999232, 1.9610114778791154, 1.9606636592320033, 1.9603097098214286, 1.9599500383649553, 1.9595847129821777, 1.9592138017926897, 1.9588373729160853, 1.9584554263523646, 1.9580679621015276, 1.957674775804792, 1.9572757993425642, 1.9568712370736259, 1.956461020878383, 1.956045423235212, 1.9556246485028947, 1.9551982879638672, 1.9547663416181291, 1.9543286732264928, 1.9538859639848982, 1.9534374645778112, 1.9529835837227958, 1.9525248663766044, 1.9520607675824846, 1.9515914235796248, 1.9511169024876185, 1.9506372043064661, 1.9501523290361678, 1.9496620041983468, 1.949166706630162, 1.9486664363316126, 1.9481611933026994, 1.9476505007062639, 1.947134562901088, 1.9466133117675781, 1.9460865429469518, 1.9455548013959612, 1.9450181552342005, 1.9444762638636999, 1.9439293316432409, 1.9433772904532296, 1.9428205490112305, 1.9422587667192732, 1.9416922160557337, 1.9411207607814245], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.039000000804662704, 0.039000000804662704, 0.03933333232998848, 0.03966666758060455, 0.03999999910593033, 0.0403333343565464, 0.04066666588187218, 0.04100000113248825, 0.0416666679084301, 0.041999999433755875, 0.041999999433755875, 0.0430000014603138, 0.04399999976158142, 0.04500000178813934, 0.046666666865348816, 0.04766666516661644, 0.04800000041723251, 0.04833333194255829, 0.04933333396911621, 0.05066666752099991, 0.05133333429694176, 0.052666667848825455, 0.05366666615009308, 0.054666668176651, 0.054999999701976776, 0.0560000017285347, 0.0573333315551281, 0.057999998331069946, 0.05966666713356972, 0.061000000685453415, 0.06199999898672104, 0.06266666948795319, 0.06533333659172058, 0.06733333319425583, 0.07000000029802322, 0.0716666653752327, 0.07266666740179062, 0.07500000298023224, 0.07766667008399963, 0.07866666465997696, 0.08033332973718643, 0.08133333176374435, 0.0860000029206276, 0.08866667002439499, 0.09166666865348816, 0.09266666322946548, 0.09566666930913925, 0.09866666793823242, 0.10133333504199982, 0.10433333367109299, 0.10733333230018616, 0.11299999803304672, 0.11599999666213989, 0.11800000071525574, 0.12033333629369736, 0.1236666664481163, 0.125, 0.12800000607967377, 0.1316666603088379, 0.13733333349227905, 0.14233332872390747, 0.14900000393390656, 0.15299999713897705, 0.15600000321865082, 0.16033333539962769, 0.16466666758060455, 0.1706666648387909, 0.17633333802223206, 0.18333333730697632, 0.18666666746139526, 0.1913333386182785, 0.19433332979679108, 0.1966666728258133, 0.20133332908153534, 0.20633333921432495, 0.21299999952316284, 0.21833333373069763, 0.22366666793823242, 0.2303333282470703, 0.23666666448116302, 0.24066667258739471, 0.24199999868869781, 0.24533332884311676, 0.25033333897590637, 0.2549999952316284, 0.25833332538604736, 0.2626666724681854, 0.2680000066757202, 0.27300000190734863, 0.27799999713897705, 0.2826666533946991, 0.28466665744781494, 0.2879999876022339, 0.2919999957084656]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 81, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 5, 1, 1, 8, 9], [4, 0, 0, 3, 0], [13, 24, 6], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [8, 9, 7, 3, 1, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.2891428470611572, "mapping_values": [1, 4, 4, 2, 2, 2, 4, 4, 2, 2, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303729712325411, 2.3038113827970537, 2.3042546681535243, 2.303478923062481, 2.3034861134090883, 2.3023399818905625, 2.303537499777094, 2.3012782882123086, 2.3028850964488385, 2.304060927030669, 2.3020353014946866, 2.3027927236565824, 2.3026614808576484, 2.301908627571667, 2.3029514025734903, 2.302055180930915, 2.303055566205262, 2.3016159191202132, 2.3021417367948027, 2.3004862674868827, 2.3013225704876343, 2.3020656767018703, 2.3010378998063734, 2.300566561139255, 2.300027764437142, 2.3014475967685355, 2.300945248318512, 2.2982497502469177, 2.302019898697149, 2.3006399338507713, 2.298431679903634, 2.2994749826951004, 2.298730027390635, 2.300112021078035, 2.3007575192739305, 2.298500198965862, 2.2971989413797895, 2.298022574783867, 2.2983637865681485, 2.298601784836489, 2.298679927179228, 2.297949331531971, 2.2976918980713457, 2.296969058003172, 2.2950751474741002, 2.2964216751145994, 2.2951359938731235, 2.295153795405307, 2.294746059641437, 2.2934674909637276, 2.2951414224856155, 2.295921664621537, 2.2944645807963826, 2.293572868700623, 2.2921131872119935, 2.292940536714926, 2.292237876160994, 2.2937483673854007, 2.2916768898092887, 2.290147092600288, 2.289428652049276, 2.2912359987787205, 2.2908825917786233, 2.2893096071114045, 2.289674015880308, 2.287527662872276, 2.286881895081683, 2.28656337510294, 2.286870015500449, 2.2872770356936716, 2.286577796293618, 2.2863353258898043, 2.2874258250419284, 2.284911778246832, 2.2865678311779893, 2.283700336381476, 2.2818785300108075, 2.28366441103792, 2.282812556601975, 2.2820482359523266, 2.2805418457731106, 2.2813964544144354, 2.279292843487001, 2.280510434290642, 2.279455448044069, 2.280843835543994, 2.2795545802596946, 2.2770444826285567, 2.278632884484713, 2.2773542504001365, 2.2777204764218393, 2.2779641645522464, 2.274850771773871, 2.275335115039227, 2.275049508413099, 2.2738080851358746, 2.274578139483102, 2.272335826004375, 2.2716754122716307, 2.2704087983127503], "accuracy": [0.08942015469074249, 0.0866464152932167, 0.08968432247638702, 0.08809932321310043, 0.08228767663240433, 0.0944393053650856, 0.09681680053472519, 0.09272222965955734, 0.08691058307886124, 0.09008057415485382, 0.09126931428909302, 0.08466517180204391, 0.09179764986038208, 0.08968432247638702, 0.08889182657003403, 0.09232597798109055, 0.09536388516426086, 0.09338264167308807, 0.09126931428909302, 0.09285431355237961, 0.09232597798109055, 0.09430722147226334, 0.09219389408826828, 0.09536388516426086, 0.09602430462837219, 0.09694888442754745, 0.09615638852119446, 0.09245806187391281, 0.09087307006120682, 0.09140139818191528, 0.10130762308835983, 0.09549596905708313, 0.1014397069811821, 0.09549596905708313, 0.09668471664190292, 0.09959053993225098, 0.10130762308835983, 0.09893012791872025, 0.10170386731624603, 0.09813763201236725, 0.1018359512090683, 0.10368511080741882, 0.1006472036242485, 0.10249637067317963, 0.1026284471154213, 0.10302469879388809, 0.10645885765552521, 0.10685510188341141, 0.10698718577623367, 0.10870426893234253, 0.11147800832986832, 0.1088363528251648, 0.11227050423622131, 0.11227050423622131, 0.11636507511138916, 0.11042134463787079, 0.1162329912185669, 0.1162329912185669, 0.11742173880338669, 0.12732796370983124, 0.12402588874101639, 0.120459645986557, 0.11940298229455948, 0.12957337498664856, 0.12138422578573227, 0.12455421686172485, 0.12812046706676483, 0.12891295552253723, 0.1274600476026535, 0.13089419901371002, 0.13578127324581146, 0.1348566859960556, 0.13115836679935455, 0.13670584559440613, 0.13115836679935455, 0.1426495909690857, 0.14753665030002594, 0.13802668452262878, 0.1438383311033249, 0.14238542318344116, 0.15215955674648285, 0.14898955821990967, 0.1562541276216507, 0.14898955821990967, 0.15136705338954926, 0.1550653874874115, 0.15189538896083832, 0.15638621151447296, 0.15955619513988495, 0.160084530711174, 0.15836745500564575, 0.16219785809516907, 0.16021661460399628, 0.1636507660150528, 0.16893409192562103, 0.16695284843444824, 0.17170783877372742, 0.1776515692472458, 0.1784440577030182, 0.18042530119419098], "val_loss": [1.9709958348955428, 1.9709862300327845, 1.970970290047782, 1.9709484236580985, 1.9709200859069824, 1.9708856173924036, 1.9708448818751745, 1.9707979474748885, 1.9707446779523576, 1.9706852776663644, 1.9706196784973145, 1.9705480166843958, 1.9704700197492326, 1.9703858920506068, 1.9702955654689245, 1.9701991081237793, 1.9700963156563895, 1.969987392425537, 1.9698724065508162, 1.9697508811950684, 1.9696234975542342, 1.9694898469107491, 1.9693499973842077, 1.9692042895725794, 1.9690519741603307, 1.9688938004629952, 1.9687294960021973, 1.9685591288975306, 1.9683826991489954, 1.9682001386369978, 1.9680114473615373, 1.9678168296813965, 1.9676159449986048, 1.9674092020307268, 1.967195987701416, 1.9669771194458008, 1.9667521204267229, 1.9665211950029646, 1.9662843431745256, 1.966041428702218, 1.965792519705636, 1.9655379567827498, 1.9652772630964006, 1.9650108473641532, 1.9647385052272253, 1.9644603729248047, 1.9641760417393275, 1.963886056627546, 1.963589872632708, 1.9632878303527832, 1.962979997907366, 1.9626662390572684, 1.9623467581612724, 1.9620216914585658, 1.9616904258728027, 1.9613539831978934, 1.9610118184770857, 1.9606638635907854, 1.9603100504193987, 1.9599505152021135, 1.9595850535801478, 1.95921414239066, 1.9588377135140556, 1.958455971309117, 1.9580684389386858, 1.9576753207615443, 1.9572764805385046, 1.9568719863891602, 1.9564619064331055, 1.9560462406703405, 1.9556256021772112, 1.9551995822361536, 1.9547677721296037, 1.9543301718575614, 1.9538874626159668, 1.9534388950892858, 1.9529852867126465, 1.952526433127267, 1.9520627430507116, 1.9515934671674455, 1.9511189460754395, 1.9506396566118513, 1.9501548494611467, 1.949664728982108, 1.949169499533517, 1.948669501713344, 1.9481643268040247, 1.9476540429251534, 1.9471382413591658, 1.9466170583452498, 1.9460907663617815, 1.945559024810791, 1.9450225148882185, 1.944481032235282, 1.9439343043736048, 1.9433824675423759, 1.9428259985787528, 1.9422646931239538, 1.9416984830583846, 1.941127095903669], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.039000000804662704, 0.039000000804662704, 0.03933333232998848, 0.03966666758060455, 0.03999999910593033, 0.0403333343565464, 0.04066666588187218, 0.04100000113248825, 0.0416666679084301, 0.041999999433755875, 0.041999999433755875, 0.0430000014603138, 0.04399999976158142, 0.04500000178813934, 0.046666666865348816, 0.04766666516661644, 0.04800000041723251, 0.04833333194255829, 0.04933333396911621, 0.05066666752099991, 0.05133333429694176, 0.052666667848825455, 0.05366666615009308, 0.054666668176651, 0.054999999701976776, 0.0560000017285347, 0.0573333315551281, 0.057999998331069946, 0.05966666713356972, 0.061000000685453415, 0.06199999898672104, 0.06266666948795319, 0.06533333659172058, 0.06733333319425583, 0.07000000029802322, 0.0716666653752327, 0.07266666740179062, 0.07500000298023224, 0.07766667008399963, 0.07866666465997696, 0.08033332973718643, 0.08133333176374435, 0.0860000029206276, 0.08866667002439499, 0.09166666865348816, 0.09266666322946548, 0.09566666930913925, 0.09866666793823242, 0.10133333504199982, 0.10433333367109299, 0.10733333230018616, 0.11299999803304672, 0.11599999666213989, 0.11800000071525574, 0.12033333629369736, 0.1236666664481163, 0.125, 0.12800000607967377, 0.1316666603088379, 0.13733333349227905, 0.14233332872390747, 0.14900000393390656, 0.15299999713897705, 0.15600000321865082, 0.16033333539962769, 0.16466666758060455, 0.1706666648387909, 0.17633333802223206, 0.18333333730697632, 0.18666666746139526, 0.1913333386182785, 0.19433332979679108, 0.1966666728258133, 0.20133332908153534, 0.20633333921432495, 0.21299999952316284, 0.21799999475479126, 0.22366666793823242, 0.2303333282470703, 0.23666666448116302, 0.24066667258739471, 0.24166665971279144, 0.24500000476837158, 0.25033333897590637, 0.2549999952316284, 0.25833332538604736, 0.2626666724681854, 0.2680000066757202, 0.27266666293144226, 0.27799999713897705, 0.2826666533946991, 0.28466665744781494, 0.2879999876022339, 0.2919999957084656]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 3, 1, 3, 8, 3, 1, 1, 7, 5, 0, 7], [4, 0, 0, 3, 0, 2, 0, 4, 3, 1], [13, 24, 6, 99], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 6, 1, 1, 8, 2, 2, 1], [0, 5, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.23771429061889648, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 12, 10, 4, 9, 6, 5, 1, 1, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.negative(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.add(beta, grad)))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2356042750775145, 2.3549711258971002, 2.2673778746499993, 2.3406100722194396, 2.305461898660616, 2.303639019611033], "accuracy": [0.22018226981163025, 0.2347113937139511, 0.1434420794248581, 0.13802668452262878, 0.1014397069811821, 0.09602430462837219], "val_loss": [1.8595726149422782, 1.9836512293134416, 1.9786276817321777, 1.9781917844499861, 1.9743387358529227, 1.9738208225795202], "val_accuracy": [0.2083333283662796, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [2, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 8, 9], [4, 0, 0, 2, 0], [40, 74, 6], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [8, 6, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.19771428406238556, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3001330889856906, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1942940205335617, 0.11847840249538422, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [17.536778041294642, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.19200000166893005, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [2, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [2, 6, 1, 1, 4, 3, 0, 5, 2, 4, 5], [0, 3, 1, 3, 0, 5, 4, 3, 2], [40, 74, 6], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1], [8, 2, 6, 3, 8, 2, 2, 1], [4, 4, 0, 6], [16, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [148383.34817565724, 3168118.468157724, 14736940.631529363, 41010286.64264219, 89888967.17995158, 162809392.07978058], "accuracy": [0.0948355570435524, 0.09694888442754745, 0.10051512718200684, 0.10355303436517715, 0.09549596905708313, 0.10091137140989304], "val_loss": [1230572.1785714286, 9796047.42857143, 33008594.285714287, 78181163.42857143, 152626669.7142857, 263658020.57142857], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 4, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 3, 1, 1, 8, 9], [4, 0, 0, 0, 0], [40, 74, 82, 79], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [8, 4, 7, 1, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 10, 10, 6, 4, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [18945534757.0784, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05666358396410942, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8074678425166925e+30, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 4, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 2, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 3, 1, 1, 8, 6, 0, 8, 2, 1, 6, 8, 9, 2, 6, 6, 4], [4, 3, 0, 3, 0, 3, 2, 4, 0, 5, 3, 0], [40, 61, 6, 16, 54], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [5, 6, 4, 1, 3, 0, 2, 1], [4, 5, 0, 6], [16, 55], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 29, 29, 17, 12, 5, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.sqrt(beta)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), grad)), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 4, 1, 3, 5, 8, 1, 7, 2, 1, 2, 6, 1, 6], [2, 3, 0, 3, 0, 1, 5, 4, 2, 4, 3], [40, 74, 11, 42, 30], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [8, 6, 7, 1, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [4, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [3, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [8, 3, 1, 1, 8, 9], [4, 0, 0, 3, 0], [40, 74, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [8, 6, 7, 1, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 1, 1, 8, 8, 2, 1, 1, 5, 2, 6, 6, 7], [0, 3, 0, 3, 0, 4, 3, 0, 1, 1, 4, 0, 3], [40, 74, 11, 42, 64], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [8, 6, 7, 1, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [3, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 26, 26, 14, 12, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [3, 5, 1, 1, 8, 9], [4, 3, 0, 2, 0], [13, 24, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 9, 7, 3, 9, 2, 2, 1], [2, 5, 0, 6], [16, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 2, 2, 2, 0, 1, 3, 2, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [2.304873522923623, 2.321378704484711, 2.16233179277037e+16, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08809932321310043, 0.07726852595806122, 0.08928807079792023, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9745005198887415, 1.9951112610953194, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.028999999165534973, 0.09166666865348816, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [4, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 8, 1, 2, 8, 9], [0, 3, 3, 1, 0, 3, 0, 4, 3, 1, 0, 5, 1, 1, 1, 1], [71, 74, 6, 25, 86, 20], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [8, 6, 7, 1, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 11, 7, 6, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(sigma, sigma)))), sigma)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 5, 1, 1, 8, 9], [4, 0, 0, 2, 0], [9, 24, 6], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 6, 1, 1, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [8, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [0, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3020512440484575, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [6, 2, 1, 1, 8, 9], [4, 0, 0, 2, 0], [86, 74, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 6, 7, 5, 0, 2, 2, 1], [0, 5, 0, 6], [86, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [8, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 10, 10, 5, 5, 3, 4, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.multiply(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 3, 7, 3, 3, 8, 4, 6, 5, 8, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 2, 0, 0, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [98, 41, 27, 0, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 3, 1, 1, 8, 9], [3, 0, 1, 1, 0], [41, 74, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [8, 6, 7, 1, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [1, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 3, 10, 10, 6, 4, 2, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.multiply(tf.math.add(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(alpha)), tf.math.add(beta, alpha))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 5, 1, 1, 8, 9], [2, 0, 0, 3, 0], [13, 24, 6], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 6, 7, 1, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3037306073949226, 2.3038185035799787, 2.3042747848431637, 2.3035189452314295, 2.303551812670124, 2.30243972972431], "accuracy": [0.08942015469074249, 0.0866464152932167, 0.08968432247638702, 0.08809932321310043, 0.0820235088467598, 0.0940430611371994], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 3, 7, 3, 3, 8, 4, 6, 5, 2, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 0, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 5, 1, 1, 8, 9], [4, 0, 0, 3, 0], [13, 24, 6], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 2, 1, 9, 8, 6, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 1, 6, 5, 4, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3037304139770236, 2.3038179907800655, 2.3042736872233545, 2.303517240338621, 2.303549617430506, 2.3024371296675166], "accuracy": [0.08942015469074249, 0.0866464152932167, 0.08968432247638702, 0.08809932321310043, 0.0820235088467598, 0.0940430611371994], "val_loss": [1.970998764038086, 1.9709983553205217, 1.9709978103637695, 1.9709972654070174, 1.970996720450265, 1.970996379852295], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]