[{"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [5, 0, 0, 2], [36, 55, 6], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.842285692691803, "mapping_values": [1, 4, 4, 2, 2, 2, 9, 9, 5, 4, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0671226031681678, 1.1351276669897785, 0.8115067476090061, 0.7122640734603141, 0.654164588084515, 0.5958142883316905, 0.5555446655160448, 0.528085876855049, 0.504548861551058, 0.4772614643062347, 0.4617609029881565, 0.43931100157037495, 0.439430582914622, 0.41465632379913153, 0.3924356186355283, 0.38265449450693395, 0.3672199968010947, 0.36656719412329397, 0.35602959594501715, 0.33243792320538534, 0.33987646192418525, 0.3340653126950844, 0.3202826131399455, 0.309086636978291, 0.3044217435470614, 0.29127086260299545, 0.2872320973460606, 0.2872927410373315, 0.27040321619723845, 0.2680566470305902, 0.25646691125862003, 0.24981433032502462, 0.25565910122657826, 0.2486317081241843, 0.23772646270061543, 0.23600457566777366], "accuracy": [0.3059041202068329, 0.5967507362365723, 0.7045304179191589, 0.7354378700256348, 0.7508915662765503, 0.7720248103141785, 0.793950617313385, 0.8029322624206543, 0.8142913579940796, 0.8212917447090149, 0.8310658931732178, 0.8384625315666199, 0.8393871188163757, 0.8521991968154907, 0.8564258217811584, 0.8615770936012268, 0.8626337051391602, 0.8628978729248047, 0.8704266548156738, 0.8802007436752319, 0.8688416481018066, 0.8770307898521423, 0.8802007436752319, 0.8868049383163452, 0.8899748921394348, 0.8882578015327454, 0.8870691061019897, 0.8942015767097473, 0.9002773761749268, 0.8976356983184814, 0.9054285883903503, 0.9070135951042175, 0.9041078090667725, 0.9059569239616394, 0.9133535623550415, 0.9103156924247742], "val_loss": [0.9811192240033831, 0.6598910093307495, 0.5659886257989066, 0.5321366105760846, 0.48975774220057894, 0.4681260074887957, 0.4359715325491769, 0.4161130615643093, 0.3961758698735918, 0.3861622469765799, 0.37741295780454365, 0.35568502119609285, 0.35059802872794016, 0.359362746988024, 0.3382777827126639, 0.3243904284068516, 0.32774961846215384, 0.3213713424546378, 0.31206242527280537, 0.3104472415787833, 0.30919015407562256, 0.3182322382926941, 0.3101735881396702, 0.29819442544664654, 0.29713629824774607, 0.2988463980810983, 0.2953102333205087, 0.2860156638281686, 0.2908775380679539, 0.30104589462280273, 0.29057968514306204, 0.2945912480354309, 0.2945888468197414, 0.2909377728189741, 0.30086539472852436, 0.28969305753707886], "val_accuracy": [0.6206666827201843, 0.721666693687439, 0.7506666779518127, 0.7616666555404663, 0.781333327293396, 0.7900000214576721, 0.8056666851043701, 0.8206666707992554, 0.8233333230018616, 0.8286666870117188, 0.8296666741371155, 0.8476666808128357, 0.8453333377838135, 0.8410000205039978, 0.8500000238418579, 0.8543333411216736, 0.8560000061988831, 0.856333315372467, 0.859333336353302, 0.8636666536331177, 0.8683333396911621, 0.8603333234786987, 0.8633333444595337, 0.8700000047683716, 0.8740000128746033, 0.8673333525657654, 0.8759999871253967, 0.875, 0.8766666650772095, 0.8713333606719971, 0.8790000081062317, 0.8740000128746033, 0.8763333559036255, 0.878000020980835, 0.8763333559036255, 0.8790000081062317]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0], [6, 3, 7, 9, 1, 9], [4, 0, 4, 2], [26, 55, 83], [0, 1, 0], [1], [8], [5], [68], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7528571486473083, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2942804868242384, 2.2691871462685795, 2.242993000176888, 2.2116176083166335, 2.1683750877196464, 2.1099312308599543, 2.0362329174262688, 1.937244592199803, 1.8259720214841986, 1.7069982513066972, 1.5819497875738389, 1.4752536498953905, 1.38528699607834, 1.3114948110053914, 1.2554686251664127, 1.1999933127603668, 1.1604062226533165, 1.125345626464373, 1.0951276843290538, 1.0605325808283863, 1.0396963584345913, 1.0187935505985914, 0.9865398823293823, 0.974089363279155, 0.9554672595327557, 0.9482199990706847, 0.9310503885762063, 0.9067897470698711, 0.8952000358195715, 0.8908517554042172, 0.876838336948548, 0.8719870825296285, 0.8650300837448008, 0.8470859527509164, 0.847642773052075, 0.847017193002755, 0.834590723454409, 0.8177007259851465, 0.8188512284663438, 0.8019733566570874, 0.80237041215981, 0.7895530389363283, 0.7839856800181503, 0.782267890806605, 0.7791149361085394, 0.7729612674459317, 0.7754222535028937, 0.7686197273940018, 0.7653482375269663, 0.7581241382914543], "accuracy": [0.1158367469906807, 0.17659489810466766, 0.2386738806962967, 0.28463876247406006, 0.32782986760139465, 0.3789459764957428, 0.3949280083179474, 0.42543917894363403, 0.445779949426651, 0.47470611333847046, 0.5023114681243896, 0.5274072289466858, 0.5416721701622009, 0.5539559125900269, 0.5692775249481201, 0.5847312211990356, 0.6034870147705078, 0.6100911498069763, 0.6131290197372437, 0.6277902722358704, 0.6347906589508057, 0.6440364718437195, 0.655527651309967, 0.6593580842018127, 0.6617355942726135, 0.6643772125244141, 0.6682076454162598, 0.6802271604537964, 0.6845859289169312, 0.6864351034164429, 0.6823405027389526, 0.6857746839523315, 0.6917183995246887, 0.6903975605964661, 0.6914542317390442, 0.6977941989898682, 0.6992471218109131, 0.7037379741668701, 0.6988508701324463, 0.7125874757766724, 0.7161537408828735, 0.7141724824905396, 0.7174745798110962, 0.7137762308120728, 0.7187954187393188, 0.7226257920265198, 0.717870831489563, 0.718399167060852, 0.7218332886695862, 0.7246070504188538], "val_loss": [1.949117796761649, 1.9261067935398646, 1.898257119315011, 1.8629773684910365, 1.8153281893048967, 1.750868661063058, 1.6671069690159388, 1.5618210860661097, 1.4424866948808943, 1.3201559611729212, 1.204155717577253, 1.103766850062779, 1.0219575677599226, 0.9566293443952288, 0.9061672346932548, 0.8646651336124965, 0.8283168758664813, 0.798946636063712, 0.7744160209383283, 0.751448256628854, 0.7332671540124076, 0.7156733104160854, 0.7005959578922817, 0.686627949987139, 0.6761457409177508, 0.6654285192489624, 0.6555471931185041, 0.6440952845982143, 0.6368501697267804, 0.6283825465611049, 0.621192489351545, 0.6136647122246879, 0.6081181424004691, 0.6006988797869001, 0.5964926481246948, 0.5915001119886126, 0.5853466476712909, 0.5796060391834804, 0.5756452253886631, 0.5721436228070941, 0.5700862748282296, 0.566227946962629, 0.5623424564089093, 0.5600934539522443, 0.5546022823878697, 0.5506456068583897, 0.5495999540601458, 0.5462482145854405, 0.5438590560640607, 0.5407317195619855], "val_accuracy": [0.2303333282470703, 0.35499998927116394, 0.4013333320617676, 0.43966665863990784, 0.47600001096725464, 0.512333333492279, 0.5379999876022339, 0.5559999942779541, 0.5820000171661377, 0.5879999995231628, 0.6146666407585144, 0.6396666765213013, 0.6610000133514404, 0.6759999990463257, 0.6836666464805603, 0.6919999718666077, 0.6946666836738586, 0.6986666917800903, 0.7076666951179504, 0.7056666612625122, 0.7120000123977661, 0.7160000205039978, 0.7243333458900452, 0.7273333072662354, 0.7336666584014893, 0.7353333234786987, 0.7369999885559082, 0.7393333315849304, 0.7403333187103271, 0.7513333559036255, 0.7463333606719971, 0.7486666440963745, 0.7486666440963745, 0.7536666393280029, 0.7540000081062317, 0.7559999823570251, 0.7593333125114441, 0.7613333463668823, 0.7630000114440918, 0.7620000243186951, 0.7583333253860474, 0.7643333077430725, 0.7593333125114441, 0.762666642665863, 0.7726666927337646, 0.7726666927337646, 0.7689999938011169, 0.7666666507720947, 0.7710000276565552, 0.7710000276565552]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 7, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 9, 1, 9], [5, 0, 0, 2], [26, 57, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7408571243286133, "mapping_values": [1, 15, 15, 9, 6, 4, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2951241228259582, 2.2722968541242192, 2.2493104598998017, 2.2229826059229323, 2.187820560628901, 2.1423629238746895, 2.086976761327302, 2.012268431749421, 1.9272208047376065, 1.8294442973006528, 1.7173258747485776, 1.6113148991143023, 1.5124184884383867, 1.4268714566949399, 1.3587924681319505, 1.2931067396416374, 1.245828485350331, 1.2038649841464033, 1.1672844957477144, 1.128369637137753, 1.1024606555224001, 1.0771206454074362, 1.0430311288941947, 1.026626418122148, 1.004980762841569, 0.9950651368838511, 0.9757768553970134, 0.9504714274623721, 0.9363495359536034, 0.9301273983861036, 0.915139478219105, 0.9087666576926766, 0.8996298675681338, 0.8817142075031755, 0.8803550719962916, 0.8794228944638622, 0.8660549246293364, 0.8480676914077031, 0.848627090729648, 0.8294760141358825, 0.8299573872933661, 0.8165928109242317, 0.8107991896647472, 0.8088307752978957], "accuracy": [0.11398758739233017, 0.16893409192562103, 0.2242768406867981, 0.26997753977775574, 0.30880993604660034, 0.3607185184955597, 0.3769647479057312, 0.4072117209434509, 0.42570334672927856, 0.45185577869415283, 0.4772156774997711, 0.49993395805358887, 0.5135384798049927, 0.5329546928405762, 0.5482763051986694, 0.5670320987701416, 0.5781270861625671, 0.5869766473770142, 0.5967507362365723, 0.6056002974510193, 0.6161669492721558, 0.6252806782722473, 0.6363756656646729, 0.6439043879508972, 0.6472064256668091, 0.6482630968093872, 0.6581693291664124, 0.6654338836669922, 0.6713775992393494, 0.6745476126670837, 0.6717738509178162, 0.674679696559906, 0.6840575933456421, 0.6790384650230408, 0.6816800832748413, 0.6896050572395325, 0.6907938122749329, 0.6927750706672668, 0.6934354901313782, 0.7030775547027588, 0.7087571024894714, 0.705058753490448, 0.705058753490448, 0.7059833407402039], "val_loss": [1.9511184692382812, 1.93063143321446, 1.9067784718104772, 1.8777249881199427, 1.8402220181056432, 1.7911930084228516, 1.7287460735866003, 1.650357382638114, 1.5576815264565604, 1.4546079295022147, 1.3472216129302979, 1.2424877371106828, 1.1486076968056815, 1.0685094084058488, 1.0039959975651331, 0.9499843461172921, 0.904099702835083, 0.8664643083299909, 0.835168855530875, 0.8067296913691929, 0.783442463193621, 0.7622851133346558, 0.7433489220482963, 0.7264754942485264, 0.7127639395850045, 0.7002131428037371, 0.6884499788284302, 0.675715412412371, 0.6671262128012521, 0.6575688634599958, 0.6493719135011945, 0.640473757471357, 0.6334133659090314, 0.6257468291691372, 0.6204327685492379, 0.6146302393504551, 0.6076713970729283, 0.601803183555603, 0.5966603415352958, 0.5925195387431553, 0.589516452380589, 0.5852944680622646, 0.580532261303493, 0.5782360008784703], "val_accuracy": [0.20633333921432495, 0.33899998664855957, 0.3880000114440918, 0.42766666412353516, 0.4596666693687439, 0.4933333396911621, 0.5220000147819519, 0.5366666913032532, 0.5596666932106018, 0.5713333487510681, 0.5896666646003723, 0.5993333458900452, 0.6206666827201843, 0.6536666750907898, 0.6703333258628845, 0.6819999814033508, 0.6803333163261414, 0.6883333325386047, 0.6940000057220459, 0.6986666917800903, 0.7020000219345093, 0.7036666870117188, 0.7099999785423279, 0.7196666598320007, 0.7236666679382324, 0.7276666760444641, 0.7276666760444641, 0.7316666841506958, 0.7310000061988831, 0.7403333187103271, 0.737333357334137, 0.7396666407585144, 0.7416666746139526, 0.7480000257492065, 0.7483333349227905, 0.7509999871253967, 0.7543333172798157, 0.7563333511352539, 0.7606666684150696, 0.7603333592414856, 0.7540000081062317, 0.7570000290870667, 0.7546666860580444, 0.7553333044052124]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [5, 0, 0, 2], [36, 55, 6], [0, 1, 0], [1], [8], [0], [57], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.12371428310871124, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [4.13179570897034, 2.3810816608510077, 2.3517530294787914, 2.338993538702956, 2.3373003488738915, 2.355431264559386, 2.349202087731362, 2.393714814752305, 2.5704481606753653, 2.348713599837231], "accuracy": [0.18478403985500336, 0.10157178342342377, 0.09932637959718704, 0.10130762308835983, 0.10091137140989304, 0.09853387624025345, 0.1006472036242485, 0.09893012791872025, 0.09866596013307571, 0.09351472556591034], "val_loss": [2.054840700966971, 1.9930472373962402, 2.0053421429225375, 2.0194005284990584, 2.0147081102643694, 1.9990745271955217, 2.016594341823033, 2.034337180001395, 2.028773239680699, 2.0180022375924245], "val_accuracy": [0.1003333330154419, 0.10000000149011612, 0.09833333641290665, 0.10166666656732559, 0.10233332961797714, 0.10233332961797714, 0.10066666454076767, 0.09866666793823242, 0.1003333330154419, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 71, 83], [0, 1, 0], [1], [8], [4], [30], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.12371428310871124, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [4.131797881284489, 2.3810831004948807, 2.351752188258939, 2.338992472574176, 2.337299818092601, 2.3553988965369173, 2.3492240701699854, 2.3935381856340663, 2.571448297579968, 2.3487144455288096], "accuracy": [0.18478403985500336, 0.10157178342342377, 0.09932637959718704, 0.10130762308835983, 0.10091137140989304, 0.09853387624025345, 0.1006472036242485, 0.09893012791872025, 0.09866596013307571, 0.09351472556591034], "val_loss": [2.0548414502825056, 1.993046760559082, 2.0053421429225375, 2.0194016865321567, 2.014709608895438, 1.99907500403268, 2.0165790830339705, 2.034195695604597, 2.028775147029332, 2.018002441951207], "val_accuracy": [0.1003333330154419, 0.10000000149011612, 0.09833333641290665, 0.10166666656732559, 0.10233332961797714, 0.10233332961797714, 0.10066666454076767, 0.09866666793823242, 0.1003333330154419, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 6, 9, 1, 9], [4, 0, 2, 5], [26, 57, 83], [1, 1, 0], [1], [8], [3], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 3, 9, 9, 5, 4, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1340181953.6960647, 26874452031.568882, 133668561078.86197, 400473053850.256, 927209329404.4496, 1839433481802.8625], "accuracy": [0.09932637959718704, 0.09893012791872025, 0.10117553919553757, 0.09972262382507324, 0.10355303436517715, 0.10315678268671036], "val_loss": [5354977133.714286, 49213293714.28571, 187248017408.0, 498544410624.0, 1078921602194.2858, 2070874011355.4285], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [86, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 2, 2], [26, 71, 83], [0, 1, 0], [0], [8], [0], [57], [1, 0, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302275064394317, 2.302584954004687, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 9, 1, 9], [5, 0, 4, 2], [76, 23, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(alpha))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302891582152186, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [88, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 71, 83], [1, 1, 0], [1], [8], [5], [57], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08308017253875732, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 2, 9, 1, 9], [5, 5, 0, 2], [26, 57, 83], [0, 1, 0], [1], [8], [3], [], [1, 1, 0, 1, 1], [8, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(alpha))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), tf.math.add(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302275064394317, 2.302584954004687, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [17, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [5, 0, 4, 2], [26, 55, 83], [0, 1, 0], [1], [8], [5], [68], [0, 0, 0, 1, 0, 0, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 7, 5, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [603816751.9546831, 12768513410.417646, 61356668440.81892, 171588472676.7296, 370130379923.8315, 683957398426.1545], "accuracy": [0.1018359512090683, 0.10170386731624603, 0.09945846349000931, 0.10302469879388809, 0.09945846349000931, 0.10236428678035736], "val_loss": [3038854729.142857, 25951901403.42857, 89487928758.85715, 214396558189.7143, 421425812041.1429, 731326204196.5714], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1], [6, 3, 7, 9, 1, 9], [5, 0, 0, 2], [26, 57, 83, 20], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [1, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 3, 9, 9, 6, 3, 4, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [73, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0], [6, 3, 7, 9, 1, 9], [4, 0, 2, 0], [36, 55, 6], [0, 1, 0], [1], [8], [3], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(alpha))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [51.15700698185433, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04213446006178856, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [855340.5714285715, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 0, 3, 9, 6, 2, 0, 3, 5, 2], [0, 2, 2, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0], [6, 1, 7, 9, 1, 9], [4, 1, 0, 1, 1, 2], [26, 55, 83], [0, 1, 0], [1], [8], [0], [11], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 2, 5, 5, 2, 3, 1, 1, 1, 0, 1, 1, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [38, 13, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [3, 0, 0, 2], [26, 55, 72], [0, 1, 0], [1], [8], [0], [87], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [1, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 9, 9, 5, 4, 3, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302869098407875, 2.36954488109966, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.978067057473319, 3.81881890978132, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1], [4, 3, 7, 9, 1, 9], [4, 1, 0, 4], [26, 55, 83, 36], [0, 1, 0], [1], [8], [2], [57], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.math.add(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303864357131678, 2.3019788582657843, 2.3018888225487397, 2.302912852106282, 2.3021675052423647, 2.3007440201405758], "accuracy": [0.09259014576673508, 0.0886276587843895, 0.09774138033390045, 0.08545766770839691, 0.09008057415485382, 0.09430722147226334], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [38, 13, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0], [6, 4, 7, 9, 1, 9], [3, 0, 0, 2], [26, 55, 83, 83], [0, 1, 0], [1], [8], [0], [97], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 6, 3, 4, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303864357131678, 2.3019788582657843, 2.3018888225487397, 2.302912852106282, 2.3021675052423647, 2.3007440201405758], "accuracy": [0.09259014576673508, 0.0886276587843895, 0.09774138033390045, 0.08545766770839691, 0.09008057415485382, 0.09430722147226334], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 5, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 24, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 7, 9, 1, 9], [5, 0, 0, 2], [26, 55, 83], [0, 1, 0], [0], [8], [0], [57], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303864357131678, 2.3019788582657843, 2.3018888225487397, 2.302912852106282, 2.3021675052423647, 2.3007440201405758], "accuracy": [0.09259014576673508, 0.0886276587843895, 0.09774138033390045, 0.08545766770839691, 0.09008057415485382, 0.09430722147226334], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [6, 3, 7, 9, 1, 9, 7, 0, 3], [5, 0, 0, 2, 3], [26, 55, 83, 70], [0, 1, 0], [1], [8], [5], [68], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 4, 4, 2, 2, 1, 14, 14, 9, 5, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))))), tf.math.multiply(tf.math.add(beta, beta), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303864357131678, 2.3019788582657843, 2.3018888225487397, 2.302912852106282, 2.3021675052423647, 2.3007440201405758], "accuracy": [0.09259014576673508, 0.0886276587843895, 0.09774138033390045, 0.08545766770839691, 0.09008057415485382, 0.09430722147226334], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [38, 13, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 3, 7, 9, 1, 9], [2, 0, 2, 2], [36, 55, 6], [0, 1, 0], [0], [8], [3], [57], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303864357131678, 2.3019788582657843, 2.3018888225487397, 2.302912852106282, 2.3021675052423647, 2.3007440201405758], "accuracy": [0.09259014576673508, 0.0886276587843895, 0.09774138033390045, 0.08545766770839691, 0.09008057415485382, 0.09430722147226334], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]