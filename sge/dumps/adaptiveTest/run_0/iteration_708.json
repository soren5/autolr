[{"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 51, 17, 17, 60, 59, 23, 22, 72, 1, 45, 37, 82, 42, 99], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8488571643829346, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.043245398011017, 1.1570746355667059, 0.8015394796863475, 0.7072488482932783, 0.6490767213882882, 0.594784830720622, 0.5616051464694256, 0.5277016988685181, 0.49394605624960747, 0.4829321742301856, 0.45505068864584314, 0.42814845011659725, 0.41749128597744106, 0.4065470462776903, 0.40606620407863425, 0.3862252253559303, 0.3811401213519152, 0.36333219831598557, 0.3427662109898822, 0.3403267479961606, 0.32308630716326747, 0.32623001772493593, 0.31064087925585837, 0.3115499894797857, 0.3166325933047415, 0.30567047417581106, 0.29591431451306727, 0.2826815155109536, 0.26945626818351204, 0.2716770707840586, 0.25426727788417786], "accuracy": [0.3230748772621155, 0.6007132530212402, 0.707040011882782, 0.7320036888122559, 0.7617223858833313, 0.7697794437408447, 0.7924976944923401, 0.8041210174560547, 0.8198388814926147, 0.824329674243927, 0.8334434032440186, 0.8446704745292664, 0.848368763923645, 0.8514066934585571, 0.8533879518508911, 0.8577466607093811, 0.8623695969581604, 0.8683133125305176, 0.8766345381736755, 0.8721436858177185, 0.8794082403182983, 0.878351628780365, 0.884691596031189, 0.8815215826034546, 0.878351628780365, 0.8845595121383667, 0.8878615498542786, 0.8920882344245911, 0.9026548862457275, 0.8980319499969482, 0.9068815112113953], "val_loss": [0.9221254076276507, 0.654864992414202, 0.587033782686506, 0.5317149673189435, 0.4793605293546404, 0.45572486945561, 0.4368305206298828, 0.4132381592478071, 0.3955020138195583, 0.38343379327229093, 0.3631939802850996, 0.36006204571042744, 0.3588933263506208, 0.33959652696337017, 0.33364943095615934, 0.3347864917346409, 0.3270060249737331, 0.3205661858831133, 0.32483925989695955, 0.3059200644493103, 0.30308315583637785, 0.3007644074303763, 0.30368638038635254, 0.300202088696616, 0.3055122068950108, 0.29587916816983906, 0.3008945328848703, 0.3035833239555359, 0.29595404863357544, 0.29950367552893503, 0.30058913571493967], "val_accuracy": [0.6423333287239075, 0.7176666855812073, 0.7350000143051147, 0.7549999952316284, 0.777999997138977, 0.7903333306312561, 0.8026666641235352, 0.8113333582878113, 0.8273333311080933, 0.8306666612625122, 0.8429999947547913, 0.847000002861023, 0.8423333168029785, 0.8500000238418579, 0.8553333282470703, 0.8493333458900452, 0.8529999852180481, 0.8536666631698608, 0.8600000143051147, 0.8636666536331177, 0.8663333058357239, 0.8656666874885559, 0.8653333187103271, 0.8653333187103271, 0.862666666507721, 0.8726666569709778, 0.8723333477973938, 0.8713333606719971, 0.8713333606719971, 0.8700000047683716, 0.8679999709129333]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 2, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8468571305274963, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0432460703602273, 1.1570868741141775, 0.8015501051609778, 0.7067227897201909, 0.6497577811118839, 0.5941333487017784, 0.5616721504352757, 0.527938501886987, 0.4937035953600204, 0.48411208938739836, 0.4533601298056353, 0.4320788874586481, 0.4182529921552776, 0.407007662119599, 0.4047888274426473, 0.39096660797685096, 0.3837156265111978, 0.36706062675451384, 0.34393949771853266, 0.3403713014486081, 0.32110436299867195, 0.3170753819689601, 0.30900667174979446, 0.30185197108945416, 0.31044868158705247, 0.297419526908124, 0.29435224388852144, 0.27833804864106226, 0.26662582125189505, 0.27116115590238365, 0.25270642423437667, 0.24680544740850457, 0.24245359011219791, 0.23325613372518939, 0.2345084539749808, 0.23141098469436727, 0.22021312349153752, 0.21301198630379553, 0.20908551848071708, 0.1986984112979619, 0.19833368092299042, 0.19472312620011745, 0.1965522917781949, 0.1875764483340176, 0.17925906288798585, 0.17104330320974556], "accuracy": [0.3230748772621155, 0.6001849174499512, 0.7071720957756042, 0.7326641082763672, 0.7613261342048645, 0.770439863204956, 0.791969358921051, 0.8049134612083435, 0.8178576231002808, 0.8222163319587708, 0.8364813327789307, 0.8404437899589539, 0.8446704745292664, 0.8492933511734009, 0.8502179384231567, 0.8593316674232483, 0.8610487580299377, 0.8656716346740723, 0.8757099509239197, 0.8706908226013184, 0.8803328275680542, 0.8821820020675659, 0.8862766027450562, 0.8838990926742554, 0.8869370222091675, 0.8868049383163452, 0.8905032277107239, 0.8910315632820129, 0.8997490406036377, 0.8965790271759033, 0.9075419306755066, 0.9034473896026611, 0.9078060984611511, 0.9145423173904419, 0.9059569239616394, 0.9119006991386414, 0.9162594079971313, 0.9211464524269104, 0.9191652536392212, 0.9260335564613342, 0.9222031235694885, 0.9241843819618225, 0.9237881302833557, 0.9273543953895569, 0.9315810203552246, 0.9318451881408691], "val_loss": [0.9221233640398298, 0.6546735763549805, 0.5872363703591483, 0.5327356713158744, 0.47932541370391846, 0.4572239262717111, 0.4358476144926889, 0.41326347419193815, 0.3940833806991577, 0.3811395594051906, 0.3656160831451416, 0.3637562734740121, 0.3617060269628252, 0.3435111471584865, 0.3342348762920925, 0.3426171030317034, 0.32899355036871775, 0.31909886428288053, 0.3284148744174412, 0.31156844752175467, 0.3028133085795811, 0.30442715542657034, 0.30511973585401264, 0.2966230511665344, 0.30546356098992483, 0.29225802421569824, 0.2994860921587263, 0.29967974764960154, 0.30006047657557894, 0.29989016907555716, 0.30062632049833027, 0.2945515939167568, 0.29190984794071745, 0.2951763868331909, 0.29659243140901836, 0.29687096391405376, 0.2897788201059614, 0.2987259030342102, 0.2901997055326189, 0.3113457901137216, 0.2948993870190212, 0.30825224944523405, 0.30541087899889263, 0.29981989519936697, 0.3035727994782584, 0.3084651827812195], "val_accuracy": [0.6423333287239075, 0.7179999947547913, 0.734666645526886, 0.7543333172798157, 0.7793333530426025, 0.7900000214576721, 0.8029999732971191, 0.8103333115577698, 0.8270000219345093, 0.8330000042915344, 0.8423333168029785, 0.8426666855812073, 0.8403333425521851, 0.846666693687439, 0.8550000190734863, 0.847000002861023, 0.8516666889190674, 0.8536666631698608, 0.8586666584014893, 0.8636666536331177, 0.8666666746139526, 0.862666666507721, 0.8659999966621399, 0.8713333606719971, 0.8633333444595337, 0.8740000128746033, 0.875, 0.8726666569709778, 0.8706666827201843, 0.8740000128746033, 0.871666669845581, 0.8769999742507935, 0.8773333430290222, 0.8809999823570251, 0.8740000128746033, 0.8756666779518127, 0.8830000162124634, 0.8833333253860474, 0.8796666860580444, 0.8803333044052124, 0.8840000033378601, 0.8796666860580444, 0.8823333382606506, 0.878000020980835, 0.8830000162124634, 0.8830000162124634]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 5, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 0, 0, 0, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2, 0, 0, 0, 1, 1, 3, 1, 1, 0, 1], [83, 51, 17, 17, 60, 59, 23, 22, 72, 1, 45, 37, 82, 42, 99], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.842285692691803, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0432453485386106, 1.1570857356977406, 0.8012597842569821, 0.7071134268080222, 0.6480431243287196, 0.5956212422473319, 0.5622827256470624, 0.5285306853144917, 0.49468948836056403, 0.4840245162097612, 0.455136314430068, 0.42943210364679196, 0.4186181298785159, 0.40743169382562916, 0.40531094918051386, 0.38543349813082906, 0.37854575490466574, 0.36362482896098025, 0.34647272041665567, 0.3390994844277931, 0.32190073480412096, 0.3232708032876588, 0.3093657744614172, 0.30796613237089754, 0.31390811844414346, 0.30626838115291066, 0.2946143332229645, 0.27687785525788655, 0.27020273032583314, 0.2704640143815285, 0.25006440520018886, 0.2512952550928811, 0.24890045330603486, 0.23943701437231005, 0.24155086363941183, 0.23832012166192487, 0.21967414346833697, 0.2120546018974168, 0.21155419427886252, 0.19976461032882042, 0.200482886713163, 0.19470885368252255, 0.2036553831219185, 0.18193004336126917, 0.17853479699656444, 0.171079803012649, 0.17268227976838502, 0.16373132556979966], "accuracy": [0.3230748772621155, 0.6004490852355957, 0.7077004313468933, 0.7325320243835449, 0.7611940503120422, 0.770439863204956, 0.7923656105995178, 0.8045172095298767, 0.8169330358505249, 0.8238013386726379, 0.83119797706604, 0.8436138033866882, 0.8444063067436218, 0.8512746095657349, 0.8527275323867798, 0.8593316674232483, 0.8663320541381836, 0.8667283058166504, 0.8713511824607849, 0.8745211958885193, 0.8776912093162537, 0.8821820020675659, 0.8873332738876343, 0.8842953443527222, 0.8824461698532104, 0.8864086866378784, 0.8882578015327454, 0.8938053250312805, 0.9005415439605713, 0.8990886211395264, 0.908730685710907, 0.9022586345672607, 0.9052965044975281, 0.9100515246391296, 0.9034473896026611, 0.9100515246391296, 0.9145423173904419, 0.9216747879981995, 0.9167877435684204, 0.9225993752479553, 0.9199577569961548, 0.9260335564613342, 0.9220710396766663, 0.9323735237121582, 0.9315810203552246, 0.932769775390625, 0.9346189498901367, 0.9362039566040039], "val_loss": [0.9221287795475551, 0.6546123027801514, 0.5871554783412388, 0.5323570115225655, 0.479532037462507, 0.45647639887673513, 0.43933086735861643, 0.41258539472307476, 0.3951905199459621, 0.3815334013530186, 0.3619128806250436, 0.36054275717054096, 0.36036694049835205, 0.34325614145823885, 0.33432378087724957, 0.33712916714804514, 0.3259943979127066, 0.3238127997943333, 0.32308546134403776, 0.3084823914936611, 0.30124469314302715, 0.3023051619529724, 0.3057851025036403, 0.2992643543652126, 0.30808654001780916, 0.2965673123087202, 0.3004011256354196, 0.30276669774736675, 0.29042673110961914, 0.29399642774036955, 0.29817068576812744, 0.29566655840192524, 0.2921008723122733, 0.2925134130886623, 0.2939195122037615, 0.2926621862820217, 0.29259190389088224, 0.30265484537397114, 0.2936612793377468, 0.30682391779763357, 0.2971108981541225, 0.3143158384731838, 0.29979394163404194, 0.31506403003420147, 0.30712724583489553, 0.30912127665110994, 0.3159777522087097, 0.30392907346997944], "val_accuracy": [0.6423333287239075, 0.718666672706604, 0.734000027179718, 0.7536666393280029, 0.7789999842643738, 0.7923333048820496, 0.8013333082199097, 0.8103333115577698, 0.8266666531562805, 0.8309999704360962, 0.8483333587646484, 0.8450000286102295, 0.8423333168029785, 0.8486666679382324, 0.8550000190734863, 0.8510000109672546, 0.8506666421890259, 0.8569999933242798, 0.8610000014305115, 0.8656666874885559, 0.8679999709129333, 0.8653333187103271, 0.8676666617393494, 0.8693333268165588, 0.859000027179718, 0.8696666955947876, 0.8706666827201843, 0.8669999837875366, 0.8773333430290222, 0.8773333430290222, 0.8726666569709778, 0.8703333139419556, 0.8733333349227905, 0.8776666522026062, 0.871666669845581, 0.8799999952316284, 0.8803333044052124, 0.8826666474342346, 0.8793333172798157, 0.8796666860580444, 0.8786666393280029, 0.8796666860580444, 0.8849999904632568, 0.8766666650772095, 0.8846666812896729, 0.8813333511352539, 0.8833333253860474, 0.8840000033378601]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 5, 4, 2, 2, 9, 2, 2, 2, 5, 3, 0, 4, 1, 5, 5, 7, 6, 2, 8, 8, 8, 1, 4, 5, 3, 6, 3, 0, 5, 6, 5, 9, 1, 0, 8, 2, 3, 2, 8, 3, 0, 7, 8, 0, 6, 4, 1, 7, 9, 3, 8, 4, 2, 7, 5, 2, 0, 3, 4, 9, 7, 1, 3, 5, 6], [1, 1, 0, 0, 0, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2, 0, 0, 0, 1, 1, 3, 1, 1, 0, 1], [83, 51, 17, 17, 60, 59, 23, 22, 72, 1, 45, 37, 82, 42, 99], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.842285692691803, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0432455665982396, 1.1570694722740043, 0.8012354599014013, 0.7074021589502509, 0.6490007458802589, 0.5953004848624831, 0.5620679374636125, 0.5266408603330881, 0.49397263276877734, 0.48233110614818686, 0.4543298597994608, 0.4311163546410471, 0.4183617135190756, 0.40668134469444944, 0.3996319352887672, 0.38690804631372155, 0.377394430397398, 0.3630488578433358, 0.3415833304878145, 0.3335378541371385, 0.32120842601266975, 0.32128092650141554, 0.30851550283937124, 0.3079503296412308, 0.309377966846977, 0.30043175607907885, 0.29635580503835085, 0.27671361613534995, 0.26775351674518, 0.27158142325939866, 0.2498548859126375, 0.25067959539272433, 0.247831042221729, 0.23693448665308647, 0.23159547780349254], "accuracy": [0.3230748772621155, 0.6004490852355957, 0.707040011882782, 0.7322678565979004, 0.7619865536689758, 0.7714964747428894, 0.7927618622779846, 0.8050455451011658, 0.8178576231002808, 0.8235371708869934, 0.8337075710296631, 0.8426892161369324, 0.8449346423149109, 0.8541803956031799, 0.8556333184242249, 0.8568220734596252, 0.8614450097084045, 0.8681812286376953, 0.876370370388031, 0.8767666220664978, 0.8782195448875427, 0.8816536664962769, 0.884691596031189, 0.8836349248886108, 0.8861445188522339, 0.8873332738876343, 0.8854840993881226, 0.8986923694610596, 0.8997490406036377, 0.9013340473175049, 0.9096552729606628, 0.904768168926239, 0.9029190540313721, 0.9134856462478638, 0.9079381823539734], "val_loss": [0.9221298354012626, 0.654573781149728, 0.5872113534382412, 0.5330263546534947, 0.47949133600507465, 0.45657617705208914, 0.4376393641744341, 0.4123603531292507, 0.39434209891727995, 0.38074396337781635, 0.36213728359767366, 0.36053592818123953, 0.358688873904092, 0.34148413794381277, 0.33678603172302246, 0.33303930929728914, 0.32875206640788485, 0.3201334476470947, 0.3220949683870588, 0.3074881264141628, 0.29907736607960295, 0.30276743854795185, 0.30884592873709543, 0.29700756072998047, 0.2986713647842407, 0.2973839981215341, 0.2966140253203256, 0.3033507892063686, 0.2901026351111276, 0.29599649565560476, 0.29640222447259085, 0.28670577492032734, 0.28959548473358154, 0.29444990839276997, 0.29344816718782696], "val_accuracy": [0.6423333287239075, 0.7179999947547913, 0.734333336353302, 0.7536666393280029, 0.7753333449363708, 0.7906666398048401, 0.8026666641235352, 0.812333345413208, 0.8299999833106995, 0.8309999704360962, 0.8429999947547913, 0.8446666598320007, 0.8413333296775818, 0.8493333458900452, 0.8500000238418579, 0.8506666421890259, 0.8513333201408386, 0.8553333282470703, 0.8629999756813049, 0.8653333187103271, 0.8693333268165588, 0.8656666874885559, 0.8650000095367432, 0.8709999918937683, 0.8669999837875366, 0.8740000128746033, 0.871999979019165, 0.8690000176429749, 0.875333309173584, 0.8790000081062317, 0.8723333477973938, 0.8766666650772095, 0.878000020980835, 0.8769999742507935, 0.8756666779518127]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [6, 5, 5, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 0, 2, 1, 0, 2, 2, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [41, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8402857184410095, "mapping_values": [1, 16, 16, 9, 7, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.square(alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0432448922021123, 1.1570334383100174, 0.8010284597327948, 0.7066926265184859, 0.6478297287730367, 0.5946321241954188, 0.5631181769020852, 0.5271248022334734, 0.49384569224664454, 0.48324222013446805, 0.45398625232729034, 0.4285706107477234, 0.41800718981560586, 0.40789376049072607, 0.400038882536958, 0.38989169965126036, 0.37748973967298116, 0.3644148783598121, 0.34294821465838904, 0.3387860792455672, 0.3267935086683811, 0.3245536711009392, 0.3090537826516735, 0.3045345984705372, 0.3170983458609235, 0.30703775990341536, 0.29847560401180745, 0.27859069395767555, 0.2671080080115989, 0.2732314527735435, 0.2576326336473002], "accuracy": [0.3230748772621155, 0.6007132530212402, 0.7069079279899597, 0.7326641082763672, 0.759609043598175, 0.7720248103141785, 0.7923656105995178, 0.804649293422699, 0.8165367841720581, 0.8216879963874817, 0.8345000743865967, 0.8437458872795105, 0.8466516733169556, 0.8521991968154907, 0.8544445633888245, 0.8556333184242249, 0.8594637513160706, 0.8681812286376953, 0.8749174475669861, 0.8730682730674744, 0.878351628780365, 0.8790120482444763, 0.8874653577804565, 0.8854840993881226, 0.8808611631393433, 0.8873332738876343, 0.8862766027450562, 0.8927486538887024, 0.9017302989959717, 0.8948619961738586, 0.9059569239616394], "val_loss": [0.9220494883401054, 0.6538944074085781, 0.5868783848626273, 0.5320658343178886, 0.47804064410073416, 0.45733392238616943, 0.43532133953911917, 0.412740809576852, 0.3935166767665318, 0.3795068689755031, 0.36417934724262785, 0.3642727902957371, 0.3614705971309117, 0.3424966846193586, 0.3346208078520639, 0.3296304600579398, 0.3284772889954703, 0.3219199095453535, 0.3244612557547433, 0.31060296297073364, 0.30296621152332853, 0.30262469393866404, 0.3056675706590925, 0.3012923002243042, 0.30402874095099314, 0.292502190385546, 0.29835127932684763, 0.3037343280655997, 0.2908182825360979, 0.29947870118277414, 0.30080877031598774], "val_accuracy": [0.6416666507720947, 0.7176666855812073, 0.7329999804496765, 0.7536666393280029, 0.778333306312561, 0.7916666865348816, 0.8013333082199097, 0.8113333582878113, 0.8270000219345093, 0.8370000123977661, 0.8433333039283752, 0.8420000076293945, 0.8386666774749756, 0.8503333330154419, 0.8513333201408386, 0.8510000109672546, 0.8519999980926514, 0.8560000061988831, 0.8603333234786987, 0.862666666507721, 0.8683333396911621, 0.8679999709129333, 0.8643333315849304, 0.8656666874885559, 0.8679999709129333, 0.8736666440963745, 0.871666669845581, 0.8659999966621399, 0.871999979019165, 0.8726666569709778, 0.8713333606719971]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 2, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8377143144607544, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0432455666927125, 1.1571294825547218, 0.8015563802523242, 0.7071632664626568, 0.6481207331110851, 0.5951031799786253, 0.5602440448910128, 0.5282460287215294, 0.49433085714049735, 0.4833460150614013, 0.4524759395231802, 0.42932110307648386, 0.4178696479763983, 0.40762900269703856, 0.4038058402767869, 0.388673629377024, 0.3765878981295956, 0.3630668950228879, 0.3427817949789264, 0.3366902334822986, 0.3241204454197844, 0.32279687408191055, 0.3075626576778171, 0.3024535732947289, 0.31161907292423213, 0.2980368602206568, 0.29625353499756923, 0.27575011428368323, 0.26834173690074503, 0.26691531066479796, 0.25011931146219374, 0.2517668261244281, 0.24251142321143404, 0.23810040829141046, 0.2366490089079298, 0.23048243618416134, 0.2227589153083025, 0.21803330707905896, 0.21009206060743793, 0.2065297469817542, 0.20259279372465058, 0.18850032979896308, 0.20367820235984105, 0.1898040104838977, 0.18696400762517548, 0.16865903902181373, 0.1768900556665732, 0.1669480867960418, 0.156241570670355, 0.1569020761718934, 0.14801100442209864, 0.15825496176844495, 0.1444244171020267], "accuracy": [0.3230748772621155, 0.6001849174499512, 0.7069079279899597, 0.7326641082763672, 0.7626469135284424, 0.7712323069572449, 0.7928939461708069, 0.802800178527832, 0.8185180425643921, 0.8249900937080383, 0.8350284099578857, 0.8399154543876648, 0.8475762605667114, 0.8508783578872681, 0.8532558679580688, 0.8564258217811584, 0.863029956817627, 0.8663320541381836, 0.8733324408531189, 0.8754457831382751, 0.8796724081039429, 0.8795403242111206, 0.8877294659614563, 0.8856161832809448, 0.8831065893173218, 0.8885219693183899, 0.8864086866378784, 0.8942015767097473, 0.9022586345672607, 0.8997490406036377, 0.9058248400688171, 0.9029190540313721, 0.9093911051750183, 0.9105798602104187, 0.9062210917472839, 0.9125610589981079, 0.9174481630325317, 0.9186369180679321, 0.9196935892105103, 0.9215427041053772, 0.9199577569961548, 0.9269581437110901, 0.9220710396766663, 0.9265618920326233, 0.9252410531044006, 0.9363360404968262, 0.9331660270690918, 0.9354114532470703, 0.9406947493553162, 0.9387134909629822, 0.9449214339256287, 0.9373927116394043, 0.9454497694969177], "val_loss": [0.9221245901925224, 0.6548726388386318, 0.5869474581309727, 0.5319094487598964, 0.47929959637778147, 0.4558176483426775, 0.43723155770983013, 0.413861232144492, 0.3955379383904593, 0.3821695957865034, 0.3648918696812221, 0.36203250714710783, 0.36070979493004934, 0.3431344543184553, 0.33838558197021484, 0.32905209915978567, 0.3285114509718759, 0.32025167771748136, 0.32516700880868094, 0.310124933719635, 0.29953908920288086, 0.30308836698532104, 0.30524271726608276, 0.3009992923055376, 0.30050221511295866, 0.2942114642688206, 0.30327235800879343, 0.30088294403893606, 0.29181643043245586, 0.3032437818390982, 0.2967715859413147, 0.28905647141592844, 0.2925360287938799, 0.2898230126925877, 0.29325579745428904, 0.28615779536111013, 0.2875781740461077, 0.2928094523293631, 0.2930171915463039, 0.3070275528090341, 0.29694331543786184, 0.31386024611336844, 0.3027925746781485, 0.305341899394989, 0.29775712319782804, 0.3112078990255083, 0.31054225138255526, 0.30100349869046894, 0.3103384290422712, 0.3180843932288034, 0.33808027846472605, 0.31284122807638987, 0.33577656745910645], "val_accuracy": [0.6423333287239075, 0.7176666855812073, 0.734333336353302, 0.7543333172798157, 0.7786666750907898, 0.7916666865348816, 0.8019999861717224, 0.8103333115577698, 0.8276666402816772, 0.8320000171661377, 0.8413333296775818, 0.843666672706604, 0.843999981880188, 0.8496666550636292, 0.8533333539962769, 0.8536666631698608, 0.8526666760444641, 0.8556666374206543, 0.859333336353302, 0.8573333621025085, 0.8693333268165588, 0.862333357334137, 0.8653333187103271, 0.8673333525657654, 0.8636666536331177, 0.871666669845581, 0.8690000176429749, 0.8676666617393494, 0.875, 0.875333309173584, 0.8733333349227905, 0.8769999742507935, 0.8776666522026062, 0.8809999823570251, 0.8759999871253967, 0.8833333253860474, 0.8806666731834412, 0.8796666860580444, 0.8816666603088379, 0.8766666650772095, 0.8840000033378601, 0.8833333253860474, 0.8826666474342346, 0.8833333253860474, 0.8820000290870667, 0.8856666684150696, 0.8820000290870667, 0.887666642665863, 0.8840000033378601, 0.878333330154419, 0.8813333511352539, 0.8859999775886536, 0.8836666941642761]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [6, 5, 5, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 51, 17, 17, 60, 59, 23, 22, 72, 1, 45, 37, 82, 42, 99], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8351428508758545, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.043245614023729, 1.1570529228093807, 0.8009800071005241, 0.7069247154480336, 0.6477341286305659, 0.5934903670091041, 0.5622508279194905, 0.5278333323845191, 0.493116696119277, 0.48185345196705043, 0.4537105000392242, 0.43046103650710177, 0.4196706651192709, 0.4056766111270359, 0.4052952329055303, 0.39005763004279925, 0.37557788144611587, 0.3622174779413997, 0.34221695436935035, 0.34073753669324597, 0.32538147323230127, 0.3261451513350616, 0.31081543314285315, 0.30840986854506364, 0.3121821368571994, 0.3000151185689585, 0.29600999946087864, 0.28055049301280227, 0.2671885838314621, 0.2683287094833199, 0.25027968800732364, 0.2485878294910249, 0.2476941876820979, 0.24026844161313524, 0.2359043751327731, 0.23019903020820345, 0.21889160288095064, 0.2127362201144084, 0.21166549280744423, 0.20285651108033276, 0.19823047603165483, 0.19192063648033733, 0.20228054659745445, 0.18848559696715916, 0.1888842478368922, 0.17386633118366315, 0.18489312475517425, 0.17553181477651747, 0.16563362204962404, 0.16562636366468048, 0.15386754701071725, 0.15713281600805337, 0.14141304362498852, 0.1532345276604932, 0.15064431351205188, 0.1405483374364498, 0.14554195699832223, 0.1319296893867535, 0.13935321423599922], "accuracy": [0.3230748772621155, 0.600581169128418, 0.7073041796684265, 0.7333245277404785, 0.76106196641922, 0.7711002230644226, 0.791441023349762, 0.8034605979919434, 0.8169330358505249, 0.8236692547798157, 0.8345000743865967, 0.8393871188163757, 0.8451988101005554, 0.8536521196365356, 0.8512746095657349, 0.857218325138092, 0.8626337051391602, 0.8688416481018066, 0.8757099509239197, 0.8733324408531189, 0.878879964351654, 0.8786157965660095, 0.8856161832809448, 0.8845595121383667, 0.884691596031189, 0.8889182209968567, 0.8861445188522339, 0.896446943283081, 0.9019944667816162, 0.897899866104126, 0.9105798602104187, 0.9051644206047058, 0.9080702662467957, 0.9093911051750183, 0.9038436412811279, 0.9137498140335083, 0.9148064851760864, 0.9199577569961548, 0.9196935892105103, 0.923920214176178, 0.9266939759254456, 0.9261656403541565, 0.9208822846412659, 0.9266939759254456, 0.9233918786048889, 0.9332981109619141, 0.927882730960846, 0.9314489364624023, 0.9379209876060486, 0.9356756210327148, 0.9397701621055603, 0.9393739104270935, 0.9462422132492065, 0.9418835043907166, 0.9397701621055603, 0.9469026327133179, 0.9418835043907166, 0.9492801427841187, 0.9449214339256287], "val_loss": [0.9220235007149833, 0.6541670390537807, 0.5866360834666661, 0.5322309732437134, 0.4789705106190273, 0.4576330525534494, 0.43412065505981445, 0.41406629766736713, 0.39417721543993267, 0.37962234020233154, 0.3617345946175711, 0.361788741179875, 0.3597937396594456, 0.3467895899500166, 0.3377849544797625, 0.3353385754993984, 0.3253809554236276, 0.3177962473460606, 0.32460516691207886, 0.3115239569119045, 0.30380416767937796, 0.30364467416490826, 0.3062195692743574, 0.29963208947862896, 0.3069964817592076, 0.2956005930900574, 0.2989712527820042, 0.30453349011284964, 0.29278827565056936, 0.2971856679235186, 0.2968935114996774, 0.29154372215270996, 0.291424640587398, 0.28696545532771517, 0.29538075413022724, 0.28716933727264404, 0.2858146003314427, 0.2970783880778721, 0.2842274563653128, 0.3047879934310913, 0.2936685766492571, 0.3139400567327227, 0.2907029560634068, 0.3032673682485308, 0.294042774609157, 0.3133549094200134, 0.3183082342147827, 0.30697414704731535, 0.31563399519239155, 0.3214283840996878, 0.33359954186848234, 0.31496151856013704, 0.3340113248143877, 0.31104715381349834, 0.3185602681977408, 0.32827904394694735, 0.32306013788495747, 0.3214941280228751, 0.32247682980128695], "val_accuracy": [0.6416666507720947, 0.7179999947547913, 0.7353333234786987, 0.7540000081062317, 0.7786666750907898, 0.7900000214576721, 0.8053333163261414, 0.8086666464805603, 0.8259999752044678, 0.8370000123977661, 0.8453333377838135, 0.843666672706604, 0.8429999947547913, 0.8429999947547913, 0.8503333330154419, 0.8496666550636292, 0.8533333539962769, 0.8569999933242798, 0.8610000014305115, 0.862666666507721, 0.8663333058357239, 0.8656666874885559, 0.8656666874885559, 0.8633333444595337, 0.8610000014305115, 0.8696666955947876, 0.8706666827201843, 0.8713333606719971, 0.8769999742507935, 0.8740000128746033, 0.8766666650772095, 0.871666669845581, 0.874666690826416, 0.8803333044052124, 0.8709999918937683, 0.8793333172798157, 0.8809999823570251, 0.8799999952316284, 0.878000020980835, 0.8793333172798157, 0.8846666812896729, 0.8799999952316284, 0.8820000290870667, 0.8823333382606506, 0.8863333463668823, 0.8833333253860474, 0.878000020980835, 0.8843333125114441, 0.887666642665863, 0.8776666522026062, 0.8840000033378601, 0.8830000162124634, 0.8846666812896729, 0.8880000114440918, 0.8840000033378601, 0.8830000162124634, 0.8863333463668823, 0.8880000114440918, 0.887666642665863]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 5, 4, 2, 2, 9, 2, 2, 2, 5, 3, 0, 4, 1, 5, 5, 7, 6, 2, 8, 8, 8, 1, 4, 5, 3, 6, 3, 0, 5, 6, 5, 9, 1, 0, 8, 2, 3, 2, 8, 3, 0, 7, 8, 0, 6, 4, 1, 7, 9, 3, 8, 4, 2, 7, 5, 2, 0, 3, 4, 9, 7, 1, 3, 5, 6], [1, 1, 0, 0, 0, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2, 0, 0, 0, 1, 1, 3, 1, 1, 0, 1], [83, 51, 17, 17, 60, 59, 23, 22, 72, 1, 45, 37, 82, 42, 99], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.7845714092254639, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.217052454457795, 1.7128325455287319, 1.2783821225402503, 1.080443141073394, 0.9668391358583138, 0.8873432711319853, 0.8312857838716836, 0.7963186662037454, 0.772753342228354, 0.7415235154994995, 0.7495564767288069, 0.7292142218964652, 0.725763811663299, 0.6905438986279315, 0.6617101398378457, 0.6540959577487365, 0.6759799923942137, 0.6306192058188616, 0.6511036847891384, 0.6402860856673438, 0.6112301825862976, 0.6303383883247758], "accuracy": [0.25201427936553955, 0.4675736427307129, 0.5478800535202026, 0.6244881749153137, 0.6490556001663208, 0.6761326193809509, 0.6885483860969543, 0.6997754573822021, 0.7117950320243835, 0.7240787148475647, 0.719852089881897, 0.724739134311676, 0.7202483415603638, 0.739928662776947, 0.7528728246688843, 0.7565711140632629, 0.7449478507041931, 0.7606657147407532, 0.7532690763473511, 0.7544577717781067, 0.7676661014556885, 0.7557786107063293], "val_loss": [1.6956730229513985, 1.0116374492645264, 0.8674659729003906, 0.7309773819787162, 0.653280326298305, 0.6317434140614101, 0.6218106235776629, 0.5921272550310407, 0.5485494818006244, 0.5488349710191999, 0.5393924031938825, 0.6112208536693028, 0.5315579175949097, 0.5065653494426182, 0.4981989860534668, 0.5417301654815674, 0.48037196908678326, 0.48772220952170237, 0.49878486565181185, 0.49203719411577496, 0.47955804211752756, 0.4779053585869925], "val_accuracy": [0.5400000214576721, 0.6136666536331177, 0.6513333320617676, 0.6896666884422302, 0.7350000143051147, 0.715666651725769, 0.7210000157356262, 0.7323333621025085, 0.7636666893959045, 0.7689999938011169, 0.7609999775886536, 0.7210000157356262, 0.7749999761581421, 0.7879999876022339, 0.7870000004768372, 0.7603333592414856, 0.793666660785675, 0.7929999828338623, 0.7756666541099548, 0.784333348274231, 0.7833333611488342, 0.7903333306312561]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 5, 4, 2, 2, 9, 2, 2, 2, 5, 3, 0, 4, 1, 5, 5, 7, 6, 2, 8, 8, 8, 1, 4, 5, 3, 6, 3, 0, 5, 6, 5, 9, 1, 0, 8, 2, 3, 2, 8, 3, 0, 7, 8, 0, 6, 4, 1, 7, 9, 3, 8, 4, 2, 7, 5, 2, 0, 3, 4, 9, 7, 1, 3, 5, 6], [2, 1, 0, 2, 2, 0, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [84, 48, 17, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.459534344971062, 14.530124932862135, 40.29458418233819, 84.87582448148898, 152.77807207249884, 248.10956305938547], "accuracy": [0.1014397069811821, 0.1006472036242485, 0.09972262382507324, 0.09668471664190292, 0.09668471664190292, 0.10117553919553757], "val_loss": [5.022316523960659, 16.82879420689174, 38.94046129499163, 73.97979082380023, 125.08245849609375, 195.65036010742188], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 0, 9, 1, 2, 5, 2, 2, 3, 5, 2, 0, 4, 1, 5, 5, 6, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 4, 5, 1, 8, 8, 1, 0, 3, 6, 3, 4, 1, 9, 2], [2, 1, 0, 2, 2, 0, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [20, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 2, 4, 0, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 0, 2, 0, 0, 2, 2, 2, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 41, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [8, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 3, 2, 2, 1, 1, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.pow(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3023445829817994, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [6, 5, 5, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3023445829817994, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 0, 4, 2, 2, 9, 2, 2, 2, 5, 3, 0, 4, 1, 5, 5, 7, 6, 2, 8, 8, 8, 1, 4, 5, 3, 6, 3, 0, 5, 6, 5, 9, 1, 0, 8, 2, 3, 2, 8, 3, 0, 7, 8, 0, 6, 4, 1, 7, 9, 3, 8, 4, 2, 7, 5, 2, 0, 3, 4, 9, 7, 1, 3, 5, 6], [2, 0, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 51, 17, 17, 60, 59, 23, 22, 72, 1, 45, 37, 82, 42, 99], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [4, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 3, 3, 1, 2, 1, 4, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.negative(tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 5, 4, 2, 2, 9, 2, 2, 2, 5, 3, 0, 4, 1, 5, 5, 7, 6, 2, 8, 8, 8, 1, 4, 5, 3, 6, 3, 0, 5, 6, 5, 9, 1, 0, 8, 2, 3, 2, 8, 3, 0, 7, 8, 0, 6, 4, 1, 7, 9, 3, 8, 4, 2, 7, 5, 2, 0, 3, 4, 9, 7, 1, 3, 5, 6], [2, 1, 0, 2, 2, 0, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [84, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [0, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.301657763643508, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 5, 4, 1, 2, 2, 2, 1, 6, 5, 2, 0, 2, 1, 5, 5, 7, 6, 2, 8, 8, 8, 1, 6, 5, 4, 3, 3, 3, 5, 2, 8, 8, 1, 0, 3, 5, 9], [1, 1, 0, 2, 2, 0, 2, 2, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 41, 17, 15, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 61, 61, 38, 23, 6, 2, 2, 1, 1, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), alpha)), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))))))), tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, grad)), tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.negative(grad), grad))))), tf.math.multiply(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [36474363.318462074, 5482427467.944525, 92665696243.55673, 664124973431.4622, 2926983401195.543, 9620929724279.664], "accuracy": [0.10328886657953262, 0.09932637959718704, 0.1002509593963623, 0.09694888442754745, 0.09734513610601425, 0.1006472036242485], "val_loss": [301650011.4285714, 16245566902.857143, 174337055597.7143, 950371390025.1428, 3559643414528.0, 10499840578121.143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [6, 5, 5, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 0, 2, 1, 0, 2, 2, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 13, 9, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 0, 4, 1, 2, 5, 2, 2, 3, 5, 2, 0, 4, 1, 5, 5, 6, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 4, 5, 1, 8, 8, 1, 0, 3, 6, 3, 4, 1, 9, 2], [2, 0, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [84, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [2, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(alpha, grad), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 0, 4, 1, 2, 2, 2, 2, 3, 5, 2, 0, 4, 1, 5, 5, 6, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 4, 5, 1, 8, 8, 1, 0, 3, 6, 3, 4, 1, 9, 2], [2, 2, 0, 0, 2, 0, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 27, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.07000000029802322, "mapping_values": [1, 19, 19, 10, 9, 4, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301950849987308, 2.301853546424234, 2.3012292161200105, 2.3012590930446453, 2.3000927438762413, 2.300178633673379, 2.2997500416845487, 2.3003921687658107, 2.300254559929439, 2.3003552231444124, 2.29919777182918, 2.300220200792201, 2.299532519607433, 2.300431716270482, 2.300105811141627, 2.3007821596813494, 2.300721117786019], "accuracy": [0.09074098616838455, 0.09166556596755981, 0.09932637959718704, 0.09377889335155487, 0.10011887550354004, 0.0952318087220192, 0.1014397069811821, 0.09734513610601425, 0.09655263274908066, 0.09906221181154251, 0.09813763201236725, 0.1006472036242485, 0.09536388516426086, 0.09391097724437714, 0.0948355570435524, 0.09338264167308807, 0.09536388516426086], "val_loss": [1.9706952231270927, 1.9702132088797433, 1.9697140284946986, 1.969346523284912, 1.9691692761012487, 1.9691695485796248, 1.96929965700422, 1.969487190246582, 1.9695308549063546, 1.9695327622549874, 1.9696026529584612, 1.9697440011160714, 1.9699152537754603, 1.9701380729675293, 1.9703548976353236, 1.9705471311296736, 1.9707318033490862], "val_accuracy": [0.0430000014603138, 0.047333333641290665, 0.0533333346247673, 0.05666666850447655, 0.06333333253860474, 0.06800000369548798, 0.07066666334867477, 0.0716666653752327, 0.07433333247900009, 0.07766667008399963, 0.08033332973718643, 0.08100000023841858, 0.07900000363588333, 0.07733333110809326, 0.07599999755620956, 0.07333333045244217, 0.07333333045244217]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 8, 4, 1, 2, 3, 2, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 1, 0, 2, 1, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [3, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 0, 7, 1, 8, 2, 2, 1], [2, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.057999998331069946, "mapping_values": [1, 15, 15, 8, 7, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), alpha), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, alpha)))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3008698517730477, 2.2991743281753294, 2.3007558259068386, 2.3021827023719927, 2.3024734014123895, 2.3024895944772945, 2.3028418720831345, 2.3031456303272138, 2.303607609608642, 2.3043388442088744, 2.3055939556915903], "accuracy": [0.0952318087220192, 0.10513802617788315, 0.09377889335155487, 0.06947562843561172, 0.07872143387794495, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.10170386731624603, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9686366489955358, 1.97025694165911, 1.9723661967686243, 1.9733761378696986, 1.9734856741768974, 1.9737307684762138, 1.9739861488342285, 1.97430385862078, 1.974801812853132, 1.9756873675755091, 1.9774627685546875], "val_accuracy": [0.08266666531562805, 0.09666666388511658, 0.057999998331069946, 0.036666665226221085, 0.09733333438634872, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 5, 4, 2, 2, 9, 2, 2, 2, 5, 3, 0, 4, 1, 5, 5, 7, 6, 2, 8, 8, 8, 1, 4, 5, 3, 6, 3, 0, 5, 6, 5, 9, 1, 0, 8, 2, 3, 2, 8, 3, 0, 7, 8, 0, 6, 4, 1, 7, 9, 3, 8, 4, 2, 7, 5, 2, 0, 3, 4, 9, 7, 1, 3, 5, 6], [1, 1, 0, 0, 0, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2, 0, 0, 0, 1, 1, 3, 1, 1, 0, 1], [83, 51, 17, 17, 60, 59, 23, 22, 72, 1, 45, 37, 82, 42, 99], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [9, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [52, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3020665861942735, 2.3025477303175044, 2.302602933020309, 2.3034744003839056, 2.3025633406094306, 2.302987022391085], "accuracy": [0.09060890227556229, 0.09074098616838455, 0.09549596905708313, 0.09060890227556229, 0.09113723784685135, 0.09179764986038208], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]