[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8431428670883179, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.922396127668433, 0.9610864399934662, 0.7561291579037547, 0.6657646511524046, 0.6193951860457962, 0.5750365016278086, 0.5436296859209202, 0.5143577357592474, 0.49076924087380563, 0.4615761510267108, 0.45371649170737494, 0.4349092590558515, 0.4064486427920259, 0.4042665654358658, 0.3984772261768961, 0.3810674841763589, 0.36519077651693743, 0.3597563340435285, 0.350782316433456, 0.33954622559401937, 0.32132778128282097, 0.3134721046063437, 0.3069068813690845, 0.29808889008815403, 0.29550267925839996, 0.29103092022024646, 0.27152385577911775, 0.266802528176593, 0.26092571480289, 0.2490846577290263, 0.2624247257345939, 0.2476977526496005, 0.23912961347826467, 0.2450814592194296, 0.2334617570902709, 0.22504907245365793, 0.2276936505275742, 0.2096263392195017, 0.20338372945029737, 0.18441993154791037, 0.19126179456915507, 0.18195667034481275, 0.1807324445860938, 0.17739338925832362, 0.17372442008033168], "accuracy": [0.3443402349948883, 0.6527539491653442, 0.713379979133606, 0.7534011602401733, 0.7662131786346436, 0.7792893648147583, 0.8034605979919434, 0.8098005652427673, 0.819970965385437, 0.8284242749214172, 0.8345000743865967, 0.8436138033866882, 0.8486329317092896, 0.8502179384231567, 0.856689989566803, 0.863029956817627, 0.8664641380310059, 0.8687095642089844, 0.8689737319946289, 0.8728041052818298, 0.8775591254234314, 0.8835028409957886, 0.8879936337471008, 0.8879936337471008, 0.8873332738876343, 0.8901069760322571, 0.8992207050323486, 0.9002773761749268, 0.9013340473175049, 0.9076740145683289, 0.8968431949615479, 0.9059569239616394, 0.9075419306755066, 0.9075419306755066, 0.9104477763175964, 0.9159952402114868, 0.9100515246391296, 0.9198256731033325, 0.9210143685340881, 0.9303922653198242, 0.9299960136413574, 0.9294676780700684, 0.9297318458557129, 0.9321093559265137, 0.930788516998291], "val_loss": [0.8137116261890956, 0.5929610218320575, 0.532295652798244, 0.4887984309877668, 0.46230467728206087, 0.44485836369650705, 0.4267592430114746, 0.4011989576475961, 0.38695227248328073, 0.39409031186785015, 0.3626402105603899, 0.3528210435594831, 0.34734348739896503, 0.3421503560883658, 0.34191794054848806, 0.33001346247536795, 0.32379590613501413, 0.3207160660198757, 0.3146114775112697, 0.318467310496739, 0.3134118318557739, 0.30789426394871305, 0.3036424517631531, 0.3039647340774536, 0.30396402733666555, 0.29581211294446674, 0.29618579149246216, 0.3168057118143354, 0.28993323019572664, 0.302189154284341, 0.2959488034248352, 0.28150791781289236, 0.2982032299041748, 0.2898567318916321, 0.2876607860837664, 0.29506450039999826, 0.2935231157711574, 0.30525876794542584, 0.2996809908321926, 0.2987077661923, 0.29750960213797434, 0.29966591937201364, 0.28739796366010395, 0.31175377539225985, 0.3009525622640337], "val_accuracy": [0.6596666574478149, 0.734333336353302, 0.7666666507720947, 0.7746666669845581, 0.7866666913032532, 0.7929999828338623, 0.8046666383743286, 0.8169999718666077, 0.8299999833106995, 0.82833331823349, 0.8383333086967468, 0.8453333377838135, 0.8496666550636292, 0.8496666550636292, 0.8460000157356262, 0.8519999980926514, 0.8543333411216736, 0.8546666502952576, 0.859666645526886, 0.859000027179718, 0.859666645526886, 0.862666666507721, 0.8653333187103271, 0.8640000224113464, 0.8703333139419556, 0.8706666827201843, 0.871666669845581, 0.8700000047683716, 0.878333330154419, 0.8730000257492065, 0.8806666731834412, 0.8799999952316284, 0.878000020980835, 0.8809999823570251, 0.8813333511352539, 0.8759999871253967, 0.878333330154419, 0.8793333172798157, 0.887666642665863, 0.8886666893959045, 0.887666642665863, 0.8859999775886536, 0.8863333463668823, 0.8833333253860474, 0.8853333592414856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 3, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.6828571557998657, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.946427925781504, 1.1519703821121285, 0.9222514526939443, 0.7854296206215574, 0.6878082452590644, 0.657467526239159, 0.6408865585807072, 0.5834236351364498, 0.6092314041522138, 0.5914446374822396, 0.5728464693110522, 0.5738524727896299, 0.5991153271915324, 0.6322333740520439, 0.6671985778920702], "accuracy": [0.3475102484226227, 0.6056002974510193, 0.6513010263442993, 0.7025492191314697, 0.7331924438476562, 0.7523444890975952, 0.7664773464202881, 0.7779685854911804, 0.7721568942070007, 0.7778365015983582, 0.7757231593132019, 0.7917051911354065, 0.7713643908500671, 0.778232753276825, 0.755118191242218], "val_loss": [0.9236163752419608, 0.6820232357297625, 0.6455221687044416, 0.5209762879780361, 0.48273723466055735, 0.4883192607334682, 0.44379944460732595, 0.44406694173812866, 0.44792284284319195, 0.43228221791131155, 0.44035334246499197, 0.46004767077309744, 0.45963951519557406, 0.47858076436179026, 0.4620386191776821], "val_accuracy": [0.6426666378974915, 0.6983333230018616, 0.7086666822433472, 0.7543333172798157, 0.7823333144187927, 0.7760000228881836, 0.8019999861717224, 0.7979999780654907, 0.7919999957084656, 0.8190000057220459, 0.800000011920929, 0.7950000166893005, 0.8040000200271606, 0.79666668176651, 0.8043333292007446]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 3, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 7, 2, 1, 9, 9], [4, 1, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.37314286828041077, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))), tf.math.add(beta, grad)), grad), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.209366537119813, 2.3022601451415268, 2.308961152432066, 3.8241553833739412, 224.84591265471698, 29306.86710572208], "accuracy": [0.29903578758239746, 0.10738343745470047, 0.1002509593963623, 0.09853387624025345, 0.09338264167308807, 0.09998679161071777], "val_loss": [1.9725070680890764, 1.9741185052054269, 2.0162368501935686, 13.007385798863002, 1532.4011928013392, 195062.24107142858], "val_accuracy": [0.12066666781902313, 0.09933333098888397, 0.10066666454076767, 0.1003333330154419, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [0, 49, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 3, 2, 9, 3, 9, 0, 4, 3], [2, 0, 2], [6, 32, 85]], "fitness": -0.19571428000926971, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3473143292896785, 2.637440772655539, 2.3333596194724144, 2.2969873508268956, 2.287045131254316, 2.3237204145777417, 2.415755284917416], "accuracy": [0.22903183102607727, 0.1516312211751938, 0.1472724825143814, 0.1438383311033249, 0.14238542318344116, 0.1216483935713768, 0.12455421686172485], "val_loss": [2.1854493277413503, 1.9589904376438685, 1.9623893329075404, 1.951202051980155, 2.009761333465576, 2.03546210697719, 1.9785575866699219], "val_accuracy": [0.10199999809265137, 0.2133333384990692, 0.1289999932050705, 0.12566666305065155, 0.10100000351667404, 0.17133332788944244, 0.1366666704416275]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.1274285763502121, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.347068069885278, 2.6045324105187304, 2.2051877750303013, 2.361465840370522, 2.3856991280843047, 2.345561263394661, 2.3339003318682825, 2.334860359562733], "accuracy": [0.22876766324043274, 0.16536785662174225, 0.189274862408638, 0.13168670237064362, 0.10632677376270294, 0.10711926966905594, 0.1022322028875351, 0.09747721254825592], "val_loss": [2.1997182028634206, 1.9318705286298479, 1.794738837650844, 1.99261931010655, 2.025770936693464, 2.008321557726179, 2.0022250584193637, 1.9956690243312292], "val_accuracy": [0.10100000351667404, 0.16300000250339508, 0.22100000083446503, 0.11266666650772095, 0.10133333504199982, 0.10000000149011612, 0.09833333641290665, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 3], [71, 86, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.11457142978906631, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.346853025711255, 2.6058542739760844, 2.2514021664625616, 2.3743206983575607, 2.3183696656069026, 2.3099433385370083, 2.3712908777310755, 2.3703614520107075, 2.370017936941088], "accuracy": [0.228899747133255, 0.16140536963939667, 0.17633073031902313, 0.11134592443704605, 0.15110288560390472, 0.13274335861206055, 0.1018359512090683, 0.09800554811954498, 0.09655263274908066], "val_loss": [2.2089405059814453, 1.9545221328735352, 2.0219058990478516, 1.8989790507725306, 1.9121804237365723, 2.0577293804713657, 2.042545591081892, 2.0178093910217285, 2.0169011524745395], "val_accuracy": [0.10100000351667404, 0.15133333206176758, 0.11533333361148834, 0.1743333339691162, 0.15000000596046448, 0.09833333641290665, 0.09833333641290665, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 0, 1, 9], [5, 0, 3, 5, 0], [0, 49, 6], [1, 1, 0], [0], [8], [0], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.11114285886287689, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3463966410000405, 2.6535091181913653, 2.269653349977049, 2.2419113263855865, 2.3948053402624203, 2.333521998175824, 2.345612571287023, 2.3276578622046338], "accuracy": [0.22876766324043274, 0.15532954037189484, 0.16074495017528534, 0.16576409339904785, 0.10051512718200684, 0.1018359512090683, 0.11372341960668564, 0.11227050423622131], "val_loss": [2.214907782418387, 1.9779458045959473, 1.9149267332894462, 2.0446671077183316, 2.008069242749895, 1.9746135984148299, 1.9958165032523019, 1.9605016027178084], "val_accuracy": [0.10100000351667404, 0.15166667103767395, 0.16466666758060455, 0.1003333330154419, 0.09833333641290665, 0.15066666901111603, 0.11599999666213989, 0.12399999797344208]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 5, 1, 9], [3, 0, 3, 3, 3], [95, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10171428322792053, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3466568846885854, 2.618606092750026, 2.2709640243884484, 2.761040659061654, 2.40467765472663, 2.384290574233388, 2.4071207601065807, 2.400704602870203], "accuracy": [0.228899747133255, 0.1578391194343567, 0.16378284990787506, 0.1328754425048828, 0.09945846349000931, 0.10315678268671036, 0.10117553919553757, 0.10315678268671036], "val_loss": [2.2178305898393904, 1.9857852799551827, 1.9238440649850028, 2.0410778181893483, 2.0803772381373813, 2.076829433441162, 2.032383782523019, 2.0174478122166226], "val_accuracy": [0.10100000351667404, 0.14399999380111694, 0.15533334016799927, 0.1003333330154419, 0.10133333504199982, 0.10000000149011612, 0.10066666454076767, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [9, 3, 7, 0, 1, 9], [4, 2, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3029550995572903, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [51, 48, 6], [0, 1, 0], [1], [8], [7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), grad)), tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06973979622125626, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 3, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 4, 0, 1, 9], [4, 0, 3, 0, 0], [36, 49, 6], [1, 1, 0], [0], [8], [3], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 3, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), grad), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 3, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [88, 49, 6], [0, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302014174541352, 2.3025851114598312, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [4, 1, 7, 0, 1, 9], [4, 2, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [313790.7126117568, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08836349099874496, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 3, 3, 3], [36, 86, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [40.35463298716486, 816.1183603327304, 28846.413901523905, 795971.8393293489, 5866334.226786422, 16984237.480385683, 29044419.648131028, 41131335.85682208, 53191107.14727249, 65285061.530577205], "accuracy": [0.09787346422672272, 0.09893012791872025, 0.10579843819141388, 0.09919429570436478, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [113.95958382742745, 3264.4228515625, 115994.61383928571, 2289918.0714285714, 10251957.714285715, 20607014.285714287, 30962068.57142857, 41317131.428571425, 51672194.28571428, 62027257.14285714], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [2, 3, 7, 0, 1, 9], [4, 0, 3, 3, 0], [6, 86, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)))))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3029550995572903, 2.3025851744418886, 2.3025851744418886, 2.3025851744418886, 2.3025849675143384, 2.3025849990053673], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644460950579, 1.973644460950579, 1.973644460950579, 1.973644188472203, 1.973644188472203, 1.973644188472203], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 3, 4, 0, 0, 9], [4, 3, 3, 5, 0], [33, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(grad, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.negative(grad))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 7, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [36, 49, 6], [0, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.08799999952316284, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302237974669971, 2.3012372838381716, 2.3002105092706304, 2.2983511150820126, 2.298841305192215, 2.3002781154079335, 2.30092248109196, 2.3018409046656294], "accuracy": [0.09166556596755981, 0.09668471664190292, 0.10381719470024109, 0.10606260597705841, 0.09998679161071777, 0.09232597798109055, 0.09708096832036972, 0.08651433140039444], "val_loss": [1.9707292829241072, 1.9686778613499232, 1.968698501586914, 1.9697577612740653, 1.9708760125296456, 1.9712576184953963, 1.9725181034633092, 1.973339421408517], "val_accuracy": [0.041333332657814026, 0.0860000029206276, 0.10400000214576721, 0.07233333587646484, 0.04933333396911621, 0.07333333045244217, 0.07633333653211594, 0.06300000101327896]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [6, 6, 0, 0, 1, 9], [2, 0, 3, 5, 3], [45, 49, 6], [0, 1, 0], [1], [8], [0], [64], [0, 1, 0, 1, 1], [0, 7, 3, 2, 9, 3, 9, 0, 4, 3], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.negative(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3022657523711345, 2.3028677313508235, 2.301815249207879, 2.3017777956046954, 2.3010961010219586, 2.3013101212336893], "accuracy": [0.09206181764602661, 0.09126931428909302, 0.09391097724437714, 0.09140139818191528, 0.0944393053650856, 0.08836349099874496], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 5, 0, 1, 9], [4, 0, 3, 5, 0], [59, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3022657523711345, 2.3028677313508235, 2.301815249207879, 2.3017777956046954, 2.3010961010219586, 2.3013101212336893], "accuracy": [0.09206181764602661, 0.09126931428909302, 0.09391097724437714, 0.09140139818191528, 0.0944393053650856, 0.08836349099874496], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 3, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3022657523711345, 2.3028677313508235, 2.301815249207879, 2.3017777956046954, 2.3010961010219586, 2.3013101212336893], "accuracy": [0.09206181764602661, 0.09126931428909302, 0.09391097724437714, 0.09140139818191528, 0.0944393053650856, 0.08836349099874496], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]