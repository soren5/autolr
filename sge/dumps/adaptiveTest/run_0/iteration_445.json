[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1], [1, 4, 7, 6], [3, 7, 6], [64, 55], [0, 1, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8385714292526245, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 9, 7, 4, 3, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.086308215886626, 1.9000996979645546, 1.1323890342940397, 0.9723089162337546, 0.7755556211589963, 0.6929079110533286, 0.6462892919105703, 0.6185004914661897, 0.598148681602269, 0.5729266684745926, 0.5544425020789773, 0.5291571924321451, 0.5044282902784477, 0.4977832047568651, 0.4830276863198034, 0.4691790338473282, 0.45558190804745907, 0.4437498694767711, 0.43279537023208114, 0.4245928626499156, 0.4321587017663891, 0.41302140863060466, 0.40900568093889506, 0.38299725441774596, 0.37609817182320204, 0.36842667955716746, 0.3701850775919098, 0.3581758405451824, 0.34919373209859716, 0.33625802821675943, 0.3230693267202963, 0.33699820759573224, 0.3255896926784339], "accuracy": [0.3288865387439728, 0.36785101890563965, 0.6161669492721558, 0.6619997620582581, 0.7136441469192505, 0.7474573850631714, 0.7623828053474426, 0.7689869403839111, 0.7847048044204712, 0.7905164361000061, 0.8005547523498535, 0.8092722296714783, 0.8133667707443237, 0.8170651197433472, 0.8260467648506165, 0.8286884427070618, 0.8367455005645752, 0.8368775844573975, 0.8384625315666199, 0.841500461101532, 0.8416325449943542, 0.8474441766738892, 0.847840428352356, 0.8598600029945374, 0.8573504090309143, 0.8651432991027832, 0.8617091774940491, 0.8632941246032715, 0.8679170608520508, 0.8697662353515625, 0.8795403242111206, 0.8732003569602966, 0.8729361891746521], "val_loss": [1.8571797098432268, 0.9794067655290876, 0.7295667273657662, 0.6112004688807896, 0.5355635200228009, 0.49942708015441895, 0.5045744010380336, 0.45627011571611675, 0.48180605684007916, 0.4336227774620056, 0.40890792437962126, 0.39688609327588764, 0.38740815435137066, 0.3972053698131016, 0.365112236567906, 0.3818209341594151, 0.3630151408059256, 0.3435533898217337, 0.3443596873964582, 0.3452967575618199, 0.3398065481867109, 0.3462501083101545, 0.32838147027151926, 0.323484514440809, 0.316038293497903, 0.3121796080044338, 0.3163983055523464, 0.3132414221763611, 0.3170504995754787, 0.31497145550591604, 0.32483106000082834, 0.3363562992640904, 0.3090210812432425], "val_accuracy": [0.24433332681655884, 0.6463333368301392, 0.6853333115577698, 0.7183333039283752, 0.753333330154419, 0.7680000066757202, 0.750333309173584, 0.7929999828338623, 0.781000018119812, 0.8016666769981384, 0.8096666932106018, 0.8216666579246521, 0.831333339214325, 0.8246666789054871, 0.8363333344459534, 0.8326666951179504, 0.8383333086967468, 0.8420000076293945, 0.8476666808128357, 0.8446666598320007, 0.846666693687439, 0.8510000109672546, 0.8539999723434448, 0.8513333201408386, 0.8553333282470703, 0.8579999804496765, 0.8603333234786987, 0.8656666874885559, 0.8579999804496765, 0.8643333315849304, 0.859333336353302, 0.8500000238418579, 0.862333357334137]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 4, 7, 6], [3, 7, 6], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7777143120765686, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.141276163463469, 1.5885283549574183, 1.2468133547428562, 1.0501604247417557, 0.9326132147335153, 0.8507543578202682, 0.8061229975515463, 0.7681323982044029, 0.7238396615431593, 0.7367442180971506, 0.7171944226917574, 0.6819999430630233, 0.6623231401501425, 0.6264849421118607, 0.6206711597761316, 0.6057772881571234], "accuracy": [0.28120461106300354, 0.45291242003440857, 0.5350680351257324, 0.6041474342346191, 0.651168942451477, 0.6791704893112183, 0.6837934255599976, 0.7077004313468933, 0.7273808121681213, 0.7160216569900513, 0.7213049530982971, 0.7448157668113708, 0.7448157668113708, 0.7577598690986633, 0.7593448758125305, 0.7692511081695557], "val_loss": [1.545125927243914, 1.0926664556775774, 0.8763400486537388, 0.8417983566011701, 0.6428396872111729, 0.6182909863335746, 0.6431608710970197, 0.5500928504126412, 0.6116862637656075, 0.5944827113832746, 0.5051765612193516, 0.5868768692016602, 0.5297232014792306, 0.48568802220480783, 0.5367617266518729, 0.48880527700696674], "val_accuracy": [0.42100000381469727, 0.5713333487510681, 0.6313333511352539, 0.6306666731834412, 0.7070000171661377, 0.7160000205039978, 0.7149999737739563, 0.7443333268165588, 0.7133333086967468, 0.7239999771118164, 0.7856666445732117, 0.7283333539962769, 0.7436666488647461, 0.7696666717529297, 0.75, 0.7749999761581421]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 9], [3, 7, 6], [64, 55], [0, 1, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7771428823471069, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 9, 6, 5, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.116644821304293, 1.8537279414683443, 1.3157747900166359, 0.76944312894538, 0.6418313883267626, 0.5937775422191229, 0.5614575327285104, 0.5322786841756554, 0.5157453780633394, 0.4977197426657525, 0.48468426176585605, 0.4880034651589069, 0.4504133666495385, 0.4494921087533759, 0.42692468905524494, 0.42453452050410334, 0.406499414278012, 0.4060082418130389, 0.3950089047243566, 0.38566626317276537, 0.378153217148236, 0.3751627153228255, 0.36574881842595836, 0.37139736902617726, 0.35432178890936566, 0.3440859171700531, 0.35237377467503117, 0.32604146339496237, 0.3365914709162419, 0.31877999161811094, 0.31616000895880597, 0.30785057310415, 0.302063698730669, 0.29761591674141236, 0.2897914681712067, 0.2809194122220799, 0.29244664234649614, 0.28006907909411827, 0.27543309819444833, 0.2642922723699539], "accuracy": [0.31660282611846924, 0.352529376745224, 0.5399550795555115, 0.7124554514884949, 0.759609043598175, 0.7684586048126221, 0.7928939461708069, 0.7996301651000977, 0.804649293422699, 0.8109893202781677, 0.822348415851593, 0.8152159452438354, 0.829216718673706, 0.8289526104927063, 0.8368775844573975, 0.8372738361358643, 0.8454629778862, 0.8479725122451782, 0.8495575189590454, 0.8541803956031799, 0.8560295701026917, 0.857218325138092, 0.8588033318519592, 0.8564258217811584, 0.8643507957458496, 0.8681812286376953, 0.8652753829956055, 0.8757099509239197, 0.8679170608520508, 0.8792761564254761, 0.8787478804588318, 0.8833707571029663, 0.8835028409957886, 0.885219931602478, 0.8893144726753235, 0.8922203183174133, 0.8864086866378784, 0.8894465565681458, 0.8971073627471924, 0.8992207050323486], "val_loss": [1.8925621168954032, 1.4862995828901018, 0.6483924388885498, 0.5228042772838047, 0.4707803045000349, 0.444614052772522, 0.41723629406520296, 0.4289737343788147, 0.3980366161891392, 0.388813316822052, 0.3868568369320461, 0.3650269848959787, 0.3672511322157724, 0.3640686273574829, 0.36876223768506733, 0.34832204239709036, 0.36104551383427214, 0.34599203722817556, 0.35658458300999235, 0.359968296119145, 0.37228808232716154, 0.3565545082092285, 0.3509019613265991, 0.3433316946029663, 0.3399777923311506, 0.3500220094408308, 0.3381323218345642, 0.3381556527955191, 0.3294110468455723, 0.3282573478562491, 0.33170375653675627, 0.3368109294346401, 0.3277731112071446, 0.3277152861867632, 0.31264850922993254, 0.30987206527165007, 0.3172194276537214, 0.3207152485847473, 0.3152430142675127, 0.31584371839250835], "val_accuracy": [0.2253333330154419, 0.4753333330154419, 0.7103333473205566, 0.7593333125114441, 0.7836666703224182, 0.7906666398048401, 0.8230000138282776, 0.8003333210945129, 0.8296666741371155, 0.8303333520889282, 0.8263333439826965, 0.8389999866485596, 0.8316666483879089, 0.8336666822433472, 0.8346666693687439, 0.8500000238418579, 0.8413333296775818, 0.8510000109672546, 0.8463333249092102, 0.8443333506584167, 0.8320000171661377, 0.8510000109672546, 0.8566666841506958, 0.8510000109672546, 0.8600000143051147, 0.8500000238418579, 0.859333336353302, 0.8523333072662354, 0.862333357334137, 0.859333336353302, 0.8603333234786987, 0.8686666488647461, 0.8650000095367432, 0.8673333525657654, 0.878333330154419, 0.8769999742507935, 0.8733333349227905, 0.8733333349227905, 0.8693333268165588, 0.875333309173584]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [2, 9], [3, 7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7497143149375916, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 3, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1166236986652294, 1.8828321084559254, 1.2475108604200638, 0.74049664288464, 0.636066581098836, 0.5937450193316473, 0.5695729894865427, 0.5404769239676328, 0.5043121403029818, 0.4895537248408522, 0.48161627258748707, 0.49370276750023684, 0.453812028108067, 0.4654060665524442, 0.43273290860701735, 0.4269950940089061, 0.41684691929751067, 0.4069734415074602, 0.3989421060418787, 0.39877695075084096, 0.38422240406026803, 0.3791369027300061, 0.3716787689783318], "accuracy": [0.31726324558258057, 0.35041606426239014, 0.5658433437347412, 0.7231541275978088, 0.7667415142059326, 0.7765156626701355, 0.7837802171707153, 0.7952714562416077, 0.8092722296714783, 0.8164047002792358, 0.8214238286018372, 0.8152159452438354, 0.8273676037788391, 0.8281601071357727, 0.8352925777435303, 0.8368775844573975, 0.8411042094230652, 0.8448025584220886, 0.8488970994949341, 0.8495575189590454, 0.8555012345314026, 0.8581429123878479, 0.8568220734596252], "val_loss": [1.8822620936802454, 1.4705771378108434, 0.6126378093447004, 0.512700983456203, 0.46147096157073975, 0.4434270177568708, 0.41529862369809833, 0.40460643598011564, 0.3985041550227574, 0.38891362292425974, 0.38672644751412527, 0.3722597190311977, 0.3793497766767229, 0.36193754843303133, 0.3697164910180228, 0.3504894631249564, 0.3706178750310625, 0.3472449779510498, 0.36923653738839285, 0.35453860248838154, 0.37725841999053955, 0.34836258207048687, 0.3540757894515991], "val_accuracy": [0.23100000619888306, 0.4256666600704193, 0.734666645526886, 0.765333354473114, 0.7850000262260437, 0.7940000295639038, 0.8143333196640015, 0.8203333616256714, 0.8226666450500488, 0.8263333439826965, 0.8256666660308838, 0.8413333296775818, 0.8316666483879089, 0.8396666646003723, 0.8326666951179504, 0.847000002861023, 0.8379999995231628, 0.8553333282470703, 0.8410000205039978, 0.8463333249092102, 0.8393333554267883, 0.8543333411216736, 0.8553333282470703]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 7, 7, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [2, 9], [5, 7], [3], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.6657142639160156, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 3, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1174781954661652, 1.6414581866642866, 1.0142876916022396, 2.1163956944842646, 1039705321812.6204, NaN, NaN, NaN], "accuracy": [0.31079116463661194, 0.4571390748023987, 0.6457535624504089, 0.5769383311271667, 0.25280675292015076, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.4430083887917655, 0.820967401776995, 0.6283877577100482, 8.427284513201032, NaN, NaN, NaN, NaN], "val_accuracy": [0.42399999499320984, 0.6026666760444641, 0.7126666903495789, 0.2993333339691162, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 5, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1], [2, 9], [5, 7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.6622856855392456, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1174069174906487, 1.6406441177942057, 1.019531499353839, 1.210926293523761, 1.512638240174815, 1.4418506069961807, 2.2231359325616022, 2.4184497939817593], "accuracy": [0.3109232485294342, 0.4567428231239319, 0.6440364718437195, 0.6042794585227966, 0.5684850215911865, 0.5311055183410645, 0.5110289454460144, 0.3516048192977905], "val_loss": [1.4429973874773299, 0.8115280866622925, 0.6336144549506051, 0.7609342677252633, 1.1586882046290807, 0.7856424025126866, 1.0327497550419398, 2.0786288806370328], "val_accuracy": [0.42399999499320984, 0.6053333282470703, 0.7160000205039978, 0.6919999718666077, 0.5653333067893982, 0.6883333325386047, 0.5419999957084656, 0.13233333826065063]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [5, 0, 3, 3, 0], [68, 84, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1], [2, 9], [3, 7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [9.139207105217135, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20697398483753204, 0.11993131786584854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.5667597906930104, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [2, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1], [2, 4], [3, 7], [10], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, sigma), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [3, 1, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1], [2, 9], [5, 7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301911886042891, 2.303015842665739, 2.314863063246425, 2.492963340886753, 5.340045943440951, 12.324850778475161], "accuracy": [0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9738458224705286, 1.9769065039498466, 2.0139899253845215, 2.684603691101074, 7.987350736345563, 14.221954345703125], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 4, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1], [1, 2], [3, 7], [64, 55], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.0959598398854944e+27, 4.183999878902634, 10.139641744396737, 17.24019452020587, 24.433766614334253, 31.63261985753616], "accuracy": [0.06207898631691933, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.335611207144601, 6.257818222045898, 12.238422121320452, 18.4048216683524, 24.574737548828125, 30.742671421595983], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 0, 9, 0, 1, 9], [3, 5, 3, 3, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [1, 2], [3, 7], [10], [1, 1, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12310130894184113, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [2, 9], [5, 7], [10], [1, 1, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 3, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [29564712429.123974, 1.642345226269554e+16, 1.8159784785438292e+24, 1.9090381717093504e+32, NaN, NaN], "accuracy": [0.10857218503952026, 0.10698718577623367, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [21700464270189.715, 1.6918105309313574e+18, 1.7682095962964112e+26, 1.808713799184873e+34, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [3, 0, 8, 0, 1, 9], [3, 0, 3, 3, 0], [76, 40, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1], [2, 9], [3, 7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [18, 13, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1], [2, 9], [3, 7], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [4, 0, 3, 3, 0], [86, 84, 6], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [2, 9], [5, 7], [10], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301915832246693, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0936468094587326, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [5, 4, 3, 3, 0], [45, 84, 6], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1], [2, 9], [5, 7], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.298156352475024e+23, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.264939810282454e+27, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [4, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1], [7, 9, 5], [3, 7], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 4, 4, 3, 1, 1, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.366606420136052, 3.038561530416164, 4.889547180931062, 8.08838235250223, 12.216852238621962, 17.828958543095496], "accuracy": [0.0886276587843895, 0.09681680053472519, 0.1022322028875351, 0.09813763201236725, 0.10236428678035736, 0.10130762308835983], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [5, 5, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1], [2, 0], [3, 7], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.08657142519950867, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 1, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, grad)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3427351260811915, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08611807972192764, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9904289245605469, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 2, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1], [2, 9], [3, 7], [94], [0, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.06457142531871796, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3011847422847564, 2.300880981773323, 2.3025421901952794, 2.3025895984275797, 2.303007737095361, 2.307278092164783, 2.367699479036453, 3.1500107702278677, 6.523935958646654], "accuracy": [0.09074098616838455, 0.0882314071059227, 0.09047681838274002, 0.11345925182104111, 0.10645885765552521, 0.09747721254825592, 0.09694888442754745, 0.1006472036242485, 0.0952318087220192], "val_loss": [1.9692585127694267, 1.9734257970537459, 1.9736812455313546, 1.9736659186226981, 1.97466584614345, 1.9851892335074288, 2.2057273047310963, 3.8972195216587613, 8.652765819004603], "val_accuracy": [0.10400000214576721, 0.0793333351612091, 0.10400000214576721, 0.11033333092927933, 0.1003333330154419, 0.10066666454076767, 0.10000000149011612, 0.09833333641290665, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [6, 3, 8, 0, 1, 9], [3, 1, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0], [2, 9], [3, 7], [64], [0, 1, 1, 1, 1], [2, 7, 8, 2, 9, 3, 9], [3, 3, 0], [6, 14, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma)", "other_info": {"loss": [2.3031688266190335, 2.3018884780368847, 2.301093095203259, 2.3034644222939726, 2.3024028309930538, 2.303172513179303], "accuracy": [0.08730682730674744, 0.08849557489156723, 0.0940430611371994, 0.09008057415485382, 0.0870426595211029, 0.09008057415485382], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]