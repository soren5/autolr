[{"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.847428560256958, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.035424602817409, 1.1075878318007029, 0.7891457066355191, 0.7066463030891459, 0.6419223787337089, 0.5906289548622603, 0.5522488578514353, 0.5241904372017003, 0.5030130813339398, 0.4872642590101794, 0.4531208592800495, 0.43500279717756507, 0.418361379785025, 0.41457780347350975, 0.3939523263661585, 0.38080555691443196, 0.37628052780546645, 0.3595261924011108, 0.35837464840530864, 0.3390668195866323, 0.3419595095011001, 0.33305990735710794, 0.3193829602506167, 0.3017656382568414, 0.2973980777307099, 0.2898843619628526, 0.2909852116965441, 0.2807019329019085, 0.2744763218699949, 0.2640362362528773, 0.25434707755449504, 0.25103665149254395, 0.2509126999610923, 0.24565316734139506], "accuracy": [0.31303659081459045, 0.6067890524864197, 0.7059833407402039, 0.7320036888122559, 0.7584202885627747, 0.783119797706604, 0.7944789528846741, 0.8030643463134766, 0.8104609847068787, 0.8193105459213257, 0.834632158279419, 0.8421608805656433, 0.8450667262077332, 0.8475762605667114, 0.8556333184242249, 0.8619733452796936, 0.8581429123878479, 0.868049144744873, 0.8654074668884277, 0.8708229064941406, 0.8755778670310974, 0.8737286925315857, 0.8804649114608765, 0.8842953443527222, 0.8877294659614563, 0.8893144726753235, 0.8920882344245911, 0.8932769894599915, 0.8975036144256592, 0.8982961177825928, 0.9029190540313721, 0.9046360850334167, 0.9063531756401062, 0.9075419306755066], "val_loss": [0.9099338395254952, 0.6348240886415754, 0.5664905820574079, 0.5235362223216465, 0.479866691998073, 0.449662378856114, 0.4364245619092669, 0.4036909682410104, 0.4025960649762835, 0.38090098755700247, 0.37171168838228497, 0.3657333936010088, 0.3644453116825649, 0.3477771707943508, 0.33293086290359497, 0.3330553003719875, 0.3267119186265128, 0.32232305833271574, 0.32071724959782194, 0.316436835697719, 0.31423598527908325, 0.31377220153808594, 0.30067569868905203, 0.30336375747408184, 0.2977242980684553, 0.29995771816798616, 0.30391137089048115, 0.2960738795144217, 0.28586130482809885, 0.2988338725907462, 0.2973998018673488, 0.2910815477371216, 0.3005466376032148, 0.285686867577689], "val_accuracy": [0.6393333077430725, 0.7239999771118164, 0.7409999966621399, 0.7556666731834412, 0.7836666703224182, 0.7973333597183228, 0.8023333549499512, 0.8209999799728394, 0.8199999928474426, 0.8323333263397217, 0.8346666693687439, 0.8389999866485596, 0.8393333554267883, 0.8483333587646484, 0.8550000190734863, 0.8550000190734863, 0.8566666841506958, 0.8553333282470703, 0.862333357334137, 0.859666645526886, 0.862333357334137, 0.8656666874885559, 0.8679999709129333, 0.8706666827201843, 0.8686666488647461, 0.8709999918937683, 0.8679999709129333, 0.8686666488647461, 0.8793333172798157, 0.8679999709129333, 0.8756666779518127, 0.875333309173584, 0.8700000047683716, 0.8793333172798157]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [1, 3, 6, 2, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 0, 8, 0, 3, 9], [3, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.843999981880188, "mapping_values": [1, 23, 23, 12, 11, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))), tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0354256826920234, 1.1072973159042567, 0.788997932904432, 0.7049392041686409, 0.6410788716641337, 0.5898885449020381, 0.5523796164443102, 0.5225756048227204, 0.5025646601134539, 0.4842624106679248, 0.45217673904655503, 0.4346175904224231, 0.41813206286903354, 0.4121408672884487, 0.3931953306990749, 0.37887831106083253, 0.37527710817761156, 0.3542940988752899, 0.3601729573748131, 0.3392261058473946, 0.3434540134662839, 0.33824317725484776, 0.3248699794056834, 0.30033300089373205, 0.2974460468103605, 0.29315412418874753, 0.29521352927351924, 0.28361917558819816, 0.2800064284205358, 0.26769740228655475, 0.26236992024584943, 0.25487152356450204, 0.25394660868208246, 0.23868914357919294, 0.23161382255001847, 0.23310519224065973, 0.22014936359567003, 0.22049426353051757, 0.20677583214235565, 0.20958658475382075, 0.20105091421879073, 0.1995924957506944, 0.19553287991356652, 0.18665378772705427, 0.17811817074251873, 0.18270023314944348], "accuracy": [0.3131686747074127, 0.6065248847007751, 0.7067758440971375, 0.7317395210266113, 0.7580240368843079, 0.7845727205276489, 0.7940827012062073, 0.8037247657775879, 0.8127063512802124, 0.8208954930305481, 0.8321225643157959, 0.841500461101532, 0.8479725122451782, 0.8507462739944458, 0.8545766472816467, 0.8568220734596252, 0.8605204224586487, 0.8688416481018066, 0.8671245574951172, 0.8742570281028748, 0.8732003569602966, 0.8725399374961853, 0.878351628780365, 0.884691596031189, 0.889578640460968, 0.8882578015327454, 0.8874653577804565, 0.8936732411384583, 0.8932769894599915, 0.8961827754974365, 0.8969752788543701, 0.9038436412811279, 0.9017302989959717, 0.9099194407463074, 0.9104477763175964, 0.9109761118888855, 0.9166556596755981, 0.9154669046401978, 0.9222031235694885, 0.9215427041053772, 0.9216747879981995, 0.9261656403541565, 0.9260335564613342, 0.9290714859962463, 0.9310526847839355, 0.9317131042480469], "val_loss": [0.9099112578800747, 0.6350820064544678, 0.567018849509103, 0.5239710978099278, 0.4779539278575352, 0.4504327263150896, 0.43338934012821745, 0.40242587668555124, 0.39653702293123516, 0.37681382043021067, 0.3682712401662554, 0.3661719986370632, 0.35619401931762695, 0.34437313250132967, 0.3333991255078997, 0.33760099751608713, 0.3246901716504778, 0.32212104967662264, 0.3216030938284738, 0.3212722795350211, 0.31447793756212505, 0.3169385279927935, 0.30187909092221943, 0.3056681071008955, 0.3059546266283308, 0.30299941982541767, 0.30445003509521484, 0.30041872603552683, 0.2847811494554792, 0.29908781392233713, 0.2945284758295332, 0.29430282967431204, 0.29415121248790194, 0.2883703623499189, 0.29788362979888916, 0.29213662658418926, 0.30142600195748465, 0.28715734822409494, 0.30195999997002737, 0.2925282972199576, 0.30315004927771433, 0.306158185005188, 0.290053733757564, 0.30188511099134174, 0.296445974281856, 0.30933621100017], "val_accuracy": [0.6396666765213013, 0.7236666679382324, 0.7406666874885559, 0.7566666603088379, 0.7829999923706055, 0.7976666688919067, 0.8003333210945129, 0.8246666789054871, 0.8263333439826965, 0.8366666436195374, 0.8373333215713501, 0.8410000205039978, 0.843999981880188, 0.8536666631698608, 0.8553333282470703, 0.8519999980926514, 0.8546666502952576, 0.8543333411216736, 0.8600000143051147, 0.8583333492279053, 0.8600000143051147, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8663333058357239, 0.8676666617393494, 0.8683333396911621, 0.8700000047683716, 0.8773333430290222, 0.8709999918937683, 0.8723333477973938, 0.8736666440963745, 0.8766666650772095, 0.878000020980835, 0.8773333430290222, 0.8769999742507935, 0.878333330154419, 0.8796666860580444, 0.8790000081062317, 0.8806666731834412, 0.8849999904632568, 0.8803333044052124, 0.8806666731834412, 0.8833333253860474, 0.8849999904632568, 0.8793333172798157]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 3, 6, 1, 4, 4, 6, 3, 1, 5, 2, 0, 4, 1, 5, 5, 7, 2, 2, 9, 8, 8, 1, 6, 3, 0, 6, 3, 3, 5, 4, 8, 8, 1, 0, 3, 9], [3, 2, 1, 2, 0, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8434285521507263, "mapping_values": [1, 60, 60, 36, 24, 4, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)))))), grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(grad, grad), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))))))), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(grad, grad)))))))))), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))))))))), tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, grad))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0354254579248052, 1.107315472922919, 0.7890558407181022, 0.7056108481612235, 0.642307747396039, 0.5902678890235199, 0.5520039225896871, 0.5217048915236177, 0.5015631102536254, 0.4835435162760783, 0.45252280396839506, 0.43261586506967264, 0.4183189188012232, 0.4095097107225012, 0.3920111125368311, 0.37920206595468575, 0.37303658836490333, 0.35354218622633904, 0.35926799269290005, 0.33753126635684977, 0.34363641851944393, 0.3375374640432473, 0.3242641447825187, 0.3087812242191765, 0.29681161088541025, 0.28964364770349654, 0.289683337504318, 0.28124045442360235, 0.2734601120978078, 0.2661417836345277, 0.2637519620653188, 0.2476822068788561, 0.24893957306018927, 0.23985002920761747], "accuracy": [0.3131686747074127, 0.6066569685935974, 0.7065116763114929, 0.7316074371337891, 0.7553823590278625, 0.7833839654922485, 0.7942147850990295, 0.8047813773155212, 0.8127063512802124, 0.8234050869941711, 0.8322546482086182, 0.843481719493866, 0.8457271456718445, 0.8495575189590454, 0.8561616539955139, 0.8610487580299377, 0.8628978729248047, 0.8669924736022949, 0.8656716346740723, 0.8713511824607849, 0.872407853603363, 0.8730682730674744, 0.8730682730674744, 0.8800686597824097, 0.8891823887825012, 0.8894465565681458, 0.8914278149604797, 0.8938053250312805, 0.8972394466400146, 0.8951261639595032, 0.900409460067749, 0.9030511379241943, 0.9039757251739502, 0.910711944103241], "val_loss": [0.9099087374550956, 0.6351609911237445, 0.5677570615495954, 0.5252259629113334, 0.4787729297365461, 0.45082082067217144, 0.4328434722764151, 0.40220836230686735, 0.4006812998226711, 0.378752384866987, 0.36892116921288626, 0.3650977100644793, 0.3547030006136213, 0.34519911663872854, 0.3306155630520412, 0.3390666927610125, 0.3283226490020752, 0.32729280846459524, 0.321218524660383, 0.3209124973842076, 0.31825177158628193, 0.3221224972179958, 0.30168494156428743, 0.30389727864946636, 0.30977565901620047, 0.2988258855683463, 0.30479839869907926, 0.29743387017931255, 0.28525800364358084, 0.30946492297308786, 0.2904391459056309, 0.2939491697720119, 0.29468934876578196, 0.2952356849397932], "val_accuracy": [0.6396666765213013, 0.7233333587646484, 0.7386666536331177, 0.7543333172798157, 0.7866666913032532, 0.7976666688919067, 0.8046666383743286, 0.8226666450500488, 0.8223333358764648, 0.8356666564941406, 0.8353333473205566, 0.8416666388511658, 0.8423333168029785, 0.8539999723434448, 0.8573333621025085, 0.8539999723434448, 0.859333336353302, 0.8529999852180481, 0.8613333106040955, 0.8610000014305115, 0.862666666507721, 0.8613333106040955, 0.871666669845581, 0.8690000176429749, 0.862333357334137, 0.8679999709129333, 0.8686666488647461, 0.8723333477973938, 0.8766666650772095, 0.8640000224113464, 0.8766666650772095, 0.8736666440963745, 0.8713333606719971, 0.875]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [1, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8431428670883179, "mapping_values": [1, 59, 59, 35, 24, 5, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.add(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), grad)), tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.divide_no_nan(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)))))), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.034436782542284, 1.1093622689092195, 0.7911338768048198, 0.7078181206668294, 0.6458797534506288, 0.5939695568699421, 0.5531308273865388, 0.5250235838605711, 0.5078078483892801, 0.4855753458990098, 0.4557023805209029, 0.43993574947713154, 0.42319587392656477, 0.412142358215462, 0.3989065143182183, 0.37910453725831067, 0.38285645831530324, 0.3616342658277642, 0.3661406028067604, 0.3434666836455419, 0.3537811216086507, 0.334299249522139, 0.3234558750208201, 0.30417752924879954, 0.29800179062219045, 0.2916967982605637, 0.2933515706090344, 0.2830003115361188, 0.27152996466868684, 0.2616574575738538, 0.26366037824536204, 0.2562829458978056, 0.25268330661895616, 0.24601804066005084, 0.2325153016041078, 0.23091388761942114, 0.21808812653013837, 0.21415564153708047, 0.20754792638789268], "accuracy": [0.3131686747074127, 0.6056002974510193, 0.7061154246330261, 0.7346453666687012, 0.7561748623847961, 0.7812706232070923, 0.7905164361000061, 0.8017435073852539, 0.8120459914207458, 0.8220842480659485, 0.8314621448516846, 0.8350284099578857, 0.8450667262077332, 0.8494254350662231, 0.8516708612442017, 0.8582749962806702, 0.8562937378883362, 0.867520809173584, 0.8618412613868713, 0.8710870146751404, 0.8698983192443848, 0.8761062026023865, 0.8767666220664978, 0.8861445188522339, 0.8874653577804565, 0.8878615498542786, 0.8928807377815247, 0.8963148593902588, 0.8981640338897705, 0.8980319499969482, 0.8985602855682373, 0.9026548862457275, 0.9030511379241943, 0.9093911051750183, 0.9116365313529968, 0.9145423173904419, 0.9183727502822876, 0.917580246925354, 0.9177123308181763], "val_loss": [0.9040318557194301, 0.6326329026903424, 0.572203346661159, 0.5326873234340123, 0.4823641947337559, 0.45190746443612234, 0.4350459575653076, 0.4044773748942784, 0.3977503946849278, 0.38225259099687847, 0.37195747239249094, 0.3670740042413984, 0.3578666533742632, 0.3463483878544399, 0.3355072055544172, 0.34204429388046265, 0.32913664409092497, 0.3262108394077846, 0.3239909751074655, 0.32880583831242155, 0.3194143772125244, 0.31985439573015484, 0.3028456824166434, 0.3006343586104257, 0.30606659821101595, 0.30261493580681936, 0.3016436440604074, 0.3041233079774039, 0.2866963659014021, 0.30498723472867695, 0.2958375726427351, 0.29144790342875887, 0.2971357873507908, 0.28684427056993755, 0.29479722465787617, 0.29790535143443514, 0.2978623253958566, 0.29075335604803904, 0.3033224940299988], "val_accuracy": [0.637666642665863, 0.7296666502952576, 0.7429999709129333, 0.7519999742507935, 0.7846666574478149, 0.7903333306312561, 0.8013333082199097, 0.8190000057220459, 0.828000009059906, 0.8330000042915344, 0.8353333473205566, 0.8410000205039978, 0.8396666646003723, 0.8479999899864197, 0.8543333411216736, 0.8519999980926514, 0.8546666502952576, 0.856333315372467, 0.8636666536331177, 0.8546666502952576, 0.859000027179718, 0.8629999756813049, 0.8690000176429749, 0.8700000047683716, 0.8636666536331177, 0.8653333187103271, 0.8700000047683716, 0.8679999709129333, 0.8773333430290222, 0.8676666617393494, 0.871666669845581, 0.8730000257492065, 0.8700000047683716, 0.8813333511352539, 0.8743333220481873, 0.8763333559036255, 0.8793333172798157, 0.8763333559036255, 0.8766666650772095]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8382856845855713, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0354244792308664, 1.1075990061246015, 0.788914602178514, 0.7056419844199732, 0.6410383533461533, 0.5909938059856453, 0.5516217357730349, 0.5255899328195722, 0.5047395695721736, 0.48705227218205194, 0.4520962336878688, 0.437845649118232, 0.4218938653385005, 0.414774162374735, 0.39397023927423824, 0.38035594670291684, 0.37422578647514265, 0.3550463067919996, 0.35987383088636016, 0.33761694562465067], "accuracy": [0.31303659081459045, 0.6069211363792419, 0.7074362635612488, 0.733588695526123, 0.7573636174201965, 0.7835160493850708, 0.7936864495277405, 0.8038568496704102, 0.8128384351730347, 0.8178576231002808, 0.8319904804229736, 0.8400475382804871, 0.8437458872795105, 0.8479725122451782, 0.8549728989601135, 0.8595958352088928, 0.8638224601745605, 0.8679170608520508, 0.8654074668884277, 0.8716153502464294], "val_loss": [0.9099344185420445, 0.6345984595162528, 0.5664360182625907, 0.5242573533739362, 0.47802235398973736, 0.4501033340181623, 0.4360724517277309, 0.40161495549338205, 0.3995848298072815, 0.38291903904506136, 0.3685604419027056, 0.3648403116634914, 0.3558304565293448, 0.34945746830531527, 0.33319778953279766, 0.339287953717368, 0.32655511583600727, 0.3259317023413522, 0.3244431359427316, 0.32110714060919626], "val_accuracy": [0.6393333077430725, 0.7236666679382324, 0.7413333058357239, 0.7549999952316284, 0.7856666445732117, 0.796999990940094, 0.8003333210945129, 0.8223333358764648, 0.8259999752044678, 0.8309999704360962, 0.8360000252723694, 0.8403333425521851, 0.8433333039283752, 0.8496666550636292, 0.859000027179718, 0.8496666550636292, 0.8583333492279053, 0.8510000109672546, 0.856333315372467, 0.8586666584014893]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8097142577171326, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2579844982049972, 1.8286701801225982, 1.280619203201957, 0.9277821071647682, 0.8380971943162231, 0.7643909319249189, 0.7200587319581422, 0.6940773019795689, 0.6626832426153295, 0.6359977814672866, 0.6011566251906043, 0.5805387761157974, 0.5543603812147676, 0.5382242567739813, 0.5161619648453487, 0.5081989912623979, 0.4919276666789243, 0.4625660198877327, 0.46947295253051036, 0.4516318235037082, 0.44222620436622795, 0.4302227342716061, 0.4191312960834551, 0.39607021949074256, 0.3852747830858383, 0.3784873440100013, 0.36510707694053524, 0.36854674002167226, 0.355322315570559, 0.3412624479379353, 0.3336313027456027, 0.3346005662195183, 0.3273613461335227, 0.3130465228488936, 0.31084462174838956, 0.3065609159667683, 0.2971591824679689, 0.29199156060415316, 0.28011897823530624, 0.2783212228013288, 0.2738355415694985, 0.2625745683062141, 0.26519422881229443, 0.25673353961351414, 0.25082221306814195, 0.2517925947136993, 0.24793829822332442, 0.24205445902198927, 0.23130180755500482, 0.22455201500623517, 0.22136053035146194], "accuracy": [0.19138818979263306, 0.4239862561225891, 0.5672962665557861, 0.6655659675598145, 0.6884163022041321, 0.71100252866745, 0.7199841737747192, 0.7388719916343689, 0.752212405204773, 0.7604015469551086, 0.778761088848114, 0.78113853931427, 0.7921014428138733, 0.7968564033508301, 0.8092722296714783, 0.8088759779930115, 0.8131026029586792, 0.8261788487434387, 0.8261788487434387, 0.8374059200286865, 0.8387266993522644, 0.8405758738517761, 0.8462554216384888, 0.8504821062088013, 0.8610487580299377, 0.8578787446022034, 0.8631620407104492, 0.8676528930664062, 0.8672566413879395, 0.8762382864952087, 0.8755778670310974, 0.8754457831382751, 0.8798044919967651, 0.8854840993881226, 0.8849557638168335, 0.8845595121383667, 0.887597382068634, 0.8898428082466125, 0.8965790271759033, 0.8943336606025696, 0.8967111110687256, 0.9000132083892822, 0.8968431949615479, 0.9012019634246826, 0.9005415439605713, 0.9037115573883057, 0.901862382888794, 0.9084665179252625, 0.9101836085319519, 0.9165235757827759, 0.9126931428909302], "val_loss": [1.8094258989606584, 0.9827204431806292, 0.7230967794145856, 0.6668073790413993, 0.5837625946317401, 0.5577201332364764, 0.5485308851514544, 0.5215498208999634, 0.5041991472244263, 0.47474004541124615, 0.46439433097839355, 0.44123731340680805, 0.42516872712544035, 0.4129810929298401, 0.4009538974080767, 0.3931754742349897, 0.38680641991751535, 0.38178575890404837, 0.3738310762814113, 0.36580653701509747, 0.36032131740025114, 0.357728259904044, 0.34754823786871775, 0.3389229604176113, 0.33230156557900564, 0.32927692787987844, 0.330312762941633, 0.3220853805541992, 0.31675219535827637, 0.31655681133270264, 0.31230672768184115, 0.31177869013377596, 0.3087236625807626, 0.3053023730005537, 0.30672195128032137, 0.3030376689774649, 0.29432517290115356, 0.299984199660165, 0.30008846521377563, 0.2991437997136797, 0.29568547010421753, 0.29729626859937397, 0.2997305052621024, 0.2947417412485395, 0.2945505040032523, 0.29859319755009245, 0.30109373160770964, 0.2952304056712559, 0.29951306751796175, 0.2976804631096976, 0.2984712379319327], "val_accuracy": [0.42899999022483826, 0.6510000228881836, 0.6896666884422302, 0.7089999914169312, 0.7396666407585144, 0.7426666617393494, 0.7540000081062317, 0.7636666893959045, 0.765666663646698, 0.7846666574478149, 0.7860000133514404, 0.7979999780654907, 0.8069999814033508, 0.8090000152587891, 0.812666654586792, 0.8163333535194397, 0.8240000009536743, 0.8306666612625122, 0.8316666483879089, 0.8423333168029785, 0.8386666774749756, 0.8413333296775818, 0.8460000157356262, 0.8553333282470703, 0.8553333282470703, 0.8573333621025085, 0.8519999980926514, 0.8613333106040955, 0.8613333106040955, 0.8666666746139526, 0.8646666407585144, 0.8673333525657654, 0.859666645526886, 0.8646666407585144, 0.8679999709129333, 0.8646666407585144, 0.8713333606719971, 0.8713333606719971, 0.871999979019165, 0.8756666779518127, 0.8769999742507935, 0.875333309173584, 0.875333309173584, 0.8736666440963745, 0.878333330154419, 0.8790000081062317, 0.8766666650772095, 0.878333330154419, 0.8766666650772095, 0.874666690826416, 0.8740000128746033]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 8, 2, 8, 6, 2, 8, 2, 8, 1, 6, 5, 0, 3, 3, 3, 6, 6, 8, 8, 2, 0, 3, 9], [1, 2, 1, 2, 0, 0, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [40, 98, 17, 17, 74, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [26, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7828571200370789, "mapping_values": [1, 60, 60, 35, 25, 7, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.square(grad), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), grad)), tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(grad, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(grad)))))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2813986585975057, 2.139998843625489, 1.6758733369166967, 1.3772665362206307, 1.0550347431271918, 0.9168881128776216, 0.8425644079943878, 0.8077366532682348, 0.7660509118897142, 0.7191538497000606, 0.692143356590664, 0.6831051900622678, 0.6611635444060671, 0.6370709164976176, 0.6090804108334508, 0.5919563450187881, 0.5682821996444094, 0.5561604343778846, 0.5409946584068568, 0.5381538955416773, 0.521657346679298, 0.5178086740103663, 0.49928466847166175, 0.48039561583302703, 0.47624432408042855, 0.47873131808997177, 0.45368269969207453, 0.4474856751650993, 0.4363475705040224, 0.4297041910443528, 0.4206747228262242, 0.41771761979944655, 0.40345579852611946, 0.3917797411894203, 0.39126525691959757, 0.3735488375668292, 0.3722265383838552, 0.36393185688708957, 0.3585608255011357, 0.35119821964363934, 0.35123633297994045, 0.3474500568637979, 0.33959973736241383, 0.3275885947148058, 0.32768176770591306, 0.3181928124811671, 0.32026037733631363, 0.31721134493852005, 0.31189084062880496, 0.30515426218218383, 0.29988440367775887, 0.28718416429608334, 0.2842710627666822, 0.2854568496623988, 0.27946584282723147, 0.273050588139485, 0.27338664841658217, 0.2624098090739093, 0.26083437012580596, 0.2623428988568519, 0.25386153785244914, 0.25121625878626347, 0.24882730683197418, 0.24189502706010943], "accuracy": [0.1472724825143814, 0.35147273540496826, 0.44630828499794006, 0.5354642868041992, 0.6308281421661377, 0.6639809608459473, 0.6909258961677551, 0.6940959095954895, 0.7153612375259399, 0.7272487282752991, 0.737947404384613, 0.7449478507041931, 0.750231146812439, 0.757099449634552, 0.7648923397064209, 0.7749306559562683, 0.7823272943496704, 0.7881389260292053, 0.796328067779541, 0.805177628993988, 0.8034605979919434, 0.8020076751708984, 0.8144234418869019, 0.8230088353157043, 0.819442629814148, 0.8227446675300598, 0.8297450542449951, 0.8338396549224854, 0.8396512866020203, 0.842028796672821, 0.8451988101005554, 0.8455950617790222, 0.8473120927810669, 0.8537842035293579, 0.8548408150672913, 0.8618412613868713, 0.8621054291725159, 0.8634262084960938, 0.8618412613868713, 0.8667283058166504, 0.8643507957458496, 0.8696341514587402, 0.8717474341392517, 0.8754457831382751, 0.8766345381736755, 0.8739928603172302, 0.8784837126731873, 0.8813894987106323, 0.8815215826034546, 0.8854840993881226, 0.8845595121383667, 0.8879936337471008, 0.8908994793891907, 0.8901069760322571, 0.893541157245636, 0.8927486538887024, 0.8948619961738586, 0.8997490406036377, 0.8988244533538818, 0.8963148593902588, 0.9010698795318604, 0.9052965044975281, 0.9010698795318604, 0.9068815112113953], "val_loss": [1.9006430762154716, 1.6188913413456507, 0.9771918909890311, 0.7518750429153442, 0.6753581762313843, 0.6611880915505546, 0.5844599008560181, 0.5742088045392718, 0.5420059817177909, 0.5373044354575021, 0.5191850151334491, 0.49674599511282785, 0.48866995743342806, 0.47191509178706575, 0.4595045532499041, 0.4460667542048863, 0.4339302267347063, 0.4255619559969221, 0.4146516578538077, 0.40762265239443096, 0.4000323414802551, 0.39648570333208355, 0.39182850292750765, 0.3853757807186672, 0.37995186022349764, 0.3748271805899484, 0.36940142086574007, 0.36589910302843365, 0.36397487776620047, 0.3574600560324533, 0.35357013770512175, 0.34774066720690044, 0.342925420829228, 0.3380415269306728, 0.33858080421175274, 0.33786665541785105, 0.33446684053965975, 0.33302620479038786, 0.3311119079589844, 0.32761850527354647, 0.3284439274242946, 0.3267421466963632, 0.32113726649965557, 0.3191882882799421, 0.3194766470364162, 0.31751352548599243, 0.3176724059241159, 0.3190288117953709, 0.31634401423590525, 0.3115765537534441, 0.3111169423375811, 0.3118066447121756, 0.30883082321711947, 0.30983599594661165, 0.3134857586451939, 0.31786032233919415, 0.31880001510892597, 0.3189928872244699, 0.3177444168499538, 0.3177143250192915, 0.31668637480054584, 0.32012368951525005, 0.32086260829653057, 0.32062879630497526], "val_accuracy": [0.39933332800865173, 0.5080000162124634, 0.6433333158493042, 0.6973333358764648, 0.7123333215713501, 0.7286666631698608, 0.7336666584014893, 0.7456666827201843, 0.7663333415985107, 0.7606666684150696, 0.7666666507720947, 0.7696666717529297, 0.7749999761581421, 0.778333306312561, 0.7940000295639038, 0.8050000071525574, 0.8066666722297668, 0.8136666417121887, 0.8166666626930237, 0.8203333616256714, 0.8199999928474426, 0.8286666870117188, 0.8263333439826965, 0.8289999961853027, 0.8353333473205566, 0.8396666646003723, 0.8396666646003723, 0.8446666598320007, 0.843666672706604, 0.843666672706604, 0.8489999771118164, 0.8546666502952576, 0.8536666631698608, 0.859000027179718, 0.8610000014305115, 0.8586666584014893, 0.862333357334137, 0.862333357334137, 0.8606666922569275, 0.8616666793823242, 0.8633333444595337, 0.8616666793823242, 0.8643333315849304, 0.8650000095367432, 0.8673333525657654, 0.8700000047683716, 0.8676666617393494, 0.8726666569709778, 0.8730000257492065, 0.8679999709129333, 0.8709999918937683, 0.8726666569709778, 0.8726666569709778, 0.875, 0.8740000128746033, 0.8733333349227905, 0.8713333606719971, 0.8743333220481873, 0.8773333430290222, 0.8709999918937683, 0.871999979019165, 0.875, 0.8706666827201843, 0.8756666779518127]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [26, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7754285931587219, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.294154658813235, 2.278606190610288, 2.2604126165319727, 2.24061563313834, 2.216671521023453, 2.187459078636215, 2.1539713690829174, 2.108424474251127, 2.0556626296581895, 1.98982340216306, 1.9172733160231044, 1.8409061200425705, 1.74143145941252, 1.6584834544067575, 1.5810931073739118, 1.5021055064984221, 1.4239585090070872, 1.3758282031302502, 1.3227708114057941, 1.2785619698211959, 1.2281716871790647, 1.1945825468169669, 1.166489854338871, 1.1358510232352783, 1.102744391660145, 1.097632060024512, 1.0755712828537287, 1.0399124045744232, 1.0290050408969607, 1.0145818240071616, 0.9931425421843518, 0.9892666120854162, 0.9614581431159727, 0.9569622171458914, 0.940909214488047, 0.9458658259385109, 0.9279196298889213, 0.9140138145151895, 0.9018385732462063, 0.8999583705809012, 0.8878197241232553, 0.8835279134679952, 0.8676967743349712, 0.8675383508732889, 0.8577561102223954, 0.8488906548007793, 0.856685306858692, 0.8439417912377154, 0.8351732345698705, 0.833208502338799, 0.8390934674526643, 0.8086394026310626, 0.812683698492059, 0.8151088854529996, 0.8008454453833367, 0.799871950904691, 0.7916482863582404, 0.791532880004056, 0.7813937390532397, 0.783486631820073, 0.769018535939316, 0.7705530227608354, 0.7753675007517815, 0.7579437521438966, 0.7593010498973215, 0.7670697320123249, 0.7568690298791134, 0.7638491864107414, 0.7453330838212625, 0.7499913300080401, 0.7368193977166633, 0.7505451407273211, 0.7363029118731131, 0.731841058275089, 0.7338796794894759, 0.7333215238112406, 0.7311415312989608, 0.7287725874020706, 0.7208049168455728, 0.7271279671157214, 0.7169241253111923, 0.7100156009189362, 0.7161575970302059, 0.7077794160667805, 0.7103642223690951, 0.7060390343566565, 0.7018950157130257, 0.7022018536458855, 0.6994284413998011, 0.7006945259787419, 0.7008435021002909, 0.696501151902281, 0.6950256743482737, 0.6862036290815587, 0.690487099865314, 0.6882508507793322, 0.6875753557094729, 0.6757891018943953, 0.6782734000120716, 0.6764413590412949], "accuracy": [0.11213842034339905, 0.15453705191612244, 0.19852067530155182, 0.2448817789554596, 0.2818650007247925, 0.3217540681362152, 0.3521331250667572, 0.37868180871009827, 0.39202219247817993, 0.41209879517555237, 0.4262316823005676, 0.44908201694488525, 0.4702152907848358, 0.48210275173187256, 0.5086514353752136, 0.5144630670547485, 0.5328226089477539, 0.5350680351257324, 0.5457667708396912, 0.5691454410552979, 0.5749570727348328, 0.5885615944862366, 0.5968828201293945, 0.6069211363792419, 0.617751955986023, 0.6178840398788452, 0.6238277554512024, 0.6321489810943604, 0.640338122844696, 0.6394135355949402, 0.6487914323806763, 0.6530181169509888, 0.6524897813796997, 0.6622639298439026, 0.6654338836669922, 0.6612072587013245, 0.6643772125244141, 0.6778497099876404, 0.6823405027389526, 0.6762647032737732, 0.6851142644882202, 0.6864351034164429, 0.6870955228805542, 0.681547999382019, 0.6900013089179993, 0.6988508701324463, 0.6931713223457336, 0.6971337795257568, 0.698718786239624, 0.6993792057037354, 0.6991150379180908, 0.707040011882782, 0.7042662501335144, 0.7030775547027588, 0.7112666964530945, 0.7129837274551392, 0.7160216569900513, 0.7194558382034302, 0.7181349992752075, 0.7162858247756958, 0.7226257920265198, 0.7190595865249634, 0.7176066637039185, 0.7269845604896545, 0.7243428826332092, 0.7195879220962524, 0.7243428826332092, 0.7173424959182739, 0.7305507659912109, 0.7260599732398987, 0.724739134311676, 0.7277770638465881, 0.7293620109558105, 0.7357020378112793, 0.7284374833106995, 0.733060359954834, 0.7276449799537659, 0.7368907928466797, 0.7331924438476562, 0.7339849472045898, 0.7387399077415466, 0.7407211661338806, 0.735041618347168, 0.7413815855979919, 0.741909921169281, 0.7412495017051697, 0.7445515990257263, 0.7366266250610352, 0.7421740889549255, 0.7428345084190369, 0.7453441023826599, 0.7391361594200134, 0.7461365461349487, 0.7437590956687927, 0.7448157668113708, 0.7457403540611267, 0.7437590956687927, 0.7485140562057495, 0.7498348951339722, 0.7514199018478394], "val_loss": [1.9546549660818917, 1.938103267124721, 1.9200545719691686, 1.8993068422589983, 1.8744687352861678, 1.8435818808419364, 1.805703912462507, 1.7585174696786063, 1.7015323298318046, 1.633800847189767, 1.5561777182987757, 1.4722274712153844, 1.3832602160317558, 1.296151808329991, 1.2143598284040178, 1.1401705741882324, 1.0746757643563407, 1.0190588406154089, 0.9715869426727295, 0.9308840206691197, 0.8952925205230713, 0.8643482753208706, 0.8377584218978882, 0.8148738486426217, 0.7931699923106602, 0.776033742087228, 0.7595032283238002, 0.7430363893508911, 0.7296296017510551, 0.7177008560725621, 0.705971189907619, 0.6961266142981393, 0.6853266784123012, 0.6773911373955863, 0.6675220898219517, 0.6615567377635411, 0.6549701009477887, 0.6474081448146275, 0.640532272202628, 0.6347027846745082, 0.6278878450393677, 0.6237910985946655, 0.6180946486336845, 0.6128731625420707, 0.6086349487304688, 0.6036796569824219, 0.5995893818991525, 0.5963883059365409, 0.5925495113645282, 0.5879675660814557, 0.5858302627290998, 0.5808116538184029, 0.5781862224851336, 0.5747381789343697, 0.5726199320384434, 0.5692563056945801, 0.5660394259861538, 0.5645290102277484, 0.560031601360866, 0.5573915072849819, 0.5558186599186489, 0.5523922443389893, 0.5499997990471976, 0.547833936555045, 0.5452517441340855, 0.5427065576825824, 0.5414104121071952, 0.5397531305040631, 0.5375864335468837, 0.5357574394771031, 0.5325049161911011, 0.5316874129431588, 0.5319062982286725, 0.5272862911224365, 0.526092495237078, 0.524023141179766, 0.5225398029599871, 0.5219756535121373, 0.5186646325247628, 0.5182265213557652, 0.5161718811307635, 0.5152848448072161, 0.5136052710669381, 0.5115399871553693, 0.5099140746252877, 0.510573250906808, 0.5069970914295742, 0.5055844272886004, 0.5049199717385429, 0.5045866966247559, 0.5019984245300293, 0.5016554253441947, 0.4997015339987619, 0.5014556816646031, 0.49718572412218365, 0.49702785696302143, 0.4951673575810024, 0.49613395759037565, 0.49381193092891146, 0.49174322400774273], "val_accuracy": [0.16966666281223297, 0.3023333251476288, 0.36500000953674316, 0.3933333456516266, 0.42800000309944153, 0.4503333270549774, 0.4703333377838135, 0.4936666786670685, 0.5263333320617676, 0.5383333563804626, 0.5503333210945129, 0.5613333582878113, 0.5873333215713501, 0.5926666855812073, 0.6103333234786987, 0.6299999952316284, 0.6480000019073486, 0.6656666398048401, 0.6696666479110718, 0.6813333630561829, 0.6859999895095825, 0.6856666803359985, 0.6943333148956299, 0.6956666707992554, 0.7016666531562805, 0.7046666741371155, 0.7083333134651184, 0.7123333215713501, 0.7160000205039978, 0.7179999947547913, 0.7193333506584167, 0.7226666808128357, 0.7269999980926514, 0.7286666631698608, 0.7296666502952576, 0.7360000014305115, 0.7356666922569275, 0.7403333187103271, 0.7403333187103271, 0.7419999837875366, 0.7436666488647461, 0.7456666827201843, 0.750333309173584, 0.7526666522026062, 0.7526666522026062, 0.7549999952316284, 0.7566666603088379, 0.7536666393280029, 0.7549999952316284, 0.7606666684150696, 0.7586666941642761, 0.7563333511352539, 0.7606666684150696, 0.762666642665863, 0.7580000162124634, 0.7630000114440918, 0.7596666812896729, 0.7590000033378601, 0.7663333415985107, 0.7673333287239075, 0.765666663646698, 0.7723333239555359, 0.7710000276565552, 0.7713333368301392, 0.7713333368301392, 0.7736666798591614, 0.7739999890327454, 0.7736666798591614, 0.7756666541099548, 0.7739999890327454, 0.7746666669845581, 0.778333306312561, 0.7683333158493042, 0.7789999842643738, 0.7786666750907898, 0.777999997138977, 0.7793333530426025, 0.7789999842643738, 0.781333327293396, 0.777999997138977, 0.7763333320617676, 0.7789999842643738, 0.7833333611488342, 0.7823333144187927, 0.7836666703224182, 0.7823333144187927, 0.7806666493415833, 0.7839999794960022, 0.7829999923706055, 0.7829999923706055, 0.7850000262260437, 0.7839999794960022, 0.7860000133514404, 0.7789999842643738, 0.7846666574478149, 0.7850000262260437, 0.7870000004768372, 0.7866666913032532, 0.7863333225250244, 0.7846666574478149]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7428571581840515, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.022486653530744, 1.1083660979060574, 0.8567662515329757, 0.7775406076325213, 0.6871259486544574, 0.6507670055794883, 0.6144830031701052, 0.5949665447110277, 0.5539995056920599, 0.5500823431058472, 0.5398659138017563, 0.5390413275736198, 0.5107363475516897, 0.5226863811060485, 0.5016276296875213, 0.5171328379910746, 0.538438017279197, 0.5515759601852503, 0.5317777738421899], "accuracy": [0.3181878328323364, 0.6112799048423767, 0.6765288710594177, 0.7094175219535828, 0.7386078238487244, 0.7474573850631714, 0.7670056819915771, 0.7711002230644226, 0.7944789528846741, 0.7993659973144531, 0.7921014428138733, 0.8009510040283203, 0.8074230551719666, 0.8096684813499451, 0.8083476424217224, 0.8090080618858337, 0.7985734939575195, 0.7959318161010742, 0.800290584564209], "val_loss": [0.9024818965366909, 0.6605587686811175, 0.6040194204875401, 0.5135742085320609, 0.4948211397443499, 0.47533352034432547, 0.44974967411586214, 0.42377605608531405, 0.42543940033231464, 0.4175760916301182, 0.4204138347080776, 0.3924141355923244, 0.41048769439969746, 0.38552882841655184, 0.41753544977733065, 0.43093624285289217, 0.4422532916069031, 0.44855202947344097, 0.42848568303244455], "val_accuracy": [0.6226666569709778, 0.6963333487510681, 0.7316666841506958, 0.7643333077430725, 0.768666684627533, 0.7839999794960022, 0.8009999990463257, 0.8146666884422302, 0.8100000023841858, 0.8216666579246521, 0.8173333406448364, 0.82833331823349, 0.8199999928474426, 0.8339999914169312, 0.8226666450500488, 0.8100000023841858, 0.8213333487510681, 0.8046666383743286, 0.8220000267028809]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [92, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [1, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.24171428382396698, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.610090276962258, 2.3023593758925816, 2.3435490556192153, 2.304421889925236, 2.3031057500883323, 2.3030419441624215], "accuracy": [0.18901069462299347, 0.12600713968276978, 0.14938580989837646, 0.09932637959718704, 0.09285431355237961, 0.09153348207473755], "val_loss": [1.7991202218191964, 1.893763201577323, 1.9765616144452776, 1.9740664618355888, 1.9736861501421248, 1.9734200750078474], "val_accuracy": [0.2370000034570694, 0.10133333504199982, 0.09933333098888397, 0.09933333098888397, 0.09833333641290665, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [44, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3019354830265613, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [55, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [7, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [4, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [5, 0, 0, 6], [36, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [0, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 3], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3019354830265613, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [26, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3019354830265613, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [26, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [1, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3019354830265613, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.09600000083446503, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301121945583337, 2.3021364468373107, 2.3009696783658584, 2.299926503050077, 2.2991017769702817, 2.2986338116536604, 2.299746874852219, 2.299789482781034, 2.3007800240857397, 2.3008559764478624, 2.300931622024383, 2.301456701076892, 2.301810370239804, 2.3020738910737526, 2.302191231622672, 2.30222215027054, 2.302345513636174, 2.3023692137844542], "accuracy": [0.09681680053472519, 0.09285431355237961, 0.09338264167308807, 0.09813763201236725, 0.09642054885625839, 0.107647605240345, 0.10936468094587326, 0.10474177449941635, 0.10051512718200684, 0.09985470771789551, 0.10051512718200684, 0.11213842034339905, 0.11689341068267822, 0.11517632752656937, 0.11557257920503616, 0.10910051316022873, 0.10619468986988068, 0.10381719470024109], "val_loss": [1.9707837104797363, 1.9700053078787667, 1.969155720302037, 1.9687418937683105, 1.968758991786412, 1.9693451608930315, 1.9703782626560755, 1.9710394314357214, 1.9713918140956335, 1.971785409109933, 1.9721806389944894, 1.9726126534598214, 1.9729300226484026, 1.9731003216334753, 1.9732110840933663, 1.9733467102050781, 1.9734856741768974, 1.9735819952828544], "val_accuracy": [0.0403333343565464, 0.04899999871850014, 0.06300000101327896, 0.0846666693687439, 0.10166666656732559, 0.10966666787862778, 0.10566666722297668, 0.09033333510160446, 0.09033333510160446, 0.10300000011920929, 0.11133333295583725, 0.11833333224058151, 0.12099999934434891, 0.11699999868869781, 0.11133333295583725, 0.10633333027362823, 0.10266666859388351, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 3, 6, 1, 2, 4, 6, 2, 1, 5, 2, 0, 4, 1, 4, 5, 7, 6, 1, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 5, 1, 0, 3, 9], [3, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 76, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.09600000083446503, "mapping_values": [1, 62, 62, 37, 25, 7, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.add(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), grad)), tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, grad))))))), tf.math.negative(tf.math.add(alpha, grad))))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301121945583337, 2.3021364468373107, 2.3009695659113945, 2.2999264085769906, 2.2991017769702817, 2.2986338611260666, 2.2997474371245383, 2.299790256547103, 2.300781247669664, 2.3008570966152484, 2.3009329759496757, 2.301458307024888, 2.301811085495541, 2.3020750201845908, 2.3021912855668045, 2.30222187141748, 2.302345225745188, 2.302368691946616], "accuracy": [0.09681680053472519, 0.09285431355237961, 0.09338264167308807, 0.09813763201236725, 0.09642054885625839, 0.10777968913316727, 0.10936468094587326, 0.10487385839223862, 0.10051512718200684, 0.09959053993225098, 0.10051512718200684, 0.11213842034339905, 0.11702549457550049, 0.1154404953122139, 0.11596883088350296, 0.10910051316022873, 0.10619468986988068, 0.10381719470024109], "val_loss": [1.9707837104797363, 1.9700053078787667, 1.9691556521824427, 1.9687418937683105, 1.9687589236668177, 1.9693455014910017, 1.970379080091204, 1.9710407938276018, 1.971393040248326, 1.9717867715018136, 1.972182273864746, 1.97261415209089, 1.9729304994855608, 1.973100185394287, 1.9732107434953963, 1.973346437726702, 1.973485333578927, 1.9735817909240723], "val_accuracy": [0.0403333343565464, 0.04899999871850014, 0.06300000101327896, 0.0846666693687439, 0.10166666656732559, 0.10966666787862778, 0.10566666722297668, 0.09033333510160446, 0.09033333510160446, 0.10300000011920929, 0.11100000143051147, 0.11833333224058151, 0.12133333086967468, 0.11699999868869781, 0.11166666448116302, 0.10633333027362823, 0.10266666859388351, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 9, 8, 2, 8, 1, 8, 1, 1, 4, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.09600000083446503, "mapping_values": [1, 30, 30, 18, 12, 3, 5, 5, 2, 3, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))), tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.add(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))))), grad)), tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad)))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301121945583337, 2.3021364468373107, 2.3009695974024234, 2.299926471559048, 2.299101745479253, 2.298633690161271, 2.299747081779769, 2.299789608745149, 2.300780163559506, 2.300855949523033, 2.3009313295671983, 2.301456818003082, 2.301810761641801, 2.3020752181686888, 2.302192077314251, 2.30222277561939, 2.3023456891671685, 2.3023687189659188], "accuracy": [0.09681680053472519, 0.09285431355237961, 0.09338264167308807, 0.09813763201236725, 0.09642054885625839, 0.10777968913316727, 0.10936468094587326, 0.10487385839223862, 0.10051512718200684, 0.09972262382507324, 0.1006472036242485, 0.11213842034339905, 0.11715757846832275, 0.11530841141939163, 0.11610091477632523, 0.10896842926740646, 0.10619468986988068, 0.10381719470024109], "val_loss": [1.9707837104797363, 1.9700053078787667, 1.9691556521824427, 1.9687418937683105, 1.9687588555472237, 1.9693452971322196, 1.9703786032540458, 1.9710395676749093, 1.9713918822152274, 1.971785340990339, 1.9721806389944894, 1.9726132665361678, 1.972931248801095, 1.9731018202645438, 1.9732121058872767, 1.9733472551618303, 1.9734854698181152, 1.9735819271632604], "val_accuracy": [0.0403333343565464, 0.04899999871850014, 0.06300000101327896, 0.0846666693687439, 0.10166666656732559, 0.10966666787862778, 0.10566666722297668, 0.09066666662693024, 0.09033333510160446, 0.10300000011920929, 0.11133333295583725, 0.11833333224058151, 0.12099999934434891, 0.11666666716337204, 0.11133333295583725, 0.10633333027362823, 0.10266666859388351, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 4, 2, 4, 1, 5, 5, 7, 6, 3, 8, 1, 8, 2, 6, 5, 0, 3, 9, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 2, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 32, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.08485714346170425, "mapping_values": [1, 46, 46, 26, 20, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.pow(alpha, tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), grad), tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad))), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))))), alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.300528449845934, 2.3003948152718716, 2.3008589345261625, 2.302102293997802, 2.302212925068124, 2.302584288441793, 2.3028896981384053, 2.303285174854144, 2.303742569892036, 2.3043285229926913], "accuracy": [0.09800554811954498, 0.1010434553027153, 0.09721305221319199, 0.09853387624025345, 0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.970097201211112, 1.9711457661220007, 1.9723151751926966, 1.9731863566807337, 1.9735300200326102, 1.973839623587472, 1.9741676194327218, 1.9745676176888602, 1.9750684329441615, 1.9757605280194963], "val_accuracy": [0.0573333315551281, 0.08733333647251129, 0.09466666728258133, 0.09366666525602341, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 3, 6, 1, 4, 4, 6, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 1, 2, 0, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [66, 98, 17, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [9, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [26, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [3, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3012021541469494, 2.302827203561916, 2.3027648646140912, 2.303218821681895, 2.302506768519238, 2.3021637955991707], "accuracy": [0.09681680053472519, 0.09430722147226334, 0.08994849026203156, 0.08730682730674744, 0.08598599582910538, 0.09126931428909302], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]