[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 2, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.845714271068573, "mapping_values": [1, 17, 17, 10, 7, 3, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), tf.math.square(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0381759123448857, 1.070998142258744, 0.7846430480488067, 0.6891295326746466, 0.6286033739613472, 0.581402728601989, 0.5563964303442673, 0.5180734549342145, 0.48711696872936655, 0.4676547701316912, 0.44662334058168557, 0.4294271871335376, 0.41538319045983096, 0.410027585926624, 0.39176122721601014, 0.37816138681466666, 0.36351126054920113, 0.3578948061054629, 0.3498036259311207, 0.33640561447387923, 0.32893155402023055, 0.3243921771930933, 0.3070088542841366, 0.31104061380668385, 0.3000670953937541, 0.29003376508700673, 0.2865720744366659, 0.27684440072406913, 0.2820350104090938, 0.26944416519704667, 0.26535861563169255, 0.25019435752038044, 0.2523844881521287, 0.2354434936561636, 0.2360281033200075, 0.22142553196811815, 0.21811179302435005, 0.22495763597038396, 0.21705227589775716, 0.20091216922546373], "accuracy": [0.31145158410072327, 0.6176198720932007, 0.7117950320243835, 0.7425703406333923, 0.7651565074920654, 0.7823272943496704, 0.7873464822769165, 0.8070268034934998, 0.8182538747787476, 0.830669641494751, 0.8388587832450867, 0.8413683772087097, 0.8533879518508911, 0.8442742228507996, 0.8595958352088928, 0.8599920868873596, 0.8663320541381836, 0.8692378997802734, 0.8692378997802734, 0.8730682730674744, 0.8771628737449646, 0.8808611631393433, 0.8836349248886108, 0.8850878477096558, 0.8873332738876343, 0.8910315632820129, 0.8919561505317688, 0.8947299122810364, 0.8951261639595032, 0.8960506916046143, 0.8989565372467041, 0.9054285883903503, 0.9055606722831726, 0.9089948534965515, 0.908730685710907, 0.9170519113540649, 0.9149385690689087, 0.913617730140686, 0.9167877435684204, 0.9207502603530884], "val_loss": [0.9137896810259137, 0.6377564668655396, 0.5607410839625767, 0.5212150641850063, 0.48346264021737234, 0.44938034670693533, 0.4324113300868443, 0.406972484929221, 0.38877107415880474, 0.3705719794545855, 0.3591881053788321, 0.3577046734946115, 0.35000177792140413, 0.34350554432187763, 0.3371479596410479, 0.32287395000457764, 0.32207190990448, 0.3152432952608381, 0.3127729296684265, 0.30646663904190063, 0.3044437851224627, 0.3035889778818403, 0.3104265672819955, 0.30447523083005634, 0.2961447068623134, 0.30464097431727816, 0.29484351192201885, 0.31158637148993357, 0.3066937412534441, 0.2908546243395124, 0.2912607618740627, 0.3035931502069746, 0.29906530891145977, 0.30365954978125437, 0.2928850906235831, 0.2972246663911002, 0.2966392125402178, 0.28987962007522583, 0.3037700227328709, 0.2950620651245117], "val_accuracy": [0.6340000033378601, 0.7273333072662354, 0.7433333396911621, 0.7673333287239075, 0.777999997138977, 0.7863333225250244, 0.8083333373069763, 0.8159999847412109, 0.8243333101272583, 0.846666693687439, 0.843666672706604, 0.8423333168029785, 0.8433333039283752, 0.8486666679382324, 0.8560000061988831, 0.859666645526886, 0.8573333621025085, 0.8610000014305115, 0.8550000190734863, 0.8640000224113464, 0.8650000095367432, 0.8673333525657654, 0.8636666536331177, 0.8629999756813049, 0.871999979019165, 0.8703333139419556, 0.8679999709129333, 0.8700000047683716, 0.8683333396911621, 0.8740000128746033, 0.875333309173584, 0.8709999918937683, 0.871666669845581, 0.875333309173584, 0.8823333382606506, 0.875, 0.8740000128746033, 0.875, 0.875333309173584, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 2, 6, 0, 4, 0, 2, 0, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [41, 2, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.845714271068573, "mapping_values": [1, 13, 13, 8, 5, 4, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.negative(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0381758470797284, 1.0710695539924053, 0.7845511248224778, 0.6884467092015094, 0.627957113249553, 0.5801459503699729, 0.5534720668120706, 0.5177136544758665, 0.48674501232451545, 0.47063926122506944, 0.45040741582131577, 0.42771666383525997, 0.41263387562135556, 0.40543963059757393, 0.3890546008879561, 0.38078539422820856, 0.3671938039843653, 0.3592774337112093, 0.3502843826635245, 0.3367148475002351, 0.3259675966403771, 0.3139046169290957, 0.29368713855932355, 0.3045168216863659, 0.2889287479407815, 0.29311515474127364, 0.28757032517035247, 0.27985432671596816, 0.2801828293547796, 0.2653349051504182, 0.26202758306667173, 0.2467238420425956, 0.2500072683144586, 0.23500791016295444, 0.23916372683392761], "accuracy": [0.31145158410072327, 0.617751955986023, 0.7119271159172058, 0.7427024245262146, 0.7642319202423096, 0.7802139520645142, 0.7902522683143616, 0.8062343001365662, 0.8162726163864136, 0.8253863453865051, 0.8362171649932861, 0.8429533839225769, 0.8543124794960022, 0.8496896028518677, 0.857218325138092, 0.8602562546730042, 0.8667283058166504, 0.8656716346740723, 0.8672566413879395, 0.874389111995697, 0.8823140859603882, 0.8837670087814331, 0.8894465565681458, 0.8889182209968567, 0.8916919827461243, 0.8898428082466125, 0.8906353116035461, 0.891559898853302, 0.8943336606025696, 0.8992207050323486, 0.89988112449646, 0.9068815112113953, 0.9062210917472839, 0.9097873568534851, 0.909259021282196], "val_loss": [0.9137906006404332, 0.637505224772862, 0.5601291486195156, 0.5197521107537406, 0.4842070852007185, 0.44871839455195833, 0.43090144225529264, 0.4073678765978132, 0.3897739733968462, 0.37210898739951, 0.3603071996143886, 0.3540455528667995, 0.34839082615716116, 0.34128856658935547, 0.3397789852959769, 0.3289546115057809, 0.32220217159816195, 0.3186622772897993, 0.31626075506210327, 0.30801884617124287, 0.30558717250823975, 0.3012897031647818, 0.3059586797441755, 0.29964607102530344, 0.29965326615742277, 0.30088465554373606, 0.30225356987544466, 0.30269878251211985, 0.30907704148973736, 0.28997346333095003, 0.29271269696099417, 0.3010143552507673, 0.30196664163044523, 0.308955260685512, 0.29469072818756104], "val_accuracy": [0.6343333125114441, 0.7279999852180481, 0.7436666488647461, 0.7693333625793457, 0.7770000100135803, 0.7879999876022339, 0.8066666722297668, 0.8146666884422302, 0.8253333568572998, 0.8410000205039978, 0.8420000076293945, 0.843999981880188, 0.8450000286102295, 0.8496666550636292, 0.8529999852180481, 0.8536666631698608, 0.8550000190734863, 0.8569999933242798, 0.8553333282470703, 0.862333357334137, 0.8653333187103271, 0.8690000176429749, 0.8653333187103271, 0.8686666488647461, 0.8706666827201843, 0.8696666955947876, 0.8666666746139526, 0.8733333349227905, 0.8709999918937683, 0.878333330154419, 0.8776666522026062, 0.8759999871253967, 0.871999979019165, 0.8763333559036255, 0.878000020980835]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 64, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 4, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8437142968177795, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.038175759314231, 1.071024940352729, 0.7846606460702166, 0.6890073269979593, 0.6291393310544103, 0.5801851145579688, 0.5540005525247123, 0.5176814561034426, 0.48592279110413344, 0.467661768320041, 0.4488888953725943, 0.4288934339794894, 0.42033897029520606, 0.4104859870044767, 0.3924544758572161, 0.3796819071956456, 0.3617435085885261, 0.3596784917473116, 0.3491818906215078, 0.33540522662907735, 0.3340685812709921, 0.32415420898687664, 0.301451643310628, 0.302074953813311, 0.2890282785139851, 0.2850765694504039, 0.2857382938948762, 0.2795463397738767, 0.27777780688686016], "accuracy": [0.31145158410072327, 0.617751955986023, 0.7117950320243835, 0.7423061728477478, 0.7647602558135986, 0.7810064554214478, 0.7897239327430725, 0.8047813773155212, 0.8170651197433472, 0.8290846943855286, 0.837537944316864, 0.8424250483512878, 0.8498216867446899, 0.8451988101005554, 0.8561616539955139, 0.8605204224586487, 0.872407853603363, 0.8664641380310059, 0.869502067565918, 0.8717474341392517, 0.8798044919967651, 0.8808611631393433, 0.8870691061019897, 0.8865407705307007, 0.8928807377815247, 0.891559898853302, 0.8944657444953918, 0.8930128216743469, 0.8994848728179932], "val_loss": [0.9137962545667376, 0.6376933200018746, 0.5604603631155831, 0.520092385155814, 0.4832397699356079, 0.4497352157320295, 0.43201020785740446, 0.4070242813655308, 0.3895806670188904, 0.37118026188441683, 0.35959971802575247, 0.35878571442195345, 0.34981593063899447, 0.3424624034336635, 0.3330004470688956, 0.32500044788633076, 0.32197185925074984, 0.3167147636413574, 0.3108973673411778, 0.3034932613372803, 0.30522733075278147, 0.3074817146573748, 0.3119910103934152, 0.29341093982969013, 0.2990926759583609, 0.3032665082386562, 0.30230637959071566, 0.3061532548495701, 0.30873818908418926], "val_accuracy": [0.6340000033378601, 0.7276666760444641, 0.7443333268165588, 0.7693333625793457, 0.7763333320617676, 0.7873333096504211, 0.8103333115577698, 0.8173333406448364, 0.8273333311080933, 0.8446666598320007, 0.8416666388511658, 0.8420000076293945, 0.8460000157356262, 0.8489999771118164, 0.8553333282470703, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8586666584014893, 0.8656666874885559, 0.8673333525657654, 0.8673333525657654, 0.8616666793823242, 0.8733333349227905, 0.8703333139419556, 0.8700000047683716, 0.8673333525657654, 0.8673333525657654, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 64, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8408571481704712, "mapping_values": [1, 10, 10, 7, 3, 3, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0381759213355743, 1.0710203771530724, 0.7848003571453254, 0.6891691275260798, 0.6300926634097348, 0.5801993933147238, 0.5537076492303902, 0.5167633421574412, 0.48568639643770783, 0.46922296049446555, 0.44942789629402885, 0.42739772411259397, 0.4174327878644359, 0.4100569557905858, 0.39218083686123845, 0.3818876438798402, 0.36554202991642926, 0.35906502162035603, 0.3501773354061181, 0.33916897704698595, 0.3291468868567691, 0.3247281232364835, 0.3008609485152281, 0.30721702318323163, 0.29005275999928165, 0.28847602720289595, 0.2835773659097268, 0.27949905696640776, 0.2795179670969603, 0.27135297692273946, 0.26483177098741684, 0.2526091291620715, 0.25323218875604614, 0.2450197895740584, 0.23605567745922454, 0.22309548906630625, 0.21902638664728677, 0.2284620303255676, 0.2176640095641159, 0.206428852439588, 0.1970444928011827], "accuracy": [0.31145158410072327, 0.6176198720932007, 0.7117950320243835, 0.7423061728477478, 0.7633073329925537, 0.7812706232070923, 0.7903843522071838, 0.8043851256370544, 0.8175934553146362, 0.82683926820755, 0.8359529972076416, 0.843481719493866, 0.8498216867446899, 0.844010055065155, 0.858671247959137, 0.8590674996376038, 0.868049144744873, 0.8691058158874512, 0.8656716346740723, 0.871879518032074, 0.8795403242111206, 0.8817857503890991, 0.8877294659614563, 0.8853520154953003, 0.8919561505317688, 0.8889182209968567, 0.8944657444953918, 0.8920882344245911, 0.8952582478523254, 0.898428201675415, 0.9000132083892822, 0.9052965044975281, 0.9015982151031494, 0.9049002528190613, 0.9132214784622192, 0.9146744012832642, 0.9142781496047974, 0.9140139818191528, 0.9171839952468872, 0.9216747879981995, 0.9218068718910217], "val_loss": [0.913787841796875, 0.6377242973872593, 0.5608698640550885, 0.5206103835787091, 0.4830989497048514, 0.4496686969484602, 0.4308973550796509, 0.40625061307634625, 0.3901619740894863, 0.37267376695360455, 0.361632764339447, 0.35520706857953754, 0.35241180658340454, 0.34384253195353914, 0.33902863945279804, 0.3249711053712027, 0.31911316939762663, 0.31477785110473633, 0.31145207371030537, 0.31046909945351736, 0.30891031878335135, 0.30621219532830374, 0.3149510281426566, 0.2977081707545689, 0.2993104713303702, 0.3021377750805446, 0.30166217258998324, 0.30829825571605135, 0.31971666642597746, 0.2895873955317906, 0.2974234563963754, 0.2988930344581604, 0.30788168736866545, 0.29832965987069265, 0.29538609300340923, 0.29423593623297556, 0.2886425767626081, 0.2929554922240121, 0.30256048270634245, 0.2968130111694336, 0.2996238129479544], "val_accuracy": [0.6343333125114441, 0.7273333072662354, 0.7446666955947876, 0.7683333158493042, 0.778333306312561, 0.7879999876022339, 0.8083333373069763, 0.8166666626930237, 0.828000009059906, 0.8410000205039978, 0.8426666855812073, 0.8463333249092102, 0.843999981880188, 0.847000002861023, 0.8523333072662354, 0.8556666374206543, 0.856333315372467, 0.8600000143051147, 0.8569999933242798, 0.8640000224113464, 0.8669999837875366, 0.8659999966621399, 0.8636666536331177, 0.8726666569709778, 0.8696666955947876, 0.8733333349227905, 0.8709999918937683, 0.8673333525657654, 0.8673333525657654, 0.8736666440963745, 0.8709999918937683, 0.8726666569709778, 0.8723333477973938, 0.8756666779518127, 0.874666690826416, 0.8793333172798157, 0.8769999742507935, 0.875, 0.8743333220481873, 0.8773333430290222, 0.8786666393280029]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 2, 6, 0, 4, 0, 2, 1, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 2, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.840571403503418, "mapping_values": [1, 17, 17, 10, 7, 3, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))))), tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0381767308754517, 1.0710343249627328, 0.7848049403339125, 0.6892297809008421, 0.6289324103849061, 0.5804770085963087, 0.5539380101448415, 0.5174803177418569, 0.4867384830690756, 0.46980530633713513, 0.45030531267905044, 0.42915855362084343, 0.4102304870142929, 0.40361149743909863, 0.3886828026940337, 0.3808090896292165, 0.3675312788502856, 0.35845966419256, 0.35043542857624205, 0.3387393548724485, 0.3294538788673601, 0.32310156605861223, 0.3002076076321267, 0.30368830418117515, 0.28775795071573146, 0.286577802946098, 0.2816837532700423], "accuracy": [0.31145158410072327, 0.6173557043075562, 0.7111346125602722, 0.7423061728477478, 0.7648923397064209, 0.7810064554214478, 0.7910447716712952, 0.8049134612083435, 0.8173292875289917, 0.8276317715644836, 0.8347642421722412, 0.8428213000297546, 0.8548408150672913, 0.8481045961380005, 0.8584070801734924, 0.86118084192276, 0.8660678863525391, 0.867520809173584, 0.8708229064941406, 0.8733324408531189, 0.8774270415306091, 0.8813894987106323, 0.8908994793891907, 0.8879936337471008, 0.8922203183174133, 0.8919561505317688, 0.8910315632820129], "val_loss": [0.9138068812234061, 0.6376258475439889, 0.5613304717200143, 0.5205882276807513, 0.4827739340918405, 0.44950885432107107, 0.4308698262487139, 0.4074083822114127, 0.3886125087738037, 0.37139674595424105, 0.36298649651663645, 0.3545111928667341, 0.3504024233136858, 0.34084555932453703, 0.3382246323994228, 0.3278285094669887, 0.3205656920160566, 0.31547256878444124, 0.3116434301648821, 0.3102906772068569, 0.30658336196626934, 0.3025868024144854, 0.3111225366592407, 0.2954067417553493, 0.302072354725429, 0.3007561138698033, 0.3059848802430289], "val_accuracy": [0.6343333125114441, 0.7269999980926514, 0.7446666955947876, 0.768666684627533, 0.7786666750907898, 0.7883333563804626, 0.8033333420753479, 0.8133333325386047, 0.8233333230018616, 0.8413333296775818, 0.8410000205039978, 0.847000002861023, 0.8450000286102295, 0.8506666421890259, 0.8543333411216736, 0.8576666712760925, 0.8573333621025085, 0.859333336353302, 0.8553333282470703, 0.8629999756813049, 0.8656666874885559, 0.8700000047683716, 0.8650000095367432, 0.8690000176429749, 0.8690000176429749, 0.8700000047683716, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 2, 6, 0, 4, 0, 8, 1, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 2, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8394285440444946, "mapping_values": [1, 13, 13, 8, 5, 1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.negative(tf.math.sqrt(alpha)), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0381767240733897, 1.071133230828716, 0.7847455230213947, 0.6888565405280189, 0.6285391196425502, 0.5805886654868937, 0.5537133174187566, 0.5178713527778829, 0.4863082079083739, 0.47164315170285065, 0.4506741945439042, 0.42904820408819216, 0.4168182574896497, 0.40733789342694576, 0.39185190715290347, 0.3853765759666787, 0.36986103730273523, 0.3591811585860907, 0.35313758424102765, 0.33727308640925957, 0.3264805935849729, 0.3223686916535919, 0.2992263113101397, 0.3043083721549677, 0.28863789349609376, 0.2884917691391315, 0.28290592752994403, 0.27951333424702074, 0.2803002784355615, 0.26740440394837134, 0.26528989118103813, 0.25192667263421115, 0.2536693612983781, 0.2414103089826234, 0.23433841791694285, 0.22992925932614905, 0.22697560430722483], "accuracy": [0.31145158410072327, 0.617751955986023, 0.71100252866745, 0.7428345084190369, 0.76542067527771, 0.7821952104568481, 0.7902522683143616, 0.8062343001365662, 0.8171972036361694, 0.8257825970649719, 0.8359529972076416, 0.8412362933158875, 0.8520671129226685, 0.845859169960022, 0.857218325138092, 0.8576145768165588, 0.86553955078125, 0.8679170608520508, 0.868049144744873, 0.8751816153526306, 0.8804649114608765, 0.8808611631393433, 0.8878615498542786, 0.8854840993881226, 0.8927486538887024, 0.8949940800666809, 0.8911636471748352, 0.8928807377815247, 0.8989565372467041, 0.8993527889251709, 0.900409460067749, 0.9046360850334167, 0.9050323367118835, 0.9080702662467957, 0.9105798602104187, 0.9089948534965515, 0.9145423173904419], "val_loss": [0.9138000011444092, 0.6378840208053589, 0.5606623377118792, 0.5200375148228237, 0.48228117397853304, 0.4500416857855661, 0.43238512107304167, 0.40811956780297415, 0.3907919866698129, 0.3724879026412964, 0.36353592361722675, 0.3574936304773603, 0.35052659681865145, 0.3440555078642709, 0.34427117449896677, 0.3290478672300066, 0.3233027883938381, 0.3166123628616333, 0.31302453790392193, 0.3048072968210493, 0.30705922842025757, 0.30819045645850046, 0.30900831733431133, 0.2959918720381601, 0.2982602460043771, 0.3001450555665152, 0.3013353432927813, 0.3054082563945225, 0.3100541744913374, 0.29110980885369436, 0.2929099031857082, 0.29609367677143644, 0.30142507382801603, 0.3015469653265817, 0.29699695110321045, 0.2928092990602766, 0.29359093734196257], "val_accuracy": [0.6340000033378601, 0.7263333201408386, 0.7443333268165588, 0.7676666378974915, 0.777999997138977, 0.7866666913032532, 0.8050000071525574, 0.8149999976158142, 0.8243333101272583, 0.8403333425521851, 0.840666651725769, 0.8446666598320007, 0.8463333249092102, 0.8493333458900452, 0.8510000109672546, 0.8573333621025085, 0.8556666374206543, 0.8573333621025085, 0.8550000190734863, 0.8643333315849304, 0.8679999709129333, 0.8686666488647461, 0.8643333315849304, 0.8656666874885559, 0.8690000176429749, 0.8676666617393494, 0.8663333058357239, 0.8653333187103271, 0.8666666746139526, 0.8726666569709778, 0.8706666827201843, 0.8790000081062317, 0.871999979019165, 0.875, 0.8773333430290222, 0.878333330154419, 0.871999979019165]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 3, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 64, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.6937142610549927, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(grad, alpha)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.023673352138981, 1.2853772112438628, 0.9781045170271826, 0.8311844654071285, 0.756370513265348, 0.6989618777252538, 0.6565495110332785, 0.6337079426726141, 0.6008915785926917, 0.5925351512462015, 0.5817660307603946, 0.5459119087677307, 0.5404439427124873, 0.5484637897705216, 0.5354148191688335, 0.5317588573622587, 0.549974065501818, 0.5614356428813846, 0.5732957018112951, 0.6174630760249051, 0.6078379411329572, 0.5999777639042889, 0.5987038270294422], "accuracy": [0.3077532649040222, 0.5865803956985474, 0.6425835490226746, 0.6921146512031555, 0.7209087014198303, 0.7380794882774353, 0.7569673657417297, 0.7515519857406616, 0.7691190242767334, 0.7734777331352234, 0.7732135653495789, 0.7889314293861389, 0.789988100528717, 0.7923656105995178, 0.7976489067077637, 0.7988376617431641, 0.7915731072425842, 0.7874785661697388, 0.787082314491272, 0.7709681391716003, 0.7803460359573364, 0.7714964747428894, 0.7753269076347351], "val_loss": [0.8924514906747001, 0.7971631969724383, 0.6265971830912999, 0.5718824182237897, 0.5331607375826154, 0.49018640177590506, 0.48021393162863596, 0.4612536941255842, 0.46001453910555157, 0.45322939327784945, 0.43813757385526386, 0.42506435087748934, 0.4299342376845224, 0.42560293844767977, 0.44232793365206036, 0.4332705821309771, 0.4513602597372873, 0.4477736864771162, 0.5060767275946481, 0.5006349597658429, 0.525200435093471, 0.4819586787905012, 0.479900598526001], "val_accuracy": [0.6496666669845581, 0.6420000195503235, 0.7276666760444641, 0.7360000014305115, 0.7636666893959045, 0.7746666669845581, 0.7713333368301392, 0.7889999747276306, 0.7956666946411133, 0.7956666946411133, 0.8033333420753479, 0.8173333406448364, 0.8209999799728394, 0.809333324432373, 0.8109999895095825, 0.8176666498184204, 0.812333345413208, 0.8216666579246521, 0.7960000038146973, 0.7919999957084656, 0.8056666851043701, 0.8043333292007446, 0.8009999990463257]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 3, 0, 3, 9, 1, 8, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 8, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.6700000166893005, "mapping_values": [1, 3, 3, 2, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.023671072503406, 1.2851780150560512, 0.9778852877111767, 0.8294571596854052, 0.7551825321455988, 0.6974538814956959, 0.6554660222880231, 0.6306956855848622, 0.5999945416867442, 0.581388437233077, 0.5710360712977354, 0.5553516120312945, 0.5378508629453748, 0.5374238651583869, 0.5463792072421351, 0.521978573445804, 0.5463161951027148, 0.5405109522286313, 0.5734490710573268, 0.5892178709433614, 0.6700942940353607], "accuracy": [0.3077532649040222, 0.5860520601272583, 0.6425835490226746, 0.693831741809845, 0.7234182953834534, 0.739400327205658, 0.7549861073493958, 0.7544577717781067, 0.770439863204956, 0.7750627398490906, 0.7804781198501587, 0.7827235460281372, 0.7927618622779846, 0.7913089394569397, 0.7890635132789612, 0.7944789528846741, 0.7987055778503418, 0.7955356240272522, 0.7740060687065125, 0.7779685854911804, 0.7553823590278625], "val_loss": [0.8924624579293388, 0.7969129426138741, 0.6257676907948085, 0.5709634508405413, 0.5297694887433734, 0.4896041325160435, 0.47810254778180805, 0.46155733721596853, 0.4518628205571856, 0.43425291776657104, 0.4493275540215628, 0.4337384445326669, 0.43902766704559326, 0.4162863918713161, 0.4440332565988813, 0.4311657888548715, 0.4395125338009426, 0.45409452063696726, 0.4594523991857256, 0.4778381586074829, 0.5068637984139579], "val_accuracy": [0.6496666669845581, 0.6423333287239075, 0.7276666760444641, 0.7363333106040955, 0.7630000114440918, 0.7749999761581421, 0.7680000066757202, 0.7873333096504211, 0.7956666946411133, 0.8016666769981384, 0.7990000247955322, 0.8076666593551636, 0.809333324432373, 0.8220000267028809, 0.7963333129882812, 0.8253333568572998, 0.8230000138282776, 0.812333345413208, 0.7919999957084656, 0.7903333306312561, 0.7956666946411133]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 8, 6, 4, 4, 3, 9, 6, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 98, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [18, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10057143121957779, "mapping_values": [1, 15, 15, 10, 5, 5, 2, 2, 1, 1, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [113819.78056621917, 1858884588635.7173, 3.4523471928525885e+19, 2.1371456947847346e+26, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09708096832036972, 0.09972262382507324, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5886395.857142857, 104143190191542.86, 1.745420419608267e+21, 1.973644392830985, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.10300000011920929, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 5, 0, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 64, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [2, 3, 9, 0, 1, 9], [0, 2, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302301156853074, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 4, 4, 3, 3, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 19, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [4, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [47, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.5040000018158985, 14.477397295934587, 40.45049756238678, 84.59241489928868, 151.45902185990528, 247.11673105844747], "accuracy": [0.09681680053472519, 0.09536388516426086, 0.09879804402589798, 0.09945846349000931, 0.10170386731624603, 0.09800554811954498], "val_loss": [5.022316523960659, 16.82879420689174, 38.94046129499163, 73.97979082380023, 125.08245849609375, 195.65036010742188], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [9, 2, 1, 2, 0, 3, 9, 1, 8, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 64, 65, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [2, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302177460091918, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 64, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302301156853074, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 20, 13, 17, 16, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [50, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 1, 2], [82, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 5, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302301156853074, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 64, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302301156853074, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 5, 1, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [30, 64, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [2, 3, 9, 0, 1, 9], [0, 2, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 3, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 3, 5, 5, 2, 3, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, grad), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3022914445789153, 2.3025711142013825, 2.3025745011560037, 2.3025746308360606, 2.3025801055199278, 2.3025782628853593], "accuracy": [0.10645885765552521, 0.10527011007070541, 0.10157178342342377, 0.10328886657953262, 0.10553427785634995, 0.10077928751707077], "val_loss": [1.973642349243164, 1.9736463001796178, 1.9736446653093611, 1.9736456189836775, 1.9736450740269251, 1.973644529070173], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 0, 1, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 19, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [18, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 4, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 5, 3, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 64, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.06599999964237213, "mapping_values": [1, 10, 10, 7, 3, 3, 5, 5, 2, 3, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3025349483293485, 2.302180739536167, 2.3023146591040407, 2.3016425261108897, 2.301593473102155, 2.302722015558469, 2.3028394486595216, 2.3023245062542754, 2.3024864424142573, 2.3028823228449853, 2.3027620753591966], "accuracy": [0.09628847241401672, 0.0886276587843895, 0.09219389408826828, 0.09509972482919693, 0.09417514503002167, 0.09087307006120682, 0.09206181764602661, 0.08598599582910538, 0.08374059200286865, 0.08030643314123154, 0.07621186226606369], "val_loss": [1.970747947692871, 1.970505918775286, 1.970790249960763, 1.9715276445661272, 1.9718987601143974, 1.972372055053711, 1.9727108137948173, 1.9729888779776437, 1.9733496393476213, 1.9736253874642509, 1.9736584254673548], "val_accuracy": [0.041333332657814026, 0.04699999839067459, 0.052000001072883606, 0.056333333253860474, 0.06666667014360428, 0.0716666653752327, 0.06199999898672104, 0.06499999761581421, 0.055666666477918625, 0.04399999976158142, 0.05233333259820938]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 0, 1, 3, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 38, 99, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [80, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.05428571254014969, "mapping_values": [1, 15, 15, 9, 6, 4, 5, 5, 2, 3, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3019054435452357, 2.3008016803087954, 2.301806912398877, 2.3024106119853975, 2.3026036537239944, 2.3027236430148377, 2.303102080344272, 2.3037369979638718, 2.305045984267181, 2.308945298557032, 2.324791365106895], "accuracy": [0.09840179979801178, 0.09140139818191528, 0.0812310129404068, 0.08321225643157959, 0.10460969805717468, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9700542858668737, 1.9715613637651717, 1.972935472215925, 1.9735066550118583, 1.9737509999956404, 1.974029268537249, 1.974456446511405, 1.9752343722752161, 1.9770734650748116, 1.9826767104012626, 2.0268141882760182], "val_accuracy": [0.05766666680574417, 0.060333333909511566, 0.06599999964237213, 0.09666666388511658, 0.09799999743700027, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 8, 6, 4, 4, 3, 0, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [54, 19, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [18, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.03628571331501007, "mapping_values": [1, 15, 15, 9, 6, 4, 5, 5, 2, 3, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302626484027077, 2.302697834353232, 2.3034228087573743, 2.3021550575944616, 2.3016454236004504, 2.302789533394927, 2.3037219593285916, 2.3024317113211, 2.302588359224105], "accuracy": [0.09576013684272766, 0.08994849026203156, 0.08770307898521423, 0.09430722147226334, 0.09232597798109055, 0.09166556596755981, 0.08955223858356476, 0.08532558381557465, 0.0948355570435524], "val_loss": [1.9709946087428503, 1.970987183707101, 1.9709834371294295, 1.97098936353411, 1.9710122517177038, 1.971059935433524, 1.9711486952645438, 1.9712879998343331, 1.9714936528887068], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.03799999877810478, 0.03866666555404663, 0.03799999877810478, 0.03799999877810478, 0.03766666725277901, 0.03766666725277901, 0.03700000047683716]}}]