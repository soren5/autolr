[{"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8477143049240112, "mapping_values": [1, 8, 8, 5, 3, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.042246456332667, 1.0923384226560435, 0.7958846786050213, 0.6978722074878624, 0.6503310067747184, 0.5970474539762317, 0.5507831647490246, 0.5224351409073315, 0.5030498730350621, 0.484129807212491, 0.4583481003453687, 0.4354931400468116, 0.42521922784537497, 0.4074384739897774, 0.39648012058169, 0.38417252409318026, 0.374430204505351, 0.35459158012675196, 0.33988526100968136, 0.3479877168303074, 0.33600510598378425, 0.31648804861651186, 0.3237821825656594, 0.30512954702293554, 0.29990253783393417, 0.28942633613209917, 0.28946468329716196, 0.27796365118155847, 0.2667065306094659, 0.26597648864928614, 0.2650060695372773, 0.2626560877193282, 0.2682512994211552, 0.26287173981585316, 0.24181162748692955, 0.24139725678372675, 0.2243984748879129, 0.22073264474551346, 0.21990037376358523, 0.20937022359348198, 0.21298160843365166, 0.2061710512503468, 0.19587432090136447, 0.18714273695098002, 0.17931228096907748], "accuracy": [0.31726324558258057, 0.6133931875228882, 0.7038700580596924, 0.7323999404907227, 0.7535332441329956, 0.7755910754203796, 0.7989697456359863, 0.8037247657775879, 0.8099326491355896, 0.8204993009567261, 0.832650899887085, 0.8421608805656433, 0.8469158411026001, 0.8512746095657349, 0.8548408150672913, 0.8582749962806702, 0.8672566413879395, 0.8688416481018066, 0.8737286925315857, 0.867520809173584, 0.8750495314598083, 0.8854840993881226, 0.8767666220664978, 0.8853520154953003, 0.8883898854255676, 0.8931449055671692, 0.8923524022102356, 0.8953903317451477, 0.8961827754974365, 0.8997490406036377, 0.8975036144256592, 0.8961827754974365, 0.8949940800666809, 0.9001452922821045, 0.9084665179252625, 0.9062210917472839, 0.9186369180679321, 0.9152027368545532, 0.9165235757827759, 0.9174481630325317, 0.9186369180679321, 0.920089840888977, 0.9224672913551331, 0.9262977242469788, 0.9282789826393127], "val_loss": [0.9463918209075928, 0.626807587487357, 0.5586232457842145, 0.5067949976239886, 0.48244915689740864, 0.4528462716511318, 0.42513189145496916, 0.4058241162981306, 0.3969336577824184, 0.3886368785585676, 0.3712381975991385, 0.3607121024812971, 0.34745978457587107, 0.3406496047973633, 0.3320958358900888, 0.3341211591448103, 0.3230792454310826, 0.32115033694675993, 0.32265708276203703, 0.3051073210580008, 0.3038423827716282, 0.31245367016111103, 0.31351393461227417, 0.3065356697354998, 0.29798550265175955, 0.30303838423320223, 0.3110717705317906, 0.3062935897282192, 0.306926999773298, 0.2937009760311672, 0.300826506955283, 0.31777699504579815, 0.30915417841502596, 0.29483721937452045, 0.3036157063075474, 0.2978640965053013, 0.29840435300554546, 0.2972967284066336, 0.2985377311706543, 0.2943499599184309, 0.2969081231525966, 0.3109423347881862, 0.29994274037224905, 0.3029740197317941, 0.29690842969076975], "val_accuracy": [0.6416666507720947, 0.7136666774749756, 0.7483333349227905, 0.7746666669845581, 0.781000018119812, 0.800000011920929, 0.8066666722297668, 0.8259999752044678, 0.8220000267028809, 0.824999988079071, 0.8410000205039978, 0.8376666903495789, 0.8463333249092102, 0.8496666550636292, 0.8529999852180481, 0.8516666889190674, 0.8556666374206543, 0.8576666712760925, 0.8583333492279053, 0.8659999966621399, 0.8653333187103271, 0.862666666507721, 0.8643333315849304, 0.8700000047683716, 0.8686666488647461, 0.8700000047683716, 0.862333357334137, 0.8700000047683716, 0.8703333139419556, 0.8756666779518127, 0.8733333349227905, 0.8629999756813049, 0.8643333315849304, 0.875333309173584, 0.8776666522026062, 0.874666690826416, 0.8763333559036255, 0.8743333220481873, 0.8733333349227905, 0.8816666603088379, 0.875, 0.878000020980835, 0.8809999823570251, 0.8796666860580444, 0.8806666731834412]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 1, 1, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 4, 7, 1, 8, 5, 2, 1], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.838857114315033, "mapping_values": [1, 8, 8, 5, 3, 3, 3, 3, 1, 2, 1, 13, 10, 7, 3, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), sigma)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.04225024109771, 1.0927558801807449, 0.7958953384914733, 0.6980890168363959, 0.6501282356780801, 0.5983953086565578, 0.5519851255473553, 0.5228396166332993, 0.5034272976051374, 0.48685411950458923, 0.45937577510758665, 0.43967577652089773, 0.4272620575326608, 0.4044103303668584, 0.39393673710630334, 0.3808873727053636, 0.3749143409100758, 0.3618005216279129, 0.34902526244763227, 0.35275628434164713, 0.3418789985330743, 0.31993806068891895, 0.32164893749761325, 0.30514302505336466, 0.29938827699296083, 0.2862688247333381, 0.288997059469257, 0.27887451038573474, 0.2648762937872842, 0.2615179559101502, 0.254570070447986, 0.2599175388586126, 0.25276276253123464, 0.24875378002894946, 0.23812764344151152, 0.23077692396534338, 0.2206742402828916, 0.21234361690977985, 0.21576209810738708, 0.20548300853085447, 0.20394094481034883, 0.19965491372131952, 0.18752671928768538, 0.184638727328891, 0.1762792578053402, 0.17774513341204018, 0.18085597032537676, 0.16206628679363183, 0.16227667275759616, 0.16628892638656237, 0.1492822959265295, 0.1492538163454431, 0.15639776871220437, 0.15377273279378884, 0.13842289865001192, 0.14232332308326084, 0.14288885688517214, 0.1370873324894839, 0.1347771518462842], "accuracy": [0.3171311616897583, 0.6131290197372437, 0.7046625018119812, 0.7327961921691895, 0.7530049085617065, 0.778232753276825, 0.7936864495277405, 0.8050455451011658, 0.8105930685997009, 0.8204993009567261, 0.8338396549224854, 0.8413683772087097, 0.8438779711723328, 0.8543124794960022, 0.8552370667457581, 0.8609166741371155, 0.8654074668884277, 0.8650112152099609, 0.8739928603172302, 0.870030403137207, 0.8772949576377869, 0.8850878477096558, 0.8792761564254761, 0.8841632604598999, 0.8868049383163452, 0.8942015767097473, 0.8927486538887024, 0.8960506916046143, 0.898428201675415, 0.9008057117462158, 0.9025228023529053, 0.8977677822113037, 0.9021265506744385, 0.9034473896026611, 0.9076740145683289, 0.9142781496047974, 0.9189010858535767, 0.9171839952468872, 0.9185048341751099, 0.9190331697463989, 0.9211464524269104, 0.923920214176178, 0.9265618920326233, 0.9270902276039124, 0.9318451881408691, 0.932769775390625, 0.9314489364624023, 0.9343547821044922, 0.9384493231773376, 0.9384493231773376, 0.9437326788902283, 0.9433364272117615, 0.9381851553916931, 0.9418835043907166, 0.9443930983543396, 0.945978045463562, 0.9469026327133179, 0.9429401755332947, 0.9457139372825623], "val_loss": [0.9463848386492048, 0.6263500622340611, 0.5590850285121373, 0.5066472802843366, 0.4849922146115984, 0.45338092531476704, 0.4277401055608477, 0.4063579525266375, 0.39790172236306326, 0.3947600381714957, 0.37411002601896015, 0.3600753205163138, 0.3485086304800851, 0.34001560722078594, 0.3309091329574585, 0.3301467554909842, 0.3223944221224104, 0.3226452554975237, 0.32121906110218595, 0.30466364111219135, 0.3110010879380362, 0.31277692317962646, 0.30522449527468, 0.30692388330187115, 0.2964263302939279, 0.3001849055290222, 0.29974566187177387, 0.29977294376918245, 0.29767480918339323, 0.2986443553652082, 0.2956645999635969, 0.30074721574783325, 0.29582944938114714, 0.2909154806818281, 0.30784864936556133, 0.29256863253457205, 0.290451637336186, 0.29479613474437166, 0.3001042434147426, 0.29582975591932026, 0.29870836223874775, 0.3132883906364441, 0.29542664119175505, 0.2987271802765982, 0.3011169603892735, 0.3051619700023106, 0.2972633327756609, 0.3124307904924665, 0.2995458330426897, 0.3084842136928013, 0.31568722214017597, 0.3069898315838405, 0.30034999336515156, 0.30789672476904734, 0.3161266105515616, 0.3182442103113447, 0.31213049377713886, 0.33185609749385286, 0.3318539687565395], "val_accuracy": [0.6416666507720947, 0.715666651725769, 0.7476666569709778, 0.7710000276565552, 0.778333306312561, 0.7973333597183228, 0.8046666383743286, 0.8209999799728394, 0.8190000057220459, 0.8220000267028809, 0.8386666774749756, 0.8413333296775818, 0.8486666679382324, 0.8519999980926514, 0.8560000061988831, 0.8536666631698608, 0.8560000061988831, 0.8529999852180481, 0.8576666712760925, 0.8653333187103271, 0.8643333315849304, 0.8610000014305115, 0.8656666874885559, 0.8703333139419556, 0.8659999966621399, 0.8666666746139526, 0.8700000047683716, 0.8709999918937683, 0.8713333606719971, 0.875333309173584, 0.8766666650772095, 0.8730000257492065, 0.8706666827201843, 0.8790000081062317, 0.8693333268165588, 0.8773333430290222, 0.8806666731834412, 0.8730000257492065, 0.8776666522026062, 0.8859999775886536, 0.8743333220481873, 0.8799999952316284, 0.8823333382606506, 0.8836666941642761, 0.8863333463668823, 0.8830000162124634, 0.8793333172798157, 0.887666642665863, 0.8843333125114441, 0.8883333206176758, 0.8809999823570251, 0.8889999985694885, 0.887666642665863, 0.8933333158493042, 0.8853333592414856, 0.8870000243186951, 0.8840000033378601, 0.8826666474342346, 0.8859999775886536]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 4, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 46, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8385714292526245, "mapping_values": [1, 40, 40, 25, 15, 5, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(alpha))), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(alpha), grad), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0422486323627576, 1.0923096168042803, 0.7956294817553535, 0.6957744944601043, 0.650400882265776, 0.5983480020221891, 0.5524363445568047, 0.5221960304230904, 0.500913626844416, 0.4846894833484519, 0.45958081401098266, 0.4382811623195285, 0.428863802755734, 0.40846410800342814, 0.40015663402805773, 0.38359138089290085, 0.37782872505333476, 0.3610164725769465, 0.3511996669122776, 0.35439595784399064, 0.33673339254741796, 0.3168250575254244, 0.3205454745556873, 0.30185829567682504, 0.29966583130397756, 0.2923303638364598, 0.2931310470038716, 0.2817901132081903, 0.26860133319278323, 0.26207005100999103, 0.2581783132176153, 0.25604248520224526, 0.251182711363752, 0.2484907505711733, 0.23571705079121189, 0.2313553429770983, 0.21868128837406706, 0.21446285727765377, 0.21292796609557899], "accuracy": [0.31726324558258057, 0.6136573553085327, 0.7041342258453369, 0.7354378700256348, 0.7519482374191284, 0.7781006693840027, 0.7956677079200745, 0.806630551815033, 0.8117818236351013, 0.8201030492782593, 0.8329150676727295, 0.8397833704948425, 0.8461233377456665, 0.8525954484939575, 0.8514066934585571, 0.8601241707801819, 0.8667283058166504, 0.8663320541381836, 0.8721436858177185, 0.8705587387084961, 0.8742570281028748, 0.8809932470321655, 0.8825782537460327, 0.8853520154953003, 0.8879936337471008, 0.8932769894599915, 0.8897107243537903, 0.8924844861030579, 0.8986923694610596, 0.90423983335495, 0.9021265506744385, 0.9009377956390381, 0.9019944667816162, 0.904768168926239, 0.9064852595329285, 0.9145423173904419, 0.9208822846412659, 0.915070652961731, 0.9192973375320435], "val_loss": [0.9463597365788051, 0.6270030226026263, 0.5578320877892631, 0.5067175626754761, 0.4834387813295637, 0.45416952882494244, 0.4263831206730434, 0.40590676239558626, 0.3966711163520813, 0.3862331339291164, 0.36935129335948397, 0.3608367017337254, 0.35222892250333515, 0.3424521940095084, 0.33201095887592863, 0.3365469830376761, 0.3193929025105068, 0.3238553149359567, 0.32326555252075195, 0.30777900559561594, 0.30210176536015104, 0.30961562054497854, 0.3047848003251212, 0.30444338491984774, 0.29671249219349455, 0.3009006381034851, 0.30265796184539795, 0.30018897567476543, 0.3017482502119882, 0.2925811069352286, 0.2910300408090864, 0.2983075720923288, 0.2901796187673296, 0.28605625459126066, 0.3007984927722386, 0.2874949063573565, 0.29912533930369783, 0.2905423641204834, 0.29794009242738995], "val_accuracy": [0.6416666507720947, 0.7129999995231628, 0.746666669845581, 0.7689999938011169, 0.777999997138977, 0.7963333129882812, 0.8033333420753479, 0.8226666450500488, 0.8216666579246521, 0.8296666741371155, 0.8423333168029785, 0.8396666646003723, 0.8493333458900452, 0.8460000157356262, 0.856333315372467, 0.8516666889190674, 0.8586666584014893, 0.8579999804496765, 0.8573333621025085, 0.8683333396911621, 0.8679999709129333, 0.8653333187103271, 0.8700000047683716, 0.8683333396911621, 0.8679999709129333, 0.8726666569709778, 0.8686666488647461, 0.8706666827201843, 0.8676666617393494, 0.8759999871253967, 0.8809999823570251, 0.8763333559036255, 0.8799999952316284, 0.8813333511352539, 0.8776666522026062, 0.8799999952316284, 0.878000020980835, 0.8759999871253967, 0.878333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 2, 4, 2, 0, 0, 2, 0, 0, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 9, 6, 5, 4, 4, 6, 5, 2, 7, 8, 4, 8, 4], [1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [9, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 41, 26, 15, 9, 1, 1, 1, 0, 1, 7, 6, 3, 3, 1, 5, 3, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(alpha, grad)))))))))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2491247.723964971, 3055162635.9783382, 193413541870.1466, 3393300943653.5664, 30241812579576.46, 181207898769755.6], "accuracy": [0.09985470771789551, 0.09893012791872025, 0.09153348207473755, 0.09866596013307571, 0.09747721254825592, 0.09166556596755981], "val_loss": [39124587.428571425, 15364787638.857143, 539578147986.2857, 6865431672539.429, 49760630659949.71, 252048986154130.28], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 1, 1, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [1, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [4, 4, 7, 1, 8, 5, 2, 1], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 3, 3, 3, 1, 2, 0, 10, 7, 5, 2, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)))), sigma)), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11451591551303864, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 1, 1, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [50, 82, 30, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 4, 7, 3, 0, 5, 0, 9], [7, 4, 3], [64, 55], [0, 1, 0, 1, 1], [4, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 5, 5, 3, 2, 2, 3, 3, 1, 2, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 3, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [4, 5, 7, 2, 1, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 15, 8, 5, 3, 3, 1, 2, 1, 8, 6, 4, 2, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(alpha)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 3, 1, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 28, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.negative(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [36722627.86137521, 5407743408.4712715, 94852706065.41382, 665601232693.1206, 2904080152135.3457, 9746729699933.121], "accuracy": [0.10038304328918457, 0.09893012791872025, 0.09153348207473755, 0.09866596013307571, 0.09747721254825592, 0.09153348207473755], "val_loss": [301650011.4285714, 16245566902.857143, 174337055597.7143, 950371390025.1428, 3559643414528.0, 10499840578121.143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 1, 2, 9, 2, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 8, 8, 5, 3, 9], [2, 3, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302158439510518, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 2, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 2, 8, 0, 0, 9], [0, 4, 0], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 52, 39, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 4, 7, 1, 8, 5, 2, 1], [4, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 3, 1, 1, 0, 1, 1, 10, 7, 5, 2, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad))))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302158439510518, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [84, 84, 6], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [0, 4, 0], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 1, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08915598690509796, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 1, 2, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [72, 84, 6], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 6, 9, 1, 8, 5, 0, 9], [4, 4, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 3, 5, 5, 3, 2, 2, 4, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.7242413554552985e+33, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1310262829065323, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 4, 5, 2, 0, 0, 2, 0, 0, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 6, 1, 6, 5, 9, 6, 5, 4, 4, 6, 5, 2, 7, 8, 4, 8, 4], [2, 0, 2, 1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 55, 57, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [1, 3, 3, 3, 0], [13, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 3, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 7, 6, 3, 3, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, sigma))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3032262978725715, 2.306885271118994, 2.3125823435294017, 2.3162668206987442, 2.3253626015680404, 2.332368583034263, 2.3421113630563606, 2.364311301618472, 2.470793797780557, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08915598690509796, 0.07792893797159195, 0.07607977837324142, 0.07013604789972305, 0.06313564628362656, 0.06379606574773788, 0.05838066339492798, 0.06075815483927727, 0.0742306187748909, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735359464372908, 1.9768077986580985, 1.980954851422991, 1.98589141028268, 1.9924503053937639, 2.000434194292341, 2.0116121428353444, 2.035905224936349, 14.214070456368583, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02566666714847088, 0.018666666001081467, 0.014000000432133675, 0.014999999664723873, 0.019333332777023315, 0.03533333167433739, 0.06533333659172058, 0.09966666996479034, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 9, 1, 8, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [46, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [4, 5, 7, 2, 1, 5, 0, 9], [2, 4, 0], [64, 55], [0, 0, 0, 1, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.4523523517682206, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.031039493158459663, 0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7.151289531162807, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02800000086426735, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 1, 1, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 55, 57, 60, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [42, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09914285689592361, "mapping_values": [1, 7, 7, 3, 4, 2, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.36571683406263, 1.1491666583086748e+21, NaN, NaN, NaN, NaN], "accuracy": [0.09391097724437714, 0.1002509593963623, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.123480728694371, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [6, 1, 1, 4, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [4, 5, 7, 2, 1, 5, 0, 9], [2, 4, 0], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09885714203119278, "mapping_values": [1, 9, 9, 4, 5, 3, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.365210489904907, 3243092295.1348596, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1154682295663014, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 8, 8, 5, 3, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3631136273474915, 3.038763902537213, 4.971169087361225, 8.084878188523602, 12.325925401141694, 18.142581940201122], "accuracy": [0.09391097724437714, 0.09972262382507324, 0.09047681838274002, 0.09734513610601425, 0.09893012791872025, 0.09219389408826828], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 2, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 10, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [84, 84, 6], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [4, 5, 3, 2, 1, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 8, 6, 4, 2, 0, 2, 1, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3631136273474915, 3.038763902537213, 4.971169087361225, 8.084878188523602, 12.325925401141694, 18.142581940201122], "accuracy": [0.09391097724437714, 0.09972262382507324, 0.09047681838274002, 0.09734513610601425, 0.09893012791872025, 0.09219389408826828], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 4, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [2, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3020827180406185, 2.302401024289749, 2.303594287013995, 2.3022799628238477, 2.3036988249166437, 2.3026387726452846], "accuracy": [0.09206181764602661, 0.0882314071059227, 0.08928807079792023, 0.09206181764602661, 0.0882314071059227, 0.09377889335155487], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]