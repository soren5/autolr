[{"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [4, 6, 2, 5, 8, 0, 0, 2, 8, 5, 9, 2, 4, 1, 5, 5, 7, 6, 9, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [5, 7, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8519999980926514, "mapping_values": [1, 8, 8, 4, 4, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0424233675475416, 1.110426711628324, 0.7796184631811708, 0.6986911339436099, 0.6352074899142524, 0.5900507011370747, 0.5531827517590896, 0.5256263350278411, 0.4973793476406672, 0.4666504204202369, 0.44535283038345674, 0.4297778703879529, 0.4257951156968029, 0.41519212269307504, 0.39084617558755047, 0.38433998305925743, 0.37376984691323856, 0.3688576724968251, 0.3593707208179322, 0.3428186937771012, 0.32555448717255997, 0.323041779683046, 0.30836816932531225, 0.307630146148891, 0.30044837348559716, 0.28983194895188064, 0.2849427532951326, 0.2884321691314101, 0.271484205546774, 0.25912275762763304, 0.2545539034537163, 0.25216804710298624, 0.23332440039075802, 0.22581453153352066, 0.21932958689592202, 0.2184944492069139, 0.2198962070064585, 0.20590642386494595, 0.2047327910262706, 0.20056767895544178, 0.20254321479802087, 0.1949945498868506, 0.1897823033654348, 0.17894511258424217, 0.18190997136920875, 0.1678244513866058, 0.16843386348314793, 0.16982554571031186, 0.16322550717251663, 0.15223509451149791, 0.15457029717630794, 0.15422279715317588, 0.14536181138908355, 0.14635869387299583, 0.14357195572373796, 0.14030225683811115], "accuracy": [0.3065645098686218, 0.611411988735199, 0.7112666964530945, 0.7351737022399902, 0.7609298825263977, 0.7751948237419128, 0.7957997918128967, 0.8057059645652771, 0.8169330358505249, 0.8309338092803955, 0.8355567455291748, 0.8392550349235535, 0.844010055065155, 0.8531237840652466, 0.8584070801734924, 0.8581429123878479, 0.8626337051391602, 0.8615770936012268, 0.8658037185668945, 0.869502067565918, 0.8804649114608765, 0.8799365758895874, 0.8883898854255676, 0.8864086866378784, 0.8869370222091675, 0.8934090733528137, 0.8914278149604797, 0.8905032277107239, 0.898428201675415, 0.8985602855682373, 0.9046360850334167, 0.9038436412811279, 0.9088627696037292, 0.9104477763175964, 0.9191652536392212, 0.9169198274612427, 0.9171839952468872, 0.921938955783844, 0.9228635430335999, 0.9212785363197327, 0.9203540086746216, 0.9255052208900452, 0.9247127175331116, 0.9319772720336914, 0.9261656403541565, 0.9354114532470703, 0.934751033782959, 0.9346189498901367, 0.9331660270690918, 0.9400343298912048, 0.9395059943199158, 0.9399022459983826, 0.9451856017112732, 0.9414872527122498, 0.9446572661399841, 0.9466384649276733], "val_loss": [0.9330802645002093, 0.628886307988848, 0.554838946887425, 0.5153249502182007, 0.497544458934239, 0.4577333927154541, 0.4221451793398176, 0.4245557188987732, 0.3909707409994943, 0.37540753398622784, 0.36829071385519846, 0.35448799814496723, 0.3624378613063267, 0.33446651697158813, 0.3379957250186375, 0.3288059319768633, 0.33262488671711515, 0.32827108246939524, 0.3165872948510306, 0.3070550390652248, 0.31190216541290283, 0.30749318429401945, 0.29673859051295687, 0.29560928685324533, 0.29925010034016203, 0.29360643454960417, 0.30015208039964947, 0.2891980154173715, 0.30282534871782574, 0.298600435256958, 0.2852561133248465, 0.2875937393733433, 0.28428259917667936, 0.283163709299905, 0.28917395217078073, 0.28611782618931364, 0.28464063576289583, 0.2907476850918361, 0.292159446648189, 0.29325530358723234, 0.2985539010592869, 0.2887153540338789, 0.2894803626196725, 0.29900200026375906, 0.3016933373042515, 0.3011419858251299, 0.3111670868737357, 0.31583593572889057, 0.30057082005909513, 0.3153883303914751, 0.30989675862448557, 0.3070366212299892, 0.33345446416309904, 0.3259436658450535, 0.3138682671955654, 0.31387518984930857], "val_accuracy": [0.6423333287239075, 0.7363333106040955, 0.7473333477973938, 0.7670000195503235, 0.7633333206176758, 0.7850000262260437, 0.8100000023841858, 0.8066666722297668, 0.8206666707992554, 0.8376666903495789, 0.8366666436195374, 0.8433333039283752, 0.8433333039283752, 0.8503333330154419, 0.8486666679382324, 0.8569999933242798, 0.8513333201408386, 0.8569999933242798, 0.8579999804496765, 0.8619999885559082, 0.8583333492279053, 0.8616666793823242, 0.8709999918937683, 0.8666666746139526, 0.8676666617393494, 0.8669999837875366, 0.862333357334137, 0.8733333349227905, 0.8663333058357239, 0.8769999742507935, 0.8766666650772095, 0.8793333172798157, 0.8806666731834412, 0.8820000290870667, 0.8786666393280029, 0.8830000162124634, 0.8846666812896729, 0.8816666603088379, 0.8840000033378601, 0.8859999775886536, 0.8856666684150696, 0.887333333492279, 0.8883333206176758, 0.8820000290870667, 0.8886666893959045, 0.887666642665863, 0.8820000290870667, 0.8799999952316284, 0.8896666765213013, 0.8880000114440918, 0.8899999856948853, 0.887666642665863, 0.8836666941642761, 0.8853333592414856, 0.8859999775886536, 0.8893333077430725]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [0, 4, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8488571643829346, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0424233765382303, 1.1105032578089045, 0.7799301555348488, 0.69907111660081, 0.6371118152980807, 0.5932589280543908, 0.5562641399017871, 0.5268036081782737, 0.4979783256867023, 0.4686502986981837, 0.4477955606462083, 0.43276144118750526, 0.4298274579057289, 0.418732047636023, 0.3892467171130888, 0.38457656944700286, 0.3732738932677075, 0.3639172962974359, 0.3530277199851303, 0.34323152868644735, 0.3267168654285134, 0.31892950855871594, 0.31246763746877937, 0.3021346736680153, 0.2935600129132415, 0.28337244145260226, 0.2823482280858614, 0.2808096581414832, 0.26440669706217, 0.2536084143878635, 0.25821083015328655, 0.2463554794825205, 0.23201755187562145, 0.22828161332861088, 0.2272969714745145, 0.22214698673412547, 0.2253414147392382, 0.21965282895640298], "accuracy": [0.3065645098686218, 0.611411988735199, 0.7112666964530945, 0.7338528633117676, 0.7600052952766418, 0.7726852297782898, 0.7924976944923401, 0.8064984679222107, 0.8173292875289917, 0.8294808864593506, 0.8355567455291748, 0.8380662798881531, 0.8418967127799988, 0.8514066934585571, 0.8609166741371155, 0.8565579056739807, 0.8648791313171387, 0.8628978729248047, 0.8681812286376953, 0.8697662353515625, 0.8799365758895874, 0.8809932470321655, 0.8812574148178101, 0.889578640460968, 0.8887861371040344, 0.8967111110687256, 0.8926165699958801, 0.8945978283882141, 0.9031832218170166, 0.9043719172477722, 0.9017302989959717, 0.9096552729606628, 0.9128252267837524, 0.9133535623550415, 0.9166556596755981, 0.91559898853302, 0.9126931428909302, 0.9187690019607544], "val_loss": [0.9330834320613316, 0.628372345651899, 0.5545979908534459, 0.5147920165743146, 0.5003365278244019, 0.4581033502306257, 0.4239787289074489, 0.4219411015510559, 0.3916658077921186, 0.3786880799702236, 0.3681736077581133, 0.3568549411637442, 0.36424559354782104, 0.33856334005083355, 0.3400466527257647, 0.3302376355443682, 0.3314220905303955, 0.32836075339998516, 0.3167814186641148, 0.304878830909729, 0.30746141501835417, 0.3101797274180821, 0.29605002062661306, 0.2980333822114127, 0.2930510129247393, 0.29316891942705425, 0.30735230445861816, 0.289994410106114, 0.29589807987213135, 0.296852775982448, 0.2800947427749634, 0.2861613460949489, 0.2850282107080732, 0.2924057585852487, 0.2889912213597979, 0.29428218943732126, 0.29194233247212004, 0.3043161800929478], "val_accuracy": [0.6423333287239075, 0.7356666922569275, 0.7480000257492065, 0.7666666507720947, 0.7633333206176758, 0.7820000052452087, 0.8066666722297668, 0.8080000281333923, 0.8213333487510681, 0.8356666564941406, 0.8373333215713501, 0.8416666388511658, 0.8403333425521851, 0.8503333330154419, 0.846666693687439, 0.8533333539962769, 0.8529999852180481, 0.8566666841506958, 0.8583333492279053, 0.8600000143051147, 0.8610000014305115, 0.8629999756813049, 0.8656666874885559, 0.8650000095367432, 0.8683333396911621, 0.871666669845581, 0.8653333187103271, 0.8736666440963745, 0.8690000176429749, 0.8759999871253967, 0.8776666522026062, 0.8776666522026062, 0.8786666393280029, 0.8776666522026062, 0.8759999871253967, 0.878000020980835, 0.878333330154419, 0.8730000257492065]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 4, 7, 1, 8, 5, 2, 1], [2, 4, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8434285521507263, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 15, 10, 8, 2, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), tf.math.add(sigma, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0424238666488574, 1.1105623726107268, 0.7805794920384089, 0.6994319606561072, 0.6376663013346018, 0.593137163409562, 0.554906363791762, 0.5260351437461721, 0.49756481407844727, 0.46554985415304123, 0.4465750356069126, 0.42882815763903426, 0.42314743993304677, 0.4132552133291751, 0.39096263989859315, 0.3831857900263028, 0.37355467600750647, 0.36191541329665883, 0.3510551238655178, 0.34597439096981997, 0.3265523770190564, 0.32088159611432654, 0.3063323329610123, 0.30530360302495574, 0.2990939471865248, 0.28297640120883927, 0.28309568215228975, 0.2824478870243712, 0.26191045755817904, 0.2541492745357025, 0.25116011867229066, 0.24772572735273576, 0.22938261932669188, 0.2243767936924713, 0.22394273311919258, 0.21549651661663638, 0.21721546573134115, 0.2106105957808606, 0.20348900468192632, 0.19697861160466448, 0.197001031268668, 0.19310553801758823, 0.19147472921820397, 0.17899941639531133, 0.18982105675296004, 0.1731546107414392, 0.17068486238640723], "accuracy": [0.3065645098686218, 0.6112799048423767, 0.7124554514884949, 0.7346453666687012, 0.7581561207771301, 0.7733456492424011, 0.7918372750282288, 0.805177628993988, 0.8171972036361694, 0.8290846943855286, 0.8368775844573975, 0.8401796221733093, 0.845859169960022, 0.8540483713150024, 0.8619733452796936, 0.8594637513160706, 0.8654074668884277, 0.8648791313171387, 0.8691058158874512, 0.8696341514587402, 0.8811253309249878, 0.8817857503890991, 0.8879936337471008, 0.8869370222091675, 0.8893144726753235, 0.8938053250312805, 0.8919561505317688, 0.893541157245636, 0.9029190540313721, 0.9015982151031494, 0.9037115573883057, 0.9055606722831726, 0.9117686152458191, 0.9124290347099304, 0.9161273241043091, 0.9181085824966431, 0.9171839952468872, 0.9173160791397095, 0.9215427041053772, 0.924448549747467, 0.9229956269264221, 0.9260335564613342, 0.924448549747467, 0.9269581437110901, 0.9251089692115784, 0.9351472854614258, 0.9339585304260254], "val_loss": [0.933072737285069, 0.6284684453691755, 0.555341362953186, 0.5155090434210641, 0.4944978952407837, 0.4596571070807321, 0.42598709038325716, 0.42528843879699707, 0.391661993094853, 0.37445572444370817, 0.36966264247894287, 0.3532131484576634, 0.3627962129456656, 0.3376324347087315, 0.33667073931012836, 0.3253629377910069, 0.3302734409059797, 0.32293496813092915, 0.3161258952958243, 0.3054101381983076, 0.3120990480695452, 0.3117244669369289, 0.3013924615723746, 0.3014260871069772, 0.2923040475164141, 0.296801039150783, 0.29812896251678467, 0.28724052224840435, 0.29676151275634766, 0.29471780572618755, 0.2808927127293178, 0.2852844425610134, 0.2857414484024048, 0.29279784645353046, 0.28508522680827547, 0.2903452771050589, 0.2835164155278887, 0.2881014517375401, 0.29072325570242746, 0.2948235443660191, 0.2998024650982448, 0.2902600509779794, 0.2937566978590829, 0.2984916482652937, 0.30498067821775166, 0.3088233045169285, 0.3139585426875523], "val_accuracy": [0.6423333287239075, 0.7363333106040955, 0.7473333477973938, 0.765333354473114, 0.762333333492279, 0.781333327293396, 0.8050000071525574, 0.8059999942779541, 0.8216666579246521, 0.8366666436195374, 0.8376666903495789, 0.8429999947547913, 0.8420000076293945, 0.8486666679382324, 0.8493333458900452, 0.8553333282470703, 0.8529999852180481, 0.859000027179718, 0.8600000143051147, 0.8629999756813049, 0.8566666841506958, 0.859333336353302, 0.8683333396911621, 0.862333357334137, 0.8733333349227905, 0.8709999918937683, 0.8636666536331177, 0.8786666393280029, 0.8703333139419556, 0.8756666779518127, 0.8799999952316284, 0.8823333382606506, 0.8823333382606506, 0.8813333511352539, 0.8799999952316284, 0.8843333125114441, 0.8833333253860474, 0.8830000162124634, 0.8863333463668823, 0.887666642665863, 0.8820000290870667, 0.890666663646698, 0.8880000114440918, 0.8843333125114441, 0.8816666603088379, 0.8816666603088379, 0.8813333511352539]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 4, 1, 1, 8, 5, 2, 1], [2, 4, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8417142629623413, "mapping_values": [1, 7, 7, 3, 4, 2, 3, 3, 1, 2, 1, 13, 8, 7, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(sigma, sigma)))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0424243320705178, 1.1104225358313038, 0.7800528863244415, 0.6987211483423311, 0.6365744570904184, 0.5905178591890452, 0.5531481669217115, 0.5257326839401927, 0.49744158182177545, 0.4686705376281242, 0.4487402069294662, 0.4309285951564498, 0.42483744701500253, 0.41558851833278004, 0.3921879217994999, 0.37986225140108926, 0.3720370526870228, 0.36154161787083466, 0.35073338050836617, 0.34292927956332336, 0.3241764482938854, 0.3154307175518704, 0.3076005695935616, 0.304854864567782, 0.29608096108932885, 0.2845542538025911, 0.2821187538839901, 0.29300810601166166], "accuracy": [0.3065645098686218, 0.6112799048423767, 0.7111346125602722, 0.735041618347168, 0.7597411274909973, 0.7734777331352234, 0.7943468689918518, 0.8047813773155212, 0.8152159452438354, 0.8278959393501282, 0.8364813327789307, 0.8385946154594421, 0.8448025584220886, 0.8519350290298462, 0.8569541573524475, 0.8584070801734924, 0.8664641380310059, 0.8664641380310059, 0.8677849769592285, 0.8681812286376953, 0.8804649114608765, 0.8837670087814331, 0.889050304889679, 0.887201189994812, 0.8912957310676575, 0.8968431949615479, 0.8924844861030579, 0.8912957310676575], "val_loss": [0.9330737590789795, 0.6283379793167114, 0.5552515983581543, 0.5150953701564244, 0.494245137487139, 0.45764265741620747, 0.423723110130855, 0.4205311792237418, 0.3916337660380772, 0.3789767026901245, 0.36773765087127686, 0.3526113373892648, 0.3613257578441075, 0.33952711309705463, 0.33929747343063354, 0.3266946077346802, 0.3309855801718576, 0.32329537187303814, 0.3130520667348589, 0.30446410179138184, 0.30386253765651156, 0.3080985290663583, 0.29327700819287983, 0.289900609425136, 0.29219707420894075, 0.2911899856158665, 0.3025195172854832, 0.29378839901515413], "val_accuracy": [0.6423333287239075, 0.7353333234786987, 0.7463333606719971, 0.765999972820282, 0.7636666893959045, 0.7833333611488342, 0.8069999814033508, 0.8066666722297668, 0.8240000009536743, 0.8366666436195374, 0.8393333554267883, 0.8473333120346069, 0.8393333554267883, 0.8473333120346069, 0.8426666855812073, 0.8556666374206543, 0.8503333330154419, 0.8576666712760925, 0.8603333234786987, 0.8613333106040955, 0.8633333444595337, 0.8646666407585144, 0.8709999918937683, 0.8703333139419556, 0.8700000047683716, 0.8709999918937683, 0.8646666407585144, 0.8706666827201843]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [28, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [2, 3, 3, 3, 0], [38, 49, 6], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [6, 4, 4, 1, 8, 9, 2, 1, 2], [2, 4, 4, 3], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.777999997138977, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 10, 8, 6, 2, 1, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), sigma)))), sigma)), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291748770538842, 2.263861749496883, 2.2335257129646515, 2.195575716221227, 2.1401979251544647, 2.0668533835601908, 1.972696531718008, 1.8527904847798455, 1.716071408894934, 1.5906608711223025, 1.4773983619216569, 1.3725313300454085, 1.299499366167215, 1.244579165965307, 1.1861840804743335, 1.148404348339025, 1.104428160412594, 1.0732919174556357, 1.0373689533618338, 1.0089953632686022, 0.9822235317624493, 0.9697784231701359, 0.9498226010583695, 0.9350155765952656, 0.918089241501898, 0.8965147860990839, 0.8873714257650183, 0.872047431071232, 0.8651877007920902, 0.86143643247327, 0.8476473673412498, 0.8356923004655381, 0.8276416359560569, 0.8256765502854235, 0.8134250485460913, 0.8137214577602688, 0.8011269921545402, 0.790059173363799, 0.7941243664117112, 0.7794515869447726, 0.7807586872346208, 0.7745414812960693, 0.7667416965626077, 0.7656606485531582, 0.7626674403336228, 0.7529040949849436, 0.7445464030610823, 0.7541792926897289, 0.7379742163031596, 0.7431000538348459, 0.7264332931669334, 0.7316764573127587, 0.731771167007026, 0.72117451292696, 0.7182799020164348, 0.7046123226525651, 0.7146937829896113, 0.7116464586967113, 0.7000319670141334, 0.6967843211385253, 0.7029609913996671, 0.6900807040368466, 0.686306870254496, 0.6850050242585497, 0.6849210746000787, 0.6819237057385805, 0.6796730322655812, 0.6761531024450923, 0.6694231610398298, 0.672059504969434, 0.6732037911530357, 0.6679088925688637, 0.663310541539475], "accuracy": [0.1142517477273941, 0.19138818979263306, 0.2525425851345062, 0.313300758600235, 0.352529376745224, 0.3899088501930237, 0.4189670979976654, 0.44327038526535034, 0.4675736427307129, 0.4935939908027649, 0.5155197381973267, 0.5486725568771362, 0.5635979175567627, 0.5720512270927429, 0.587372899055481, 0.5982036590576172, 0.6174877882003784, 0.6236956715583801, 0.6336019039154053, 0.6457535624504089, 0.6522256135940552, 0.6565843224525452, 0.6649055480957031, 0.6645092964172363, 0.6760005354881287, 0.6774534583091736, 0.6824725866317749, 0.6935675740242004, 0.6914542317390442, 0.6900013089179993, 0.695813000202179, 0.6960771083831787, 0.6993792057037354, 0.7034738063812256, 0.7046625018119812, 0.7079645991325378, 0.7121912837028503, 0.7127195596694946, 0.7137762308120728, 0.7172104120254517, 0.7186633348464966, 0.7161537408828735, 0.7190595865249634, 0.7275128960609436, 0.7239466309547424, 0.7228899598121643, 0.7251353859901428, 0.7220974564552307, 0.7309470176696777, 0.7301545143127441, 0.7360982894897461, 0.7312111854553223, 0.7302865982055664, 0.7363624572753906, 0.7323999404907227, 0.7421740889549255, 0.7322678565979004, 0.739400327205658, 0.7424382567405701, 0.7450799345970154, 0.7400607466697693, 0.7453441023826599, 0.750759482383728, 0.7528728246688843, 0.7503632307052612, 0.7497028112411499, 0.7467969655990601, 0.7526086568832397, 0.7481178045272827, 0.7553823590278625, 0.7473253011703491, 0.7544577717781067, 0.7565711140632629], "val_loss": [1.9460744857788086, 1.918935911996024, 1.8857356480189733, 1.8415895189557756, 1.7801111766270228, 1.6962193080357142, 1.588493926184518, 1.4609957763126917, 1.326951265335083, 1.2008204119546073, 1.0947809219360352, 1.008633783885411, 0.9385819435119629, 0.8872585637228829, 0.8422769989286151, 0.8095577274050031, 0.7789088657924107, 0.7537139143262591, 0.7318885666983468, 0.7143205404281616, 0.6975021873201642, 0.6823392084666661, 0.668749383517674, 0.6573265450341361, 0.6493711471557617, 0.6400471414838519, 0.6296773638044085, 0.6211855070931571, 0.6151284830910819, 0.607995765549796, 0.6015096221651349, 0.5941283362252372, 0.5896602698734829, 0.5838121346064976, 0.5790209089006696, 0.5737140348979405, 0.570965221949986, 0.5654539210455758, 0.5605994973863874, 0.5567371164049421, 0.553705062185015, 0.5501125540052142, 0.54632568359375, 0.5432861702782767, 0.5401126827512469, 0.5374259778431484, 0.5322474581854684, 0.5319761548723493, 0.5281403916222709, 0.5254681621279035, 0.5227560997009277, 0.5212396212986538, 0.5188578026635307, 0.5161571502685547, 0.5170586960656303, 0.5128588676452637, 0.510497876576015, 0.5089498588017055, 0.5056798117501395, 0.5037240982055664, 0.5023230314254761, 0.5004363400595528, 0.49866511140550884, 0.4983541113989694, 0.493739196232387, 0.49176837716783794, 0.4918444667543684, 0.4893946817943028, 0.4883021797452654, 0.4862537043435233, 0.48617308480398996, 0.48245017869131906, 0.48134686265672955], "val_accuracy": [0.2536666691303253, 0.3713333308696747, 0.4153333306312561, 0.4543333351612091, 0.49399998784065247, 0.5260000228881836, 0.54666668176651, 0.5569999814033508, 0.5863333344459534, 0.5953333377838135, 0.6486666798591614, 0.6629999876022339, 0.6773333549499512, 0.6853333115577698, 0.6953333616256714, 0.699999988079071, 0.706333339214325, 0.7056666612625122, 0.7153333425521851, 0.7206666469573975, 0.7206666469573975, 0.7266666889190674, 0.7333333492279053, 0.734333336353302, 0.7390000224113464, 0.737666666507721, 0.7463333606719971, 0.7456666827201843, 0.7440000176429749, 0.7553333044052124, 0.7536666393280029, 0.7563333511352539, 0.7566666603088379, 0.7609999775886536, 0.7546666860580444, 0.7590000033378601, 0.7590000033378601, 0.7616666555404663, 0.765999972820282, 0.7699999809265137, 0.768666684627533, 0.768666684627533, 0.7746666669845581, 0.7756666541099548, 0.7749999761581421, 0.7696666717529297, 0.7796666622161865, 0.7766666412353516, 0.7770000100135803, 0.7786666750907898, 0.7799999713897705, 0.7743333578109741, 0.7786666750907898, 0.7793333530426025, 0.7786666750907898, 0.7820000052452087, 0.781000018119812, 0.781000018119812, 0.7853333353996277, 0.7829999923706055, 0.7853333353996277, 0.7850000262260437, 0.7866666913032532, 0.7833333611488342, 0.7863333225250244, 0.7873333096504211, 0.7893333435058594, 0.7926666736602783, 0.7916666865348816, 0.7886666655540466, 0.7886666655540466, 0.7916666865348816, 0.7919999957084656]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [4, 6, 2, 5, 8, 0, 0, 2, 8, 5, 9, 2, 4, 1, 5, 5, 7, 6, 9, 8, 1, 8, 1, 6, 5], [0, 0, 1, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 60, 80, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 27, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [5, 7, 7, 1, 8, 5, 2, 1], [2, 7, 0, 6], [44, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.11142857372760773, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302649201907187, 2.301523067727301, 2.3018996531952958, 2.3023432023206234, 2.300616500777906, 2.3013899172018424, 2.3021819166078417, 2.3021759317378168, 2.300100836850208, 2.3015516124554534, 2.3006297241443217, 2.3004867078259386, 2.30076019878259, 2.3014253435700467, 2.301319378336517, 2.3011383740121913, 2.3005435977865756, 2.3008992547576987, 2.3006463884094908, 2.300800034682103, 2.3008167485456426, 2.3008698339491254, 2.3012814057296875, 2.3011034214265154, 2.3007417003854296, 2.3009201848606122, 2.3007938642354455, 2.30089888105366, 2.301118938379032], "accuracy": [0.08942015469074249, 0.09338264167308807, 0.09074098616838455, 0.09245806187391281, 0.09391097724437714, 0.09245806187391281, 0.08691058307886124, 0.09219389408826828, 0.09998679161071777, 0.09628847241401672, 0.09694888442754745, 0.09628847241401672, 0.0952318087220192, 0.09034473448991776, 0.09893012791872025, 0.0940430611371994, 0.09826971590518951, 0.09655263274908066, 0.09747721254825592, 0.09496764093637466, 0.09985470771789551, 0.09959053993225098, 0.09747721254825592, 0.09813763201236725, 0.1002509593963623, 0.1010434553027153, 0.10315678268671036, 0.10091137140989304, 0.09932637959718704], "val_loss": [1.9709538732256209, 1.970867701939174, 1.9707751274108887, 1.9706939969744002, 1.9706200190952845, 1.9705602100917272, 1.9705193383353097, 1.9705119814191545, 1.970508098602295, 1.9705167497907365, 1.9705467224121094, 1.9705961772373743, 1.9706600734165736, 1.9707487651279993, 1.970855644771031, 1.9709638868059431, 1.9710683822631836, 1.9711827550615584, 1.971304076058524, 1.971433435167585, 1.9715641566685267, 1.9716879980904716, 1.9718061174665178, 1.9719243730817522, 1.9720392227172852, 1.9721486909048898, 1.972254821232387, 1.972353390284947, 1.9724507331848145], "val_accuracy": [0.038333334028720856, 0.0403333343565464, 0.04533333331346512, 0.04833333194255829, 0.0533333346247673, 0.055666666477918625, 0.059333331882953644, 0.06466666609048843, 0.06933332979679108, 0.07266666740179062, 0.07800000160932541, 0.08299999684095383, 0.08900000154972076, 0.09099999815225601, 0.09566666930913925, 0.0989999994635582, 0.10400000214576721, 0.10633333027362823, 0.10566666722297668, 0.10766666382551193, 0.1106666699051857, 0.11166666448116302, 0.11233333498239517, 0.11366666853427887, 0.11133333295583725, 0.11133333295583725, 0.10866666585206985, 0.10566666722297668, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [4, 6, 2, 5, 8, 0, 0, 2, 8, 5, 9, 2, 4, 1, 5, 5, 7, 6, 9, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 60, 80, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 7, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 49, 6], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [6, 4, 7, 1, 8, 5, 2, 1], [2, 4, 4], [83, 55], [0, 1, 0, 1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [8, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [16, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [3, 4, 8, 1, 8, 5, 2, 1], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3028273404534185, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [18, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 6, 7, 1, 8, 3, 2, 1], [2, 4, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 10, 6, 5, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303379910764693, 2.7780712760907154, 23.42394067947938, 98.59304779540467, 231.58741110682158, 421.89854473677826], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9930064337594169, 6.029577936444964, 50.09008571079799, 143.52459716796875, 286.2279139927455, 478.33262416294644], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 6, 2, 5, 8, 0, 0, 2, 8, 5, 9, 2, 4, 1, 5, 5, 7, 6, 9, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 7, 9, 0, 1, 9], [2, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [5, 4, 7, 1, 8, 5, 2, 1], [2, 4, 0, 6], [64, 55], [0, 1, 0, 1, 1], [4, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 3, 1, 1, 2, 2, 1, 1, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [48, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [6, 4, 7, 1, 8, 5, 2, 1, 6, 5], [2, 4, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3028273404534185, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 3, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 60, 80, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [9, 3, 9, 0, 1, 9], [0, 2, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [3, 4, 7, 1, 8, 5, 2, 1], [7, 1, 0], [44, 55], [0, 1, 0, 1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 7, 5, 3, 2, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3028273404534185, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [4, 6, 2, 5, 8, 0, 0, 2, 8, 5, 9, 2, 4, 1, 5, 5, 7, 6, 9, 8, 1, 8, 1, 6, 5], [2, 0, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [5, 7, 7, 1, 8, 5, 2, 1], [2, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303379910764693, 2.778070920745946, 23.42394329751755, 98.59306305419373, 231.5874171530991, 421.89863110180653], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9930065018790108, 6.029578617640904, 50.09009007045201, 143.52460588727678, 286.22794015066967, 478.3326939174107], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [4, 6, 2, 5, 8, 0, 0, 2, 8, 5, 9, 2, 4, 1, 5, 5, 7, 6, 9, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 81, 70, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [5, 2, 7, 1, 8, 5, 2, 1], [4, 0, 4], [64, 55], [1, 0, 0, 1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [4, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [31, 84, 6], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [6, 2, 7, 1, 6, 3, 2, 3], [2, 4, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 60, 80, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [2, 2, 3, 3, 0], [38, 27, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [6, 4, 7, 1, 8, 5, 2, 1], [7, 4, 0], [44, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 2, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.302045845667353, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [5, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [9, 4, 7, 1, 8, 5, 2, 1], [2, 4, 4], [47, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [4, 6, 2, 4, 8, 0, 0, 2, 8, 5, 9, 2, 4, 1, 5, 5, 7, 6, 9, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [48, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [1, 5, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [3, 4, 8, 1, 8, 5, 2, 1], [2, 2, 0], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 1, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [9, 3, 9, 0, 1, 9], [4, 3, 3, 3, 0], [12, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [5, 7, 7, 1, 8, 5, 2, 1], [2, 4, 4], [64, 55], [0, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3570948509004186, 3.021528989663135, 4.920501053970976, 8.054088934773798, 12.176019731813087, 17.813277606210846], "accuracy": [0.0948355570435524, 0.10196803510189056, 0.09906221181154251, 0.10077928751707077, 0.1018359512090683, 0.10487385839223862], "val_loss": [2.090093340192522, 2.770202023642404, 4.282088960920062, 6.584294319152832, 9.648898260934013, 13.518467766898018], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [4, 6, 2, 4, 8, 0, 0, 2, 8, 5, 9, 2, 4, 1, 5, 5, 7, 6, 9, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [2, 7, 9, 0, 1, 9], [3, 0, 3, 3, 0], [38, 84, 6], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [3, 1, 7, 1, 8, 5, 2, 1], [2, 4, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3026667783729877, 2.301663837097797, 2.302263315563834, 2.30294762078435, 2.3012929801313615, 2.302159515023625], "accuracy": [0.08942015469074249, 0.09377889335155487, 0.09153348207473755, 0.09206181764602661, 0.09179764986038208, 0.08955223858356476], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]