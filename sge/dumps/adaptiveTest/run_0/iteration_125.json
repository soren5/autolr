[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 4, 5], [36, 55, 6], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.8557142615318298, "mapping_values": [1, 3, 3, 1, 2, 2, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0710226097567963, 1.1116456141750244, 0.7865561892831676, 0.6972303309256075, 0.6355134977593382, 0.5942503056269847, 0.5594066119921474, 0.5222507680742543, 0.5096956444509341, 0.47780566495155474, 0.46101854497321043, 0.43946689219680113, 0.42042557891444005, 0.4133450365526297, 0.40013989960087637, 0.3756873634717783, 0.37163230375669826, 0.37143015800497364, 0.35417703670706524, 0.33686038440780053, 0.3267764741159496, 0.3157616009400143, 0.3132515770529932, 0.29884437145203996, 0.28686337850632654, 0.27569631590756283, 0.27355588910964185, 0.26941299778186034, 0.25547805381662037, 0.25778454466581563, 0.25087232181755403, 0.2394537151257407, 0.23943263528495337, 0.24029337839246695, 0.22357481435037732, 0.22846780672694997, 0.21180853457648316, 0.21403894215534863, 0.201780714158605, 0.1964394312965525, 0.20028618622678004, 0.1960995368863204, 0.18706887416623255, 0.19085210188386809, 0.17747333690301695, 0.17482200948679688, 0.17668039269529834, 0.16863628763918548, 0.16235236478338405, 0.16067187832905835, 0.16769403104280767, 0.15949700515519957, 0.15131171062055312, 0.14411932524633667], "accuracy": [0.3004887104034424, 0.6046757102012634, 0.707040011882782, 0.7374191284179688, 0.7611940503120422, 0.7761194109916687, 0.7926297783851624, 0.8057059645652771, 0.8142913579940796, 0.8231409192085266, 0.8372738361358643, 0.8372738361358643, 0.8428213000297546, 0.8474441766738892, 0.8495575189590454, 0.8640866279602051, 0.8636903762817383, 0.8625016212463379, 0.8705587387084961, 0.8749174475669861, 0.8790120482444763, 0.8837670087814331, 0.8824461698532104, 0.8845595121383667, 0.8923524022102356, 0.8972394466400146, 0.89552241563797, 0.9006736278533936, 0.9025228023529053, 0.9021265506744385, 0.9071456789970398, 0.9104477763175964, 0.9060890078544617, 0.9105798602104187, 0.9117686152458191, 0.9141460657119751, 0.9182406663894653, 0.9154669046401978, 0.9191652536392212, 0.9229956269264221, 0.9215427041053772, 0.925901472568512, 0.9265618920326233, 0.927882730960846, 0.9314489364624023, 0.9351472854614258, 0.9315810203552246, 0.9334301948547363, 0.9351472854614258, 0.9356756210327148, 0.9354114532470703, 0.9375247359275818, 0.9412230849266052, 0.9457139372825623], "val_loss": [0.9680723122188023, 0.6382477964673724, 0.5547301939555577, 0.5154886245727539, 0.48823535442352295, 0.4639345918382917, 0.4334363852228437, 0.42941637550081524, 0.4084707072802952, 0.38506026778902325, 0.37544249636786325, 0.36707712922777447, 0.35782696519579205, 0.3710567695753915, 0.3328906638281686, 0.33055046626499723, 0.3301848769187927, 0.32910033634730745, 0.31395569869450163, 0.3131564344678606, 0.31333046300070627, 0.3020876135144915, 0.297404876777104, 0.3010669691222055, 0.2977115341595241, 0.2929022823061262, 0.2850313697542463, 0.2967500771795, 0.2933382647378104, 0.2876129150390625, 0.28982546499797274, 0.2840169242450169, 0.2869419370378767, 0.2902180126735142, 0.28958905594689505, 0.29325016907283236, 0.2922482831137521, 0.2888164349964687, 0.29206797906330656, 0.2966001204081944, 0.2935422658920288, 0.3024595464978899, 0.30439454317092896, 0.30479107584272114, 0.29382920265197754, 0.31439212390354704, 0.3139383111681257, 0.3073107429913112, 0.3033396601676941, 0.30561461618968416, 0.3022822311946324, 0.31444809266499113, 0.31262528896331787, 0.32057033266339985], "val_accuracy": [0.6413333415985107, 0.7213333249092102, 0.753333330154419, 0.7666666507720947, 0.7789999842643738, 0.778333306312561, 0.7990000247955322, 0.8036666512489319, 0.8069999814033508, 0.8253333568572998, 0.8289999961853027, 0.8396666646003723, 0.8420000076293945, 0.8363333344459534, 0.8533333539962769, 0.8533333539962769, 0.8566666841506958, 0.8546666502952576, 0.8650000095367432, 0.8696666955947876, 0.8616666793823242, 0.8706666827201843, 0.874666690826416, 0.875, 0.8740000128746033, 0.878000020980835, 0.8766666650772095, 0.8756666779518127, 0.878000020980835, 0.8806666731834412, 0.8756666779518127, 0.8820000290870667, 0.8823333382606506, 0.8806666731834412, 0.8823333382606506, 0.8840000033378601, 0.8809999823570251, 0.8799999952316284, 0.8826666474342346, 0.8856666684150696, 0.887333333492279, 0.8866666555404663, 0.8816666603088379, 0.8830000162124634, 0.8836666941642761, 0.8889999985694885, 0.887666642665863, 0.8889999985694885, 0.890999972820282, 0.887666642665863, 0.8886666893959045, 0.8893333077430725, 0.8856666684150696, 0.8893333077430725]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 4, 5], [36, 55, 6], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.8497142791748047, "mapping_values": [1, 15, 15, 10, 5, 4, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0725493091145655, 1.1130791824916728, 0.7876544462030023, 0.6958668320375174, 0.6359858269374038, 0.5911639916221337, 0.5585473525982334, 0.5236031888514115, 0.5129382002701645, 0.4755061264043439, 0.4665490619581389, 0.44777382384548253, 0.4327741948691625, 0.4203072925993889, 0.4059744815131409, 0.37966557049228533, 0.3752221848238508, 0.37635694316837687, 0.3617467260741759, 0.34923488961360744, 0.33121745977435113, 0.32322654608312834, 0.32055562697601925, 0.30149131242184357, 0.29684871500902926, 0.28742986894271094, 0.282971517737547, 0.2844019366167225, 0.2704086367125997, 0.2620701455972324, 0.2568804260691191, 0.24291917118595072, 0.24139788922986744, 0.240677137467619, 0.22784175667796136], "accuracy": [0.2996962070465088, 0.6040153503417969, 0.7099458575248718, 0.7358341217041016, 0.7609298825263977, 0.7766477465629578, 0.7928939461708069, 0.8034605979919434, 0.8098005652427673, 0.8210275769233704, 0.8356888294219971, 0.8330471515655518, 0.8381983637809753, 0.846387505531311, 0.8482366800308228, 0.8643507957458496, 0.8601241707801819, 0.8603883385658264, 0.8665962219238281, 0.8683133125305176, 0.8767666220664978, 0.8819178342819214, 0.8799365758895874, 0.8868049383163452, 0.8910315632820129, 0.8911636471748352, 0.8973715305328369, 0.8942015767097473, 0.896446943283081, 0.9001452922821045, 0.9058248400688171, 0.9100515246391296, 0.9035794734954834, 0.9113723635673523, 0.9105798602104187], "val_loss": [0.9741734095982143, 0.6432677507400513, 0.5500739642551967, 0.5130376645496914, 0.4837641545704433, 0.4682113953999111, 0.4379408700125558, 0.4217647739819118, 0.40608537197113037, 0.39631552355630056, 0.38318441595349995, 0.37436969791139874, 0.35794910362788607, 0.36315810680389404, 0.3381370646612985, 0.3324074574879238, 0.32757167305265156, 0.33264239345278057, 0.31700083187648226, 0.31817724875041414, 0.3115629553794861, 0.30955914088657926, 0.30278007473264423, 0.306082512651171, 0.2974861264228821, 0.2976964626993452, 0.2881205081939697, 0.30258566992623465, 0.2956640635217939, 0.2833945495741708, 0.28540126766477314, 0.2992832830974034, 0.28782629115240915, 0.29548624583653044, 0.2889974202428545], "val_accuracy": [0.640333354473114, 0.721666693687439, 0.7549999952316284, 0.7649999856948853, 0.7796666622161865, 0.7816666960716248, 0.7946666479110718, 0.8106666803359985, 0.8113333582878113, 0.8190000057220459, 0.8276666402816772, 0.8330000042915344, 0.840666651725769, 0.8399999737739563, 0.8523333072662354, 0.8529999852180481, 0.8610000014305115, 0.8553333282470703, 0.862666666507721, 0.8666666746139526, 0.862666666507721, 0.862666666507721, 0.8663333058357239, 0.8683333396911621, 0.8723333477973938, 0.8769999742507935, 0.8769999742507935, 0.871666669845581, 0.8730000257492065, 0.8803333044052124, 0.875333309173584, 0.8769999742507935, 0.8763333559036255, 0.8756666779518127, 0.878000020980835]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1], [6, 3, 7, 9, 1, 9], [5, 0, 0, 2], [36, 55, 6, 22], [0, 1, 0], [0], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7894285917282104, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 6, 3, 4, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2442691846688065, 1.9616023671782925, 1.5211823258685273, 1.3452532634979477, 1.1676056668144632, 1.1163384498401703, 1.0063337025751353, 0.9445874659518493, 0.9346068171603946, 0.8783649164829523, 0.8369179898406757, 0.8009513575466097, 0.8059689624670742, 0.8035553624176188, 0.7625238980678221, 0.752376530274676, 0.7327272638416782, 0.7227576212120282, 0.7171770272363903, 0.7172726996980087, 0.7079529442476669, 0.6806594213443016, 0.676384177961842, 0.6627312269523836, 0.6522895449251153, 0.651616950706484, 0.6486398875437802, 0.632009738094031, 0.6191792857015547, 0.6264212383113564, 0.6401519137776019, 0.6296622711496425, 0.5962856272428642, 0.6161919375924607], "accuracy": [0.218465194106102, 0.414608359336853, 0.4983489513397217, 0.5057455897331238, 0.5791836977005005, 0.6032228469848633, 0.6318848133087158, 0.6546030640602112, 0.6560559868812561, 0.6804913282394409, 0.6885483860969543, 0.6973979473114014, 0.6927750706672668, 0.700171709060669, 0.7231541275978088, 0.7189275026321411, 0.7297582626342773, 0.7269845604896545, 0.7251353859901428, 0.7248712182044983, 0.7326641082763672, 0.7427024245262146, 0.7433628439903259, 0.752212405204773, 0.7553823590278625, 0.754589855670929, 0.7557786107063293, 0.7597411274909973, 0.7716285586357117, 0.7637035846710205, 0.7528728246688843, 0.7611940503120422, 0.7736098170280457, 0.7676661014556885], "val_loss": [1.8078910282679967, 1.3399875164031982, 1.1505864007132394, 0.942685604095459, 0.9029439517429897, 0.7708928414753505, 0.7404171058109829, 0.6835043770926339, 0.6795500857489449, 0.6341545070920672, 0.5932149716785976, 0.5836652517318726, 0.6381368466785976, 0.5843845435551235, 0.5485068219048637, 0.5582094192504883, 0.5369568722588676, 0.5376449823379517, 0.5501245430537632, 0.5409726415361676, 0.536957962172372, 0.5160529443195888, 0.5170299155371529, 0.4933715547834124, 0.49518040248325895, 0.4991370269230434, 0.5071280513490949, 0.4858921766281128, 0.46653405257633757, 0.4900676352637155, 0.4876477377755301, 0.4680213928222656, 0.47136553696223665, 0.4745188440595354], "val_accuracy": [0.49000000953674316, 0.5873333215713501, 0.5299999713897705, 0.5693333148956299, 0.6273333430290222, 0.6753333210945129, 0.6943333148956299, 0.6946666836738586, 0.7086666822433472, 0.7213333249092102, 0.7426666617393494, 0.746666669845581, 0.731333315372467, 0.7506666779518127, 0.7646666765213013, 0.7523333430290222, 0.7703333497047424, 0.746999979019165, 0.762333333492279, 0.7706666588783264, 0.7473333477973938, 0.7716666460037231, 0.7803333401679993, 0.7856666445732117, 0.7863333225250244, 0.7883333563804626, 0.7573333382606506, 0.7870000004768372, 0.800000011920929, 0.7806666493415833, 0.7850000262260437, 0.7926666736602783, 0.7916666865348816, 0.7926666736602783]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [5, 0, 2, 2], [36, 55, 0], [0, 1, 0], [0, 1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7028571367263794, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.050494813931664, 1.1848681932742082, 0.8738120860821063, 0.7996512664512259, 0.7092565676996249, 0.6695164082907195, 0.6355216672879955, 0.6106243288008418, 0.5997499176901975, 0.5560112342055384, 0.5489416973796487, 0.512939290835983, 0.5071198270620372, 0.49746933673130694, 0.4772992892555667, 0.4596405605267792, 0.47567117936921993, 0.5000961067071602, 0.4627905771315389, 0.4664128881403956, 0.4656770747996844, 0.476079237412279, 0.454093720631561, 0.4760476082953102, 0.48157466544750394, 0.5211726778911766], "accuracy": [0.30180954933166504, 0.5934486985206604, 0.6753401160240173, 0.6999075412750244, 0.7338528633117676, 0.7510236501693726, 0.7581561207771301, 0.7681944370269775, 0.7784969210624695, 0.7869502305984497, 0.789988100528717, 0.8037247657775879, 0.7988376617431641, 0.8141592741012573, 0.8164047002792358, 0.8238013386726379, 0.8191784620285034, 0.8072909712791443, 0.8285563588142395, 0.8271034359931946, 0.8274996876716614, 0.8297450542449951, 0.8281601071357727, 0.8214238286018372, 0.8232730031013489, 0.8029322624206543], "val_loss": [1.0090061596461706, 0.7023623841149467, 0.6106436593191964, 0.5577136448451451, 0.5224526950291225, 0.4907198803765433, 0.4524072749274118, 0.46361519609178814, 0.42624367986406597, 0.4283523304121835, 0.41030791827610563, 0.39493712357112337, 0.3798556923866272, 0.384183474949428, 0.38895117385046823, 0.3937128186225891, 0.3993985652923584, 0.411020176751273, 0.4308267150606428, 0.4489160350390843, 0.42381858825683594, 0.4314411197389875, 0.4009688241141183, 0.46387314796447754, 0.43220599208559307, 0.4932428939001901], "val_accuracy": [0.612666666507721, 0.7136666774749756, 0.7306666374206543, 0.7473333477973938, 0.7683333158493042, 0.7689999938011169, 0.7979999780654907, 0.7943333387374878, 0.8100000023841858, 0.8106666803359985, 0.8209999799728394, 0.8273333311080933, 0.8383333086967468, 0.8336666822433472, 0.8383333086967468, 0.8326666951179504, 0.8353333473205566, 0.8399999737739563, 0.8276666402816772, 0.8326666951179504, 0.843666672706604, 0.8323333263397217, 0.8386666774749756, 0.8393333554267883, 0.8246666789054871, 0.8236666917800903]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 5, 9, 2, 9, 6, 2, 0, 8, 5, 2], [1, 0, 0, 3, 2, 2, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [12, 17, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0], [2, 2, 7, 9, 4, 9], [5, 3, 0, 2], [26, 47, 61], [0, 1, 0], [1], [8], [5], [68], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.16257143020629883, "mapping_values": [1, 6, 6, 5, 1, 2, 9, 9, 6, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.332546965856405, 2.5923192917379514, 2.313166738768862, 2.3059045866637606, 2.3039486082301495, 2.3028544114958955], "accuracy": [0.19535067677497864, 0.11478008329868317, 0.09866596013307571, 0.09747721254825592, 0.09509972482919693, 0.09628847241401672], "val_loss": [2.07902683530535, 1.9872843197413854, 1.9772788456508092, 1.974466323852539, 1.9739268166678292, 1.973698684147426], "val_accuracy": [0.14366666972637177, 0.09833333641290665, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 4, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 60, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1], [4, 7, 7, 9, 1, 9], [5, 0, 2, 1], [36, 55, 0], [0, 1, 0], [1], [8], [6], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.16200000047683716, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.3304875439908512, 2.431139900006985, 2.311112600877505, 2.3052772854958796, 2.303765661665131, 2.302826842643235], "accuracy": [0.19535067677497864, 0.11491216719150543, 0.09760929644107819, 0.09087307006120682, 0.09919429570436478, 0.09628847241401672], "val_loss": [2.080662318638393, 1.9848063332693917, 1.9764832087925501, 1.9742825371878487, 1.9738828114100866, 1.973689079284668], "val_accuracy": [0.1433333307504654, 0.09833333641290665, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 60, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 6, 9, 1, 9], [5, 0, 3, 1], [36, 55, 0], [0, 0, 0], [0, 1, 1], [3], [3, 2], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [10.502677146076227, 326.17988806711827, 13901.654978701625, 657899.4109513274, 29253577.125346716, 1483235227.43944, 67975093248.40576, 3156152627160.5063, 151043022464124.03, 7368467653272839.0], "accuracy": [0.09840179979801178, 0.09919429570436478, 0.1010434553027153, 0.10077928751707077, 0.10038304328918457, 0.1014397069811821, 0.09589222073554993, 0.09998679161071777, 0.1010434553027153, 0.09906221181154251], "val_loss": [40.2108404976981, 1515.410923549107, 68420.77232142857, 3216343.4285714286, 149729005.7142857, 7196536100.571428, 332318638080.0, 15627025795364.572, 736278573968822.9, 3.5036257073795656e+16], "val_accuracy": [0.09933333098888397, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 7, 9, 1, 9], [1, 0, 0, 2], [36, 55, 6], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 7, 7, 4, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, alpha), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3025480150278956, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 2, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [6, 3, 7, 9, 1, 6], [5, 0, 0, 2, 5], [36, 55, 6, 8], [0, 1, 0], [1], [8], [5], [68], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1313835930.4100256, 26599444049.35464, 132469393913.57549, 399567193340.7877, 934824875371.6952, 1867551448682.2412], "accuracy": [0.09602430462837219, 0.10566636174917221, 0.1014397069811821, 0.10051512718200684, 0.09694888442754745, 0.09945846349000931], "val_loss": [5332569673.142858, 49051007853.71429, 187844600978.2857, 500846746477.7143, 1097991005330.2858, 2124859647122.2856], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 2, 8, 6, 2, 0, 3, 5, 2], [0, 0, 0, 0, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 53, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 7, 7, 9, 1, 9], [5, 0, 0, 2], [36, 55, 6], [0, 1, 0], [1], [8], [3], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 33, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 4, 5], [36, 55, 6], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [2, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3029228943119495, 2.303032610599375, 2.303091018774002, 2.3032990049582116, 2.3032780456001323, 2.303062607756758, 2.303782737108663, 2.30301919195709, 2.303997520033111], "accuracy": [0.09681680053472519, 0.09734513610601425, 0.10157178342342377, 0.09893012791872025, 0.0940430611371994, 0.10011887550354004, 0.09906221181154251, 0.09813763201236725, 0.09391097724437714], "val_loss": [1.9737702097211565, 1.9737632615225655, 1.973855767931257, 1.9739603996276855, 1.973957129887172, 1.9741365568978446, 1.9743264743259974, 1.9740797451564245, 1.9748734065464564], "val_accuracy": [0.09933333098888397, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.09933333098888397, 0.1003333330154419, 0.10000000149011612, 0.1003333330154419, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 60, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1], [6, 3, 6, 9, 1, 9], [5, 0, 0, 1], [35, 55, 6], [1, 1, 0], [1], [3], [3], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1], [6, 3, 6, 9, 1, 9], [4, 0, 4, 5], [36, 55, 6], [1, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [3, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08836349099874496, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [36, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 7, 9, 4, 9], [4, 0, 4, 5], [55, 55, 83], [0, 1, 0], [1], [8], [5], [68], [0, 0, 0, 1, 1, 0, 1, 0], [3, 4, 5, 2, 9], [2, 0, 2], [53, 32]], "fitness": -0.08228571712970734, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.square(beta), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302259125367541, 2.303804864626456, 2.3025118102644413, 2.3042257395182397, 2.3047213878739923, 2.304954181242109, 2.306588614700241, 2.3054540411135807, 2.305813068852937, 2.3056515005396627, 2.305923084525573, 2.3056040881820374, 2.3058499940996393, 2.3057355749734625, 2.3055162238344113, 2.305420786461196, 2.3066629159247416, 2.3055330430984244, 2.3059166583402706, 2.3063754331890807, 2.306213815844275, 2.30504825423501, 2.305858356668303, 2.3051686355891623, 2.3057834646406112, 2.3061238293477087, 2.305192081100984, 2.3046429142141385, 2.3049924793402123, 2.304697226885996, 2.3051223766219584, 2.304620183548671, 2.3042888630965384, 2.304699296067026, 2.304341678338485, 2.3046364119465106, 2.3041015069057376, 2.304185662365955, 2.304813066478009], "accuracy": [0.08875974267721176, 0.0874389111995697, 0.08942015469074249, 0.08611807972192764, 0.08836349099874496, 0.08308017253875732, 0.07924976944923401, 0.07991018146276474, 0.08281600475311279, 0.07832518965005875, 0.07766477018594742, 0.07317395508289337, 0.07158895581960678, 0.07726852595806122, 0.080042265355587, 0.07700435817241669, 0.07330603897571564, 0.07872143387794495, 0.0746268630027771, 0.07026813179254532, 0.06934354454278946, 0.07449477910995483, 0.07119271159172058, 0.07106062769889832, 0.07290978729724884, 0.07132479548454285, 0.07092854380607605, 0.0742306187748909, 0.07158895581960678, 0.07066437602043152, 0.06868313252925873, 0.07013604789972305, 0.07370228320360184, 0.0754193663597107, 0.07607977837324142, 0.0746268630027771, 0.07066437602043152, 0.07211729139089584, 0.07106062769889832], "val_loss": [1.9715720585414342, 1.9720963069370814, 1.9726544788905553, 1.9731033188956124, 1.9736614908490862, 1.9741409846714564, 1.974461351122175, 1.9748286519731795, 1.9751227242606026, 1.9753434317452567, 1.9754905700683594, 1.9755990845816476, 1.975616727556501, 1.975656305040632, 1.9756926809038435, 1.975735868726458, 1.9757489476885115, 1.9757485389709473, 1.9757198606218611, 1.9756554876055037, 1.9755776269095284, 1.9755400930132185, 1.9754774911063058, 1.9754110745021276, 1.9753565107073103, 1.9752671377999442, 1.9752140726361955, 1.9751652990068709, 1.975106920514788, 1.9750628471374512, 1.975003787449428, 1.9749580110822404, 1.9749069895063127, 1.9748499052865165, 1.9747915949140276, 1.9747388703482491, 1.9746877125331335, 1.9746392795017786, 1.974578925541469], "val_accuracy": [0.038333334028720856, 0.041333332657814026, 0.04233333468437195, 0.04333333298563957, 0.04100000113248825, 0.03999999910593033, 0.041999999433755875, 0.04466666653752327, 0.04600000008940697, 0.04766666516661644, 0.04833333194255829, 0.04833333194255829, 0.04833333194255829, 0.05000000074505806, 0.049666665494441986, 0.04933333396911621, 0.049666665494441986, 0.05066666752099991, 0.04933333396911621, 0.050333332270383835, 0.052666667848825455, 0.05400000140070915, 0.055666666477918625, 0.054999999701976776, 0.054666668176651, 0.0560000017285347, 0.054999999701976776, 0.0560000017285347, 0.0560000017285347, 0.056333333253860474, 0.05700000002980232, 0.054666668176651, 0.0560000017285347, 0.0573333315551281, 0.05666666850447655, 0.05666666850447655, 0.056333333253860474, 0.0573333315551281, 0.05666666850447655]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 5, 0, 3, 5, 2], [1, 0, 2, 3, 2, 2, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [30, 82, 63, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0], [6, 7, 7, 0, 1, 9], [4, 0, 3, 2], [26, 64, 83], [0, 1, 0], [1], [8], [5], [68], [0, 1, 0, 1, 1], [4, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.0820000022649765, "mapping_values": [1, 14, 14, 10, 4, 2, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3206417105217114, 2.323850145145981, 2.323819556209185, 2.3238534892098213, 2.323773328323626, 2.323846747578883], "accuracy": [0.09034473448991776, 0.08928807079792023, 0.09047681838274002, 0.09034473448991776, 0.09021265059709549, 0.08955223858356476], "val_loss": [1.9919674055916923, 1.9919674055916923, 1.9919676780700684, 1.9919678824288505, 1.9919679505484444, 1.9919679505484444], "val_accuracy": [0.08166666328907013, 0.08133333176374435, 0.08133333176374435, 0.08133333176374435, 0.08133333176374435, 0.08133333176374435]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 62, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 4, 5], [33, 55, 6], [0, 1, 0], [1], [8], [3], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 2, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3020929782271873, 2.30330086381066, 2.3013821230147573, 2.3029839330581767, 2.3030712514143454, 2.3029357464621176], "accuracy": [0.08928807079792023, 0.08889182657003403, 0.09311848133802414, 0.09113723784685135, 0.09113723784685135, 0.09087307006120682], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 1, 0, 2, 5, 6, 2, 0, 3, 5, 2], [0, 0, 0, 1, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 64, 84, 65, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 0, 9, 1, 9], [2, 0, 4, 5], [24, 55, 6], [0, 1, 0], [1], [8], [3], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 2, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020929782271873, 2.30330086381066, 2.3013821230147573, 2.3029839330581767, 2.3030712514143454, 2.3029357464621176], "accuracy": [0.08928807079792023, 0.08889182657003403, 0.09311848133802414, 0.09113723784685135, 0.09113723784685135, 0.09087307006120682], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [1, 8, 0, 2, 1, 8, 2, 4, 3, 2, 2, 6, 1, 4, 7, 6, 2, 7, 1, 2, 2, 0, 7, 6, 3], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0], [6, 7, 5, 9, 1, 9], [4, 0, 4, 2], [36, 55, 6], [0, 1, 0], [1], [8], [3], [68], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 47, 47, 25, 22, 8, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), grad), tf.math.add(alpha, grad)))))))))), grad)))))))), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3020929782271873, 2.30330086381066, 2.3013821230147573, 2.3029839330581767, 2.3030712514143454, 2.3029357464621176], "accuracy": [0.08928807079792023, 0.08889182657003403, 0.09311848133802414, 0.09113723784685135, 0.09113723784685135, 0.09087307006120682], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 60, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [5, 0, 0, 1], [26, 55, 91, 25], [1, 1, 0], [1], [3], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 6, 3, 4, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3020929782271873, 2.30330086381066, 2.3013821230147573, 2.3029839330581767, 2.3030712514143454, 2.3029357464621176], "accuracy": [0.08928807079792023, 0.08889182657003403, 0.09311848133802414, 0.09113723784685135, 0.09113723784685135, 0.09087307006120682], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 5, 6, 9, 1, 9], [4, 0, 4, 5], [36, 55, 6], [0, 1, 0], [1], [3], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3020929782271873, 2.30330086381066, 2.3013821230147573, 2.3029839330581767, 2.3030712514143454, 2.3029357464621176], "accuracy": [0.08928807079792023, 0.08889182657003403, 0.09311848133802414, 0.09113723784685135, 0.09113723784685135, 0.09087307006120682], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]