[{"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 6, 4, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 1, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8485714197158813, "mapping_values": [1, 11, 11, 6, 5, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.square(alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.040050753213789, 1.098976936362061, 0.7777338611876503, 0.6840627068825181, 0.6290114771389234, 0.6019497039831073, 0.5593655061775337, 0.5252413938916544, 0.5033975952274024, 0.4885015801400273, 0.46647564025445465, 0.4520565648954999, 0.4355361704907602, 0.41824547453421673, 0.40283943445628045, 0.38403395950408453, 0.3742241135378555, 0.3734731245522706, 0.36183430392035815, 0.35086990449454064, 0.346834442847283, 0.33093266628988666, 0.327828521785042, 0.3108036245620797, 0.2963108487920266, 0.30087812688718807, 0.2849650612486478, 0.28711067398132006, 0.2675615299048756, 0.25494652883787006, 0.2711216294415922, 0.25634479325098875, 0.24558825225027686, 0.24455171456434283, 0.24214696998310253, 0.2256759781729449, 0.22494131489444671, 0.21108405840765326, 0.21545902667083697, 0.20793969801876444, 0.2002059087371782, 0.1982885058632207, 0.18595276382880802, 0.19502940018179238, 0.1940852036101077, 0.17698544402597066, 0.1744550427665737], "accuracy": [0.30603620409965515, 0.616299033164978, 0.7129837274551392, 0.7452120184898376, 0.7614582180976868, 0.7724210619926453, 0.7931581139564514, 0.8031964302062988, 0.8156121969223022, 0.8156121969223022, 0.8294808864593506, 0.8317263126373291, 0.8408400416374207, 0.8488970994949341, 0.8535200357437134, 0.857218325138092, 0.8644828796386719, 0.8613129258155823, 0.867520809173584, 0.8710870146751404, 0.8717474341392517, 0.8794082403182983, 0.8766345381736755, 0.8849557638168335, 0.884691596031189, 0.887201189994812, 0.8945978283882141, 0.8887861371040344, 0.9012019634246826, 0.9039757251739502, 0.8945978283882141, 0.9027869701385498, 0.9059569239616394, 0.9078060984611511, 0.9050323367118835, 0.9129573106765747, 0.913089394569397, 0.9202219247817993, 0.9177123308181763, 0.9202219247817993, 0.9224672913551331, 0.9270902276039124, 0.9276185631752014, 0.9235239624977112, 0.9215427041053772, 0.9306564331054688, 0.9330339431762695], "val_loss": [0.9465117113930839, 0.6181598561150687, 0.5572749035699027, 0.5202661752700806, 0.48631887776511057, 0.4543517998286656, 0.43132926736559185, 0.4136659247534616, 0.4003490890775408, 0.39162167481013704, 0.37810277938842773, 0.3603845749582563, 0.35563860620771137, 0.3449040821620396, 0.33605762890407015, 0.3342204434531076, 0.33063574348177227, 0.33095920937401907, 0.3212114657674517, 0.3125253575188773, 0.3108030472482954, 0.31150449173791067, 0.3084371175084795, 0.3027321696281433, 0.3032486694199698, 0.2935759595462254, 0.29978435380118235, 0.2939553771700178, 0.29343794924872263, 0.30469571692602976, 0.2985015596662249, 0.30731471947261263, 0.287035984652383, 0.29430288076400757, 0.30441486835479736, 0.2986526233809335, 0.2906859006200518, 0.29830650772367207, 0.28527399471827913, 0.2848884803908212, 0.2993900009563991, 0.2878517508506775, 0.31093078000204905, 0.30469406502587454, 0.3006929074014936, 0.30433235849652973, 0.307452176298414], "val_accuracy": [0.6383333206176758, 0.734333336353302, 0.750333309173584, 0.7563333511352539, 0.7716666460037231, 0.7873333096504211, 0.8026666641235352, 0.8119999766349792, 0.8183333277702332, 0.8296666741371155, 0.8346666693687439, 0.8450000286102295, 0.8433333039283752, 0.8500000238418579, 0.8546666502952576, 0.8503333330154419, 0.8583333492279053, 0.8539999723434448, 0.859666645526886, 0.8633333444595337, 0.8576666712760925, 0.8606666922569275, 0.8673333525657654, 0.8656666874885559, 0.8683333396911621, 0.8730000257492065, 0.8706666827201843, 0.8740000128746033, 0.8763333559036255, 0.8683333396911621, 0.874666690826416, 0.8693333268165588, 0.8759999871253967, 0.8773333430290222, 0.8703333139419556, 0.8803333044052124, 0.875333309173584, 0.8766666650772095, 0.8820000290870667, 0.8813333511352539, 0.8799999952316284, 0.8886666893959045, 0.878000020980835, 0.8796666860580444, 0.8796666860580444, 0.8809999823570251, 0.8793333172798157]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 6, 4, 5, 2, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8417142629623413, "mapping_values": [1, 16, 16, 8, 8, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.math.add(tf.math.add(alpha, alpha), grad)), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0392295422098656, 1.106065419426904, 0.7824612333396359, 0.6914571287011301, 0.634269696964548, 0.6015794432756845, 0.5579560432475336, 0.5239560691404337, 0.4978663465287376, 0.48127441520168796, 0.460360667169716, 0.44265219400729233, 0.42899101913534277, 0.4171362170146803, 0.406664914321024, 0.38172812294399483, 0.37142667244013194, 0.37734725868240593, 0.35874554495203054, 0.3564669367084886, 0.3521194974460685, 0.33582775840165985, 0.3239221855547324, 0.31642269820522057, 0.2939856583534246, 0.3039716519282526, 0.29368819676023733, 0.2974683167660131, 0.28068871801838885, 0.2664013505611815, 0.2767915405011243, 0.2615628219110587, 0.2488886857187082], "accuracy": [0.3061682879924774, 0.6159027814865112, 0.7116629481315613, 0.7417778372764587, 0.7621186375617981, 0.7728173136711121, 0.7940827012062073, 0.8037247657775879, 0.8201030492782593, 0.8240655064582825, 0.8308017253875732, 0.8397833704948425, 0.8445383906364441, 0.8475762605667114, 0.852331280708313, 0.8582749962806702, 0.8689737319946289, 0.863029956817627, 0.867520809173584, 0.8693699836730957, 0.8683133125305176, 0.8742570281028748, 0.8778232932090759, 0.882710337638855, 0.8877294659614563, 0.8815215826034546, 0.8898428082466125, 0.8854840993881226, 0.8930128216743469, 0.8988244533538818, 0.8942015767097473, 0.900409460067749, 0.9039757251739502], "val_loss": [0.9399947779519218, 0.6242614473615374, 0.5642765249524798, 0.523768390927996, 0.4892828123910086, 0.455330422946385, 0.4319480402129037, 0.4121071696281433, 0.4004600388663156, 0.38717501504080637, 0.36390663044793264, 0.3580236775534494, 0.35393281493868145, 0.3432384048189436, 0.3349109547478812, 0.33130511215754915, 0.33759561606815885, 0.32593871865953716, 0.32544864075524466, 0.3100233929497855, 0.3149033614567348, 0.31115433999470304, 0.30939124311719624, 0.3003191181591579, 0.2983638984816415, 0.30368358748299734, 0.30100832666669575, 0.2917405196598598, 0.29461303779057096, 0.30771583318710327, 0.29934814146586824, 0.3065504176276071, 0.28537520340510775], "val_accuracy": [0.6396666765213013, 0.7316666841506958, 0.75, 0.7606666684150696, 0.765666663646698, 0.7853333353996277, 0.8050000071525574, 0.8116666674613953, 0.8203333616256714, 0.824999988079071, 0.8429999947547913, 0.8429999947547913, 0.8423333168029785, 0.8489999771118164, 0.8529999852180481, 0.8529999852180481, 0.8539999723434448, 0.8600000143051147, 0.862333357334137, 0.8666666746139526, 0.8566666841506958, 0.8583333492279053, 0.8613333106040955, 0.8643333315849304, 0.8726666569709778, 0.8646666407585144, 0.874666690826416, 0.8766666650772095, 0.8723333477973938, 0.8669999837875366, 0.8703333139419556, 0.8763333559036255, 0.875]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [3, 6, 4, 8, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 1, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8408571481704712, "mapping_values": [1, 8, 8, 4, 4, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.sqrt(grad), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.040051128728562, 1.0988674558322222, 0.7776898920669878, 0.6844269922931889, 0.6286330224421864, 0.600954037718155, 0.559003991957716, 0.5254846889549762, 0.4990386808112218, 0.4851074475716795, 0.4622989372334161, 0.44788035373677665, 0.43212737144417435, 0.4181584186400279, 0.40426929172051185, 0.3817859439762623, 0.3744716018599731, 0.3736563779028919, 0.35851020236938635, 0.34910174823629225, 0.3461530511531344, 0.33270818045457057, 0.32119066749329517, 0.31302184293204294, 0.29114564602968007], "accuracy": [0.30603620409965515, 0.6169594526290894, 0.7125874757766724, 0.7452120184898376, 0.7644960880279541, 0.7725531458854675, 0.7927618622779846, 0.8033285140991211, 0.8198388814926147, 0.8185180425643921, 0.8301413059234619, 0.8360850811004639, 0.8411042094230652, 0.8479725122451782, 0.8529917001724243, 0.8577466607093811, 0.8650112152099609, 0.8642187118530273, 0.8708229064941406, 0.8732003569602966, 0.8720116019248962, 0.8800686597824097, 0.8802007436752319, 0.8837670087814331, 0.8878615498542786], "val_loss": [0.9465043885367257, 0.6181975943701608, 0.557246276310512, 0.5224148545946393, 0.48718673842293875, 0.45671100275857107, 0.4306982585362026, 0.41231272901807514, 0.40208595991134644, 0.38917808873312815, 0.3685861570494516, 0.35975620576313566, 0.35455094064985004, 0.3430458733013698, 0.3370886870792934, 0.3373390861919948, 0.33164143562316895, 0.3294842413493565, 0.32403820753097534, 0.3112917031560625, 0.31176834447043283, 0.31058176926204134, 0.30756946972438265, 0.3033120206424168, 0.29912041766302927], "val_accuracy": [0.6383333206176758, 0.734333336353302, 0.7509999871253967, 0.7563333511352539, 0.7696666717529297, 0.7846666574478149, 0.8009999990463257, 0.8140000104904175, 0.8226666450500488, 0.8259999752044678, 0.8426666855812073, 0.843666672706604, 0.840666651725769, 0.8496666550636292, 0.8533333539962769, 0.8516666889190674, 0.8579999804496765, 0.8543333411216736, 0.8610000014305115, 0.8696666955947876, 0.8603333234786987, 0.859000027179718, 0.8673333525657654, 0.8629999756813049, 0.8663333058357239]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 6, 4, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8402857184410095, "mapping_values": [1, 5, 5, 2, 3, 0, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.divide_no_nan(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.039229796279486, 1.1060552535008572, 0.7823061310793068, 0.6912876385361401, 0.6343773439922163, 0.6014695568973394, 0.5564313755098698, 0.5237947810540157, 0.49666926747756535, 0.4784355646961511, 0.4592872653513253, 0.4437969655148845, 0.43066996130504315, 0.4169005560341166, 0.4100293403587573, 0.3868080456739309, 0.37682300198268676, 0.38296603703416965, 0.3618690983069146, 0.35002332672687364, 0.34793430218024574, 0.3293911644165715, 0.3177966290437597, 0.31295695278181956, 0.2954651687194359, 0.29951244647775926, 0.2904340204679577, 0.29138855123800167, 0.2717395733258098, 0.260989730880245, 0.26461295231836285, 0.2539601153378568, 0.24813332341846583], "accuracy": [0.3061682879924774, 0.615770697593689, 0.7123233675956726, 0.7420420050621033, 0.7614582180976868, 0.7717606425285339, 0.7951393723487854, 0.8031964302062988, 0.8202351331710815, 0.8226125836372375, 0.8337075710296631, 0.8383304476737976, 0.841500461101532, 0.848368763923645, 0.8495575189590454, 0.8549728989601135, 0.8643507957458496, 0.8615770936012268, 0.8671245574951172, 0.8716153502464294, 0.8717474341392517, 0.878351628780365, 0.8821820020675659, 0.8835028409957886, 0.8898428082466125, 0.8837670087814331, 0.8922203183174133, 0.8870691061019897, 0.9000132083892822, 0.9006736278533936, 0.8975036144256592, 0.9051644206047058, 0.9052965044975281], "val_loss": [0.9399948460715157, 0.6243564231055123, 0.5645971638815743, 0.5237046991075788, 0.48981092657361713, 0.4553923947470529, 0.4299402918134417, 0.41186979838779997, 0.400471636227199, 0.3841473800795419, 0.3631878750664847, 0.3576904535293579, 0.3555090682847159, 0.3435449855668204, 0.33076885768345426, 0.3358214923313686, 0.336130542414529, 0.3343812738146101, 0.3205198815890721, 0.30683342048100065, 0.3116246887615749, 0.3138012204851423, 0.3101866500718253, 0.29829226221357075, 0.29505577257701326, 0.29822674819401335, 0.2988384110586984, 0.2947901998247419, 0.2954989160810198, 0.3013200419289725, 0.29342905964170185, 0.303416303225926, 0.2867334485054016], "val_accuracy": [0.6396666765213013, 0.7316666841506958, 0.7486666440963745, 0.7603333592414856, 0.765999972820282, 0.7839999794960022, 0.8056666851043701, 0.8119999766349792, 0.8190000057220459, 0.8240000009536743, 0.8416666388511658, 0.8396666646003723, 0.8423333168029785, 0.8516666889190674, 0.8556666374206543, 0.8503333330154419, 0.8526666760444641, 0.8493333458900452, 0.8633333444595337, 0.8653333187103271, 0.8569999933242798, 0.8550000190734863, 0.8619999885559082, 0.8633333444595337, 0.8743333220481873, 0.8706666827201843, 0.8703333139419556, 0.8756666779518127, 0.8756666779518127, 0.8723333477973938, 0.8723333477973938, 0.8723333477973938, 0.875333309173584]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 6, 4, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8402857184410095, "mapping_values": [1, 8, 8, 4, 4, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.square(alpha), tf.math.add(alpha, grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0400515852540066, 1.0989041270329227, 0.7771577312410657, 0.6852532580638558, 0.6294812192581176, 0.6013173361527465, 0.5584604993055148, 0.5256026044710359, 0.4994026882427086, 0.4814939928478364, 0.4625287723027956, 0.4499362377978083, 0.4325320420838649, 0.41547940323271254, 0.40518062330980215, 0.3876149547161475, 0.3758989890269505, 0.37448824599056574, 0.36346029536583324, 0.3472851682348557, 0.34308370532549887, 0.3296201886155775, 0.3239998087993529, 0.3139687503144694, 0.2905053744785632, 0.2965792178430609, 0.2865053498237959, 0.28650013096123766, 0.2698280687983073, 0.2595211568368094, 0.26146731112438215, 0.2550620560861141], "accuracy": [0.30603620409965515, 0.6165632009506226, 0.7129837274551392, 0.743891179561615, 0.7630431652069092, 0.7736098170280457, 0.791969358921051, 0.8061022162437439, 0.8169330358505249, 0.822348415851593, 0.8329150676727295, 0.8345000743865967, 0.8408400416374207, 0.8485008478164673, 0.8527275323867798, 0.8549728989601135, 0.8654074668884277, 0.8618412613868713, 0.867520809173584, 0.8730682730674744, 0.8693699836730957, 0.8816536664962769, 0.8795403242111206, 0.883238673210144, 0.8898428082466125, 0.8869370222091675, 0.8911636471748352, 0.8881257176399231, 0.9019944667816162, 0.8973715305328369, 0.9015982151031494, 0.901862382888794], "val_loss": [0.9465030261448452, 0.6183546951838902, 0.5580930880137852, 0.5215797764914376, 0.4850961821419852, 0.4559766394751413, 0.4318628396306719, 0.4126530204500471, 0.40105634927749634, 0.38787005628858295, 0.3656903164727347, 0.3589517985071455, 0.3536862049783979, 0.34398876769202097, 0.33848788908549715, 0.3332370434488569, 0.3333961282457624, 0.3311562197549002, 0.3185647300311497, 0.31327673367091585, 0.30998796224594116, 0.3083723187446594, 0.30692507539476666, 0.29864115374428885, 0.29882097244262695, 0.28971425124577116, 0.2935278245380947, 0.28921944754464285, 0.28684763397489277, 0.30285546609333586, 0.29612582070486887, 0.3018440008163452], "val_accuracy": [0.6383333206176758, 0.7350000143051147, 0.75, 0.7556666731834412, 0.7703333497047424, 0.7863333225250244, 0.8033333420753479, 0.8119999766349792, 0.8216666579246521, 0.8286666870117188, 0.8450000286102295, 0.8473333120346069, 0.8433333039283752, 0.8506666421890259, 0.8529999852180481, 0.8496666550636292, 0.8513333201408386, 0.8523333072662354, 0.8640000224113464, 0.8653333187103271, 0.859666645526886, 0.8603333234786987, 0.8669999837875366, 0.8636666536331177, 0.8673333525657654, 0.8703333139419556, 0.8743333220481873, 0.871666669845581, 0.8713333606719971, 0.871666669845581, 0.8726666569709778, 0.8703333139419556]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 6, 5, 5, 4, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 1, 2, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8402857184410095, "mapping_values": [1, 7, 7, 4, 3, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.square(alpha), tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0400501282428314, 1.0988661275170089, 0.7775662633107087, 0.6850489996065632, 0.6305188691894754, 0.6042429918169645, 0.5578850161295525, 0.5262420907539855, 0.5004551333443301, 0.48623519497792544, 0.4642240233377868, 0.4495147324083913, 0.43022067780507917, 0.41577859962337665, 0.40309165193184004, 0.38983312571573064, 0.3781200868224329, 0.3773667597539232, 0.3673269365756834, 0.35199977534873184, 0.34149770498307247, 0.328652921357978, 0.31978231410245855, 0.31171885952343636, 0.29454267172608095, 0.29712552840305656, 0.2898056696568498, 0.29077524009744143, 0.272253460698927, 0.2560513834234683, 0.26760596219952615, 0.2611206263961132, 0.24433307745681543, 0.23982428059349947, 0.24412823890131288, 0.23023339026655423, 0.23393601801267563, 0.2195177559685855, 0.21766248299319432, 0.21429032043632248, 0.20164510044030007, 0.1992892302309974, 0.18771007134890466, 0.19516954867910039, 0.19321967575370896, 0.185602788301806, 0.1794100496428376, 0.1818691719701781, 0.16598835421976807, 0.15324256221663288, 0.15589886705369335, 0.15749108752774807], "accuracy": [0.30603620409965515, 0.6168273687362671, 0.7124554514884949, 0.7433628439903259, 0.7635715007781982, 0.7713643908500671, 0.7940827012062073, 0.8031964302062988, 0.8183859586715698, 0.8189142942428589, 0.8309338092803955, 0.8358209133148193, 0.8424250483512878, 0.8504821062088013, 0.8520671129226685, 0.8539162874221802, 0.8632941246032715, 0.8589354157447815, 0.8697662353515625, 0.8742570281028748, 0.8722757697105408, 0.880729079246521, 0.8768987059593201, 0.8850878477096558, 0.8874653577804565, 0.8857482671737671, 0.8903711438179016, 0.8878615498542786, 0.898428201675415, 0.9043719172477722, 0.8960506916046143, 0.9033153057098389, 0.9076740145683289, 0.906749427318573, 0.9041078090667725, 0.9100515246391296, 0.9120327830314636, 0.9178444147109985, 0.9170519113540649, 0.9210143685340881, 0.9212785363197327, 0.9240522980690002, 0.9295997619628906, 0.9233918786048889, 0.923920214176178, 0.9285431504249573, 0.9344868659973145, 0.9309206008911133, 0.9373927116394043, 0.9417514204978943, 0.9408268332481384, 0.9381851553916931], "val_loss": [0.9465055465698242, 0.618497473852975, 0.557831951550075, 0.5237068959644863, 0.48629348618643625, 0.4569143397467477, 0.43112596443721224, 0.4124395251274109, 0.40374490192958284, 0.3886729223387582, 0.3748784490994045, 0.3577008332524981, 0.35683114188058035, 0.3397465263094221, 0.33476760557719637, 0.3325364334242685, 0.33522476468767437, 0.33400274174554007, 0.3271331105913435, 0.31267647232328144, 0.3108857274055481, 0.3089049458503723, 0.31019552264894756, 0.2992614677974156, 0.2990745220865522, 0.29968139954975676, 0.3036227226257324, 0.29290539026260376, 0.29171434470585417, 0.3002001132283892, 0.29670589310782297, 0.30721508605139597, 0.2858789988926479, 0.2958988036428179, 0.30671226978302, 0.2977763669831412, 0.2900136113166809, 0.2969774178096226, 0.2810242176055908, 0.2915698800768171, 0.2962013227599008, 0.2923653721809387, 0.31180750472205027, 0.29069780451910837, 0.30532474177224295, 0.30219570228031706, 0.3028064114706857, 0.2867530414036342, 0.30616005829402376, 0.3049689957073757, 0.3058836885860988, 0.3182552286556789], "val_accuracy": [0.6383333206176758, 0.7350000143051147, 0.7493333220481873, 0.7553333044052124, 0.768666684627533, 0.7883333563804626, 0.8016666769981384, 0.8140000104904175, 0.8199999928474426, 0.8309999704360962, 0.8413333296775818, 0.8446666598320007, 0.8429999947547913, 0.8519999980926514, 0.8579999804496765, 0.8526666760444641, 0.8516666889190674, 0.8473333120346069, 0.8583333492279053, 0.8690000176429749, 0.8600000143051147, 0.859000027179718, 0.8633333444595337, 0.8640000224113464, 0.871666669845581, 0.8666666746139526, 0.8723333477973938, 0.8763333559036255, 0.8726666569709778, 0.8696666955947876, 0.8703333139419556, 0.8683333396911621, 0.8766666650772095, 0.875, 0.8703333139419556, 0.8790000081062317, 0.8776666522026062, 0.8806666731834412, 0.878333330154419, 0.8809999823570251, 0.8820000290870667, 0.8830000162124634, 0.8763333559036255, 0.8793333172798157, 0.878000020980835, 0.878333330154419, 0.8859999775886536, 0.8836666941642761, 0.8836666941642761, 0.8830000162124634, 0.8843333125114441, 0.8856666684150696]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 9, 4, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8382856845855713, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.040050748742063, 1.0989524697693758, 0.7774885852559525, 0.6845820665973572, 0.6293675404387915, 0.6025334994129422, 0.5577160595091909, 0.5252916610527505, 0.49990117701053177, 0.48453972748934776, 0.4653164883331301, 0.4504112237795012, 0.4309864870514049, 0.4192227974953259, 0.40374410894836305, 0.3848600527314682, 0.3726977328141887, 0.3757523985476526, 0.36438380659075303, 0.34876290865546566, 0.34948277113271065, 0.33270803430864226, 0.32409476746956684, 0.31433975271434833, 0.2896481103601709, 0.3009290585326103, 0.28468558697684127, 0.29148469579737846, 0.2770218196609284, 0.2623348600553279, 0.2693340063740659, 0.2568712127073298, 0.24095189122042998, 0.2452511690638683, 0.24003603457105535, 0.2312690848097148, 0.2335562719849705, 0.2186283619195841, 0.22045619134511835, 0.20660872462600088, 0.19778747133110586], "accuracy": [0.30603620409965515, 0.6166952848434448, 0.7121912837028503, 0.7430986762046814, 0.7622507214546204, 0.7717606425285339, 0.7932901978492737, 0.8055738806724548, 0.8173292875289917, 0.8186501264572144, 0.8280280232429504, 0.8355567455291748, 0.8416325449943542, 0.8502179384231567, 0.8499537706375122, 0.8555012345314026, 0.867520809173584, 0.8613129258155823, 0.8681812286376953, 0.8741249442100525, 0.8704266548156738, 0.8803328275680542, 0.8772949576377869, 0.880729079246521, 0.8889182209968567, 0.8861445188522339, 0.8919561505317688, 0.8856161832809448, 0.8968431949615479, 0.8952582478523254, 0.8960506916046143, 0.9037115573883057, 0.9084665179252625, 0.9052965044975281, 0.9058248400688171, 0.910711944103241, 0.9100515246391296, 0.9212785363197327, 0.9170519113540649, 0.9220710396766663, 0.9251089692115784], "val_loss": [0.9465117795126778, 0.6184113706861224, 0.557671138218471, 0.5228838579995292, 0.48761490413120817, 0.4555060182298933, 0.42956861427852083, 0.41212370565959383, 0.3997639673096793, 0.39175398860658917, 0.3689158984592983, 0.3593900033405849, 0.3549758195877075, 0.34424809898648945, 0.3337555357388088, 0.3361201882362366, 0.3258026157106672, 0.3286104457718985, 0.31895552362714497, 0.3114873596600124, 0.31203395979745047, 0.3052543061120169, 0.3087236114910671, 0.3000121457236154, 0.3000609108379909, 0.2914863995143345, 0.299480140209198, 0.2933539407593863, 0.2934123618262155, 0.31024690185274395, 0.289918635572706, 0.3011339477130345, 0.2861601710319519, 0.28838294744491577, 0.3030709794589451, 0.2860151784760611, 0.28484651872089933, 0.2942603996821812, 0.2846030763217381, 0.28833018030439106, 0.28833302429744173], "val_accuracy": [0.6383333206176758, 0.7353333234786987, 0.75, 0.7573333382606506, 0.7689999938011169, 0.7866666913032532, 0.8009999990463257, 0.8136666417121887, 0.8220000267028809, 0.82833331823349, 0.8446666598320007, 0.8450000286102295, 0.8443333506584167, 0.8503333330154419, 0.8583333492279053, 0.8516666889190674, 0.856333315372467, 0.8556666374206543, 0.8640000224113464, 0.8666666746139526, 0.8583333492279053, 0.862333357334137, 0.8653333187103271, 0.8636666536331177, 0.8700000047683716, 0.8683333396911621, 0.8713333606719971, 0.8700000047683716, 0.871666669845581, 0.8663333058357239, 0.871999979019165, 0.8723333477973938, 0.8769999742507935, 0.8769999742507935, 0.875, 0.8836666941642761, 0.8773333430290222, 0.8826666474342346, 0.8790000081062317, 0.8826666474342346, 0.8830000162124634]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 6, 4, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 2, 2, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8334285616874695, "mapping_values": [1, 5, 5, 2, 3, 1, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0392293645847177, 1.1059423183736674, 0.783809517163957, 0.6938208862932492, 0.6340304517853041, 0.6017696359106862, 0.5587027547555026, 0.5246462576054878, 0.4944368815850336, 0.4771102825884554, 0.45853258399931257, 0.4423975466603317, 0.4264674732564164, 0.4120485219327513, 0.4071617060058137, 0.3862017072730328, 0.3772203410975512, 0.3779029726840407, 0.3579069190824572, 0.35093983656710415, 0.34881343809353155, 0.33506334373554486, 0.3229059924019358, 0.3188415545403855, 0.299912565227009, 0.296108913219301, 0.29039235479402475, 0.28723046091474863, 0.27263374268229235, 0.2608027093406713, 0.27107089983473803, 0.2595978533004521, 0.2484034151173444], "accuracy": [0.3061682879924774, 0.616299033164978, 0.7077004313468933, 0.7407211661338806, 0.7629110813140869, 0.7714964747428894, 0.7926297783851624, 0.8021397590637207, 0.8202351331710815, 0.8256505131721497, 0.8325188159942627, 0.8376700282096863, 0.8446704745292664, 0.8518029451370239, 0.8492933511734009, 0.8580108284950256, 0.8642187118530273, 0.8613129258155823, 0.8669924736022949, 0.8725399374961853, 0.8705587387084961, 0.8786157965660095, 0.8825782537460327, 0.8802007436752319, 0.8873332738876343, 0.8868049383163452, 0.894069492816925, 0.8920882344245911, 0.8972394466400146, 0.9002773761749268, 0.8948619961738586, 0.9012019634246826, 0.9055606722831726], "val_loss": [0.940058742250715, 0.6252252374376569, 0.5634819780077253, 0.5208473205566406, 0.49082110609327045, 0.4563885586602347, 0.43195362601961407, 0.41185632773808073, 0.4019589424133301, 0.38562976462500437, 0.3664616516658238, 0.35968806062425884, 0.35384764841624666, 0.3458271452358791, 0.33279384885515484, 0.3300830125808716, 0.3365567752293178, 0.3275538853236607, 0.32315218448638916, 0.30853148869105745, 0.313008861882346, 0.3117096849850246, 0.3043519513947623, 0.29740618807928904, 0.2933396356446402, 0.2995277728353228, 0.298285824911935, 0.2883047802107675, 0.2966077923774719, 0.29518732002803255, 0.2912661944116865, 0.3017234376498631, 0.287321184362684], "val_accuracy": [0.6396666765213013, 0.7303333282470703, 0.75, 0.7596666812896729, 0.7676666378974915, 0.7863333225250244, 0.8026666641235352, 0.8136666417121887, 0.8199999928474426, 0.8273333311080933, 0.8429999947547913, 0.8413333296775818, 0.8413333296775818, 0.8479999899864197, 0.8503333330154419, 0.8526666760444641, 0.8503333330154419, 0.8550000190734863, 0.8579999804496765, 0.8610000014305115, 0.8560000061988831, 0.8603333234786987, 0.8656666874885559, 0.8690000176429749, 0.875333309173584, 0.8703333139419556, 0.8730000257492065, 0.878000020980835, 0.8723333477973938, 0.8733333349227905, 0.8763333559036255, 0.8693333268165588, 0.8766666650772095]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 6, 8, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 2, 1, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7234285473823547, "mapping_values": [1, 7, 7, 4, 3, 0, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.math.add(alpha, grad))), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0337150407079942, 1.2410586541276236, 0.9199346375818093, 0.8369905686161191, 0.7174483847545674, 0.6810112127680206, 0.6607265241425413, 0.6331464601167677, 0.5991114094792387, 0.6102957282761037, 0.5867762754480238, 0.5880193615539152, 0.5517013513290839, 0.5477467439965392, 0.5425290975588314, 0.5429122704068321, 0.5407720712339401, 0.5195201769748683, 0.5209878159236946, 0.5308606333783621, 0.5582355131027232, 0.5619143452689696], "accuracy": [0.31343284249305725, 0.5937128663063049, 0.6509047746658325, 0.6946242451667786, 0.7257958054542542, 0.7489103078842163, 0.7474573850631714, 0.7680623531341553, 0.7647602558135986, 0.7766477465629578, 0.7711002230644226, 0.7832518815994263, 0.7864218950271606, 0.7932901978492737, 0.7918372750282288, 0.791969358921051, 0.7948752045631409, 0.7992339134216309, 0.8058380484580994, 0.7996301651000977, 0.7913089394569397, 0.7810064554214478], "val_loss": [0.9096231119973319, 0.7265871933528355, 0.6480085509163993, 0.5317007303237915, 0.534501211983817, 0.493043099130903, 0.4762296506336757, 0.4391763891492571, 0.4407250199999128, 0.4342110071863447, 0.4550173963819231, 0.4381840910230364, 0.44991939408438547, 0.4451896548271179, 0.4524306058883667, 0.42067039012908936, 0.43184649092810495, 0.46340692043304443, 0.45610690116882324, 0.5041374138423375, 0.4851874453680856, 0.4626257930483137], "val_accuracy": [0.6416666507720947, 0.6866666674613953, 0.7179999947547913, 0.7523333430290222, 0.7599999904632568, 0.778333306312561, 0.7866666913032532, 0.8046666383743286, 0.7986666560173035, 0.800000011920929, 0.7850000262260437, 0.8076666593551636, 0.815666675567627, 0.8046666383743286, 0.8043333292007446, 0.8053333163261414, 0.8199999928474426, 0.8159999847412109, 0.8169999718666077, 0.8086666464805603, 0.7963333129882812, 0.809333324432373]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 6, 4, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 3, 2, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 12, 9, 2, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))), grad))))))), alpha), tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3029044934739966, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 6, 4, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 2, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [0, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 2, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302692968233497, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 6, 4, 5, 0, 9, 6, 2, 6, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 2, 2, 0, 2, 2, 2, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), grad)), tf.math.square(tf.math.add(alpha, tf.math.negative(grad)))), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.4673332502624348, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0334169864654541, 0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.254262924194336, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.070333331823349, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 4, 1, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 1, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [8, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.pow(tf.math.subtract(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), alpha))))))))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 6, 4, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 0, 1, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [1, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))))), tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [5, 6, 4, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 2, 1, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [42, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [1, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))), tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 6, 4, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 2, 2, 2, 0, 2, 1, 2, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [4, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 2, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [6, 4, 4, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 1, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [91, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.09542857110500336, "mapping_values": [1, 11, 11, 6, 5, 1, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.pow(tf.math.pow(tf.math.square(tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.30311756029483, 2.2992570649646984, 2.3001030746027147, 2.3013678035086107, 2.3024160152161204, 2.3026355969324843, 2.302739244961641, 2.302907521966237, 2.303093867263522], "accuracy": [0.09589222073554993, 0.10817593336105347, 0.09694888442754745, 0.10038304328918457, 0.10910051316022873, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9685556547982352, 1.9702328954424178, 1.971526759011405, 1.9730315889630998, 1.9736101286751884, 1.973848479134696, 1.9739751815795898, 1.974125862121582, 1.9743715694972448], "val_accuracy": [0.07633333653211594, 0.11433333158493042, 0.08699999749660492, 0.12833333015441895, 0.11633333563804626, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 6, 4, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 1, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.05542857199907303, "mapping_values": [1, 5, 5, 2, 3, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3043223029476634, 2.302241327677263, 2.3012242401280756, 2.3029150976055823, 2.3022655885233116, 2.3022105536676905, 2.301555076342658, 2.301872951983461, 2.3011045234235774, 2.3037943852938176, 2.3012837502052914, 2.301420365846105, 2.302571770442932, 2.3005490120706495, 2.3007405559699516, 2.3029690196942094, 2.3013175135007735, 2.3009539145866578, 2.3011763547751976, 2.3013871814187143, 2.3007645005201067, 2.301228425222822, 2.3011857669713427, 2.301054005200254, 2.301350064234191, 2.300663801121942, 2.299503273227668, 2.3003610036691513, 2.2996434475121923, 2.302300001730646, 2.3003909053142437, 2.3005446894860713, 2.3015569373050053, 2.300896151663211, 2.3006633045399085, 2.300649472168487, 2.3001769630743008, 2.3002098981872163, 2.3009408692075373, 2.3007556001161618, 2.3005616740779855], "accuracy": [0.0940430611371994, 0.09100515395402908, 0.09298639744520187, 0.08611807972192764, 0.0882314071059227, 0.09126931428909302, 0.09126931428909302, 0.09245806187391281, 0.09628847241401672, 0.08770307898521423, 0.09576013684272766, 0.08928807079792023, 0.08994849026203156, 0.09694888442754745, 0.0936468094587326, 0.08717474341392517, 0.09457138925790787, 0.08955223858356476, 0.0956280529499054, 0.09628847241401672, 0.09074098616838455, 0.09351472556591034, 0.09668471664190292, 0.09113723784685135, 0.09206181764602661, 0.0882314071059227, 0.09760929644107819, 0.09787346422672272, 0.09549596905708313, 0.08757099509239197, 0.09628847241401672, 0.09325055778026581, 0.09496764093637466, 0.09100515395402908, 0.09642054885625839, 0.09311848133802414, 0.09179764986038208, 0.09457138925790787, 0.09311848133802414, 0.09338264167308807, 0.09694888442754745], "val_loss": [1.9709247180393763, 1.9708693368094308, 1.9708085741315569, 1.970747607094901, 1.9706949506487166, 1.9706307819911413, 1.9705737658909388, 1.9705103465488978, 1.9704741069248743, 1.970421654837472, 1.9703645024980818, 1.9703315326145716, 1.97029481615339, 1.9702519008091517, 1.970212118966239, 1.9701706341334753, 1.97013487134661, 1.9700871876307897, 1.9700638226100378, 1.9700257437569755, 1.9699845995221819, 1.9699546269008092, 1.9699067388262068, 1.9698829650878906, 1.969853128705706, 1.9698375293186732, 1.9698203631809779, 1.969804355076381, 1.9697997910635812, 1.9697760854448592, 1.969754764011928, 1.9697375978742326, 1.9697073527744837, 1.9696908678327287, 1.9696872574942452, 1.9696744510105677, 1.9696647099086217, 1.9696436609540666, 1.9696360996791296, 1.969627789088658, 1.9696289471217565], "val_accuracy": [0.038333334028720856, 0.039000000804662704, 0.0403333343565464, 0.041333332657814026, 0.04333333298563957, 0.043666668236255646, 0.04399999976158142, 0.04399999976158142, 0.044333335012197495, 0.04466666653752327, 0.04466666653752327, 0.04533333331346512, 0.04600000008940697, 0.04699999839067459, 0.047333333641290665, 0.04800000041723251, 0.04833333194255829, 0.04933333396911621, 0.050333332270383835, 0.05066666752099991, 0.05233333259820938, 0.0533333346247673, 0.05400000140070915, 0.05400000140070915, 0.054666668176651, 0.054666668176651, 0.05433333292603493, 0.054666668176651, 0.05533333495259285, 0.0560000017285347, 0.0560000017285347, 0.0560000017285347, 0.05666666850447655, 0.0573333315551281, 0.0573333315551281, 0.05766666680574417, 0.05766666680574417, 0.0573333315551281, 0.0573333315551281, 0.05766666680574417, 0.05766666680574417]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 4, 1, 3, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 1, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 98, 17, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.05428571254014969, "mapping_values": [1, 10, 10, 5, 5, 1, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), tf.math.negative(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3043283633961575, 2.3022323209596047, 2.3012117757899273, 2.302891707077097, 2.302240982189186, 2.302212438689184, 2.3015277158661354, 2.301873925969491, 2.3010697863939935, 2.30386538351878, 2.3013045070130733, 2.3013263332561937, 2.3025333741872918, 2.3004491507117426, 2.30058554484466, 2.3029211344043135, 2.3011731958471158, 2.300910703226749, 2.3009887816112085, 2.3012306057246383, 2.30063055330311, 2.3010920673990607, 2.3010996740570695, 2.300784412927442, 2.301085523941167, 2.3003126249463253, 2.299062047856847, 2.299815130397518, 2.299059311853282, 2.3019992330244046, 2.299740169498946, 2.2999981671843344, 2.3012613244674553, 2.3002465155146394, 2.299945630008172, 2.299913647750806, 2.299468814641761, 2.2995782422509254, 2.300230052319689, 2.300133511500824, 2.2994458112010014, 2.2993394931104945, 2.299917533932707, 2.299777026315643, 2.2992139193265664, 2.2985224087067317, 2.298257765249097, 2.2994993897225044, 2.2991773759400793, 2.2998237823372456, 2.2996736898272343, 2.298059752336693, 2.2982126306375856, 2.298338821614187, 2.298045272793138, 2.300635195836541, 2.299864645852011, 2.298084299467684, 2.2991854582385867, 2.2977501480035527, 2.2983665429779, 2.29788107012934, 2.2989011612298733, 2.2982377279798323, 2.2982878889059424, 2.298038311197364, 2.29832125903593, 2.2971558113612076, 2.297301968027966, 2.297876151010203, 2.2983305358206514, 2.2987315793630074, 2.2972923958888853, 2.2977615378048157, 2.2985085706039428, 2.2968283045986277, 2.2975583923900635, 2.297665125154438, 2.2980959047935485, 2.298434615056465, 2.298588266147205, 2.2973063863767624, 2.297159962193715, 2.2975995641075277, 2.296833756199571, 2.2964992749928768, 2.296882695998057, 2.297484668112702, 2.2954663065808436, 2.2982030556328215, 2.2969637426954015, 2.2982438437580637, 2.296975612860818, 2.296742115353297, 2.2979794926631403, 2.296765322918905, 2.2953596420890197, 2.2972609799031996, 2.2965084532106776, 2.297434100542936], "accuracy": [0.09377889335155487, 0.09113723784685135, 0.09311848133802414, 0.0874389111995697, 0.0882314071059227, 0.09140139818191528, 0.09060890227556229, 0.09245806187391281, 0.09576013684272766, 0.08651433140039444, 0.09602430462837219, 0.08928807079792023, 0.08994849026203156, 0.09589222073554993, 0.0956280529499054, 0.08889182657003403, 0.09417514503002167, 0.08875974267721176, 0.09417514503002167, 0.09681680053472519, 0.09166556596755981, 0.09417514503002167, 0.09734513610601425, 0.0936468094587326, 0.09272222965955734, 0.09153348207473755, 0.09826971590518951, 0.10091137140989304, 0.09589222073554993, 0.08836349099874496, 0.09853387624025345, 0.0936468094587326, 0.09536388516426086, 0.0952318087220192, 0.09576013684272766, 0.09721305221319199, 0.09430722147226334, 0.09589222073554993, 0.09800554811954498, 0.09470347315073013, 0.1018359512090683, 0.10038304328918457, 0.09800554811954498, 0.10091137140989304, 0.09826971590518951, 0.10051512718200684, 0.09972262382507324, 0.09787346422672272, 0.1002509593963623, 0.10210011899471283, 0.09721305221319199, 0.09787346422672272, 0.10051512718200684, 0.09655263274908066, 0.10355303436517715, 0.09694888442754745, 0.09734513610601425, 0.10289261490106583, 0.09866596013307571, 0.10513802617788315, 0.10091137140989304, 0.09985470771789551, 0.10236428678035736, 0.10196803510189056, 0.10645885765552521, 0.09602430462837219, 0.10130762308835983, 0.0956280529499054, 0.10553427785634995, 0.10315678268671036, 0.09734513610601425, 0.09655263274908066, 0.10513802617788315, 0.10342095047235489, 0.10355303436517715, 0.10447761416435242, 0.09893012791872025, 0.10619468986988068, 0.10302469879388809, 0.10342095047235489, 0.10117553919553757, 0.10117553919553757, 0.10434553027153015, 0.108440101146698, 0.10777968913316727, 0.10738343745470047, 0.10302469879388809, 0.10579843819141388, 0.10698718577623367, 0.10276053100824356, 0.10011887550354004, 0.09813763201236725, 0.1006472036242485, 0.10976093262434006, 0.10328886657953262, 0.10315678268671036, 0.10857218503952026, 0.10527011007070541, 0.1080438494682312, 0.10447761416435242], "val_loss": [1.970911979675293, 1.9708377974373954, 1.970759323665074, 1.970677171434675, 1.9706090518406458, 1.970538752419608, 1.9704715864998954, 1.97039794921875, 1.970322745186942, 1.9702508790152413, 1.9701833043779646, 1.9701093946184431, 1.970034463065011, 1.9699619156973702, 1.9698897089276994, 1.969827720097133, 1.9697554452078683, 1.9696790150233678, 1.9696127346583776, 1.969541140965053, 1.9694715908595495, 1.9694065366472517, 1.9693269048418318, 1.969259262084961, 1.9691875321524483, 1.9691211155482702, 1.9690589223589217, 1.9689912796020508, 1.968935830252511, 1.9688794272286552, 1.9688141686575753, 1.9687583105904716, 1.968700953892299, 1.9686416217258997, 1.9685901233128138, 1.9685359682355608, 1.9684803826468331, 1.9684182575770788, 1.9683591297694616, 1.968304225376674, 1.9682511602129256, 1.9681964601789201, 1.968141964503697, 1.9680871282305037, 1.9680356298174178, 1.9679805891854423, 1.9679258891514368, 1.9678617204938615, 1.9678085872105189, 1.9677568163190569, 1.9677070890154158, 1.967658247266497, 1.9676077025277274, 1.967555250440325, 1.9675051825387138, 1.9674519811357771, 1.9674041611807687, 1.9673545701163155, 1.967304025377546, 1.967251913888114, 1.9672036852155412, 1.9671570914132255, 1.9671080453055245, 1.9670617921011788, 1.9670156751360213, 1.9669698987688338, 1.966921397617885, 1.966874326978411, 1.9668284143720354, 1.9667835916791643, 1.966735907963344, 1.9666951724461146, 1.9666448320661272, 1.9665983745029993, 1.9665538242885046, 1.9665023939950126, 1.966454369681222, 1.9664061410086495, 1.9663583210536413, 1.9663117953709193, 1.9662583214896066, 1.9662079129900252, 1.9661546434674944, 1.9661057335989816, 1.9660564150129045, 1.9660070283072335, 1.9659598214285714, 1.9659203120640345, 1.965869971684047, 1.9658263070242745, 1.965771198272705, 1.965728759765625, 1.9656872068132674, 1.9656434740339006, 1.9656009674072266, 1.9655555316380091, 1.9655115944998605, 1.965468406677246, 1.9654192243303572, 1.9653786250523158], "val_accuracy": [0.039000000804662704, 0.03933333232998848, 0.03966666758060455, 0.0403333343565464, 0.04066666588187218, 0.04100000113248825, 0.04233333468437195, 0.0430000014603138, 0.04333333298563957, 0.043666668236255646, 0.04399999976158142, 0.04500000178813934, 0.04533333331346512, 0.04500000178813934, 0.04533333331346512, 0.045666664838790894, 0.04600000008940697, 0.04633333161473274, 0.04699999839067459, 0.04833333194255829, 0.04833333194255829, 0.04866666719317436, 0.04899999871850014, 0.04899999871850014, 0.049666665494441986, 0.05000000074505806, 0.050333332270383835, 0.050333332270383835, 0.050999999046325684, 0.05133333429694176, 0.05133333429694176, 0.052000001072883606, 0.052666667848825455, 0.05299999937415123, 0.0533333346247673, 0.0533333346247673, 0.0533333346247673, 0.05400000140070915, 0.05433333292603493, 0.054666668176651, 0.054666668176651, 0.05433333292603493, 0.054666668176651, 0.054999999701976776, 0.055666666477918625, 0.055666666477918625, 0.056333333253860474, 0.0573333315551281, 0.05700000002980232, 0.05666666850447655, 0.05700000002980232, 0.0573333315551281, 0.057999998331069946, 0.058666665107011795, 0.05900000035762787, 0.05966666713356972, 0.05999999865889549, 0.060333333909511566, 0.060333333909511566, 0.060333333909511566, 0.060333333909511566, 0.060333333909511566, 0.06133333221077919, 0.061666667461395264, 0.061666667461395264, 0.061666667461395264, 0.06233333423733711, 0.06266666948795319, 0.06333333253860474, 0.06333333253860474, 0.06333333253860474, 0.06366666406393051, 0.06433333456516266, 0.06466666609048843, 0.06466666609048843, 0.06499999761581421, 0.06533333659172058, 0.06533333659172058, 0.06533333659172058, 0.06533333659172058, 0.06566666811704636, 0.0663333311676979, 0.06700000166893005, 0.06733333319425583, 0.06800000369548798, 0.06800000369548798, 0.06866666674613953, 0.06966666877269745, 0.07000000029802322, 0.07000000029802322, 0.070333331823349, 0.070333331823349, 0.07100000232458115, 0.07133333384990692, 0.07133333384990692, 0.0716666653752327, 0.0716666653752327, 0.0716666653752327, 0.07199999690055847, 0.07199999690055847]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 4, 1, 5, 0, 4, 6, 2, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 2, 2, 1, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 67, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [1, 2, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [4, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 21, 21, 12, 9, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.subtract(grad, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), alpha))))))))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.304366013093978, 2.302357821715837, 2.301420451911087, 2.303194095272477, 2.302605928258023, 2.302657898973559], "accuracy": [0.09351472556591034, 0.09087307006120682, 0.09192973375320435, 0.08625016361474991, 0.0866464152932167, 0.09047681838274002], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]