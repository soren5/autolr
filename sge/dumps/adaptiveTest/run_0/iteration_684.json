[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 19, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.845714271068573, "mapping_values": [1, 10, 10, 7, 3, 1, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(grad), tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.040343979204556, 1.1307779890025658, 0.8017671161072051, 0.6988993927456557, 0.6482000475499168, 0.5868809386928399, 0.5531280134426777, 0.5268751908570485, 0.4971933689934309, 0.4694284672010309, 0.4500070909632825, 0.4352068792339235, 0.42336463923105366, 0.4021204994488795, 0.3945956411197626, 0.3803524310523335, 0.3684969908525726, 0.36294860509817767, 0.35835630107455013, 0.347944716810629, 0.3292921199034612, 0.32443189254101196, 0.3185740404747197, 0.30675435792878636, 0.28959026333599547, 0.2890581812927547, 0.2815573552281172, 0.2890768033827395, 0.2711224772312606, 0.2624064356427167, 0.26211396499576667, 0.24182805094807422, 0.24155009955289797, 0.23344762616224607, 0.22903735677658402, 0.22043540582539084, 0.21512573595493226, 0.20771680691018315, 0.2018807310280846, 0.20231917359179918, 0.19176858742286532, 0.18839322775110293, 0.18872756179628308, 0.1895754629586902], "accuracy": [0.3217540681362152, 0.609430730342865, 0.7013604640960693, 0.7378153204917908, 0.7549861073493958, 0.7766477465629578, 0.789988100528717, 0.8021397590637207, 0.8222163319587708, 0.8294808864593506, 0.8389908671379089, 0.8432175517082214, 0.8481045961380005, 0.8551049828529358, 0.8529917001724243, 0.8614450097084045, 0.863558292388916, 0.8673887252807617, 0.8673887252807617, 0.8704266548156738, 0.8770307898521423, 0.8840311765670776, 0.8842953443527222, 0.8858803510665894, 0.8905032277107239, 0.8878615498542786, 0.8947299122810364, 0.889578640460968, 0.8996169567108154, 0.8992207050323486, 0.8968431949615479, 0.91124027967453, 0.9072777628898621, 0.9116365313529968, 0.9115044474601746, 0.9177123308181763, 0.9167877435684204, 0.9216747879981995, 0.9214106202125549, 0.9261656403541565, 0.9270902276039124, 0.9282789826393127, 0.9265618920326233, 0.9281468987464905], "val_loss": [0.9303034033094134, 0.6272458008357457, 0.5708116974149432, 0.5335532426834106, 0.49003595965249197, 0.44431298119681223, 0.4354539087840489, 0.4137105771473476, 0.3913624882698059, 0.3820968440600804, 0.37471279076167513, 0.3587808098111834, 0.34862239020211355, 0.34071465900966097, 0.33343322787966045, 0.3344522374016898, 0.3280615040234157, 0.32257910285677227, 0.32176418815340313, 0.3176694256918771, 0.31016652073178974, 0.3035494600023542, 0.29854088170187815, 0.29530361720493864, 0.31063672474452425, 0.30075455563408987, 0.31105982405798777, 0.2957843371800014, 0.2944534420967102, 0.29539746046066284, 0.28545153992516653, 0.29230609110423494, 0.29866323300770353, 0.29012673241751535, 0.2889744894845145, 0.2957651785441807, 0.29172169310706003, 0.3032417467662266, 0.28896765198026386, 0.28618816818509785, 0.2961175101143973, 0.29647224290030344, 0.2945446031434195, 0.29735749108450754], "val_accuracy": [0.6236666440963745, 0.7319999933242798, 0.7433333396911621, 0.7509999871253967, 0.7636666893959045, 0.7983333468437195, 0.8056666851043701, 0.8133333325386047, 0.8286666870117188, 0.840666651725769, 0.8346666693687439, 0.8403333425521851, 0.8450000286102295, 0.8500000238418579, 0.8560000061988831, 0.8500000238418579, 0.8543333411216736, 0.8566666841506958, 0.8553333282470703, 0.8539999723434448, 0.8643333315849304, 0.8616666793823242, 0.8646666407585144, 0.8693333268165588, 0.8636666536331177, 0.8690000176429749, 0.8693333268165588, 0.8653333187103271, 0.8723333477973938, 0.8693333268165588, 0.8766666650772095, 0.8730000257492065, 0.8759999871253967, 0.8790000081062317, 0.8786666393280029, 0.8786666393280029, 0.8796666860580444, 0.878000020980835, 0.8820000290870667, 0.8809999823570251, 0.8769999742507935, 0.8813333511352539, 0.8820000290870667, 0.8799999952316284]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 8, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8454285860061646, "mapping_values": [1, 14, 14, 10, 4, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0403432105242882, 1.1306603687818197, 0.8019985079907029, 0.6995487454356046, 0.6477627268383579, 0.5858006583165813, 0.5540258241619306, 0.5258464303668212, 0.49584258979243245, 0.47103192419376605, 0.44942770294304835, 0.4386456609638281, 0.421057666199098, 0.40412461979278025, 0.3993713389439999, 0.3891925106880262, 0.3736193876232784, 0.3652843728852452, 0.36012496243315506, 0.34780053479276896, 0.3328767883393428, 0.3286235425151366, 0.32194757929189627, 0.3072836471547099, 0.2896273884838126, 0.29172571434864136, 0.2808448560225918, 0.28594122798514326, 0.27427856057878375, 0.26350936818714893, 0.263694066190685, 0.24593643060591494, 0.24546585046123945, 0.23815391317901516, 0.23129469775457612, 0.21709326834663534, 0.20858580374942873, 0.21170528294458807, 0.20298227118683718, 0.2049104901210995, 0.20081023210587046, 0.19456270201299736, 0.18892949064961043, 0.19094162986318214, 0.18362566073533487, 0.1762673158167596, 0.17441110250940728, 0.1710772692877713, 0.16545788147438156, 0.15615809462514804, 0.1586009125175918, 0.15253166415868985, 0.15168790895555312, 0.14690100177758406], "accuracy": [0.3217540681362152, 0.609430730342865, 0.7009642124176025, 0.7374191284179688, 0.754589855670929, 0.7771760821342468, 0.7902522683143616, 0.8037247657775879, 0.8210275769233704, 0.8281601071357727, 0.8409721255302429, 0.8401796221733093, 0.8492933511734009, 0.8557654023170471, 0.8543124794960022, 0.8580108284950256, 0.8648791313171387, 0.8623695969581604, 0.8691058158874512, 0.8714832663536072, 0.8776912093162537, 0.8779553771018982, 0.8829745054244995, 0.8840311765670776, 0.8906353116035461, 0.8906353116035461, 0.894069492816925, 0.8928807377815247, 0.89552241563797, 0.8993527889251709, 0.8980319499969482, 0.9068815112113953, 0.9076740145683289, 0.9126931428909302, 0.9146744012832642, 0.9198256731033325, 0.9196935892105103, 0.9185048341751099, 0.9216747879981995, 0.9255052208900452, 0.9203540086746216, 0.9256373047828674, 0.9252410531044006, 0.9282789826393127, 0.9332981109619141, 0.9331660270690918, 0.9290714859962463, 0.9335622787475586, 0.9377889037132263, 0.9421476721763611, 0.9406947493553162, 0.9387134909629822, 0.9428080916404724, 0.9437326788902283], "val_loss": [0.9303024155752999, 0.627297009740557, 0.5710047824042184, 0.5336190462112427, 0.4898012025015695, 0.44420679977961947, 0.43548171860831125, 0.414678156375885, 0.3905759538922991, 0.3815057022230966, 0.3770540952682495, 0.36574436937059673, 0.35087547983442036, 0.34683493205479216, 0.33666941097804476, 0.33780074971062796, 0.3266795873641968, 0.3226590156555176, 0.3264760375022888, 0.3175852469035557, 0.30825246231896536, 0.30755177565983366, 0.3001960941723415, 0.30409674985068186, 0.3029705456324986, 0.3027256727218628, 0.30728275435311453, 0.2960513234138489, 0.29031661578587126, 0.2973728861127581, 0.2865463239806039, 0.29303888763700214, 0.2914664234433855, 0.2937946149281093, 0.28886360781533377, 0.2933292474065508, 0.292422924722944, 0.29055180719920565, 0.28862376723970684, 0.2902535966464451, 0.2915464384215219, 0.2893470185143607, 0.29256543942860197, 0.2894557884761265, 0.3003583976200649, 0.292811461857387, 0.30180797406605314, 0.3048666204724993, 0.2984742096492222, 0.30306339263916016, 0.3061356374195644, 0.3071328657014029, 0.31615121023995535, 0.3219992092677525], "val_accuracy": [0.6233333349227905, 0.7319999933242798, 0.7429999709129333, 0.7526666522026062, 0.7636666893959045, 0.800000011920929, 0.8059999942779541, 0.8119999766349792, 0.82833331823349, 0.8413333296775818, 0.8320000171661377, 0.8410000205039978, 0.843999981880188, 0.8463333249092102, 0.8546666502952576, 0.8503333330154419, 0.8523333072662354, 0.8536666631698608, 0.8519999980926514, 0.8613333106040955, 0.8643333315849304, 0.8586666584014893, 0.8629999756813049, 0.8633333444595337, 0.8656666874885559, 0.8703333139419556, 0.8683333396911621, 0.8683333396911621, 0.8733333349227905, 0.874666690826416, 0.874666690826416, 0.8756666779518127, 0.8756666779518127, 0.8799999952316284, 0.8769999742507935, 0.878333330154419, 0.8793333172798157, 0.8820000290870667, 0.8823333382606506, 0.8799999952316284, 0.8816666603088379, 0.8863333463668823, 0.8856666684150696, 0.8849999904632568, 0.8843333125114441, 0.887333333492279, 0.8866666555404663, 0.8853333592414856, 0.8896666765213013, 0.8880000114440918, 0.8840000033378601, 0.8853333592414856, 0.8816666603088379, 0.8856666684150696]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8425714373588562, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0403431728452723, 1.1306320516157145, 0.8014739017051367, 0.6987786671158314, 0.6463719147496518, 0.5866291885913844, 0.5546110663762293, 0.5245316533750437, 0.4963910293152398, 0.46803095019598995, 0.44966056054892745, 0.43465887401963993, 0.42273239998643614, 0.40524594698914634, 0.3960469905427261, 0.38659166433177905, 0.371858328931194, 0.3657940186293464, 0.363635856166665, 0.35306398392810073, 0.3352924916903577, 0.3285061956404569, 0.32358122114035526, 0.3075847549091131, 0.2893985489403268, 0.2911381612104621, 0.2818298847203588, 0.28738085470730523, 0.2748333866436248, 0.2657601133750619, 0.2650135698264632, 0.24123453944350717, 0.23964520296313901, 0.23681265557005957, 0.22867857054783258, 0.22084049620113164, 0.21188484854221723, 0.20684468977841183, 0.19924182119961223, 0.20128150565347747, 0.18861043436290126, 0.18829540884521548, 0.18492647654360564, 0.1843442743807232, 0.18547434024901485, 0.17857796110812116, 0.18306027805690264, 0.17311131001983132], "accuracy": [0.3217540681362152, 0.6092986464500427, 0.7008321285247803, 0.7374191284179688, 0.7555144429206848, 0.7775723338127136, 0.7887993454933167, 0.8074230551719666, 0.8231409192085266, 0.8289526104927063, 0.8359529972076416, 0.8417646288871765, 0.8457271456718445, 0.8539162874221802, 0.852331280708313, 0.859199583530426, 0.8644828796386719, 0.8671245574951172, 0.86553955078125, 0.8706908226013184, 0.8739928603172302, 0.8790120482444763, 0.8815215826034546, 0.8829745054244995, 0.8919561505317688, 0.8889182209968567, 0.8957865834236145, 0.8912957310676575, 0.8981640338897705, 0.8981640338897705, 0.895918607711792, 0.9111081957817078, 0.9093911051750183, 0.9121648669242859, 0.9133535623550415, 0.919561505317688, 0.9178444147109985, 0.9212785363197327, 0.921938955783844, 0.9235239624977112, 0.926429808139801, 0.9311847686767578, 0.9285431504249573, 0.9289394021034241, 0.9290714859962463, 0.9301280975341797, 0.9232597947120667, 0.9339585304260254], "val_loss": [0.9303146089826312, 0.6274875232151577, 0.570707014628819, 0.5320876836776733, 0.48782239641462055, 0.4440555231911795, 0.43572126967566355, 0.4154419217790876, 0.3912912266595023, 0.3824957609176636, 0.3729304245540074, 0.35679382937295095, 0.35110839775630404, 0.34468724046434673, 0.3356501715523856, 0.3392892820494516, 0.3296400989804949, 0.3254400406564985, 0.3290678858757019, 0.32475703954696655, 0.31291741132736206, 0.3131137916019985, 0.3091159462928772, 0.30348280497959684, 0.306740973676954, 0.3011228697640555, 0.30877759626933504, 0.30239652735846384, 0.29220891850335257, 0.28978461027145386, 0.28803253173828125, 0.2916629229273115, 0.29435339995792936, 0.2943251643862043, 0.2853990112032209, 0.29960085664476666, 0.2943454214504787, 0.2958983268056597, 0.30111012288502287, 0.2893139294215611, 0.2983270798410688, 0.29300100462777273, 0.2929714747837612, 0.29487225839069914, 0.2973872252873012, 0.2998717171805246, 0.3018117461885725, 0.31133924211774555], "val_accuracy": [0.6236666440963745, 0.7326666712760925, 0.7429999709129333, 0.7523333430290222, 0.765333354473114, 0.7986666560173035, 0.8066666722297668, 0.809333324432373, 0.8263333439826965, 0.8403333425521851, 0.8360000252723694, 0.8423333168029785, 0.8423333168029785, 0.8479999899864197, 0.8539999723434448, 0.8476666808128357, 0.8493333458900452, 0.8553333282470703, 0.8526666760444641, 0.8550000190734863, 0.8616666793823242, 0.862666666507721, 0.8603333234786987, 0.8653333187103271, 0.8646666407585144, 0.8723333477973938, 0.8650000095367432, 0.8606666922569275, 0.871666669845581, 0.8769999742507935, 0.8763333559036255, 0.8776666522026062, 0.8806666731834412, 0.8799999952316284, 0.878000020980835, 0.8796666860580444, 0.8793333172798157, 0.8830000162124634, 0.8793333172798157, 0.8823333382606506, 0.8826666474342346, 0.8856666684150696, 0.8880000114440918, 0.8836666941642761, 0.878000020980835, 0.8826666474342346, 0.8806666731834412, 0.8820000290870667]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.838857114315033, "mapping_values": [1, 14, 14, 10, 4, 3, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0403436666718404, 1.1307896948399214, 0.8018560121245529, 0.6992843420655735, 0.646815957244928, 0.5861367904562063, 0.5539086232521058, 0.525257964628468, 0.49620782677145714, 0.4696751758525117, 0.44956486345345176, 0.4353243420506985, 0.4202019982586101, 0.4036231260761971, 0.395469507950172, 0.38152749197373786, 0.37360196669954177, 0.36553565005049365, 0.3633146267076761, 0.3515834790832725], "accuracy": [0.3217540681362152, 0.6095628142356873, 0.7004358768463135, 0.7363624572753906, 0.7543256878852844, 0.77677983045578, 0.7902522683143616, 0.8058380484580994, 0.8235371708869934, 0.8278959393501282, 0.8387266993522644, 0.8407079577445984, 0.8494254350662231, 0.8533879518508911, 0.8541803956031799, 0.8614450097084045, 0.8650112152099609, 0.8626337051391602, 0.8659358024597168, 0.8679170608520508], "val_loss": [0.9303017343793597, 0.6273210900170463, 0.5710434743336269, 0.5318427767072406, 0.4892459086009434, 0.44407265526907785, 0.437492881502424, 0.4128185936382839, 0.3926542401313782, 0.38250575746808735, 0.372436591557094, 0.3538683908326285, 0.35050891978400095, 0.34293609857559204, 0.3351414544241769, 0.332141637802124, 0.32614654302597046, 0.3276039958000183, 0.32662871905735563, 0.32129072291510447], "val_accuracy": [0.6233333349227905, 0.7319999933242798, 0.7433333396911621, 0.753000020980835, 0.765999972820282, 0.7973333597183228, 0.8023333549499512, 0.8136666417121887, 0.8263333439826965, 0.8373333215713501, 0.8353333473205566, 0.8443333506584167, 0.8453333377838135, 0.8503333330154419, 0.8573333621025085, 0.856333315372467, 0.8513333201408386, 0.8529999852180481, 0.8500000238418579, 0.8533333539962769]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8322857022285461, "mapping_values": [1, 14, 14, 10, 4, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0403439049959466, 1.1307989269861094, 0.8016713262706495, 0.6995646821556626, 0.6471155211201528, 0.5863395720078661, 0.5547646681913815, 0.5254148999343474, 0.49529014189859594, 0.46951913008159574, 0.44873470863913656, 0.43255016748947067, 0.42200732759795784, 0.4055670720120746, 0.39962170246002965, 0.3846809391403211, 0.37048233232052885, 0.36344560463950304, 0.3609202519746079, 0.34620536905332655], "accuracy": [0.3217540681362152, 0.6092986464500427, 0.7000396251678467, 0.7380794882774353, 0.7553823590278625, 0.7770439982414246, 0.7917051911354065, 0.8053097128868103, 0.822348415851593, 0.8271034359931946, 0.8380662798881531, 0.8424250483512878, 0.8475762605667114, 0.8539162874221802, 0.8535200357437134, 0.8605204224586487, 0.8646149635314941, 0.8665962219238281, 0.8665962219238281, 0.8705587387084961], "val_loss": [0.9302996226719448, 0.6272959538868496, 0.5708521434238979, 0.5321950742176601, 0.48964602606637136, 0.4445927994591849, 0.4362619859831674, 0.4126489417893546, 0.3933898040226528, 0.38070249557495117, 0.36921933719090055, 0.36100707735334125, 0.35280096530914307, 0.3428273286138262, 0.3328224505696978, 0.3357924393245152, 0.32602912187576294, 0.3202211175646101, 0.32696291378566195, 0.31543175663266865], "val_accuracy": [0.6233333349227905, 0.7323333621025085, 0.7436666488647461, 0.7526666522026062, 0.7643333077430725, 0.7973333597183228, 0.8056666851043701, 0.8140000104904175, 0.824999988079071, 0.8413333296775818, 0.8376666903495789, 0.8423333168029785, 0.8450000286102295, 0.8479999899864197, 0.8579999804496765, 0.8513333201408386, 0.8539999723434448, 0.8550000190734863, 0.8516666889190674, 0.8579999804496765]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 2, 2, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 95, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [29, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8008571267127991, "mapping_values": [1, 23, 23, 15, 8, 5, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.negative(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.265090850932865, 1.930203419445906, 1.36942094147969, 0.9926732046697685, 0.8587627132035611, 0.786323432846155, 0.7427800895909213, 0.6999353649845811, 0.6824654152112756, 0.6452184458922685, 0.6156338701678337, 0.588397715054231, 0.5635250777757997, 0.5494036591914289, 0.5333164188887355, 0.5081590659598538, 0.49032293986556175, 0.4853194238660578, 0.46955313895592965, 0.4589696008499981, 0.4382770853059293, 0.431107735822009, 0.42383385315515804, 0.41197535331065643, 0.3980856459760521, 0.3919870817603027, 0.3726420304707847, 0.37717239612428316, 0.36649818421433616, 0.35042634345379486, 0.3512808016624748, 0.3345822039777577, 0.32464352668929863, 0.32813475042554, 0.3193353682839088, 0.3068700795554057, 0.30946153144102057, 0.3025016886069081, 0.29411153892689157, 0.29128315987729947, 0.2866420508958345, 0.27767868850760535, 0.27585677703562794, 0.2649910467656029, 0.2669813437602618, 0.2578376107259339, 0.251820434278989, 0.2402131773926059, 0.24583162941071085, 0.23121034130680404], "accuracy": [0.18953903019428253, 0.4103817343711853, 0.5226522088050842, 0.6441685557365417, 0.6848500967025757, 0.7000396251678467, 0.7148329019546509, 0.7338528633117676, 0.7461365461349487, 0.7622507214546204, 0.7713643908500671, 0.7824593782424927, 0.7938185334205627, 0.7976489067077637, 0.7980451583862305, 0.8127063512802124, 0.8204993009567261, 0.8241975903511047, 0.8264430165290833, 0.8327829837799072, 0.8432175517082214, 0.843481719493866, 0.8444063067436218, 0.8531237840652466, 0.8531237840652466, 0.8540483713150024, 0.8632941246032715, 0.8660678863525391, 0.8668603897094727, 0.8693699836730957, 0.8713511824607849, 0.8778232932090759, 0.8779553771018982, 0.878351628780365, 0.8829745054244995, 0.8845595121383667, 0.885219931602478, 0.8848236799240112, 0.889050304889679, 0.8920882344245911, 0.8893144726753235, 0.895918607711792, 0.89552241563797, 0.8947299122810364, 0.8960506916046143, 0.9025228023529053, 0.9027869701385498, 0.9084665179252625, 0.9060890078544617, 0.9117686152458191], "val_loss": [1.8433377402169364, 1.1245885576520647, 0.7547968455723354, 0.6788254635674613, 0.5987606729779925, 0.5640485967908587, 0.5486589329583305, 0.5272885050092425, 0.5040264470236642, 0.5017813103539603, 0.4701073850904192, 0.45917519501277376, 0.4397705452782767, 0.4269777706691197, 0.4105085815702166, 0.4052404335566929, 0.39616366795131136, 0.3903760824884687, 0.37861059393201557, 0.36973120485033306, 0.361337559563773, 0.35769637141908917, 0.3508737087249756, 0.3390459844044277, 0.34239700010844637, 0.33902584654944284, 0.3350338765553066, 0.3282634786197117, 0.3220945681844439, 0.31909007685525076, 0.31451473917279926, 0.31461048126220703, 0.3099069425037929, 0.30897904293877737, 0.3035413793155125, 0.30009227991104126, 0.30114210503441946, 0.2995243157659258, 0.29669699498585295, 0.3007388029779707, 0.30208668538502287, 0.3018087489264352, 0.2976551651954651, 0.2961731808526175, 0.2910301685333252, 0.29595437220164705, 0.2971360172544207, 0.29089464460100445, 0.2921980449131557, 0.295185387134552], "val_accuracy": [0.45500001311302185, 0.5863333344459534, 0.6859999895095825, 0.7213333249092102, 0.7323333621025085, 0.7480000257492065, 0.749666690826416, 0.7606666684150696, 0.7696666717529297, 0.7683333158493042, 0.7866666913032532, 0.7873333096504211, 0.7963333129882812, 0.8043333292007446, 0.8196666836738586, 0.8166666626930237, 0.8230000138282776, 0.828000009059906, 0.8330000042915344, 0.8396666646003723, 0.8460000157356262, 0.843666672706604, 0.8476666808128357, 0.8536666631698608, 0.8519999980926514, 0.8510000109672546, 0.8516666889190674, 0.8553333282470703, 0.8579999804496765, 0.8569999933242798, 0.8606666922569275, 0.8616666793823242, 0.8606666922569275, 0.8633333444595337, 0.8669999837875366, 0.8659999966621399, 0.8663333058357239, 0.8659999966621399, 0.8726666569709778, 0.8686666488647461, 0.8706666827201843, 0.8713333606719971, 0.878333330154419, 0.8733333349227905, 0.8806666731834412, 0.8743333220481873, 0.8693333268165588, 0.878333330154419, 0.8796666860580444, 0.8776666522026062]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 1, 3, 0], [38, 43, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [7, 9, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 1, 2], [12, 32, 85]], "fitness": -0.38914287090301514, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.2139734830744215, 2.574459899418138, 2.326611326103276, 2.2713431018675165, 2.3955267332863293, 2.3034876710813372], "accuracy": [0.19336943328380585, 0.22876766324043274, 0.09734513610601425, 0.14780081808567047, 0.11451591551303864, 0.09747721254825592], "val_loss": [1.9030775342668806, 2.088614055088588, 1.9723657199314661, 2.1332837513514926, 1.9745758601597376, 1.973804133278983], "val_accuracy": [0.4013333320617676, 0.10066666454076767, 0.10066666454076767, 0.2396666705608368, 0.10000000149011612, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [5, 4, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 1, 2], [12, 32, 85]], "fitness": -0.3634285628795624, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.2138978729882908, 2.258412659144625, 2.3032597406523623, 2.393364781858489, 2.307462191332947, 2.30344411816973], "accuracy": [0.19402985274791718, 0.17421740293502808, 0.10381719470024109, 0.19178444147109985, 0.0952318087220192, 0.09853387624025345], "val_loss": [1.9009367397853307, 1.977299417768206, 1.9651457922799247, 1.9816975593566895, 1.9745738165719169, 1.973731517791748], "val_accuracy": [0.2840000092983246, 0.1003333330154419, 0.21299999952316284, 0.10066666454076767, 0.09799999743700027, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [5, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [8, 43, 6], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.11085714399814606, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3025894456016167, 2.3017474062265486, 2.3026851197873692, 2.300980106871976, 2.3024993165136722, 2.3018583749436807, 2.302402287678334, 2.3011677995129283, 2.3012102709596247, 2.3006401084055437, 2.3003822562401997, 2.300683813040928, 2.3005719798005817, 2.300672722687858, 2.3011482562119414, 2.3017814252606756, 2.3014827145876398, 2.301804289857489], "accuracy": [0.09272222965955734, 0.08545766770839691, 0.08770307898521423, 0.09509972482919693, 0.09179764986038208, 0.09430722147226334, 0.08928807079792023, 0.09126931428909302, 0.09457138925790787, 0.0944393053650856, 0.09536388516426086, 0.09536388516426086, 0.09853387624025345, 0.09919429570436478, 0.09509972482919693, 0.09589222073554993, 0.10540219396352768, 0.1026284471154213], "val_loss": [1.9709784643990653, 1.9709243774414062, 1.9708424295697893, 1.970748015812465, 1.9706501960754395, 1.9705570084708077, 1.970512526375907, 1.9705127307346888, 1.9705939292907715, 1.9707937921796526, 1.9710869107927596, 1.9714539391653878, 1.9718523706708635, 1.9722421509878976, 1.9725937162126814, 1.9728636060442244, 1.9730849266052246, 1.97329466683524], "val_accuracy": [0.03866666555404663, 0.039000000804662704, 0.04233333468437195, 0.045666664838790894, 0.052000001072883606, 0.0560000017285347, 0.06300000101327896, 0.0716666653752327, 0.08299999684095383, 0.09333333373069763, 0.10466666519641876, 0.1080000028014183, 0.11400000005960464, 0.10966666787862778, 0.09966666996479034, 0.09266666322946548, 0.08433333039283752, 0.09233333170413971]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07158895581960678, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [29, 43, 6], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [7, 9, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3025276403322574, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [2, 3, 9, 0, 1, 9], [3, 2, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0816272646188736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 2, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [22, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [60, 43, 6], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [7, 9, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.pow(tf.math.multiply(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0734381154179573, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 5, 6, 0, 4, 3, 2, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 33, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [8, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 20, 13, 4, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.447793853249863, 14.510879514334208, 40.26931195151395, 84.46836580440998, 151.72878918278062, 248.44899633969644], "accuracy": [0.10038304328918457, 0.10328886657953262, 0.1022322028875351, 0.10249637067317963, 0.1002509593963623, 0.09932637959718704], "val_loss": [5.022316523960659, 16.82879420689174, 38.94046129499163, 73.97979082380023, 125.08245849609375, 195.65036010742188], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [2, 3, 9, 0, 1, 9], [4, 1, 1, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.04714285582304001, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.9119226332621535, 2.9213749941046276, 126.84311443347626, 2.5089626502461675, 2.487415700650974, 2.4434487739999327, 2.511852668150777], "accuracy": [0.2094835489988327, 0.12151630967855453, 0.1014397069811821, 0.0940430611371994, 0.10381719470024109, 0.1002509593963623, 0.10249637067317963], "val_loss": [2.134326866694859, 2.0528599194117954, 2.1935669354030063, 2.0878498213631764, 2.1257435253688266, 2.099849155970982, 2.1168552126203264], "val_accuracy": [0.10000000149011612, 0.10899999737739563, 0.10133333504199982, 0.10066666454076767, 0.1003333330154419, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 8, 5, 0, 4, 3, 9, 1, 9, 4, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [1, 3, 9, 0, 1, 9], [3, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3026021544990947, 2.3018169594226716, 2.302839001833314, 2.3014018831314775, 2.3032488279716765, 2.30272700030491], "accuracy": [0.09272222965955734, 0.08532558381557465, 0.08809932321310043, 0.09272222965955734, 0.09100515395402908, 0.09153348207473755], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [6, 5, 5, 0, 4, 3, 2, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 80, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [2, 3, 3, 3, 0], [29, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 19, 19, 12, 7, 3, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.square(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3026021544990947, 2.3018169594226716, 2.302839001833314, 2.3014018831314775, 2.3032488279716765, 2.30272700030491], "accuracy": [0.09272222965955734, 0.08532558381557465, 0.08809932321310043, 0.09272222965955734, 0.09100515395402908, 0.09153348207473755], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [29, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [64, 55], [0, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [3, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 14, 14, 10, 4, 2, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.square(grad))))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3026021544990947, 2.3018169594226716, 2.302839001833314, 2.3014018831314775, 2.3032488279716765, 2.30272700030491], "accuracy": [0.09272222965955734, 0.08532558381557465, 0.08809932321310043, 0.09272222965955734, 0.09100515395402908, 0.09153348207473755], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.0357142873108387, "mapping_values": [1, 10, 10, 6, 4, 2, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 5, 3, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [2.302621978101729, 2.3020592568462646, 2.3036083550012942, 2.3030716221897185, 2.306239316145726, 2.3071615364982656], "accuracy": [0.09245806187391281, 0.08466517180204391, 0.08796724677085876, 0.08730682730674744, 0.08413683623075485, 0.08189142495393753], "val_loss": [1.9710612978254045, 1.9714065960475378, 1.9720497131347656, 1.9728723934718542, 1.9739313806806291, 1.9751497677394323], "val_accuracy": [0.036666665226221085, 0.03333333507180214, 0.029999999329447746, 0.026000000536441803, 0.02433333359658718, 0.023000000044703484]}}]