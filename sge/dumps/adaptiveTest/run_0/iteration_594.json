[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 2, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.849142849445343, "mapping_values": [1, 17, 17, 11, 6, 4, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(alpha))), tf.math.add(alpha, tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0439713152250705, 1.0561828539907152, 0.7914712671842463, 0.681610925346239, 0.6353454447031934, 0.5894108016524632, 0.549812337426682, 0.5203895862973865, 0.49766447641798817, 0.4826744367000591, 0.4593962076443723, 0.43971291467844614, 0.4244703239792169, 0.4090584624027768, 0.393196803105427, 0.3934328334403312, 0.37332167730213645, 0.3632253274831317, 0.3497851402917637, 0.33613075322840963, 0.32578891186256925, 0.3193097562247327, 0.31841500696882735, 0.30576128021065646, 0.3081063807262579, 0.29648360332887186, 0.2826066688933251, 0.2755345305502454, 0.2760969087345694, 0.26238427561240474, 0.25604108533744624, 0.25636251787420716, 0.24577717713518638, 0.24500240939971304, 0.23010040020166433, 0.22844935502901745, 0.21935670236633628, 0.2138332199182776, 0.20313611708304918, 0.20766983756638316, 0.20278369533096116, 0.1999531095081616, 0.1958615565757395, 0.18202737920658385, 0.1840482499357448, 0.172805765988395, 0.1697484614838541, 0.16773131368119623, 0.17280635020799326, 0.16961742473268993, 0.1556528462548502, 0.15123291066837286, 0.15485868886508772], "accuracy": [0.3106590807437897, 0.6206578016281128, 0.7049266695976257, 0.7452120184898376, 0.7597411274909973, 0.7812706232070923, 0.7926297783851624, 0.8043851256370544, 0.8161405324935913, 0.8215559124946594, 0.8290846943855286, 0.8392550349235535, 0.8424250483512878, 0.852331280708313, 0.8539162874221802, 0.858671247959137, 0.8621054291725159, 0.8687095642089844, 0.8687095642089844, 0.8759741187095642, 0.8768987059593201, 0.8791441321372986, 0.8770307898521423, 0.8878615498542786, 0.887597382068634, 0.887201189994812, 0.8916919827461243, 0.8968431949615479, 0.8949940800666809, 0.8986923694610596, 0.9025228023529053, 0.9014661312103271, 0.9039757251739502, 0.9064852595329285, 0.9100515246391296, 0.9111081957817078, 0.9159952402114868, 0.9186369180679321, 0.9220710396766663, 0.9194294214248657, 0.9203540086746216, 0.9228635430335999, 0.9225993752479553, 0.9306564331054688, 0.9270902276039124, 0.9340906143188477, 0.9358077049255371, 0.9360718727111816, 0.9332981109619141, 0.9363360404968262, 0.9447893500328064, 0.9428080916404724, 0.941619336605072], "val_loss": [0.9325809819357735, 0.6372969661440168, 0.5564646891185215, 0.5082000664302281, 0.48152085712977816, 0.4476590156555176, 0.43502670526504517, 0.406591534614563, 0.4074918712888445, 0.38321914843150545, 0.3691195249557495, 0.368924013205937, 0.3514741999762399, 0.3487857835633414, 0.34088826179504395, 0.33310381855283466, 0.33090807710375103, 0.3146843569619315, 0.3105430688176836, 0.32195388419287546, 0.3110652140208653, 0.30681017466953825, 0.30839177540370394, 0.30523215021405903, 0.30268985884530203, 0.2990649087088449, 0.30572997672217234, 0.30423785958971294, 0.29552395003182547, 0.2975609983716692, 0.2955852150917053, 0.302280102457319, 0.319515449660165, 0.29657343455723356, 0.30216566153935026, 0.2947853292737688, 0.3010110344205584, 0.29384200062070576, 0.3028550573757717, 0.2947357211794172, 0.306094901902335, 0.3023772324834551, 0.3005656089101519, 0.3169300641332354, 0.3006193722997393, 0.3154997059277126, 0.3073694280215672, 0.3086825098310198, 0.31650168555123465, 0.3216733591897147, 0.308969897883279, 0.31799029452460154, 0.30662109170641216], "val_accuracy": [0.6343333125114441, 0.718999981880188, 0.7523333430290222, 0.7789999842643738, 0.7749999761581421, 0.7960000038146973, 0.793666660785675, 0.8233333230018616, 0.8149999976158142, 0.8339999914169312, 0.8393333554267883, 0.8353333473205566, 0.8483333587646484, 0.846666693687439, 0.8560000061988831, 0.8533333539962769, 0.8533333539962769, 0.8606666922569275, 0.8606666922569275, 0.8586666584014893, 0.8640000224113464, 0.8669999837875366, 0.8613333106040955, 0.8706666827201843, 0.8669999837875366, 0.8700000047683716, 0.8696666955947876, 0.8643333315849304, 0.8713333606719971, 0.871666669845581, 0.8773333430290222, 0.8726666569709778, 0.8650000095367432, 0.8726666569709778, 0.8786666393280029, 0.8756666779518127, 0.8796666860580444, 0.8806666731834412, 0.8776666522026062, 0.8806666731834412, 0.8786666393280029, 0.8813333511352539, 0.8816666603088379, 0.8759999871253967, 0.8806666731834412, 0.8809999823570251, 0.8786666393280029, 0.8856666684150696, 0.8796666860580444, 0.8826666474342346, 0.8836666941642761, 0.8816666603088379, 0.8836666941642761]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 2, 4, 3, 2, 0, 2, 0, 0, 2, 6, 8, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 37, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8485714197158813, "mapping_values": [1, 16, 16, 9, 7, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(grad)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.043003294871326, 1.0535729825221127, 0.7892550073122194, 0.6817445549604647, 0.6308033328014767, 0.5874103846141864, 0.5462216592546719, 0.5179015191995456, 0.49476911576511273, 0.47603935640186695, 0.4575580707662031, 0.4441174019549769, 0.4247919733277748, 0.40945667705090605, 0.3919168293137576, 0.39646860018319396, 0.37120227606824646, 0.36086591998694073, 0.34561911157613195, 0.33286055837088824, 0.32715149954199524, 0.31970593494635846, 0.3127827228154835, 0.30183390789437586, 0.3036222628370299, 0.2932406271949436, 0.27591528132087473, 0.27101302775551284, 0.2693153737857593, 0.27079513171062086, 0.2675224120047555, 0.2607281601912373, 0.2438743449752483, 0.24722226952887671, 0.22459438459716688, 0.2238039387676143, 0.218752806321064, 0.21692121481977322, 0.21109708162496243, 0.20612286928937326, 0.2000815148512449, 0.19224161195630615, 0.19566639517402573], "accuracy": [0.31079116463661194, 0.6199973821640015, 0.7024171352386475, 0.7485140562057495, 0.7637035846710205, 0.7791573405265808, 0.7942147850990295, 0.8082155585289001, 0.8185180425643921, 0.8244617581367493, 0.8294808864593506, 0.8392550349235535, 0.8437458872795105, 0.8539162874221802, 0.8569541573524475, 0.8576145768165588, 0.8636903762817383, 0.8684453964233398, 0.8679170608520508, 0.8784837126731873, 0.8798044919967651, 0.8809932470321655, 0.8809932470321655, 0.8887861371040344, 0.8856161832809448, 0.8906353116035461, 0.8949940800666809, 0.89988112449646, 0.8989565372467041, 0.8945978283882141, 0.8953903317451477, 0.901862382888794, 0.9025228023529053, 0.9034473896026611, 0.9120327830314636, 0.9142781496047974, 0.9140139818191528, 0.9148064851760864, 0.9215427041053772, 0.9210143685340881, 0.9214106202125549, 0.9268260598182678, 0.9241843819618225], "val_loss": [0.9298133168901715, 0.6451275859560285, 0.5520965542112078, 0.5088202953338623, 0.47870348181043354, 0.4490421158926828, 0.43472276415143696, 0.4028119019099644, 0.40269070863723755, 0.379801298890795, 0.3669397234916687, 0.36814492089407785, 0.35050565004348755, 0.34928696496146067, 0.335713905947549, 0.32963043451309204, 0.3334790127617972, 0.31412713868277414, 0.31038103784833637, 0.31930228642054964, 0.3094611849103655, 0.306023154939924, 0.3032888514654977, 0.3034447857311794, 0.29824220282690866, 0.2970143812043326, 0.2965972423553467, 0.2989705971309117, 0.3024893232754299, 0.3019423059054783, 0.3017949036189488, 0.29560764346803936, 0.31364340441567556, 0.29145921979631695, 0.3058596508843558, 0.29851458753858295, 0.3095844898905073, 0.2962967923709324, 0.2991772975240435, 0.29451698916299, 0.31270252806799753, 0.3010087183543614, 0.3030833091054644], "val_accuracy": [0.6333333253860474, 0.7129999995231628, 0.7549999952316284, 0.7760000228881836, 0.7796666622161865, 0.7963333129882812, 0.8016666769981384, 0.8236666917800903, 0.8216666579246521, 0.8333333134651184, 0.8330000042915344, 0.8339999914169312, 0.8489999771118164, 0.847000002861023, 0.8560000061988831, 0.8560000061988831, 0.8519999980926514, 0.8646666407585144, 0.8629999756813049, 0.8600000143051147, 0.8616666793823242, 0.8659999966621399, 0.8650000095367432, 0.8683333396911621, 0.8713333606719971, 0.8676666617393494, 0.8730000257492065, 0.8693333268165588, 0.8643333315849304, 0.8673333525657654, 0.875333309173584, 0.875333309173584, 0.8703333139419556, 0.875, 0.8763333559036255, 0.8799999952316284, 0.8776666522026062, 0.8833333253860474, 0.8803333044052124, 0.8833333253860474, 0.8799999952316284, 0.8816666603088379, 0.8813333511352539]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 2, 6, 3, 2, 2, 0, 0, 0, 2, 6, 8, 4, 1, 5, 5, 0, 6, 2, 8, 1, 8, 1, 6, 5, 8, 6, 3, 9, 1, 5, 0], [2, 2, 2, 1, 0, 2, 2, 1, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 1, 8, 5, 0, 9], [2, 4, 0], [25, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8462857007980347, "mapping_values": [1, 50, 50, 32, 18, 3, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 58, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, grad)), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(grad)))), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.subtract(alpha, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.add(alpha, grad)))))))))))))))))), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.sqrt(grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad)))), tf.math.square(tf.math.negative(grad)))))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.043006499839292, 1.0536239433675914, 0.7900260956516324, 0.6813967674872218, 0.6331010540132241, 0.5861562304351277, 0.5460320125087819, 0.5168086602120682, 0.49630777951339294, 0.47578185792407657, 0.45391727418097144, 0.43875457850099003, 0.4248360035331604, 0.4089140087787297, 0.39417511958094037, 0.3958641854432816, 0.37804535980773185, 0.3625441357924434, 0.3517643343487499, 0.33376109858687214, 0.3260347547784316, 0.32312121144564177, 0.31419814755226627, 0.3049247481480975, 0.30550998557182335, 0.29245666206756904, 0.2793980365368857, 0.2693414955351095, 0.2665147073020741, 0.2642722952328086, 0.26119473236442603, 0.2555361202033661, 0.2398926612979244, 0.24839437202164336, 0.2324171814530706, 0.22622904251154308, 0.220932558598126, 0.2192257509893194, 0.21062501200973366, 0.2056152448087651, 0.2010183489010901], "accuracy": [0.3106590807437897, 0.6201294660568237, 0.705058753490448, 0.7474573850631714, 0.7623828053474426, 0.7791573405265808, 0.7932901978492737, 0.8099326491355896, 0.8183859586715698, 0.8247259259223938, 0.8318583965301514, 0.8388587832450867, 0.8430854678153992, 0.8518029451370239, 0.8568220734596252, 0.8561616539955139, 0.8588033318519592, 0.8692378997802734, 0.8698983192443848, 0.8798044919967651, 0.8796724081039429, 0.8796724081039429, 0.8787478804588318, 0.8841632604598999, 0.8842953443527222, 0.8898428082466125, 0.8939374089241028, 0.8994848728179932, 0.8969752788543701, 0.8985602855682373, 0.8989565372467041, 0.9021265506744385, 0.9085986018180847, 0.9031832218170166, 0.9113723635673523, 0.910711944103241, 0.9157310724258423, 0.9182406663894653, 0.9178444147109985, 0.9199577569961548, 0.9202219247817993], "val_loss": [0.9297493525913784, 0.6415725605828422, 0.5532904693058559, 0.51096282686506, 0.4799187013081142, 0.44727180685315815, 0.4326002597808838, 0.40465093510491507, 0.40653739656720844, 0.3786346912384033, 0.3673482026372637, 0.3730606607028416, 0.34683454036712646, 0.3546944090298244, 0.3391550098146711, 0.33478581053870066, 0.332314704145704, 0.3126815472330366, 0.30944909368242535, 0.31782846791403635, 0.3076837658882141, 0.30729428359440397, 0.30421864134924753, 0.3050838794027056, 0.2962630476270403, 0.29386307512010845, 0.2965402177401951, 0.2994240777833121, 0.2957310080528259, 0.29846079860414776, 0.2958657145500183, 0.30155143567493986, 0.313218355178833, 0.2955275688852583, 0.30100652149745394, 0.2959364822932652, 0.29942005021231516, 0.2992180585861206, 0.3039981552532741, 0.28743033749716623, 0.31358127083097187], "val_accuracy": [0.6333333253860474, 0.7143333554267883, 0.7543333172798157, 0.7770000100135803, 0.7773333191871643, 0.8009999990463257, 0.8026666641235352, 0.824999988079071, 0.8199999928474426, 0.8373333215713501, 0.8376666903495789, 0.8349999785423279, 0.8496666550636292, 0.843666672706604, 0.8529999852180481, 0.8560000061988831, 0.8476666808128357, 0.862333357334137, 0.8640000224113464, 0.8610000014305115, 0.8650000095367432, 0.8653333187103271, 0.8619999885559082, 0.8683333396911621, 0.8700000047683716, 0.875, 0.875, 0.8676666617393494, 0.874666690826416, 0.8669999837875366, 0.8759999871253967, 0.8730000257492065, 0.8723333477973938, 0.8733333349227905, 0.8773333430290222, 0.8816666603088379, 0.8763333559036255, 0.8816666603088379, 0.8799999952316284, 0.8813333511352539, 0.8793333172798157]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 4, 3, 2, 0, 0, 0, 5, 5, 2, 8, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [3, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8391428589820862, "mapping_values": [1, 19, 19, 12, 7, 2, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), grad)), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.043003443099599, 1.053542891718283, 0.7893875567290478, 0.6802003035109513, 0.6306435387872387, 0.587655368435101, 0.546440698364864, 0.517524642203352, 0.4984951173908061, 0.47896108966162804, 0.4580095064811671, 0.4430980299087863, 0.42907354554889415, 0.4133298234806683, 0.3944132549612199, 0.399614799075422, 0.3742194748738848, 0.3644130888427364, 0.3488873876459043, 0.3352426588181035, 0.3315754063361514, 0.32015929538513044, 0.31704069697830134, 0.3075291957436079, 0.3084455292695045, 0.296699632947723, 0.28249929056679646, 0.2760120001034163, 0.27512612214980897, 0.2628806185106701, 0.2587955524369222, 0.2534279725995944, 0.2437012682221963, 0.24275126992050117, 0.2328440359342273, 0.22322078338703538, 0.22163311624216792, 0.21810124707637665, 0.20892051151045687, 0.20720208401708964, 0.20493955128047414, 0.19883740803647776, 0.19494668474530877, 0.19180112663056667, 0.1877241783201293], "accuracy": [0.31079116463661194, 0.6203936338424683, 0.7017567157745361, 0.7503632307052612, 0.763967752456665, 0.7796856164932251, 0.7940827012062073, 0.8088759779930115, 0.8185180425643921, 0.8228767514228821, 0.8305375576019287, 0.8379341959953308, 0.841500461101532, 0.8527275323867798, 0.8549728989601135, 0.8561616539955139, 0.8619733452796936, 0.8692378997802734, 0.8687095642089844, 0.8786157965660095, 0.8782195448875427, 0.8770307898521423, 0.8792761564254761, 0.882710337638855, 0.8865407705307007, 0.8874653577804565, 0.8918240666389465, 0.8943336606025696, 0.894069492816925, 0.8986923694610596, 0.9037115573883057, 0.9041078090667725, 0.9060890078544617, 0.906749427318573, 0.9105798602104187, 0.9132214784622192, 0.9153348207473755, 0.9173160791397095, 0.9192973375320435, 0.9183727502822876, 0.9190331697463989, 0.921938955783844, 0.9233918786048889, 0.926429808139801, 0.9265618920326233], "val_loss": [0.9298317432403564, 0.6460814646312169, 0.5524253164018903, 0.5073184285845075, 0.47901863711220877, 0.4468646390097482, 0.43351577860968454, 0.4081974966185434, 0.40896475315093994, 0.3789586680276053, 0.3712780901363918, 0.37903973034449984, 0.35593720844813753, 0.3499612297330584, 0.34209061520440237, 0.3311417443411691, 0.3351231132234846, 0.3152443766593933, 0.31053827490125385, 0.3256734439304897, 0.3124664510999407, 0.3063639828136989, 0.3053854448454721, 0.305951007774898, 0.2971305847167969, 0.3019940512520926, 0.30578331436429707, 0.30177682638168335, 0.29615013939993723, 0.2955388937677656, 0.29503979853221346, 0.2999779667173113, 0.30466657876968384, 0.3006064551217215, 0.2970396706036159, 0.293773421219417, 0.30107481139046804, 0.297827993120466, 0.30095367772238596, 0.29290212052209036, 0.3161260826247079, 0.30182179382869173, 0.3037212831633432, 0.3038075566291809, 0.3108859062194824], "val_accuracy": [0.6333333253860474, 0.7123333215713501, 0.7566666603088379, 0.778333306312561, 0.7806666493415833, 0.8019999861717224, 0.8029999732971191, 0.8233333230018616, 0.8173333406448364, 0.8323333263397217, 0.8366666436195374, 0.8259999752044678, 0.8429999947547913, 0.8486666679382324, 0.8506666421890259, 0.859000027179718, 0.8519999980926514, 0.8586666584014893, 0.862666666507721, 0.8526666760444641, 0.859333336353302, 0.8690000176429749, 0.8613333106040955, 0.8656666874885559, 0.8700000047683716, 0.8659999966621399, 0.8690000176429749, 0.8666666746139526, 0.8700000047683716, 0.8723333477973938, 0.875, 0.8733333349227905, 0.871666669845581, 0.8726666569709778, 0.8773333430290222, 0.8773333430290222, 0.878000020980835, 0.8796666860580444, 0.8799999952316284, 0.8806666731834412, 0.8790000081062317, 0.8793333172798157, 0.8799999952316284, 0.8759999871253967, 0.878333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 8, 2, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [22, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7497143149375916, "mapping_values": [1, 19, 19, 12, 7, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(alpha))), tf.math.add(alpha, tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))), tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.293699266478811, 2.23539135239112, 2.0971070262561025, 1.7667659515277065, 1.432504720439717, 1.3658728193156613, 1.1125448803781377, 0.9254702438200942, 0.9083028519945594, 0.8518480685377291, 0.8171070404355678, 0.8007695507206511, 0.7754077591664283, 0.7330560723016795, 0.7197790221767403, 0.7120916784526082, 0.6958130666010132, 0.6738953384992831, 0.6690025895404904, 0.6519508940542789, 0.6455395646839094, 0.6298466550754345, 0.6100683554666484, 0.5905108313361462, 0.5793926180030975, 0.5705829517968248, 0.5586737162322731, 0.5581866777048702, 0.5355193236201368, 0.5276523261982862, 0.5289051245625906, 0.5188371059113899, 0.510140718407304, 0.5000442809605753, 0.4924943735570861, 0.48243332439016245, 0.48077221540112963, 0.47703594427539564, 0.4555290019381489, 0.4519726046954069, 0.43918699193403876, 0.4351915874934357, 0.4363790425634214, 0.4250624020731665, 0.4206202719953507, 0.4103845344393119, 0.40691190883231876, 0.39761411587890616, 0.39263519048769524, 0.3818859334997198, 0.3840088308440097, 0.3748413008028695, 0.3670157868478591, 0.3705331423830252, 0.37218088535915483, 0.35555640655407234, 0.35879152259806507, 0.3507017293358681, 0.3419171920730894, 0.3440932910148856], "accuracy": [0.1146479994058609, 0.26376965641975403, 0.3770968019962311, 0.4345529079437256, 0.5000660419464111, 0.5502575635910034, 0.6206578016281128, 0.6547351479530334, 0.6798309087753296, 0.6845859289169312, 0.6868313550949097, 0.6931713223457336, 0.7187954187393188, 0.7140403985977173, 0.7135120630264282, 0.7273808121681213, 0.7347774505615234, 0.7404569983482361, 0.7407211661338806, 0.7503632307052612, 0.7548540234565735, 0.7585523724555969, 0.7651565074920654, 0.7778365015983582, 0.7833839654922485, 0.785629391670227, 0.7944789528846741, 0.7878747582435608, 0.7979130744934082, 0.8021397590637207, 0.8009510040283203, 0.8034605979919434, 0.8101968169212341, 0.81548011302948, 0.8230088353157043, 0.8231409192085266, 0.8236692547798157, 0.8248580098152161, 0.8264430165290833, 0.8296129703521729, 0.8366134166717529, 0.8387266993522644, 0.8372738361358643, 0.8385946154594421, 0.839519202709198, 0.8446704745292664, 0.8451988101005554, 0.8519350290298462, 0.8492933511734009, 0.8544445633888245, 0.8552370667457581, 0.8618412613868713, 0.8623695969581604, 0.8634262084960938, 0.8636903762817383, 0.8676528930664062, 0.8651432991027832, 0.8701624870300293, 0.8722757697105408, 0.8660678863525391], "val_loss": [1.9387110301426478, 1.8520640645708357, 1.6293882301875524, 1.1751557418278284, 0.861503175326756, 0.7428415332521711, 0.6678848777498517, 0.6833703517913818, 0.6613940681729998, 0.5925920009613037, 0.579728364944458, 0.577694194657462, 0.5508882829121181, 0.5547290699822562, 0.540706821850368, 0.5410444736480713, 0.5242548840386527, 0.5160143886293683, 0.5012364557811192, 0.49666716371263775, 0.48333585262298584, 0.47487601212092806, 0.46581242765699116, 0.4548852613994053, 0.44835358006613596, 0.43917010511670795, 0.43524657828467234, 0.4329255393573216, 0.4161927274295262, 0.4150104182107108, 0.4091928005218506, 0.40249026673180716, 0.40179541281291414, 0.4008323209626334, 0.3965380958148411, 0.3887080294745309, 0.3838203889983041, 0.38093591587884085, 0.3755605476243155, 0.37037013258252827, 0.36794835329055786, 0.3646126559802464, 0.3589350666318621, 0.357377861227308, 0.35555972371782574, 0.35148854766573223, 0.3450151171003069, 0.3421212434768677, 0.34017856631960186, 0.34075197151729036, 0.3427290490695408, 0.33708992174693514, 0.3330859967640468, 0.3313004629952567, 0.3278224893978664, 0.3290765626089914, 0.3325849005154201, 0.32852138791765484, 0.32750883272715975, 0.32678453411374775], "val_accuracy": [0.3016666769981384, 0.4176666736602783, 0.48366665840148926, 0.574999988079071, 0.6726666688919067, 0.7056666612625122, 0.7256666421890259, 0.7336666584014893, 0.7263333201408386, 0.7403333187103271, 0.7369999885559082, 0.7423333525657654, 0.753333330154419, 0.7409999966621399, 0.7583333253860474, 0.7523333430290222, 0.7666666507720947, 0.7649999856948853, 0.7773333191871643, 0.7743333578109741, 0.781333327293396, 0.7839999794960022, 0.7953333258628845, 0.79666668176651, 0.796999990940094, 0.8023333549499512, 0.8133333325386047, 0.8100000023841858, 0.8146666884422302, 0.8176666498184204, 0.8163333535194397, 0.8226666450500488, 0.824999988079071, 0.8253333568572998, 0.828000009059906, 0.828000009059906, 0.8333333134651184, 0.8376666903495789, 0.8379999995231628, 0.8399999737739563, 0.8386666774749756, 0.8423333168029785, 0.8446666598320007, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.859666645526886, 0.8583333492279053, 0.859333336353302, 0.859666645526886, 0.859000027179718, 0.8619999885559082, 0.862333357334137, 0.862333357334137, 0.8643333315849304, 0.8616666793823242, 0.862666666507721, 0.8629999756813049, 0.8633333444595337, 0.8629999756813049]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 6, 2, 9, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 1, 1, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [13, 84, 6], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 3, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7217142581939697, "mapping_values": [1, 40, 40, 25, 15, 4, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(alpha)))))), tf.math.add(alpha, alpha)))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301392053112362, 2.2907823648403633, 2.2727299071321903, 2.2418771040453778, 2.2034109890531823, 2.1432710244686786, 2.0550332213625886, 1.9063698524938142, 1.7210122401514987, 1.55516428563888, 1.4487169575713268, 1.4190010020383643, 1.3207196220981918, 1.2015893884921323, 1.102631978055883, 0.972861389080295, 0.9448972882343998, 0.9118987554808523, 0.9062421323837085, 0.8910431711035414, 0.8644605183708449, 0.8561816558531168, 0.8490147394290642, 0.8280603362742102, 0.8272159780336172], "accuracy": [0.09470347315073013, 0.12217672914266586, 0.17382116615772247, 0.25016510486602783, 0.30762118101119995, 0.3559635579586029, 0.3763043284416199, 0.41223087906837463, 0.4377228915691376, 0.4617619812488556, 0.49570730328559875, 0.5119535326957703, 0.5425967574119568, 0.5879011750221252, 0.611411988735199, 0.6386210322380066, 0.6361114978790283, 0.6618676781654358, 0.6649055480957031, 0.6757363677024841, 0.6767930388450623, 0.6811517477035522, 0.6847180128097534, 0.689869225025177, 0.6877558827400208], "val_loss": [1.9654788970947266, 1.950484071459089, 1.9269704818725586, 1.8947914668491908, 1.8497229303632463, 1.7792490550449915, 1.6624408790043421, 1.475846426827567, 1.2395355360848563, 1.0304508890424455, 0.8897705759320941, 0.840985928262983, 0.7693689550672259, 0.7642476899283273, 0.7026753425598145, 0.6891213314873832, 0.6886240754808698, 0.6827507529939923, 0.6658511332103184, 0.6328285081045968, 0.616923315184457, 0.6100192240306309, 0.6013823747634888, 0.5929191623415265, 0.5846767595836094], "val_accuracy": [0.07233333587646484, 0.21766667068004608, 0.3476666808128357, 0.39100000262260437, 0.41600000858306885, 0.45133334398269653, 0.47733333706855774, 0.5173333287239075, 0.5713333487510681, 0.6203333139419556, 0.6683333516120911, 0.6453333497047424, 0.6909999847412109, 0.6959999799728394, 0.7066666483879089, 0.6976666450500488, 0.6949999928474426, 0.7176666855812073, 0.7196666598320007, 0.731333315372467, 0.7289999723434448, 0.7283333539962769, 0.7250000238418579, 0.7279999852180481, 0.7300000190734863]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [8, 1, 0, 2, 6, 0, 0, 0, 0, 5, 2, 8, 4, 1], [2, 2, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [13, 84, 6], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [6, 4, 7, 2, 6, 5, 0, 9], [4, 3, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7217142581939697, "mapping_values": [1, 9, 9, 5, 4, 0, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301392053112362, 2.2907823648403633, 2.2727299251135675, 2.241877086064, 2.2034110205442112, 2.1432710739410847, 2.055033320307401, 1.9063701516585878, 1.7210122806332162, 1.5551649603656632, 1.448717753884972, 1.4189988226387338, 1.3207354723202664, 1.2015818652223682, 1.102645934155557, 0.9728690645855652, 0.9448931467389827, 0.9119055410417757, 0.9062899843560958, 0.8911089434237638, 0.864454469463813, 0.8562035714520313, 0.8490108281330677, 0.828138261029686, 0.8271873238741398], "accuracy": [0.09470347315073013, 0.12217672914266586, 0.17382116615772247, 0.25016510486602783, 0.30762118101119995, 0.3559635579586029, 0.3763043284416199, 0.41223087906837463, 0.4377228915691376, 0.4617619812488556, 0.49570730328559875, 0.5119535326957703, 0.542728841304779, 0.5879011750221252, 0.6112799048423767, 0.6386210322380066, 0.6361114978790283, 0.6617355942726135, 0.6647734642028809, 0.6754721999168396, 0.6769251227378845, 0.6806234121322632, 0.6845859289169312, 0.6900013089179993, 0.6881521344184875], "val_loss": [1.9654788970947266, 1.950484071459089, 1.9269704818725586, 1.8947913987295968, 1.8497228622436523, 1.7792490550449915, 1.6624413558415003, 1.475846460887364, 1.239534786769322, 1.030449526650565, 0.8897732325962612, 0.841002242905753, 0.7693679673331124, 0.7642493929181781, 0.7026973451886859, 0.6891249929155622, 0.6886124781199864, 0.6827688046864101, 0.6659592049462455, 0.6328720194952828, 0.6169747284480503, 0.610055821282523, 0.6014459984643119, 0.592944724219186, 0.5847142934799194], "val_accuracy": [0.07233333587646484, 0.21766667068004608, 0.3476666808128357, 0.39100000262260437, 0.41600000858306885, 0.45133334398269653, 0.47733333706855774, 0.5173333287239075, 0.5713333487510681, 0.6203333139419556, 0.6683333516120911, 0.6453333497047424, 0.6909999847412109, 0.6959999799728394, 0.7066666483879089, 0.6976666450500488, 0.6953333616256714, 0.7173333168029785, 0.7193333506584167, 0.7319999933242798, 0.7283333539962769, 0.7283333539962769, 0.7250000238418579, 0.7283333539962769, 0.7300000190734863]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [9, 2, 5, 3, 2, 1, 0, 0, 0, 2, 6, 8, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 1, 0, 0, 0, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.35600000619888306, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.610208421918017, 2.4253113868450367, 2.3293772873042706, 2.4514888182859127, 2.2467840828238668, 2.3041445593934067, 2.302875940684141], "accuracy": [0.18253862857818604, 0.14172500371932983, 0.2024831622838974, 0.1822744756937027, 0.1644432693719864, 0.09774138033390045, 0.18095363676548004], "val_loss": [2.737700734819685, 2.0589165006365096, 1.9723629270281111, 1.9603767395019531, 1.9746026311601912, 1.9725563185555595, 1.9824540274483817], "val_accuracy": [0.2680000066757202, 0.3296666741371155, 0.10366666316986084, 0.19099999964237213, 0.1003333330154419, 0.1120000034570694, 0.15466666221618652]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [3, 2, 6, 3, 2, 0, 0, 0, 0, 2, 6, 8, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 3, 0, 0, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 36, 13, 57, 60, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [91, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9, 9], [4, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.3051428496837616, "mapping_values": [1, 9, 9, 4, 5, 3, 3, 3, 1, 2, 1, 12, 10, 9, 1, 2, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))), sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.6098552679483364, 2.4388176743002647, 6.189450839129201, 2.4102071465250523, 2.3066072756226004, 2.3048372124132936, 2.3032324160441213], "accuracy": [0.1838594675064087, 0.11979923397302628, 0.19852067530155182, 0.0936468094587326, 0.09628847241401672, 0.09694888442754745, 0.09655263274908066], "val_loss": [2.5454786164419994, 1.8453173637390137, 2.2759933471679688, 1.9780468940734863, 1.9747321946280343, 1.9740394864763533, 1.9736880574907576], "val_accuracy": [0.20000000298023224, 0.2029999941587448, 0.09833333641290665, 0.1003333330154419, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 2, 6, 3, 2, 5, 0, 0, 0, 5, 2, 8, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [97, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 2, 3, 3, 1, 2, 1, 10, 8, 5, 3, 1, 5, 2, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), sigma)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08902391046285629, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 2, 0, 0, 2, 0, 2, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 3, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3031109801498872, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 2, 0, 0, 2, 8, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 1, 7, 2, 8, 5, 0, 9], [2, 4, 0, 3], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 10, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))))))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3031890764842338, 2.30265385092777, 2.302657942903544, 2.3026542920855926, 2.302653798999063, 2.3027238981551528], "accuracy": [0.09179764986038208, 0.09787346422672272, 0.09589222073554993, 0.09985470771789551, 0.09100515395402908, 0.09998679161071777], "val_loss": [1.973649161202567, 1.973646572657994, 1.9736460958208357, 1.973663602556501, 1.9736487524850028, 1.9736553600856237], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.09833333641290665, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [3, 1, 6, 3, 2, 2, 0, 0, 0, 5, 2, 8, 4, 1], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [4, 3, 3, 3, 0], [15, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [1, 1, 0, 1, 1], [4, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30690721567391, 2.3477514281705574, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08281600475311279, 0.05798441544175148, 0.08136309683322906, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.985097885131836, 2.066401277269636, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.009333333000540733, 0.03533333167433739, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 1, 0, 3, 3, 8, 4, 1, 5, 0, 8, 7, 6, 9], [2, 3, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 68, 13, 57, 60, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 1, 3, 3, 0], [91, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 1, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 4, 5, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3031109801498872, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [3, 2, 6, 3, 8, 6, 8, 0, 0, 2, 6, 8, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 2, 3, 3, 6, 4, 8, 6, 7, 1, 2, 6, 0, 7], [0, 3, 0, 1, 0, 2, 2, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 1, 0, 3, 3, 2, 2], [27, 68, 13, 57, 60, 59, 92, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [5, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 3, 2, 2, 1, 1, 1, 10, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.sqrt(alpha))), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3031109801498872, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 2, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [76, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 4, 7, 3, 8, 5, 4, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 13, 9, 7, 2, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [51224892402.54267, 7741504260562.623, 132873335436100.94, 914575668714049.5, 4081973504335819.0, 1.3289575853829122e+16], "accuracy": [0.09576013684272766, 0.10210011899471283, 0.09338264167308807, 0.09708096832036972, 0.0956280529499054, 0.1002509593963623], "val_loss": [418234536521.1429, 22546838866212.57, 241995359303387.44, 1319383811864283.5, 4940665623262939.0, 1.4562850507699932e+16], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 2, 6, 3, 4, 0, 0, 0, 0, 2, 6, 8, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 1, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3375.626231229316, 2.6833601789294357, 2.4640864272552823, 2.5643185804611686, 2.654507563020008, 2.4836156159155185, 2.608410068837454, 2.596766984284814, 2.530864230456873, 2.596571865523921, 2.5946402618394093, 2.6006410068382975], "accuracy": [0.09681680053472519, 0.09972262382507324, 0.10355303436517715, 0.09866596013307571, 0.09998679161071777, 0.10355303436517715, 0.09906221181154251, 0.09998679161071777, 0.09866596013307571, 0.10210011899471283, 0.09959053993225098, 0.10077928751707077], "val_loss": [2.3143578256879533, 2.272596631731306, 2.336599281855992, 2.1794939722333635, 2.2997238295418874, 2.231801305498396, 2.114264556339809, 2.280008179800851, 2.1391030039106096, 2.0638173648289273, 2.3122096742902483, 2.1006689071655273], "val_accuracy": [0.09933333098888397, 0.1003333330154419, 0.09833333641290665, 0.10000000149011612, 0.1003333330154419, 0.09833333641290665, 0.10133333504199982, 0.1003333330154419, 0.09833333641290665, 0.10133333504199982, 0.1003333330154419, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [8, 1, 0, 2, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [2, 2, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 68, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 7, 9, 0, 1, 9], [3, 0, 3, 3, 0], [13, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [9, 4, 7, 1, 8, 5, 0, 9], [2, 3, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.197946490059856e+25, 3378.288299693565, 849386.7284333311, 216826602.7003038, 56033470360.666756, 14348009807496.537], "accuracy": [0.08677849918603897, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [102.14596993582589, 27715.882254464286, 7098412.142857143, 1817198153.142857, 465202727204.5714, 119091898164370.28], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 2, 2, 6, 0, 3, 0, 6, 5, 2, 8, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 43, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [6, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [13, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 4, 1, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.0754285678267479, "mapping_values": [1, 21, 21, 12, 9, 3, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))))), grad)))), tf.math.add(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2264765152339851.5, 8.954408565592376e+16, 6.781498332067505e+17, 2.605185348788642e+18, 7.259694651125622e+18, 1.599994744535334e+19, 3.1784743272138646e+19], "accuracy": [0.08677849918603897, 0.09100515395402908, 0.09245806187391281, 0.09126931428909302, 0.08572183549404144, 0.09192973375320435, 0.09126931428909302], "val_loss": [1.2310171452852516e+16, 1.9673815327006486e+17, 9.95614591996433e+17, 3.1455190700887526e+18, 7.678597153955737e+18, 1.5920995597478865e+19, 2.9491917031981863e+19], "val_accuracy": [0.05766666680574417, 0.05833333358168602, 0.05833333358168602, 0.05833333358168602, 0.05833333358168602, 0.05833333358168602, 0.05833333358168602]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 9, 2, 0, 0, 0, 0, 3, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 2, 0, 1, 1, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [71, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [6, 7, 9, 0, 1, 9], [2, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.30293917876382, 2.3023762385827236, 2.3042588770239973, 2.302171357854829, 2.3035068309475575, 2.3014960056282763], "accuracy": [0.09074098616838455, 0.0944393053650856, 0.08849557489156723, 0.0882314071059227, 0.08691058307886124, 0.09245806187391281], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]