[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8471428751945496, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0334960280502665, 1.0996004287057533, 0.7756211879845104, 0.6905587777139142, 0.6404661290586711, 0.5974900670149826, 0.5472276395794706, 0.5281818812124293, 0.5041276386794696, 0.4776942693735268, 0.4781315041933046, 0.4496826770566694, 0.42697568015179316, 0.40517292952398976, 0.3978538393360229, 0.38276849157459714, 0.37056023475673805, 0.3695841082460955, 0.35042761294376645, 0.34668641215727364, 0.34107080411366214, 0.33773923278043866, 0.3269949544690084, 0.3141330602996936, 0.3135702832263805, 0.30023931546879484, 0.2879681810018267, 0.28714128727642707, 0.27807242182881653, 0.270263426636645, 0.26369174257985606, 0.2518112949093083, 0.23995445831466614, 0.23938956635306305, 0.23796907800252584, 0.2207568997047077, 0.22535267914716106], "accuracy": [0.31026285886764526, 0.6151102781295776, 0.7120591998100281, 0.7420420050621033, 0.754589855670929, 0.776251494884491, 0.7965922355651855, 0.8054417967796326, 0.8156121969223022, 0.8252542614936829, 0.8220842480659485, 0.832650899887085, 0.8421608805656433, 0.8496896028518677, 0.8562937378883362, 0.8590674996376038, 0.8634262084960938, 0.8644828796386719, 0.8684453964233398, 0.872407853603363, 0.8706908226013184, 0.8770307898521423, 0.8784837126731873, 0.883238673210144, 0.8811253309249878, 0.889050304889679, 0.8853520154953003, 0.8903711438179016, 0.8963148593902588, 0.8993527889251709, 0.9001452922821045, 0.90423983335495, 0.9099194407463074, 0.9083344340324402, 0.908730685710907, 0.9157310724258423, 0.9141460657119751], "val_loss": [0.9026979378291539, 0.6213163478033883, 0.5722756556102208, 0.5237376519611904, 0.4811185428074428, 0.45471528598240446, 0.42198091745376587, 0.4106916104044233, 0.399493328162602, 0.3865460327693394, 0.3732696941920689, 0.3571274535996573, 0.35107065950121197, 0.33958371196474346, 0.33521413803100586, 0.32538918937955585, 0.32674055440085276, 0.3155910883631025, 0.32570459161485943, 0.3232496125357492, 0.3123779892921448, 0.308988767010825, 0.30285089356558664, 0.3131309577396938, 0.30872965710503714, 0.3005876285689218, 0.3012089729309082, 0.30656772000449045, 0.2946696366582598, 0.2931862473487854, 0.2894937992095947, 0.2867635658809117, 0.297223014490945, 0.2893776978765215, 0.28707356112343924, 0.2927967054503305, 0.29622691018240793], "val_accuracy": [0.640333354473114, 0.731333315372467, 0.7456666827201843, 0.7606666684150696, 0.7883333563804626, 0.7929999828338623, 0.8066666722297668, 0.8253333568572998, 0.8209999799728394, 0.82833331823349, 0.8389999866485596, 0.8443333506584167, 0.8453333377838135, 0.8526666760444641, 0.8550000190734863, 0.859000027179718, 0.8583333492279053, 0.8629999756813049, 0.8573333621025085, 0.859333336353302, 0.8610000014305115, 0.8600000143051147, 0.8666666746139526, 0.856333315372467, 0.8693333268165588, 0.8659999966621399, 0.8700000047683716, 0.8690000176429749, 0.8706666827201843, 0.8723333477973938, 0.875333309173584, 0.8786666393280029, 0.878333330154419, 0.8766666650772095, 0.8763333559036255, 0.8776666522026062, 0.878000020980835]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 1, 6, 0, 8, 3, 9, 8, 0, 5, 9, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [67, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8417142629623413, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(alpha, beta))", "other_info": {"loss": [2.0244402571314, 1.1140593863308248, 0.7864137769233533, 0.696165544891307, 0.6419828375568951, 0.5941381327716383, 0.5389994552831104, 0.5198999770155924, 0.49238077408334346, 0.46495098110990535, 0.4650737797311741, 0.4451651404231783, 0.41971426375585225, 0.3957494392355341, 0.386398515330802, 0.3737608594523445, 0.3646990075764513, 0.36168851741489844, 0.34230299251285196, 0.33844156633152733, 0.3335597798368005, 0.3275693497558894, 0.3156809155195617, 0.3078296174738212, 0.30447351031488573, 0.2875152186726409, 0.2760727732739885, 0.2686599693782042, 0.26943606214201477, 0.2508992252667441, 0.25491400763122807, 0.24032019180486924, 0.22937877076869753, 0.22811975929723236, 0.22825026685346655, 0.2140670935979467, 0.21266540398435224], "accuracy": [0.3125082552433014, 0.6132611036300659, 0.7117950320243835, 0.7386078238487244, 0.7573636174201965, 0.7779685854911804, 0.7994980812072754, 0.8057059645652771, 0.8240655064582825, 0.830669641494751, 0.828292191028595, 0.8343679904937744, 0.8488970994949341, 0.8569541573524475, 0.8585391640663147, 0.8644828796386719, 0.8625016212463379, 0.8661999702453613, 0.8746532797813416, 0.8794082403182983, 0.8751816153526306, 0.8791441321372986, 0.8812574148178101, 0.8853520154953003, 0.884691596031189, 0.8919561505317688, 0.8930128216743469, 0.9022586345672607, 0.9010698795318604, 0.9054285883903503, 0.9033153057098389, 0.9055606722831726, 0.9121648669242859, 0.9101836085319519, 0.9153348207473755, 0.919561505317688, 0.9192973375320435], "val_loss": [0.888613394328526, 0.6275356326784406, 0.5828030450003487, 0.5334304741450718, 0.48363622597285677, 0.45175927025931223, 0.4215611645153591, 0.4038993035043989, 0.39095222098486765, 0.37763545342854093, 0.37649406705583843, 0.35181608370372225, 0.3460160919598171, 0.3357566850525992, 0.33220480169568745, 0.32318622725350515, 0.3261256217956543, 0.31698890243257793, 0.31970828771591187, 0.317007098879133, 0.30315560953957693, 0.302608106817518, 0.296307521206992, 0.30492126090185984, 0.30547285079956055, 0.2911530988556998, 0.2900082468986511, 0.29554506710597445, 0.2956510697092329, 0.2918451172964914, 0.2869977355003357, 0.2872373376573835, 0.29703875950404574, 0.29613013778414043, 0.2940466318811689, 0.2918013760021755, 0.294879104409899], "val_accuracy": [0.6393333077430725, 0.7306666374206543, 0.7423333525657654, 0.7576666474342346, 0.7836666703224182, 0.7933333516120911, 0.8080000281333923, 0.8263333439826965, 0.8266666531562805, 0.8346666693687439, 0.8373333215713501, 0.8450000286102295, 0.8500000238418579, 0.8516666889190674, 0.8516666889190674, 0.859666645526886, 0.859666645526886, 0.8629999756813049, 0.8653333187103271, 0.8600000143051147, 0.8650000095367432, 0.862666666507721, 0.8686666488647461, 0.8616666793823242, 0.8619999885559082, 0.871666669845581, 0.875, 0.8713333606719971, 0.8740000128746033, 0.8743333220481873, 0.8766666650772095, 0.8830000162124634, 0.8809999823570251, 0.875333309173584, 0.8766666650772095, 0.8796666860580444, 0.8799999952316284]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 29, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.659428596496582, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 5, 3, 2, 1, 0, 7, 4, 3, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, alpha)), beta))", "other_info": {"loss": [2.260074219919703, 1.8157215275233527, 2147534615651.0413, NaN, NaN, NaN, NaN], "accuracy": [0.1880861222743988, 0.428609162569046, 0.3681151866912842, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.806107997894287, 0.9337724276951381, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.4350000023841858, 0.6613333225250244, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [9, 5, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [29, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [6, 32, 85]], "fitness": -0.6505714058876038, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [2.3032957881496188, 2.301661917940028, 2.3030290692757305, 2.3040978984117286, 2.302495541369139, 2.3021912943528013, 2.3032942135037056, 2.3017941066979763, 2.3012476711225327, 2.3024944586760774, 2.3002477399488215, 2.2998025101472863, 2.2997584507969533, 2.298194241860697, 2.3004843532417145, 2.29603412494274, 2.298618914979938, 2.296108901618793, 2.2960976016614354, 2.294813633091052, 2.2978051319381803, 2.2929935498464977, 2.292869654408441, 2.292387890982637, 2.292529530607714, 2.286700555346409, 2.292423842526729, 2.289275786218831, 2.2846769474406425, 2.2830601651135405, 2.278776686724702, 2.2717904336322428, 2.2754428275209992, 2.2633417247859886, 2.2524608322154136, 2.259147990790687, 2.2428499694356137, 2.2351243020111715, 2.2267698695268834, 2.2128463814586397, 2.2069026845683353, 2.189155538840112, 2.1470069590182965, 2.12793830766528, 2.063796268651325, 2.038958042588421, 1.9777735267033776, 1.9379683329743826, 1.923014871527128, 1.8719335738394822, 1.8778491819444947, 1.9780997335950161, 2.059937216255879, 2.0119216901247357, 2.036356998677141, 2.043802800494698, 2.036144398994229, 2.0830292954751606, 2.106281510968927, 2.1386868604784235, 2.1761419007869804, 2.2728820339941533, 2.3067779592660913, 2.398474683441648, 2.4024037041007222, 2.469160111761994, 2.5306710993152457, 2.6576542987831044, 2.724618318137271, 2.831042939078901, 2.8511355463634347, 3.0651787818147365, 3.117566432935246, 3.3828011591672866], "accuracy": [0.0874389111995697, 0.09509972482919693, 0.0878351628780365, 0.08717474341392517, 0.08809932321310043, 0.0874389111995697, 0.09192973375320435, 0.0886276587843895, 0.09417514503002167, 0.09325055778026581, 0.0952318087220192, 0.09325055778026581, 0.09232597798109055, 0.09919429570436478, 0.10196803510189056, 0.10936468094587326, 0.1026284471154213, 0.10513802617788315, 0.10777968913316727, 0.10579843819141388, 0.10487385839223862, 0.11491216719150543, 0.11002509295940399, 0.11279883980751038, 0.12032756209373474, 0.12534672021865845, 0.12257297337055206, 0.12217672914266586, 0.13195087015628815, 0.1344604343175888, 0.13736626505851746, 0.14661207795143127, 0.13921542465686798, 0.15110288560390472, 0.16431118547916412, 0.15519747138023376, 0.16642451286315918, 0.1752740740776062, 0.1760665625333786, 0.18372738361358643, 0.18716153502464294, 0.19931316375732422, 0.21754062175750732, 0.22665433585643768, 0.2584863305091858, 0.26918503642082214, 0.29837536811828613, 0.31765949726104736, 0.34486857056617737, 0.3625676929950714, 0.37670058012008667, 0.3757759928703308, 0.3731343150138855, 0.4037775695323944, 0.4006075859069824, 0.4111742079257965, 0.4169858694076538, 0.40549466013908386, 0.41804254055023193, 0.41209879517555237, 0.413419634103775, 0.42543917894363403, 0.4130233824253082, 0.41791045665740967, 0.4239862561225891, 0.4245145916938782, 0.43283581733703613, 0.42728832364082336, 0.42491084337234497, 0.41949543356895447, 0.42002376914024353, 0.40668338537216187, 0.4023246467113495, 0.38409721851348877], "val_loss": [1.9709994452340263, 1.9709995133536202, 1.9709962436131068, 1.970982210976737, 1.9709456307547433, 1.9708710397992815, 1.9707322801862444, 1.9705283301217216, 1.970205647604806, 1.9697555133274622, 1.9691732270377023, 1.9684730938502721, 1.9676745278494698, 1.9668566840035575, 1.9659842082432337, 1.9650346211024694, 1.9640528815133231, 1.9630313600812639, 1.9619731221880232, 1.9609107289995467, 1.9597814423697335, 1.9585158484322684, 1.9570742334638322, 1.955404281616211, 1.9534589903695243, 1.9512335232325964, 1.9487685476030623, 1.9458987372262138, 1.9424800872802734, 1.938389437539237, 1.933398927961077, 1.9271463666643416, 1.9195853642054967, 1.9107341766357422, 1.900174617767334, 1.8874733107430595, 1.8726050513131278, 1.8556849615914481, 1.835789339882987, 1.8113256863185339, 1.7799414225987025, 1.7379801613943917, 1.679676124027797, 1.602339744567871, 1.508434738431658, 1.4018573760986328, 1.306483507156372, 1.2401460579463415, 1.115769386291504, 1.0697241170065743, 1.0043108463287354, 1.0115289688110352, 0.9316906247820173, 0.9451276574816022, 0.928680385862078, 0.909226621900286, 0.9023685795920235, 0.9228803770882743, 0.9703527178083148, 0.9054727213723319, 0.8943125861031669, 0.8812502452305385, 0.8747570514678955, 0.9334166049957275, 0.8987793922424316, 0.8849666799817767, 0.929248537336077, 0.9636789390019008, 0.8888664245605469, 0.8908784900392804, 0.9730847903660366, 0.9077347687312535, 0.9378473077501569, 0.9873203209468296], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.03799999877810478, 0.03799999877810478, 0.038333334028720856, 0.03866666555404663, 0.03999999910593033, 0.03966666758060455, 0.039000000804662704, 0.03966666758060455, 0.04266666620969772, 0.04833333194255829, 0.05666666850447655, 0.06933332979679108, 0.07666666805744171, 0.0833333358168602, 0.09233333170413971, 0.09333333373069763, 0.09466666728258133, 0.09666666388511658, 0.0989999994635582, 0.10466666519641876, 0.10700000077486038, 0.11533333361148834, 0.1289999932050705, 0.1433333307504654, 0.1459999978542328, 0.1536666601896286, 0.1589999943971634, 0.1693333387374878, 0.18566666543483734, 0.20233333110809326, 0.21566666662693024, 0.22166666388511658, 0.23266667127609253, 0.22866666316986084, 0.22433333098888397, 0.2240000069141388, 0.22833333909511566, 0.23499999940395355, 0.25566667318344116, 0.296999990940094, 0.3696666657924652, 0.453000009059906, 0.5106666684150696, 0.5120000243186951, 0.5326666831970215, 0.5076666474342346, 0.5270000100135803, 0.5809999704360962, 0.5556666851043701, 0.5543333292007446, 0.5963333249092102, 0.593666672706604, 0.6263333559036255, 0.6039999723434448, 0.6196666955947876, 0.6286666393280029, 0.6173333525657654, 0.6213333606719971, 0.6286666393280029, 0.6293333172798157, 0.656000018119812, 0.6506666541099548, 0.6269999742507935, 0.652999997138977, 0.6443333625793457, 0.6566666960716248, 0.6650000214576721, 0.6496666669845581, 0.6453333497047424, 0.656333327293396, 0.6600000262260437, 0.6510000228881836]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 5, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [1, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 1, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033271030805933, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 29, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 79, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 1, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 1, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.square(alpha)))", "other_info": {"loss": [2.707962758914906, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3066.1140485491073, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 19, 13, 78, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [1, 0, 3, 3, 0], [7, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 4, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.negative(grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 29, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 4, 6, 6, 4, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), alpha)))), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3613107872991796, 1.4510842150196596e+33, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.041870296001434326, 0.054550256580114365, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2364522389003207, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.006000000052154064, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [44, 44, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 1, 0, 1, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 1, 2], [41, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 4, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), alpha)))), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033271030805933, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [2, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 1, 0, 1, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 1, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302983913754176, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 5, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 29, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [9, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [92, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 1, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [52752474187.51819, 7741182550977.919, 131162024839180.17, 935487941204508.8, 4096448394493960.5, 1.336999031604682e+16], "accuracy": [0.09787346422672272, 0.09721305221319199, 0.09628847241401672, 0.10130762308835983, 0.09906221181154251, 0.10117553919553757], "val_loss": [423962495268.5714, 22855216679204.57, 245306932480292.56, 1337352421113856.0, 5009451671992027.0, 1.4778065796801682e+16], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [4, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [17, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 3, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303221608134088, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 29, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 1, 6, 0, 8, 3, 9, 8, 0, 5, 9, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [67, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [17, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 1, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3033271030805933, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 29, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [50, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 4, 6, 0, 8, 9, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 7, 1, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [188.3406559084196, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04979526996612549, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [13352338.857142856, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.0868571400642395, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3031445858012796, 2.3008880591931016, 2.3016258963283973, 2.3023213552619333, 2.301303894512563, 2.3022452896580705, 2.3021185152471784, 2.301678140323081, 2.3026097547329334, 2.3026926253906663, 2.3027875949331578, 2.3030317038781827, 2.302828658258501, 2.3027782530564798, 2.30274609375655, 2.302450031006672, 2.3024397744730623, 2.3023970469728106], "accuracy": [0.08796724677085876, 0.09668471664190292, 0.08889182657003403, 0.09298639744520187, 0.09338264167308807, 0.09179764986038208, 0.09496764093637466, 0.09391097724437714, 0.09087307006120682, 0.09192973375320435, 0.08426892012357712, 0.09377889335155487, 0.09998679161071777, 0.10659094154834747, 0.10777968913316727, 0.11227050423622131, 0.10659094154834747, 0.10355303436517715], "val_loss": [1.970641817365374, 1.970111642565046, 1.970127718789237, 1.9709266253880091, 1.971435478755406, 1.972130639212472, 1.9723701477050781, 1.9726956912449427, 1.973153795514788, 1.9735841069902693, 1.973741054534912, 1.9737636702401298, 1.973763874598912, 1.9736603328159876, 1.9735918045043945, 1.9735616275242396, 1.973562581198556, 1.9735864911760603], "val_accuracy": [0.043666668236255646, 0.052000001072883606, 0.05666666850447655, 0.06499999761581421, 0.07333333045244217, 0.08233333379030228, 0.08900000154972076, 0.09266666322946548, 0.09700000286102295, 0.09366666525602341, 0.09566666930913925, 0.10733333230018616, 0.11299999803304672, 0.10633333027362823, 0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [6, 5, 6, 0, 3, 3, 9, 1, 0, 5, 2, 0, 5, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 55, 14, 17, 54, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 1, 0, 1, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.05342857167124748, "mapping_values": [1, 19, 19, 13, 6, 4, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))))), tf.math.negative(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))))), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, alpha)", "other_info": {"loss": [2.3032653825221012, 2.3015487734447335, 2.3028398727806976, 2.3038016032580577, 2.3021415387477226, 2.301919611390587, 2.30292511748411, 2.3015552276885427, 2.301378336879855, 2.3027502797960273, 2.3008326002792865, 2.301465716171164, 2.3013387469882587, 2.3009658396724286, 2.30323241906726, 2.300580826795742, 2.302447204371926, 2.3008837913084403, 2.3014457762406693, 2.3008585004853126, 2.3033278808460227, 2.301261889888878, 2.300493086050404, 2.3012321886212015, 2.3019155652342596, 2.299193652960067, 2.3020171091588355, 2.301768832628076, 2.3004232208096766, 2.300965497837311, 2.301745970770982, 2.3002410687318235, 2.3017846427620707, 2.3009427007257726, 2.3005923457732056, 2.302637282237873, 2.3015137772754732], "accuracy": [0.08770307898521423, 0.09576013684272766, 0.08836349099874496, 0.0874389111995697, 0.08981640636920929, 0.0882314071059227, 0.09285431355237961, 0.08955223858356476, 0.09549596905708313, 0.09179764986038208, 0.09430722147226334, 0.08968432247638702, 0.08849557489156723, 0.09430722147226334, 0.09232597798109055, 0.09879804402589798, 0.08942015469074249, 0.09219389408826828, 0.09893012791872025, 0.09272222965955734, 0.08492933213710785, 0.09153348207473755, 0.09126931428909302, 0.09192973375320435, 0.09232597798109055, 0.09628847241401672, 0.08968432247638702, 0.09470347315073013, 0.09457138925790787, 0.08836349099874496, 0.09087307006120682, 0.09840179979801178, 0.09206181764602661, 0.09259014576673508, 0.1002509593963623, 0.09113723784685135, 0.09259014576673508], "val_loss": [1.970928124019078, 1.9708753313337053, 1.9708239010402135, 1.9707619122096471, 1.970705849783761, 1.9706762177603585, 1.9706171580723353, 1.9705687931605749, 1.9705489022391183, 1.9704962457929338, 1.9704591206141882, 1.9704318727765764, 1.9703775133405412, 1.9703531946454729, 1.9703033311026437, 1.9702934537615096, 1.9702680451529366, 1.9702452250889368, 1.970221928187779, 1.9702119146074568, 1.9701976094927107, 1.9701788766043526, 1.9701652526855469, 1.970160688672747, 1.9701412064688546, 1.9701343945094518, 1.970109190259661, 1.9700913429260254, 1.9700891630990165, 1.9700761522565569, 1.9700688634599959, 1.970057419368199, 1.9700416156223841, 1.9700302396501814, 1.9700405257088798, 1.9700447491237096, 1.970052923474993], "val_accuracy": [0.03866666555404663, 0.039000000804662704, 0.03999999910593033, 0.041333332657814026, 0.04233333468437195, 0.04333333298563957, 0.04333333298563957, 0.04399999976158142, 0.043666668236255646, 0.044333335012197495, 0.044333335012197495, 0.04466666653752327, 0.045666664838790894, 0.046666666865348816, 0.047333333641290665, 0.04766666516661644, 0.04800000041723251, 0.04833333194255829, 0.04933333396911621, 0.050333332270383835, 0.05166666582226753, 0.052000001072883606, 0.0533333346247673, 0.0533333346247673, 0.05299999937415123, 0.0533333346247673, 0.0533333346247673, 0.05400000140070915, 0.05433333292603493, 0.05533333495259285, 0.055666666477918625, 0.0560000017285347, 0.0560000017285347, 0.055666666477918625, 0.055666666477918625, 0.0560000017285347, 0.055666666477918625]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [67, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [17, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.05314285680651665, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2508186276223283.0, 1.04700671920471e+17, 7.717917549362258e+17, 3.121952085255803e+18, 8.466978780374048e+18, 1.8658861931005735e+19], "accuracy": [0.09219389408826828, 0.09417514503002167, 0.0936468094587326, 0.09708096832036972, 0.09470347315073013, 0.0952318087220192], "val_loss": [9329044469767022.0, 1.4915651760868557e+17, 7.549437287431256e+17, 2.385470976418494e+18, 5.823370136615274e+18, 1.2074948846422065e+19], "val_accuracy": [0.06233333423733711, 0.06199999898672104, 0.061666667461395264, 0.061666667461395264, 0.061666667461395264, 0.061666667461395264]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 1, 6, 0, 8, 3, 9, 8, 0, 5, 9, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [67, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [17, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 0, 1, 0, 1, 1, 1], [0, 7, 9, 2, 9, 3, 9], [2, 1, 2], [6, 32, 85]], "fitness": -0.011428571306169033, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3067885596502444, 2.329024866823633, 2.3852053808419615, 2.5007039830511775, 2.8057177403756985, 4.378894895405707], "accuracy": [0.08030643314123154, 0.05045568570494652, 0.01822744682431221, 0.009906221181154251, 0.005415400955826044, 0.00977413821965456], "val_loss": [1.9835371289934431, 2.020444393157959, 2.0899522645132884, 2.24149683543614, 2.768195561000279, 6.723918914794922], "val_accuracy": [0.012666666880249977, 0.006000000052154064, 0.004666666500270367, 0.004333333112299442, 0.00566666666418314, 0.012666666880249977]}}]