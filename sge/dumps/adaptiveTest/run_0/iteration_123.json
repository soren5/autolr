[{"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [5, 0, 0, 2], [36, 55, 6], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.8448571562767029, "mapping_values": [1, 4, 4, 2, 2, 2, 9, 9, 5, 4, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.070558606657165, 1.1202125935868785, 0.787229510472199, 0.7049760948618122, 0.6459022785269148, 0.5952243834375752, 0.5543341234281094, 0.5327074240188022, 0.5048896319019701, 0.4813689965227765, 0.46025785063755686, 0.4423686230163753, 0.4282168768392562, 0.41226857323546406, 0.40760324156720484, 0.3892635733121422, 0.3787159952922441, 0.36373131685505106, 0.3598772231708381, 0.35519032761909236, 0.33122224835136455, 0.3308769498503109, 0.32586297133831443, 0.32302425079231706, 0.3063622761270263, 0.303848511574212, 0.28775681257877744, 0.29302920292649115, 0.27893219207413616, 0.2724590808755418, 0.26692226978655836, 0.25974692011616407, 0.26120569411207106, 0.2478291325722829, 0.24633170400966728, 0.24091009575818997, 0.2363795559474931], "accuracy": [0.3019416332244873, 0.6104874014854431, 0.7079645991325378, 0.7371549606323242, 0.7557786107063293, 0.774270236492157, 0.789459764957428, 0.8026680946350098, 0.8124422430992126, 0.8240655064582825, 0.8273676037788391, 0.8354246616363525, 0.8451988101005554, 0.8495575189590454, 0.8516708612442017, 0.8594637513160706, 0.8593316674232483, 0.8647470474243164, 0.8689737319946289, 0.870030403137207, 0.8775591254234314, 0.8753136992454529, 0.8800686597824097, 0.8800686597824097, 0.8849557638168335, 0.8860124349594116, 0.8931449055671692, 0.8901069760322571, 0.8931449055671692, 0.9008057117462158, 0.9000132083892822, 0.9033153057098389, 0.9034473896026611, 0.9015982151031494, 0.9049002528190613, 0.9083344340324402, 0.9108440279960632], "val_loss": [0.9804853030613491, 0.6308409486498151, 0.5601327248982021, 0.528672627040318, 0.48897978237697054, 0.4485480955668858, 0.4396540778023856, 0.41788876908166067, 0.4045456733022417, 0.3800582545144217, 0.3723393508366176, 0.3623063734599522, 0.3535189798900059, 0.3423070992742266, 0.34101822546550203, 0.35111472436359953, 0.33572213990347727, 0.3273374267986843, 0.32898942061832975, 0.31735123906816753, 0.31892962966646465, 0.30468677622931345, 0.3160234774862017, 0.3146781751087734, 0.3090842536517552, 0.305011510848999, 0.30474434580121723, 0.29615544421332224, 0.29541713850838797, 0.2981277448790414, 0.29712140560150146, 0.28851345607212614, 0.2932661771774292, 0.2921724149159023, 0.29411570514951435, 0.30831638404301237, 0.2853577307292393], "val_accuracy": [0.6263333559036255, 0.7233333587646484, 0.7526666522026062, 0.7663333415985107, 0.7803333401679993, 0.7903333306312561, 0.7993333339691162, 0.815666675567627, 0.8159999847412109, 0.8399999737739563, 0.8383333086967468, 0.8386666774749756, 0.8410000205039978, 0.8479999899864197, 0.8489999771118164, 0.8416666388511658, 0.8543333411216736, 0.8550000190734863, 0.859000027179718, 0.8629999756813049, 0.859333336353302, 0.8656666874885559, 0.8610000014305115, 0.8650000095367432, 0.8676666617393494, 0.8650000095367432, 0.8646666407585144, 0.8676666617393494, 0.8703333139419556, 0.871999979019165, 0.8709999918937683, 0.8763333559036255, 0.8763333559036255, 0.8743333220481873, 0.8700000047683716, 0.8703333139419556, 0.8763333559036255]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [30, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0], [6, 7, 7, 9, 1, 9], [4, 0, 4, 2], [26, 55, 83], [0, 1, 0], [1], [8], [5], [68], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.7879999876022339, "mapping_values": [1, 15, 15, 10, 5, 4, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3882299637860624, 2.142861201479419, 2.0514867570280257, 2.7578949865931452, 2.103315071848012, 1.9300642885221482, 1.9912942612506552, 1.6770679947250098, 1.9162544137876363, 1.4522574640394217, 1.5370875205409178, 1.6373042732638579, 1.4564061209100851, 1.2268326634413467, 1.1680779022830998, 1.1092110075073283, 1.1347900057323952, 0.9802506875210844, 0.921920427588298, 0.9179518131406127, 0.7893074960709248, 0.8901760738917219, 0.8023706406114786, 0.7540173791639242, 0.7636269771065521, 0.7221220248820303, 0.7183656836103974, 0.7211539397512398, 0.6848611995575844, 0.714042910841777, 0.6830577972212079, 0.680379576663205, 0.6403383521702406, 0.6280496727993554, 0.6489630394277319, 0.5870590567147932, 0.6160515749758386, 0.6012393524854285, 0.6029271828169364, 0.5748218115231679, 0.594186713123649, 0.5744183467379524, 0.5659002193354691, 0.6040465290189624, 0.546988852201058, 0.5850256567838374, 0.5331250154000579, 0.5413852578235451, 0.5287487070400796, 0.5089529746118208, 0.532901607515821, 0.5379235825368899, 0.5001632821574077, 0.5024565450582428, 0.5091535033070889], "accuracy": [0.2075023055076599, 0.25742965936660767, 0.310130774974823, 0.2366926372051239, 0.2845066785812378, 0.3763043284416199, 0.3358869254589081, 0.4558182656764984, 0.3160744905471802, 0.5021793842315674, 0.47629112005233765, 0.4558182656764984, 0.4858010709285736, 0.5605600476264954, 0.5893540978431702, 0.6067890524864197, 0.5861841440200806, 0.6482630968093872, 0.6627922058105469, 0.6559239029884338, 0.7112666964530945, 0.6761326193809509, 0.6968696117401123, 0.7177387475967407, 0.7176066637039185, 0.7275128960609436, 0.7331924438476562, 0.7259278893470764, 0.7396644949913025, 0.7320036888122559, 0.7384757399559021, 0.7457403540611267, 0.7585523724555969, 0.7643640041351318, 0.7594769597053528, 0.7825914621353149, 0.7695152759552002, 0.7751948237419128, 0.7734777331352234, 0.7803460359573364, 0.7753269076347351, 0.7843085527420044, 0.7926297783851624, 0.7781006693840027, 0.7887993454933167, 0.77677983045578, 0.8030643463134766, 0.7940827012062073, 0.8026680946350098, 0.807158887386322, 0.7975168228149414, 0.8016114234924316, 0.8149517774581909, 0.8095363974571228, 0.8087438941001892], "val_loss": [1.549926485334124, 1.9521960530962263, 1.8725270543779646, 1.5538746629442488, 1.7135342529841833, 1.2524774074554443, 1.5175971984863281, 1.9752093042646135, 1.0719782624925887, 0.9408044815063477, 1.1154919351850237, 1.0715371200016566, 0.8822901248931885, 0.8182728631155831, 0.7516765764781407, 0.7105345555714199, 0.6940524067197528, 0.6955457755497524, 0.6029550177710397, 0.583379830632891, 0.5557340724127633, 0.5643787724631173, 0.5434558050973075, 0.5366152695247105, 0.5078400032860892, 0.4857406105313982, 0.5008105209895543, 0.5163759844643729, 0.4924900531768799, 0.5278584786823818, 0.45804548263549805, 0.45428524698529926, 0.46998097215379986, 0.5013652699334281, 0.4260865535054888, 0.44969187464032856, 0.43176296779087614, 0.5225000722067696, 0.43638780287333895, 0.42572927474975586, 0.4227560673441206, 0.4139764223779951, 0.43625071219035555, 0.4223506450653076, 0.41473391226359774, 0.3900784083775112, 0.4647095373698643, 0.4125889539718628, 0.3922984940665109, 0.3783777100699289, 0.4359220692089626, 0.3859589014734541, 0.3850966606821333, 0.3820260167121887, 0.3753742660794939], "val_accuracy": [0.32766667008399963, 0.12066666781902313, 0.14900000393390656, 0.4560000002384186, 0.3610000014305115, 0.5696666836738586, 0.39233332872390747, 0.12933333218097687, 0.5680000185966492, 0.5956666469573975, 0.5533333420753479, 0.5676666498184204, 0.6259999871253967, 0.6513333320617676, 0.6970000267028809, 0.6626666784286499, 0.7179999947547913, 0.6903333067893982, 0.7310000061988831, 0.7509999871253967, 0.734000027179718, 0.7573333382606506, 0.750333309173584, 0.7599999904632568, 0.7866666913032532, 0.7913333177566528, 0.777999997138977, 0.7643333077430725, 0.8019999861717224, 0.7639999985694885, 0.8050000071525574, 0.7990000247955322, 0.8019999861717224, 0.7673333287239075, 0.8130000233650208, 0.8033333420753479, 0.8166666626930237, 0.749666690826416, 0.8186666369438171, 0.7990000247955322, 0.8083333373069763, 0.8256666660308838, 0.8003333210945129, 0.8100000023841858, 0.8183333277702332, 0.831333339214325, 0.8033333420753479, 0.8166666626930237, 0.82833331823349, 0.8366666436195374, 0.8019999861717224, 0.8333333134651184, 0.8346666693687439, 0.8289999961853027, 0.8353333473205566]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [5, 0, 0, 2], [36, 55, 6], [0, 1, 0], [0], [8], [0], [57], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7768571376800537, "mapping_values": [1, 4, 4, 2, 2, 2, 9, 9, 5, 4, 3, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2394677511909777, 1.9137025684681173, 1.4156866661388452, 1.278678185872713, 1.1310912314312822, 1.0500472254363253, 0.9575315320165858, 0.8920325706458883, 0.8700488155402402, 0.8467216890926736, 0.8088643669121616, 0.8050859374314125, 0.7718595179112013, 0.7503056311415266, 0.7420732283620566, 0.6948639824956935, 0.6994716335501826, 0.6954941347825954, 0.691827487070106, 0.6863359074472295, 0.6611815540703327, 0.6896139864105323, 0.6494507359050725], "accuracy": [0.22784309089183807, 0.4291374981403351, 0.5247655510902405, 0.5495971441268921, 0.5828820466995239, 0.6262052655220032, 0.6546030640602112, 0.6756042838096619, 0.6777176260948181, 0.6861709356307983, 0.7008321285247803, 0.700700044631958, 0.7096816897392273, 0.7206445932388306, 0.7215691208839417, 0.7412495017051697, 0.7446836829185486, 0.7392682433128357, 0.7360982894897461, 0.7375511527061462, 0.7559106945991516, 0.7363624572753906, 0.7581561207771301], "val_loss": [1.7942981038774763, 1.2564732687813895, 1.0264336722237724, 0.9149010181427002, 0.8973406382969448, 0.7405939783368792, 0.6680578163691929, 0.6498150825500488, 0.6754202502114433, 0.639293943132673, 0.5863582917622158, 0.5973325116293771, 0.606026428086417, 0.5757580314363752, 0.5254913738795689, 0.5259853260857719, 0.5523726088660104, 0.5200367144175938, 0.5094077416828701, 0.5267610209328788, 0.500886048589434, 0.5171561070850917, 0.5067169325692313], "val_accuracy": [0.45133334398269653, 0.5809999704360962, 0.5759999752044678, 0.6236666440963745, 0.6100000143051147, 0.6846666932106018, 0.7110000252723694, 0.7133333086967468, 0.7043333053588867, 0.7110000252723694, 0.746999979019165, 0.7429999709129333, 0.7179999947547913, 0.7193333506584167, 0.7630000114440918, 0.765999972820282, 0.7459999918937683, 0.7763333320617676, 0.7756666541099548, 0.7543333172798157, 0.7736666798591614, 0.7549999952316284, 0.7613333463668823]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55, 83], [0, 1, 0], [1], [8], [5], [30], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7428571581840515, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2975581405877974, 2.2873769622390077, 2.2768312518024456, 2.268111472620452, 2.2576027546639392, 2.245644470420669, 2.233234551635952, 2.2197840377528983, 2.2038205678295135, 2.184562838608169, 2.165067467093074, 2.1448605404459427, 2.11947955818791, 2.0874864690733026, 2.0563327013745583, 2.0219143857226602, 1.9799705797166967, 1.9350815366335108, 1.8968862046529085, 1.8474431378005942, 1.796367980595892, 1.7394373188748131, 1.6889849635729968, 1.6429484923124282, 1.5922911683912557, 1.5402525073548885, 1.5022651745327995, 1.4656413895279865, 1.4320972173945494, 1.3878085794481603, 1.3502707520118242, 1.3322610335658018, 1.3044121029858482, 1.2745529531314626, 1.256659464718974, 1.2312054463570317, 1.204683769742779, 1.180940216180592, 1.1734568326543462, 1.1517934122924491, 1.1344954422861435, 1.1166258107370406, 1.1009734125027741, 1.099196683729109, 1.08965126401508, 1.0701268673289517, 1.0560364485133389, 1.0413138065450243, 1.030288768938866, 1.0228743968292109, 1.0191492384939052, 1.0060747898785414, 0.990034249134036, 0.9974825420651721, 0.9857688029885308, 0.9672041099148025, 0.9698890250010371, 0.9566193407222091, 0.9365806749483944, 0.9489176810897809, 0.9398462115072886, 0.9307471818896238, 0.9138284080520739, 0.9292463025538488, 0.909308559984941, 0.9187914315404956, 0.8994078780713256, 0.9001623432098709, 0.8905451634556563, 0.8914010076632416, 0.8846806630309169, 0.8838121352525136, 0.8750129903406751, 0.8680138939391542, 0.856023719203376, 0.8597519686429602, 0.8599034991829292, 0.8530177949851356, 0.8522892436173771, 0.8561982195123218, 0.8488983862813532, 0.8402641146820078, 0.8342222317240383, 0.8370243676145551, 0.8317319824396108, 0.83043324781242, 0.8314250515688523, 0.8220796247735361, 0.8192202461992414, 0.8136937619593984, 0.819356996668895, 0.8080458196477647], "accuracy": [0.10540219396352768, 0.12561088800430298, 0.1628582775592804, 0.1806894689798355, 0.20935148000717163, 0.23140932619571686, 0.2595430016517639, 0.28199708461761475, 0.2995641231536865, 0.3206973969936371, 0.3287544548511505, 0.34843480587005615, 0.3611147701740265, 0.38885220885276794, 0.3907013535499573, 0.40562674403190613, 0.42028793692588806, 0.43626996874809265, 0.43204331398010254, 0.4435345530509949, 0.4581957459449768, 0.46506404876708984, 0.4788006842136383, 0.4881785809993744, 0.5000660419464111, 0.5145951509475708, 0.5101043581962585, 0.5255580544471741, 0.5307092666625977, 0.5392946600914001, 0.5514463186264038, 0.551050066947937, 0.5622771382331848, 0.5641262531280518, 0.5724474787712097, 0.5752212405204773, 0.5860520601272583, 0.5892220139503479, 0.5949016213417053, 0.6012415885925293, 0.605468213558197, 0.616299033164978, 0.6186765432357788, 0.613789439201355, 0.6092986464500427, 0.6273940205574036, 0.6292431354522705, 0.6373002529144287, 0.6363756656646729, 0.6395456194877625, 0.6444327235221863, 0.6412627100944519, 0.6476026773452759, 0.646149754524231, 0.6479989290237427, 0.6556597352027893, 0.6634526252746582, 0.6610751748085022, 0.6734909415245056, 0.6666226387023926, 0.6675472259521484, 0.6711134314537048, 0.6748117804527283, 0.6740192770957947, 0.6808875799179077, 0.6725663542747498, 0.6848500967025757, 0.6796988248825073, 0.6826046705245972, 0.6803592443466187, 0.6837934255599976, 0.6884163022041321, 0.6861709356307983, 0.6933034062385559, 0.6942279934883118, 0.6963412761688232, 0.6952846646308899, 0.694360077381134, 0.6934354901313782, 0.6889446377754211, 0.6956809163093567, 0.6993792057037354, 0.6997754573822021, 0.7013604640960693, 0.702681303024292, 0.7004358768463135, 0.7053229212760925, 0.6985867023468018, 0.7059833407402039, 0.703209638595581, 0.7053229212760925, 0.7071720957756042], "val_loss": [1.9613870893205916, 1.951880659375872, 1.942258017403739, 1.932182720729283, 1.9214494568961007, 1.9097984177725655, 1.897141592843192, 1.8830278260367257, 1.867098331451416, 1.848853656223842, 1.8283916882106237, 1.8055366788591658, 1.779701096670968, 1.750554016658238, 1.7178563390459334, 1.6818615368434362, 1.6415002686636788, 1.597970792225429, 1.5518945966448103, 1.5031537669045585, 1.4528735024588448, 1.4012251240866525, 1.3499115194593156, 1.2995103427342005, 1.2511771747044154, 1.2045221669333321, 1.1611215727669852, 1.121162278311593, 1.0845089299338204, 1.0504443304879325, 1.0186569350106376, 0.9904876436505999, 0.9638427666255406, 0.9399099009377616, 0.9188394205910819, 0.8986083098820278, 0.8802460942949567, 0.8631738254002163, 0.8472331251416888, 0.8331954479217529, 0.8199272155761719, 0.8064381395067487, 0.7948639052254813, 0.7843857833317348, 0.774258017539978, 0.7645071744918823, 0.7555258614676339, 0.7467667034694127, 0.7382659912109375, 0.7300774540219989, 0.7232621567589896, 0.7159025498798915, 0.70912994657244, 0.7027073587690081, 0.6971887860979352, 0.6910677807671683, 0.6854754345757621, 0.6796097244535174, 0.6746829237256732, 0.6703576019832066, 0.6656982558114188, 0.6614081008093697, 0.6570700236729213, 0.6537610803331647, 0.6491178955350604, 0.6452428783689227, 0.6416619505201068, 0.6375560590199062, 0.6344350576400757, 0.632198555128915, 0.6283899545669556, 0.6251416887555804, 0.6224297114780971, 0.6191923788615635, 0.6159511463982719, 0.6130165372576032, 0.6104083742414202, 0.6074019840785435, 0.6047109365463257, 0.6025626489094326, 0.6003878457205636, 0.5973502397537231, 0.5950419902801514, 0.5929511615208217, 0.5909792866025653, 0.588442495891026, 0.586341278893607, 0.5846041440963745, 0.5823525360652378, 0.5807865006583077, 0.5787731919969831, 0.5764894485473633], "val_accuracy": [0.10233332961797714, 0.19200000166893005, 0.27266666293144226, 0.31966665387153625, 0.35366666316986084, 0.37599998712539673, 0.3959999978542328, 0.4153333306312561, 0.43066665530204773, 0.4440000057220459, 0.4556666612625122, 0.47600001096725464, 0.49000000953674316, 0.5066666603088379, 0.5196666717529297, 0.531333327293396, 0.5403333306312561, 0.5503333210945129, 0.5543333292007446, 0.5606666803359985, 0.5736666917800903, 0.5806666612625122, 0.5879999995231628, 0.5923333168029785, 0.6010000109672546, 0.6140000224113464, 0.6263333559036255, 0.6353333592414856, 0.6463333368301392, 0.6603333353996277, 0.6643333435058594, 0.668666660785675, 0.6746666431427002, 0.6776666641235352, 0.6813333630561829, 0.6859999895095825, 0.687333345413208, 0.6909999847412109, 0.6926666498184204, 0.6963333487510681, 0.6970000267028809, 0.6983333230018616, 0.7016666531562805, 0.7046666741371155, 0.7053333520889282, 0.7083333134651184, 0.7083333134651184, 0.7103333473205566, 0.7136666774749756, 0.7129999995231628, 0.7163333296775818, 0.7179999947547913, 0.7200000286102295, 0.7229999899864197, 0.7236666679382324, 0.7256666421890259, 0.7273333072662354, 0.7296666502952576, 0.7289999723434448, 0.7303333282470703, 0.7329999804496765, 0.734666645526886, 0.7379999756813049, 0.7363333106040955, 0.737666666507721, 0.7406666874885559, 0.7396666407585144, 0.7419999837875366, 0.7426666617393494, 0.7423333525657654, 0.7440000176429749, 0.746999979019165, 0.746999979019165, 0.75, 0.753333330154419, 0.7483333349227905, 0.7516666650772095, 0.7519999742507935, 0.7516666650772095, 0.7556666731834412, 0.753000020980835, 0.7570000290870667, 0.7556666731834412, 0.7556666731834412, 0.7546666860580444, 0.7563333511352539, 0.7630000114440918, 0.7556666731834412, 0.7570000290870667, 0.7593333125114441, 0.7599999904632568, 0.7609999775886536]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 9, 1, 9], [5, 0, 0, 2], [71, 71, 83], [0, 1, 0], [0], [8], [4], [30], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10085714608430862, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.326606495662876, 2.7735148094995004, 3.3113433738441955, 4.439977738583612, 8.729827758674183, Infinity], "accuracy": [0.1784440577030182, 0.13300752639770508, 0.11359133571386337, 0.108440101146698, 0.0948355570435524, 0.09179764986038208], "val_loss": [2.1275735582624162, 2.4879471915108815, 3.134308542524065, 4.447688238961356, 137.48250906808036, 3.0724082674298967], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.0989999994635582, 0.09399999678134918, 0.07466666400432587, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 0, 3, 9, 6, 2, 0, 3, 5, 2], [3, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0], [6, 3, 5, 9, 1, 9], [4, 1, 0, 1, 1, 2], [52, 55, 83], [0, 1, 0], [1], [8], [0], [68], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1290075314.6298914, 25962866223.54141, 132194544715.6064, 399304251127.71576, 927189537203.5144, 1815384923494.5554], "accuracy": [0.10249637067317963, 0.10038304328918457, 0.09893012791872025, 0.1014397069811821, 0.10077928751707077, 0.09893012791872025], "val_loss": [5267955273.142858, 48389753124.57143, 185123958198.85715, 490994700873.1429, 1072971719826.2858, 2067705738971.4285], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 71, 83], [0, 1, 0], [1], [8], [4], [68], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 9, 9, 1, 9], [5, 0, 0, 2], [26, 57, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 1, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0], [6, 3, 7, 9, 1, 9], [5, 0, 0, 2], [26, 11, 42], [0, 1, 0], [1], [8], [5], [68], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 5, 7, 2, 4, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 57, 83], [0, 1, 0], [1], [8], [3], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 6, 6, 2, 0, 3, 5, 2], [0, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 19, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 9, 1, 9], [5, 0, 0, 2], [26, 55, 72], [0, 1, 0], [0], [8], [4], [87], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 5, 5, 2, 3, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2968788845128767, 2.2892714740892743, 2.5149236599278884, 455.65785442962465, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10698718577623367, 0.12732796370983124, 0.08955223858356476, 0.08875974267721176, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9680749348231725, 2.0344491686139787, 5.3838943753923685, 245202.9107142857, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07833333313465118, 0.06366666406393051, 0.0273333340883255, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 7, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 2, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 17, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1], [6, 3, 7, 9, 1, 9], [1, 0, 0, 2], [26, 57, 83, 20], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 6, 3, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3026278762769516, 40115099901.12112, 666293239132.8174, 2956704614948.8564, 8033091351131.229, 16771630039394.904], "accuracy": [0.09919429570436478, 0.10328886657953262, 0.1018359512090683, 0.09866596013307571, 0.10249637067317963, 0.09813763201236725], "val_loss": [1820154.2142857143, 139261514313.14285, 1014473649590.8572, 3313860046262.857, 7726525129874.286, 14941721161142.857], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 2, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [5, 0, 0, 2], [36, 55, 6], [0, 1, 0], [1], [8], [6], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 3, 9, 9, 5, 4, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1285162991.333101, 914128772870.0526, 4236615073279.121, 10547807918653.201, 21090366471397.793, 37136521645734.3], "accuracy": [0.10249637067317963, 0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [48175508918.85714, 2702724113554.2856, 7834686343460.571, 17056388874240.0, 31557393842176.0, 52534485675446.86], "val_accuracy": [0.10133333504199982, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0], [6, 3, 7, 9, 1, 9], [0, 0, 4, 2], [26, 55, 83, 6], [0, 1, 0], [1], [8], [4], [68], [0, 1, 0, 1, 1], [7, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 6, 3, 4, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3026058339738826, 2.3025647572018704, 2.302562718189246, 2.302566228431245, 2.302561155982289, 2.302572085384711], "accuracy": [0.10645885765552521, 0.10632677376270294, 0.1006472036242485, 0.10394927859306335, 0.1088363528251648, 0.10196803510189056], "val_loss": [1.973644188472203, 1.9736450740269251, 1.9736450059073312, 1.9736459595816476, 1.9736484118870325, 1.9736494336809431], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [0, 0, 0, 2], [26, 71, 83], [0, 1, 0], [1], [8], [0], [52], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [1, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3026278762769516, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [5, 0, 0, 2], [36, 55, 6], [1, 1, 0], [1], [8], [0], [68], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3575443588211993, 3.0212240344135597, 4.874538327598647, 8.049126772061157, 12.348740409283732, 17.74869832159931], "accuracy": [0.09628847241401672, 0.10302469879388809, 0.10091137140989304, 0.09893012791872025, 0.10210011899471283, 0.09655263274908066], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [86, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 71, 83], [0, 1, 0], [0], [8], [5], [57], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3575443588211993, 3.0212240344135597, 4.874538327598647, 8.049126772061157, 12.348740409283732, 17.74869832159931], "accuracy": [0.09628847241401672, 0.10302469879388809, 0.10091137140989304, 0.09893012791872025, 0.10210011899471283, 0.09655263274908066], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 7, 9, 1, 9], [5, 5, 0, 2], [26, 57, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3017399988122795, 2.301588441528554, 2.3009069126831023, 2.3028588605484455, 2.302990096387862, 2.302897354174347, 2.3025328153160034, 2.3028756511241313, 2.3029396665913473], "accuracy": [0.09602430462837219, 0.09113723784685135, 0.09298639744520187, 0.09338264167308807, 0.0936468094587326, 0.0874389111995697, 0.09285431355237961, 0.08770307898521423, 0.09008057415485382], "val_loss": [1.970994131905692, 1.9709882736206055, 1.9709829602922713, 1.9709761483328683, 1.9709701538085938, 1.970961366380964, 1.970954418182373, 1.9709465844290597, 1.9709382057189941], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.03866666555404663, 0.038333334028720856, 0.03866666555404663, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 7, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 7, 9, 1, 9], [4, 0, 4, 2], [26, 57, 83], [0, 1, 0], [1], [8], [2], [68], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3017399988122795, 2.301588441528554, 2.300906944174131, 2.3028588605484455, 2.302990064896833, 2.302897354174347, 2.3025327343525683, 2.30287568261516, 2.3029396665913473], "accuracy": [0.09602430462837219, 0.09113723784685135, 0.09298639744520187, 0.09338264167308807, 0.0936468094587326, 0.0874389111995697, 0.09285431355237961, 0.08770307898521423, 0.09008057415485382], "val_loss": [1.970994200025286, 1.9709882736206055, 1.9709826878138952, 1.9709761483328683, 1.9709700856889998, 1.97096129826137, 1.970954350062779, 1.9709465163094657, 1.9709382057189941], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.03866666555404663, 0.038333334028720856, 0.03866666555404663, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 5, 6, 9, 1, 9], [5, 5, 0, 2], [36, 55, 6], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.02142857201397419, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3033648846313515, 2.3242835187326256, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09153348207473755, 0.07753269374370575, 0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9771998269217355, 2.0210069928850447, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02666666731238365, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]