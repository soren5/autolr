[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [5, 3, 9, 2, 8, 2, 5], [3, 0, 2, 1, 2, 0, 0, 1], [57, 60, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [9, 3, 8, 1, 9, 9], [4, 3, 3, 0], [41, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 74]], "fitness": -0.18457143008708954, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.5627176183451907, 2.3260271495690104, 2.3032412830045934, 2.2820118917465964, 2.454300572166448, 2.315115745970444], "accuracy": [0.20420023798942566, 0.15995244681835175, 0.108440101146698, 0.15242372453212738, 0.1806894689798355, 0.10051512718200684], "val_loss": [2.0041428974696567, 1.9758107321602958, 1.9610163143702917, 1.9728492328098841, 2.003091335296631, 1.9753836223057337], "val_accuracy": [0.10766666382551193, 0.1003333330154419, 0.0846666693687439, 0.10199999809265137, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [5, 3, 9, 2, 8, 6, 5], [2, 2, 1, 1, 2, 0, 0, 1], [57, 19, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 9, 9], [1, 3, 3, 3], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 74]], "fitness": -0.1720000058412552, "mapping_values": [1, 9, 9, 6, 3, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.5626019559531965, 2.398582393120718, 2.3051153147272574, 2.3025068449164743, 4.460351378642778, 3.183362589630673, 2.3043714818575314, 2.3032744405386456, 2.3028907678256716], "accuracy": [0.2044644057750702, 0.16312244534492493, 0.1006472036242485, 0.09826971590518951, 0.15400871634483337, 0.09760929644107819, 0.09800554811954498, 0.09919429570436478, 0.09589222073554993], "val_loss": [2.0069663184029713, 1.9768097060067313, 1.9738806997026717, 1.9714067322867257, 6.084732736860003, 1.9759388651166643, 1.9741557666233607, 1.973788125174386, 1.9736748422895158], "val_accuracy": [0.10400000214576721, 0.1003333330154419, 0.1003333330154419, 0.14866666495800018, 0.1003333330154419, 0.10000000149011612, 0.09833333641290665, 0.10000000149011612, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 9, 4, 5, 8, 6, 5], [3, 0, 1, 1, 2, 0, 0, 1], [45, 24, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1], [1, 3, 8, 2, 9, 9], [5, 2, 3, 3], [90, 55], [0, 1, 0], [1, 1], [8], [7], [], [0, 0, 0, 1, 1], [8, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3021366489467336, 2.302583865422803, 2.302588364735035, 2.302586437232144, 2.3025837527793933, 2.3025878007622, 2.3025834217771894], "accuracy": [0.10593052208423615, 0.10368511080741882, 0.09681680053472519, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.10130762308835983], "val_loss": [1.973642076764788, 1.9736432347978865, 1.97364684513637, 1.9736459595816476, 1.9736490930829729, 1.9736497742789132, 1.9736508641924178], "val_accuracy": [0.1003333330154419, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09933333098888397, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [5, 3, 9, 2, 8, 6, 5], [2, 2, 1, 1, 2, 0, 0, 1], [57, 19, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1], [9, 3, 8, 1, 9, 9], [1, 3, 3, 3], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [9, 4, 5, 2, 9], [3, 0, 2], [28, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302141308390847, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [5, 3, 6, 2, 8, 6, 5], [3, 0, 1, 1, 2, 0, 0, 1], [57, 83, 84, 57], [0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 8, 2, 9, 9], [3, 2, 3, 3], [41, 55], [0, 1, 0], [1, 1], [8], [7], [], [0, 1, 0, 1, 1], [9, 4, 5, 2, 9], [3, 0, 2], [6, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3017691883192466, 2.3025848910226294, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10210011899471283, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 2, 9, 2, 5, 6, 5], [3, 0, 1, 1, 2, 0, 0, 1], [57, 83, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0], [1, 3, 8, 2, 9, 9, 4, 4, 9], [3, 3, 3, 3], [41, 55, 28], [0, 1, 0], [1, 1], [8], [4], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1295741965.2689505, 26349243638.025097, 133560950798.0663, 398687750738.3014, 935319720057.7277, 1831733034661.7524], "accuracy": [0.09813763201236725, 0.1026284471154213, 0.09655263274908066, 0.09906221181154251, 0.09470347315073013, 0.10302469879388809], "val_loss": [5340059209.142858, 49190257810.28571, 188692763209.14285, 503900424484.5714, 1105429603474.2856, 2144197335917.7144], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 9, 4, 5, 8, 6, 5], [3, 0, 1, 1, 2, 0, 0, 1], [57, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 8, 2, 9, 9], [4, 3, 3, 0], [90, 55], [0, 1, 0], [1, 1], [8], [2], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08175934851169586, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 3, 9, 2, 3, 6, 5], [3, 0, 2, 1, 2, 0, 0, 1], [3, 19, 84, 57], [0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1], [1, 8, 8, 2, 9, 9], [3, 2, 2, 3], [90, 55], [0, 1, 0], [1, 1], [8], [0], [21], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302141308390847, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 3, 9, 2, 3, 6, 5], [3, 0, 1, 1, 2, 0, 0, 1], [57, 19, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 9, 9], [1, 3, 2, 3], [41, 55], [0, 1, 0], [1, 1], [8], [7], [], [0, 1, 0, 1, 1], [3, 4, 5, 2, 9], [2, 0, 2], [6, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 2, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(alpha)), grad)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 3, 9, 2, 3, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [45, 24, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1], [1, 3, 8, 2, 9, 9], [1, 3, 3, 3], [41, 55], [0, 1, 0], [1, 1], [8], [7], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1295741966.3256142, 26349243638.025097, 133560950798.0663, 398687742082.11334, 935319720057.7277, 1831733121223.6333], "accuracy": [0.09813763201236725, 0.1026284471154213, 0.09655263274908066, 0.09906221181154251, 0.09470347315073013, 0.10302469879388809], "val_loss": [5340059355.428572, 49190257810.28571, 188692763209.14285, 503900424484.5714, 1105429640923.4285, 2144197111222.8572], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 9, 4, 5, 8, 6, 5], [3, 0, 1, 1, 2, 0, 0, 1], [43, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 8, 2, 0, 9], [0, 3, 3, 2], [41, 55], [0, 1, 0], [1, 1], [8], [4], [], [1, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08175934851169586, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 3, 6, 2, 8, 0, 5], [2, 2, 1, 1, 2, 0, 0, 1], [45, 24, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1], [1, 3, 8, 2, 9, 9], [3, 3, 3, 3], [90, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [9, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.negative(grad)), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3017691883192466, 2.3025848910226294, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10210011899471283, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 9, 4, 5, 8, 6, 5], [3, 0, 1, 1, 2, 0, 0, 1], [60, 24, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1], [9, 3, 8, 1, 9, 9], [4, 3, 3, 0], [90, 55], [0, 1, 0], [1, 1], [8], [7], [], [0, 1, 0, 1, 1], [5, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.07257142663002014, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3036944183140005, 2.300262487260594, 2.300854870797841, 2.3009635369854204, 2.3007103443586625, 2.3003467130087873, 2.3004017778123766, 2.2991142420957056, 2.298954962518914, 2.2996418838566477, 2.2990033382500923, 2.2993524897415027, 2.300085943892427, 2.2998680374043223, 2.30085761794923], "accuracy": [0.08387266844511032, 0.09179764986038208, 0.09430722147226334, 0.09813763201236725, 0.0936468094587326, 0.09721305221319199, 0.09351472556591034, 0.10011887550354004, 0.1010434553027153, 0.09549596905708313, 0.09866596013307571, 0.09655263274908066, 0.09959053993225098, 0.1006472036242485, 0.09774138033390045], "val_loss": [1.9702534675598145, 1.969851016998291, 1.969628197806222, 1.9695016316005163, 1.9695209094456263, 1.9695658002580916, 1.9694922992161341, 1.9693945475987025, 1.969397681100028, 1.9694643020629883, 1.9697211810520716, 1.9699977466038294, 1.9702296257019043, 1.9703749929155623, 1.9705497877938407], "val_accuracy": [0.04699999839067459, 0.05366666615009308, 0.058666665107011795, 0.06400000303983688, 0.06499999761581421, 0.06966666877269745, 0.07500000298023224, 0.07900000363588333, 0.08166666328907013, 0.08500000089406967, 0.08100000023841858, 0.07999999821186066, 0.07766667008399963, 0.07400000095367432, 0.07366666942834854]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [3, 3, 9, 2, 3, 6, 5], [2, 2, 1, 1, 2, 0, 0, 1], [45, 24, 84, 57], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], [1, 3, 8, 2, 9, 9, 4, 4, 9, 8], [3, 2, 3, 3], [90, 55, 93], [0, 1, 0], [1], [8], [1], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 74]], "fitness": -0.035999998450279236, "mapping_values": [1, 9, 9, 5, 4, 1, 13, 13, 10, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3041349153917983, 2.301418360843792, 2.3025819787637762, 2.3032300117040716, 2.3031639191200863, 2.302706037986674], "accuracy": [0.08321225643157959, 0.0886276587843895, 0.08889182657003403, 0.08849557489156723, 0.0866464152932167, 0.08968432247638702], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [8, 9, 4, 5, 8, 6, 5], [3, 0, 1, 1, 2, 0, 0, 1], [10, 83, 84, 57], [0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 8, 2, 0, 9], [0, 3, 3, 2], [93, 55], [1, 1, 0], [1, 1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3041349153917983, 2.301418360843792, 2.3025819787637762, 2.3032300117040716, 2.3031639191200863, 2.302706037986674], "accuracy": [0.08321225643157959, 0.0886276587843895, 0.08889182657003403, 0.08849557489156723, 0.0866464152932167, 0.08968432247638702], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 9, 2, 8, 6, 5], [3, 0, 1, 1, 2, 0, 0, 1], [56, 19, 84, 57], [1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [1, 9, 5, 1, 9, 9], [1, 3, 3, 3], [41, 55], [1, 1, 0], [0], [8], [4], [], [1, 1, 0, 1, 1], [1, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 4, 4, 3, 1, 1, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3041349153917983, 2.301418360843792, 2.3025819787637762, 2.3032300117040716, 2.3031639191200863, 2.302706037986674], "accuracy": [0.08321225643157959, 0.0886276587843895, 0.08889182657003403, 0.08849557489156723, 0.0866464152932167, 0.08968432247638702], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [3, 0, 1, 1, 2, 0, 0, 1], [57, 83, 84, 57], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 8, 2, 9, 9], [3, 2, 3, 3], [41, 55], [1, 1, 0], [1, 1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3041349153917983, 2.301418360843792, 2.3025819787637762, 2.3032300117040716, 2.3031639191200863, 2.302706037986674], "accuracy": [0.08321225643157959, 0.0886276587843895, 0.08889182657003403, 0.08849557489156723, 0.0866464152932167, 0.08968432247638702], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 9, 4, 5, 8, 6, 5], [3, 0, 1, 1, 2, 0, 0, 1], [60, 24, 84, 57], [1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [1, 3, 8, 2, 9, 9], [1, 2, 3, 3], [90, 55], [1, 1, 0], [1, 1], [8], [7], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 2, 0, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3041349153917983, 2.301418360843792, 2.3025819787637762, 2.3032300117040716, 2.3031639191200863, 2.302706037986674], "accuracy": [0.08321225643157959, 0.0886276587843895, 0.08889182657003403, 0.08849557489156723, 0.0866464152932167, 0.08968432247638702], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 3, 9, 2, 3, 6, 5, 9, 7, 0], [3, 0, 1, 1, 2, 0, 0, 1], [90, 24, 84, 57], [0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1], [1, 3, 8, 2, 9, 9], [3, 2, 3, 3], [90, 55], [1, 1, 0], [1, 1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 14, 14, 10, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(alpha)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3041349153917983, 2.301418360843792, 2.3025819787637762, 2.3032300117040716, 2.3031639191200863, 2.302706037986674], "accuracy": [0.08321225643157959, 0.0886276587843895, 0.08889182657003403, 0.08849557489156723, 0.0866464152932167, 0.08968432247638702], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 1, 9, 2, 6, 6, 5, 2, 9], [3, 2, 1, 2, 2, 0, 0, 1], [57, 19, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 3, 8, 2, 9, 9, 5, 1, 7, 1, 5], [2, 3, 3, 3, 4], [90, 55], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 74]], "fitness": -0.035999998450279236, "mapping_values": [1, 13, 13, 9, 4, 2, 16, 16, 11, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta))), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3041349153917983, 2.301418360843792, 2.3025819787637762, 2.3032300117040716, 2.3031639191200863, 2.302706037986674], "accuracy": [0.08321225643157959, 0.0886276587843895, 0.08889182657003403, 0.08849557489156723, 0.0866464152932167, 0.08968432247638702], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]