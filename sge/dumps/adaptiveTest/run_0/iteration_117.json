[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7642857432365417, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.294001559949176, 2.276459786240388, 2.2596753311824838, 2.2378474498988616, 2.213543121604683, 2.1815592040947602, 2.1467040538032056, 2.0991852911093987, 2.0411254413659154, 1.9706272095611082, 1.8944741489707424, 1.8126796455021783, 1.7244631852519163, 1.6316381235636614, 1.5466969533918273, 1.4631242211374231, 1.4040696532923738, 1.3428327988293414, 1.3005961254052105, 1.2461318024995698, 1.2161321651823784, 1.1738990529527313, 1.1501413644848089, 1.1248581985740174, 1.094309462453585, 1.0811122205704273, 1.0542515126264735, 1.0382092799870817, 1.0188285318096126, 1.0079083998504648, 0.9888459647084429, 0.9760576798112527, 0.9592640521724415, 0.9495852606691122, 0.9420450471726391, 0.9342313582524647, 0.913924705161867, 0.9136985460402801, 0.8895384658439489, 0.891827898105185, 0.8852626747222797, 0.8715957692742994, 0.8634547267166726, 0.8540616252513342, 0.857011691682516, 0.8462427007901654, 0.8425102283485089, 0.8329961125199757, 0.8251570745733798, 0.82126696277304, 0.8214238942527594, 0.8130565004467791, 0.8080606488834488, 0.8019488855690579, 0.8010323786732385, 0.796781801237422, 0.7960507806108581, 0.7885837387399367, 0.7850816087274975, 0.7786736550537067, 0.7754783421821756, 0.7763394827163136, 0.7709712669629274, 0.7688457684478488, 0.7691949589723892, 0.7547767449127543, 0.753385597657156, 0.7625493639495788, 0.7516696476948936, 0.7517972711117953, 0.7473315409130157, 0.7375280870942235, 0.7412702051828944, 0.7407791785528757, 0.7374407619123745, 0.7377966446663017, 0.7228493018787078], "accuracy": [0.10949676483869553, 0.15480121970176697, 0.2024831622838974, 0.24924051761627197, 0.2833179235458374, 0.3292827904224396, 0.34460440278053284, 0.3763043284416199, 0.40364548563957214, 0.42147669196128845, 0.43851539492607117, 0.4558182656764984, 0.47206446528434753, 0.4881785809993744, 0.5064060091972351, 0.5283318161964417, 0.5383700728416443, 0.5589750409126282, 0.5559371113777161, 0.5774666666984558, 0.5799762010574341, 0.5908070206642151, 0.6042794585227966, 0.6063928008079529, 0.6199973821640015, 0.6184123754501343, 0.629111111164093, 0.6362435817718506, 0.6390172839164734, 0.6478668451309204, 0.6491876840591431, 0.6583014130592346, 0.6619997620582581, 0.663848876953125, 0.663848876953125, 0.6650376319885254, 0.6753401160240173, 0.6744155287742615, 0.6837934255599976, 0.6816800832748413, 0.6828688383102417, 0.6913221478462219, 0.6893408894538879, 0.6940959095954895, 0.6890767216682434, 0.6976621150970459, 0.6999075412750244, 0.7003037929534912, 0.7038700580596924, 0.7061154246330261, 0.7022850513458252, 0.7111346125602722, 0.7104741930961609, 0.7124554514884949, 0.7132478952407837, 0.717870831489563, 0.7100779414176941, 0.7161537408828735, 0.7150970697402954, 0.7190595865249634, 0.7174745798110962, 0.7177387475967407, 0.7197200059890747, 0.7214370369911194, 0.7189275026321411, 0.7268524765968323, 0.7289658188819885, 0.7195879220962524, 0.7265883088111877, 0.7239466309547424, 0.7292299270629883, 0.7346453666687012, 0.7318716049194336, 0.7265883088111877, 0.7322678565979004, 0.7257958054542542, 0.739400327205658], "val_loss": [1.953747340611049, 1.9365902628217424, 1.9180649348667689, 1.896076270512172, 1.8698562213352747, 1.8369009835379464, 1.796637739453997, 1.7468536240713937, 1.6858977930886405, 1.6129233155931746, 1.5310954366411482, 1.4439819880894251, 1.3538592202322823, 1.2659649508340018, 1.1839302607945033, 1.1105766296386719, 1.0495655196053642, 0.9958806719098773, 0.9508143152509417, 0.9120439120701381, 0.878732408796038, 0.8508091483797345, 0.82367513860975, 0.8028131723403931, 0.7825204815183368, 0.7656521626881191, 0.7491756507328579, 0.7352149486541748, 0.7224905150277274, 0.7122957195554461, 0.7019751412527901, 0.6910789012908936, 0.6804162263870239, 0.6720642702920097, 0.6649271590369088, 0.6594331605093819, 0.6493779591151646, 0.6431362288338798, 0.6358354943139213, 0.6307822465896606, 0.6237853765487671, 0.6183743647166661, 0.6132150888442993, 0.6102123601096017, 0.6066931826727731, 0.6009173222950527, 0.5990737506321498, 0.5925707476479667, 0.5877963985715594, 0.5850990670067924, 0.5819755962916783, 0.5772316115243095, 0.5757639237812587, 0.5723944221224103, 0.5699998991830009, 0.567777259009225, 0.5652362789426532, 0.5603998388562884, 0.5579913854598999, 0.554403373173305, 0.5529060363769531, 0.5506174053464618, 0.549233215195792, 0.5450505699430194, 0.5436227321624756, 0.5415389026914325, 0.5411199160984584, 0.5383910281317574, 0.5362232072012765, 0.5358691045216152, 0.5332116399492536, 0.5314271960939679, 0.5284881251198905, 0.5279223067419869, 0.5246396575655256, 0.5236290352685111, 0.5233909061976841], "val_accuracy": [0.17466667294502258, 0.31033334136009216, 0.3623333275318146, 0.3933333456516266, 0.43066665530204773, 0.453000009059906, 0.48100000619888306, 0.5093333125114441, 0.5249999761581421, 0.5486666560173035, 0.5609999895095825, 0.5759999752044678, 0.5879999995231628, 0.5979999899864197, 0.6206666827201843, 0.653333306312561, 0.6636666655540466, 0.6629999876022339, 0.6703333258628845, 0.6836666464805603, 0.6850000023841858, 0.6896666884422302, 0.6949999928474426, 0.6933333277702332, 0.7009999752044678, 0.7070000171661377, 0.7116666436195374, 0.7166666388511658, 0.7123333215713501, 0.7170000076293945, 0.7200000286102295, 0.7253333330154419, 0.7303333282470703, 0.7239999771118164, 0.7319999933242798, 0.731333315372467, 0.7419999837875366, 0.7443333268165588, 0.7429999709129333, 0.7450000047683716, 0.7513333559036255, 0.7543333172798157, 0.753000020980835, 0.7486666440963745, 0.7523333430290222, 0.7553333044052124, 0.749666690826416, 0.7613333463668823, 0.762333333492279, 0.7566666603088379, 0.7563333511352539, 0.7639999985694885, 0.7613333463668823, 0.7666666507720947, 0.7636666893959045, 0.7603333592414856, 0.7670000195503235, 0.7646666765213013, 0.765333354473114, 0.7676666378974915, 0.7663333415985107, 0.7706666588783264, 0.7680000066757202, 0.7703333497047424, 0.7730000019073486, 0.7733333110809326, 0.7743333578109741, 0.7763333320617676, 0.7716666460037231, 0.7693333625793457, 0.7723333239555359, 0.7770000100135803, 0.7763333320617676, 0.7706666588783264, 0.7746666669845581, 0.7756666541099548, 0.7743333578109741]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7422857284545898, "mapping_values": [1, 4, 4, 2, 2, 0, 7, 7, 4, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2975755179673136, 2.2876683728506912, 2.2793545689895844, 2.2684533829702254, 2.2577131860181563, 2.245367021199152, 2.2345463362320808, 2.2193998062001277, 2.20313695506523, 2.1849179532407943, 2.166103500841851, 2.1461078594105985, 2.121642708038342, 2.0916896899299786, 2.05906069292888, 2.02063697482837, 1.9835380645964076, 1.9381112978836612, 1.8962672827124454, 1.841305177540213, 1.7970681585703134, 1.7357322458640823, 1.6938101260763796, 1.6441369028359734, 1.5949223602389646, 1.5564922353988626, 1.503537940153939, 1.4622862681484714, 1.4257341779659232, 1.3962661552548865, 1.3568336955780806, 1.3277936885543016, 1.3026476608307103, 1.2754296795126154, 1.2588849015255426, 1.2364962983518748, 1.2071786205199542, 1.196039062622689, 1.1644412850218835, 1.1563062134546107, 1.1422811297062854, 1.123746491379159, 1.1062217321945078, 1.0860119207329548, 1.0891353657468907, 1.0693358654012894, 1.057019108196118, 1.0460885041393955, 1.0297726954703381, 1.0220127616182468, 1.0200337857429174, 1.0054795167953456, 0.9981024959666492, 0.9832540086515198, 0.9816432095569091, 0.9766310553556389, 0.9697317019697382, 0.9605246565093485, 0.9524497151091398, 0.9418132692721101, 0.9394221391896405, 0.9367934939269581, 0.9262024329842641, 0.9242379651125066, 0.9213113980742966, 0.905861453475607, 0.9012955487396392, 0.9108656112386597, 0.8983475564965608, 0.8953444990720006, 0.8893687595796466, 0.8770111127064102, 0.8801666915676518, 0.8749594149761479, 0.8737230120853363, 0.8722782936220266, 0.855516307397431, 0.8532696914175293, 0.8582422204966149, 0.8457539686437422, 0.8455093433560633, 0.8483019999036888, 0.8401390574218071, 0.8363916632316967, 0.8297001842998353, 0.8243036035690892, 0.8280843687709359, 0.822974719596246, 0.818623792312684, 0.8184637952994015], "accuracy": [0.10130762308835983, 0.12521463632583618, 0.1534803807735443, 0.1818782240152359, 0.2001056671142578, 0.23220182955265045, 0.2518821954727173, 0.2794875204563141, 0.2996962070465088, 0.32267865538597107, 0.33839651942253113, 0.3521331250667572, 0.3637564480304718, 0.37802138924598694, 0.3991546630859375, 0.4076079726219177, 0.41830670833587646, 0.4352133274078369, 0.4377228915691376, 0.45872408151626587, 0.4605732262134552, 0.4714040458202362, 0.4741777777671814, 0.4807819426059723, 0.5052172541618347, 0.4967639744281769, 0.5171047449111938, 0.5221238732337952, 0.531898021697998, 0.5316338539123535, 0.5526350736618042, 0.5540879964828491, 0.5624092221260071, 0.566239595413208, 0.5669000148773193, 0.573107898235321, 0.5898824334144592, 0.5851274728775024, 0.600581169128418, 0.5992603302001953, 0.6036190986633301, 0.6071853041648865, 0.611940324306488, 0.6210539937019348, 0.6156386137008667, 0.6275261044502258, 0.6297714710235596, 0.6337339878082275, 0.6380926966667175, 0.6493197679519653, 0.6409985423088074, 0.6482630968093872, 0.651168942451477, 0.6576409935951233, 0.6573768258094788, 0.6572447419166565, 0.6565843224525452, 0.6645092964172363, 0.6642451286315918, 0.6700568199157715, 0.665830135345459, 0.669792652130127, 0.6767930388450623, 0.6693964004516602, 0.6745476126670837, 0.6811517477035522, 0.6740192770957947, 0.6688680648803711, 0.67666095495224, 0.6785101294517517, 0.6823405027389526, 0.6890767216682434, 0.6832650899887085, 0.6851142644882202, 0.6837934255599976, 0.6859067678451538, 0.6952846646308899, 0.6915863156318665, 0.6906617283821106, 0.698718786239624, 0.6947563290596008, 0.6985867023468018, 0.7051908373832703, 0.7008321285247803, 0.7016246318817139, 0.700700044631958, 0.7058512568473816, 0.7073041796684265, 0.7057191729545593, 0.7065116763114929], "val_loss": [1.961402211870466, 1.9518767765590124, 1.9423250470842635, 1.9322378294808524, 1.9217168944222587, 1.9100121770586287, 1.8974132537841797, 1.8834142003740584, 1.8676044600350517, 1.8496137346540178, 1.8294457026890345, 1.8067543166024345, 1.7811284746442522, 1.7523835727146693, 1.7199674333844865, 1.6835103375571114, 1.6438151087079729, 1.6005991867610387, 1.5544976506914412, 1.5055482728140694, 1.4550281592777796, 1.403719765799386, 1.352442707334246, 1.3024990899222237, 1.2539424896240234, 1.2081037248883928, 1.1645617144448417, 1.1244357313428606, 1.0868826593671526, 1.0531963620867049, 1.021650723048619, 0.9931080000741142, 0.966963563646589, 0.9428297451564244, 0.9211816106523786, 0.9016881670270648, 0.8826964923313686, 0.8656924452100482, 0.8491132429667881, 0.8348732335226876, 0.8210263081959316, 0.8080555200576782, 0.7960120950426374, 0.7845452002116612, 0.7753575359072004, 0.7651176282337734, 0.7559173958642142, 0.7471936089651925, 0.7385349103382656, 0.7308414663587298, 0.7238702263150897, 0.7168349197932652, 0.7103099652699062, 0.7044581685747419, 0.6986633028302874, 0.6925467593329293, 0.6875449589320591, 0.6816954783030919, 0.676740186555045, 0.6712967668260846, 0.6666976894651141, 0.6628631183079311, 0.6580866234643119, 0.6536681652069092, 0.6499870845249721, 0.6460135153361729, 0.6421928746359689, 0.6391536508287702, 0.6352843046188354, 0.6322252239499774, 0.6290814365659442, 0.625704118183681, 0.6227796588625226, 0.6197061708995274, 0.6167214257376534, 0.6140813997813633, 0.611356258392334, 0.6081082820892334, 0.6058334623064313, 0.6020912102290562, 0.5998407432011196, 0.5982337168284825, 0.595437833241054, 0.5936031852449689, 0.5908081361225673, 0.5885513850620815, 0.5863187653677804, 0.5852983849389213, 0.5829295430864606, 0.5804961238588605], "val_accuracy": [0.10199999809265137, 0.19566667079925537, 0.2776666581630707, 0.32366666197776794, 0.35499998927116394, 0.3799999952316284, 0.4046666622161865, 0.42266666889190674, 0.43533334136009216, 0.44999998807907104, 0.4633333384990692, 0.47833332419395447, 0.49033331871032715, 0.5056666731834412, 0.5233333110809326, 0.5329999923706055, 0.5423333048820496, 0.5513333082199097, 0.5533333420753479, 0.5603333115577698, 0.5713333487510681, 0.5786666870117188, 0.5863333344459534, 0.5903333425521851, 0.6019999980926514, 0.6056666374206543, 0.625, 0.6330000162124634, 0.6470000147819519, 0.6546666622161865, 0.6653333306312561, 0.6683333516120911, 0.6710000038146973, 0.6766666769981384, 0.6793333292007446, 0.6840000152587891, 0.6880000233650208, 0.6903333067893982, 0.6913333535194397, 0.6926666498184204, 0.6966666579246521, 0.6966666579246521, 0.7006666660308838, 0.7046666741371155, 0.7046666741371155, 0.7070000171661377, 0.7099999785423279, 0.7123333215713501, 0.7146666646003723, 0.7129999995231628, 0.7149999737739563, 0.718999981880188, 0.7203333377838135, 0.7213333249092102, 0.7243333458900452, 0.7213333249092102, 0.7269999980926514, 0.7283333539962769, 0.7279999852180481, 0.7303333282470703, 0.7316666841506958, 0.7329999804496765, 0.734333336353302, 0.7369999885559082, 0.7369999885559082, 0.7400000095367432, 0.7413333058357239, 0.7429999709129333, 0.7416666746139526, 0.7409999966621399, 0.7440000176429749, 0.7436666488647461, 0.7446666955947876, 0.7446666955947876, 0.7490000128746033, 0.7476666569709778, 0.7490000128746033, 0.7536666393280029, 0.7523333430290222, 0.7523333430290222, 0.7573333382606506, 0.7543333172798157, 0.7559999823570251, 0.7586666941642761, 0.7616666555404663, 0.7583333253860474, 0.7570000290870667, 0.7546666860580444, 0.7583333253860474, 0.7596666812896729]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 4, 2], [26, 34], [0, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.38771429657936096, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.0425794652392915, 157.62002038684867, 1755.6476277180195, 4266.5915164567095, 11570.931949807447, 16429.71287359868], "accuracy": [0.2793554365634918, 0.17144367098808289, 0.11927089840173721, 0.12508255243301392, 0.11002509295940399, 0.08360850811004639], "val_loss": [1.4539712837764196, 174.00164358956474, 1396.6819545200892, 5165.916294642857, 7813.882533482143, 8375.015066964286], "val_accuracy": [0.3773333430290222, 0.13066667318344116, 0.15533334016799927, 0.1106666699051857, 0.09366666525602341, 0.07800000160932541]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 7, 9, 1, 9], [4, 3, 0, 2], [26, 55], [0, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.29571428894996643, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.9629945922222247, 2.355463311404852, 2.3063434465859527, 2.3038653055784835, 2.303487793266529, 2.303619107140715], "accuracy": [0.17897239327430725, 0.17884030938148499, 0.09668471664190292, 0.1010434553027153, 0.1010434553027153, 0.09747721254825592], "val_loss": [1.9598843710763114, 1.9783571107046944, 1.974602358681815, 1.9736531121390206, 1.9736889430454798, 1.973611695425851], "val_accuracy": [0.20866666734218597, 0.10066666454076767, 0.09933333098888397, 0.10066666454076767, 0.11800000071525574, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [3, 0, 4, 2], [26, 34], [0, 1, 0], [0], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.2954285740852356, "mapping_values": [1, 15, 15, 10, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.9629494625233135, 2.399446502133068, 2.3061414597261503, 2.303812113262958, 2.3033517124063665, 2.3034516866606114], "accuracy": [0.17963281273841858, 0.17699114978313446, 0.09536388516426086, 0.10051512718200684, 0.09893012791872025, 0.09826971590518951], "val_loss": [1.9600027629307337, 1.9786178043910436, 1.9746441841125488, 1.9737441199166434, 1.9736482075282507, 1.9735044070652552], "val_accuracy": [0.20733332633972168, 0.09933333098888397, 0.09933333098888397, 0.10066666454076767, 0.10066666454076767, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 7, 9, 1, 9], [3, 0, 0, 2], [26, 55], [0, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.2945714294910431, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, grad)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.9630369153146843, 2.3257828360897532, 2.306111203240145, 2.3037061478719734, 2.303336844137552, 2.3033694986968922], "accuracy": [0.17963281273841858, 0.17659489810466766, 0.10157178342342377, 0.09998679161071777, 0.1002509593963623, 0.09681680053472519], "val_loss": [1.9604827335902624, 1.9785093579973494, 1.97462374823434, 1.9737229347229004, 1.973651954105922, 1.9735114915030343], "val_accuracy": [0.20633333921432495, 0.10066666454076767, 0.09933333098888397, 0.10066666454076767, 0.10066666454076767, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55, 83], [0, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.2937142848968506, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.9630393265197776, 2.3381755641107906, 2.306290638460979, 2.303910433702843, 2.3034348971556207, 2.303470315965978], "accuracy": [0.17923656105995178, 0.17738740146160126, 0.09826971590518951, 0.10051512718200684, 0.09985470771789551, 0.09800554811954498], "val_loss": [1.9602439744131905, 1.9784555435180664, 1.974658829825265, 1.9736804962158203, 1.9737377166748047, 1.973428589957101], "val_accuracy": [0.20766666531562805, 0.10066666454076767, 0.09933333098888397, 0.10066666454076767, 0.1003333330154419, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55], [1, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.2937142848968506, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.962951960486192, 2.372149489511982, 2.3060873301746256, 2.3036327983063636, 2.3034549148689565, 2.303426243168976], "accuracy": [0.17963281273841858, 0.17751948535442352, 0.09959053993225098, 0.10408136248588562, 0.09879804402589798, 0.09285431355237961], "val_loss": [1.959946768624442, 1.9785065650939941, 1.9746810368129186, 1.9736619676862444, 1.9737772260393416, 1.9735405104500907], "val_accuracy": [0.21199999749660492, 0.09933333098888397, 0.09933333098888397, 0.10066666454076767, 0.10000000149011612, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [6, 3, 7, 5, 1, 9], [4, 0, 3, 2, 1], [57, 55, 83], [0, 1, 0], [0], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 10, 10, 5, 5, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(beta, beta))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55], [1, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [3, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 7, 9, 1, 9], [4, 3, 0, 2], [97, 75], [1, 1, 0], [1], [8], [7], [], [0, 1, 0, 0, 1], [1, 5, 5, 2, 9], [1, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.square(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302121882299469, 2.743570858823499, 21.691182202666806, 108.99635379838118, 289.2611574055323, 578.3373214042481], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.984811510358538, 5.314212390354702, 50.82563781738281, 169.9997297014509, 377.30428641183033, 684.003644670759], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 7, 9, 1, 9], [1, 3, 0, 2], [26, 55], [0, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 8, 50], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0], [0, 8, 4, 1, 5, 7, 0], [7], [], [0, 1, 0, 1, 1], [1, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 3, 11, 7, 7, 0, 0, 5, 2, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, tf.math.add(sigma, sigma)))), tf.math.add(sigma, tf.math.negative(sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 0, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 7, 8, 1, 9], [5, 0, 0, 2], [26, 82, 83], [0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1], [6, 1, 0], [3, 4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 8, 8, 4, 4, 2, 6, 5, 3, 2, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 1, 3, 2], [26, 55], [1, 1, 0], [1], [8], [1], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 7, 9, 1, 9], [4, 3, 0, 2], [26, 55], [1, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.09942857176065445, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3018038050531002, 2.302753631795607, 2.302922308106448, 2.3028864384390313, 2.3032811757139227, 2.3035926806881064, 2.3037146472376664, 2.3044825702720644, 2.305111796769956, 2.307426978820319, 2.311554421082369, 2.3199553060777247, 2.3364954190310265, 2.3639931808200103, 2.4038430247812568], "accuracy": [0.09074098616838455, 0.09813763201236725, 0.09734513610601425, 0.09998679161071777, 0.09576013684272766, 0.09787346422672272, 0.09549596905708313, 0.09813763201236725, 0.09787346422672272, 0.09206181764602661, 0.09760929644107819, 0.09285431355237961, 0.09417514503002167, 0.09866596013307571, 0.09536388516426086], "val_loss": [1.9737559046064104, 1.9739703450884138, 1.9740394183567591, 1.974266869681222, 1.9741661208016532, 1.9746095793587821, 1.9750219753810339, 1.9755579403468542, 1.976661137172154, 1.9793893269130163, 1.984750475202288, 1.9957044465201241, 2.0150745936802457, 2.045072146824428, 2.086090700966971], "val_accuracy": [0.09966666996479034, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419, 0.10133333504199982, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [78, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 7, 9, 1, 9], [4, 3, 0, 2], [26, 55], [0, 0, 0], [0, 1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.09942857176065445, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3018039894330737, 2.3027528354819613, 2.302922425032638, 2.30288509802339, 2.3032808114257013, 2.30359200586685, 2.303714534783203, 2.3044824936858825, 2.3051116888816914, 2.3074262186583745, 2.311552572244068, 2.3199517614790133, 2.3364881629626417, 2.3639812375324247, 2.403828445474123], "accuracy": [0.09074098616838455, 0.09853387624025345, 0.09747721254825592, 0.09998679161071777, 0.0956280529499054, 0.09813763201236725, 0.09536388516426086, 0.09813763201236725, 0.09787346422672272, 0.09206181764602661, 0.09760929644107819, 0.09285431355237961, 0.09417514503002167, 0.09853387624025345, 0.09536388516426086], "val_loss": [1.9737558364868164, 1.9739704132080078, 1.9740392139979772, 1.974266801561628, 1.9741661208016532, 1.974609647478376, 1.9750219753810339, 1.9755582128252303, 1.9766606603349959, 1.9793883732386999, 1.984748227255685, 1.99569947378976, 2.015066283089774, 2.045060157775879, 2.0860778263636996], "val_accuracy": [0.09966666996479034, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419, 0.10133333504199982, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 0, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [0, 3, 0, 2], [26, 55], [1, 1, 0], [0, 1], [8], [7], [], [0, 0, 0, 1, 1], [1, 5, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.09828571230173111, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.math.square(beta)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3578152591998567, 3.0298989113248522, 4.9107904437983025, 8.014588770188077, 12.405400746660053, 18.11540180272304], "accuracy": [0.09668471664190292, 0.10011887550354004, 0.10355303436517715, 0.09906221181154251, 0.09694888442754745, 0.09628847241401672], "val_loss": [2.0900816917419434, 2.7701287950788225, 4.281897953578404, 6.583935192653111, 9.648289271763392, 13.517530168805804], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 4, 2, 2], [26, 73], [0, 1, 0], [0], [8], [7], [], [1, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(grad, beta))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3017407554787197, 2.3018871244579935, 2.3035111252531917, 2.303172147159075, 2.302686233404621, 2.30269160407362], "accuracy": [0.09008057415485382, 0.09034473448991776, 0.09377889335155487, 0.08638224750757217, 0.08994849026203156, 0.08981640636920929], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 1, 7, 9, 1, 9], [2, 3, 0, 2], [26, 55, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3017407554787197, 2.3018871244579935, 2.3035111252531917, 2.303172147159075, 2.302686233404621, 2.30269160407362], "accuracy": [0.09008057415485382, 0.09034473448991776, 0.09377889335155487, 0.08638224750757217, 0.08994849026203156, 0.08981640636920929], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]