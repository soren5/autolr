[{"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 1, 0, 4, 9, 1, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 2, 2, 0, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8451428413391113, "mapping_values": [1, 19, 19, 11, 8, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.pow(grad, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0333591691097643, 1.0988900875056409, 0.8024811257366271, 0.712697312265355, 0.6563804393289521, 0.5959709962329781, 0.5577195234475686, 0.5240217701885852, 0.4991525662786154, 0.47966261178337743, 0.46578396634576247, 0.43646076581402854, 0.43276996541536555, 0.4117207518421884, 0.40572642595099423, 0.39216186449654017, 0.37742669838861376, 0.368166588627667, 0.3669108625581598, 0.3501465280003095, 0.3412671136645089, 0.3275419707193414, 0.32261800130659707, 0.3136829818992441, 0.30926151368769483, 0.30266224426316896, 0.2910337234532214, 0.28677164696588997, 0.2780366112661242, 0.27167743733766575, 0.2618943151544665, 0.2524000865561914, 0.2527326971209832, 0.24082832434992701, 0.23281097324328132, 0.2288802692273258, 0.2211924696548063, 0.21692204807042728, 0.21291563130168237, 0.20906819936550838, 0.20112182995300282, 0.19375139816546438, 0.18926229676778653, 0.19514483165204044, 0.181060317268524, 0.17290158653264, 0.16662225252593812, 0.17318093150425046, 0.16940747582877805], "accuracy": [0.3105269968509674, 0.6164311170578003, 0.6985867023468018, 0.733060359954834, 0.7515519857406616, 0.7792893648147583, 0.793950617313385, 0.805177628993988, 0.8195747137069702, 0.8260467648506165, 0.829216718673706, 0.8449346423149109, 0.8448025584220886, 0.8453308939933777, 0.850350022315979, 0.854708731174469, 0.863558292388916, 0.858671247959137, 0.8651432991027832, 0.8684453964233398, 0.8712190985679626, 0.8775591254234314, 0.8790120482444763, 0.8840311765670776, 0.8853520154953003, 0.8841632604598999, 0.8877294659614563, 0.8934090733528137, 0.8956544995307922, 0.8982961177825928, 0.9033153057098389, 0.9071456789970398, 0.9033153057098389, 0.9095231890678406, 0.9111081957817078, 0.9100515246391296, 0.9129573106765747, 0.9196935892105103, 0.9187690019607544, 0.9185048341751099, 0.9208822846412659, 0.9255052208900452, 0.9280148148536682, 0.9257693886756897, 0.9299960136413574, 0.9340906143188477, 0.9329018592834473, 0.9323735237121582, 0.9384493231773376], "val_loss": [0.9068352154323033, 0.6195962599345616, 0.5765021187918526, 0.5388790369033813, 0.4837291581290109, 0.4495020934513637, 0.43077387128557476, 0.4166360582624163, 0.39554091010774883, 0.3872064011437552, 0.3721156801496233, 0.36738674129758564, 0.34423084769930157, 0.3395148345402309, 0.3400314279964992, 0.3348451852798462, 0.32808556727000643, 0.3296267305101667, 0.3164964573723929, 0.3100138306617737, 0.304306549685342, 0.3078444174357823, 0.30351648160389494, 0.30229406697409494, 0.3095881683485849, 0.30548711333956036, 0.29604646989277433, 0.2915357095854623, 0.29093949283872333, 0.2940476792199271, 0.2960226535797119, 0.28969585044043406, 0.28951490776879446, 0.2950666035924639, 0.30091138396944317, 0.2889242683138166, 0.30632141658238005, 0.2865599138396127, 0.3008560708590916, 0.3004095384052822, 0.3019800271306719, 0.2922329306602478, 0.30557345492499216, 0.2980229599135263, 0.2907640678542001, 0.30495348146983553, 0.3142685464450291, 0.2993711233139038, 0.30183643102645874], "val_accuracy": [0.6456666588783264, 0.7360000014305115, 0.7409999966621399, 0.7583333253860474, 0.7730000019073486, 0.7979999780654907, 0.8046666383743286, 0.8183333277702332, 0.8216666579246521, 0.8273333311080933, 0.8389999866485596, 0.8353333473205566, 0.8500000238418579, 0.8500000238418579, 0.8476666808128357, 0.8510000109672546, 0.8539999723434448, 0.8543333411216736, 0.8539999723434448, 0.8560000061988831, 0.862666666507721, 0.8629999756813049, 0.8663333058357239, 0.8696666955947876, 0.8613333106040955, 0.8643333315849304, 0.871666669845581, 0.8759999871253967, 0.875333309173584, 0.8726666569709778, 0.871999979019165, 0.8766666650772095, 0.8776666522026062, 0.8733333349227905, 0.875333309173584, 0.8776666522026062, 0.8790000081062317, 0.8833333253860474, 0.8813333511352539, 0.8820000290870667, 0.8796666860580444, 0.8823333382606506, 0.8846666812896729, 0.8856666684150696, 0.8816666603088379, 0.8856666684150696, 0.8786666393280029, 0.878000020980835, 0.8803333044052124]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 4, 1, 0, 4, 9, 1, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8417142629623413, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.03424963697923, 1.092025802954549, 0.7969284458576712, 0.711264033067842, 0.6522955907775174, 0.5926787506131102, 0.5574944537581233, 0.5165965920662317, 0.4911470212373972, 0.4778152701089789, 0.4624585325786262, 0.4320972647295022, 0.42544339972558887, 0.41190592471272514, 0.4006654673547887, 0.3903942620198425, 0.36979672683937015, 0.35590671789156464, 0.3561205195122549, 0.340846524266456, 0.33313622991989283, 0.32165619613251684, 0.31832268451498075, 0.3086816397963136, 0.30420189055910263, 0.2953983224764035, 0.2879875706502113, 0.283531805633979, 0.2740908310815186, 0.267042873959421, 0.2613404814782254, 0.24866111427171592, 0.2444303350095279, 0.23375959950446956, 0.23452891248005603, 0.2236614813342968, 0.2291011009643327, 0.2165330312196463, 0.21100535643390456, 0.20801843851588234, 0.1947811942165239, 0.18350277659033645, 0.18896258600856242, 0.1870065282254313, 0.1780286579025168, 0.16707561905822418, 0.1658795372551112], "accuracy": [0.3106590807437897, 0.6132611036300659, 0.7013604640960693, 0.735041618347168, 0.7532690763473511, 0.7788931727409363, 0.7928939461708069, 0.8062343001365662, 0.8219521641731262, 0.828292191028595, 0.8308017253875732, 0.8445383906364441, 0.8461233377456665, 0.8424250483512878, 0.8521991968154907, 0.8549728989601135, 0.8647470474243164, 0.8671245574951172, 0.8663320541381836, 0.8687095642089844, 0.8758420348167419, 0.8798044919967651, 0.8829745054244995, 0.8864086866378784, 0.8850878477096558, 0.8870691061019897, 0.8953903317451477, 0.8947299122810364, 0.8976356983184814, 0.8993527889251709, 0.8985602855682373, 0.906749427318573, 0.9064852595329285, 0.9124290347099304, 0.91124027967453, 0.913617730140686, 0.9115044474601746, 0.9190331697463989, 0.9170519113540649, 0.9236560463905334, 0.9248448014259338, 0.9295997619628906, 0.9280148148536682, 0.9253731369972229, 0.9314489364624023, 0.9380530714988708, 0.9338264465332031], "val_loss": [0.9125497000558036, 0.6188243797847203, 0.5722907611301967, 0.5365401336124965, 0.478985071182251, 0.4484244244439261, 0.4280305675097874, 0.4151262470654079, 0.3937821388244629, 0.38038986921310425, 0.37084117106028963, 0.36139317069734844, 0.3444081630025591, 0.3390785115105765, 0.3433232733181545, 0.3332741601126535, 0.32744312286376953, 0.32766252756118774, 0.31445259707314627, 0.30846875054495676, 0.3037469812801906, 0.3064259035246713, 0.3005002737045288, 0.3065110445022583, 0.3040687016078404, 0.2986998132296971, 0.29706764221191406, 0.2980313386235918, 0.28931794847760883, 0.29344373089926584, 0.2875985247748239, 0.28505185672215055, 0.28563696997506277, 0.29455063172749113, 0.29490548372268677, 0.2884340286254883, 0.284403920173645, 0.28883741583142963, 0.3033972382545471, 0.301373941557748, 0.3018096515110561, 0.29593747002737864, 0.2974045532090323, 0.30279200417654856, 0.29596154178891865, 0.30751441206250874, 0.3127278685569763], "val_accuracy": [0.6443333625793457, 0.734666645526886, 0.7443333268165588, 0.7646666765213013, 0.7770000100135803, 0.7983333468437195, 0.809333324432373, 0.8163333535194397, 0.8253333568572998, 0.8349999785423279, 0.8343333601951599, 0.8379999995231628, 0.8486666679382324, 0.8513333201408386, 0.8433333039283752, 0.8496666550636292, 0.8546666502952576, 0.8539999723434448, 0.8579999804496765, 0.8613333106040955, 0.8633333444595337, 0.8656666874885559, 0.8700000047683716, 0.8636666536331177, 0.8673333525657654, 0.8673333525657654, 0.8713333606719971, 0.871666669845581, 0.8743333220481873, 0.8769999742507935, 0.8759999871253967, 0.8769999742507935, 0.8799999952316284, 0.8730000257492065, 0.8756666779518127, 0.8806666731834412, 0.8803333044052124, 0.8786666393280029, 0.8799999952316284, 0.8833333253860474, 0.8849999904632568, 0.8870000243186951, 0.8853333592414856, 0.8826666474342346, 0.8830000162124634, 0.8843333125114441, 0.8840000033378601]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 1, 0, 4, 9, 1, 2, 2, 2, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8402857184410095, "mapping_values": [1, 16, 16, 9, 7, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad))), grad))))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0333578872674365, 1.0989371296153676, 0.8024566914065009, 0.713195933075062, 0.6573157718688301, 0.5951527180436769, 0.5578931012425707, 0.5233395624516616, 0.4950516471387593, 0.4778179003223688, 0.46142025115373125, 0.43755710392643227, 0.4301671617381593, 0.41244979449755104, 0.4059805388322139, 0.3936679653598018, 0.37828319814100936, 0.3609788154669253, 0.36007156466622126, 0.34438247391970056, 0.3442607822435218, 0.3255869214167259, 0.32898394147229626, 0.31448159289397837, 0.30424491184703456, 0.3011391772735451, 0.28784427006231117, 0.29370463394753415, 0.2834097890215559, 0.27509972181113607, 0.2678298472181177, 0.2573571911286117, 0.2523789471737414, 0.2423874912457522, 0.24009407651485815, 0.22711958825832282, 0.2229203698740124, 0.21740899062891994, 0.21376234661232227, 0.2105154868925347, 0.2015988221946819], "accuracy": [0.3105269968509674, 0.6161669492721558, 0.6988508701324463, 0.7327961921691895, 0.7526086568832397, 0.7800818681716919, 0.7954035401344299, 0.8055738806724548, 0.8182538747787476, 0.8276317715644836, 0.8327829837799072, 0.8417646288871765, 0.8448025584220886, 0.8429533839225769, 0.8500858545303345, 0.8507462739944458, 0.8636903762817383, 0.8648791313171387, 0.8671245574951172, 0.8729361891746521, 0.8734645247459412, 0.8754457831382751, 0.8761062026023865, 0.8848236799240112, 0.8874653577804565, 0.887597382068634, 0.8893144726753235, 0.8903711438179016, 0.8927486538887024, 0.897899866104126, 0.8996169567108154, 0.9019944667816162, 0.9026548862457275, 0.9116365313529968, 0.9076740145683289, 0.9138818979263306, 0.9121648669242859, 0.9167877435684204, 0.9181085824966431, 0.9216747879981995, 0.9225993752479553], "val_loss": [0.9067501681191581, 0.6195641926356724, 0.5768406391143799, 0.5389132669993809, 0.48322408539908274, 0.4486237253461565, 0.4299424546105521, 0.4162770594869341, 0.39897737332752775, 0.3865259715488979, 0.3739395652498518, 0.36887762376240324, 0.34450734513146536, 0.3379686049052647, 0.33984514645167757, 0.32876977750233244, 0.32540707077298847, 0.32718803201402935, 0.31761406149183, 0.31205226693834576, 0.3035659875188555, 0.31126287153788973, 0.30650303193501066, 0.30172512360981535, 0.30645008598055157, 0.3036834682737078, 0.30251857212611605, 0.293691303048815, 0.2901225175176348, 0.2909572294780186, 0.29646297863551546, 0.2878936699458531, 0.29378793069294523, 0.2968038150242397, 0.2942858168057033, 0.28882545232772827, 0.2987384796142578, 0.29441767930984497, 0.29964435952050344, 0.29200675657817293, 0.30754378863743376], "val_accuracy": [0.6456666588783264, 0.7353333234786987, 0.7426666617393494, 0.762666642665863, 0.7723333239555359, 0.7996666431427002, 0.8040000200271606, 0.8143333196640015, 0.8196666836738586, 0.8270000219345093, 0.8373333215713501, 0.8363333344459534, 0.8486666679382324, 0.8513333201408386, 0.8473333120346069, 0.8526666760444641, 0.859666645526886, 0.8550000190734863, 0.8543333411216736, 0.8583333492279053, 0.8636666536331177, 0.8603333234786987, 0.8636666536331177, 0.8659999966621399, 0.8646666407585144, 0.8659999966621399, 0.8656666874885559, 0.8683333396911621, 0.875333309173584, 0.874666690826416, 0.8666666746139526, 0.878333330154419, 0.8763333559036255, 0.8693333268165588, 0.874666690826416, 0.8833333253860474, 0.8830000162124634, 0.8823333382606506, 0.8816666603088379, 0.8820000290870667, 0.8796666860580444]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 1, 0, 4, 9, 1, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.838857114315033, "mapping_values": [1, 20, 20, 12, 8, 1, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.034247167688933, 1.0917973268568997, 0.7967560991729491, 0.70928019185218, 0.6522041992378461, 0.5927344676903793, 0.5568089970130301, 0.5189293986849419, 0.49191835859999317, 0.4798456548802085, 0.45932083368191173, 0.4306383598765614, 0.4241221044923588, 0.40863766830516385, 0.3968472699242938, 0.3838484222036169, 0.37020855375631156, 0.35306257407080466, 0.35787017254340664, 0.34129780196731024, 0.3364128660075558, 0.3214809494428883, 0.3180986099892824, 0.31143424528984426, 0.3046653831852205, 0.2931130803524149, 0.2883921563034879, 0.2913851064382968, 0.27412866135283454, 0.2664668381198396, 0.25586300038697773, 0.2478361290561808, 0.24545972750108508, 0.23331469267098942, 0.22837129425591546, 0.22308971127341404, 0.22164199216774252, 0.21632637791684936, 0.20531080200482887, 0.21046863589595732, 0.203450154994835, 0.18786543367592698, 0.1873201913408332, 0.1827857416886317, 0.17515380995668173, 0.1770662896157004, 0.1722828165855957, 0.17069895334050733, 0.16449171142720778, 0.15468308088872662, 0.154011110466044], "accuracy": [0.3105269968509674, 0.6132611036300659, 0.6997754573822021, 0.7362303733825684, 0.7541936039924622, 0.7771760821342468, 0.7960638999938965, 0.8057059645652771, 0.8204993009567261, 0.8300092220306396, 0.830669641494751, 0.845859169960022, 0.8470479249954224, 0.8436138033866882, 0.8506141901016235, 0.8576145768165588, 0.8663320541381836, 0.8663320541381836, 0.8634262084960938, 0.8729361891746521, 0.873860776424408, 0.8811253309249878, 0.8829745054244995, 0.8858803510665894, 0.8850878477096558, 0.8883898854255676, 0.8922203183174133, 0.8898428082466125, 0.8992207050323486, 0.901862382888794, 0.9017302989959717, 0.9095231890678406, 0.9079381823539734, 0.9121648669242859, 0.9129573106765747, 0.9142781496047974, 0.9133535623550415, 0.9198256731033325, 0.9199577569961548, 0.9182406663894653, 0.9216747879981995, 0.9280148148536682, 0.9270902276039124, 0.930260181427002, 0.9317131042480469, 0.9346189498901367, 0.9301280975341797, 0.9317131042480469, 0.9402984976768494, 0.9408268332481384, 0.9380530714988708], "val_loss": [0.9125219753810337, 0.618733320917402, 0.570254955972944, 0.5369622366768974, 0.47906364713396343, 0.44751124722617014, 0.42748152358191355, 0.4167124799319676, 0.39655044249125887, 0.3800451414925711, 0.36877699409212383, 0.3629967144557408, 0.3413588149206979, 0.3379681876727513, 0.34201628821236746, 0.33260721819741385, 0.3250858954020909, 0.3272832121167864, 0.3105765240533011, 0.3089539408683777, 0.3034053274563381, 0.3049180933407375, 0.2993701100349426, 0.30252810035433086, 0.30044553109577726, 0.2981477124350412, 0.3028683662414551, 0.2994028925895691, 0.29104373284748625, 0.2881387642451695, 0.2913485084261213, 0.2881561006818499, 0.28512693302971975, 0.2918145997183664, 0.29117932489940096, 0.28608455828257967, 0.29212893758501324, 0.2925323673657009, 0.3094684141022818, 0.2907414862087795, 0.29546609946659635, 0.29556522199085783, 0.3024785263197763, 0.30116693462644306, 0.29883305515561787, 0.3045152596064976, 0.31443071365356445, 0.3026490296636309, 0.30400584425245014, 0.3023001551628113, 0.31538390261786325], "val_accuracy": [0.643666684627533, 0.734333336353302, 0.7450000047683716, 0.7643333077430725, 0.7766666412353516, 0.79666668176651, 0.8109999895095825, 0.8149999976158142, 0.8209999799728394, 0.8323333263397217, 0.8399999737739563, 0.8386666774749756, 0.8510000109672546, 0.8529999852180481, 0.8429999947547913, 0.8533333539962769, 0.8600000143051147, 0.8600000143051147, 0.859000027179718, 0.862333357334137, 0.862666666507721, 0.862333357334137, 0.8683333396911621, 0.8629999756813049, 0.8693333268165588, 0.8666666746139526, 0.8696666955947876, 0.8723333477973938, 0.878000020980835, 0.878333330154419, 0.8756666779518127, 0.8723333477973938, 0.8806666731834412, 0.8733333349227905, 0.8820000290870667, 0.8826666474342346, 0.8806666731834412, 0.8796666860580444, 0.878000020980835, 0.8830000162124634, 0.8820000290870667, 0.8833333253860474, 0.8816666603088379, 0.8830000162124634, 0.8859999775886536, 0.8870000243186951, 0.8823333382606506, 0.8859999775886536, 0.8846666812896729, 0.8859999775886536, 0.8853333592414856]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 1, 0, 4, 1, 1, 4, 4, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8059999942779541, "mapping_values": [1, 30, 30, 18, 12, 1, 5, 5, 2, 3, 2, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.square(grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))))), tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), alpha)))))))))), tf.math.divide_no_nan(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2582472467844465, 1.8320157737024014, 1.3155191873814436, 0.928693600665183, 0.826951889581747, 0.7750674184791133, 0.710363111066434, 0.6799307978620871, 0.6470224452828057, 0.6251600727885706, 0.5831088224312003, 0.5665964626554233, 0.5468661529497306, 0.5228329707193431, 0.5150877409812057, 0.4922259979283632, 0.47455631856432745, 0.4691919020343025, 0.4592794828631575, 0.43687393119416734, 0.43167038259725404, 0.4210063935097702, 0.40401711122329287, 0.39197582878755965, 0.3867010801790444, 0.37459560515480333, 0.35803576431584916, 0.359908637420581, 0.3457236555250581, 0.34382115166499994, 0.328427090628776, 0.3212004278936186, 0.3159102669457844, 0.31354079094104415, 0.30164503915403434, 0.3037932620206293, 0.296184658126399, 0.2935032861154975, 0.28604910518467747, 0.27604038242052387, 0.27301384342297774, 0.26413823519132834, 0.2599650499701358, 0.24312866342467654, 0.2387555300945367, 0.23083680705576368, 0.23582401897661312, 0.22610647893931338, 0.2297929609102139, 0.2200449702781756, 0.2128082619225423, 0.21745736966468812, 0.19945785346370978, 0.2020003833019376, 0.1929686210469925, 0.1942260879504131, 0.1811387907768269, 0.17628420025342492, 0.1801587025254961, 0.16994199448250005, 0.16570289011613143, 0.1613616253568071, 0.15144731390351837, 0.15263873847082637, 0.15483609957662572, 0.15161304820829363, 0.15112881108148143, 0.14154616074633872, 0.14714428300847152, 0.14228031970585153, 0.1382432156282409, 0.13559563673088942, 0.12838486863590265, 0.12580374644149359, 0.13357651517879632, 0.12476781661409539, 0.12310995560091689], "accuracy": [0.1966715157032013, 0.4364020526409149, 0.5531634092330933, 0.6643772125244141, 0.6942279934883118, 0.7103421092033386, 0.7310791015625, 0.7474573850631714, 0.7588165402412415, 0.7619865536689758, 0.7775723338127136, 0.7872143983840942, 0.7976489067077637, 0.8067626357078552, 0.8103289008140564, 0.8226125836372375, 0.8298771381378174, 0.8290846943855286, 0.8321225643157959, 0.8347642421722412, 0.8399154543876648, 0.8429533839225769, 0.8537842035293579, 0.8514066934585571, 0.8593316674232483, 0.8651432991027832, 0.8656716346740723, 0.8671245574951172, 0.8751816153526306, 0.8774270415306091, 0.8803328275680542, 0.8840311765670776, 0.8820499181747437, 0.8850878477096558, 0.8857482671737671, 0.8824461698532104, 0.8907673954963684, 0.8858803510665894, 0.8906353116035461, 0.8923524022102356, 0.8928807377815247, 0.901862382888794, 0.8989565372467041, 0.9093911051750183, 0.9083344340324402, 0.913089394569397, 0.9116365313529968, 0.9140139818191528, 0.9128252267837524, 0.9144102334976196, 0.9182406663894653, 0.9145423173904419, 0.9220710396766663, 0.9198256731033325, 0.924448549747467, 0.9237881302833557, 0.9298639297485352, 0.9321093559265137, 0.9319772720336914, 0.9359397888183594, 0.9329018592834473, 0.9371285438537598, 0.9387134909629822, 0.9392418265342712, 0.9385814070701599, 0.9408268332481384, 0.9385814070701599, 0.943600594997406, 0.939638078212738, 0.9437326788902283, 0.9472988843917847, 0.9476951360702515, 0.9462422132492065, 0.94994056224823, 0.9463742971420288, 0.9515255689620972, 0.9535068273544312], "val_loss": [1.8109538214547294, 0.9961586339133126, 0.7196269716535296, 0.6763976642063686, 0.5943535225731986, 0.5623300416128976, 0.5493704080581665, 0.5222638845443726, 0.4968923500605992, 0.4766599791390555, 0.4579400505338396, 0.4392235279083252, 0.42880756514413015, 0.4140116402081081, 0.4081826039722988, 0.3954714025769915, 0.3931709613118853, 0.3797440954617092, 0.37207930428641184, 0.3593516094344003, 0.35828265122004915, 0.3465041603360857, 0.34142452478408813, 0.3360127466065543, 0.3301476921354021, 0.3323342033794948, 0.32801940611430574, 0.31928910527910503, 0.3140282801219395, 0.3148338794708252, 0.3062039954321725, 0.30476367473602295, 0.3066149353981018, 0.30374338797160555, 0.3028526306152344, 0.2979354773248945, 0.300014853477478, 0.29758812699999126, 0.2961198943001883, 0.3068117754799979, 0.29746754680361065, 0.29551162890025545, 0.28947309085300993, 0.2841735907963344, 0.28830727509089876, 0.295593934399741, 0.29068429129464285, 0.29340021099363056, 0.29446042435509817, 0.2920298916952951, 0.28877479689461844, 0.3036735824176243, 0.2965729406901768, 0.2900578720229013, 0.29352874415261404, 0.3007495829037258, 0.3005396808896746, 0.3066022992134094, 0.30211218765803743, 0.3058057597705296, 0.30459755659103394, 0.3088371327945164, 0.3102759633745466, 0.3246944546699524, 0.31067226614270893, 0.30677505901881624, 0.3149716854095459, 0.3211619428225926, 0.3156986321721758, 0.3179358754839216, 0.3273174592426845, 0.3334231036049979, 0.3269952195031302, 0.32347625494003296, 0.33530424322400776, 0.33220005886895315, 0.3386362705911909], "val_accuracy": [0.43066665530204773, 0.6340000033378601, 0.6936666369438171, 0.7110000252723694, 0.7300000190734863, 0.7446666955947876, 0.7606666684150696, 0.768666684627533, 0.7839999794960022, 0.7710000276565552, 0.8003333210945129, 0.7983333468437195, 0.8040000200271606, 0.812333345413208, 0.8186666369438171, 0.8270000219345093, 0.8306666612625122, 0.828000009059906, 0.8363333344459534, 0.8410000205039978, 0.843666672706604, 0.8476666808128357, 0.8519999980926514, 0.8586666584014893, 0.859000027179718, 0.8583333492279053, 0.8553333282470703, 0.8550000190734863, 0.862333357334137, 0.8643333315849304, 0.8659999966621399, 0.8600000143051147, 0.8669999837875366, 0.8679999709129333, 0.8666666746139526, 0.8686666488647461, 0.8690000176429749, 0.8726666569709778, 0.8673333525657654, 0.8679999709129333, 0.8706666827201843, 0.875333309173584, 0.875333309173584, 0.8803333044052124, 0.8799999952316284, 0.8803333044052124, 0.8793333172798157, 0.8806666731834412, 0.8836666941642761, 0.8786666393280029, 0.8806666731834412, 0.8820000290870667, 0.8803333044052124, 0.8840000033378601, 0.8836666941642761, 0.8836666941642761, 0.8849999904632568, 0.8833333253860474, 0.8830000162124634, 0.8870000243186951, 0.887666642665863, 0.887666642665863, 0.8880000114440918, 0.8856666684150696, 0.8883333206176758, 0.8889999985694885, 0.890333354473114, 0.8880000114440918, 0.8893333077430725, 0.8836666941642761, 0.8913333415985107, 0.8916666507720947, 0.8889999985694885, 0.887666642665863, 0.887333333492279, 0.8896666765213013, 0.890999972820282]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 1, 5, 4, 9, 1, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7817142605781555, "mapping_values": [1, 19, 19, 11, 8, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.214432240004836, 1.707363254578988, 1.247453951942702, 1.095849497742452, 0.9843686388279264, 0.8806543828096088, 0.8334103749019123, 0.8047346703097049, 0.7820771082816517, 0.7774778138204037, 0.7356101389275157, 0.7205169093906446, 0.7027255857562377, 0.7005578283825256, 0.6901544299045055, 0.6698591059477038, 0.6630104350816965, 0.6425721282263662, 0.6405342328250841, 0.6301585656383238], "accuracy": [0.2557125985622406, 0.4671773910522461, 0.5638620853424072, 0.6096948981285095, 0.6440364718437195, 0.6769251227378845, 0.6977941989898682, 0.707568347454071, 0.7062475085258484, 0.709021270275116, 0.7312111854553223, 0.7284374833106995, 0.7416457533836365, 0.739400327205658, 0.7417778372764587, 0.7530049085617065, 0.7516840696334839, 0.7572315335273743, 0.7585523724555969, 0.7655527591705322], "val_loss": [1.6902267592293876, 1.0113922187260218, 0.8432086365563529, 0.7447554894856044, 0.7025922025953021, 0.6145370858056205, 0.6415708065032959, 0.5670455353600639, 0.6086796692439488, 0.5473278420312064, 0.548067569732666, 0.5392630440848214, 0.5143394810812814, 0.5478145054408482, 0.49475988319941927, 0.5303632191249302, 0.49490353039332796, 0.4910703045981271, 0.5045811448778424, 0.482858487537929], "val_accuracy": [0.54666668176651, 0.6573333144187927, 0.6186666488647461, 0.6650000214576721, 0.6983333230018616, 0.734000027179718, 0.7076666951179504, 0.7429999709129333, 0.7196666598320007, 0.7543333172798157, 0.7590000033378601, 0.7583333253860474, 0.7580000162124634, 0.746666669845581, 0.7923333048820496, 0.7620000243186951, 0.781000018119812, 0.7863333225250244, 0.7639999985694885, 0.7689999938011169]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 4, 2, 8, 5, 8, 3, 2, 2, 5, 6, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.6011428833007812, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.01185486537433, 1.1670012750315109, 0.8626458424351015, 0.7917445512133472, 0.7072527832705284, 0.655226982201977, 0.613483432655274, 0.5955234360559474, 0.5605956929282049, 0.5561524157148736, 0.5381481505781825, 0.5223201112409609, 0.5030886407824965, 0.4853394367652027, 0.4959512005439918, 0.5073874458983558, 0.5065606070972468, 0.5092563918946583, 0.5168494465580674, 0.5201842148880901, 0.5059281748598593], "accuracy": [0.30986660718917847, 0.6001849174499512, 0.6782459616661072, 0.709549605846405, 0.7318716049194336, 0.7511557340621948, 0.7685906887054443, 0.7695152759552002, 0.7886672616004944, 0.7907806038856506, 0.7938185334205627, 0.8058380484580994, 0.8061022162437439, 0.8182538747787476, 0.8099326491355896, 0.806630551815033, 0.8128384351730347, 0.8057059645652771, 0.811649739742279, 0.8088759779930115, 0.81112140417099], "val_loss": [0.8822527612958636, 0.6248288324901036, 0.6267658982958112, 0.5245474236352103, 0.514138000352042, 0.46065304960523334, 0.4547528198787144, 0.42799908774239676, 0.4239428639411926, 0.4189207213265555, 0.40880279881613596, 0.4098496266773769, 0.40572344405310495, 0.3863626718521118, 0.40087471689496723, 0.4031424181801932, 0.4080378753798349, 0.42084566184452604, 0.46886731897081646, 0.42334782225745066, 0.42635457856314524], "val_accuracy": [0.6573333144187927, 0.7203333377838135, 0.7356666922569275, 0.7683333158493042, 0.7666666507720947, 0.7923333048820496, 0.7979999780654907, 0.8026666641235352, 0.8146666884422302, 0.8176666498184204, 0.828000009059906, 0.8293333053588867, 0.8263333439826965, 0.8396666646003723, 0.840666651725769, 0.8410000205039978, 0.8303333520889282, 0.8339999914169312, 0.8240000009536743, 0.8276666402816772, 0.8263333439826965]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 5, 0, 4, 9, 1, 0, 2, 5, 4, 3, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [72, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [2, 3, 9, 0, 1, 9], [3, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.2697142958641052, "mapping_values": [1, 9, 9, 6, 3, 1, 5, 5, 2, 3, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.785638664250896, 3.0358003377442064, 2.306035930769334, 2.30360522844599, 2.302465400108808, 2.2861839849494467], "accuracy": [0.2075023055076599, 0.18240654468536377, 0.09853387624025345, 0.10117553919553757, 0.10460969805717468, 0.13432836532592773], "val_loss": [1.8430055209568568, 1.9779437610081263, 1.974395683833531, 1.9735822677612305, 1.9711743082318987, 2.0166119847978865], "val_accuracy": [0.2773333191871643, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.23533333837985992]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 1, 0, 0, 0, 1, 2, 2, 5, 2, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 2, 0, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [83, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.21799999475479126, "mapping_values": [1, 5, 5, 2, 3, 0, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.676424639871517, 10.336294508503098, NaN, NaN, NaN, NaN], "accuracy": [0.16563200950622559, 0.19759608805179596, 0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.044057709830148, 35708.19642857143, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09066666662693024, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 1, 0, 4, 9, 1, 2, 2, 5, 4, 5, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.1022857129573822, "mapping_values": [1, 30, 30, 19, 11, 2, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.subtract(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), grad), tf.math.subtract(alpha, alpha))))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4881049804778193, 2.3014053159055456, 2.298137930295786, 2.3020722791109702, 2.304315888949389, 2.305563746032745, 2.3072776327421636, 2.3100881260997976], "accuracy": [0.09576013684272766, 0.08572183549404144, 0.09166556596755981, 0.10421344637870789, 0.09972262382507324, 0.09549596905708313, 0.1006472036242485, 0.09708096832036972], "val_loss": [1.968775681086949, 1.9694215910775321, 1.9717487607683455, 1.9746078082493372, 1.9755112103053503, 1.9768648828778947, 1.9789670535496302, 1.9823949677603585], "val_accuracy": [0.09933333098888397, 0.12099999934434891, 0.14499999582767487, 0.1003333330154419, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 8, 2, 8, 2, 8, 3, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [7, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3023240193399883, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 2, 8, 8, 8, 6, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [74, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023240193399883, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 4, 1, 0, 4, 1, 6, 2, 2, 5, 8, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [46, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [6, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 17, 10, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(alpha)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))))), tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), alpha)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 1, 0, 4, 9, 0, 2, 2, 5, 4, 0, 1, 5, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [74, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [36183339.813246936, 5541031318.976093, 93333221050.85193, 655090406796.1559, 2914000459321.28, 9600961378919.4], "accuracy": [0.09721305221319199, 0.09893012791872025, 0.1006472036242485, 0.09919429570436478, 0.09760929644107819, 0.09536388516426086], "val_loss": [300707300.5714286, 16218631606.857143, 174138799835.42856, 949552714313.1428, 3557265768448.0, 10493841525028.572], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [4, 4, 1, 0, 4, 9, 1, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 0, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [0, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 21, 10, 4, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.negative(grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), grad), tf.math.sqrt(grad))), alpha)))), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.012920860947556, 10.270042859552213, 26.791437864775954, 54.18986852744378, 95.54749567356596, 152.58340100192785], "accuracy": [0.09589222073554993, 0.09919429570436478, 0.10051512718200684, 0.1002509593963623, 0.09813763201236725, 0.09576013684272766], "val_loss": [3.8182405744280135, 11.442135402134486, 25.38975034441267, 46.96089717320034, 77.68674795968192, 119.32506888253349], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 4, 2, 8, 4, 9, 0, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [95, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [0, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.sqrt(alpha))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.012920860947556, 10.270042859552213, 26.791437864775954, 54.18986852744378, 95.54749567356596, 152.58340100192785], "accuracy": [0.09589222073554993, 0.09919429570436478, 0.10051512718200684, 0.1002509593963623, 0.09813763201236725, 0.09576013684272766], "val_loss": [3.8182405744280135, 11.442135402134486, 25.38975034441267, 46.96089717320034, 77.68674795968192, 119.32506888253349], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 4, 2, 6, 3, 8, 3, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [61, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [4, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 8, 6, 8, 3, 8, 6, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [8, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 1, 0, 4, 9, 1, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [5, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [5, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [3, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3005115759449866, 2.3039853271791224, 2.303177129732635, 2.3032012134101554, 2.302239026470333, 2.3032378624490444], "accuracy": [0.09589222073554993, 0.09325055778026581, 0.08479725569486618, 0.09232597798109055, 0.09021265059709549, 0.08638224750757217], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 1, 0, 4, 9, 1, 2, 4, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 5, 5, 2, 3, 0, 5, 5, 2, 3, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3005115759449866, 2.3039853271791224, 2.303177129732635, 2.3032012134101554, 2.302239026470333, 2.3032378624490444], "accuracy": [0.09589222073554993, 0.09325055778026581, 0.08479725569486618, 0.09232597798109055, 0.09021265059709549, 0.08638224750757217], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]