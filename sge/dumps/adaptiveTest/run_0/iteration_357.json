[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8377143144607544, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, grad)))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.077085153600874, 1.6057836462745672, 1.4864279878547304, 1.0439884320556874, 0.882197629994468, 0.807699294279847, 0.757355165960231, 0.7551313224973742, 0.6897759534238493, 0.6524169713813772, 0.6254807178291741, 0.6475004686529547, 0.6047192608533897, 0.581169837383373, 0.5634545631506943, 0.5636594068451392, 0.5303611572014578, 0.5314280453721498, 0.5358698527653298, 0.5057875792017513, 0.49432562296148996, 0.492474581252598, 0.4828382847473181, 0.46736246469455106, 0.46430455368460444, 0.47438825006970575, 0.4466073664345399, 0.45387935460109785, 0.4308938160469787, 0.43058822600911745, 0.42396027473269077, 0.42502824283704277, 0.41988461964858786, 0.40811266167414834, 0.4108026250754019, 0.4025634032521722, 0.3840427266498047, 0.38557805127046363, 0.38332470023731247, 0.3858237209738584, 0.37524236749506834, 0.37597088432897746, 0.370396767463572, 0.3620206667542095, 0.34674115471316524, 0.3436889687447012, 0.35870862312210455], "accuracy": [0.31118741631507874, 0.490159809589386, 0.5326905250549316, 0.6415268778800964, 0.6687359809875488, 0.6991150379180908, 0.7148329019546509, 0.7199841737747192, 0.7368907928466797, 0.7544577717781067, 0.76542067527771, 0.7543256878852844, 0.7737419009208679, 0.78113853931427, 0.7898560166358948, 0.7930260300636292, 0.8090080618858337, 0.804649293422699, 0.802800178527832, 0.8119139075279236, 0.8156121969223022, 0.8189142942428589, 0.8211596608161926, 0.8339717388153076, 0.8289526104927063, 0.8273676037788391, 0.8399154543876648, 0.8379341959953308, 0.846387505531311, 0.8378021121025085, 0.845859169960022, 0.8421608805656433, 0.8479725122451782, 0.8498216867446899, 0.8527275323867798, 0.852859616279602, 0.8603883385658264, 0.8580108284950256, 0.8609166741371155, 0.8580108284950256, 0.8617091774940491, 0.863029956817627, 0.8626337051391602, 0.8698983192443848, 0.872407853603363, 0.8714832663536072, 0.8684453964233398], "val_loss": [1.6698032106672014, 1.7320007937295097, 1.0181827545166016, 0.6973621845245361, 0.7161773102624076, 0.6307895013264248, 0.5563000951494489, 0.5373367241450718, 0.5302366529192243, 0.5292619637080601, 0.4941324506487165, 0.4789903334208897, 0.4557971102850778, 0.477184534072876, 0.4393446445465088, 0.4303737538201468, 0.4494861194065639, 0.44342085293361116, 0.4089715651103428, 0.4305896077837263, 0.4297279289790562, 0.4137773173195975, 0.38486142669405254, 0.39582395553588867, 0.4650798865727016, 0.3671561224120004, 0.3748161622456142, 0.38917259659085957, 0.4062869037900652, 0.35870695965630667, 0.36456574712480816, 0.38899558782577515, 0.3515305774552481, 0.3482916099684579, 0.3538432632173811, 0.33791243178503855, 0.35295605659484863, 0.355728668825967, 0.3422498277255467, 0.3279484340122768, 0.3304339647293091, 0.3254692384174892, 0.33277506487710135, 0.33464508397238596, 0.33029631205967497, 0.3692407863480704, 0.323499185698373], "val_accuracy": [0.46033334732055664, 0.4493333399295807, 0.5789999961853027, 0.7103333473205566, 0.6866666674613953, 0.7049999833106995, 0.753000020980835, 0.7633333206176758, 0.7563333511352539, 0.746999979019165, 0.7663333415985107, 0.7820000052452087, 0.7923333048820496, 0.7796666622161865, 0.8013333082199097, 0.8046666383743286, 0.7929999828338623, 0.8009999990463257, 0.8203333616256714, 0.8016666769981384, 0.8023333549499512, 0.8166666626930237, 0.82833331823349, 0.8220000267028809, 0.7863333225250244, 0.8373333215713501, 0.8303333520889282, 0.8186666369438171, 0.8226666450500488, 0.8423333168029785, 0.8376666903495789, 0.8220000267028809, 0.8476666808128357, 0.847000002861023, 0.8370000123977661, 0.8510000109672546, 0.8353333473205566, 0.8393333554267883, 0.8379999995231628, 0.8583333492279053, 0.8550000190734863, 0.8603333234786987, 0.8460000157356262, 0.8479999899864197, 0.8513333201408386, 0.8316666483879089, 0.8556666374206543]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [6, 3, 2, 0, 1, 2, 0, 0], [3, 0, 3, 5, 0, 2], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8074285984039307, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 7, 6, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, grad)))))), tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.071883415391716, 1.648774077627464, 1.2676745438856014, 1.0433773250470246, 0.8789486061737852, 0.847636667854829, 0.7954454825003512, 0.7365362178758151, 0.747513139866693, 0.7069976580314601, 0.695195250979756, 0.666648018408949, 0.64227738036865, 0.6134752553325871, 0.6390193437446677, 0.6049641784014341, 0.5771433595952231, 0.5792139187118617, 0.5831861252309845, 0.5402144831814991, 0.5368278939663191, 0.5588447783900573, 0.5107276608931028, 0.5388974922956051, 0.5099225972133652, 0.5384222805429175, 0.4883051879842756, 0.501270384206559, 0.4861941093215066], "accuracy": [0.2965262234210968, 0.4579315781593323, 0.5449742674827576, 0.6040153503417969, 0.6814159154891968, 0.6803592443466187, 0.6950204968452454, 0.7253995537757874, 0.7143045663833618, 0.7236824631690979, 0.7384757399559021, 0.7440232634544373, 0.7497028112411499, 0.7660810947418213, 0.7561748623847961, 0.7759873270988464, 0.7895918488502502, 0.7866860628128052, 0.7781006693840027, 0.7918372750282288, 0.7987055778503418, 0.7910447716712952, 0.8138951063156128, 0.7942147850990295, 0.8078193068504333, 0.7991018295288086, 0.8232730031013489, 0.8087438941001892, 0.8228767514228821], "val_loss": [1.6843179294041224, 1.2010197980063302, 0.7718946593148368, 0.834612318447658, 0.7113557713372367, 0.6197870118277413, 0.5690707649503436, 0.5972480433327811, 0.572037764957973, 0.5422118050711495, 0.5175934859684536, 0.5114437852587018, 0.5366508620125907, 0.5442831686564854, 0.49672956126076834, 0.4591608728681292, 0.4660701411111014, 0.46614037241254536, 0.4558969736099243, 0.42482290097645353, 0.5485710416521344, 0.4432323660169329, 0.4514108385358538, 0.4127897620201111, 0.47474820273263113, 0.410078193460192, 0.41691320283072336, 0.42359983921051025, 0.4252884728567941], "val_accuracy": [0.47600001096725464, 0.421999990940094, 0.6263333559036255, 0.6466666460037231, 0.6613333225250244, 0.721666693687439, 0.7523333430290222, 0.7213333249092102, 0.7363333106040955, 0.7603333592414856, 0.768666684627533, 0.7793333530426025, 0.7306666374206543, 0.7423333525657654, 0.7670000195503235, 0.7960000038146973, 0.7916666865348816, 0.7903333306312561, 0.7866666913032532, 0.8143333196640015, 0.7480000257492065, 0.7956666946411133, 0.7940000295639038, 0.8176666498184204, 0.7766666412353516, 0.8140000104904175, 0.8109999895095825, 0.7996666431427002, 0.8043333292007446]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.800000011920929, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0732030258863956, 1.5985367891574658, 1.312528264646942, 1.046350312380979, 0.9342765325741635, 0.8204726715129459, 0.7735460701320686, 0.7414632275072717, 0.7070813015656401, 0.6791719460232288, 0.6855330879441688, 0.6603769907436792, 0.6649736655056043, 0.602140594829327, 0.6136275958769263, 0.5815758394795071, 0.5783222105446083, 0.5715534229792498, 0.5630644998136622, 0.5439077486664061, 0.515160118206192, 0.5253729620047249, 0.5256286034526102, 0.49834176831084187, 0.4930086046193553, 0.5085293819025413, 0.4805968584653456, 0.46693013656282656, 0.48128370638961854, 0.4618492738414261, 0.457769942471002], "accuracy": [0.29599788784980774, 0.4593845009803772, 0.5229163765907288, 0.6159027814865112, 0.6429798007011414, 0.685510516166687, 0.7082287669181824, 0.7144366502761841, 0.7322678565979004, 0.741909921169281, 0.7397965788841248, 0.7532690763473511, 0.7479857206344604, 0.7718927264213562, 0.7644960880279541, 0.7847048044204712, 0.7886672616004944, 0.7872143983840942, 0.7866860628128052, 0.7917051911354065, 0.8074230551719666, 0.8074230551719666, 0.8025360107421875, 0.8144234418869019, 0.8182538747787476, 0.8078193068504333, 0.8232730031013489, 0.8285563588142395, 0.817989706993103, 0.829216718673706, 0.8323867321014404], "val_loss": [1.648944582257952, 1.4143105234418596, 0.8578764029911586, 0.7837353944778442, 0.7224176951817104, 0.631172674042838, 0.5708919933864048, 0.562782781464713, 0.5479057005473545, 0.5936268397739956, 0.5578429358346122, 0.534821697643825, 0.5261383056640625, 0.5190973281860352, 0.49067412103925434, 0.47444822107042584, 0.47780794756753103, 0.4492526224681309, 0.4571139301572527, 0.42765471764973234, 0.4292938879558018, 0.4722766024725778, 0.41657328605651855, 0.4151756933757237, 0.43748678479875835, 0.4005577564239502, 0.40021022728511263, 0.42271644728524344, 0.4321602668081011, 0.4239358901977539, 0.39813687971660067], "val_accuracy": [0.46299999952316284, 0.30666667222976685, 0.593999981880188, 0.6466666460037231, 0.6636666655540466, 0.7056666612625122, 0.7286666631698608, 0.7356666922569275, 0.753333330154419, 0.7173333168029785, 0.734666645526886, 0.7563333511352539, 0.7419999837875366, 0.7453333139419556, 0.7670000195503235, 0.7923333048820496, 0.7873333096504211, 0.7956666946411133, 0.7896666526794434, 0.8106666803359985, 0.8116666674613953, 0.7856666445732117, 0.8103333115577698, 0.8149999976158142, 0.7960000038146973, 0.8233333230018616, 0.8216666579246521, 0.8019999861717224, 0.8046666383743286, 0.8073333501815796, 0.8226666450500488]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7885714173316956, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0546589095468737, 1.546750285259847, 1.2671457946953946, 1.0625803561384464, 0.9277005086894898, 0.8667928949165747, 0.7880208452285447, 0.7737131217341334, 0.7460710928031026, 0.7162727352776437, 0.6737138663206149, 0.7127625872792506, 0.6432713034477028, 0.6537378961226534, 0.6360094951616538, 0.6210052425819476, 0.5918924859517664, 0.5993590550006357, 0.5828408527415206, 0.571723511056531, 0.5948562607426984], "accuracy": [0.2880729138851166, 0.45489367842674255, 0.5480121374130249, 0.5978074073791504, 0.6501122713088989, 0.6740192770957947, 0.6966054439544678, 0.6989829540252686, 0.7127195596694946, 0.7251353859901428, 0.7400607466697693, 0.7162858247756958, 0.7464007139205933, 0.7432307600975037, 0.7473253011703491, 0.7537974119186401, 0.7689869403839111, 0.7635715007781982, 0.7705719470977783, 0.7778365015983582, 0.7667415142059326], "val_loss": [1.239464589527675, 1.1869910785130091, 0.8750333445412772, 0.7871353115354266, 0.7854246241705758, 0.6251108135495868, 0.5992913927350726, 0.657393183026995, 0.576654212815421, 0.5839598519461495, 0.5374610424041748, 0.5538227217538017, 0.5088965552193778, 0.5206027712140765, 0.524583271571568, 0.4644909245627267, 0.4797752414430891, 0.4569838047027588, 0.4758221081324986, 0.5336553198950631, 0.4668186732700893], "val_accuracy": [0.4580000042915344, 0.5360000133514404, 0.6190000176429749, 0.6463333368301392, 0.6460000276565552, 0.6923333406448364, 0.7113333344459534, 0.7133333086967468, 0.7273333072662354, 0.7379999756813049, 0.7433333396911621, 0.7396666407585144, 0.7696666717529297, 0.7710000276565552, 0.7586666941642761, 0.8076666593551636, 0.7923333048820496, 0.7993333339691162, 0.7730000019073486, 0.737333357334137, 0.7876666784286499]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7808571457862854, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2194311761774204, 1.7226764042112002, 1.2605142542525778, 1.101175334302111, 0.9584926264775097, 0.9428334616635375, 0.8300792776582547, 0.8032413984428323, 0.7991197777462044, 0.7483622151091271, 0.7437266861175297, 0.7157970627049225, 0.7041249474467004, 0.6923464277180793, 0.6828219566236886, 0.6484178223267931, 0.64583463437994, 0.6511573332600888, 0.6330402370425673, 0.6256753826941229, 0.6367323923151901, 0.6202948804875374], "accuracy": [0.24884428083896637, 0.4616298973560333, 0.551050066947937, 0.6052040457725525, 0.6524897813796997, 0.6539427042007446, 0.696209192276001, 0.7043983340263367, 0.7004358768463135, 0.7202483415603638, 0.7199841737747192, 0.7326641082763672, 0.7359662055969238, 0.7368907928466797, 0.7386078238487244, 0.7560427784919739, 0.7581561207771301, 0.752740740776062, 0.7586844563484192, 0.7651565074920654, 0.7568352818489075, 0.7606657147407532], "val_loss": [1.701223918369838, 1.0449695587158203, 0.8304589646203178, 0.7392295939581734, 0.7066234520503453, 0.6304315158299038, 0.591109071459089, 0.6523731095450265, 0.5559380735669818, 0.549794043813433, 0.5293482542037964, 0.5534455605915615, 0.5467163664954049, 0.5267584494182042, 0.5000680344445365, 0.48398094517844065, 0.48701592854091097, 0.4758218697139195, 0.471713662147522, 0.48713857786996023, 0.49456695147923063, 0.4751988649368286], "val_accuracy": [0.5220000147819519, 0.5659999847412109, 0.6493333578109741, 0.6656666398048401, 0.6863333582878113, 0.7269999980926514, 0.7406666874885559, 0.7056666612625122, 0.7666666507720947, 0.7730000019073486, 0.7703333497047424, 0.7536666393280029, 0.7459999918937683, 0.7556666731834412, 0.7876666784286499, 0.7853333353996277, 0.796999990940094, 0.7913333177566528, 0.7883333563804626, 0.7853333353996277, 0.7736666798591614, 0.7789999842643738]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 77, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07713644206523895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [9, 3, 7, 0, 6, 9], [3, 0, 3, 5, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3028886219954776, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [54, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 96, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [54, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [3, 3, 7, 5, 1, 9], [3, 0, 1, 5, 0], [45, 46, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), grad)))))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.175670325756073, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [63, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 7, 0, 4, 4, 4, 3, 9, 1, 7, 1, 8, 2, 1, 0], [3, 0, 3, 5, 0, 5], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [49.254765279918786, Infinity, 2.8886236381757495, 3.1055443832950194, 2.783453244259801, 3.0701752736851557, 2.972495678850153], "accuracy": [0.18742570281028748, 0.09536388516426086, 0.09694888442754745, 0.10077928751707077, 0.1018359512090683, 0.10170386731624603, 0.09800554811954498], "val_loss": [53.21454184395926, 2.512717996324812, 2.65348059790475, 2.171987397330148, 2.747967447553362, 2.8043778283255443, 2.1491688319614957], "val_accuracy": [0.09033333510160446, 0.10133333504199982, 0.09933333098888397, 0.1003333330154419, 0.10066666454076767, 0.09933333098888397, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [6, 3, 7, 0, 3, 9], [3, 0, 3, 5, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12389380484819412, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [54, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [8, 3, 7, 0, 6, 1], [3, 2, 3, 5, 0], [45, 12, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [1, 0, 3, 5, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85, 90, 15, 7]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [50, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 3, 7, 0, 1, 9], [3, 5, 3, 5, 0], [45, 33, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(grad, tf.math.negative(grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [5968789561369.65, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12230881303548813, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [54, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [5, 0, 3, 5, 0, 4], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2, 0, 0, 1], [6, 66, 50, 95, 9, 7]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))))", "other_info": {"loss": [5985.110510114162, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1710474193096161, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7.241566573710903e+32, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [41, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 2, 0, 1, 3, 0], [3, 0, 3, 5, 0, 2], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 7, 6, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)))))), tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301241500612893, 2.3027491465598646, 2.302494277697135, 2.301379277485394, 2.303112505039975, 2.3027968817320263], "accuracy": [0.09074098616838455, 0.08968432247638702, 0.09074098616838455, 0.08717474341392517, 0.08585391938686371, 0.0952318087220192], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 3, 3, 5, 0], [45, 57, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(grad, tf.math.negative(grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301241500612893, 2.3027491465598646, 2.302494277697135, 2.301379277485394, 2.303112505039975, 2.3027968817320263], "accuracy": [0.09074098616838455, 0.08968432247638702, 0.09074098616838455, 0.08717474341392517, 0.08585391938686371, 0.0952318087220192], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [54, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0], [5, 3, 7, 0, 3, 9], [3, 3, 3, 5, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 6, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(grad, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301241068776415, 2.302746928961616, 2.302489158830402, 2.30137066758619, 2.3030919386269537, 2.3027664264746472], "accuracy": [0.09074098616838455, 0.08968432247638702, 0.09074098616838455, 0.08717474341392517, 0.08598599582910538, 0.09576013684272766], "val_loss": [1.9709984234401159, 1.9709956986563546, 1.970991883959089, 1.9709862981523787, 1.9709783281598772, 1.970966407230922], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.03799999877810478, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [6, 3, 7, 0, 1, 3, 5, 0, 7, 9], [3, 0, 3, 5, 0, 4], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [31, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301241500612893, 2.3027491465598646, 2.302494277697135, 2.301379277485394, 2.303112505039975, 2.3027968817320263], "accuracy": [0.09074098616838455, 0.08968432247638702, 0.09074098616838455, 0.08717474341392517, 0.08585391938686371, 0.0952318087220192], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]