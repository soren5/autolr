[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [8, 2, 1, 5, 8, 6, 6, 4, 9, 8], [2, 2, 0, 1, 2, 0, 0, 1], [35, 60, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))))))))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1301804370.1622443, 26399992075.53031, 133407680888.81468, 399455406661.31714, 938156352391.4896, 1838977314609.8745], "accuracy": [0.09721305221319199, 0.10170386731624603, 0.09919429570436478, 0.09668471664190292, 0.09985470771789551, 0.09760929644107819], "val_loss": [5340471442.285714, 49356606902.85714, 189354419346.2857, 507043662116.5714, 1112499739501.7144, 2158435350235.4285], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [8, 5, 2, 1, 8, 6, 5, 6, 8], [2, 2, 0, 1, 2, 0, 0, 1], [23, 60, 84, 57], [0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [1, 3, 8, 2, 0, 9], [3, 2, 3, 2], [41, 55], [0, 1, 0], [0, 1], [8], [7], [], [0, 1, 0, 1, 1], [1, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 1, 8, 8, 4, 4, 0, 2, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(beta, grad)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 4, 5, 8, 6, 2, 4, 9, 8, 2], [2, 2, 1, 1, 2, 0, 0, 1], [35, 60, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 11, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, alpha))))))))))), grad)), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1301804424.758995, 26399993378.827633, 133407675478.69713, 399455403562.4018, 938156403099.4395, 1838977383859.3792], "accuracy": [0.09721305221319199, 0.10170386731624603, 0.09919429570436478, 0.09668471664190292, 0.09985470771789551, 0.09760929644107819], "val_loss": [5340471588.571428, 49356605732.57143, 189354419346.2857, 507043624667.4286, 1112499739501.7144, 2158435350235.4285], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [8, 5, 4, 5, 8, 6, 4, 7, 4, 8, 0, 8, 5, 0], [2, 2, 1, 1, 2, 0, 0, 1], [20, 60, 84, 57], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1, 1], [8], [4], [], [0, 0, 0, 1, 1], [8, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 14, 6, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(alpha)))))))), tf.math.add(alpha, grad)))))), tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3030774880551452, 2.3025838126438387, 2.3025876372922696, 2.3025847981870764, 2.302583494489975, 2.302588129843451], "accuracy": [0.09998679161071777, 0.10196803510189056, 0.0948355570435524, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9736433710370744, 1.9736443247113908, 1.9736448696681432, 1.9736434391566686, 1.9736413955688477, 1.973640305655343], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 6, 4, 5, 8, 6, 1, 4, 4, 0, 2, 3, 5, 9, 5, 1, 3, 3, 1, 2, 3, 3, 8, 2, 6, 0, 4, 1, 8, 7, 2, 0, 4, 9, 6, 0, 1, 6, 3, 6, 0, 1, 0, 1, 1, 6, 9, 6, 1, 5, 5], [2, 2, 2, 1, 2, 0, 0, 0, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 0, 0, 2, 2, 0, 0, 2, 1, 1, 2, 3, 3, 2, 2], [35, 60, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 0, 9], [0, 1, 3, 0], [41, 55], [0, 1, 0], [1, 1], [8], [1], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 57, 57, 35, 22, 10, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(alpha))))))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(alpha, tf.math.add(grad, tf.math.multiply(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))), grad)))))))))))))))), tf.math.add(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [9, 5, 4, 5, 8, 6, 5, 4, 4, 3, 5, 3, 5, 2, 5, 3, 3, 3, 5, 2, 7, 3, 8, 2, 4, 0, 4, 1, 2, 7, 2, 0, 4, 9, 6, 8, 1, 6, 3, 6, 0, 1, 0, 1, 4, 6, 9, 4, 1, 5, 5], [3, 0, 2, 1, 2, 0, 0, 1, 2, 2, 3, 2, 1, 3, 1, 2, 2, 3, 1, 2, 3, 2, 1, 3, 2, 0, 0, 2, 0, 1, 2, 1], [76, 19, 84, 57, 48, 93, 32, 33, 17], [0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [9, 3, 8, 1, 9, 9], [1, 3, 3, 3], [41, 55], [0, 1, 0], [1, 1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6, 74]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.35932127066796, 3.048333696890123, 4.916551173339509, 8.026372371931055, 12.457926515385994, 17.872151150978663], "accuracy": [0.08928807079792023, 0.10355303436517715, 0.10157178342342377, 0.10302469879388809, 0.1006472036242485, 0.10289261490106583], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 8, 6, 5, 4, 4, 1, 2, 3, 5, 2, 5, 2, 3, 3, 5, 9, 7, 3, 8, 2, 6, 0, 4, 1, 8, 7, 2, 0, 2, 9, 6, 8, 1, 6, 3, 6, 0, 1, 0, 1, 1, 6, 9, 6, 1, 5, 5], [2, 2, 1, 1, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [90, 60, 84, 57, 93, 59, 50, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 0, 9], [3, 1, 3, 0], [41, 55], [0, 1, 0], [1, 1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6]], "fitness": -0.09828571230173111, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.35932127066796, 3.048333696890123, 4.916551173339509, 8.026372371931055, 12.457926515385994, 17.872151150978663], "accuracy": [0.08928807079792023, 0.10355303436517715, 0.10157178342342377, 0.10302469879388809, 0.1006472036242485, 0.10289261490106583], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 5, 4, 5, 8, 6, 5, 4, 4, 1, 2, 3, 5, 2, 5, 3, 3, 3, 5, 2, 7, 3, 8, 2, 6, 0, 4, 1, 2, 7, 2, 0, 4, 9, 6, 8, 1, 6, 3, 6, 0, 1, 0, 1, 1, 6, 9, 4, 1, 5, 5], [2, 2, 1, 1, 2, 0, 0, 1, 2, 1, 3, 2, 0, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 1, 1, 2, 3, 3, 2, 3], [35, 60, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 0, 9], [0, 1, 3, 0], [41, 55], [0, 1, 0], [1, 1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.04800000041723251, "mapping_values": [1, 83, 83, 51, 32, 10, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 70, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad)))))))))))), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, grad), grad)))))), tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), grad)))))))))))), tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), grad))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.6355062257250017, 2.3415801523856326, 2.304090349256339, 2.3030287917452936, 2.3031523845230724, 2.302962860300903, 2.303189562894665, 2.3030307154062797, 2.3030316323935476, 2.3030252663246187, 2.3028679034178046], "accuracy": [0.24541011452674866, 0.09668471664190292, 0.0940430611371994, 0.09470347315073013, 0.09708096832036972, 0.09681680053472519, 0.0952318087220192, 0.09760929644107819, 0.09602430462837219, 0.09153348207473755, 0.09576013684272766], "val_loss": [2.1870269775390625, 1.974743366241455, 1.9745380537850517, 1.973731517791748, 1.9736984797886439, 1.9736623082842146, 1.9736269542149134, 1.973719937460763, 1.9736927577427454, 1.9736502511160714, 1.9736242294311523], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09833333641290665, 0.09933333098888397, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [8, 5, 4, 5, 8, 6, 5, 4, 9, 8], [2, 2, 1, 1, 2, 0, 0, 1], [20, 60, 84, 57], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.04714285582304001, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.635516106854057, 2.3415427086391407, 2.304118926168323, 2.303073926136368, 2.30304958420092, 2.3029138048358675, 2.3031458539135183, 2.3029575967014018, 2.3029839077393897, 2.303049556583288, 2.3028893842358302], "accuracy": [0.2452780306339264, 0.09470347315073013, 0.09470347315073013, 0.09351472556591034, 0.09602430462837219, 0.09866596013307571, 0.09496764093637466, 0.10091137140989304, 0.09100515395402908, 0.09219389408826828, 0.0944393053650856], "val_loss": [2.185282366616385, 1.9746344430106026, 1.9740063803536552, 1.9737531798226493, 1.9737125124250139, 1.973646640777588, 1.9736412593296595, 1.973724705832345, 1.9737436430794852, 1.9736717769077845, 1.9736285890851701], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 4, 4, 5, 8, 6, 5, 4, 9, 5, 2, 3, 5, 2, 5, 3, 3, 3, 5, 2, 7, 3, 8, 2, 6, 0, 4, 1, 2, 7, 2, 0, 4, 9, 6, 8, 1, 6, 3, 6, 0, 1, 0, 1, 1, 6, 9, 4, 1, 5, 5], [2, 2, 1, 1, 2, 0, 0, 1], [35, 60, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 8, 2, 0, 9], [0, 1, 3, 0], [68, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.04571428522467613, "mapping_values": [1, 14, 14, 10, 4, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.636953008488232, 2.343102638952295, 2.3042117137604103, 2.303053407684183, 2.3030533004257387, 2.302883481305462, 2.3031922420884134, 2.3029767536389563, 2.303216887471415, 2.3030655292109916, 2.302918598967111], "accuracy": [0.24541011452674866, 0.09642054885625839, 0.09589222073554993, 0.0948355570435524, 0.0956280529499054, 0.09879804402589798, 0.09668471664190292, 0.10011887550354004, 0.09906221181154251, 0.09602430462837219, 0.09391097724437714], "val_loss": [2.1946276256016324, 1.9746332168579102, 1.9740439823695592, 1.9737597874232702, 1.973715032849993, 1.9736691883632116, 1.9736347198486328, 1.9742121015276228, 1.973705223628453, 1.973661014011928, 1.9736438478742326], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.09833333641290665, 0.10133333504199982, 0.10000000149011612, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 5, 4, 5, 8, 6, 5, 4, 4, 1, 2, 3, 5, 2, 5, 3, 3, 3, 5, 2, 7, 3, 8, 2, 6, 0, 4, 1, 2, 7, 2, 0, 4, 9, 6, 8, 1, 6, 3, 6, 0, 1, 0, 1, 1, 6, 9, 4, 1, 5, 5], [2, 2, 1, 1, 2, 0, 0, 1], [20, 60, 84, 57], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.044857144355773926, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.637493960121446, 2.340610453292379, 2.3040932140582115, 2.3030143933226292, 2.3030369825618866, 2.3029021071153246, 2.3032087002133084, 2.3029425599240922, 2.3029992756448667, 2.3030446587205957, 2.302898873868415], "accuracy": [0.24541011452674866, 0.09945846349000931, 0.0940430611371994, 0.09668471664190292, 0.09655263274908066, 0.09826971590518951, 0.09509972482919693, 0.0956280529499054, 0.09232597798109055, 0.09245806187391281, 0.0940430611371994], "val_loss": [2.178863729749407, 1.9747661181858607, 1.9740033830915178, 1.9737444605146135, 1.9737069266183036, 1.9736706188746862, 1.9736450059073312, 1.9737467084612166, 1.9737367630004883, 1.973670142037528, 1.9736465045383997], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 5, 6, 5, 8, 6, 5, 2, 4, 1, 2, 3, 5, 2, 5, 5, 3, 3, 5, 2, 7, 3, 8, 2, 6, 0, 8, 1, 2, 5, 2, 0, 5, 9, 3, 8, 1, 6, 3, 5, 0, 1, 0, 4, 1, 6, 9, 4, 1, 5, 5], [3, 0, 2, 1, 2, 0, 0, 1, 2, 3, 1, 2, 3, 3, 2, 0, 1, 0, 1, 0, 2, 1, 2, 0, 3, 0, 0, 2, 1, 2, 0, 3], [76, 19, 84, 57, 1, 99, 54, 52, 43, 47, 6], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [9, 3, 8, 1, 9, 9], [1, 3, 3, 3], [41, 55], [0, 1, 0], [1, 1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.04399999976158142, "mapping_values": [1, 14, 14, 9, 5, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.6364985738589763, 2.3414633028448346, 2.3041705459478337, 2.303007872286348, 2.30305839995698, 2.3029021989431646, 2.3032011717475243, 2.302876789587805, 2.303006811038677, 2.3030802481493473, 2.302882515664555], "accuracy": [0.24541011452674866, 0.09589222073554993, 0.09668471664190292, 0.09655263274908066, 0.09708096832036972, 0.09774138033390045, 0.09457138925790787, 0.09642054885625839, 0.09192973375320435, 0.09245806187391281, 0.09496764093637466], "val_loss": [2.1844779423304965, 1.974606922694615, 1.9740159170968192, 1.9737608092171806, 1.9737224578857422, 1.9736603328159876, 1.9736197335379464, 1.9737362180437361, 1.973731517791748, 1.9736693246023995, 1.9736247062683105], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09833333641290665, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 3, 2, 2, 8, 6, 5], [1, 2, 2, 1, 2, 0, 0, 1], [20, 60, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 0, 9], [1, 3, 3, 3], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.04342857003211975, "mapping_values": [1, 12, 12, 7, 5, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))), alpha)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.6347831830750397, 2.3401909851363434, 2.304148148709379, 2.3030424185747704, 2.30305351135265, 2.302940413904952, 2.3031763575096265, 2.3029394402023415, 2.3030060360444584, 2.3030487316128063, 2.302896635234159], "accuracy": [0.24554219841957092, 0.09919429570436478, 0.09417514503002167, 0.09668471664190292, 0.09721305221319199, 0.09708096832036972, 0.09774138033390045, 0.09642054885625839, 0.09060890227556229, 0.09325055778026581, 0.09351472556591034], "val_loss": [2.1755750519888744, 1.9746060371398926, 1.974029200417655, 1.973756994519915, 1.9737133298601424, 1.9736477306910925, 1.9736319269452776, 1.973743098122733, 1.973731245313372, 1.973672594342913, 1.973646981375558], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09966666996479034, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 4, 5, 1, 6, 5, 4, 4, 1, 2, 3, 5, 2, 5, 3, 3, 3, 5, 2, 7, 3, 8, 2, 6, 0, 4, 1, 2, 7, 2, 0, 4, 9, 6, 8, 1, 6, 3, 6, 0, 1, 0, 1, 1, 6, 9, 4, 1, 5, 5], [2, 1, 1, 1, 2, 0, 0, 1, 2, 1, 3, 2, 0, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 1, 1, 2, 3, 3, 2, 3], [20, 60, 84, 57], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.042571429163217545, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.6391063320354906, 2.3401584160751465, 2.303910603282033, 2.3029443539050214, 2.303033666493571, 2.3030159500816385, 2.303039371061949, 2.3029690361955084, 2.302968281261075, 2.3030505748457046, 2.3028712991899143, 2.302951777127787], "accuracy": [0.24580636620521545, 0.0956280529499054, 0.09470347315073013, 0.09589222073554993, 0.09615638852119446, 0.09615638852119446, 0.09932637959718704, 0.09959053993225098, 0.09272222965955734, 0.09126931428909302, 0.09496764093637466, 0.09509972482919693], "val_loss": [2.1779613494873047, 1.974809033530099, 1.9739765439714705, 1.9737341744559151, 1.9737074715750558, 1.9736350604466029, 1.9736568587166923, 1.9737089020865304, 1.9737398283822196, 1.9736661229814803, 1.973686354500907, 1.9736296108790807], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.09833333641290665, 0.10000000149011612, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 5, 4, 5, 8, 6, 5, 4, 4, 1, 2, 3, 2, 2, 5, 3, 3, 3, 5, 2, 7, 2, 8, 2, 6, 0, 4, 1, 2, 7, 2, 0, 4, 9, 6, 8, 1, 6, 3, 6, 0, 3, 0, 1, 1, 6, 9, 4, 2, 8, 3, 8, 6, 2, 6, 2, 8, 3, 7, 9], [2, 2, 1, 1, 2, 0, 0, 1, 2, 2, 3, 2, 0, 0, 3, 2, 2, 2, 0, 0, 2, 2, 1, 0, 2, 1, 2, 2, 3, 3, 2, 3, 1, 3, 0, 2, 1, 2, 2], [35, 60, 84, 57, 93, 59, 23, 22, 72, 1, 29], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 0, 9], [0, 1, 3, 0], [41, 55], [0, 1, 0], [1, 1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.042571429163217545, "mapping_values": [1, 99, 99, 60, 39, 11, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 86, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))))))))))))), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.square(alpha), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.pow(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))), grad), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), grad)))))))), tf.math.pow(tf.math.add(alpha, alpha), grad)))))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), grad)))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))), tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), alpha)))), grad))))))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.6320629546261576, 2.337696614219465, 2.3040127801133057, 2.303089750630272, 2.303059200364459, 2.3028528396526835, 2.3032081484904836, 2.3029502635114873, 2.303055936004413, 2.303078287769822, 2.3028475011675162], "accuracy": [0.24554219841957092, 0.09457138925790787, 0.10091137140989304, 0.09668471664190292, 0.0948355570435524, 0.09853387624025345, 0.09509972482919693, 0.09576013684272766, 0.09074098616838455, 0.09008057415485382, 0.09721305221319199], "val_loss": [2.1646692412240163, 1.9747655732291085, 1.9746898242405482, 1.973771231515067, 1.9737239565168108, 1.9736634663173132, 1.9736427579607283, 1.9737365586417062, 1.9736999784197127, 1.9736871038164412, 1.973621095929827], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09833333641290665, 0.09933333098888397, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 5, 4, 4, 8, 6, 5, 4, 4, 1, 5, 3, 2, 0, 5, 1, 3, 3, 5, 2, 7, 3, 8, 2, 1, 5, 4, 1, 2, 7, 2, 0, 4, 9, 6, 8, 1, 6, 3, 6, 0, 1, 0, 1, 1, 6, 9, 4, 1, 5, 5], [2, 2, 1, 1, 2, 0, 0, 2, 2, 3, 3, 0, 3, 1, 0, 2, 2, 0, 0, 2, 2, 3, 2, 2, 1, 1, 0, 2, 2, 3, 2, 2], [35, 60, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 0, 9], [0, 1, 3, 0], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.041999999433755875, "mapping_values": [1, 83, 83, 51, 32, 9, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 58, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)))), tf.math.add(tf.math.multiply(grad, tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), grad))))), tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), alpha)), tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.square(grad)), tf.math.square(tf.math.add(alpha, grad))), grad))))))))))))))))))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.6324689321829076, 2.3421990938190422, 2.3041145235965312, 2.303117173301577, 2.3030753772429753, 2.302912906711726, 2.30315949374879, 2.3029911914883887, 2.3030402535980308, 2.3030611380074615, 2.3028922203178843], "accuracy": [0.24514594674110413, 0.09549596905708313, 0.09945846349000931, 0.09642054885625839, 0.09840179979801178, 0.09919429570436478, 0.09840179979801178, 0.09972262382507324, 0.09245806187391281, 0.08942015469074249, 0.09576013684272766], "val_loss": [2.1893864359174455, 1.9746713638305664, 1.9740291322980608, 1.9737655775887626, 1.9737177576337541, 1.9736446653093611, 1.9736429623195104, 1.9737140110560827, 1.9736922809055872, 1.9736854008265905, 1.9736433710370744], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.09833333641290665, 0.09833333641290665, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [8, 5, 4, 5, 8, 6, 5, 7, 4, 8], [2, 2, 0, 1, 2, 0, 0, 1], [43, 83, 84, 57], [0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [1, 2, 8, 2, 9, 9], [1, 3, 3, 2], [41, 55], [0, 1, 0], [1, 1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.03971428424119949, "mapping_values": [1, 10, 10, 7, 3, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, alpha)), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.6391834082179586, 2.3394839959200646, 2.3039450860215593, 2.3030360312493974, 2.3030338267199255, 2.30294510225783, 2.3031814964361446, 2.30293105751091, 2.303009810779608, 2.303050537087961, 2.3028994550668425], "accuracy": [0.24580636620521545, 0.09734513610601425, 0.09509972482919693, 0.09668471664190292, 0.09509972482919693, 0.09879804402589798, 0.09576013684272766, 0.09800554811954498, 0.09206181764602661, 0.09311848133802414, 0.09470347315073013], "val_loss": [2.174116679600307, 1.9748127801077706, 1.9744370324271066, 1.973724024636405, 1.97370331627982, 1.9736499786376953, 1.9736345836094447, 1.973748002733503, 1.9737404414585658, 1.9736722537449427, 1.973630428314209], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09833333641290665, 0.09933333098888397, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [9, 5, 4, 5, 8, 6, 5, 4, 9, 8], [1, 2, 1, 1, 2, 0, 0, 1], [20, 60, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [1, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [4, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3016275175810335, 2.3026679107274015, 2.302054614659235, 2.3029735237615867, 2.302986865943654, 2.301466336166539], "accuracy": [0.09034473448991776, 0.0940430611371994, 0.09008057415485382, 0.09060890227556229, 0.09549596905708313, 0.09179764986038208], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 3, 2, 2, 8, 6, 3], [2, 2, 2, 1, 2, 0, 0, 1], [23, 60, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [1, 8, 8, 2, 0, 9], [1, 3, 3, 3], [41, 55], [0, 1, 0], [1, 1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.03257142752408981, "mapping_values": [1, 9, 9, 5, 4, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.642263962497895, 2.337327199542149, 2.304103997310769, 2.3030143890083585, 2.303086545378887, 2.30295396241624, 2.303198564258848, 2.3029922701191072, 2.302994020075578, 2.302996672690899, 2.3028858002103503], "accuracy": [0.24554219841957092, 0.09708096832036972, 0.09351472556591034, 0.09681680053472519, 0.09589222073554993, 0.09826971590518951, 0.09774138033390045, 0.09998679161071777, 0.09787346422672272, 0.09417514503002167, 0.1002509593963623], "val_loss": [2.1610643523080006, 1.974787643977574, 1.9740018163408553, 1.9737414632524763, 1.9737104688371931, 1.973640305655343, 1.9736535889761788, 1.9737200055803572, 1.9737601280212402, 1.9736570630754744, 1.973614079611642], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.09833333641290665, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [8, 5, 2, 1, 0, 6, 5, 6, 8], [2, 1, 0, 1, 2, 0, 0, 1], [43, 83, 84, 57], [0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 3, 8, 2, 9, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1, 1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.02742857113480568, "mapping_values": [1, 14, 14, 9, 5, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.631526881961019, 2.3387436026264696, 2.3040602566181567, 2.303135379965846, 2.3030728172427706, 2.3029861893274086], "accuracy": [0.24554219841957092, 0.09655263274908066, 0.09840179979801178, 0.09787346422672272, 0.0956280529499054, 0.09391097724437714], "val_loss": [2.168902805873326, 1.97474581854684, 1.9739965030125208, 1.9737565176827567, 1.9737120355878557, 1.9736124447413854], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.09833333641290665, 0.09833333641290665, 0.1003333330154419]}}]