[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8414285778999329, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0501930768762864, 1.49592091745594, 0.8569006568342231, 0.7038818976866839, 0.6270019655308908, 0.5858684442125496, 0.547195482558704, 0.5438431264733469, 0.5067152111143909, 0.49418548067185103, 0.47166862195005127, 0.46811488485685854, 0.43261649660257345, 0.43992154716878534, 0.4021297213250557, 0.4020442172812118, 0.38877721402654875, 0.3721453023585094, 0.36383218597805245, 0.3714344903281525, 0.36075365227667916, 0.3407029608819841, 0.33807688192558516, 0.32729671432389057, 0.32098257355465787, 0.31126910134738606, 0.30843203606827224, 0.3003836724744292, 0.30258103330468206, 0.2970291001331285, 0.2957050614723235, 0.2782404822184346, 0.2833542001088376, 0.2649749271456497, 0.259986163724793, 0.25318067859680643, 0.2515674800078284, 0.24884591202702205, 0.238190009138997, 0.23509651462651673, 0.23008508603956407, 0.22124557736181014, 0.22804856251149272, 0.2204447984813526, 0.20456496717364261, 0.21072319980153256, 0.22021584597757826, 0.20522996894459225, 0.19728282947999107], "accuracy": [0.32624489068984985, 0.46070531010627747, 0.6863030195236206, 0.7316074371337891, 0.7689869403839111, 0.774270236492157, 0.7988376617431641, 0.7996301651000977, 0.8150838613510132, 0.8177255392074585, 0.8296129703521729, 0.8297450542449951, 0.8417646288871765, 0.8366134166717529, 0.8540483713150024, 0.8558974862098694, 0.8599920868873596, 0.8585391640663147, 0.8669924736022949, 0.8613129258155823, 0.868049144744873, 0.8762382864952087, 0.8747853636741638, 0.8754457831382751, 0.8787478804588318, 0.883238673210144, 0.8902390599250793, 0.8874653577804565, 0.8831065893173218, 0.886672854423523, 0.8901069760322571, 0.8928807377815247, 0.8916919827461243, 0.8977677822113037, 0.9008057117462158, 0.898428201675415, 0.9039757251739502, 0.9041078090667725, 0.9117686152458191, 0.9117686152458191, 0.9117686152458191, 0.9142781496047974, 0.9129573106765747, 0.9141460657119751, 0.9166556596755981, 0.9165235757827759, 0.9137498140335083, 0.9232597947120667, 0.9218068718910217], "val_loss": [1.6390279361179896, 0.747247576713562, 0.5829829318182809, 0.5026236261640277, 0.49044125420706614, 0.446145841053554, 0.43955583231789724, 0.41080560854503084, 0.42019929204668316, 0.37160108770642963, 0.39099447216306416, 0.35982829332351685, 0.35129240580967497, 0.34703331334250315, 0.33101647240774973, 0.3402677093233381, 0.3283326540674482, 0.33683377504348755, 0.3174065947532654, 0.33136147260665894, 0.3431256924356733, 0.3148378048624311, 0.3065296156065805, 0.34774271079472135, 0.3269490088735308, 0.30655797890254427, 0.3178994229861668, 0.31143319606781006, 0.2956861342702593, 0.32899922132492065, 0.29599148886544363, 0.2920560836791992, 0.29952227217810495, 0.3014719486236572, 0.30016887187957764, 0.29663957016808645, 0.30068107162203106, 0.30532573802130564, 0.3002851605415344, 0.31071427890232634, 0.2973581297057016, 0.29631166798727854, 0.2985672099249704, 0.3001197065625872, 0.3002984012876238, 0.30223787682397024, 0.32106999840055195, 0.3097779410226004, 0.29949439423424856], "val_accuracy": [0.3903333246707916, 0.6783333420753479, 0.7379999756813049, 0.7746666669845581, 0.7730000019073486, 0.7993333339691162, 0.7996666431427002, 0.8173333406448364, 0.809333324432373, 0.8410000205039978, 0.8240000009536743, 0.8426666855812073, 0.8460000157356262, 0.8489999771118164, 0.8569999933242798, 0.846666693687439, 0.8550000190734863, 0.8523333072662354, 0.8613333106040955, 0.8546666502952576, 0.8543333411216736, 0.8616666793823242, 0.8673333525657654, 0.8519999980926514, 0.8619999885559082, 0.8703333139419556, 0.8673333525657654, 0.8650000095367432, 0.8736666440963745, 0.8586666584014893, 0.875333309173584, 0.8743333220481873, 0.8756666779518127, 0.8756666779518127, 0.8740000128746033, 0.8736666440963745, 0.8759999871253967, 0.8759999871253967, 0.8766666650772095, 0.8706666827201843, 0.8713333606719971, 0.8790000081062317, 0.8809999823570251, 0.8833333253860474, 0.8796666860580444, 0.8830000162124634, 0.8756666779518127, 0.8786666393280029, 0.8793333172798157]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 1, 9, 2, 1, 0], [3, 5, 3, 5, 0], [45, 84, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.21942856907844543, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [6.092873712747489e+25, 2.593753809673086e+27, 1.9395019784097325e+28, 7.6185736182938615e+28, 2.1039635499384638e+29, 4.875034127874892e+29, 9.908762958383379e+29, 1.784543484778822e+30, 2.993883032888304e+30, 4.808706503768533e+30, 7.27062624916538e+30, 1.0404457858560126e+31, 1.5169303580711674e+31, 2.143747753497181e+31, 2.9644393836369433e+31, 3.823614344288178e+31, 5.039730863492127e+31, 6.650119422565982e+31, 8.495083043440574e+31, 1.0500249442767811e+32, 1.2807527046196517e+32, 1.56338005976312e+32, 1.9237645583613643e+32, 2.3501550549619227e+32, 2.818337666559419e+32, 3.30377440944745e+32, 4.0380290472753256e+32, 4.606697848003866e+32, 5.4365298495658114e+32, 6.310076547295192e+32, 7.508711187597575e+32, 8.56707910947524e+32, 9.906421935120091e+32, 1.1152123562701686e+33, 1.2766082259652967e+33, 1.4450650666326408e+33, 1.6592319492963404e+33, 1.902566304389077e+33, 2.1453764453636367e+33, 2.365806544055774e+33, 2.6055456088462223e+33, 2.9858320287434354e+33, 3.315901883329652e+33, 3.651856395771849e+33, 4.132391571669495e+33, 4.541260659387972e+33, 4.967559179550436e+33, 5.458064437236064e+33, 5.956389917117189e+33, 6.545702335238554e+33], "accuracy": [0.12230881303548813, 0.13010171055793762, 0.13551710546016693, 0.13538502156734467, 0.13789460062980652, 0.13076211512088776, 0.1286487877368927, 0.13710209727287292, 0.13881917297840118, 0.13274335861206055, 0.13697001338005066, 0.1348566859960556, 0.14397041499614716, 0.13921542465686798, 0.13802668452262878, 0.1372341811656952, 0.13657376170158386, 0.12798838317394257, 0.13881917297840118, 0.1398758441209793, 0.13340377807617188, 0.1414608359336853, 0.13551710546016693, 0.13895125687122345, 0.1372341811656952, 0.13353586196899414, 0.13697001338005066, 0.1332716941833496, 0.14000792801380157, 0.13578127324581146, 0.13432836532592773, 0.14357416331768036, 0.13895125687122345, 0.13617752492427826, 0.13617752492427826, 0.14053626358509064, 0.13895125687122345, 0.13313961029052734, 0.1356491893529892, 0.13855500519275665, 0.1372341811656952, 0.1328754425048828, 0.13630960881710052, 0.13749834895133972, 0.14753665030002594, 0.13274335861206055, 0.13195087015628815, 0.14212125539779663, 0.1394795924425125, 0.14040417969226837], "val_loss": [2.982944769964699e+26, 4.8469001780453463e+27, 2.4921165864745412e+28, 8.00034995328878e+28, 1.985800170915408e+29, 4.1889858207003434e+29, 7.894618056683923e+29, 1.3719851297013406e+30, 2.2408380006381902e+30, 3.481445836976005e+30, 5.193991241988196e+30, 7.492880090271473e+30, 1.0508389423165747e+31, 1.4387664510323855e+31, 1.9294319299728176e+31, 2.540967608476681e+31, 3.293367807052369e+31, 4.208194235803774e+31, 5.309252785644845e+31, 6.623015408869897e+31, 8.177508874540221e+31, 1.00030868921347e+32, 1.2132449316199975e+32, 1.460087218766355e+32, 1.744629118425608e+32, 2.070943646755136e+32, 2.4433306005797843e+32, 2.8663117216885832e+32, 3.344674577387929e+32, 3.883588341054361e+32, 4.488533273764472e+32, 5.165021303543181e+32, 5.918965804685287e+32, 6.756384050024603e+32, 7.684141190791491e+32, 8.709041918109037e+32, 9.838537746770854e+32, 1.1080196248449238e+33, 1.2442033084898561e+33, 1.3932329853920923e+33, 1.5559921247243114e+33, 1.733391938779716e+33, 1.9263956333331588e+33, 2.135976229255518e+33, 2.3631614820522663e+33, 2.6090054092425665e+33, 2.8746332098978397e+33, 3.1611580573862704e+33, 3.469769788934188e+33, 3.801744278600654e+33], "val_accuracy": [0.18766666948795319, 0.19099999964237213, 0.19599999487400055, 0.19566667079925537, 0.19566667079925537, 0.19599999487400055, 0.19833333790302277, 0.19966666400432587, 0.20200000703334808, 0.20466665923595428, 0.20600000023841858, 0.20666666328907013, 0.20633333921432495, 0.2070000022649765, 0.20800000429153442, 0.20800000429153442, 0.20900000631809235, 0.2096666693687439, 0.20999999344348907, 0.20999999344348907, 0.20999999344348907, 0.21066667139530182, 0.21033333241939545, 0.21066667139530182, 0.210999995470047, 0.21133333444595337, 0.210999995470047, 0.21133333444595337, 0.21133333444595337, 0.21199999749660492, 0.21266666054725647, 0.21266666054725647, 0.2133333384990692, 0.2136666625738144, 0.21400000154972076, 0.21433334052562714, 0.21433334052562714, 0.21433334052562714, 0.21466666460037231, 0.21566666662693024, 0.2163333296775818, 0.21666666865348816, 0.21699999272823334, 0.21699999272823334, 0.2173333317041397, 0.2173333317041397, 0.21699999272823334, 0.2163333296775818, 0.2163333296775818, 0.21533332765102386]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 3], [14, 84, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.subtract(grad, grad))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302106321857842, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [6, 3, 6, 0, 1, 9], [3, 3, 1, 5, 0], [45, 84, 6], [0, 1, 0], [0], [8], [3], [64], [1, 1, 0, 1, 1], [0, 8, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.negative(tf.math.subtract(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 9, 2, 1, 0], [0, 0, 3, 5, 3], [14, 84, 6], [1, 1, 0], [0, 1], [9, 3, 7, 5], [7], [64], [0, 0, 0, 1, 1], [0, 8, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.square(beta)))", "other_info": {"loss": [5.223956858335532, 31.680179151545868, 96.6136976289176, 215.92504842100897, 410.5193406793939, 695.3093061788506], "accuracy": [0.09800554811954498, 0.10421344637870789, 0.1026284471154213, 0.09694888442754745, 0.09813763201236725, 0.09906221181154251], "val_loss": [9.755162647792272, 38.7991452898298, 96.9301997593471, 194.830814906529, 344.71604701450894, 559.9768415178571], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 2, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad)))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 2, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [0, 1, 0], [0], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.add(beta, tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302579997883591, 2.3028964069242, 2.302968752681776, 2.3030003209580774, 2.302894641190724, 2.3030127867133214, 2.303002163750101, 2.3029318503605425, 2.3029826484131477, 2.302890908968463, 2.3029912875045353, 2.302891002748747], "accuracy": [0.09166556596755981, 0.0936468094587326, 0.09338264167308807, 0.09853387624025345, 0.09642054885625839, 0.09774138033390045, 0.09747721254825592, 0.09417514503002167, 0.09126931428909302, 0.09417514503002167, 0.09760929644107819, 0.09602430462837219], "val_loss": [1.9737125124250139, 1.9736922127859933, 1.9737014089311873, 1.973698343549456, 1.973686354500907, 1.973722185407366, 1.9736768177577428, 1.9736501829964774, 1.9737050192696708, 1.9737050873892648, 1.973679883139474, 1.9736572674342565], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10133333504199982, 0.1003333330154419, 0.1003333330154419, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 8, 9], [3, 0, 3, 5, 0], [68, 84, 6], [0, 1, 0], [0], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, grad)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 9, 2, 1, 0], [3, 0, 1, 5, 0], [14, 84, 6], [0, 1, 0], [0, 1], [7], [3], [64], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 3, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301657498300099, 2.3025851744418886, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10619468986988068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 9, 2, 1, 0], [3, 0, 1, 5, 0], [45, 84, 6], [0, 0, 0], [0, 1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), alpha)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10527011007070541, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [4, 3, 7, 0, 1, 9], [3, 0, 3, 3, 0], [14, 84, 6], [0, 1, 0], [1], [0], [3], [64], [0, 1, 0, 1, 1], [2, 8, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 3, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad)))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 43, 6], [0, 1, 0], [0], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [29279467.74813051, 1191251756.7856293, 5677684986.556069, 36985113908.10619, 300284870301.0963, 1005623826542.096], "accuracy": [0.09576013684272766, 0.09681680053472519, 0.09602430462837219, 0.09615638852119446, 0.10289261490106583, 0.09457138925790787], "val_loss": [132036443.42857143, 980366116.5714285, 898323072.0, 8342630985.142858, 25233782491.42857, 826689828571.4286], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.09833333641290665, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 1, 5, 0], [14, 84, 6], [0, 1, 0], [0, 1], [3], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.add(beta, tf.math.subtract(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303703536604374, 2.304600072810836, 2.3050464581756733, 2.3061776126238804, 2.308069059137403, 2.3087746671886493], "accuracy": [0.09470347315073013, 0.10289261490106583, 0.09721305221319199, 0.10210011899471283, 0.09668471664190292, 0.10077928751707077], "val_loss": [1.9738349233354842, 1.9752845764160156, 1.9762476512363978, 1.9774858610970634, 1.977534566606794, 1.977370057787214], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.10133333504199982, 0.1003333330154419, 0.10133333504199982, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 1, 5, 0], [14, 84, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 2, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), alpha)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3021267828388994, 2.302585065608893, 2.3025851969894653, 2.302585277386062, 2.302585166254221, 2.302585142856387], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736427579607283, 1.9736427579607283, 1.9736427579607283, 1.9736428260803223, 1.9736428260803223, 1.9736428260803223], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 2, 0, 4, 9], [3, 0, 1, 5, 0], [14, 84, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.36088510841946, 3.0288527315129947, 4.876529792674292, 8.005195216732002, 12.403729757344985, 17.976409984664706], "accuracy": [0.0940430611371994, 0.10355303436517715, 0.10117553919553757, 0.09787346422672272, 0.09747721254825592, 0.09932637959718704], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [1, 0, 3, 5, 0], [45, 84, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 2, 1, 1, 0, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad))), tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.36088510841946, 3.0288527315129947, 4.876529792674292, 8.005195216732002, 12.403729757344985, 17.976409984664706], "accuracy": [0.0940430611371994, 0.10355303436517715, 0.10117553919553757, 0.09787346422672272, 0.09747721254825592, 0.09932637959718704], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [6, 3, 7, 9, 1, 9], [3, 2, 3, 5, 0], [45, 84, 6], [0, 1, 0], [0], [9], [2], [64], [0, 1, 0, 1, 1], [0, 8, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.06971428543329239, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.5935007374221466, 3.1232195555526094, NaN, NaN, NaN, NaN], "accuracy": [0.17738740146160126, 0.148064985871315, 0.11279883980751038, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9883762087140764, 2.0520056315830777, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 1, 5, 0], [45, 84, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 6, 4, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301985600841453, 2.3021983393998022, 2.3022728653127933, 2.3016841653441675, 2.3030057900995233, 2.3041266303540473], "accuracy": [0.09232597798109055, 0.09391097724437714, 0.08809932321310043, 0.09008057415485382, 0.09008057415485382, 0.08942015469074249], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.301985600841453, 2.3021983393998022, 2.3022728653127933, 2.3016841653441675, 2.3030057900995233, 2.3041266303540473], "accuracy": [0.09232597798109055, 0.09391097724437714, 0.08809932321310043, 0.09008057415485382, 0.09008057415485382, 0.08942015469074249], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]