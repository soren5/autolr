[{"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8362857103347778, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1735205182372903, 1.698271586863183, 1.0528518844116885, 0.8005794779247596, 0.7060493655791136, 0.6474692022890195, 0.6110764302440276, 0.5691184320344019, 0.5379627208668148, 0.549958741038215, 0.5135094032957097, 0.489370101029768, 0.4755340742869636, 0.476773979358071, 0.4621150156352908, 0.4495474231312414, 0.43084218013225184, 0.421394924654732, 0.4252598936791433, 0.41500418627219604, 0.3897802947558243, 0.3892299914561589, 0.3682751246903787, 0.3612798992448463, 0.357569536721434, 0.3529619763965352, 0.3452455233337227, 0.34186411258598376, 0.32740821105503937, 0.32400335782649037, 0.3156662585752326, 0.3076973323493885, 0.3217252721568896, 0.30276072368944923, 0.31218693927845637], "accuracy": [0.30920618772506714, 0.4255712628364563, 0.6207898855209351, 0.7096816897392273, 0.7391361594200134, 0.7577598690986633, 0.7769119143486023, 0.7907806038856506, 0.8012151718139648, 0.7947431206703186, 0.8117818236351013, 0.8150838613510132, 0.8273676037788391, 0.8302733898162842, 0.8350284099578857, 0.8329150676727295, 0.8407079577445984, 0.8455950617790222, 0.8466516733169556, 0.8453308939933777, 0.8548408150672913, 0.8527275323867798, 0.863558292388916, 0.867520809173584, 0.8660678863525391, 0.867520809173584, 0.8708229064941406, 0.8742570281028748, 0.878351628780365, 0.8825782537460327, 0.8809932470321655, 0.8878615498542786, 0.8794082403182983, 0.8873332738876343, 0.8837670087814331], "val_loss": [1.8215688977922713, 0.9916554178510394, 0.6269095114299229, 0.565031715801784, 0.5315438679286412, 0.4689831222806658, 0.4504668542316982, 0.424375627722059, 0.4327018942151751, 0.4107547402381897, 0.38205418416431974, 0.3747217655181885, 0.3905666470527649, 0.36988804170063566, 0.3595848168645586, 0.3659458671297346, 0.3637576699256897, 0.34826861109052387, 0.33783277443477083, 0.3307691897664751, 0.33254765612738474, 0.32305937153952463, 0.32275138582502094, 0.31335270404815674, 0.3156880736351013, 0.31135086502347675, 0.3125028439930507, 0.30620057242257254, 0.3156675100326538, 0.3065722669873919, 0.31152359928403583, 0.3284409386771066, 0.3136905516896929, 0.3072202631405422, 0.3300292747361319], "val_accuracy": [0.3086666762828827, 0.6116666793823242, 0.7163333296775818, 0.7403333187103271, 0.7459999918937683, 0.7873333096504211, 0.7929999828338623, 0.8066666722297668, 0.8013333082199097, 0.8159999847412109, 0.8326666951179504, 0.8349999785423279, 0.8216666579246521, 0.8349999785423279, 0.8420000076293945, 0.8423333168029785, 0.8453333377838135, 0.8433333039283752, 0.8576666712760925, 0.859000027179718, 0.8546666502952576, 0.8586666584014893, 0.8613333106040955, 0.862666666507721, 0.8643333315849304, 0.8669999837875366, 0.8669999837875366, 0.8663333058357239, 0.8676666617393494, 0.8736666440963745, 0.8666666746139526, 0.8676666617393494, 0.862333357334137, 0.8696666955947876, 0.8603333234786987]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8282856941223145, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.173573200051748, 1.6973072691458784, 1.0553635255677305, 0.8040338315432807, 0.7076101204691121, 0.6488156603579633, 0.6070789617318141, 0.5738173902562235, 0.5385888145426875, 0.5522534452755659, 0.5129953758977329, 0.4905046258919338, 0.4751035340111631, 0.4788739704547258, 0.4612680408405417, 0.45146124150932204, 0.4316368447893473, 0.42415550697937837, 0.41767990324617205, 0.4112714640279535, 0.3902314796644258, 0.39536166148588187, 0.3730844684548429, 0.36464857470562523, 0.35754918324681256], "accuracy": [0.30920618772506714, 0.4259675145149231, 0.618280291557312, 0.7083608508110046, 0.7359662055969238, 0.7574957013130188, 0.7803460359573364, 0.7877426743507385, 0.8000264167785645, 0.7947431206703186, 0.8109893202781677, 0.8146876096725464, 0.8277638554573059, 0.8259146809577942, 0.8335754871368408, 0.8308017253875732, 0.839519202709198, 0.8451988101005554, 0.848368763923645, 0.8495575189590454, 0.8561616539955139, 0.8512746095657349, 0.8625016212463379, 0.8656716346740723, 0.8688416481018066], "val_loss": [1.821843147277832, 1.0002660410744804, 0.626522353717259, 0.5706202643258231, 0.5320899827139718, 0.4733949729374477, 0.45174176352364676, 0.4223021524293082, 0.43172214712415424, 0.41107839345932007, 0.38361810786383493, 0.36943858010428293, 0.38794772965567453, 0.3708472762789045, 0.36662319728306364, 0.3590049317904881, 0.36620627130780903, 0.3390239817755563, 0.32694579873766216, 0.326714175088065, 0.32576310634613037, 0.335865250655583, 0.32073324067252024, 0.3095163788114275, 0.3182221991675241], "val_accuracy": [0.3083333373069763, 0.6136666536331177, 0.7166666388511658, 0.7379999756813049, 0.7480000257492065, 0.7856666445732117, 0.7940000295639038, 0.8080000281333923, 0.8063333630561829, 0.8159999847412109, 0.8353333473205566, 0.8420000076293945, 0.8256666660308838, 0.831333339214325, 0.8393333554267883, 0.8460000157356262, 0.8423333168029785, 0.846666693687439, 0.8619999885559082, 0.8629999756813049, 0.856333315372467, 0.8486666679382324, 0.8619999885559082, 0.862666666507721, 0.8613333106040955]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 4, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8048571348190308, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.090336433254953, 1.704733250824814, 1.2549881956533528, 0.9422540493676566, 0.822677008629538, 0.7891008663076718, 0.7481517501243307, 0.7298575499510925, 0.6903978062658546, 0.6676737657155123, 0.6749302721247146, 0.6305719010424636, 0.6036360032365401, 0.617084235248155, 0.6159577335128538, 0.5700609877975216, 0.5685339046192207, 0.5612311186949182, 0.5210342244417944, 0.5432952899092681, 0.560637156118759, 0.5272591351486546, 0.49433520346143855, 0.486535223042724, 0.5109614408318519, 0.4599726452071354, 0.4691046547651952, 0.4674555974440599, 0.4670731169342003, 0.44666073294662767, 0.4597338872492164, 0.44113721590961025, 0.4483460304428794, 0.43072107412229044, 0.44048837318538187, 0.41432293928326114, 0.41195659056992784, 0.43015974455773476, 0.4015812887105928, 0.4050542457646005, 0.40160843013551933, 0.39065636401761555, 0.3869542978844701, 0.40335035260720986, 0.4007223258480152, 0.3691896945848252], "accuracy": [0.29903578758239746, 0.4488178491592407, 0.5437855124473572, 0.6629242897033691, 0.6910579800605774, 0.7094175219535828, 0.7193237543106079, 0.718399167060852, 0.7362303733825684, 0.7469290494918823, 0.7464007139205933, 0.7623828053474426, 0.7744023203849792, 0.7711002230644226, 0.7709681391716003, 0.7872143983840942, 0.7976489067077637, 0.7923656105995178, 0.8082155585289001, 0.8064984679222107, 0.7944789528846741, 0.8082155585289001, 0.8149517774581909, 0.8161405324935913, 0.8068947196006775, 0.8372738361358643, 0.8230088353157043, 0.828820526599884, 0.828292191028595, 0.8362171649932861, 0.8272355198860168, 0.8379341959953308, 0.8399154543876648, 0.8428213000297546, 0.8354246616363525, 0.8491612672805786, 0.8527275323867798, 0.8438779711723328, 0.854708731174469, 0.8544445633888245, 0.8532558679580688, 0.8543124794960022, 0.8576145768165588, 0.8487650156021118, 0.8512746095657349, 0.8634262084960938], "val_loss": [1.6138630253928048, 1.0267342158726283, 0.8937642574310303, 0.7413591146469116, 0.6721796308244977, 0.6437194687979562, 0.5830937113080706, 0.5818151405879429, 0.5257589306150164, 0.5778767721993583, 0.511907662664141, 0.468804086957659, 0.4691297837666103, 0.4724424566541399, 0.4537296976361956, 0.4570334809167044, 0.4551698310034616, 0.4353844438280378, 0.4813891649246216, 0.43424560342516216, 0.4070983018193926, 0.4642034258161272, 0.4039262533187866, 0.3955582635743277, 0.38557913473674227, 0.3850387249674116, 0.3905585152762277, 0.47062836374555317, 0.379101072038923, 0.36690798827580046, 0.3634351236479623, 0.44692764963422504, 0.38109285490853445, 0.3545028993061611, 0.3574362226894924, 0.37801422391619, 0.3936645133154733, 0.3470540813037327, 0.34901498896735056, 0.3660109043121338, 0.33221561568123953, 0.3547000118664333, 0.3726403798375811, 0.38109729971204487, 0.3332169992583139, 0.3453426446233477], "val_accuracy": [0.4569999873638153, 0.5756666660308838, 0.6596666574478149, 0.6606666445732117, 0.7036666870117188, 0.7073333263397217, 0.7193333506584167, 0.7276666760444641, 0.7703333497047424, 0.7400000095367432, 0.7573333382606506, 0.7923333048820496, 0.7833333611488342, 0.7923333048820496, 0.7953333258628845, 0.8009999990463257, 0.7990000247955322, 0.8013333082199097, 0.7896666526794434, 0.8026666641235352, 0.8216666579246521, 0.781333327293396, 0.8193333148956299, 0.8246666789054871, 0.82833331823349, 0.8303333520889282, 0.8256666660308838, 0.7749999761581421, 0.8386666774749756, 0.8389999866485596, 0.8376666903495789, 0.8003333210945129, 0.8236666917800903, 0.847000002861023, 0.8396666646003723, 0.8246666789054871, 0.8153333067893982, 0.8479999899864197, 0.8483333587646484, 0.8346666693687439, 0.8553333282470703, 0.8399999737739563, 0.8196666836738586, 0.8176666498184204, 0.8536666631698608, 0.8460000157356262]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7948571443557739, "mapping_values": [1, 17, 17, 11, 6, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.multiply(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), grad)))))), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0869256498129958, 1.5968160424423319, 1.27964612351527, 1.036300095679218, 0.9325118067872019, 0.8320593131437215, 0.8269997659203179, 0.786950644107149, 0.7364283679986847, 0.735361930818889, 0.7067035939148342, 0.6675794224351105, 0.6799494360715422, 0.6422289437259492, 0.6404421853823921, 0.6354684110378088, 0.5960529346539124, 0.5910176515752424, 0.5648545725643832, 0.5945388634191323, 0.5716199620194234, 0.5489477492547101, 0.5453373850643706, 0.5534991666373481, 0.5227425521186251, 0.5276399320024683, 0.5215122400808958], "accuracy": [0.3028661906719208, 0.4725928008556366, 0.5388984084129333, 0.6248844265937805, 0.650640606880188, 0.6873596906661987, 0.6868313550949097, 0.7021529674530029, 0.7137762308120728, 0.7148329019546509, 0.7292299270629883, 0.7547219395637512, 0.7407211661338806, 0.7549861073493958, 0.7535332441329956, 0.7493065595626831, 0.7754589915275574, 0.7734777331352234, 0.7804781198501587, 0.7670056819915771, 0.7770439982414246, 0.7924976944923401, 0.7884030938148499, 0.7913089394569397, 0.8033285140991211, 0.7993659973144531, 0.8010830879211426], "val_loss": [1.6204437187739782, 0.9226396083831787, 0.8460718563624791, 0.6965051208223615, 0.7375050953456334, 0.6538718938827515, 0.6243208817073277, 0.5917665106909615, 0.5567877633231026, 0.5616016728537423, 0.5700199093137469, 0.52372145652771, 0.5064236947468349, 0.5245043890816825, 0.5071979079927716, 0.4694098915372576, 0.46132659912109375, 0.4659557683127267, 0.47132367747170584, 0.44871253626687185, 0.48495989186423166, 0.4365424428667341, 0.44614923000335693, 0.42458099126815796, 0.4379600201334272, 0.4420285054615566, 0.46881844316210064], "val_accuracy": [0.5143333077430725, 0.597000002861023, 0.597000002861023, 0.7043333053588867, 0.6853333115577698, 0.7086666822433472, 0.7139999866485596, 0.7379999756813049, 0.737666666507721, 0.749666690826416, 0.7613333463668823, 0.7789999842643738, 0.7816666960716248, 0.7593333125114441, 0.7699999809265137, 0.7903333306312561, 0.7863333225250244, 0.7863333225250244, 0.7773333191871643, 0.7979999780654907, 0.7689999938011169, 0.8083333373069763, 0.7896666526794434, 0.8016666769981384, 0.7983333468437195, 0.7993333339691162, 0.784333348274231]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.11314285546541214, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.2710453209356154, 2.3073761249971017, 2.30364556133692, 2.303065640216868, 2.303110507091653, 2.3030725509231402, 2.302892140456635, 2.3029635560636934, 2.302978474277279], "accuracy": [0.22005018591880798, 0.09589222073554993, 0.10011887550354004, 0.09457138925790787, 0.09708096832036972, 0.09192973375320435, 0.09747721254825592, 0.09232597798109055, 0.09470347315073013], "val_loss": [1.9828993933541434, 1.9749154363359724, 1.9739157812935966, 1.9737693922860282, 1.9736593791416712, 1.9736778395516532, 1.9737051555088587, 1.9737757274082728, 1.9737170083182198], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [2, 4, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.1071428582072258, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.269649467007233, 2.3078379067353065, 2.303693500476475, 2.3030254931544993, 2.303121358931671, 2.3030796273666962, 2.3028900724092827, 2.3029955942806173, 2.3029745609186203], "accuracy": [0.21965394914150238, 0.09734513610601425, 0.09998679161071777, 0.09866596013307571, 0.09708096832036972, 0.08994849026203156, 0.09760929644107819, 0.09113723784685135, 0.09470347315073013], "val_loss": [1.9841834477015905, 1.9750397545950753, 1.9739408493041992, 1.973773683820452, 1.973663398197719, 1.9736757959638322, 1.9736993653433663, 1.973776136125837, 1.9737202099391393], "val_accuracy": [0.09833333641290665, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 3, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [859021389.2131925, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15229164063930511, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.05366666615009308, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 6, 9, 0, 1, 9], [0, 5, 3, 3, 0], [17, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [13.509226528566275, 119.63169752208391, 418.3841137072949, 1046.0501420536627, 2083.5186213416637, 3726.0011696564193], "accuracy": [0.09747721254825592, 0.10276053100824356, 0.10500594228506088, 0.09800554811954498, 0.09906221181154251, 0.09602430462837219], "val_loss": [32.147896902901785, 156.7899387904576, 442.5400826590402, 970.2294573102679, 1819.3584681919642, 3065.9261300223216], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 2, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [6, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [5.044082131104903e+28, 7.503691326162821e+30, 7.120916843978077e+31, 2.916683253934702e+32, 8.509483180851257e+32, 1.9768242167848233e+33], "accuracy": [0.09826971590518951, 0.10038304328918457, 0.09840179979801178, 0.10077928751707077, 0.09549596905708313, 0.09681680053472519], "val_loss": [8.227269755162464e+29, 2.4133933971324214e+31, 1.4068664632568863e+32, 4.738865197824697e+32, 1.1997914137618964e+33, 2.5471130053413003e+33], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [4, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [16, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 1, 2, 1, 11, 8, 6, 2, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.302927634813971, 2.3025852149708426, 2.3025851294412085, 2.302585219537042, 2.3025851294412085, 2.3025850529494996], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736443247113908, 1.973644460950579, 1.973644392830985, 1.973644392830985, 1.973644188472203, 1.973644188472203], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [1, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [94, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09126931428909302, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [16, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [116.3203695206799, 12685.100197814852, 204271.92392434948, 1448167.5783251883, 6228975.5019152025, 20601821.488310657], "accuracy": [0.09734513610601425, 0.1018359512090683, 0.10460969805717468, 0.09734513610601425, 0.09879804402589798, 0.09602430462837219], "val_loss": [768.6501116071429, 35910.08258928572, 377870.3035714286, 2046646.2857142857, 7643596.571428572, 22510661.714285713], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 11, 6, 3, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.multiply(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), grad)))))), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302927167014738, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [821778578.7467263, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1526878923177719, 0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.074628246879506e+30, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.06266666948795319, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [4, 5, 3, 3, 0], [86, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3627316671796463, 3.037252007253796, 4.900300610098526, 8.099862933332075, 12.276774996826914, 17.87113702144479], "accuracy": [0.09034473448991776, 0.10210011899471283, 0.10302469879388809, 0.09576013684272766, 0.09972262382507324, 0.09602430462837219], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.08885714411735535, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.sqrt(alpha), tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.269554007243896, 2.3078298844272087, 2.3037215919542495, 2.3031037917872146, 2.303167305476378, 2.303001718907828, 2.3028684265467754, 2.302947367281568, 2.303027337867476, 2.302975075576504], "accuracy": [0.21965394914150238, 0.09708096832036972, 0.09959053993225098, 0.09774138033390045, 0.09589222073554993, 0.0952318087220192, 0.0948355570435524, 0.09272222965955734, 0.09351472556591034, 0.09694888442754745], "val_loss": [1.984180246080671, 1.975034305027553, 1.9739281790597099, 1.9737517493111747, 1.9736437797546387, 1.9736625807625907, 1.97371278490339, 1.9737838336399622, 1.9737106731959753, 1.9736902373177665], "val_accuracy": [0.09833333641290665, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 7, 9, 0, 1, 9], [5, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.07285714149475098, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.2706682269819787, 2.3073920004749815, 2.3036809043483713, 2.3031156949237386, 2.3031905483749204, 2.3029967337205126, 2.302869285559059, 2.3029471514105655, 2.3030271668082074, 2.3029750530289275], "accuracy": [0.22018226981163025, 0.09615638852119446, 0.09998679161071777, 0.09087307006120682, 0.09642054885625839, 0.09615638852119446, 0.0948355570435524, 0.09219389408826828, 0.09351472556591034, 0.09694888442754745], "val_loss": [1.982921940939767, 1.9749174118041992, 1.9739106042044503, 1.973756994519915, 1.9736592429024833, 1.9736856051853724, 1.97371244430542, 1.9737837655203683, 1.9737107413155692, 1.9736901691981725], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 4, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.30211570813687, 2.3013715579950293, 2.3023880902314153, 2.3038641625801017, 2.3019250168571728, 2.302596061394404], "accuracy": [0.09549596905708313, 0.08942015469074249, 0.09509972482919693, 0.08572183549404144, 0.09536388516426086, 0.08757099509239197], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]