[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 55, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8385714292526245, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0729059236648926, 1.1258806469906213, 0.8106910188782878, 0.7112923787726922, 0.6429144098868601, 0.5945238055113427, 0.5512467457035419, 0.5251150191845816, 0.49692976492475666, 0.47828587038232634, 0.4574316287903565, 0.44351959045867656, 0.4191200371825259, 0.4198460707008217, 0.39800201815195907, 0.39379861558023743, 0.3750351815766284, 0.36618754995135333, 0.3458310193696499, 0.3435901280415293, 0.3317166393254459, 0.32979977953986656, 0.31836360670146907, 0.3042875596867923, 0.30438419303810904, 0.2921079142517843, 0.2815994689957719, 0.279595523686882, 0.2644474623367346, 0.25732966680426594, 0.2541853738179879, 0.24887990336282112, 0.24347203653273786, 0.2391488071028677, 0.22878264538671172, 0.2181788393613795, 0.22220284598158052, 0.21026520598337808], "accuracy": [0.299299955368042, 0.6003170013427734, 0.6976621150970459, 0.7372870445251465, 0.761590301990509, 0.7795535326004028, 0.7952714562416077, 0.8026680946350098, 0.817989706993103, 0.822348415851593, 0.8358209133148193, 0.8384625315666199, 0.8519350290298462, 0.8465195894241333, 0.8576145768165588, 0.8556333184242249, 0.859199583530426, 0.8628978729248047, 0.8726720213890076, 0.8770307898521423, 0.8725399374961853, 0.8766345381736755, 0.8809932470321655, 0.8869370222091675, 0.8861445188522339, 0.889050304889679, 0.8928807377815247, 0.8928807377815247, 0.900409460067749, 0.9029190540313721, 0.9019944667816162, 0.9037115573883057, 0.9063531756401062, 0.9111081957817078, 0.9072777628898621, 0.9162594079971313, 0.9108440279960632, 0.9202219247817993], "val_loss": [0.968639612197876, 0.644976156098502, 0.5699982983725411, 0.5201238564082554, 0.4873367207390921, 0.45433785234178814, 0.4257027251379831, 0.4124897633280073, 0.3891782675470625, 0.38259756565093994, 0.3681547130857195, 0.36214292900902884, 0.3664522426468985, 0.3453698924609593, 0.35375578914369854, 0.3438030055591038, 0.33017952953066143, 0.32320620332445416, 0.32247266599110197, 0.31102887221745085, 0.30771398544311523, 0.30291164772851126, 0.3042586275509426, 0.304786707673754, 0.29622089862823486, 0.3036149484770639, 0.2990849358694894, 0.30221870967320036, 0.29545130899974276, 0.29786315986088346, 0.297193033354623, 0.29439155544553486, 0.28825882502964567, 0.29194005898066927, 0.2955769555909293, 0.30418399402073454, 0.2933366298675537, 0.29468347345079693], "val_accuracy": [0.5873333215713501, 0.7379999756813049, 0.7293333411216736, 0.7643333077430725, 0.7726666927337646, 0.7990000247955322, 0.8086666464805603, 0.8136666417121887, 0.8263333439826965, 0.8299999833106995, 0.8396666646003723, 0.8366666436195374, 0.8373333215713501, 0.8500000238418579, 0.8403333425521851, 0.8476666808128357, 0.8539999723434448, 0.8553333282470703, 0.8600000143051147, 0.8653333187103271, 0.8656666874885559, 0.8666666746139526, 0.862333357334137, 0.8659999966621399, 0.8690000176429749, 0.8659999966621399, 0.8743333220481873, 0.8723333477973938, 0.8769999742507935, 0.8736666440963745, 0.878000020980835, 0.8759999871253967, 0.878333330154419, 0.8740000128746033, 0.874666690826416, 0.875, 0.878333330154419, 0.8776666522026062]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 4, 5], [36, 55, 6], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.8342857360839844, "mapping_values": [1, 3, 3, 1, 2, 2, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0716107846440073, 1.1281189847978161, 0.8114795617738562, 0.7127126719989104, 0.6440345863341151, 0.589719604318483, 0.5402424636376516, 0.5206846574105134, 0.4875284317162972, 0.4712462308636399, 0.4492387818764261, 0.43582410158781626, 0.41517658816856434, 0.4112773739296479, 0.3878296900025417, 0.3816775664708807, 0.37075208347345373, 0.3598722892194266, 0.33899158573563165, 0.3355838332855155, 0.3302521240347491, 0.3276670668709626, 0.3181872955245302, 0.30257303232388366, 0.3004390530503736, 0.2888485187426723, 0.2812642069729548, 0.27025215111435713, 0.25960466481785593, 0.26256030620624515, 0.2531373316109409, 0.24821367991709076, 0.2451926394283433, 0.2372368823019993, 0.22672440773539176, 0.2179961478362986, 0.21463883698986444, 0.2048591155189297], "accuracy": [0.29903578758239746, 0.5978074073791504, 0.69673752784729, 0.7329282760620117, 0.7611940503120422, 0.7808743715286255, 0.802271842956543, 0.8037247657775879, 0.8232730031013489, 0.830669641494751, 0.8378021121025085, 0.8417646288871765, 0.8479725122451782, 0.8533879518508911, 0.8610487580299377, 0.8619733452796936, 0.8601241707801819, 0.8642187118530273, 0.8714832663536072, 0.8803328275680542, 0.8766345381736755, 0.8762382864952087, 0.8774270415306091, 0.8849557638168335, 0.8850878477096558, 0.8936732411384583, 0.89552241563797, 0.8969752788543701, 0.9051644206047058, 0.8990886211395264, 0.9014661312103271, 0.9038436412811279, 0.9072777628898621, 0.909259021282196, 0.908730685710907, 0.9161273241043091, 0.91559898853302, 0.9228635430335999], "val_loss": [0.9636453219822475, 0.6392968211855207, 0.5686544009617397, 0.5201429298945835, 0.4906022718974522, 0.44738806997026714, 0.4228204999651228, 0.4077531695365906, 0.39069714716502596, 0.3780570370810373, 0.3676978349685669, 0.3563022868973868, 0.35512202978134155, 0.34186155455453054, 0.3439069816044399, 0.3377875770841326, 0.33067862476621357, 0.3215248669896807, 0.3188995122909546, 0.3078859789030893, 0.3052393708910261, 0.2994996394429888, 0.3064082775797163, 0.30196134533200947, 0.2933898738452366, 0.30122143030166626, 0.29210403135844637, 0.29610913140433176, 0.28868081739970614, 0.2924167513847351, 0.29889025006975445, 0.29773466076169697, 0.2890727775437491, 0.28848122698920114, 0.2916355643953596, 0.30473755087171284, 0.2908850482531956, 0.29160644326891216], "val_accuracy": [0.5899999737739563, 0.7369999885559082, 0.7319999933242798, 0.7616666555404663, 0.765999972820282, 0.79666668176651, 0.8116666674613953, 0.8176666498184204, 0.8253333568572998, 0.8363333344459534, 0.8370000123977661, 0.840666651725769, 0.8446666598320007, 0.8529999852180481, 0.8453333377838135, 0.8513333201408386, 0.8503333330154419, 0.8576666712760925, 0.859333336353302, 0.8643333315849304, 0.8610000014305115, 0.8663333058357239, 0.8659999966621399, 0.8690000176429749, 0.8709999918937683, 0.871999979019165, 0.8726666569709778, 0.8703333139419556, 0.875333309173584, 0.8713333606719971, 0.8793333172798157, 0.878333330154419, 0.8816666603088379, 0.8796666860580444, 0.8769999742507935, 0.8756666779518127, 0.8796666860580444, 0.878333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 4, 5], [36, 55, 6], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.6060000061988831, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), grad), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.079453670133012, 1.2546098616144927, 2.1491252136520185, 2.2611887103231783, 2.3333495197326375, 4.019375839883374], "accuracy": [0.299299955368042, 0.5600317120552063, 0.19495442509651184, 0.17580240964889526, 0.12693171203136444, 0.18584071099758148], "val_loss": [1.0749880926949638, 1.1317532743726457, 1.9253740310668945, 1.9919157709394182, 2.012657710484096, 10.20446150643485], "val_accuracy": [0.6156666874885559, 0.612666666507721, 0.14266666769981384, 0.10733333230018616, 0.17133332788944244, 0.17166666686534882]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 7, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 5, 5], [27, 10, 6, 31], [0, 1, 0], [0], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.1225714311003685, "mapping_values": [1, 1, 1, 0, 1, 1, 7, 7, 4, 3, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [25559.147549085174, 491548.7989862634, 1529492.2202813367, 3545071.5294544976, 5607142.412693172, 9681019.744947826], "accuracy": [0.108440101146698, 0.109232597053051, 0.09087307006120682, 0.09747721254825592, 0.09919429570436478, 0.09893012791872025], "val_loss": [108708.77678571429, 575842.375, 1428239.142857143, 2782411.6428571427, 4705135.428571428, 7081594.714285715], "val_accuracy": [0.11933333426713943, 0.08966666460037231, 0.09333333373069763, 0.09433333575725555, 0.09366666525602341, 0.09333333373069763]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1], [7, 3, 7, 9, 1, 9], [4, 0, 5, 5], [27, 10, 6, 31], [1, 1, 0], [1], [7, 3], [3], [], [0, 1, 0, 1, 0, 0, 0, 1], [5, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.11657142639160156, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.300644640751865, 2.3006549660618814, 2.302461368753264, 2.3033275672268667, 2.3076399848004847, 2.374365567058825], "accuracy": [0.09774138033390045, 0.09047681838274002, 0.08426892012357712, 0.09549596905708313, 0.10976093262434006, 0.09813763201236725], "val_loss": [1.9691729545593262, 1.9727658544267928, 1.9737499782017298, 1.9749531064714705, 1.9871626581464494, 2.228428908756801], "val_accuracy": [0.13066667318344116, 0.09966666996479034, 0.08799999952316284, 0.12133333086967468, 0.10066666454076767, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 4, 5], [27, 10, 6, 31], [1, 1, 0], [0], [8], [3], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 4, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1785.501456001069, 31749.545576872275, 144414.63086530843, 397671.7037792234, 849966.3921377625, 1538267.1661603488], "accuracy": [0.10011887550354004, 0.09879804402589798, 0.1006472036242485, 0.09906221181154251, 0.09787346422672272, 0.10698718577623367], "val_loss": [6353.835797991072, 48978.57700892857, 163515.97767857142, 385595.97321428574, 750849.9285714285, 1294907.8214285714], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1], [7, 3, 7, 9, 1, 9], [0, 0, 5, 5], [27, 10, 6, 31], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 0, 0, 0, 1], [5, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3024000386835293, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 4, 5], [36, 55, 6], [0, 1, 0], [1], [8], [3], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [279804506.9759385, 5363809426.884691, 24822380675.736362, 68851726734.99617, 147729202719.58157, 268011089144.73016], "accuracy": [0.09985470771789551, 0.09906221181154251, 0.1006472036242485, 0.09919429570436478, 0.09787346422672272, 0.10685510188341141], "val_loss": [1046452845.7142857, 8367505993.142858, 28235688228.57143, 66923553938.28571, 130703687680.0, 225848585654.85715], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 7, 9, 7, 9, 9], [1, 0, 4, 5], [36, 55, 6], [0, 1, 0, 0, 1], [1], [8], [3], [], [0, 1, 0, 1, 0, 0, 0, 1], [8, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [2.3026175787105316, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 4, 5], [27, 10, 6, 31], [0, 1, 0, 0, 1], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [1, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302309848377025, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0], [7, 3, 7, 9, 1, 9], [4, 0, 5, 5], [36, 55, 6], [0, 1, 0, 0, 0], [1], [7, 3], [3], [], [0, 1, 0, 1, 1], [0, 4, 4, 2, 1, 7, 2, 6, 8, 4], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1], [8, 0, 7, 9, 7, 9, 9], [0, 0, 4, 5], [36, 55, 6], [0, 1, 0, 0, 1], [1], [8], [3], [], [0, 1, 0, 1, 1], [5, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3026175787105316, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 4, 2, 3, 1, 8, 0, 3], [0, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 4, 7, 9, 1, 9], [3, 0, 4, 5], [83, 55, 6], [1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1], [7, 2, 4, 7, 1, 0], [3], [90], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 16, 10, 5, 9, 9, 5, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha)))))), tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [12, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1], [7, 3, 7, 9, 1, 9], [4, 0, 5, 5], [36, 10, 28], [1, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 0, 0, 0, 1], [5, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 7, 7, 4, 3, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(grad, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.343894543255388, 3155.6173488252657, 79825457.61043786, 3697567001051.0083, 2.2451719418442986e+17, 1.4787605266683396e+22, 6.963786842727063e+26], "accuracy": [0.09285431355237961, 0.10051512718200684, 0.10011887550354004, 0.09681680053472519, 0.09655263274908066, 0.10579843819141388, 0.09747721254825592], "val_loss": [4.357002122061593, 80158.06026785714, 2333795620.571429, 93266782303963.42, 4.932763362020369e+18, 4.1836217046798735e+23, 2.2953790883673838e+28], "val_accuracy": [0.10000000149011612, 0.10133333504199982, 0.10000000149011612, 0.10133333504199982, 0.09833333641290665, 0.1003333330154419, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1], [7, 3, 7, 9, 1, 9], [4, 0, 5, 5], [27, 10, 6, 31], [0, 1, 0], [1], [8], [6], [], [1, 1, 0, 1, 1], [5, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.765250844916141e+24, 45.97333006933774, 145.40073375528073, 303.09499153859736, 517.7217966547543, 790.1469040511543], "accuracy": [0.09153348207473755, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [16.63539777483259, 81.64902605329242, 196.17152186802454, 359.91153390066967, 573.093017578125, 835.6680385044643], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0], [6, 3, 7, 9, 5, 9], [0, 2, 4, 5], [27, 10, 6, 31], [1, 1, 0], [1], [7, 3], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [76, 32, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3026175787105316, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 9, 7, 2, 1, 9], [4, 0, 2, 5], [32, 55, 6], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [4.1464939574366665e+33, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11293092370033264, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0846666693687439, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 55, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1], [6, 3, 7, 9, 1, 9], [5, 0, 2, 5], [36, 55, 6], [0, 1, 0], [1], [8], [3], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.09971428662538528, "mapping_values": [1, 4, 4, 2, 2, 2, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [626202.023980102, 7955003.920089817, 31796311.854180425, 82148007.44842161, 170038145.2679963, 302312158.1402721, 494016901.9257694, 756297955.7152292], "accuracy": [0.07594769448041916, 0.08479725569486618, 0.09311848133802414, 0.08875974267721176, 0.09417514503002167, 0.10434553027153015, 0.09945846349000931, 0.09998679161071777], "val_loss": [2112747.8571428573, 12576134.285714285, 37853259.428571425, 84196676.57142857, 158461078.85714287, 267408850.2857143, 417017654.85714287, 613462564.5714285], "val_accuracy": [0.0976666659116745, 0.09933333098888397, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 5, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 5, 9, 1, 9], [4, 0, 4, 5], [27, 10, 6, 31], [1, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 0, 0, 0, 1], [0, 4, 5, 2, 9], [0, 0, 2, 1, 0, 3, 2, 2, 1], [6, 32]], "fitness": -0.09828571230173111, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 3, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.364074410700669, 3.0494800336986656, 4.9366310055009315, 8.013842983268523, 12.381241290639531, 17.719541219908564], "accuracy": [0.08955223858356476, 0.09668471664190292, 0.10091137140989304, 0.09853387624025345, 0.09919429570436478, 0.10698718577623367], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [82, 41, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 9, 1, 9], [4, 4, 5, 5], [36, 86, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 1, 1, 1, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302458175531452, 2.3017617340778176, 2.3035430813100217, 2.300666390944151, 2.3032804899967703, 2.3023140971466316], "accuracy": [0.0878351628780365, 0.08981640636920929, 0.09047681838274002, 0.09074098616838455, 0.08492933213710785, 0.09430722147226334], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]