[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 9, 4], [1, 0, 1, 2, 2, 0, 0, 1], [18, 87, 84], [0], [1], [], [5], [], [1], [], [], [], [], [0, 1], [0], [2], []], "fitness": -0.12228571623563766, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3088989753796203, 2.385599416118839, 2.303417691307738, 2.2996566112031083, 2.266636809495304, 2.3052714698901347, 2.303502699419051, 2.303266013917229, 2.303046834309812], "accuracy": [0.26139214634895325, 0.09457138925790787, 0.10011887550354004, 0.10976093262434006, 0.1694624274969101, 0.1022322028875351, 0.09787346422672272, 0.09245806187391281, 0.10342095047235489], "val_loss": [2.4116247722080777, 1.974778515951974, 1.973398276737758, 1.9519119943891252, 1.9762565067836217, 1.9742088999067033, 1.9737615585327148, 1.9737448011125838, 1.9736487524850028], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.15266667306423187, 0.28466665744781494, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 9, 4], [1, 0, 1, 2, 2, 0, 0, 1], [18, 87, 84], [1], [1], [], [5], [], [1], [], [], [], [], [0, 1], [0], [2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [115.35498233906519, 2.817326207942557, 2.4583418777102035, 2.3840616353357063, 2.4050455504341715, 2.4199119627263173], "accuracy": [0.2024831622838974, 0.09628847241401672, 0.09747721254825592, 0.10117553919553757, 0.09602430462837219, 0.10328886657953262], "val_loss": [2.358566556658064, 2.0797044209071567, 2.0684961591448103, 2.1216635022844588, 2.0505213737487793, 1.9971116610935755], "val_accuracy": [0.10133333504199982, 0.1003333330154419, 0.10066666454076767, 0.10133333504199982, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1], [2, 8, 4, 8, 5, 0], [3, 0, 1, 2, 2, 0, 0, 1], [63], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [2, 3, 8, 8, 4, 2, 4, 7, 5, 8, 5, 5], [5, 3, 5, 4, 4, 4, 5], [], [0, 0, 0, 1, 1], [0, 1, 0], [6, 4], [5], [], [0, 1], [0], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 1, 19, 19, 12, 7, 0, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.pow(grad, tf.math.add(beta, grad))))), tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.sqrt(tf.math.square(tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.pow(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 8, 4, 8, 5], [3, 0, 1, 2, 2, 0, 0, 1], [80, 28, 67], [0, 0, 1, 1, 1, 0], [1], [2], [0, 3, 3], [71], [0, 0], [0, 1], [5], [5], [], [0, 1], [0], [2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302593614037609, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 9, 4], [2, 0, 1, 2, 2, 0, 0, 1], [18, 87, 84], [1, 0, 1], [0, 1, 1], [7], [5, 2], [], [1], [], [], [], [], [0, 1], [0], [0], [25]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [536.4115353713906, 8707.958326024056, 40308.12970184338, 108710.95850531633, 235787.05596189408, 422662.9788626007], "accuracy": [0.10685510188341141, 0.10328886657953262, 0.10236428678035736, 0.09800554811954498, 0.09866596013307571, 0.10210011899471283], "val_loss": [1824.8955078125, 13642.64732142857, 45203.15959821428, 106236.25892857143, 206472.63839285713, 355644.33035714284], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0], [0, 1], [5], [2, 0, 1, 2, 2, 0, 0, 1], [], [0], [1], [], [5], [], [1], [1], [], [], [], [0, 1], [0], [2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3079724637445853, 2.385087471313134, 2.303534715560764, 2.302966962259333, 2.3028531273232318, 2.301060917197658], "accuracy": [0.2615242302417755, 0.09285431355237961, 0.09985470771789551, 0.09734513610601425, 0.10210011899471283, 0.12270505726337433], "val_loss": [2.4088538033621654, 1.9747456823076521, 1.9738693237304688, 1.9736148970467704, 1.9733990941728865, 1.9641491344996862], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [], [3, 0, 1, 2, 2, 0, 0, 1], [], [0, 0, 1, 1, 1, 0], [1], [], [5], [], [1], [], [], [], [], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [2, 1, 7, 1, 8], [2, 2, 3, 1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 5, 5, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.subtract(beta, tf.math.add(sigma, tf.math.subtract(alpha, tf.math.sqrt(alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 9, 4], [1, 0, 1, 2, 2, 0, 0, 1], [18, 87, 84], [0, 0, 1, 1, 1, 0], [1], [2], [5], [], [1], [], [], [], [], [1, 1], [0], [2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 8, 4, 8, 5], [3, 0, 1, 2, 2, 0, 0, 1], [80, 28, 67], [0, 0, 1, 1, 1, 0], [0, 1, 1], [8], [5, 0, 3, 1, 1], [75], [0, 0, 0, 0], [0, 0, 0, 1], [3, 5, 9], [6], [47], [1, 1], [0], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 4, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 8, 4, 8, 5], [1, 0, 1, 2, 2, 0, 0, 1], [18, 87, 84], [0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1], [7, 0, 7, 0, 9], [5, 5, 3], [53], [1], [], [5], [], [], [1, 0], [0, 2], [2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302164412445443, 2.3143608485388008, 2.9128912210370004, 12.703571721909462, 27.107683258096948, 41.504521872404936], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9754691123962402, 2.0211640766688754, 5.804441179547991, 18.13309587751116, 30.469109671456472, 42.79737527029855], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1], [5], [3, 0, 1, 2, 2, 0, 0, 1], [80, 28, 67], [1], [1], [2], [1], [], [1], [], [], [], [], [0, 1], [0], [2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303116070485748, 2.320188158963886, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09126931428909302, 0.08083476126194, 0.0874389111995697, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.97581570489066, 2.002960886274065, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.020999999716877937, 0.08500000089406967, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 9, 4], [1, 0, 1, 2, 2, 0, 0, 1], [], [0, 0, 1, 1, 1, 0], [1], [8], [4], [], [1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1], [6, 3, 5, 0], [7, 3, 5], [], [0, 1, 0], [2, 9], [2], [47]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302169656363051, 2.3023150067649985, 2.303506245403368, 2.3084590270644907, 2.3321126197638087, 2.4880379077040713], "accuracy": [0.1022322028875351, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736830166407995, 1.9740940502711706, 1.9760422025408064, 1.9854038783482142, 2.0337754658290317, 2.503533431461879], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 8, 4, 8, 5], [3, 0, 1, 2, 2, 0, 0, 1], [80, 28, 67], [1, 1, 1, 1, 1, 0], [0, 1, 1], [2], [5, 2], [], [1], [], [], [], [], [1, 0], [4], [2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(grad, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 8, 4, 8, 5, 6, 3, 8, 4, 2, 8, 2], [2, 0, 1, 2, 2, 0, 0, 1], [39, 28, 67], [0], [1], [2], [3, 3, 3], [], [0, 1, 1], [0], [4], [], [], [1, 1], [0], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 12, 8, 3, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad)))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5], [1, 0, 1, 2, 2, 0, 0, 1], [18, 87, 84], [0], [1], [], [0], [44], [1], [], [], [], [], [0, 1], [0], [2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302593614037609, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 8, 4, 8, 5], [1, 0, 1, 2, 2, 0, 0, 1], [80, 28, 67], [0, 0, 1, 1, 1, 0], [1], [], [5], [], [0, 0, 1], [0, 1], [6], [0], [24], [1, 1], [0], [2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 9, 4], [3, 0, 1, 2, 2, 0, 0, 1], [80, 28, 67], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [8, 4, 8, 4, 4, 8, 1, 6, 2, 0], [5, 3, 3, 5, 0, 0, 5], [11, 62], [0, 0], [1], [8], [0], [30], [0, 1, 1], [3, 2, 5], [2, 3, 0], [79]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 2, 1, 1, 0, 1, 1, 3, 1, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.sqrt(grad), tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(grad))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0], [0, 1], [5], [2, 0, 1, 2, 2, 0, 0, 1], [], [0], [1], [], [5], [], [1], [1], [], [], [], [0, 1], [0], [2], []], "fitness": -0.07685714215040207, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3105435894464916, 2.385338196995677, 2.3035040738764945, 2.3029117121940215, 2.300611903024718, 2.2726007305541294, 2.3059201213142355, 2.3037699300536483, 2.3032974546233724, 2.303129424571424], "accuracy": [0.2615242302417755, 0.09311848133802414, 0.10091137140989304, 0.09972262382507324, 0.108440101146698, 0.20697398483753204, 0.10117553919553757, 0.09615638852119446, 0.09774138033390045, 0.10117553919553757], "val_loss": [2.411092894417899, 1.9747565814426966, 1.9738872391836983, 1.9732770238603865, 1.9593469755990165, 1.978506633213588, 1.974485261099679, 1.9739588328770228, 1.9736674853733607, 1.9736627170017786], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.10000000149011612, 0.09833333641290665, 0.17766666412353516, 0.10133333504199982, 0.10133333504199982, 0.09833333641290665, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 8, 4, 8, 5], [1, 0, 1, 2, 2, 0, 0, 1], [18, 87, 84], [0, 0, 1, 1, 1, 0], [0, 1, 1], [3], [2, 5, 3, 1, 1], [7], [0, 0, 1, 0], [0, 0, 1], [6, 0], [5], [], [0, 0, 1, 1, 1], [3, 4], [1, 1, 1], [43]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 4, 3, 2, 1, 0, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(alpha, alpha), alpha)", "other_info": {"loss": [2.301566053674426, 2.3028744537092516, 2.303011238299435, 2.303017177287031, 2.303093004976171, 2.3019216843820316], "accuracy": [0.09589222073554993, 0.09021265059709549, 0.08730682730674744, 0.08942015469074249, 0.09034473448991776, 0.09087307006120682], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 8, 4, 8, 5], [1, 0, 1, 2, 2, 0, 0, 1], [80, 28, 67], [0], [0, 1, 1], [9], [5], [4], [1], [], [], [], [], [0, 1], [5], [1], []], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.301566053674426, 2.3028744537092516, 2.303011238299435, 2.303017177287031, 2.303093004976171, 2.3019216843820316], "accuracy": [0.09589222073554993, 0.09021265059709549, 0.08730682730674744, 0.08942015469074249, 0.09034473448991776, 0.09087307006120682], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]