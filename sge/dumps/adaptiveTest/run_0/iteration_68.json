[{"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [4, 0, 5, 2, 9, 6, 8, 5, 4, 8, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.3522857129573822, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.221360631260527, 2.424814134682678, 2.287046325079218, 2.2328872111936082, 2.3041837752030716, 2.3030451949183433, 2.3035481627024303, 2.303229458658624], "accuracy": [0.23140932619571686, 0.09391097724437714, 0.17263241112232208, 0.18623696267604828, 0.09985470771789551, 0.09747721254825592, 0.09866596013307571, 0.09602430462837219], "val_loss": [2.597568852560861, 1.972982406616211, 1.7472797802516393, 1.975043501172747, 1.9738403047834123, 1.9738661902291434, 1.9737493651253837, 1.9737165314810616], "val_accuracy": [0.1003333330154419, 0.09866666793823242, 0.32199999690055847, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 0, 2, 8, 6, 2, 5, 3, 5, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1], [6, 4, 8, 2, 0, 9], [4, 5, 3, 2], [41, 55], [0, 1, 0], [0, 0, 1, 1], [8, 6], [5], [], [0, 1, 0, 1, 1], [5, 4, 5, 2, 9], [2, 0, 2], [6]], "fitness": -0.10514285415410995, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.300485651270431, 2.3008696318397024, 2.3021195781323827, 2.3031148778575052, 2.30471565959287, 2.322564228792484, 2.6215166832713908, 4.586702261838962, 10.24478043641995], "accuracy": [0.09919429570436478, 0.09034473448991776, 0.09391097724437714, 0.11517632752656937, 0.10817593336105347, 0.09496764093637466, 0.09589222073554993, 0.1002509593963623, 0.09972262382507324], "val_loss": [1.9694138254438127, 1.9728130613054549, 1.9736514772687639, 1.9742346491132463, 1.9778438295636858, 2.0357549531119212, 2.8443776539393832, 6.094806943620954, 13.329754965645927], "val_accuracy": [0.11266666650772095, 0.06866666674613953, 0.12399999797344208, 0.13733333349227905, 0.10133333504199982, 0.10066666454076767, 0.1003333330154419, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 0, 5, 5, 6, 6, 8, 5, 4, 8, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [1], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 0, 8, 5, 6, 6, 8, 5, 4, 8, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [0, 3, 3, 2], [41, 55], [0, 1, 0], [0], [8], [0], [92], [0, 0, 0, 1, 1, 0, 0, 1], [1, 4, 5, 2, 9], [3, 0, 2], [6, 49]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 8, 5, 3, 2], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [684834.6273528509, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 0, 5, 5, 6, 6, 8, 5, 4, 8, 2], [2, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [5], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [1, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, grad))), tf.math.add(beta, grad)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1236661286.9790494, 23347659177.776253, 109112809975.95245, 305662441063.80664, 652275237229.724, 1192911928162.4304], "accuracy": [0.09787346422672272, 0.10091137140989304, 0.1018359512090683, 0.10091137140989304, 0.09681680053472519, 0.09893012791872025], "val_loss": [4627954395.428572, 37012572452.57143, 124904285330.28572, 296055341056.0, 578216787968.0, 999137177014.8572], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [5, 2, 0, 2, 8, 6, 2, 5, 3, 5, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [0, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [0], [39], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302558281103287, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 2, 0, 2, 8, 6, 2, 5, 3, 5, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [5], [], [0, 0, 0, 1, 1, 0, 0, 1], [1, 4, 5, 2, 9], [1, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.square(alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 0, 5, 5, 6, 6, 8, 5, 4, 8, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [63], [0, 1, 0, 1, 1], [4, 6, 5, 2, 9], [1, 0, 2], [75]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 0, 2, 8, 6, 2, 5, 3, 5, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1], [6, 3, 8, 2, 0, 9], [4, 5, 1, 2], [41, 55], [0, 1, 0], [1], [8], [5], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad), tf.math.add(tf.math.add(beta, alpha), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 0, 5, 5, 6, 6, 8, 5, 4, 8, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 4, 8, 2, 0, 9, 6, 8, 7, 0, 3], [4, 3, 5, 2, 5, 3], [29, 55], [0, 1, 0], [1], [8], [1], [], [1, 0, 0, 1, 1, 1], [2, 4, 5, 2, 9], [3, 0, 2], [6, 8]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 17, 17, 11, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, beta))), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3022776960366125, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 0, 5, 5, 6, 6, 8, 5, 4, 8, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [6, 6, 8, 6, 0, 9, 1, 9, 2], [4, 3, 5, 2], [41, 55], [0, 1, 0], [1], [8], [0], [86], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6, 8]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 13, 13, 9, 4, 2, 1, 1, 0, 1, 1, 5, 3, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1229599083.4180932, 23214395254.583015, 108489649173.50522, 303916635012.78455, 648552358140.1115, 1186099965479.6968], "accuracy": [0.09787346422672272, 0.10091137140989304, 0.1018359512090683, 0.10091137140989304, 0.09681680053472519, 0.09893012791872025], "val_loss": [4601533293.714286, 36801187254.85714, 124192208603.42857, 294364802486.8571, 574911283200.0, 993428542025.1428], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 0, 8, 5, 6, 6, 8, 5, 4, 8, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [6, 4, 3, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1, 0, 1, 1], [8], [5], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 11, 6, 1, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))), grad)), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))), grad), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 0, 2, 8, 6, 2, 5, 3, 5, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [5], [], [1, 1, 0, 1, 1], [5, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [5, 2, 0, 2, 8, 6, 2, 5, 3, 5, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [0, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [0], [20], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 2, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302558281103287, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 5, 5, 6, 6, 8, 5, 4, 8, 2], [3, 1, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [1], [39], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 2, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 0, 5, 5, 6, 6, 8, 5, 4, 8, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0], [6, 4, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [0], [8], [0], [86], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [11, 56]], "fitness": -0.09857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 2, 1, 1, 0, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302775460337572, 2.304621622058867, 2.306298434222615, 2.30685214258818, 2.31073574786173, 2.3091466664921545, 2.312700466913806, 2.3129484308646133, 2.3182982978662086, 2.318603218160742, 2.3241211790151097, 2.32852963625936, 2.3333211167141146, 2.3408257452063257, 2.343784810403681, 2.3517635469470655, 2.3593744911049743, 2.3708277107340043, 2.379867862889858, 2.3867932241732306, 2.389159029186079, 2.408549723482214, 2.4286524729249406, 2.4372674440427495, 2.4594718993946136, 2.4593100195405917, 2.4836874108320184, 2.500141742695214, 2.517905304602282, 2.53439117325075, 2.5696296659773683, 2.577315722789117, 2.599943017632088, 2.627358190859975, 2.6466639665737914, 2.671310852673296, 2.6989021443608983, 2.722086114370749], "accuracy": [0.09206181764602661, 0.09047681838274002, 0.08228767663240433, 0.08189142495393753, 0.08466517180204391, 0.08994849026203156, 0.08308017253875732, 0.09166556596755981, 0.08492933213710785, 0.09100515395402908, 0.09391097724437714, 0.09074098616838455, 0.08849557489156723, 0.09576013684272766, 0.09047681838274002, 0.08955223858356476, 0.09576013684272766, 0.09602430462837219, 0.0956280529499054, 0.09179764986038208, 0.10249637067317963, 0.09602430462837219, 0.09945846349000931, 0.09285431355237961, 0.09734513610601425, 0.09853387624025345, 0.09681680053472519, 0.09893012791872025, 0.10051512718200684, 0.09179764986038208, 0.09655263274908066, 0.09708096832036972, 0.0956280529499054, 0.09721305221319199, 0.09351472556591034, 0.10170386731624603, 0.09509972482919693, 0.10421344637870789], "val_loss": [1.971496513911656, 1.9720517567225866, 1.9726221220833915, 1.9732335635593958, 1.9738757950919015, 1.9745375769478934, 1.9751759256635393, 1.9758021490914481, 1.9765039852687292, 1.9773379734584264, 1.9784371512276786, 1.979856014251709, 1.9816123417445592, 1.983727318899972, 1.9862145696367537, 1.9890656471252441, 1.9922751017979212, 1.9958271299089705, 1.9997290202549525, 2.0039898327418735, 2.0086229188101634, 2.013643196650914, 2.0190649713788713, 2.0249061584472656, 2.0311803136553084, 2.037899834769113, 2.0450795037405833, 2.0527332850864957, 2.060874802725656, 2.069523130144392, 2.0786941392081126, 2.088400500161307, 2.0986569949558804, 2.109480994088309, 2.1208852359226773, 2.132887704031808, 2.1455017498561313, 2.158740384238107], "val_accuracy": [0.028333334252238274, 0.02566666714847088, 0.023000000044703484, 0.023333333432674408, 0.027666667476296425, 0.035999998450279236, 0.04466666653752327, 0.05533333495259285, 0.06800000369548798, 0.07866666465997696, 0.08799999952316284, 0.09266666322946548, 0.09266666322946548, 0.09433333575725555, 0.0949999988079071, 0.09533333033323288, 0.09533333033323288, 0.09566666930913925, 0.09533333033323288, 0.09600000083446503, 0.09666666388511658, 0.09666666388511658, 0.09733333438634872, 0.09833333641290665, 0.0989999994635582, 0.0989999994635582, 0.09933333098888397, 0.1003333330154419, 0.10000000149011612, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 0, 5, 5, 6, 6, 8, 5, 4, 8, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [94, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 0, 8, 2, 0, 9], [4, 5, 3, 2], [41, 55], [1, 1, 0], [1], [8], [5], [86], [0, 1, 0, 0, 1], [5, 1, 5, 2, 9], [0, 0, 2], [6, 8]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 1, 0, 1, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.sqrt(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024443249897066, 2.3031341169236628, 2.3035274269306556, 2.30251875057228, 2.3038466479941726, 2.3023105939586226], "accuracy": [0.09179764986038208, 0.08809932321310043, 0.08585391938686371, 0.08875974267721176, 0.0882314071059227, 0.09272222965955734], "val_loss": [1.9709972654070174, 1.9709949493408203, 1.9709929738725935, 1.9709909302847726, 1.9709888185773576, 1.9709869112287248], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 0, 5, 5, 6, 6, 8, 5, 4, 8, 2], [2, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [1, 1, 0], [1], [8], [4], [], [1, 1, 0, 1, 1], [5, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302445804973588, 2.303140486110203, 2.3035384881860153, 2.3025327006256764, 2.303868443407576, 2.302327688926593], "accuracy": [0.09179764986038208, 0.0882314071059227, 0.08558975160121918, 0.08889182657003403, 0.08809932321310043, 0.09245806187391281], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [5, 2, 0, 2, 8, 6, 2, 5, 3, 5, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 3, 3, 2], [41, 55], [0, 1, 0], [0], [8], [0], [92], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302445804973588, 2.303140486110203, 2.3035384881860153, 2.3025327006256764, 2.303868443407576, 2.302327688926593], "accuracy": [0.09179764986038208, 0.0882314071059227, 0.08558975160121918, 0.08889182657003403, 0.08809932321310043, 0.09245806187391281], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 0, 8, 5, 3, 6, 8, 5, 9, 8, 2], [3, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [1, 1, 0], [1], [8], [4], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302445804973588, 2.303140486110203, 2.3035384881860153, 2.3025327006256764, 2.303868443407576, 2.302327688926593], "accuracy": [0.09179764986038208, 0.0882314071059227, 0.08558975160121918, 0.08889182657003403, 0.08809932321310043, 0.09245806187391281], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]