[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.755142867565155, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2948748990450523, 2.2768068473573058, 2.2574734052631125, 2.239292419566108, 2.2122372768464076, 2.182391665536399, 2.1465989543525312, 2.102435566887423, 2.042080883289514, 1.9754247360414658, 1.8933011961808341, 1.807994441002934, 1.7180300515325644, 1.6376013527645836, 1.5539091103553395, 1.4743062952143908, 1.413154447162156, 1.346065506140286, 1.3046457542798082, 1.256914805364552, 1.2085067263809666, 1.1914776299277223, 1.1691938999889233, 1.1194984933341483, 1.1027018455954558, 1.0780318846177934, 1.0634009034138283, 1.031930267535275, 1.0233889231356206, 1.0012875324416044, 0.9962356095426764, 0.980600294057861, 0.9567900296483199, 0.9517909683618784, 0.9383049394476289, 0.9306346152310894, 0.9151010142892437, 0.9162200283790073, 0.9000514554876645, 0.8844267777668534, 0.89205730274731, 0.8731394021534067, 0.8666473127249099, 0.8615549366786858, 0.8472449173072011, 0.845569853336426, 0.8379845132035445, 0.8454260086544029, 0.8311412204856555, 0.8298645753114766, 0.8269301068592285, 0.8048019261959127, 0.8036022742804504, 0.8069491762731369, 0.8068691487593217, 0.7884876086585605, 0.797583399597113, 0.7936964671389144, 0.7791541319292739, 0.78204816817576, 0.7747795258326033, 0.7722841033909095, 0.7746934804146741, 0.7622325678527347, 0.7605183536129982, 0.752874163769775], "accuracy": [0.11174217611551285, 0.16299036145210266, 0.20763438940048218, 0.2456742823123932, 0.28397834300994873, 0.3171311616897583, 0.34486857056617737, 0.3683793544769287, 0.40206050872802734, 0.41606128215789795, 0.4399682879447937, 0.45145952701568604, 0.4765552878379822, 0.48672565817832947, 0.5011227130889893, 0.523048460483551, 0.5362567901611328, 0.5498613119125366, 0.5580504536628723, 0.566239595413208, 0.589750349521637, 0.5830141305923462, 0.5892220139503479, 0.6098269820213318, 0.6156386137008667, 0.613789439201355, 0.6258090138435364, 0.6373002529144287, 0.639809787273407, 0.6460176706314087, 0.6507726907730103, 0.6528860330581665, 0.6627922058105469, 0.6667547225952148, 0.6679434776306152, 0.6679434776306152, 0.6756042838096619, 0.6725663542747498, 0.6804913282394409, 0.6822084188461304, 0.6844538450241089, 0.6940959095954895, 0.6906617283821106, 0.6929071545600891, 0.6935675740242004, 0.6971337795257568, 0.6991150379180908, 0.6983225345611572, 0.6992471218109131, 0.7088891863822937, 0.7013604640960693, 0.7062475085258484, 0.7083608508110046, 0.7091533541679382, 0.7057191729545593, 0.7117950320243835, 0.7087571024894714, 0.713908314704895, 0.7124554514884949, 0.7148329019546509, 0.7214370369911194, 0.7256637215614319, 0.7169462442398071, 0.7300224304199219, 0.7201162576675415, 0.7279091477394104], "val_loss": [1.9538041523524694, 1.936896528516497, 1.9180362565176827, 1.8965659141540527, 1.8704041753496443, 1.8379333359854562, 1.7976690019880022, 1.7484602246965681, 1.6873762948172433, 1.616335391998291, 1.5336313928876604, 1.445436920438494, 1.3552395956856864, 1.2672903537750244, 1.1873062678745814, 1.1156797068459647, 1.054234504699707, 0.9996386255536761, 0.9543932165418353, 0.9144013609204974, 0.8799432345799038, 0.8528990915843419, 0.8275550263268607, 0.8039244072777885, 0.7847154991967338, 0.7674618107931954, 0.7520834718431745, 0.736876368522644, 0.7260582106454032, 0.7128534317016602, 0.7016032252992902, 0.6901219742638725, 0.6802673850740705, 0.6739747864859444, 0.6652740410396031, 0.6564687320164272, 0.649450387273516, 0.6439183098929269, 0.6368558066231864, 0.6303777183805194, 0.6287400552204677, 0.6195049626486642, 0.6133183070591518, 0.609461920601981, 0.6063731738499233, 0.6017685106822422, 0.5954873561859131, 0.5929562364305768, 0.5882236276354108, 0.583830646106175, 0.5826874460492816, 0.5774340118680682, 0.5747670957020351, 0.5742994887488229, 0.5720807995115008, 0.5656593016215733, 0.5633897270475116, 0.5607262679508754, 0.5586542061397007, 0.5553234815597534, 0.5527117082050869, 0.5504731280463082, 0.548617056437901, 0.547160165650504, 0.5434215750013079, 0.5417067153113229], "val_accuracy": [0.18033333122730255, 0.3019999861717224, 0.3543333411216736, 0.3880000114440918, 0.42366665601730347, 0.4503333270549774, 0.4740000069141388, 0.49433332681655884, 0.515999972820282, 0.5400000214576721, 0.5519999861717224, 0.5726666450500488, 0.5873333215713501, 0.6016666889190674, 0.6243333220481873, 0.6453333497047424, 0.6656666398048401, 0.6676666736602783, 0.675000011920929, 0.6836666464805603, 0.6883333325386047, 0.6923333406448364, 0.6980000138282776, 0.6993333101272583, 0.7053333520889282, 0.7059999704360962, 0.7116666436195374, 0.7120000123977661, 0.7173333168029785, 0.721666693687439, 0.7236666679382324, 0.7279999852180481, 0.7273333072662354, 0.7276666760444641, 0.7300000190734863, 0.7360000014305115, 0.7350000143051147, 0.7360000014305115, 0.7456666827201843, 0.7486666440963745, 0.7403333187103271, 0.7516666650772095, 0.7553333044052124, 0.750333309173584, 0.7490000128746033, 0.7549999952316284, 0.7606666684150696, 0.7599999904632568, 0.7630000114440918, 0.7630000114440918, 0.7580000162124634, 0.7616666555404663, 0.765333354473114, 0.7583333253860474, 0.765333354473114, 0.7673333287239075, 0.7670000195503235, 0.7620000243186951, 0.7726666927337646, 0.762333333492279, 0.7733333110809326, 0.7680000066757202, 0.7713333368301392, 0.7730000019073486, 0.7699999809265137, 0.7676666378974915]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55, 83], [1, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.751714289188385, "mapping_values": [1, 4, 4, 2, 2, 0, 7, 7, 4, 3, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.298451434194514, 2.2880851717641435, 2.2771115440340437, 2.269286301661602, 2.2560915017345278, 2.2453737621687786, 2.2336368944981566, 2.2210166271037397, 2.203255415340661, 2.1859325578798154, 2.164391382133263, 2.1421633356865515, 2.116180745979987, 2.0918788597836016, 2.0594695605118165, 2.0245538671428283, 1.983955173838203, 1.9398073535538023, 1.897554511549041, 1.848150065735331, 1.7942071181435737, 1.7492840972795085, 1.7026340368952593, 1.6438528077792278, 1.600547147952901, 1.551890548052427, 1.5126560887073592, 1.459940267135092, 1.4287506420504321, 1.3937102532610366, 1.3676362416968133, 1.3418933440823013, 1.2984271242382064, 1.2800250346114874, 1.254980681972607, 1.2396862698489366, 1.2119980781715403, 1.202613665175523, 1.1795921117370438, 1.1516948826419144, 1.1527030179844147, 1.1212965447621464, 1.1093605980503403, 1.10447522936055, 1.079927308495491, 1.0717726841799224, 1.0561659888127823, 1.0584707660067902, 1.0378460758287578, 1.0354884543108382, 1.0295735788603564, 0.9982186310783495, 0.9935059882725046, 0.9940018899263471, 0.9894271461860678, 0.9668822845353301, 0.9726081752049657, 0.96710221721921, 0.9504033260892774, 0.9476127990358746, 0.9369146925047986, 0.9325786614304662, 0.9308704066553671, 0.9217771057124623, 0.9143376857880762, 0.9036884849979389, 0.9016143947135126, 0.9009904629754951, 0.8954530224713825, 0.8969215143940877, 0.8888514437270502, 0.8847064184490653, 0.8840621208643885, 0.8643836731357093, 0.8652702329448815, 0.8591939585556239, 0.8621332077081917, 0.8601785007248686, 0.8573293249447427, 0.8460933024762659, 0.8409320411665123, 0.8380138228724048, 0.8341465081127486, 0.8450039529907485, 0.8363641488191521, 0.8260414989207793, 0.8271931838113807, 0.8246043296443505, 0.8217592573263516, 0.8185531568250101, 0.8157680876865017, 0.8176243712306573, 0.8051827739589108, 0.7960100177414209, 0.7975797201774344, 0.8019424009442786, 0.7997839392656506, 0.7927039404429339, 0.7839271669232881, 0.7890314699211267], "accuracy": [0.10236428678035736, 0.13234710693359375, 0.15836745500564575, 0.17963281273841858, 0.20697398483753204, 0.23180557787418365, 0.25214633345603943, 0.2739400267601013, 0.30563995242118835, 0.3209615647792816, 0.3377360999584198, 0.3529256284236908, 0.3715493381023407, 0.37141725420951843, 0.3871351182460785, 0.40206050872802734, 0.42068418860435486, 0.4243825078010559, 0.43111875653266907, 0.4439307749271393, 0.45845991373062134, 0.46149781346321106, 0.4795931875705719, 0.4931977391242981, 0.49768856167793274, 0.5000660419464111, 0.5112931132316589, 0.5267468094825745, 0.5379738211631775, 0.5432571768760681, 0.5435213446617126, 0.5461629629135132, 0.5621450543403625, 0.568220853805542, 0.5658433437347412, 0.5704662799835205, 0.5779950022697449, 0.5840708017349243, 0.5975432395935059, 0.6001849174499512, 0.6012415885925293, 0.6116761565208435, 0.6148461103439331, 0.6140536069869995, 0.6196011304855347, 0.6186765432357788, 0.6250165104866028, 0.6255448460578918, 0.6337339878082275, 0.6328094005584717, 0.6380926966667175, 0.6509047746658325, 0.6490556001663208, 0.6465460062026978, 0.6499801874160767, 0.6602826714515686, 0.6535464525222778, 0.6552634835243225, 0.6626601219177246, 0.665830135345459, 0.6692643165588379, 0.6717738509178162, 0.6682076454162598, 0.6733588576316833, 0.6705851554870605, 0.6823405027389526, 0.6793025732040405, 0.6799629926681519, 0.6828688383102417, 0.6837934255599976, 0.6872276067733765, 0.6852463483810425, 0.6880200505256653, 0.6913221478462219, 0.6890767216682434, 0.69673752784729, 0.6906617283821106, 0.6914542317390442, 0.6959450244903564, 0.6935675740242004, 0.7017567157745361, 0.6984546184539795, 0.7038700580596924, 0.693831741809845, 0.7004358768463135, 0.6956809163093567, 0.7029454708099365, 0.6988508701324463, 0.7042662501335144, 0.7051908373832703, 0.7069079279899597, 0.7041342258453369, 0.7098137736320496, 0.7135120630264282, 0.7124554514884949, 0.7080966830253601, 0.7099458575248718, 0.7152291536331177, 0.7181349992752075, 0.7162858247756958], "val_loss": [1.961451530456543, 1.9519699641636439, 1.9423371723720007, 1.9324116706848145, 1.92167786189488, 1.9100456237792969, 1.8973603248596191, 1.8833472388131278, 1.8674274853297643, 1.8495080130440849, 1.8289803096226283, 1.806034769330706, 1.780193533216204, 1.751483712877546, 1.719407081604004, 1.6837428978511266, 1.6444499152047294, 1.601489577974592, 1.555859088897705, 1.507474320275443, 1.4567875862121582, 1.4065616812024797, 1.3564016819000244, 1.3056429794856481, 1.2575641359601701, 1.2112504754747664, 1.1682233810424805, 1.1274547917502267, 1.0910139083862305, 1.0561013221740723, 1.0249141624995641, 0.9960457597460065, 0.9697004045758929, 0.9458601474761963, 0.924175534929548, 0.9040668691907611, 0.885239839553833, 0.8683431489127023, 0.8525599070957729, 0.8369845833097186, 0.8240735190255302, 0.8105732202529907, 0.797990219933646, 0.7872873544692993, 0.7772728885923114, 0.7673082181385585, 0.7570340803691319, 0.7493652105331421, 0.74049483026777, 0.7325044700077602, 0.7257920163018363, 0.7182336875370571, 0.7106470550809588, 0.7049822466714042, 0.6993822029658726, 0.6927863700049264, 0.6869782039097377, 0.6818222829273769, 0.6766330855233329, 0.6714312008449009, 0.6669254984174456, 0.66249532358987, 0.6582530055727277, 0.6551774059023175, 0.6508490187781197, 0.6466063771929059, 0.6425503832953317, 0.6390615701675415, 0.6359451328005109, 0.6320169142314366, 0.629210182598659, 0.625252229826791, 0.6229197468076434, 0.6192010300500053, 0.6157106672014508, 0.6126681225640433, 0.610869186265128, 0.6073997020721436, 0.6049164193017142, 0.6026290655136108, 0.6000439439501081, 0.5982117141996112, 0.5948128870555333, 0.5936750514166695, 0.5914003849029541, 0.5887574808938163, 0.5869436264038086, 0.5848791428974697, 0.5828096866607666, 0.5812222617013114, 0.579338720866612, 0.5770579917090279, 0.5748743500028338, 0.5728237799235752, 0.571271572794233, 0.5695048570632935, 0.5688126938683646, 0.5664113078798566, 0.5640745844159808, 0.5630861520767212], "val_accuracy": [0.10366666316986084, 0.19633333384990692, 0.27433332800865173, 0.31933334469795227, 0.3540000021457672, 0.38066667318344116, 0.39800000190734863, 0.414000004529953, 0.42633333802223206, 0.43933331966400146, 0.45100000500679016, 0.47066667675971985, 0.4846666753292084, 0.49433332681655884, 0.5143333077430725, 0.5253333449363708, 0.5356666445732117, 0.5453333258628845, 0.5546666383743286, 0.5613333582878113, 0.5699999928474426, 0.5816666483879089, 0.5899999737739563, 0.6006666421890259, 0.606333315372467, 0.6133333444595337, 0.6276666522026062, 0.637333333492279, 0.6499999761581421, 0.6586666703224182, 0.6650000214576721, 0.6706666946411133, 0.6743333339691162, 0.6779999732971191, 0.6809999942779541, 0.6859999895095825, 0.6856666803359985, 0.687666654586792, 0.6913333535194397, 0.6930000185966492, 0.6973333358764648, 0.6986666917800903, 0.7023333311080933, 0.7036666870117188, 0.7023333311080933, 0.7053333520889282, 0.7086666822433472, 0.7099999785423279, 0.7126666903495789, 0.715666651725769, 0.7166666388511658, 0.7173333168029785, 0.7223333120346069, 0.7203333377838135, 0.7213333249092102, 0.7263333201408386, 0.7263333201408386, 0.7266666889190674, 0.7303333282470703, 0.7293333411216736, 0.7333333492279053, 0.734666645526886, 0.7363333106040955, 0.737333357334137, 0.7360000014305115, 0.7379999756813049, 0.7400000095367432, 0.7393333315849304, 0.7429999709129333, 0.7456666827201843, 0.7440000176429749, 0.746999979019165, 0.7456666827201843, 0.7519999742507935, 0.7526666522026062, 0.7490000128746033, 0.7509999871253967, 0.7540000081062317, 0.7540000081062317, 0.7559999823570251, 0.7540000081062317, 0.7540000081062317, 0.7559999823570251, 0.7563333511352539, 0.7566666603088379, 0.7566666603088379, 0.7563333511352539, 0.7563333511352539, 0.7599999904632568, 0.7609999775886536, 0.7553333044052124, 0.7596666812896729, 0.7596666812896729, 0.765999972820282, 0.7643333077430725, 0.7663333415985107, 0.7620000243186951, 0.7620000243186951, 0.7670000195503235, 0.7649999856948853]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1], [6, 6, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.6074285507202148, "mapping_values": [1, 4, 4, 2, 2, 0, 9, 9, 5, 4, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [5.387179041299302, 2.0429188987566667, 1.9741931370834807, 1.9205725451250117, 1.7682534451686853, 1.8938627283350509, 1.397366201463487, 1.1477944626862961, 1.099872727608873, 1.0264386685926523, 0.9555708143563397, 0.8262969947698928, 1.1516458473626288, NaN, NaN, NaN], "accuracy": [0.1620657742023468, 0.278959184885025, 0.3135649263858795, 0.3607185184955597, 0.4049663245677948, 0.3745872378349304, 0.5152555704116821, 0.5787875056266785, 0.589750349521637, 0.6100911498069763, 0.6351869106292725, 0.6845859289169312, 0.617751955986023, 0.10976093262434006, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8754659380231584, 1.5426161970411028, 1.5884128979274206, 1.5731104442051478, 1.8757880074637276, 1.1209874153137207, 0.941126993724278, 0.8938703877585275, 0.7286650282996041, 0.7333775077547345, 0.6077079602650234, 0.6509508575711932, 71.06736319405692, NaN, NaN, NaN], "val_accuracy": [0.30266666412353516, 0.4113333225250244, 0.42500001192092896, 0.3476666808128357, 0.18133333325386047, 0.5440000295639038, 0.5923333168029785, 0.6076666712760925, 0.6740000247955322, 0.6880000233650208, 0.7200000286102295, 0.6970000267028809, 0.1313333362340927, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 5, 5, 2, 5, 0, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [3, 0, 4, 2], [26, 34], [0, 1, 0], [0], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.46799999475479126, "mapping_values": [1, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.370971701605256, 2.30676286794632, 2.3876248887973675, 2.2876645850782555, 2.1193646804578803, 1.8872562655525877], "accuracy": [0.21595561504364014, 0.26403382420539856, 0.15849953889846802, 0.12759213149547577, 0.20604939758777618, 0.35503897070884705], "val_loss": [1.9035679953438895, 1.9467310905456543, 1.9736706869942802, 1.8291760853358678, 1.95031704221453, 1.275794540132795], "val_accuracy": [0.5093333125114441, 0.2043333351612091, 0.10000000149011612, 0.19166666269302368, 0.16966666281223297, 0.503333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 7, 9, 1, 9], [1, 0, 0, 2], [26, 55], [0, 1, 0], [1], [8], [3], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 3, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1], [5, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [7, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.multiply(grad, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3024909202810986, 2.3026927995045643, 2.302800631904174, 2.3033884630353145, 2.3044993032191674, 2.307941039130357], "accuracy": [0.09602430462837219, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09826971590518951, 0.09998679161071777], "val_loss": [1.9736909866333008, 1.9738513401576452, 1.9741951397487096, 1.974924087524414, 1.9768541881016322, 1.9837147848946708], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [3, 8, 7, 9, 1, 9], [4, 3, 0, 2], [26, 55, 83], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55], [1, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [1, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 5, 2], [26, 55, 83], [0, 1, 0], [1], [8], [3], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1219534487.567524, 22531363806.051514, 104212178723.5377, 294402211387.7142, 638242705585.9929, 1225296837859.6306], "accuracy": [0.09668471664190292, 0.10236428678035736, 0.09536388516426086, 0.1022322028875351, 0.0948355570435524, 0.10381719470024109], "val_loss": [4274524013.714286, 31315904804.57143, 96052744777.14285, 221939817325.7143, 536028437357.7143, 1103524340882.2856], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [3, 0, 4, 2], [26, 34], [1, 1, 0], [0], [2], [5], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55], [1, 1, 0], [0], [8], [3], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1302355225.5075583, 26026883898.936466, 131610215999.23074, 400405225682.99457, 930485494507.6782, 1850283305388.7517], "accuracy": [0.09602430462837219, 0.10751552134752274, 0.10328886657953262, 0.10315678268671036, 0.09681680053472519, 0.10315678268671036], "val_loss": [5351284589.714286, 49153550628.57143, 188595240960.0, 504117180123.4286, 1108245629220.5715, 2148850916205.7144], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9, 9], [0, 0, 5, 2], [26, 62, 83, 29, 90], [1, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 7, 2, 5, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [79.63334256631823, 6874.588059856277, 100051.13824750694, 629207.7541936336, 2434604.068319905, 7146929.076476027], "accuracy": [0.09628847241401672, 0.10672302544116974, 0.10249637067317963, 0.10408136248588562, 0.09813763201236725, 0.10130762308835983], "val_loss": [484.37398856026783, 19149.92020089286, 177008.875, 847743.2678571428, 2811027.285714286, 7375394.571428572], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 4, 7, 6, 1, 9], [4, 0, 5, 2, 3], [26, 34], [0, 1, 0], [0], [8], [7], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 1, 2, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, beta)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1], [6, 8, 7, 9, 1, 9], [4, 0, 2, 2], [26, 55, 83], [1, 1, 0], [1], [8], [0], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 7, 9, 1, 9], [4, 0, 4, 2], [26, 34], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 3, 0, 2], [26, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.09828571230173111, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3682394860962583, 3.0208517017145327, 4.878721054975524, 8.01607127372914, 12.334265640398861, 17.88317162117324], "accuracy": [0.09008057415485382, 0.10249637067317963, 0.10157178342342377, 0.10434553027153015, 0.09826971590518951, 0.10170386731624603], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [69, 98, 96], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1], [0, 8, 4, 1, 5, 7, 0], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.08257143199443817, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(grad, tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [4.310420189488282, 21.315910725561444, 44.48075605701572, 68.60082499723644, 92.30013867379368, 115.59059163321436], "accuracy": [0.10051512718200684, 0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [10.966521399361747, 30.899777003696986, 51.57747105189732, 72.16174970354352, 92.13027954101562, 111.93754141671317], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 4, 2], [26, 34], [0, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.05771428719162941, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [4397193567.87175, 242756743931.36758, 2883449358148630.5, 1709544586186633.5, 283293995972286.4, 2340999411973795.5], "accuracy": [0.10500594228506088, 0.10051512718200684, 0.09642054885625839, 0.09893012791872025, 0.09232597798109055, 0.08915598690509796], "val_loss": [69362904502.85715, 295443946349.7143, 2102626472689664.0, 529596848013312.0, 30675609733412.57, 2161576816223378.2], "val_accuracy": [0.12666666507720947, 0.0533333346247673, 0.1236666664481163, 0.08533333241939545, 0.06533333659172058, 0.09600000083446503]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [8, 8, 7, 9, 1, 9], [4, 0, 0, 2], [43, 55, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [1, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3026315782993163, 2.302426678204439, 2.3014315724955448, 2.3035991091407633, 2.3014213619703283, 2.3027333281752203], "accuracy": [0.09192973375320435, 0.09298639744520187, 0.08730682730674744, 0.09126931428909302, 0.09642054885625839, 0.08770307898521423], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 4, 2], [26, 55, 83], [1, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.02428571507334709, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3667048627308824e+16, 46.21585278403348, 49.716281448483166, 41.53981173858824, 43.41977999002832, 46.94086612721066, 48.79713221217317], "accuracy": [0.10896842926740646, 0.09800554811954498, 0.10328886657953262, 0.09893012791872025, 0.0944393053650856, 0.10011887550354004, 0.09998679161071777], "val_loss": [35.198538643973215, 54.52429635184152, 40.72552926199777, 32.363125392368865, 47.55168587820871, 32.277675083705354, 53.57385689871652], "val_accuracy": [0.1003333330154419, 0.10133333504199982, 0.09933333098888397, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.09933333098888397]}}]