[{"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8531428575515747, "mapping_values": [1, 16, 16, 10, 6, 4, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), tf.math.add(alpha, grad)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9428205192836994, 2.0538840080217646, 1.3666100446117584, 0.7716889224583368, 0.6497067067097553, 0.6289572232765623, 0.5707756577465811, 0.5334102036442503, 0.5128982494913781, 0.49024198642102657, 0.48803850205787624, 0.45966940498654363, 0.43880802194566115, 0.44068200223560205, 0.4199681812076836, 0.4203293649960723, 0.3985932876271437, 0.3969944383387615, 0.3824647671912466, 0.3779094113319179, 0.35774636002910165, 0.35046669390097335, 0.34764610716475, 0.33824237400923957, 0.3309821480529152, 0.3270723043872444, 0.32304824660986703, 0.3129028582640643, 0.3150620084310551, 0.30189628817811226, 0.2976634594325329, 0.2933692938269657, 0.2895251185965497, 0.27404111393879527, 0.27483438585003245], "accuracy": [0.3567560315132141, 0.2727513015270233, 0.5521067380905151, 0.7169462442398071, 0.7592127919197083, 0.765949010848999, 0.789459764957428, 0.8054417967796326, 0.8144234418869019, 0.8195747137069702, 0.821820080280304, 0.8308017253875732, 0.839519202709198, 0.8343679904937744, 0.8473120927810669, 0.8491612672805786, 0.8535200357437134, 0.8492933511734009, 0.8548408150672913, 0.858671247959137, 0.868049144744873, 0.8681812286376953, 0.8697662353515625, 0.8732003569602966, 0.8757099509239197, 0.8776912093162537, 0.8779553771018982, 0.8849557638168335, 0.882710337638855, 0.8860124349594116, 0.886672854423523, 0.8939374089241028, 0.8878615498542786, 0.8912957310676575, 0.896446943283081], "val_loss": [1.9589905057634627, 1.2960259573800224, 0.6639821188790458, 0.5186190775462559, 0.48407978670937674, 0.44110877173287527, 0.4299028090068272, 0.40002734320504324, 0.4097595044544765, 0.3903678059577942, 0.3754415086337498, 0.3629002400806972, 0.355220547744206, 0.36452547141483854, 0.3469656450407846, 0.348200934273856, 0.3383403846195766, 0.33268312897000996, 0.33808127471378874, 0.32350508655820576, 0.3291944180216108, 0.3265789406640189, 0.32509911911828177, 0.33717256784439087, 0.31381356716156006, 0.31510779687336515, 0.33038799251828876, 0.3139659251485552, 0.31775788749967304, 0.2953001686504909, 0.31354772193091257, 0.3086005619594029, 0.3018098473548889, 0.31706690788269043, 0.29548262698309763], "val_accuracy": [0.1420000046491623, 0.5550000071525574, 0.7099999785423279, 0.7609999775886536, 0.7786666750907898, 0.7950000166893005, 0.8069999814033508, 0.8259999752044678, 0.8146666884422302, 0.8263333439826965, 0.8386666774749756, 0.8429999947547913, 0.8396666646003723, 0.8349999785423279, 0.8460000157356262, 0.8443333506584167, 0.8526666760444641, 0.8489999771118164, 0.8510000109672546, 0.8546666502952576, 0.8526666760444641, 0.8506666421890259, 0.8583333492279053, 0.8513333201408386, 0.8610000014305115, 0.8606666922569275, 0.859333336353302, 0.8643333315849304, 0.8686666488647461, 0.8723333477973938, 0.8636666536331177, 0.8679999709129333, 0.8703333139419556, 0.8576666712760925, 0.8703333139419556]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.828000009059906, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9428299039881762, 2.053094751012009, 1.3999950398685217, 0.7747897282567526, 0.647839105651993, 0.6177103274833131, 0.5633547571451436, 0.530546033757159, 0.5070600399976047, 0.4835329718632925, 0.4875734331050112, 0.4583275302124691, 0.4421978679669768, 0.4338271159340661, 0.4159069663505859, 0.414558495784464, 0.39155337077483937, 0.3871916445955514, 0.38031209289452905, 0.37912733696392265, 0.359707009995445, 0.34800131134605206], "accuracy": [0.3567560315132141, 0.2728833854198456, 0.5371813774108887, 0.7132478952407837, 0.761590301990509, 0.7732135653495789, 0.7897239327430725, 0.8025360107421875, 0.8166688680648804, 0.8206313848495483, 0.8216879963874817, 0.8314621448516846, 0.8392550349235535, 0.8363492488861084, 0.8482366800308228, 0.8496896028518677, 0.8569541573524475, 0.8603883385658264, 0.856689989566803, 0.8599920868873596, 0.8679170608520508, 0.8672566413879395], "val_loss": [1.9590081487383162, 1.3102167333875383, 0.670864633151463, 0.5174332005637032, 0.4827697787966047, 0.4441488640648978, 0.42135108368737356, 0.39668274777276175, 0.41269465003694805, 0.3865962965147836, 0.38329089539391653, 0.3581129993711199, 0.3668962376458304, 0.36294181857790264, 0.34724834987095426, 0.3507502164159502, 0.33198429005486624, 0.33093957390104023, 0.3318849205970764, 0.31682061297552927, 0.3327073199408395, 0.32427782671792166], "val_accuracy": [0.1420000046491623, 0.5580000281333923, 0.7013333439826965, 0.7606666684150696, 0.7829999923706055, 0.7990000247955322, 0.8133333325386047, 0.8270000219345093, 0.8106666803359985, 0.8346666693687439, 0.8336666822433472, 0.8443333506584167, 0.8233333230018616, 0.8353333473205566, 0.8479999899864197, 0.8446666598320007, 0.859666645526886, 0.8560000061988831, 0.8553333282470703, 0.8579999804496765, 0.8516666889190674, 0.8583333492279053]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 0, 0, 9, 1, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7820000052452087, "mapping_values": [1, 9, 9, 6, 3, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.081312067331403, 1.7083684025250405, 1.2640866783584477, 1.074329278236367, 0.9488358305209443, 0.8441516865025642, 0.8535585225281888, 0.7578585882543368, 0.7355998854485359, 0.7414466507792898, 0.7095178133146149, 0.6875588099922817, 0.645307869966933, 0.6560257958887181, 0.6345932624280539, 0.6083054839186995, 0.5990296088394282, 0.5914377397266535, 0.5893454342281436, 0.5630804781176237, 0.572966493800993, 0.5522937838348809, 0.566334110925919, 0.5346724013642329, 0.5299251495713272], "accuracy": [0.3032624423503876, 0.41883501410484314, 0.5461629629135132, 0.6003170013427734, 0.6468101739883423, 0.6794346570968628, 0.6785101294517517, 0.7131158113479614, 0.7277770638465881, 0.7215691208839417, 0.7280412316322327, 0.7358341217041016, 0.7543256878852844, 0.7405890822410583, 0.763439416885376, 0.7643640041351318, 0.7705719470977783, 0.7781006693840027, 0.7671377658843994, 0.7857614755630493, 0.783119797706604, 0.7961959838867188, 0.7786290049552917, 0.7930260300636292, 0.7979130744934082], "val_loss": [1.4805775710514613, 1.0382989815303258, 0.9482231480734689, 0.8098789964403424, 0.6331438166754586, 0.6222493137632098, 0.6164524725505284, 0.5660257339477539, 0.5744768381118774, 0.5478536060878209, 0.5206398963928223, 0.5310919625418526, 0.5167297635759626, 0.49658736160823275, 0.510474681854248, 0.4850140128816877, 0.47965879099709646, 0.47174370288848877, 0.4612034559249878, 0.4638071911675589, 0.4408896735736302, 0.45344347613198416, 0.47039033685411724, 0.4439174788338797, 0.4434948648725237], "val_accuracy": [0.42500001192092896, 0.5676666498184204, 0.5716666579246521, 0.6286666393280029, 0.7250000238418579, 0.7269999980926514, 0.7176666855812073, 0.7409999966621399, 0.746999979019165, 0.7403333187103271, 0.7649999856948853, 0.7476666569709778, 0.750333309173584, 0.7883333563804626, 0.7606666684150696, 0.7639999985694885, 0.7793333530426025, 0.7850000262260437, 0.7889999747276306, 0.7963333129882812, 0.7960000038146973, 0.7829999923706055, 0.765333354473114, 0.793666660785675, 0.7963333129882812]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 2, 0, 2, 9, 6, 2, 0, 3, 5, 2, 8, 1, 8, 4, 6, 2, 8, 2, 2, 9, 0, 9], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [45, 74, 25, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [25, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7437142729759216, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2964247170220182, 2.281211831770899, 2.268292523929393, 2.251620155929527, 2.234401483010496, 2.2149370034388767, 2.1911283046373238, 2.162817545192841, 2.128568568265575, 2.0912994172327144, 2.041492728824235, 1.990721657653731, 1.9256971753142718, 1.8612237571646524, 1.7894928808052306, 1.7186579999198153, 1.6447398715629522, 1.5729800187806098, 1.512144965974961, 1.461407447409211, 1.4016836658523635, 1.355903342289459, 1.311204216357755, 1.2764984582472219, 1.242591275467833, 1.2172010973885137, 1.1777156965843738, 1.157840673430028, 1.1367198397313063, 1.116295821489423, 1.1106767590177247, 1.0855151174122302, 1.053473888182322, 1.0475193734623107, 1.0310996209688632, 1.0244137192320404, 1.008415098975064, 0.9960197409256464, 0.9822465179697429, 0.9681731292741993, 0.966382867301759, 0.9512918643616981, 0.9385115463720132, 0.9333774419177903, 0.9221825819871429, 0.9157884389638365, 0.9173301560547154, 0.9056594806371852, 0.8778697585763555, 0.8873929372710512, 0.8769754047532989, 0.8729032485114427, 0.8818280624203347, 0.8671963758015787, 0.8590475914579389, 0.8583743391319147, 0.8488289468308261, 0.8406203523791934, 0.8378159228474662, 0.8368389310381432, 0.8291075514717313, 0.8198511278026249, 0.8259926885819123, 0.8130568113104699, 0.8133139758455817, 0.8077514221513622], "accuracy": [0.10342095047235489, 0.14542332291603088, 0.1795007288455963, 0.2246730923652649, 0.25544843077659607, 0.2875445783138275, 0.32241448760032654, 0.3377360999584198, 0.3630960285663605, 0.3774930536746979, 0.3983621597290039, 0.4127592146396637, 0.43983620405197144, 0.4461762011051178, 0.45608243346214294, 0.4733852744102478, 0.4876502454280853, 0.5068022608757019, 0.5090476870536804, 0.5254259705543518, 0.5320301055908203, 0.5456346869468689, 0.5585787892341614, 0.568749189376831, 0.5727116465568542, 0.577070415019989, 0.5921278595924377, 0.5958262085914612, 0.598599910736084, 0.6062607169151306, 0.613789439201355, 0.615770697593689, 0.6306960582733154, 0.6342623233795166, 0.637432336807251, 0.6392814517021179, 0.6382247805595398, 0.6494518518447876, 0.6464139223098755, 0.6532822847366333, 0.6610751748085022, 0.6597543358802795, 0.6642451286315918, 0.6716417670249939, 0.672170102596283, 0.6723021864891052, 0.6779817938804626, 0.6794346570968628, 0.6860388517379761, 0.6826046705245972, 0.6896050572395325, 0.6861709356307983, 0.6812838315963745, 0.6844538450241089, 0.6913221478462219, 0.6863030195236206, 0.6954167485237122, 0.6970016956329346, 0.6973979473114014, 0.6959450244903564, 0.7080966830253601, 0.7021529674530029, 0.6996433734893799, 0.7057191729545593, 0.7058512568473816, 0.7094175219535828], "val_loss": [1.957446507045201, 1.9437638010297502, 1.929478645324707, 1.9138667242867606, 1.895879132407052, 1.8746791567121233, 1.8498881884983607, 1.82027040209089, 1.7853046144757951, 1.7439664431980677, 1.6951169967651367, 1.639458451952253, 1.5769223485674178, 1.5089266640799386, 1.437013762337821, 1.3646412917545863, 1.2934842109680176, 1.2257508209773473, 1.1629511628832137, 1.1076007911137171, 1.0571481500353133, 1.0130199364253454, 0.973761899130685, 0.9396206651415143, 0.9093853064945766, 0.882399490901402, 0.8577238832201276, 0.836340240069798, 0.8165977341788155, 0.7996656894683838, 0.7855704341615949, 0.772209746497018, 0.7575395447867257, 0.7448958499091012, 0.7337418454033988, 0.7238917350769043, 0.7137449639184135, 0.705234204019819, 0.6955306529998779, 0.6880731923239571, 0.681658250944955, 0.6736984763826642, 0.6664064952305385, 0.6600170816693988, 0.6552604607173375, 0.6488875831876483, 0.6442610025405884, 0.6389616557529995, 0.6334154094968524, 0.6280411652156285, 0.6237235750470843, 0.6193104812077114, 0.6162708657128471, 0.612161466053554, 0.6084299087524414, 0.6044411488941738, 0.6009713070733207, 0.5986816883087158, 0.5952151162283761, 0.5915650299617222, 0.5878354992185321, 0.5843555416379657, 0.5819293601172311, 0.5803406749452863, 0.5767672572817121, 0.5746716090611049], "val_accuracy": [0.1366666704416275, 0.26866665482521057, 0.3383333384990692, 0.38233333826065063, 0.4103333353996277, 0.437666654586792, 0.4556666612625122, 0.4740000069141388, 0.492000013589859, 0.5146666765213013, 0.5333333611488342, 0.5453333258628845, 0.5606666803359985, 0.5646666884422302, 0.5786666870117188, 0.5860000252723694, 0.593999981880188, 0.606333315372467, 0.6256666779518127, 0.6420000195503235, 0.6616666913032532, 0.6663333177566528, 0.6726666688919067, 0.675000011920929, 0.6826666593551636, 0.687666654586792, 0.6909999847412109, 0.6933333277702332, 0.6946666836738586, 0.6990000009536743, 0.7026666402816772, 0.7070000171661377, 0.7086666822433472, 0.7106666564941406, 0.7153333425521851, 0.715666651725769, 0.7210000157356262, 0.7176666855812073, 0.7236666679382324, 0.7253333330154419, 0.7293333411216736, 0.7300000190734863, 0.7319999933242798, 0.734333336353302, 0.7390000224113464, 0.7379999756813049, 0.7423333525657654, 0.7426666617393494, 0.7429999709129333, 0.7436666488647461, 0.7450000047683716, 0.7509999871253967, 0.7506666779518127, 0.75, 0.7536666393280029, 0.7540000081062317, 0.7566666603088379, 0.7513333559036255, 0.7523333430290222, 0.7566666603088379, 0.7616666555404663, 0.7603333592414856, 0.7606666684150696, 0.7580000162124634, 0.7596666812896729, 0.7576666474342346]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.5997142791748047, "mapping_values": [1, 5, 5, 3, 2, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.03837004416119, 1.7216396599460855, 1.0433072760640165, 0.9153589017009218, 1.384696677722762, 1.4362958984572765, 1.7481164281646322, 2.130010145057887, 2.598028010979399], "accuracy": [0.35543522238731384, 0.4667811393737793, 0.6321489810943604, 0.6597543358802795, 0.6081098914146423, 0.548540472984314, 0.4562145173549652, 0.33839651942253113, 0.16563200950622559], "val_loss": [1.5923873015812464, 0.8191587924957275, 0.6666468211582729, 0.6116940975189209, 0.9746396541595459, 1.1800480910709925, 1.4780447823660714, 2.179312092917306, 1.7880755152021135], "val_accuracy": [0.47600001096725464, 0.7056666612625122, 0.6949999928474426, 0.7436666488647461, 0.5973333120346069, 0.5543333292007446, 0.44566667079925537, 0.14399999380111694, 0.34299999475479126]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 0, 6, 1, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 54, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [5, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.5497142672538757, "mapping_values": [1, 5, 5, 3, 2, 1, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0855780510051516, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2798837721347809, 0.26720380783081055, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.191892078944615, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.5383333563804626, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 1, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.2939999997615814, "mapping_values": [1, 15, 15, 10, 5, 4, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.771357762327032, 2.252970523460115, 2.3040926336470595, 2.303577221647592, 2.3001656222415874, 2.2503828317135586, 2.301272160152576, 2.302538760507332, 2.3037815842220986, 2.303025090289768], "accuracy": [0.18993528187274933, 0.1990489959716797, 0.1026284471154213, 0.09972262382507324, 0.1088363528251648, 0.20195482671260834, 0.11610091477632523, 0.13881917297840118, 0.09932637959718704, 0.0956280529499054], "val_loss": [1.9644532203674316, 1.9740583556038993, 1.974355833871024, 1.973010812486921, 1.9466092245919364, 1.9768147468566895, 1.872087069920131, 1.974466051374163, 1.9737955502101354, 1.9738795416695731], "val_accuracy": [0.25966668128967285, 0.1003333330154419, 0.10133333504199982, 0.10000000149011612, 0.32366666197776794, 0.10000000149011612, 0.2876666784286499, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 0, 0, 1, 1, 0, 1, 1], [0, 7, 6, 2, 9, 3, 9], [2, 0, 2, 0], [6, 32, 85]], "fitness": -0.1494285762310028, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [Infinity, 1803.8434060716106, 2386.5342074842533, 2047.3863131334565, NaN, NaN], "accuracy": [0.10091137140989304, 0.09959053993225098, 0.09496764093637466, 0.09509972482919693, 0.10315678268671036, 0.09998679161071777], "val_loss": [2023.0897739955358, 1375.80224609375, 895.6311558314732, 725.9477015904018, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.10000000149011612, 0.09933333098888397, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 0, 0, 9, 1, 2, 0, 3, 5, 2], [0, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [31, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.12628571689128876, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [4.842747590041447, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15440496802330017, 0.10394927859306335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4206.623744419643, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.13866665959358215, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 0, 0, 9, 1, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.1062857136130333, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [8.653589124708537, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1476687341928482, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [38938.333705357145, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 3, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 0, 1, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 0, 2], [93, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 4, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302053665834537, 2.3025134493095085, 2.3024948851275893, 2.3025091868413043, 2.3025152759781258, 2.3025147903864616], "accuracy": [0.10170386731624603, 0.10342095047235489, 0.10447761416435242, 0.10328886657953262, 0.10553427785634995, 0.10685510188341141], "val_loss": [1.9736413955688477, 1.9736429623195104, 1.9736467088971819, 1.9736459595816476, 1.9736430304391044, 1.9736390795026506], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [6, 3, 9, 9, 9, 6, 0, 0, 3, 5, 2], [1, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 0, 86, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [53, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 0, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 5, 0, 3, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3021317351180897, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 8, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 2, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 68, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [54, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3015268463043568, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 0, 0, 3, 1, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 22, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [77, 84, 6], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [20, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 4, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 3, 5, 5, 9, 6, 2, 0, 3, 8, 2], [2, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [25, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [6, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 0, 7, 2, 9, 3, 9], [2, 1, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 22, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 8, 5, 4, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [724891.311822563, 13176586.356888127, 62506745.65262184, 173437861.41645753, 368743033.030247, 671461083.5070665], "accuracy": [0.09893012791872025, 0.10540219396352768, 0.10077928751707077, 0.1014397069811821, 0.09166556596755981, 0.10579843819141388], "val_loss": [2645393.6428571427, 21083320.57142857, 71068649.14285715, 168355872.0, 328699904.0, 567855926.8571428], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 9, 5, 4, 9, 6, 2, 0, 3, 8, 2], [1, 1, 0, 2, 2, 1, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [0, 4, 6], [64, 55], [0, 1, 0, 1, 1], [7, 7, 5, 2, 9, 3, 9], [2, 0, 1], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05204068124294281, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 5, 3, 9, 6, 2, 0, 3, 8, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 54, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 3, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2894725646.072406, 3366997252398.6963, 213061481366434.53, 3747192253407715.5, 3.3641593336767588e+16, 1.954825568626953e+17], "accuracy": [0.09893012791872025, 0.10540219396352768, 0.10077928751707077, 0.1014397069811821, 0.09166556596755981, 0.10553427785634995], "val_loss": [43320314148.57143, 17077366985289.143, 600038798374619.4, 7635990296695369.0, 5.537781857453905e+16, 2.8055439096616432e+17], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [6, 2, 5, 2, 4, 6, 2, 0, 3, 5, 2, 8, 1, 8, 4, 6, 2, 8, 6, 2, 9, 1, 9], [0, 0, 0, 2, 2, 0, 0, 1, 0, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 74, 25, 3, 75, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [25, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 37, 37, 23, 14, 9, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), grad)), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), alpha))))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))))))), grad)), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09885714203119278, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.6930444498166684, 2.6219050130351595, 2.3454499622582285, NaN, NaN, NaN], "accuracy": [0.1220446452498436, 0.11306300014257431, 0.09126931428909302, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.469597271510533, 2.045865944453648, 1103.5885184151787, NaN, NaN, NaN], "val_accuracy": [0.1066666692495346, 0.1003333330154419, 0.0846666693687439, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]