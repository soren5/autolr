[{"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8482857346534729, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 10, 6, 5, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0482314153669248, 1.5204809024711532, 1.003049940937593, 0.803208633263381, 0.6924904646213422, 0.6438890998673051, 0.5912063654781317, 0.5509033724301526, 0.5379077333973195, 0.5095683703561422, 0.4771192407941837, 0.46326320053815934, 0.4539597558071427, 0.44740402565467247, 0.43489762778531577, 0.41415604713602056, 0.3998106818283554, 0.3735820895936495, 0.3857172523798519, 0.37294142757345733, 0.35613985735789705, 0.34219812633197355, 0.3441288122340688, 0.32818310200703565, 0.3161885307496801, 0.3062826196916855, 0.3069559168294436, 0.302474110192784, 0.2933871601283227, 0.27585735891898544, 0.2826920807393094, 0.2708384508643215, 0.2626836109592017, 0.2690332151753571, 0.2567540539639926, 0.24740899341721434, 0.25471766866185586, 0.23419622987363128, 0.24178429665330567, 0.23728453663865792, 0.23250263436335647, 0.22363946284828656, 0.21918150477515802, 0.21085440136886874, 0.2028671882297731, 0.20189136225966856, 0.20232226567426773, 0.19618640146463648, 0.18762331777056054, 0.19394093377754562, 0.18972973526508233, 0.19136177791249814, 0.17955952042940349], "accuracy": [0.3307357132434845, 0.4511953592300415, 0.6305639743804932, 0.6966054439544678, 0.7387399077415466, 0.7544577717781067, 0.7755910754203796, 0.7926297783851624, 0.8035926818847656, 0.8153480291366577, 0.8276317715644836, 0.8333113193511963, 0.8334434032440186, 0.8379341959953308, 0.8451988101005554, 0.8506141901016235, 0.8543124794960022, 0.8648791313171387, 0.8625016212463379, 0.8650112152099609, 0.8702945709228516, 0.8759741187095642, 0.8741249442100525, 0.8819178342819214, 0.8823140859603882, 0.8865407705307007, 0.8840311765670776, 0.8885219693183899, 0.8903711438179016, 0.8975036144256592, 0.893541157245636, 0.8951261639595032, 0.9037115573883057, 0.8994848728179932, 0.9008057117462158, 0.9080702662467957, 0.9052965044975281, 0.9099194407463074, 0.9085986018180847, 0.913617730140686, 0.9096552729606628, 0.9121648669242859, 0.9178444147109985, 0.9199577569961548, 0.923920214176178, 0.9223352074623108, 0.9253731369972229, 0.9255052208900452, 0.9294676780700684, 0.9240522980690002, 0.9286752343177795, 0.9268260598182678, 0.9319772720336914], "val_loss": [1.5000486033303397, 0.8607243980680194, 0.6718704530170986, 0.5536209515162877, 0.5111620766775948, 0.48571458884647917, 0.44592336245945524, 0.4156607815197536, 0.39950153657368254, 0.3974012051309858, 0.3717781475612095, 0.3693633420126779, 0.36480010407311575, 0.36645286423819406, 0.3576949494225638, 0.3372365151132856, 0.32916983536311556, 0.3272455164364406, 0.32723855120795114, 0.32841934476579937, 0.32654022318976267, 0.3185016768319266, 0.30355227845055716, 0.30694063220705303, 0.29951705251421246, 0.3212208236966814, 0.31171480246952604, 0.30872740915843416, 0.2988584467342922, 0.2987656167575291, 0.29733637401035856, 0.2966452070644924, 0.296940130846841, 0.29584233249936787, 0.30162796803883146, 0.30053708383015226, 0.30756431818008423, 0.2945876291819981, 0.2969441669327872, 0.311994731426239, 0.30145582982472013, 0.2962438975061689, 0.3081840361867632, 0.29425729172570364, 0.299226565020425, 0.318745493888855, 0.29979786702564787, 0.29645409754344393, 0.30758351939065115, 0.3130225198609488, 0.31114271708897184, 0.3084456239427839, 0.3143983313015529], "val_accuracy": [0.42899999022483826, 0.6476666927337646, 0.6913333535194397, 0.7403333187103271, 0.762333333492279, 0.768666684627533, 0.7956666946411133, 0.8096666932106018, 0.8243333101272583, 0.8206666707992554, 0.8360000252723694, 0.8383333086967468, 0.8383333086967468, 0.8399999737739563, 0.8443333506584167, 0.8503333330154419, 0.8553333282470703, 0.8529999852180481, 0.8546666502952576, 0.8529999852180481, 0.8600000143051147, 0.8613333106040955, 0.8683333396911621, 0.8636666536331177, 0.8690000176429749, 0.859333336353302, 0.8646666407585144, 0.8663333058357239, 0.8686666488647461, 0.871999979019165, 0.8690000176429749, 0.871999979019165, 0.8766666650772095, 0.8743333220481873, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8773333430290222, 0.8809999823570251, 0.8766666650772095, 0.8759999871253967, 0.8773333430290222, 0.8713333606719971, 0.8816666603088379, 0.8833333253860474, 0.8773333430290222, 0.8799999952316284, 0.8849999904632568, 0.878000020980835, 0.8733333349227905, 0.8809999823570251, 0.8806666731834412, 0.8849999904632568]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 3, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [45, 84, 6], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8451428413391113, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.04877444081035, 1.5079124452037709, 0.9588302775081815, 0.7893091164103211, 0.6967488406608606, 0.6535194770314549, 0.5945989239831501, 0.5488254838159229, 0.5361932278891848, 0.5038284251970496, 0.4742627065565293, 0.46121240391975005, 0.4521434450540025, 0.44128428979588225, 0.4339641038500134, 0.4192433179471912, 0.4078562579662289, 0.38098930711082385, 0.38213166827538925, 0.3743956349253765, 0.3552369319090455, 0.33954209626201215, 0.34328227196828076, 0.32401071976771395, 0.3157544557043055, 0.30519027847183094, 0.30451274766047803, 0.3057974954999874], "accuracy": [0.33099988102912903, 0.4539690911769867, 0.6465460062026978, 0.7016246318817139, 0.7354378700256348, 0.7532690763473511, 0.7779685854911804, 0.7981772422790527, 0.8026680946350098, 0.8190463781356812, 0.8278959393501282, 0.83119797706604, 0.8338396549224854, 0.8376700282096863, 0.8411042094230652, 0.8462554216384888, 0.8512746095657349, 0.8605204224586487, 0.8625016212463379, 0.8651432991027832, 0.8720116019248962, 0.8771628737449646, 0.8745211958885193, 0.8842953443527222, 0.8819178342819214, 0.8857482671737671, 0.8869370222091675, 0.8877294659614563], "val_loss": [1.5005343300955636, 0.8448039804186139, 0.6310069220406669, 0.5501019443784442, 0.5293007578168597, 0.49262501512254986, 0.44015938895089285, 0.42139181920460295, 0.40731416429792133, 0.39138332435062956, 0.3854267341750009, 0.3655185614313398, 0.3748528020722525, 0.36220660379954744, 0.3703843525477818, 0.3397701212338039, 0.33786410093307495, 0.33133959770202637, 0.31914368697575163, 0.33078073603766306, 0.32223803656441824, 0.317414002759116, 0.3034579839025225, 0.3024548121861049, 0.3002652270453317, 0.3164355329104832, 0.3189405543463571, 0.31838810443878174], "val_accuracy": [0.4286666810512543, 0.6603333353996277, 0.7229999899864197, 0.7453333139419556, 0.75, 0.7646666765213013, 0.8036666512489319, 0.8113333582878113, 0.8233333230018616, 0.82833331823349, 0.8253333568572998, 0.8399999737739563, 0.8396666646003723, 0.8426666855812073, 0.8316666483879089, 0.8479999899864197, 0.8506666421890259, 0.8526666760444641, 0.8573333621025085, 0.8543333411216736, 0.8583333492279053, 0.8603333234786987, 0.8683333396911621, 0.8666666746139526, 0.8679999709129333, 0.8633333444595337, 0.8633333444595337, 0.8583333492279053]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 7, 6, 8, 5, 0, 9], [3, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8351428508758545, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 9, 6, 5, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.049174101140757, 1.4941996517529057, 0.9814315331673437, 0.7765545806533956, 0.6854087270214699, 0.6370933622401294, 0.5862433535154264, 0.5481458215697126, 0.5329962660686577, 0.4972847409102549, 0.4726996546439711, 0.45758116645205843, 0.4482322259822211, 0.43750440608304114, 0.4395774122336915, 0.41647348108229904, 0.40311735519690833, 0.3746722002330788, 0.38101156319074186, 0.37199319707183726, 0.3473083941518607, 0.3415065659917404, 0.34007905817082246, 0.32475135370000574, 0.3127707617236576, 0.29562062539554873, 0.3038249122995695, 0.29534768887388707, 0.29642170177569177, 0.2778700104384548, 0.27735989384049076, 0.27000880562602536, 0.2596012479192026, 0.2641663154307421, 0.25605495040442855, 0.24840183488570972, 0.24802077605212292, 0.2376400756857194, 0.2402915945693628, 0.23619995907533595, 0.2311139139875114, 0.22194045198324286, 0.22275818189798707, 0.21128835982855018, 0.19942755570871137, 0.19963679344087876, 0.19864804457010546, 0.1885942598717985, 0.19043507049183223], "accuracy": [0.3307357132434845, 0.46070531010627747, 0.6402060389518738, 0.7033417224884033, 0.7400607466697693, 0.7589486241340637, 0.7781006693840027, 0.7977809906005859, 0.8078193068504333, 0.8207634687423706, 0.8302733898162842, 0.8348963260650635, 0.8388587832450867, 0.8383304476737976, 0.8432175517082214, 0.8482366800308228, 0.8548408150672913, 0.8636903762817383, 0.8601241707801819, 0.8639545440673828, 0.872407853603363, 0.8787478804588318, 0.8758420348167419, 0.8824461698532104, 0.8819178342819214, 0.8893144726753235, 0.8858803510665894, 0.8924844861030579, 0.8894465565681458, 0.8985602855682373, 0.8971073627471924, 0.8976356983184814, 0.9021265506744385, 0.9030511379241943, 0.9006736278533936, 0.9071456789970398, 0.909259021282196, 0.9099194407463074, 0.91124027967453, 0.9145423173904419, 0.9129573106765747, 0.913617730140686, 0.9119006991386414, 0.9190331697463989, 0.9245806336402893, 0.9222031235694885, 0.927882730960846, 0.9294676780700684, 0.9262977242469788], "val_loss": [1.5002260548727853, 0.8710970197405133, 0.6377073526382446, 0.5452240535191127, 0.5096148763384137, 0.48039616857256207, 0.4348150832312448, 0.4260740876197815, 0.3982820766312735, 0.38928089823041645, 0.3771435873849051, 0.36007195711135864, 0.3662739736693246, 0.3615544012614659, 0.3590538075992039, 0.34400027990341187, 0.3336217999458313, 0.33130317074911936, 0.3207156147275652, 0.3261759451457432, 0.3249272278376988, 0.3094967944281442, 0.30675418036324636, 0.3052177003451756, 0.30344901766095844, 0.3191132460321699, 0.3115906459944589, 0.31837732451302664, 0.31182620355061125, 0.2991199663707188, 0.30488565989903044, 0.29590400627681185, 0.30177557468414307, 0.3026729907308306, 0.2990057298115322, 0.29409234864371164, 0.30647667816707064, 0.2996558036123003, 0.3017039554459708, 0.3198408229010446, 0.304786741733551, 0.29635806594576153, 0.31029945611953735, 0.29345197337014334, 0.3055198873792376, 0.31413745880126953, 0.29568335839680265, 0.2994768960135324, 0.2964747207505362], "val_accuracy": [0.4266666769981384, 0.6396666765213013, 0.7139999866485596, 0.7453333139419556, 0.7559999823570251, 0.7706666588783264, 0.8053333163261414, 0.8080000281333923, 0.8226666450500488, 0.8243333101272583, 0.8263333439826965, 0.8456666469573975, 0.8429999947547913, 0.8493333458900452, 0.8399999737739563, 0.8443333506584167, 0.8579999804496765, 0.8489999771118164, 0.859333336353302, 0.8583333492279053, 0.8569999933242798, 0.8633333444595337, 0.862666666507721, 0.8653333187103271, 0.8663333058357239, 0.8606666922569275, 0.8669999837875366, 0.8619999885559082, 0.8650000095367432, 0.8679999709129333, 0.8679999709129333, 0.875333309173584, 0.8693333268165588, 0.871666669845581, 0.8706666827201843, 0.8740000128746033, 0.878000020980835, 0.878333330154419, 0.8790000081062317, 0.8730000257492065, 0.8723333477973938, 0.8836666941642761, 0.8726666569709778, 0.8846666812896729, 0.878333330154419, 0.8709999918937683, 0.8793333172798157, 0.8796666860580444, 0.8799999952316284]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [73, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [39, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [6, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [1, 3, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 1, 2, 1, 10, 6, 5, 1, 0, 5, 2, 3, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 5, 2, 1, 6, 2, 0, 3, 5, 2], [0, 3, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [55, 59, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [2, 5, 3, 3, 0], [45, 84, 6], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [6, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [1, 5, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 11, 8, 6, 2, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, tf.math.square(sigma)))))), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [21177.619503470178, 28584.402642226505, 28744.704822988213, 29044.664719819048, 29451.24731835499, 29968.47156501783], "accuracy": [0.10011887550354004, 0.09985470771789551, 0.09840179979801178, 0.10474177449941635, 0.10381719470024109, 0.1002509593963623], "val_loss": [24567.15792410714, 24641.085379464286, 24824.179129464286, 25129.090959821428, 25530.136160714286, 26035.94363839286], "val_accuracy": [0.09933333098888397, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 5, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 9, 6, 5, 1, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.square(tf.math.add(sigma, beta))))), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06432439386844635, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [73, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [4, 7, 9, 0, 1, 9], [1, 5, 3, 3, 0], [45, 84, 6], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [2, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(alpha), tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], [3, 8, 1, 2, 1, 2, 2, 1, 5, 5, 2, 7, 5, 4, 1, 3, 4, 3, 7, 5, 1], [1, 2, 0, 2, 2, 1, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 29, 6], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [6, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 8, 8, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(alpha, tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.30251649008325, 2.3026325461760866, 2.302636277737036, 2.302648494681662, 2.3026081972496306, 2.3026279650501618, 2.30262774766759], "accuracy": [0.0940430611371994, 0.09615638852119446, 0.09774138033390045, 0.0940430611371994, 0.09747721254825592, 0.09113723784685135, 0.0944393053650856], "val_loss": [1.9736473219735282, 1.9736497061593192, 1.973651545388358, 1.973644188472203, 1.9736456189836775, 1.9736454827444894, 1.973644733428955], "val_accuracy": [0.09933333098888397, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.1003333330154419, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [74, 93, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 4, 7, 2, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [2.3024577932303623, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [3, 3, 1, 2, 1, 1, 2, 0, 3, 5, 2, 7, 5, 4, 1, 3, 4, 3, 7, 5, 1], [2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 29, 6], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 4, 7, 2, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 10, 9, 3, 6, 6, 4, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), tf.math.square(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06524897366762161, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 2, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [9, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [9, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 4, 7, 5, 8, 5, 0, 9], [2, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 7, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.square(sigma)))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.577346099350415, 5.471614210345191, 12.45965063649083, 23.530445656646055, 39.7310488359126, 60.61359317846554], "accuracy": [0.0940430611371994, 0.09325055778026581, 0.10091137140989304, 0.10210011899471283, 0.09932637959718704, 0.10487385839223862], "val_loss": [2.600775650569371, 5.731176376342773, 11.475319181169782, 20.02386474609375, 31.768350873674667, 47.12299019949777], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 4, 2, 1, 1, 2, 0, 0, 5, 2], [0, 2, 0, 2, 2, 2, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 10, 6, 5, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05996565893292427, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [65, 84, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 4, 7, 6, 3, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 5, 5, 3, 2, 2, 13, 9, 7, 2, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, tf.math.square(sigma)))), sigma)), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3024577932303623, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 1, 4, 9, 6, 1, 3, 3, 5, 2], [1, 2, 0, 0, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [2, 5, 3, 3, 0], [57, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 1, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 6, 5, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 0, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 0, 0, 1, 1, 0, 1, 0], [4, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304718618552919, 2.3044518997105214, 2.305089130377678, 2.3054052836166603, 2.3040572337628102, 2.3042735459231083], "accuracy": [0.09126931428909302, 0.10276053100824356, 0.09813763201236725, 0.09470347315073013, 0.0948355570435524, 0.09509972482919693], "val_loss": [1.9738317217145647, 1.9740681648254395, 1.9741743632725306, 1.9744324002947127, 1.974045957837786, 1.9742193222045898], "val_accuracy": [0.10133333504199982, 0.1003333330154419, 0.10000000149011612, 0.09933333098888397, 0.09833333641290665, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 1, 0, 1, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [1, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 4, 7, 2, 8, 5, 0, 9], [4, 4, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 6, 6, 4, 2, 1, 9, 6, 5, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.402155402818014, 213.06383488758004, 55075.50601106401, 14317113.169132216, 3657785389.597147, 931355441003.4923], "accuracy": [0.10408136248588562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.005231176103864, 1797.5914481026787, 461443.1785714286, 117917490.28571428, 30131652900.57143, 7699618669714.286], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 3, 2, 9, 6, 2, 0, 2, 5, 2], [0, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [95, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [6, 4, 7, 0, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.06714285910129547, "mapping_values": [1, 15, 15, 9, 6, 3, 6, 6, 4, 2, 2, 8, 6, 4, 2, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(grad, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.negative(sigma)))), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3032008794792858, 2.2994180014734615, 2.2985623206570795, 2.2972467331098385, 2.2964210343981275, 2.296983563148933, 2.2980742186225243, 2.2995200592056637, 2.3001963127054608, 2.3010852296260116], "accuracy": [0.09153348207473755, 0.10157178342342377, 0.09747721254825592, 0.10619468986988068, 0.11728965491056442, 0.11557257920503616, 0.11372341960668564, 0.10976093262434006, 0.10447761416435242, 0.10342095047235489], "val_loss": [1.9700419562203544, 1.9691130093165807, 1.9678778648376465, 1.9674342019217355, 1.9677849497113908, 1.9693612371172224, 1.9709339141845703, 1.9716123853410994, 1.9722931044442313, 1.9729713031223841], "val_accuracy": [0.04766666516661644, 0.04699999839067459, 0.0560000017285347, 0.10100000351667404, 0.13366666436195374, 0.11699999868869781, 0.10466666519641876, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 1, 0, 1, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [55, 59, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [2, 7, 9, 0, 1, 9], [1, 5, 3, 3, 0], [45, 84, 6], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [6, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.06400000303983688, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.2060730877081323, 2.93360797443473, 2.904793358214417, NaN, NaN, NaN], "accuracy": [0.1826707124710083, 0.12613920867443085, 0.09747721254825592, 0.09589222073554993, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0015551022120883, 2.858496734074184, 351.9913068498884, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.07633333653211594, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 3, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [1, 5, 3, 3, 0], [14, 84, 6], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [2, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.04828571528196335, "mapping_values": [1, 4, 4, 2, 2, 2, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3033607562834386, 2.300343558583923, 2.3004827770842318, 2.29988491099036, 2.2990971155422333, 2.2999657427614326, 2.301211110227033, 2.3026192458455967, 2.3031145384786877, 2.3042684771900936], "accuracy": [0.09126931428909302, 0.09840179979801178, 0.09391097724437714, 0.09787346422672272, 0.11108175665140152, 0.10447761416435242, 0.10460969805717468, 0.1022322028875351, 0.10434553027153015, 0.10249637067317963], "val_loss": [1.9704977444240026, 1.9706407274518694, 1.970135280064174, 1.9700120517185755, 1.9702930450439453, 1.9722309112548828, 1.973543439592634, 1.9740488869803292, 1.9746172087533134, 1.9753684316362654], "val_accuracy": [0.04500000178813934, 0.0403333343565464, 0.045666664838790894, 0.08533333241939545, 0.1289999932050705, 0.11033333092927933, 0.09933333098888397, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419]}}]