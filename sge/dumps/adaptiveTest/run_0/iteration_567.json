[{"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 2, 1, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.849142849445343, "mapping_values": [1, 12, 12, 7, 5, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.047484786692171, 1.098032571415718, 0.7863897015909556, 0.7011684595617431, 0.635333789282975, 0.585952338832575, 0.5530840071626012, 0.5142787951661643, 0.5064232991655284, 0.47506179332166315, 0.45261130677694816, 0.43445612909204656, 0.42759832217866217, 0.41086440195559887, 0.3971027308341109, 0.3906142658695112, 0.3685804822142287, 0.37213406451326936, 0.3579224808742625, 0.34852369650243814, 0.3397794277314355, 0.33588508378087945, 0.3258331560258773, 0.3095757278901963, 0.31439062013775365, 0.2929126801562898, 0.2905407069050924, 0.27893563868851157, 0.277649485502796, 0.27244095245073374, 0.26952676087117955, 0.25377983678530364, 0.2575286392148586, 0.2534277488145027, 0.23917176248044417, 0.2315609032321899, 0.2260228458798368, 0.22594329478001912, 0.22286785526117234], "accuracy": [0.308149516582489, 0.6244881749153137, 0.7041342258453369, 0.7371549606323242, 0.7604015469551086, 0.7792893648147583, 0.7922335267066956, 0.8059701323509216, 0.81548011302948, 0.8238013386726379, 0.8334434032440186, 0.8417646288871765, 0.8433496356010437, 0.8450667262077332, 0.8535200357437134, 0.8540483713150024, 0.8639545440673828, 0.8573504090309143, 0.8652753829956055, 0.8710870146751404, 0.8761062026023865, 0.8737286925315857, 0.8768987059593201, 0.8808611631393433, 0.885219931602478, 0.8914278149604797, 0.8889182209968567, 0.89552241563797, 0.8914278149604797, 0.8938053250312805, 0.8981640338897705, 0.9033153057098389, 0.8989565372467041, 0.9025228023529053, 0.9071456789970398, 0.9122969508171082, 0.9128252267837524, 0.9169198274612427, 0.9119006991386414], "val_loss": [0.9279624053410122, 0.6256602661950248, 0.5785971028464181, 0.5183080945696149, 0.48827825273786274, 0.4559386798313686, 0.4293673038482666, 0.4050527811050415, 0.39502859115600586, 0.38015354531151907, 0.37122333901269094, 0.3655841180256435, 0.35102843386786325, 0.3492488009589059, 0.33631283044815063, 0.329916204724993, 0.3303356426102774, 0.32019174098968506, 0.32034741980688913, 0.31985028300966534, 0.3082028882844107, 0.3103094186101641, 0.3116183280944824, 0.3129731757300241, 0.3006181035723005, 0.3069818615913391, 0.30049837487084524, 0.3009329012462071, 0.30306726694107056, 0.29930240767342703, 0.2995008741106306, 0.2955717785017831, 0.3005978890827724, 0.2863256846155439, 0.29897089515413555, 0.3012499894414629, 0.29070391825267244, 0.29438789401735577, 0.2957419327327183], "val_accuracy": [0.628333330154419, 0.7170000076293945, 0.7413333058357239, 0.7630000114440918, 0.7699999809265137, 0.7933333516120911, 0.8066666722297668, 0.8209999799728394, 0.8206666707992554, 0.8323333263397217, 0.8370000123977661, 0.8363333344459534, 0.843999981880188, 0.8446666598320007, 0.8516666889190674, 0.8526666760444641, 0.8489999771118164, 0.8553333282470703, 0.856333315372467, 0.859333336353302, 0.8656666874885559, 0.8550000190734863, 0.856333315372467, 0.8619999885559082, 0.8703333139419556, 0.871666669845581, 0.8659999966621399, 0.8696666955947876, 0.8683333396911621, 0.8740000128746033, 0.871666669845581, 0.874666690826416, 0.8679999709129333, 0.878333330154419, 0.8690000176429749, 0.8759999871253967, 0.8769999742507935, 0.8756666779518127, 0.875333309173584]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [6, 3, 0, 2, 9, 6, 3, 0, 3, 5, 2, 9], [1, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [20, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8448571562767029, "mapping_values": [1, 18, 18, 12, 6, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(grad)))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1697883021483535, 1.9541862872707814, 1.1418651720126858, 0.7894095197219607, 0.7295791755940039, 0.6534214099290239, 0.6340441243003908, 0.6006660029526321, 0.5605143680076211, 0.5401719710011571, 0.5228174223072887, 0.5067977790331183, 0.5115922122756803, 0.47265428340099647, 0.4616353716738173, 0.45123849506659075, 0.4395638199853009, 0.42634025262551867, 0.405373669594916, 0.42416089682641395, 0.3970757857045761, 0.38707874580900886, 0.37862513301048484, 0.36137870273743133, 0.3635881153536731, 0.3388240064147787, 0.3513503721196181, 0.3345775224033238, 0.32685365850552905, 0.3196121525526708, 0.31955468659356223], "accuracy": [0.3074890971183777, 0.3693039119243622, 0.5947695374488831, 0.707040011882782, 0.7255316376686096, 0.7619865536689758, 0.7638356685638428, 0.7778365015983582, 0.7950072884559631, 0.8058380484580994, 0.8101968169212341, 0.8185180425643921, 0.8158763647079468, 0.8284242749214172, 0.8308017253875732, 0.8347642421722412, 0.8418967127799988, 0.8467837572097778, 0.8524633646011353, 0.848368763923645, 0.8548408150672913, 0.8602562546730042, 0.8634262084960938, 0.8676528930664062, 0.8691058158874512, 0.8775591254234314, 0.8716153502464294, 0.8772949576377869, 0.8796724081039429, 0.8844274282455444, 0.8786157965660095], "val_loss": [1.8781743730817522, 1.127011707850865, 0.6397995097296578, 0.5466463395527431, 0.5040440729686192, 0.5041240794318063, 0.4979870319366455, 0.4342297485896519, 0.4132131678717477, 0.40593464033944265, 0.41804812635694233, 0.41047823429107666, 0.38454160520008634, 0.3720807262829372, 0.3699812889099121, 0.3649248991693769, 0.347926710333143, 0.3554018480437143, 0.3702017750058855, 0.34108293056488037, 0.33404853514262606, 0.3315177389553615, 0.3166432636124747, 0.31945266893931795, 0.3111727918897356, 0.30617363112313406, 0.31692865065165926, 0.3096876399857657, 0.30152263811656405, 0.3393245169094631, 0.3074900678225926], "val_accuracy": [0.25866666436195374, 0.5663333535194397, 0.7200000286102295, 0.7519999742507935, 0.7716666460037231, 0.7446666955947876, 0.7673333287239075, 0.8130000233650208, 0.8140000104904175, 0.8230000138282776, 0.8083333373069763, 0.8063333630561829, 0.831333339214325, 0.8379999995231628, 0.8360000252723694, 0.8363333344459534, 0.8476666808128357, 0.847000002861023, 0.8379999995231628, 0.8513333201408386, 0.8486666679382324, 0.8519999980926514, 0.8616666793823242, 0.8606666922569275, 0.8629999756813049, 0.8663333058357239, 0.8573333621025085, 0.8629999756813049, 0.8633333444595337, 0.859333336353302, 0.8646666407585144]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [6, 3, 0, 2, 4, 6, 1, 0, 3, 5, 2], [1, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8371428847312927, "mapping_values": [1, 17, 17, 9, 8, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1697746123683106, 1.9529220368553226, 1.114401699923222, 0.792638679836184, 0.7553169562076266, 0.6646804916718538, 0.6390767924270105, 0.5947277902486129, 0.5653687514932542, 0.5498161487465348, 0.5261984831542702, 0.5142123750636701, 0.511384994464701, 0.4718173282289108, 0.4603698473399609, 0.4496325616823322, 0.4426043894210307, 0.41959439761854983, 0.41574539226264434, 0.42255099376179145, 0.3994136311083327, 0.3885738211080556, 0.3821127816332078, 0.3658763785144011, 0.36247489338521993, 0.3494566039851061, 0.3513818858928212, 0.32996337541090326, 0.32638604468389854], "accuracy": [0.30762118101119995, 0.369700163602829, 0.5995244979858398, 0.7012283802032471, 0.7152291536331177, 0.7580240368843079, 0.7625148296356201, 0.7823272943496704, 0.7943468689918518, 0.8012151718139648, 0.8087438941001892, 0.8162726163864136, 0.8161405324935913, 0.830669641494751, 0.835160493850708, 0.837537944316864, 0.8400475382804871, 0.8500858545303345, 0.8471800088882446, 0.8474441766738892, 0.8562937378883362, 0.8618412613868713, 0.8603883385658264, 0.8644828796386719, 0.8677849769592285, 0.8746532797813416, 0.8692378997802734, 0.8767666220664978, 0.8776912093162537], "val_loss": [1.8783912658691406, 1.1171963896070207, 0.6394134419304984, 0.5462173223495483, 0.5255905389785767, 0.4910331964492798, 0.4796834332602365, 0.4333422865186419, 0.41706086908067974, 0.4079434275627136, 0.42013018471854074, 0.42002715383257183, 0.3838216406958444, 0.3672322460583278, 0.3671065994671413, 0.37317611489977154, 0.34276809862681795, 0.3479034389768328, 0.36776804072516306, 0.33416636501039776, 0.3334870593888419, 0.3271907993725368, 0.31544796909604755, 0.3205791286059788, 0.30918156249182566, 0.3181907704898289, 0.3180816684450422, 0.3131210037640163, 0.3122472507613046], "val_accuracy": [0.2593333423137665, 0.5663333535194397, 0.7043333053588867, 0.750333309173584, 0.7646666765213013, 0.7733333110809326, 0.7806666493415833, 0.8069999814033508, 0.8159999847412109, 0.8233333230018616, 0.8096666932106018, 0.8056666851043701, 0.8246666789054871, 0.8386666774749756, 0.8370000123977661, 0.8273333311080933, 0.8476666808128357, 0.8529999852180481, 0.8330000042915344, 0.8500000238418579, 0.8496666550636292, 0.8510000109672546, 0.8586666584014893, 0.8629999756813049, 0.859000027179718, 0.8600000143051147, 0.8573333621025085, 0.8560000061988831, 0.8553333282470703]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 2, 2, 9, 3, 0, 0, 3, 5, 2], [0, 2, 0, 2, 0, 1, 0, 1, 2, 1, 3, 2, 0, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8368571400642395, "mapping_values": [1, 16, 16, 10, 6, 4, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.169667387556611, 1.9499464715082946, 1.130707007050593, 0.795271836188743, 0.7396384194904645, 0.6605271719245548, 0.6237466625958826, 0.5927148473229721, 0.5653410127622387, 0.5418707101556997, 0.5226734862146817, 0.5094690871174152, 0.4985733166378345, 0.46894824537917873, 0.4615919430691096, 0.4558726135356441, 0.43185605841494823, 0.42311760172269536, 0.40469730858474656, 0.4224932855540074, 0.38855122285055493, 0.3836289747216997, 0.37672277073409216, 0.35733310937125684, 0.3529757110867219, 0.3431605408535248, 0.3451150553715527, 0.32209240138066236, 0.3229681308345709, 0.3140303844537056], "accuracy": [0.3073570132255554, 0.37102100253105164, 0.6038832664489746, 0.7061154246330261, 0.717870831489563, 0.7541936039924622, 0.7667415142059326, 0.7837802171707153, 0.7923656105995178, 0.8041210174560547, 0.8140271902084351, 0.8146876096725464, 0.8201030492782593, 0.834632158279419, 0.830669641494751, 0.8334434032440186, 0.8445383906364441, 0.8488970994949341, 0.8514066934585571, 0.8465195894241333, 0.858671247959137, 0.8590674996376038, 0.8661999702453613, 0.8667283058166504, 0.8720116019248962, 0.8754457831382751, 0.872407853603363, 0.8794082403182983, 0.882710337638855, 0.8825782537460327], "val_loss": [1.878887380872454, 1.1237000397273473, 0.6284304005759103, 0.5536404848098755, 0.5032358510153634, 0.4924889292035784, 0.4827077218464443, 0.43858238628932406, 0.4214447821889605, 0.41471022367477417, 0.42321727105549406, 0.4158498304230826, 0.37989761999675203, 0.36999129397528513, 0.37274268695286344, 0.3684012378965105, 0.3387552670070103, 0.34966656139918734, 0.35389372280665804, 0.3315337726048061, 0.3271304283823286, 0.31953939369746615, 0.3167919772011893, 0.3156032477106367, 0.3045028703553336, 0.3093556250844683, 0.3179541655949184, 0.31791140351976666, 0.3083630544798715, 0.32329078231539043], "val_accuracy": [0.25699999928474426, 0.6000000238418579, 0.7336666584014893, 0.7509999871253967, 0.7743333578109741, 0.7720000147819519, 0.7689999938011169, 0.8050000071525574, 0.8043333292007446, 0.815666675567627, 0.8043333292007446, 0.8059999942779541, 0.8306666612625122, 0.8356666564941406, 0.8299999833106995, 0.8296666741371155, 0.8533333539962769, 0.8506666421890259, 0.8426666855812073, 0.8556666374206543, 0.8560000061988831, 0.8569999933242798, 0.8619999885559082, 0.8606666922569275, 0.8653333187103271, 0.856333315372467, 0.8543333411216736, 0.8636666536331177, 0.8643333315849304, 0.8603333234786987]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 4, 8, 2, 9, 6, 1, 2, 2, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8360000252723694, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.16976258169312, 1.9551415785098072, 1.1108824617795625, 0.7954161071884414, 0.7689917126682535, 0.6679646774305722, 0.6329716251369134, 0.5945822100566284, 0.5629746422571135, 0.5431756856041247, 0.5192610550203879, 0.5046471949022648, 0.5044080622207849, 0.4743442670496904, 0.46743931264185146, 0.4522864973351405, 0.44920903050258665, 0.4230924894812557, 0.40927759449810414, 0.4197418982948625, 0.38906377733045044, 0.38700701105218316, 0.3847530152205353, 0.364445285113134, 0.36224621763838405, 0.3475108940713772, 0.34307389860974485, 0.33592156266193063, 0.32325559168790297, 0.3270860751779592, 0.31819393456950557, 0.3098138079171199, 0.3117183298128408, 0.2959247388230055, 0.297619930544644, 0.29120388340483944, 0.27601262961301853, 0.27402278945871456, 0.2736113071638469, 0.27005100143174643, 0.25486819274263955, 0.26713927301748347, 0.25399302411639946], "accuracy": [0.3074890971183777, 0.3689076602458954, 0.6029586791992188, 0.7065116763114929, 0.7120591998100281, 0.7555144429206848, 0.7631752490997314, 0.7823272943496704, 0.796328067779541, 0.8018755912780762, 0.8087438941001892, 0.8168009519577026, 0.8171972036361694, 0.8277638554573059, 0.8294808864593506, 0.8372738361358643, 0.8334434032440186, 0.8488970994949341, 0.852859616279602, 0.8494254350662231, 0.8558974862098694, 0.8568220734596252, 0.8585391640663147, 0.8618412613868713, 0.8660678863525391, 0.8710870146751404, 0.8709549307823181, 0.8747853636741638, 0.8784837126731873, 0.8758420348167419, 0.8805969953536987, 0.8850878477096558, 0.8838990926742554, 0.8908994793891907, 0.8887861371040344, 0.8916919827461243, 0.8905032277107239, 0.8980319499969482, 0.8963148593902588, 0.8981640338897705, 0.9005415439605713, 0.895918607711792, 0.9051644206047058], "val_loss": [1.878237247467041, 1.1064176218850272, 0.6554529326302665, 0.563437853540693, 0.5142964465277535, 0.5046513591493879, 0.48589774540492464, 0.4357934423855373, 0.4154373662812369, 0.4123639038630894, 0.4091161574636187, 0.4042788403374808, 0.3892977237701416, 0.37083496366228375, 0.37107267550059725, 0.3686069846153259, 0.33910997424806866, 0.34577085290636334, 0.34918612241744995, 0.3306507042476109, 0.32720122167042326, 0.3241313525608608, 0.31266227790287565, 0.32268397297178, 0.3091455527714321, 0.30767920187541414, 0.3232704997062683, 0.3084503241947719, 0.30548166377203806, 0.31872059617723736, 0.30381298065185547, 0.30084409032549175, 0.30390418427331106, 0.2992294601031712, 0.2957985656602042, 0.2956834094864981, 0.2936256868498666, 0.29758776085717337, 0.3202376365661621, 0.3026237828390939, 0.304882322038923, 0.29443988629749845, 0.30434848581041607], "val_accuracy": [0.257666677236557, 0.57833331823349, 0.6976666450500488, 0.7540000081062317, 0.765999972820282, 0.7563333511352539, 0.7726666927337646, 0.8016666769981384, 0.8199999928474426, 0.8166666626930237, 0.8090000152587891, 0.809333324432373, 0.8216666579246521, 0.8366666436195374, 0.8306666612625122, 0.8326666951179504, 0.8513333201408386, 0.8483333587646484, 0.8456666469573975, 0.8543333411216736, 0.8536666631698608, 0.8536666631698608, 0.8613333106040955, 0.8576666712760925, 0.8643333315849304, 0.862666666507721, 0.8560000061988831, 0.8646666407585144, 0.8633333444595337, 0.859666645526886, 0.8600000143051147, 0.8723333477973938, 0.8686666488647461, 0.8709999918937683, 0.8676666617393494, 0.8769999742507935, 0.8776666522026062, 0.878333330154419, 0.8650000095367432, 0.8730000257492065, 0.8686666488647461, 0.878333330154419, 0.8759999871253967]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], [6, 3, 8, 2, 9, 6, 6, 5, 2, 5, 2], [2, 2, 0, 2, 1, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [41, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.834857165813446, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1697769840836543, 1.9479905185351802, 1.1288543077366084, 0.7876790783204076, 0.7437400568777056, 0.6608717290874265, 0.6289773824397268, 0.5996311297663577, 0.5620084348025339, 0.5478671889153328, 0.5168483870266577, 0.523703826326405, 0.5116388892862916, 0.4778022143142004, 0.4660938905805188, 0.45429661393307297, 0.4388225326338433, 0.42676335421645833, 0.4092384232876087, 0.433344623349236, 0.399095799893499, 0.3900036373355401, 0.38174878429853215, 0.36864379421516164, 0.3630459687815618, 0.34593924802481113, 0.35445472416608814, 0.3341787406923024, 0.3308518532520398, 0.3288213194219617, 0.3167416053543537, 0.3067781924847142, 0.3157596653203104, 0.30177115048588765, 0.29951275948677647, 0.28952679290763295, 0.2808416717402955, 0.2675522119495705, 0.2707269573255757, 0.2637476562792363, 0.258167149876213, 0.25971233128729815], "accuracy": [0.3074890971183777, 0.3704926669597626, 0.5952978730201721, 0.7084929347038269, 0.7166820764541626, 0.7559106945991516, 0.7631752490997314, 0.7763835787773132, 0.796328067779541, 0.8006868362426758, 0.8090080618858337, 0.8128384351730347, 0.8152159452438354, 0.8286884427070618, 0.8281601071357727, 0.8342359066009521, 0.8393871188163757, 0.8451988101005554, 0.8535200357437134, 0.8408400416374207, 0.8568220734596252, 0.8588033318519592, 0.8617091774940491, 0.8640866279602051, 0.8667283058166504, 0.8757099509239197, 0.8669924736022949, 0.8751816153526306, 0.8766345381736755, 0.8770307898521423, 0.8820499181747437, 0.8848236799240112, 0.8802007436752319, 0.8882578015327454, 0.8903711438179016, 0.8899748921394348, 0.8934090733528137, 0.9000132083892822, 0.8971073627471924, 0.9005415439605713, 0.9035794734954834, 0.9012019634246826], "val_loss": [1.8782200813293457, 1.1227821281978063, 0.6214573553630284, 0.5525610446929932, 0.5185004302433559, 0.4997530664716448, 0.4853047643389021, 0.4399294001715524, 0.4231634906360081, 0.4158000946044922, 0.4319202985082354, 0.42144382851464407, 0.38957325901303974, 0.37718866552625385, 0.3694500241960798, 0.36792909247534616, 0.34267386368342806, 0.3515428730419704, 0.35747245379856657, 0.3347392167363848, 0.3286689690181187, 0.32113416705812725, 0.316201388835907, 0.32225086859294344, 0.31096768379211426, 0.30602351256779264, 0.3120011176381792, 0.31646327461515156, 0.3026587111609323, 0.32623047488076345, 0.3066855583872114, 0.3064513121332441, 0.3086785078048706, 0.2975341166768755, 0.3017250554902213, 0.2999398963791983, 0.3002412063734872, 0.3030918410846165, 0.3249408176967076, 0.3064050759587969, 0.31073525122233797, 0.3010250074522836], "val_accuracy": [0.25866666436195374, 0.5473333597183228, 0.7229999899864197, 0.7536666393280029, 0.7680000066757202, 0.7543333172798157, 0.7733333110809326, 0.8083333373069763, 0.8063333630561829, 0.8146666884422302, 0.8050000071525574, 0.8040000200271606, 0.8233333230018616, 0.8303333520889282, 0.8333333134651184, 0.8306666612625122, 0.8493333458900452, 0.8399999737739563, 0.843666672706604, 0.8510000109672546, 0.8523333072662354, 0.8576666712760925, 0.8600000143051147, 0.8586666584014893, 0.8619999885559082, 0.8610000014305115, 0.8583333492279053, 0.8583333492279053, 0.8663333058357239, 0.8619999885559082, 0.8650000095367432, 0.8666666746139526, 0.8653333187103271, 0.8726666569709778, 0.8743333220481873, 0.8703333139419556, 0.8769999742507935, 0.8709999918937683, 0.8663333058357239, 0.8706666827201843, 0.875, 0.8756666779518127]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 0, 2, 9, 6, 1, 0, 3, 5, 2], [2, 2, 0, 1, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [49, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [2, 3, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7514285445213318, "mapping_values": [1, 12, 12, 7, 5, 2, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.070566882420808, 1.4775463932651052, 1.193816765975549, 1.0740129410582857, 0.9723034919434063, 0.9125704832159532, 0.846343390386748, 0.8240145157514357, 0.756251351094249, 0.7916578975383238, 0.7658427380662096, 0.768865969383863, 0.7592249249643607, 0.7330231018322113, 0.7091177789258951, 0.7051061729807911, 0.6898338226688819, 0.7016283011061719, 0.6851893907776756, 0.66327407528239, 0.6679977705339792, 0.6705945728556072, 0.6344503228690536], "accuracy": [0.30405494570732117, 0.4908202290534973, 0.5715228915214539, 0.6168273687362671, 0.6320168972015381, 0.6576409935951233, 0.6861709356307983, 0.6869634389877319, 0.7202483415603638, 0.7100779414176941, 0.7124554514884949, 0.7252674698829651, 0.717870831489563, 0.741909921169281, 0.7388719916343689, 0.7411174178123474, 0.7534011602401733, 0.7401928305625916, 0.7526086568832397, 0.7582882046699524, 0.7605336308479309, 0.7523444890975952, 0.7720248103141785], "val_loss": [1.39933865410941, 1.0130112171173096, 0.9961799553462437, 0.8006225824356079, 0.7543452637536185, 0.7120179108210972, 0.603963817868914, 0.64681077003479, 0.5727889878409249, 0.5590063503810337, 0.6744915076664516, 0.6312015397208077, 0.5920930760247367, 0.5302028656005859, 0.5280038799558368, 0.5707489252090454, 0.5941305330821446, 0.5016924653734479, 0.532417927469526, 0.5435065031051636, 0.5469685452325004, 0.5281781469072614, 0.5134246008736747], "val_accuracy": [0.5076666474342346, 0.5473333597183228, 0.5903333425521851, 0.6746666431427002, 0.6536666750907898, 0.6746666431427002, 0.7443333268165588, 0.7146666646003723, 0.7443333268165588, 0.7553333044052124, 0.718666672706604, 0.7136666774749756, 0.7283333539962769, 0.7566666603088379, 0.7556666731834412, 0.7433333396911621, 0.7233333587646484, 0.7763333320617676, 0.7586666941642761, 0.7593333125114441, 0.749666690826416, 0.7720000147819519, 0.7760000228881836]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 8, 2, 9, 6, 1, 0, 3, 5, 2, 7, 0, 5], [2, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 61, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [12, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7268571257591248, "mapping_values": [1, 22, 22, 14, 8, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3016121768523137, 2.2927959521118173, 2.2742805693206565, 2.2525609694042417, 2.221150091783702, 2.1789180929508696, 2.1212477358403756, 2.0335717952923766, 1.9116031108294904, 1.764019413284732, 1.5992695784540445, 1.4728483871745395, 1.4092915714094116, 1.3562393646671032, 1.3652826172564527, 1.3426474953812537, 1.2722014796700791, 1.1559396087060498, 1.0516126725525983, 0.946368877701299, 0.91845049671194, 0.9093775256844308, 0.912937409558773, 0.9137488814581812, 0.904084952035679, 0.858524367345118, 0.8253604451726063, 0.8140283548096624, 0.8204054072028878], "accuracy": [0.0940430611371994, 0.11491216719150543, 0.16021661460399628, 0.22533351182937622, 0.2822612524032593, 0.34064191579818726, 0.3649451732635498, 0.3910976052284241, 0.41368380188941956, 0.4349491596221924, 0.4711398780345917, 0.49465063214302063, 0.5123497843742371, 0.5366530418395996, 0.5488046407699585, 0.557390034198761, 0.5861841440200806, 0.6178840398788452, 0.6388852000236511, 0.648659348487854, 0.6586976647377014, 0.6571126580238342, 0.6645092964172363, 0.6757363677024841, 0.6853784322738647, 0.6872276067733765, 0.6922467350959778, 0.6979262828826904, 0.6936996579170227], "val_loss": [1.9663951056344169, 1.9541143008640833, 1.934800692967006, 1.908895424434117, 1.8751824242728097, 1.8281920296805245, 1.7593298639569963, 1.6583411012377058, 1.5175632068089075, 1.3438024520874023, 1.168522596359253, 1.0256479467664446, 0.9213005474635533, 0.8456603118351528, 0.8126427956989833, 0.7672979661396572, 0.7443077734538487, 0.7315653392246791, 0.6864184992653983, 0.6625407763889858, 0.6721891505377633, 0.6871834823063442, 0.6983627251216343, 0.6914466108594622, 0.6615692717688424, 0.6261553594044277, 0.6047167778015137, 0.5983650514057705, 0.5935205732073102], "val_accuracy": [0.06566666811704636, 0.18000000715255737, 0.31966665387153625, 0.3720000088214874, 0.39666667580604553, 0.4166666567325592, 0.4466666579246521, 0.4779999852180481, 0.5090000033378601, 0.5479999780654907, 0.5776666402816772, 0.6306666731834412, 0.6656666398048401, 0.6746666431427002, 0.6663333177566528, 0.6983333230018616, 0.7039999961853027, 0.7056666612625122, 0.7110000252723694, 0.722000002861023, 0.718999981880188, 0.7196666598320007, 0.7233333587646484, 0.7416666746139526, 0.734666645526886, 0.737666666507721, 0.7323333621025085, 0.731333315372467, 0.7363333106040955]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [6, 3, 6, 6, 3, 6, 2, 0, 6, 5, 2, 2, 4, 0, 0, 8], [1, 2, 2, 2, 1, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [8, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 10, 9, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))), tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3026576352991746, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 3, 0, 2, 4, 2, 0, 0, 3, 8, 2, 8, 4, 1], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 18, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 13, 8, 3, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), grad))))))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3026576352991746, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [6, 2, 0, 2, 9, 6, 1, 0, 3, 5, 2], [1, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [2, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [42, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, grad))))), tf.math.add(alpha, grad)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3026576352991746, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [6, 3, 4, 2, 9, 6, 1, 0, 3, 9, 2, 1, 1, 6, 4, 3, 7, 2, 7, 4, 5, 7, 7, 2, 9, 0, 3, 1, 0, 4], [1, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 1, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 44, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [1, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 44, 44, 26, 18, 6, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, grad))), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(grad, tf.math.add(tf.math.add(tf.math.pow(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 8, 2, 9, 6, 6, 5, 2, 5, 2, 3], [1, 2, 1, 2, 2, 2, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [36, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [4, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 12, 8, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad)))))))))), tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [2, 3, 8, 2, 9, 6, 6, 5, 2, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [26, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 3, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 8, 2, 9, 6, 6, 5, 2, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 1, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], [6, 3, 8, 2, 9, 6, 6, 5, 2, 5, 2], [2, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [82, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [6, 3, 0, 2, 9, 6, 1, 0, 3, 5, 2], [0, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [35, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [70, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.7564472441093213, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.034341566264629364, 0.108440101146698, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [35.964202880859375, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 2, 2, 9, 3, 4, 0, 3, 5, 2], [0, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [40, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 11, 8, 6, 2, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.362802027711275, 3.0554485815139163, 4.853653581465839, 8.053225160038718, 12.378809276022034, 17.8737913513889], "accuracy": [0.09008057415485382, 0.09813763201236725, 0.10355303436517715, 0.09906221181154251, 0.1026284471154213, 0.09945846349000931], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 8, 2, 9, 6, 6, 5, 2, 5, 2], [1, 0, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.04171428456902504, "mapping_values": [1, 12, 12, 7, 5, 2, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.9356810288296367, 2.3049937836041523, 2.303461464026727, 2.303039244499504, 2.3029005273048826, 2.3028809501825305, 2.3029495048926036], "accuracy": [0.1776515692472458, 0.09866596013307571, 0.09681680053472519, 0.09470347315073013, 0.09747721254825592, 0.09747721254825592, 0.09509972482919693], "val_loss": [1.9774418558393205, 1.9745794023786272, 1.9737942559378487, 1.9737304278782435, 1.9736320631844657, 1.9736270904541016, 1.973576477595738], "val_accuracy": [0.09833333641290665, 0.10166666656732559, 0.09833333641290665, 0.10133333504199982, 0.10133333504199982, 0.09666666388511658, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [6, 3, 0, 2, 9, 6, 1, 0, 3, 5, 2], [1, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302897309520068, 2.302381922555968, 2.2998116765874426, 2.3016132652137604, 2.302056960520444, 2.302607107439597], "accuracy": [0.08994849026203156, 0.09060890227556229, 0.09298639744520187, 0.0948355570435524, 0.08968432247638702, 0.09642054885625839], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]