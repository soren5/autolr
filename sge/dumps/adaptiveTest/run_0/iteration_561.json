[{"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8397142887115479, "mapping_values": [1, 16, 16, 10, 6, 4, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), tf.math.add(alpha, grad)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9620611063162758, 1.2280066850367728, 0.8337608724694762, 0.6840430532920756, 0.6238299358349277, 0.5757852759044467, 0.5535614170009088, 0.5164684651786342, 0.5073404201875824, 0.46531351461166154, 0.45530541046121414, 0.43153957688592726, 0.43105086839320306, 0.41190800596662813, 0.4084859270705303, 0.3897606945859758, 0.3808433112372591, 0.38366527617442187, 0.3670081028833113, 0.35611370150376276, 0.34409084525232414, 0.32921861579956363, 0.31482495758212586, 0.3110799807260506, 0.3226239368774163, 0.30181584072355516, 0.28881032518297534, 0.28437126916098227, 0.28283999368042567, 0.2793954298433579, 0.2739981354570124, 0.269387903145874, 0.25767585746584754, 0.24819353631639904, 0.24247825729486383, 0.23746662433507057, 0.24142004387127708, 0.2236643300698402, 0.21379494729641643, 0.21852677428152395], "accuracy": [0.36124685406684875, 0.5658433437347412, 0.6952846646308899, 0.7424382567405701, 0.7705719470977783, 0.7907806038856506, 0.7984414100646973, 0.8094043135643005, 0.8108572363853455, 0.828820526599884, 0.8314621448516846, 0.8397833704948425, 0.8404437899589539, 0.8485008478164673, 0.8494254350662231, 0.8607845902442932, 0.8610487580299377, 0.8565579056739807, 0.863029956817627, 0.8643507957458496, 0.8746532797813416, 0.8809932470321655, 0.8821820020675659, 0.8835028409957886, 0.8813894987106323, 0.8882578015327454, 0.8919561505317688, 0.8952582478523254, 0.8968431949615479, 0.891559898853302, 0.8968431949615479, 0.8972394466400146, 0.9029190540313721, 0.9058248400688171, 0.904768168926239, 0.9064852595329285, 0.9095231890678406, 0.9140139818191528, 0.9178444147109985, 0.9144102334976196], "val_loss": [1.1224707875932967, 0.7426630088261196, 0.5561084066118512, 0.49926578998565674, 0.483644962310791, 0.45664821352277485, 0.41456720658711027, 0.40659018073763165, 0.39122704948697773, 0.3749519842011588, 0.35992956161499023, 0.35556113719940186, 0.3584237354142325, 0.3566716994558062, 0.3354281612804958, 0.3433947818619864, 0.3522988642965044, 0.33093346868242535, 0.3311492460114615, 0.32838867391858784, 0.31404986551829744, 0.3335067800113133, 0.31787486587251934, 0.33314245087759836, 0.3070957234927586, 0.3114374450274876, 0.30085819959640503, 0.2902191025870187, 0.31524292060307096, 0.3128015228680202, 0.31074375765664236, 0.29880002566746305, 0.30798695768628803, 0.30001613071986605, 0.29081277336393085, 0.3181558166231428, 0.30068732159478323, 0.30898313011441914, 0.30515623092651367, 0.30464382682527813], "val_accuracy": [0.5529999732971191, 0.6483333110809326, 0.7480000257492065, 0.7770000100135803, 0.7789999842643738, 0.7933333516120911, 0.8130000233650208, 0.8159999847412109, 0.8296666741371155, 0.8383333086967468, 0.8396666646003723, 0.8446666598320007, 0.8423333168029785, 0.843666672706604, 0.8586666584014893, 0.8510000109672546, 0.8399999737739563, 0.856333315372467, 0.8556666374206543, 0.8600000143051147, 0.8600000143051147, 0.8539999723434448, 0.8636666536331177, 0.8576666712760925, 0.8656666874885559, 0.8690000176429749, 0.8730000257492065, 0.8736666440963745, 0.8640000224113464, 0.8666666746139526, 0.8633333444595337, 0.8763333559036255, 0.875333309173584, 0.878000020980835, 0.8799999952316284, 0.8723333477973938, 0.8769999742507935, 0.8740000128746033, 0.8736666440963745, 0.8796666860580444]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 0, 0, 9, 1, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 54, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.828000009059906, "mapping_values": [1, 7, 7, 5, 2, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.961971037675361, 1.2287580195734167, 0.8362442625197185, 0.6850450400033284, 0.6242203477225394, 0.5757031071030185, 0.5604433624767404, 0.5193890666586927, 0.5079285135956929, 0.4673242559679873, 0.4538417615202109, 0.43238123168467907, 0.4336344101929378, 0.4135348261536356, 0.4024262971700757, 0.3867058509596902, 0.37929840261721104, 0.3813340952918829, 0.3642523967988298, 0.3586435969385095], "accuracy": [0.36124685406684875, 0.5645225048065186, 0.6944921612739563, 0.7423061728477478, 0.7726852297782898, 0.7887993454933167, 0.7969884872436523, 0.8072909712791443, 0.8127063512802124, 0.829216718673706, 0.8337075710296631, 0.8387266993522644, 0.8372738361358643, 0.8469158411026001, 0.8511425256729126, 0.8597279191017151, 0.8590674996376038, 0.8576145768165588, 0.86553955078125, 0.8648791313171387], "val_loss": [1.1224852289472307, 0.7457616329193115, 0.5591586317334857, 0.49567861216408865, 0.48267628465379986, 0.47221929686410086, 0.4166389874049595, 0.4006685529436384, 0.38718708072389874, 0.3780900410243443, 0.36364477021353586, 0.3543894716671535, 0.35390979051589966, 0.34756384577069965, 0.33305727584021433, 0.35161443267549786, 0.3477351410048349, 0.32969874143600464, 0.3418029376438686, 0.3267533608845302], "val_accuracy": [0.5533333420753479, 0.6443333625793457, 0.750333309173584, 0.7786666750907898, 0.777999997138977, 0.784333348274231, 0.8116666674613953, 0.8209999799728394, 0.8360000252723694, 0.8383333086967468, 0.8399999737739563, 0.8453333377838135, 0.8500000238418579, 0.8493333458900452, 0.8600000143051147, 0.8453333377838135, 0.8463333249092102, 0.8546666502952576, 0.8539999723434448, 0.856333315372467]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8180000185966492, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0246806075434094, 1.423535800298223, 1.067864131949534, 0.9539057118403614, 0.8462583696160413, 0.7568780772595626, 0.7497898623408297, 0.6816865805196504, 0.663838782204676, 0.6205996583245292, 0.6356457972791075, 0.6117948008534647, 0.5921845859178163, 0.5906033526952036, 0.5728021158502559, 0.57210837149302, 0.5436678198995907, 0.5382005645496309, 0.5108457098484606, 0.5210121835636945, 0.5047589894440732, 0.5043570250528615, 0.49314209843245577, 0.4676646607513551, 0.4806565669911523, 0.48540187423271103, 0.46354373998220616, 0.43537112254083055, 0.4449483572830535, 0.4439247537755128, 0.4306368403123937, 0.43162981251195875], "accuracy": [0.3366794288158417, 0.5147272348403931, 0.6269977688789368, 0.6548672318458557, 0.6872276067733765, 0.7189275026321411, 0.7135120630264282, 0.7448157668113708, 0.7497028112411499, 0.7667415142059326, 0.7511557340621948, 0.7726852297782898, 0.7845727205276489, 0.77677983045578, 0.7853652238845825, 0.7891955971717834, 0.7947431206703186, 0.8004226684570312, 0.8131026029586792, 0.8067626357078552, 0.8120459914207458, 0.8117818236351013, 0.8197067975997925, 0.8300092220306396, 0.8251221776008606, 0.8206313848495483, 0.8293488025665283, 0.8396512866020203, 0.835160493850708, 0.832650899887085, 0.8424250483512878, 0.8438779711723328], "val_loss": [1.3719606058938163, 0.7672920397349766, 0.7869325024741036, 0.7297925097601754, 0.5747425556182861, 0.6409219673701695, 0.572268043245588, 0.5656789200646537, 0.4936110462461199, 0.5416695560727801, 0.4872462408883231, 0.5086580855505807, 0.4622849566595895, 0.4502770560128348, 0.445710335459028, 0.43703609704971313, 0.45857371602739605, 0.4115059290613447, 0.4080813867705209, 0.46679093156542095, 0.4227954234395708, 0.39662531444004606, 0.3964693120547703, 0.39452258178165983, 0.4766006810324533, 0.41272153173174175, 0.3757874710219247, 0.38233054535729544, 0.42927522318703787, 0.3876835363251822, 0.4444973979677473, 0.3880511522293091], "val_accuracy": [0.4436666667461395, 0.6863333582878113, 0.6073333621025085, 0.70333331823349, 0.7403333187103271, 0.7003333568572998, 0.7239999771118164, 0.7423333525657654, 0.7673333287239075, 0.7536666393280029, 0.7829999923706055, 0.7703333497047424, 0.7883333563804626, 0.7983333468437195, 0.7946666479110718, 0.8006666898727417, 0.7933333516120911, 0.8146666884422302, 0.8146666884422302, 0.7900000214576721, 0.8023333549499512, 0.8273333311080933, 0.8246666789054871, 0.8293333053588867, 0.7883333563804626, 0.8076666593551636, 0.8326666951179504, 0.8296666741371155, 0.8023333549499512, 0.8299999833106995, 0.8090000152587891, 0.8266666531562805]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [25, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7991428375244141, "mapping_values": [1, 3, 3, 1, 2, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2866385566591507, 2.1749018183347806, 1.824309902672345, 1.39923905838183, 1.24821617385699, 0.9504720064564278, 0.9119140161278856, 0.8263366948171078, 0.8060022663084461, 0.7747743464794771, 0.7236085130616957, 0.7146299050122267, 0.6872395278912777, 0.666547379670378, 0.6549930226895725, 0.6516426367262776, 0.6137466998604767, 0.6039905825531667, 0.5791892518519789, 0.5630157118255531, 0.5486562168357269, 0.5377820947576177, 0.531803796453845, 0.5173187814982592, 0.49586952190042694, 0.4971348177235691, 0.4768210578163176, 0.4790033673243421, 0.45812638813887824, 0.4569734273105171, 0.45139930734718164, 0.42746205458850783, 0.4271148938182291, 0.41413891826795785, 0.40273119548387093, 0.40281140012685035, 0.39875472082422236, 0.39385219824281054, 0.3888312786199539, 0.3800567274851932, 0.3702450201826608, 0.3700840651059998, 0.3498240607746242, 0.3465984652913431, 0.3452986047220992, 0.346048321477993, 0.33678045260309464, 0.3355315802253516, 0.32570001901794243, 0.32257574776207465, 0.32156414147050644, 0.313708863045325, 0.3078727162651114, 0.3035302803760758, 0.3046303753839618, 0.29915848840433984, 0.2838987220098881, 0.2893716640806847, 0.27981458337646137, 0.27945701745459905, 0.26867020679675924, 0.2626907103734954, 0.2617275065312753, 0.2548942915291251], "accuracy": [0.137630432844162, 0.32664114236831665, 0.42966583371162415, 0.5164443254470825, 0.5864483118057251, 0.6536785364151001, 0.6732267737388611, 0.6951525807380676, 0.6993792057037354, 0.7074362635612488, 0.7224937081336975, 0.7342491149902344, 0.7425703406333923, 0.7481178045272827, 0.7561748623847961, 0.7511557340621948, 0.7651565074920654, 0.7709681391716003, 0.7783648371696472, 0.7898560166358948, 0.7931581139564514, 0.7991018295288086, 0.8038568496704102, 0.8034605979919434, 0.8150838613510132, 0.8063663840293884, 0.8214238286018372, 0.8206313848495483, 0.8247259259223938, 0.8322546482086182, 0.8338396549224854, 0.843481719493866, 0.8437458872795105, 0.8426892161369324, 0.846387505531311, 0.8529917001724243, 0.8558974862098694, 0.8537842035293579, 0.854708731174469, 0.8627657890319824, 0.8618412613868713, 0.8626337051391602, 0.8689737319946289, 0.8704266548156738, 0.8687095642089844, 0.8714832663536072, 0.8730682730674744, 0.8741249442100525, 0.8792761564254761, 0.8747853636741638, 0.8778232932090759, 0.8816536664962769, 0.8828424215316772, 0.8845595121383667, 0.8891823887825012, 0.8898428082466125, 0.8898428082466125, 0.8878615498542786, 0.893541157245636, 0.896446943283081, 0.8982961177825928, 0.8960506916046143, 0.89988112449646, 0.9050323367118835], "val_loss": [1.9131931577410017, 1.7194770404270716, 1.1550403322492326, 0.8245764289583478, 0.7177612440926688, 0.695839388029916, 0.6329150881086077, 0.5829296282359532, 0.5792660883494786, 0.5363823516028268, 0.5374521698270526, 0.5398443256105695, 0.511782135282244, 0.5048225436891828, 0.4885775021144322, 0.47621449402400423, 0.46660520349230084, 0.4570918253489903, 0.4451725993837629, 0.44709157943725586, 0.4253062094960894, 0.42054169518607004, 0.4087658609662737, 0.4048816135951451, 0.39721985374178204, 0.38881137541362215, 0.38594417912619455, 0.37893121583121164, 0.37403918164116995, 0.3709087882723127, 0.3631304247038705, 0.35632026195526123, 0.3514963388442993, 0.3518157345908029, 0.35250721658979145, 0.34652831724711824, 0.3426915832928249, 0.33941987582615446, 0.33822137117385864, 0.3388292193412781, 0.340073219367436, 0.3323805757931301, 0.3293389763150896, 0.3311458740915571, 0.3302608047212873, 0.3303464140210833, 0.33045703172683716, 0.3264181273324149, 0.31990928309304373, 0.3201726334435599, 0.3277267473084586, 0.3243764638900757, 0.32545084612710135, 0.31976205110549927, 0.3191985487937927, 0.3147404364177159, 0.3166747433798654, 0.32054230996540617, 0.3247443607875279, 0.3214098300252642, 0.3198659930910383, 0.3182468329157148, 0.3183329275676182, 0.3204722745077951], "val_accuracy": [0.36899998784065247, 0.4583333432674408, 0.5770000219345093, 0.6613333225250244, 0.7046666741371155, 0.7080000042915344, 0.7363333106040955, 0.7409999966621399, 0.7440000176429749, 0.75, 0.7666666507720947, 0.7596666812896729, 0.768666684627533, 0.7706666588783264, 0.781333327293396, 0.7889999747276306, 0.7923333048820496, 0.7896666526794434, 0.7990000247955322, 0.7986666560173035, 0.8100000023841858, 0.8163333535194397, 0.8183333277702332, 0.8193333148956299, 0.8240000009536743, 0.8263333439826965, 0.8270000219345093, 0.8333333134651184, 0.8373333215713501, 0.8389999866485596, 0.8416666388511658, 0.8446666598320007, 0.8473333120346069, 0.8500000238418579, 0.8496666550636292, 0.856333315372467, 0.8536666631698608, 0.8556666374206543, 0.8569999933242798, 0.8606666922569275, 0.8586666584014893, 0.8579999804496765, 0.859333336353302, 0.8636666536331177, 0.8659999966621399, 0.8640000224113464, 0.8636666536331177, 0.8676666617393494, 0.8640000224113464, 0.8676666617393494, 0.8693333268165588, 0.8666666746139526, 0.8619999885559082, 0.8679999709129333, 0.8683333396911621, 0.8696666955947876, 0.8659999966621399, 0.8706666827201843, 0.8733333349227905, 0.8706666827201843, 0.871999979019165, 0.8733333349227905, 0.8696666955947876, 0.8730000257492065]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [6, 2, 0, 2, 9, 6, 2, 0, 3, 5, 2, 8, 1, 8, 4, 6, 2, 8, 2, 2, 9, 0, 9], [1, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 74, 25, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [25, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7888571619987488, "mapping_values": [1, 34, 34, 23, 11, 7, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), alpha))), grad)), tf.math.negative(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.286638525168122, 2.174902295077466, 1.8243131194651923, 1.3992447631076625, 1.2482267515046201, 0.9502910452118293, 0.9114195442769695, 0.82617011642286, 0.8066548939394268, 0.7747664496867475, 0.7232798858483107, 0.7146312076937427, 0.687721832663612, 0.6664874806789564, 0.6549096651490433, 0.6498238444958129, 0.6143428048343077, 0.602066570694389, 0.5788779864379239, 0.5605174164494283, 0.548372033493882, 0.5371022557207716, 0.5326627403548869, 0.5177715279249514, 0.49549227571915705, 0.49586577667237086, 0.47623814882745263, 0.4808560386428019, 0.45920558980569043, 0.45570914355786785, 0.4509871530298229, 0.4267202177776432, 0.4291332012681819, 0.4144634043874364, 0.4026597801995961, 0.4025329569579273, 0.39689458600597105, 0.39227915196733043, 0.3877674533572604, 0.37621183702659455, 0.367964199391244, 0.3689030256206491, 0.3498329901699975, 0.34740739365248174, 0.34439688425778303, 0.34991599143677227, 0.33555934719594716, 0.3343302987514942, 0.3278238702806043, 0.31944791428432834, 0.32153208178850984, 0.31485509515406984, 0.30660496589341074, 0.30049679106441646, 0.30275541453423865, 0.29478246404226854], "accuracy": [0.137630432844162, 0.32664114236831665, 0.42966583371162415, 0.5164443254470825, 0.5863162279129028, 0.6539427042007446, 0.6725663542747498, 0.695813000202179, 0.6992471218109131, 0.7079645991325378, 0.7219653725624084, 0.7345132827758789, 0.7412495017051697, 0.7467969655990601, 0.7536653280258179, 0.7511557340621948, 0.763439416885376, 0.7708360552787781, 0.7765156626701355, 0.7898560166358948, 0.7952714562416077, 0.7992339134216309, 0.8034605979919434, 0.8013472557067871, 0.8120459914207458, 0.8094043135643005, 0.8226125836372375, 0.8198388814926147, 0.8267071843147278, 0.8317263126373291, 0.8330471515655518, 0.8412362933158875, 0.8457271456718445, 0.842028796672821, 0.8465195894241333, 0.8510104417800903, 0.8540483713150024, 0.8558974862098694, 0.8548408150672913, 0.8613129258155823, 0.8626337051391602, 0.8639545440673828, 0.8664641380310059, 0.8698983192443848, 0.8708229064941406, 0.871879518032074, 0.8762382864952087, 0.8729361891746521, 0.8767666220664978, 0.8776912093162537, 0.878879964351654, 0.8808611631393433, 0.8868049383163452, 0.8868049383163452, 0.8907673954963684, 0.8899748921394348], "val_loss": [1.9131930896214075, 1.7194805145263672, 1.155045849936349, 0.8245508330208915, 0.7178178174155099, 0.6958194289888654, 0.6322507006781442, 0.5829862526484898, 0.5791811432157244, 0.5360199042728969, 0.5367447478430611, 0.5404642820358276, 0.511182461466108, 0.5055350916726249, 0.4882173367909023, 0.47712327752794537, 0.46719954695020405, 0.4567010572978428, 0.44519356318882536, 0.448150098323822, 0.4249086720602853, 0.42031051431383404, 0.4100580896650042, 0.4052875212260655, 0.3987881285803659, 0.39007375070026945, 0.3887614778109959, 0.3804952842848642, 0.3738103764397757, 0.3698421972138541, 0.36320522853306364, 0.3571895446096148, 0.3518971971103123, 0.35231639657701763, 0.3529135159083775, 0.3464671288217817, 0.3427966833114624, 0.34167728253773283, 0.3374057412147522, 0.33841781105313984, 0.34149844305855886, 0.33503386804035734, 0.333496766430991, 0.3321378827095032, 0.3349113719803946, 0.3302965334483555, 0.3308642506599426, 0.3287831885474069, 0.32230847222464426, 0.3214105452810015, 0.3238209400858198, 0.32565569026129587, 0.3225551503045218, 0.3192402039255415, 0.3136827860559736, 0.31478963579450336], "val_accuracy": [0.36899998784065247, 0.4583333432674408, 0.5776666402816772, 0.6613333225250244, 0.7049999833106995, 0.7080000042915344, 0.7363333106040955, 0.7409999966621399, 0.7436666488647461, 0.7493333220481873, 0.7649999856948853, 0.7599999904632568, 0.768666684627533, 0.7713333368301392, 0.7816666960716248, 0.7910000085830688, 0.7903333306312561, 0.7933333516120911, 0.7996666431427002, 0.7996666431427002, 0.8113333582878113, 0.812333345413208, 0.815666675567627, 0.8186666369438171, 0.824999988079071, 0.8266666531562805, 0.8273333311080933, 0.8303333520889282, 0.8360000252723694, 0.8376666903495789, 0.8420000076293945, 0.8456666469573975, 0.8489999771118164, 0.8500000238418579, 0.8516666889190674, 0.8556666374206543, 0.8556666374206543, 0.856333315372467, 0.859666645526886, 0.8629999756813049, 0.8619999885559082, 0.8616666793823242, 0.8573333621025085, 0.8650000095367432, 0.8640000224113464, 0.862666666507721, 0.8636666536331177, 0.8679999709129333, 0.8693333268165588, 0.8679999709129333, 0.8723333477973938, 0.8700000047683716, 0.8683333396911621, 0.8666666746139526, 0.871666669845581, 0.871999979019165]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [4, 8, 7, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 22, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [77, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10257142782211304, "mapping_values": [1, 8, 8, 5, 3, 2, 2, 2, 1, 1, 1, 11, 8, 6, 2, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [4797335883985.905, 6091076362804963.0, 3.6431829018966016e+17, 6.417636572478356e+18, 5.875536301784329e+19, 3.4463969825688715e+20, 1.5256768314033163e+21, 5.468924800750982e+21, 1.7098463055481617e+22, 4.7302568301044504e+22, 1.1828277440308038e+23, 2.7750374423672112e+23, 6.118081317590204e+23, 1.3313343341674233e+24, 2.730841483769281e+24, 5.638646509553394e+24, 1.0463810940152364e+25, 1.8589769458431231e+25, 3.3340548573717283e+25, 5.55272363419628e+25], "accuracy": [0.09787346422672272, 0.09509972482919693, 0.09945846349000931, 0.10368511080741882, 0.09813763201236725, 0.09800554811954498, 0.10051512718200684, 0.09285431355237961, 0.09879804402589798, 0.10117553919553757, 0.09721305221319199, 0.10328886657953262, 0.10249637067317963, 0.10553427785634995, 0.09496764093637466, 0.09787346422672272, 0.10091137140989304, 0.10157178342342377, 0.09893012791872025, 0.10249637067317963], "val_loss": [75414992809398.86, 2.9732664566537068e+16, 1.0447913686944786e+18, 1.3296406994688522e+19, 9.63465196356193e+19, 4.9416323935025024e+20, 1.975846531592725e+21, 6.839378063307322e+21, 2.0259458364639183e+22, 5.215718965718049e+22, 1.3127908760809101e+23, 3.06343967086358e+23, 6.630958240819484e+23, 1.3422962733767656e+24, 2.4630135510015734e+24, 5.097867417015644e+24, 9.71630955546003e+24, 1.5986834846210667e+25, 3.0542301832957015e+25, 5.201006127787052e+25], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10000000149011612, 0.10066666454076767, 0.09966666996479034, 0.09666666388511658, 0.09700000286102295, 0.1066666692495346, 0.09466666728258133, 0.10366666316986084, 0.10100000351667404, 0.09966666996479034, 0.10899999737739563, 0.10066666454076767, 0.0976666659116745, 0.0963333323597908, 0.09799999743700027, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 3, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [58, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [88, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.716619322407342, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08955223858356476, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2701.989815848214, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [6, 3, 5, 8, 9, 1, 2, 0, 2, 8, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [5, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 3, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3029231991451082, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 2, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 4, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.5078518294821813e+27, 10.601332400846854, 24.501571153936258, 38.89212527292091, 53.291931544847934, 67.69952160703382], "accuracy": [0.07555144280195236, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [4.61907114301409, 15.932860238211495, 28.227767944335938, 40.5797849382673, 52.9320558820452, 65.27566092354911], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 5, 4, 9, 6, 2, 0, 3, 8, 2], [1, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [0, 4, 6], [64, 55], [0, 1, 0, 1, 1], [7, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.square(alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [1.7522113105721644e+29, 21.93196606689582, 75.0846134901771, 161.50105202004357, 280.8565093063014, 433.4353017347238], "accuracy": [0.0758156105875969, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [7.145495550973075, 40.99475860595703, 103.27181570870536, 193.92296491350447, 312.9573015485491, 460.3521728515625], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 0, 4, 9, 8, 2, 0, 9, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [1, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302030456064557, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.08545766770839691, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9713963781084334, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0846666693687439, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 5, 5, 9, 6, 2, 0, 3, 8, 2], [2, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [5, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30219443328408, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 3, 5, 5, 9, 6, 2, 0, 3, 8, 2], [2, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [6, 3, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [97, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [4, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 4, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [58, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3029231991451082, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 3, 5, 5, 9, 6, 2, 0, 3, 8, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [80, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3029231991451082, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [10, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 15, 15, 9, 6, 4, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3679889619877907, 3.0409884209709084, 4.867117254473609, 8.018063093771662, 12.961830638733836, 21.103805193575443], "accuracy": [0.09021265059709549, 0.09430722147226334, 0.09853387624025345, 0.10276053100824356, 0.09866596013307571, 0.09668471664190292], "val_loss": [2.0900937489100864, 2.770494188581194, 4.293563434055874, 6.721532276698521, 10.616421018327985, 18.87100110735212], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 6, 5, 5, 9, 6, 2, 0, 3, 8, 2], [2, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 7, 7, 4, 3, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3679888990057334, 3.0409293191433897, 4.863118901150086, 7.95172689972206, 12.401388908877994, 17.829235858637595], "accuracy": [0.09021265059709549, 0.09430722147226334, 0.09853387624025345, 0.10276053100824356, 0.09879804402589798, 0.09747721254825592], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 8, 2, 2, 9, 5, 2, 0, 3, 5, 2], [0, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [5, 0, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 14, 14, 9, 5, 4, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad)))))))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3679889125153846, 3.040928468980085, 4.863117564922751, 7.952781531631577, 12.431739270773704, 17.93255096010292], "accuracy": [0.09021265059709549, 0.09430722147226334, 0.09853387624025345, 0.10276053100824356, 0.09879804402589798, 0.09734513610601425], "val_loss": [2.090093340192522, 2.770205157143729, 4.282108443123954, 6.588948658534458, 9.688998358590263, 13.637186867850167], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 0, 3, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 2, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 8, 8, 5, 3, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3032575123471637, 2.3025001019629125, 2.302842361201794, 2.3021948895890874, 2.303007601306045, 2.3022527118731233], "accuracy": [0.08994849026203156, 0.09576013684272766, 0.08757099509239197, 0.09047681838274002, 0.09153348207473755, 0.09021265059709549], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]