[{"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 7, 3, 3, 8, 2, 6, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [8, 4, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8414285778999329, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0384516083506106, 1.0765420633567842, 0.7680549515221081, 0.679819060622142, 0.6345642153471374, 0.5870731455491535, 0.5594494341623042, 0.5143252370253908, 0.501844830253042, 0.47522675142375126, 0.45771234398583505, 0.4360103694525976, 0.4159410188242492, 0.40906522358570746, 0.3914378275488346, 0.37482517058618503, 0.3757431726681794, 0.3631317349016202, 0.35185944470731323, 0.3387702892461489, 0.33898701684397164, 0.324694312484021, 0.31226533874938234, 0.29799420722424314, 0.301046853327811, 0.2890602661799352, 0.2837215216247051, 0.27076281696703647, 0.2712372491868606, 0.26332916383336424, 0.2581568392646343, 0.25276353268370794, 0.2462702033628704, 0.22893155224767925, 0.22890732311112863, 0.2232576673037309, 0.2215049335524674, 0.21242343754328127, 0.20916780704055968], "accuracy": [0.31118741631507874, 0.6170915365219116, 0.7154933214187622, 0.748249888420105, 0.7648923397064209, 0.7835160493850708, 0.7989697456359863, 0.8115176558494568, 0.81548011302948, 0.8241975903511047, 0.8354246616363525, 0.8412362933158875, 0.8470479249954224, 0.8527275323867798, 0.8588033318519592, 0.863558292388916, 0.8605204224586487, 0.8659358024597168, 0.8702945709228516, 0.8751816153526306, 0.8755778670310974, 0.8833707571029663, 0.8837670087814331, 0.8883898854255676, 0.8820499181747437, 0.8874653577804565, 0.8949940800666809, 0.9001452922821045, 0.8972394466400146, 0.900409460067749, 0.9027869701385498, 0.9052965044975281, 0.9059569239616394, 0.9119006991386414, 0.9109761118888855, 0.9121648669242859, 0.913089394569397, 0.9183727502822876, 0.920089840888977], "val_loss": [0.9317903518676758, 0.6344866752624512, 0.5509509018489293, 0.5218027659824916, 0.4833145652498518, 0.4722849130630493, 0.4413102524621146, 0.4091032402856009, 0.401227022920336, 0.383334755897522, 0.37257406541279386, 0.3551135318619864, 0.3421551925795419, 0.34188774653843473, 0.33339441674096243, 0.32863753182547434, 0.3321405989783151, 0.32210579940250944, 0.3090334875243051, 0.3083206500325884, 0.3001654999596732, 0.3083137444087437, 0.3065130455153329, 0.29943939617701937, 0.29428839683532715, 0.3007700102669852, 0.298214316368103, 0.28774745975221905, 0.28981619221823557, 0.2900134325027466, 0.3004067710467747, 0.29275940145765034, 0.2878170609474182, 0.2903510502406529, 0.29388358763286043, 0.284427421433585, 0.2927861213684082, 0.2971300653048924, 0.29535721029554096], "val_accuracy": [0.6169999837875366, 0.7250000238418579, 0.7456666827201843, 0.765666663646698, 0.7856666445732117, 0.7923333048820496, 0.8026666641235352, 0.8159999847412109, 0.8180000185966492, 0.82833331823349, 0.8360000252723694, 0.8463333249092102, 0.8486666679382324, 0.8536666631698608, 0.8560000061988831, 0.8610000014305115, 0.8496666550636292, 0.8583333492279053, 0.8613333106040955, 0.8646666407585144, 0.8666666746139526, 0.8650000095367432, 0.8663333058357239, 0.8703333139419556, 0.8683333396911621, 0.8676666617393494, 0.8733333349227905, 0.874666690826416, 0.8759999871253967, 0.875, 0.8726666569709778, 0.8730000257492065, 0.8763333559036255, 0.8823333382606506, 0.8769999742507935, 0.8809999823570251, 0.8763333559036255, 0.8790000081062317, 0.8816666603088379]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 0, 3, 3, 2, 3, 6, 2, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 1, 0, 2, 2, 1, 0, 0, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 12, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [3, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8385714292526245, "mapping_values": [1, 14, 14, 7, 7, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad))))))), tf.math.add(alpha, grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.038450668752784, 1.0764829098446147, 0.7694157610684653, 0.6824187566937708, 0.6351591795427043, 0.58748769397985, 0.553831661555273, 0.509492821579108, 0.49745094695457803, 0.46804511204623683, 0.45570788772319365, 0.43793998701760417, 0.4147357298493023, 0.4091990425633622, 0.39179644555447835, 0.37341278331264954, 0.36979018263750074, 0.36286247217455214, 0.3516709677468611, 0.3308335020793758, 0.3375733174455479, 0.3283436136427746, 0.3122615448361957, 0.29942379022129556, 0.2975762769129172, 0.29082067418076407, 0.28691635530118725, 0.26873503120945996, 0.27474208135788136, 0.2623715774494313, 0.26369683129786503, 0.25399461809583646, 0.2565060343527917, 0.23512867793761633, 0.236725955054099, 0.23681964883793613, 0.22775662115788212, 0.2130611837225158, 0.2128869393372249], "accuracy": [0.31118741631507874, 0.6180161237716675, 0.7137762308120728, 0.7465327978134155, 0.7606657147407532, 0.7836481332778931, 0.7979130744934082, 0.8124422430992126, 0.8161405324935913, 0.828820526599884, 0.8358209133148193, 0.839519202709198, 0.8488970994949341, 0.8544445633888245, 0.8580108284950256, 0.8646149635314941, 0.8638224601745605, 0.8646149635314941, 0.8672566413879395, 0.8765024542808533, 0.8772949576377869, 0.8808611631393433, 0.8842953443527222, 0.887201189994812, 0.883238673210144, 0.8907673954963684, 0.8901069760322571, 0.8976356983184814, 0.8951261639595032, 0.8992207050323486, 0.9021265506744385, 0.9033153057098389, 0.9050323367118835, 0.9083344340324402, 0.9104477763175964, 0.9071456789970398, 0.9125610589981079, 0.917580246925354, 0.920089840888977], "val_loss": [0.9318574837275914, 0.6350403683526176, 0.5530962603432792, 0.5247760329927716, 0.4824294022151402, 0.46694270202091764, 0.4347433362688337, 0.40714584078107563, 0.39123551334653583, 0.38255212136677336, 0.37467821155275616, 0.36127958978925434, 0.349283048084804, 0.34028859649385723, 0.3322960308619908, 0.3289353592055185, 0.3339269586971828, 0.32497244221823557, 0.31145350422178, 0.3139093518257141, 0.3035979611533029, 0.3134963171822684, 0.305801979133061, 0.2964332699775696, 0.2951991302626474, 0.30167010852268766, 0.2980748414993286, 0.2904451830046518, 0.2904298646109445, 0.29388971839632305, 0.30121974434171406, 0.29453812326703754, 0.290386506489345, 0.293452833380018, 0.29504560572760447, 0.2938563568251474, 0.3000184553010123, 0.30274564027786255, 0.30480395896094187], "val_accuracy": [0.6173333525657654, 0.7233333587646484, 0.7476666569709778, 0.7639999985694885, 0.7829999923706055, 0.7983333468437195, 0.8076666593551636, 0.8206666707992554, 0.8246666789054871, 0.8273333311080933, 0.8346666693687439, 0.843666672706604, 0.8429999947547913, 0.8516666889190674, 0.856333315372467, 0.8586666584014893, 0.8510000109672546, 0.8556666374206543, 0.8616666793823242, 0.8643333315849304, 0.862666666507721, 0.8659999966621399, 0.8676666617393494, 0.8726666569709778, 0.8713333606719971, 0.8636666536331177, 0.8700000047683716, 0.8740000128746033, 0.875, 0.8723333477973938, 0.8686666488647461, 0.8756666779518127, 0.875, 0.8790000081062317, 0.8773333430290222, 0.8759999871253967, 0.8756666779518127, 0.8769999742507935, 0.8786666393280029]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 0, 1, 3, 3, 2, 6, 6, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 1, 0, 0, 2, 1, 0, 2, 0, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8357142806053162, "mapping_values": [1, 25, 25, 15, 10, 5, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad)))))), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0384515116888977, 1.076557326971847, 0.7677440305018169, 0.6799132800955641, 0.6350856391020958, 0.5881630810984626, 0.5568056746307634, 0.5163742144739843, 0.5066597632145633, 0.4704186418281334, 0.45975018368736, 0.43907740406702855, 0.4161732431730936, 0.41439632601222154, 0.3946045685941832, 0.37942978390581683, 0.3799713719845322, 0.36505935849798293, 0.35318054067318577, 0.3346035940465107, 0.33510367568961663, 0.3234238779114978, 0.3106932766354709, 0.30131648458258004, 0.30280494286856235, 0.2842041838674529, 0.2795269170126753, 0.2707107443937678, 0.27350280295824725, 0.2600711804174114, 0.25814509250862316, 0.2479163908238865, 0.24656539774369318, 0.22901924242039304, 0.2341972317410309, 0.23161621193576562, 0.22625614652906378, 0.2093297036753638], "accuracy": [0.31118741631507874, 0.6180161237716675, 0.7154933214187622, 0.7467969655990601, 0.7605336308479309, 0.7827235460281372, 0.7972526550292969, 0.8117818236351013, 0.8131026029586792, 0.8248580098152161, 0.8325188159942627, 0.8388587832450867, 0.8482366800308228, 0.848368763923645, 0.8570862412452698, 0.8603883385658264, 0.8590674996376038, 0.8672566413879395, 0.8687095642089844, 0.8767666220664978, 0.8799365758895874, 0.882710337638855, 0.8831065893173218, 0.8861445188522339, 0.885219931602478, 0.8924844861030579, 0.8942015767097473, 0.8967111110687256, 0.8952582478523254, 0.89988112449646, 0.9029190540313721, 0.9084665179252625, 0.9056927561759949, 0.9153348207473755, 0.9124290347099304, 0.9101836085319519, 0.91124027967453, 0.919561505317688], "val_loss": [0.9317876270839146, 0.6331928627831596, 0.5497775588716779, 0.5246423482894897, 0.4817556994301932, 0.47030259881700787, 0.44044497183391024, 0.4126009685652597, 0.39684706926345825, 0.38407749789101736, 0.3761184130396162, 0.35458204575947355, 0.34580985988889423, 0.3388188821928842, 0.3355367694582258, 0.32810062170028687, 0.3305067334856306, 0.32599867241723196, 0.3105119381632124, 0.30761976752962383, 0.3004516192844936, 0.30832931825092863, 0.30102542468479704, 0.2975682531084333, 0.2962204132761274, 0.3006997619356428, 0.2953025613512312, 0.2885535614831107, 0.2880585619381496, 0.2966654470988682, 0.2957328387669155, 0.2940954566001892, 0.2880273887089321, 0.28850562231881277, 0.29608142375946045, 0.2843142407281058, 0.2907142298562186, 0.29885391678128925], "val_accuracy": [0.6169999837875366, 0.7223333120346069, 0.7490000128746033, 0.765666663646698, 0.7856666445732117, 0.7950000166893005, 0.8026666641235352, 0.8176666498184204, 0.8216666579246521, 0.8303333520889282, 0.8343333601951599, 0.8483333587646484, 0.8503333330154419, 0.8546666502952576, 0.8539999723434448, 0.8553333282470703, 0.8496666550636292, 0.859333336353302, 0.8600000143051147, 0.8659999966621399, 0.8650000095367432, 0.8700000047683716, 0.8696666955947876, 0.871666669845581, 0.8690000176429749, 0.8663333058357239, 0.8700000047683716, 0.8759999871253967, 0.8743333220481873, 0.875, 0.8703333139419556, 0.8799999952316284, 0.8823333382606506, 0.8803333044052124, 0.878000020980835, 0.8813333511352539, 0.8756666779518127, 0.8820000290870667]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 1, 3, 9, 2, 3, 6, 3, 9, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 12, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [38, 77, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8351428508758545, "mapping_values": [1, 9, 9, 5, 4, 2, 9, 9, 4, 5, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0404677627234964, 1.0737479485147239, 0.7677499438714609, 0.6783844147927064, 0.6335692152670267, 0.5885312781042946, 0.5561532714284722, 0.5194725590674255, 0.5077230826840976, 0.47398817834443485, 0.4573988030418476, 0.4414892980624436, 0.4176870892588268, 0.41658024313726666, 0.3941152513641266, 0.38028439779039763, 0.38444522403061526, 0.3707589699198242, 0.3566242345194098, 0.33989839419366313, 0.34288756597185366, 0.3309906360464105, 0.3217567712749551, 0.3072643989443448, 0.3071595828499477, 0.29903632017442217, 0.2931410644182266, 0.27444311180890685, 0.28016288875116413, 0.26892849637642985, 0.26436405926411416, 0.2609570534859729, 0.25587009560115553, 0.23717674173305472, 0.23742632908182468, 0.23422281714305115, 0.2272291096044711, 0.2169858420120333, 0.2133228069936689, 0.2099631984948545, 0.210777822569487, 0.21472362228640318, 0.21107760277823875, 0.19824043892126167, 0.18472952414080138, 0.18777547378140733, 0.18234769507933601, 0.1726300089039807, 0.17187215005795653, 0.16366929638544803, 0.15857052421998102, 0.14959467649499203, 0.1560028260410139], "accuracy": [0.30999869108200073, 0.6196011304855347, 0.7164179086685181, 0.7465327978134155, 0.7664773464202881, 0.7819310426712036, 0.7959318161010742, 0.8082155585289001, 0.816008448600769, 0.8265751004219055, 0.8339717388153076, 0.8405758738517761, 0.845859169960022, 0.8491612672805786, 0.8569541573524475, 0.8605204224586487, 0.8553691506385803, 0.8623695969581604, 0.8659358024597168, 0.8765024542808533, 0.8758420348167419, 0.8759741187095642, 0.8786157965660095, 0.8854840993881226, 0.8816536664962769, 0.8865407705307007, 0.8903711438179016, 0.8965790271759033, 0.8945978283882141, 0.898428201675415, 0.897899866104126, 0.9002773761749268, 0.9037115573883057, 0.9134856462478638, 0.9085986018180847, 0.9074098467826843, 0.9137498140335083, 0.9161273241043091, 0.91559898853302, 0.9199577569961548, 0.9207502603530884, 0.9163914918899536, 0.9192973375320435, 0.9241843819618225, 0.9303922653198242, 0.9262977242469788, 0.9292035102844238, 0.9322414398193359, 0.9348831176757812, 0.9379209876060486, 0.9340906143188477, 0.9450535178184509, 0.9401664137840271], "val_loss": [0.9364778314317975, 0.6342318739209857, 0.5477205514907837, 0.5181281396320888, 0.4829775946480887, 0.4714700664792742, 0.44773759160723003, 0.4214943391936166, 0.39234513895852224, 0.3843024798801967, 0.36968902179173063, 0.3571462631225586, 0.3469271830150059, 0.3458965165274484, 0.338050765650613, 0.33567156961985994, 0.3353414365223476, 0.3331241692815508, 0.3147287794521877, 0.3104029382978167, 0.30675922121320454, 0.31114210401262554, 0.3059163178716387, 0.30579153980527607, 0.30232163837977816, 0.3047742673328945, 0.30006545782089233, 0.29206052848270964, 0.2924928069114685, 0.2933073810168675, 0.3028469341141837, 0.2952649252755301, 0.2912306274686541, 0.2951001695224217, 0.29796983514513287, 0.28372099569865633, 0.2915038211005075, 0.2926514063562666, 0.3000455243246896, 0.29393701042447773, 0.30007169927869526, 0.2999399389539446, 0.2959832634244646, 0.2909889136041914, 0.30378580944878714, 0.3089448809623718, 0.29735368490219116, 0.3050642354147775, 0.3061421002660479, 0.31097664151872906, 0.3154159188270569, 0.31601555006844656, 0.30106656891959055], "val_accuracy": [0.6146666407585144, 0.7286666631698608, 0.7549999952316284, 0.7716666460037231, 0.7846666574478149, 0.7963333129882812, 0.7960000038146973, 0.8169999718666077, 0.8259999752044678, 0.8303333520889282, 0.8353333473205566, 0.8429999947547913, 0.8479999899864197, 0.8473333120346069, 0.8513333201408386, 0.8556666374206543, 0.8493333458900452, 0.8503333330154419, 0.8600000143051147, 0.8659999966621399, 0.8616666793823242, 0.8643333315849304, 0.8686666488647461, 0.8669999837875366, 0.8666666746139526, 0.8669999837875366, 0.8706666827201843, 0.8686666488647461, 0.8696666955947876, 0.871666669845581, 0.8663333058357239, 0.8703333139419556, 0.8756666779518127, 0.8773333430290222, 0.8740000128746033, 0.8809999823570251, 0.8799999952316284, 0.875333309173584, 0.8809999823570251, 0.8786666393280029, 0.8833333253860474, 0.8693333268165588, 0.8776666522026062, 0.8826666474342346, 0.8836666941642761, 0.8766666650772095, 0.8830000162124634, 0.8843333125114441, 0.8833333253860474, 0.8820000290870667, 0.8803333044052124, 0.8826666474342346, 0.8813333511352539]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 0, 3, 3, 2, 3, 6, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 3, 1, 0, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [3, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8342857360839844, "mapping_values": [1, 14, 14, 7, 7, 2, 3, 3, 1, 2, 1, 3, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.038451500415109, 1.0766416006336406, 0.7673899676144446, 0.6804255426929864, 0.6343017045800649, 0.5876989366277302, 0.5526091417285666, 0.5130497716626061, 0.5022299582884847, 0.4697764572718077, 0.4558455116673861, 0.43888958653265603, 0.41768276380856495, 0.41184608436153547, 0.39539024632966846, 0.37976742145832837, 0.3760417138683073, 0.36916643237834595, 0.35370182833966324, 0.3300682806800212, 0.3344224437770118, 0.32458826999118884, 0.31121917487985784, 0.29768455418629053, 0.29744780252181685, 0.287631692438865, 0.28583570380315426, 0.27177423577282833, 0.27368894676805694, 0.25820642927020154, 0.25494677873886556, 0.2555438674432317], "accuracy": [0.31118741631507874, 0.6176198720932007, 0.7129837274551392, 0.7446836829185486, 0.7609298825263977, 0.7837802171707153, 0.8000264167785645, 0.8124422430992126, 0.8173292875289917, 0.82683926820755, 0.8330471515655518, 0.8385946154594421, 0.845859169960022, 0.8499537706375122, 0.8573504090309143, 0.8617091774940491, 0.863558292388916, 0.8652753829956055, 0.8698983192443848, 0.8772949576377869, 0.8766345381736755, 0.8829745054244995, 0.8831065893173218, 0.8908994793891907, 0.8861445188522339, 0.8908994793891907, 0.8910315632820129, 0.8980319499969482, 0.8945978283882141, 0.9008057117462158, 0.9039757251739502, 0.9022586345672607], "val_loss": [0.931786298751831, 0.633427551814488, 0.5495252438953945, 0.5230825117656163, 0.48077406202043804, 0.46526953152247835, 0.4359791874885559, 0.4090624877384731, 0.3948295627321516, 0.3812206983566284, 0.3706010324614389, 0.35730853251048494, 0.3441863826342991, 0.34036017315728323, 0.33391398191452026, 0.3334017481122698, 0.33026535170418875, 0.32184477363313946, 0.3094453385898045, 0.3079449534416199, 0.2995918478284563, 0.3085789254733494, 0.2985574092183794, 0.2985748904091971, 0.29956098965236116, 0.3049854040145874, 0.3032385877200535, 0.2901310239519392, 0.29382297822407316, 0.2965939726148333, 0.29988845757075716, 0.2942080668040684], "val_accuracy": [0.6169999837875366, 0.7246666550636292, 0.7493333220481873, 0.7646666765213013, 0.7850000262260437, 0.7956666946411133, 0.8069999814033508, 0.8213333487510681, 0.8199999928474426, 0.8273333311080933, 0.8346666693687439, 0.8446666598320007, 0.8493333458900452, 0.8536666631698608, 0.8550000190734863, 0.856333315372467, 0.8503333330154419, 0.8573333621025085, 0.8603333234786987, 0.8673333525657654, 0.8673333525657654, 0.8679999709129333, 0.8706666827201843, 0.8693333268165588, 0.8650000095367432, 0.8659999966621399, 0.8743333220481873, 0.8743333220481873, 0.8736666440963745, 0.871999979019165, 0.8709999918937683, 0.8726666569709778]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 0, 3, 3, 2, 2, 6, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [3, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8288571238517761, "mapping_values": [1, 14, 14, 7, 7, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, grad), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0384516083506106, 1.0764945056601884, 0.7677612504655533, 0.679836998164079, 0.6343210692560637, 0.5850831968059094, 0.5562481155185778, 0.5129463539588343, 0.5026774764919104, 0.4688323807754159, 0.4583185413029877, 0.43840776521059593, 0.4163298031216552, 0.40947660281043785, 0.394293645889122, 0.37851062130068336, 0.3801007262349774, 0.3663851681276477, 0.3537004624241615, 0.330977299091854, 0.339997985540616, 0.32460211495902197, 0.3121737077558644, 0.3006343746882829, 0.30539568457636834, 0.2898570111776938, 0.28284757764914786, 0.2694428433807944, 0.26864396403919455, 0.25833252067217, 0.25510873287628827, 0.24833274259228416, 0.24666739689470865, 0.23247589198881058, 0.23750651156496078, 0.2318639520798314, 0.22839680825399605, 0.2112983628003321, 0.20609939958653697, 0.20333999224138014, 0.1946508108490982, 0.2032974734695722, 0.20202526581041755, 0.19633973136262778], "accuracy": [0.31118741631507874, 0.6173557043075562, 0.7160216569900513, 0.7485140562057495, 0.7650244235992432, 0.7872143983840942, 0.7988376617431641, 0.811649739742279, 0.81548011302948, 0.8244617581367493, 0.8364813327789307, 0.8381983637809753, 0.8466516733169556, 0.8531237840652466, 0.8570862412452698, 0.8617091774940491, 0.86118084192276, 0.8644828796386719, 0.8709549307823181, 0.8776912093162537, 0.8737286925315857, 0.8792761564254761, 0.883238673210144, 0.8869370222091675, 0.8842953443527222, 0.8883898854255676, 0.8894465565681458, 0.895918607711792, 0.8994848728179932, 0.9009377956390381, 0.9033153057098389, 0.9070135951042175, 0.9050323367118835, 0.9093911051750183, 0.9091269373893738, 0.9109761118888855, 0.9138818979263306, 0.9189010858535767, 0.9214106202125549, 0.9191652536392212, 0.9269581437110901, 0.9198256731033325, 0.9214106202125549, 0.9265618920326233], "val_loss": [0.9317872864859444, 0.6335959264210292, 0.5490538733346122, 0.5200118167059762, 0.4811829498835972, 0.4680230106626238, 0.43762374775750296, 0.4117844445364816, 0.39391331161771503, 0.3840794137545994, 0.37545935596738544, 0.3591941850525992, 0.3457574588911874, 0.3412115829331534, 0.33575232539858135, 0.32736014468329294, 0.3292794057301113, 0.32692651237760273, 0.3137775318963187, 0.3082154393196106, 0.3011225717408316, 0.30853624854769024, 0.30884226730891634, 0.29791778326034546, 0.2979298744882856, 0.3017830763544355, 0.29725598437445505, 0.29055626903261456, 0.29184313331331524, 0.29573693445750643, 0.2891863329069955, 0.2995411583355495, 0.2937663623264858, 0.2964273350579398, 0.29495515142168316, 0.29222112042563303, 0.29053172894886564, 0.2956474849155971, 0.3013311539377485, 0.2973639794758388, 0.3024368626730783, 0.30314299889973234, 0.3012491464614868, 0.30185926812035696], "val_accuracy": [0.6169999837875366, 0.7246666550636292, 0.7526666522026062, 0.7663333415985107, 0.7856666445732117, 0.7916666865348816, 0.8033333420753479, 0.8199999928474426, 0.8230000138282776, 0.8256666660308838, 0.8306666612625122, 0.8446666598320007, 0.8473333120346069, 0.8516666889190674, 0.8579999804496765, 0.8586666584014893, 0.8506666421890259, 0.8513333201408386, 0.8566666841506958, 0.8650000095367432, 0.862666666507721, 0.8683333396911621, 0.8650000095367432, 0.8669999837875366, 0.8679999709129333, 0.8676666617393494, 0.8736666440963745, 0.8723333477973938, 0.8700000047683716, 0.871666669845581, 0.875333309173584, 0.871666669845581, 0.8723333477973938, 0.8733333349227905, 0.8733333349227905, 0.8759999871253967, 0.878000020980835, 0.878333330154419, 0.8840000033378601, 0.878000020980835, 0.8799999952316284, 0.8740000128746033, 0.8759999871253967, 0.8820000290870667]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 1, 3, 9, 2, 3, 6, 3, 9, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 1, 0, 0, 2, 1, 0, 0, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 35, 0, 60, 59, 23, 22, 72, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 1, 3, 0], [38, 64, 81], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7928571701049805, "mapping_values": [1, 7, 7, 3, 4, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad)), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2189085620537, 1.714690949529185, 1.2623197772105796, 1.0847044607289573, 0.9618378220264544, 0.9178352689053388, 0.8410340785791278, 0.7991273475990729, 0.7669481501493, 0.7620776025311444, 0.7378667359023975, 0.700315522291027, 0.7103303504138181, 0.7050010008015858, 0.711361558414359, 0.6566337136040746, 0.6498764290738461, 0.6355050821282907, 0.6502187577032095, 0.6376473613308721, 0.6478774951134438, 0.6005077442677581, 0.6161802593333736], "accuracy": [0.24976885318756104, 0.4624224007129669, 0.5493329763412476, 0.6149781942367554, 0.6540747880935669, 0.6621318459510803, 0.6910579800605774, 0.7034738063812256, 0.7125874757766724, 0.7140403985977173, 0.7297582626342773, 0.7454761862754822, 0.7325320243835449, 0.7347774505615234, 0.7255316376686096, 0.755118191242218, 0.759080708026886, 0.767930269241333, 0.7540615797042847, 0.7622507214546204, 0.7607977986335754, 0.774798572063446, 0.7759873270988464], "val_loss": [1.6982578209468298, 1.0217369283948625, 0.8438941240310669, 0.7145109687532697, 0.7007181474140712, 0.6260934386934552, 0.5944585629871914, 0.5691989830562046, 0.5529498713357108, 0.5840514728001186, 0.5407945598874774, 0.5523712805339268, 0.5623405150004795, 0.5233116490500314, 0.5081525870731899, 0.5023910658700126, 0.5076759542737689, 0.4694075584411621, 0.5021389382226127, 0.4916060141154698, 0.4631006717681885, 0.45875631059919086, 0.4642325128827776], "val_accuracy": [0.5476666688919067, 0.609000027179718, 0.6679999828338623, 0.703000009059906, 0.7020000219345093, 0.7236666679382324, 0.7426666617393494, 0.7526666522026062, 0.7559999823570251, 0.7239999771118164, 0.7633333206176758, 0.7369999885559082, 0.737333357334137, 0.7689999938011169, 0.7639999985694885, 0.762666642665863, 0.765666663646698, 0.8013333082199097, 0.7799999713897705, 0.7706666588783264, 0.7919999957084656, 0.796999990940094, 0.7826666831970215]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 5, 3, 9, 2, 3, 6, 3, 9, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 0, 2, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 85, 29, 47, 60, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7514285445213318, "mapping_values": [1, 17, 17, 11, 6, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.218908575468878, 1.7146990512104208, 1.26271988515447, 1.0851991708252517, 0.9618336706349815, 0.9179994695852021, 0.8406083482351947, 0.798783171532759, 0.7707128845673857, 0.761566610777808, 0.7410659582513183, 0.7040473968282651, 0.7161019134751369], "accuracy": [0.24976885318756104, 0.46189406514167786, 0.5498613119125366, 0.6153744459152222, 0.6539427042007446, 0.6625280380249023, 0.6930392384529114, 0.7041342258453369, 0.7102100253105164, 0.7161537408828735, 0.7255316376686096, 0.7442874312400818, 0.7304186820983887], "val_loss": [1.6982647350856237, 1.021487065723964, 0.8437085321971348, 0.7139487607138497, 0.7002020222800118, 0.6285200800214495, 0.602100099836077, 0.5653131348746163, 0.549708536693028, 0.5847586393356323, 0.5473416362489972, 0.5747452974319458, 0.5705879075186593], "val_accuracy": [0.5479999780654907, 0.6110000014305115, 0.6690000295639038, 0.7036666870117188, 0.7016666531562805, 0.7196666598320007, 0.7366666793823242, 0.7630000114440918, 0.7576666474342346, 0.7283333539962769, 0.762666642665863, 0.7283333539962769, 0.734000027179718]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 9, 1, 3, 3, 2, 6, 6, 5, 6, 8, 0, 2, 8, 9, 5, 7, 9, 9, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 1, 0, 0, 2, 1, 0, 2, 2, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 37, 75, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [11, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7440000176429749, "mapping_values": [1, 26, 26, 19, 7, 7, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.square(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), tf.math.sqrt(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3027922425051535, 2.2951177117248585, 2.280034644524057, 2.261676953280087, 2.2352128549731245, 2.2042314277868607, 2.1612121749941418, 2.099289723611574, 2.013514305417564, 1.9002665111716586, 1.7628880731496734, 1.6212353785874711, 1.490463725816084, 1.421220450274712, 1.3830355473513207, 1.3624034531128137, 1.3692059366694531, 1.3294899565054676, 1.2556845098045035, 1.1222725654432504, 1.0483537804669456, 0.9365528238495154, 0.91944127613606, 0.9100871348991968, 0.9217990379543857, 0.9314531578505595, 0.9244000453360722, 0.8937441390723663, 0.8558839013185704, 0.8251524221045293, 0.8017326211491596, 0.8068671892615452, 0.8145587055706125, 0.8057762703418795, 0.8164771240794537, 0.8215790962136857, 0.7970775316546008, 0.8079391371666905, 0.7794250452035076, 0.7648837610305718, 0.7417693072857401, 0.7421556523038002, 0.73147061495119, 0.725987021421728, 0.7217177763638354, 0.7198901265099883, 0.7157906806228057, 0.7187137416466872, 0.7109733117160513], "accuracy": [0.09192973375320435, 0.10817593336105347, 0.15070664882659912, 0.20063400268554688, 0.2673358917236328, 0.30920618772506714, 0.33958524465560913, 0.3745872378349304, 0.39849424362182617, 0.42147669196128845, 0.43468499183654785, 0.4563465714454651, 0.4896314740180969, 0.5017831325531006, 0.5258222222328186, 0.5349359512329102, 0.5403513312339783, 0.561880886554718, 0.5912032723426819, 0.6234315037727356, 0.6388852000236511, 0.6634526252746582, 0.6625280380249023, 0.6551313996315002, 0.6576409935951233, 0.6609430909156799, 0.6704530715942383, 0.6870955228805542, 0.6927750706672668, 0.691850483417511, 0.700700044631958, 0.7036058902740479, 0.6992471218109131, 0.6989829540252686, 0.69673752784729, 0.6973979473114014, 0.7054550051689148, 0.7028133869171143, 0.7047945857048035, 0.7103421092033386, 0.718399167060852, 0.7207766771316528, 0.7194558382034302, 0.7253995537757874, 0.7268524765968323, 0.7301545143127441, 0.7366266250610352, 0.7312111854553223, 0.7367587089538574], "val_loss": [1.9672587939671107, 1.9571082251412528, 1.9411369051252092, 1.919821330479213, 1.8930019651140486, 1.8580847467694963, 1.8095369338989258, 1.7406624385288783, 1.6441124507359095, 1.5143147196088518, 1.3571111134120397, 1.1949425765446253, 1.0550966944013322, 0.9473527499607631, 0.8683182171412877, 0.8265847308295113, 0.8035073791231427, 0.755649379321507, 0.7497004270553589, 0.7330340487616402, 0.6851284163338798, 0.6635642903191703, 0.6757229736873082, 0.6903738975524902, 0.7049914768763951, 0.7092341695513044, 0.6903433629444667, 0.6547094753810337, 0.6194395848682949, 0.5996650627681187, 0.5949037756238665, 0.5938906329018729, 0.5893821886607579, 0.5859432390757969, 0.5883999381746564, 0.5904051065444946, 0.5829333577837262, 0.5686613151005336, 0.5564966712679181, 0.5484192541667393, 0.5440281459263393, 0.5422603573117938, 0.5423921687262399, 0.5430442775998797, 0.5445157289505005, 0.5475360155105591, 0.5505795989717756, 0.5504635913031442, 0.5455581630979266], "val_accuracy": [0.059333331882953644, 0.14399999380111694, 0.28999999165534973, 0.3583333194255829, 0.39366665482521057, 0.41366666555404663, 0.43833333253860474, 0.460999995470047, 0.48399999737739563, 0.5106666684150696, 0.5456666946411133, 0.5740000009536743, 0.6146666407585144, 0.6589999794960022, 0.6763333082199097, 0.6723333597183228, 0.6700000166893005, 0.7036666870117188, 0.7043333053588867, 0.7110000252723694, 0.7099999785423279, 0.7229999899864197, 0.7076666951179504, 0.7026666402816772, 0.7113333344459534, 0.7353333234786987, 0.734333336353302, 0.7333333492279053, 0.7386666536331177, 0.7379999756813049, 0.7393333315849304, 0.737333357334137, 0.7383333444595337, 0.7443333268165588, 0.7423333525657654, 0.7369999885559082, 0.7379999756813049, 0.7400000095367432, 0.7486666440963745, 0.7516666650772095, 0.7519999742507935, 0.7563333511352539, 0.7613333463668823, 0.765999972820282, 0.7649999856948853, 0.7593333125114441, 0.7566666603088379, 0.7593333125114441, 0.7639999985694885]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 1, 3, 9, 2, 3, 6, 3, 9, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 1, 0, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [12, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.3694285750389099, "mapping_values": [1, 18, 18, 11, 7, 3, 9, 9, 4, 5, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3035895793256254, 2.30220281011818, 2.300045027094841, 2.300557515404212, 2.298248505217603, 2.2999653802052182, 2.2992624713760152, 2.2977193856141698, 2.2971759937096423, 2.295636234628589, 2.2970784363918586, 2.2973841498824252, 2.293306614098973, 2.296292398237612, 2.294914788195895, 2.2939230388323426, 2.2939189530288098, 2.293786133001698, 2.2942753388597947, 2.292831576558593, 2.291819295359168, 2.291054496581229, 2.2909330411625577, 2.2898956214936024, 2.2887439069305793, 2.289243602922737, 2.2877873854787674, 2.28870457957969, 2.2883523471949676, 2.286579878448952, 2.2866459481389594, 2.286425563495834, 2.2868060057016177, 2.2851961132967085, 2.2854866463793835, 2.283250977192824, 2.283018430053062, 2.2836655795755263, 2.2811295539002927, 2.28130925767662, 2.2798081733263746, 2.2808866636265916, 2.2786370053692515, 2.279009910039835, 2.279136924758768, 2.277669195044924, 2.279210408948526, 2.276494851280528, 2.274999481449825, 2.274800005747642, 2.2756095460660704, 2.2722661442618723, 2.2723860363084185, 2.272480605253533, 2.269983784806979, 2.270609621232637, 2.2694343788402427, 2.269067546395798, 2.270574450414131, 2.2690047489700853, 2.268702646776229, 2.26673785142139, 2.267918555176946, 2.2680280121672407, 2.2661546263570687, 2.265760073210223, 2.2658651602534317, 2.2640633710607516, 2.263613301528963, 2.262291360320259, 2.2622119813878, 2.261732185710423, 2.262475386082835, 2.2605569709041697, 2.26085547754683, 2.261070423626298, 2.2594489969707765, 2.258533291797187, 2.2585074215076384, 2.2579215822155607, 2.2565819097941406, 2.2568548726462385, 2.255648234894782, 2.2547375036977018, 2.254446613317814, 2.2515334234954407, 2.2536366525941505, 2.252697425385539, 2.2508391382325486, 2.250283274463517, 2.249801756856684, 2.249144630661384, 2.2475438130262457, 2.246250827535111, 2.2459302822738323, 2.246160157903657, 2.245368818266202, 2.2423507462182712, 2.2407179167556914, 2.241664288239535], "accuracy": [0.09047681838274002, 0.08849557489156723, 0.09602430462837219, 0.09206181764602661, 0.10196803510189056, 0.09245806187391281, 0.09826971590518951, 0.10342095047235489, 0.10368511080741882, 0.10342095047235489, 0.10540219396352768, 0.10091137140989304, 0.10976093262434006, 0.10500594228506088, 0.10830801725387573, 0.11081759631633759, 0.11649715900421143, 0.11187426000833511, 0.10962884873151779, 0.1150442510843277, 0.11279883980751038, 0.11887465417385101, 0.11966715008020401, 0.12508255243301392, 0.12270505726337433, 0.12732796370983124, 0.12296922504901886, 0.1306300312280655, 0.13195087015628815, 0.1294412910938263, 0.13115836679935455, 0.1340641975402832, 0.12851670384407043, 0.1336679458618164, 0.1298375427722931, 0.13881917297840118, 0.1434420794248581, 0.14357416331768036, 0.14700831472873688, 0.14529123902320862, 0.1526878923177719, 0.1538766324520111, 0.1538766324520111, 0.15519747138023376, 0.16034869849681854, 0.15849953889846802, 0.1570466309785843, 0.1574428677558899, 0.16840575635433197, 0.17012283205986023, 0.16219785809516907, 0.17633073031902313, 0.17250032722949982, 0.17580240964889526, 0.18121780455112457, 0.17936864495277405, 0.177255317568779, 0.18557654321193695, 0.17699114978313446, 0.17434948682785034, 0.18161405622959137, 0.1846519559621811, 0.18095363676548004, 0.18597279489040375, 0.18359529972076416, 0.19310526549816132, 0.18478403985500336, 0.19865275919437408, 0.20195482671260834, 0.19865275919437408, 0.19693566858768463, 0.20737022161483765, 0.1950865089893341, 0.20221899449825287, 0.20604939758777618, 0.20538897812366486, 0.2106723040342331, 0.20803064107894897, 0.21080438792705536, 0.2164839506149292, 0.21503104269504547, 0.2148989588022232, 0.2148989588022232, 0.22612600028514862, 0.22335226833820343, 0.2296922504901886, 0.230484738945961, 0.22414475679397583, 0.23273015022277832, 0.23656055331230164, 0.23233389854431152, 0.23854179680347443, 0.23220182955265045, 0.23920221626758575, 0.2436930388212204, 0.2475234419107437, 0.2456742823123932, 0.2569013237953186, 0.25518426299095154, 0.24607053399085999], "val_loss": [1.9704888207571847, 1.9699835777282715, 1.9694856234959193, 1.96897976739066, 1.9684835161481584, 1.9679788180759974, 1.9674835205078125, 1.966987133026123, 1.966486998966762, 1.9660004888262068, 1.9655064855303084, 1.9650135040283203, 1.9645259720938546, 1.9640363965715681, 1.96355254309518, 1.963059561593192, 1.962561743600028, 1.9620832715715681, 1.961590358189174, 1.9611092976161413, 1.9606216975620814, 1.9601280348641532, 1.9596411160060339, 1.9591540609087263, 1.9586540630885534, 1.9581626483372279, 1.9576770237513952, 1.9571857452392578, 1.9566870416913713, 1.9561889512198312, 1.9557015555245536, 1.955209527696882, 1.9547046252659388, 1.9542009489876884, 1.9536666870117188, 1.9531309945242745, 1.9525746617998396, 1.952031476157052, 1.9514721461704798, 1.9509197643824987, 1.9503419739859444, 1.9497823034014021, 1.9492000852312361, 1.948624747140067, 1.9480198451450892, 1.947399616241455, 1.9467505727495467, 1.9460865429469518, 1.9454194477626257, 1.9447345733642578, 1.944038254874093, 1.9433392116001673, 1.942662239074707, 1.9420125825064523, 1.9413845198495048, 1.9408104760306222, 1.940263271331787, 1.9397204944065638, 1.9392076219831194, 1.9387204987662179, 1.9382249968392509, 1.9377292905535017, 1.9372431891305106, 1.9367609705243791, 1.936272348676409, 1.9357731682913644, 1.9352724211556571, 1.9347560065133231, 1.9342353003365653, 1.9337097576686315, 1.9331676619393485, 1.9326041766575404, 1.932039669581822, 1.9314539773123605, 1.930830478668213, 1.9302100454057967, 1.9295760563441686, 1.9289382525852747, 1.9282889366149902, 1.9276603290012904, 1.927055903843471, 1.9264439174107142, 1.9258307729448592, 1.925208568572998, 1.924581732068743, 1.923947879246303, 1.9233221326555525, 1.9226758139474052, 1.922013487134661, 1.9213309288024902, 1.9206236430576868, 1.9198836599077498, 1.9191326413835799, 1.9183260372706823, 1.9174812861851283, 1.9166052000863212, 1.9156746864318848, 1.9147020067487444, 1.9136573246547155, 1.9125540597098214], "val_accuracy": [0.04066666588187218, 0.04233333468437195, 0.04766666516661644, 0.050333332270383835, 0.05166666582226753, 0.05533333495259285, 0.0573333315551281, 0.060333333909511566, 0.06466666609048843, 0.06800000369548798, 0.07133333384990692, 0.07599999755620956, 0.07699999958276749, 0.07999999821186066, 0.08500000089406967, 0.09000000357627869, 0.09300000220537186, 0.09533333033323288, 0.10000000149011612, 0.10533333569765091, 0.11033333092927933, 0.11566666513681412, 0.11800000071525574, 0.12300000339746475, 0.1263333261013031, 0.12999999523162842, 0.1340000033378601, 0.13766667246818542, 0.14766666293144226, 0.15299999713897705, 0.156333327293396, 0.1616666615009308, 0.17033334076404572, 0.17666666209697723, 0.18400000035762787, 0.19233334064483643, 0.19599999487400055, 0.20600000023841858, 0.21299999952316284, 0.218666672706604, 0.22300000488758087, 0.22599999606609344, 0.23233333230018616, 0.23533333837985992, 0.23933333158493042, 0.2423333376646042, 0.2446666657924652, 0.24699999392032623, 0.24966666102409363, 0.2529999911785126, 0.25466665625572205, 0.25566667318344116, 0.25733333826065063, 0.2606666684150696, 0.2633333206176758, 0.26733332872390747, 0.27033331990242004, 0.27433332800865173, 0.27533334493637085, 0.2809999883174896, 0.2849999964237213, 0.2879999876022339, 0.29100000858306885, 0.2956666648387909, 0.29866665601730347, 0.30133333802223206, 0.304666668176651, 0.3076666593551636, 0.3113333284854889, 0.3163333237171173, 0.320333331823349, 0.3230000138282776, 0.3253333270549774, 0.33000001311302185, 0.3319999873638153, 0.3356666564941406, 0.3400000035762787, 0.34200000762939453, 0.343666672706604, 0.3463333249092102, 0.3479999899864197, 0.3499999940395355, 0.3503333330154419, 0.351666659116745, 0.3540000021457672, 0.35600000619888306, 0.35766667127609253, 0.35866665840148926, 0.3596666753292084, 0.36033332347869873, 0.3610000014305115, 0.3623333275318146, 0.36533331871032715, 0.3659999966621399, 0.36633333563804626, 0.36633333563804626, 0.3683333396911621, 0.36899998784065247, 0.3709999918937683, 0.37166666984558105]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 0, 3, 3, 2, 2, 6, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 2, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [3, 0, 0, 3, 0], [37, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.15199999511241913, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.0533841710600163, 2.4101983479945854, 2.5478894174878373, 5.577921239943348, NaN, NaN, NaN], "accuracy": [0.16642451286315918, 0.12613920867443085, 0.10408136248588562, 0.09813763201236725, 0.11108175665140152, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9914067813328333, 2.093198231288365, 2.051501750946045, 603.2913818359375, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.20900000631809235, 0.09833333641290665, 0.19366666674613953, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 1, 0, 3, 2, 6, 6, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 1, 0, 2, 1, 1, 0, 2, 2, 1, 2, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 19, 12, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.subtract(grad, tf.math.add(alpha, grad)))), alpha))))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [443.19601718558454, 3.597610436841673e+28, 4.128746336288361, 8.39094353578724, 14.23185518234791, 20.79458808873733], "accuracy": [0.044511955231428146, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [13341298980.571428, 2.60909298488072, 5.383037975856236, 10.004719052995954, 15.445587158203125, 21.26604243687221], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 1, 3, 3, 2, 6, 2, 5, 6, 1, 2, 2, 3, 9, 5, 7, 5, 3, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 1, 0, 0, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 58, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 2, 0, 3, 0], [31, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 5, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.0533809215952266, 105.49708071763978, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16655659675598145, 0.12270505726337433, 0.10474177449941635, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9915548052106584, 230579049.14285713, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 6, 0, 0, 3, 2, 3, 6, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 3, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [0, 0, 0, 3, 0], [86, 77, 6, 33], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 4, 5, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 0, 3, 3, 2, 3, 6, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [3, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [9, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(alpha, grad), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029185699638735, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 1, 3, 5, 2, 2, 6, 5, 3, 1, 0, 2, 3, 9, 5, 8, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 1, 0, 0, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 3], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [0, 0, 0, 6], [54, 55], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.08085714280605316, "mapping_values": [1, 31, 31, 19, 12, 4, 9, 9, 4, 5, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.subtract(grad, alpha)))))))), alpha))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.48916369853727, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03209615498781204, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7.563911437988281, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 1, 3, 4, 2, 6, 6, 5, 6, 9, 0, 2, 3, 9, 5, 7, 5, 8, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 1, 0, 2, 2, 1, 0, 2, 2, 1, 0, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 92, 0, 60, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [70, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.07428571581840515, "mapping_values": [1, 29, 29, 18, 11, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))))))))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.square(grad)))), tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.7203665371064605, 2.371219701235399, 2.3033376718477534, 2.303085302396489, 2.303056304575414, 2.303072579328048, 2.3029185562967673], "accuracy": [0.2075023055076599, 0.09919429570436478, 0.10011887550354004, 0.09879804402589798, 0.09536388516426086, 0.09615638852119446, 0.09509972482919693], "val_loss": [2.284949234553746, 1.974057606288365, 1.973745277949742, 1.9737183025905065, 1.9736975942339217, 1.9736898967197962, 1.973672526223319], "val_accuracy": [0.09933333098888397, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.09933333098888397, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 0, 0, 3, 2, 3, 6, 5, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 3, 1, 0, 0, 2, 1, 0, 2, 2, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [4, 0, 0, 3, 0], [53, 77, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [1, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.05371428653597832, "mapping_values": [1, 5, 5, 3, 2, 0, 9, 9, 4, 5, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3035083615375216, 2.302085159729028, 2.3001928452597697, 2.3008213845919214, 2.2992040894334154, 2.3010188921048043, 2.3007308235730255, 2.3005060010251746, 2.300821393566865, 2.3002250868772487, 2.302563601323658, 2.30375406011819, 2.300767157323734, 2.30336268224327], "accuracy": [0.09047681838274002, 0.09126931428909302, 0.09734513610601425, 0.09311848133802414, 0.09879804402589798, 0.0936468094587326, 0.09325055778026581, 0.09496764093637466, 0.09391097724437714, 0.09100515395402908, 0.09232597798109055, 0.08625016361474991, 0.09192973375320435, 0.08638224750757217], "val_loss": [1.9703756059919084, 1.970057691846575, 1.9697797639029366, 1.96953398840768, 1.9693729536873954, 1.9692463874816895, 1.969440119607108, 1.9701061929975237, 1.9706084387642997, 1.9710410663059779, 1.9721567290169852, 1.9729275022234236, 1.9731611524309431, 1.9733294759477888], "val_accuracy": [0.041999999433755875, 0.04600000008940697, 0.04899999871850014, 0.052000001072883606, 0.052000001072883606, 0.0533333346247673, 0.056333333253860474, 0.05666666850447655, 0.0573333315551281, 0.05299999937415123, 0.045666664838790894, 0.04533333331346512, 0.045666664838790894, 0.045666664838790894]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 1, 3, 9, 8, 3, 1, 3, 9, 8, 4, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 1, 0, 0, 2, 1, 0, 2, 2, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [2, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 14, 14, 8, 6, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))))), tf.math.subtract(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3038485845034984, 2.3029996784781073, 2.301382677193882, 2.3024328466041797, 2.300626157722327, 2.302871263132686], "accuracy": [0.09021265059709549, 0.08691058307886124, 0.09325055778026581, 0.0866464152932167, 0.09681680053472519, 0.08651433140039444], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 2, 0, 0, 3, 2, 2, 6, 9, 6, 8, 0, 2, 3, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 3, 1, 0, 0, 2, 1, 0, 0, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 64, 29, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [3, 3, 7, 7, 8, 9], [3, 0, 0, 3, 0], [38, 77, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [54, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [1, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.023714285343885422, "mapping_values": [1, 7, 7, 4, 3, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.305791720013813, 2.329854466927412, 312648665394514.1, 566.1274462049789, 97360.97048513654, 16526511.361577071, 2817034855.350152], "accuracy": [0.08572183549404144, 0.07317395508289337, 0.09179764986038208, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9776500974382674, 2.0244963509695872, 20.72472163609096, 4243.920619419643, 720216.0714285715, 121895094.85714285, 20751935195.42857], "val_accuracy": [0.023000000044703484, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]