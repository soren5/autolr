[{"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 5, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8451428413391113, "mapping_values": [1, 59, 59, 37, 22, 7, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(alpha, grad)))))))))), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, grad)), tf.math.square(tf.math.add(alpha, tf.math.subtract(grad, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.035696726811482, 1.1109716922867456, 0.8013091041758045, 0.7139733181795219, 0.6528771044225142, 0.5957732550251706, 0.5633923572524664, 0.5240612368636585, 0.4956962249542287, 0.4879020288076856, 0.4617957844080438, 0.4435993824432145, 0.4322083750263638, 0.41263048489174714, 0.3983346140458678, 0.3840583362410554, 0.37926524422109215, 0.36106068173010336, 0.3569896900383016, 0.33960449261404596, 0.3341926759291697, 0.32467774875789757, 0.3112435760578034, 0.3182522028255551, 0.305062286846075, 0.29919342831487683, 0.2874109001404353, 0.28518883909736376, 0.2836330154702302, 0.2661347609894576, 0.2661791445517411, 0.2610958089067668, 0.2506728884511226, 0.2415965692836532, 0.23681919719753736, 0.23095425391052346, 0.22230005074548778, 0.21948608004020237, 0.22054395735610227], "accuracy": [0.32162198424339294, 0.6136573553085327, 0.7005679607391357, 0.7290979027748108, 0.7576277852058411, 0.7761194109916687, 0.785101056098938, 0.7993659973144531, 0.81548011302948, 0.824329674243927, 0.8319904804229736, 0.8364813327789307, 0.8425571322441101, 0.8512746095657349, 0.8565579056739807, 0.8529917001724243, 0.8603883385658264, 0.8654074668884277, 0.8664641380310059, 0.8725399374961853, 0.8759741187095642, 0.8775591254234314, 0.8838990926742554, 0.8835028409957886, 0.8824461698532104, 0.8886540532112122, 0.8910315632820129, 0.894069492816925, 0.8927486538887024, 0.8985602855682373, 0.8981640338897705, 0.9017302989959717, 0.9030511379241943, 0.9109761118888855, 0.9093911051750183, 0.9116365313529968, 0.9152027368545532, 0.9157310724258423, 0.9158631563186646], "val_loss": [0.9468592916216169, 0.6542061397007534, 0.5813297884804862, 0.5332281930106026, 0.490084035055978, 0.4533701794488089, 0.43347154344831196, 0.40637905257088797, 0.40338148389543804, 0.3846327577318464, 0.37567428180149626, 0.3614694731576102, 0.3512915202549526, 0.3398145948137556, 0.32749857221330914, 0.33164619547980173, 0.3253841996192932, 0.3296971150806972, 0.314926666872842, 0.3129109059061323, 0.3036768436431885, 0.3101049150739397, 0.3060116597584316, 0.3063598871231079, 0.30452719756535124, 0.31177241461617605, 0.29437599011829924, 0.29837421008518766, 0.2914963960647583, 0.29961501700537546, 0.2903085776737758, 0.29988793815885273, 0.29185547147478375, 0.2903803416660854, 0.2812330893107823, 0.2865697741508484, 0.2862687536648342, 0.30007265295301166, 0.2880053860800607], "val_accuracy": [0.6396666765213013, 0.7206666469573975, 0.737333357334137, 0.7636666893959045, 0.7760000228881836, 0.7870000004768372, 0.8096666932106018, 0.8196666836738586, 0.815666675567627, 0.8273333311080933, 0.8316666483879089, 0.8393333554267883, 0.8460000157356262, 0.8566666841506958, 0.859000027179718, 0.8533333539962769, 0.8539999723434448, 0.8523333072662354, 0.8583333492279053, 0.8659999966621399, 0.8673333525657654, 0.8653333187103271, 0.8656666874885559, 0.8709999918937683, 0.8656666874885559, 0.8583333492279053, 0.8666666746139526, 0.8703333139419556, 0.8759999871253967, 0.874666690826416, 0.8756666779518127, 0.8736666440963745, 0.8769999742507935, 0.8830000162124634, 0.8776666522026062, 0.8826666474342346, 0.8796666860580444, 0.8786666393280029, 0.875]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 5, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8428571224212646, "mapping_values": [1, 7, 7, 4, 3, 1, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0356965581297857, 1.1113415565221159, 0.8020117014091501, 0.7138577544646666, 0.6543628697807228, 0.596119628362274, 0.5629753955855047, 0.5239956030882171, 0.496941830802981, 0.4861192084999447, 0.4594836473118564, 0.44935449787402404, 0.434351176228175, 0.41114779864760786, 0.40053587497312, 0.38573968915922957, 0.37386937134962794, 0.36428459745828956, 0.35569532385056346, 0.3401331065660297, 0.3385204660098913, 0.3268175316784344, 0.31259898368031547, 0.30998532049896194, 0.30096398174502925, 0.2909904391837079, 0.27868122030494863, 0.28364094016794766, 0.28109113646299927, 0.26555760162475955, 0.2597033248373137, 0.26248614544747856, 0.2512566001620574, 0.24517480534624508, 0.23122123775780082, 0.2343873460145438, 0.22667564946694096, 0.21566047287691129, 0.22257012462241224], "accuracy": [0.32162198424339294, 0.613789439201355, 0.6997754573822021, 0.7290979027748108, 0.7572315335273743, 0.7773081660270691, 0.7841764688491821, 0.8009510040283203, 0.8140271902084351, 0.8231409192085266, 0.8327829837799072, 0.8304054737091064, 0.8400475382804871, 0.8539162874221802, 0.8527275323867798, 0.8507462739944458, 0.8661999702453613, 0.8663320541381836, 0.8683133125305176, 0.8717474341392517, 0.8755778670310974, 0.8795403242111206, 0.8823140859603882, 0.8893144726753235, 0.8857482671737671, 0.8881257176399231, 0.8951261639595032, 0.894069492816925, 0.8951261639595032, 0.8997490406036377, 0.89988112449646, 0.8965790271759033, 0.9014661312103271, 0.9085986018180847, 0.9104477763175964, 0.9082023501396179, 0.910711944103241, 0.9212785363197327, 0.9166556596755981], "val_loss": [0.9468445096697126, 0.6548360586166382, 0.5822152239935738, 0.5331274781908307, 0.4904455116816929, 0.4541077102933611, 0.4308439918926784, 0.40912044048309326, 0.4037636007581438, 0.38294405596596853, 0.38279493365968975, 0.36314332485198975, 0.3544475861958095, 0.34305050543376375, 0.3308702366692679, 0.32915131534848896, 0.3306939091001238, 0.32699080875941683, 0.320135908467429, 0.3156507100377764, 0.30581596919468473, 0.3074261631284441, 0.3016458920070103, 0.30754789284297396, 0.2984826224190848, 0.30379011801310946, 0.29190679107393536, 0.3054499796458653, 0.28504585368292673, 0.3018237352371216, 0.2976925883974348, 0.29979448659079416, 0.2978030187743051, 0.28482539313180105, 0.28788996594292776, 0.2859411154474531, 0.2883586457797459, 0.30914715358189176, 0.28490798813956125], "val_accuracy": [0.6399999856948853, 0.7200000286102295, 0.7366666793823242, 0.765333354473114, 0.7746666669845581, 0.7863333225250244, 0.8100000023841858, 0.8166666626930237, 0.8169999718666077, 0.8303333520889282, 0.8299999833106995, 0.8366666436195374, 0.846666693687439, 0.8519999980926514, 0.8560000061988831, 0.8566666841506958, 0.8506666421890259, 0.8550000190734863, 0.8556666374206543, 0.8673333525657654, 0.8676666617393494, 0.8616666793823242, 0.8679999709129333, 0.8673333525657654, 0.8686666488647461, 0.8650000095367432, 0.8690000176429749, 0.8673333525657654, 0.878333330154419, 0.8723333477973938, 0.8663333058357239, 0.8743333220481873, 0.8790000081062317, 0.8820000290870667, 0.878333330154419, 0.8790000081062317, 0.8766666650772095, 0.875, 0.8743333220481873]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 1, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.842285692691803, "mapping_values": [1, 19, 19, 10, 9, 2, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))), tf.math.add(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.035696650319773, 1.1109695374501174, 0.8015368775590189, 0.7137479759982045, 0.6537808235200829, 0.5960399277332106, 0.5651326340187369, 0.5255896680154474, 0.4982224023534228, 0.48530239441910944, 0.45961313303734697, 0.4474842753691869, 0.4336540033481597, 0.4139921794186777, 0.3988105327170428, 0.38366514595508133, 0.37668044753141405, 0.3632606996237846, 0.3546265454938493, 0.34071504247816814, 0.3376397142446808, 0.329139183560666, 0.3148056527036544, 0.3180101511815693, 0.3059466890198538, 0.29487521825386565, 0.2822128060022759, 0.28880714632107235, 0.28201088351013637, 0.2678937634275794, 0.26674019875086813, 0.2606950796330688, 0.2520918364160175, 0.2430563794190401, 0.23441568736182292, 0.2308784051775035, 0.22657839848207617, 0.22144165993909856, 0.22700664662823558], "accuracy": [0.32162198424339294, 0.6136573553085327, 0.700700044631958, 0.7289658188819885, 0.757099449634552, 0.7765156626701355, 0.7849689722061157, 0.8010830879211426, 0.8152159452438354, 0.8234050869941711, 0.8342359066009521, 0.8329150676727295, 0.8413683772087097, 0.8494254350662231, 0.8555012345314026, 0.8539162874221802, 0.8639545440673828, 0.8665962219238281, 0.8673887252807617, 0.8710870146751404, 0.8732003569602966, 0.8804649114608765, 0.8824461698532104, 0.8848236799240112, 0.8837670087814331, 0.8887861371040344, 0.8916919827461243, 0.8942015767097473, 0.8924844861030579, 0.8986923694610596, 0.9005415439605713, 0.8990886211395264, 0.9037115573883057, 0.9071456789970398, 0.908730685710907, 0.9091269373893738, 0.9116365313529968, 0.9153348207473755, 0.9157310724258423], "val_loss": [0.9468597003391811, 0.6546815974371774, 0.581140433038984, 0.5331121853419712, 0.489645038332258, 0.4544192211968558, 0.4331823928015573, 0.40791002341679167, 0.40192130633762907, 0.3852333426475525, 0.3779303176062448, 0.36061309916632517, 0.3530973025730678, 0.34169897862843107, 0.32824077776500155, 0.3287979023797171, 0.32477431637900217, 0.3259972929954529, 0.3174054026603699, 0.31263097694941927, 0.30863126686641146, 0.3113364151545933, 0.3035185933113098, 0.30990399633135113, 0.30078175238200594, 0.3063531347683498, 0.29280675309044973, 0.3017095497676304, 0.2962559461593628, 0.30226620606013704, 0.29503325053623747, 0.3026625173432486, 0.2898519550051008, 0.2903572746685573, 0.2862573266029358, 0.29317868607384817, 0.30203969138009207, 0.2942931737218584, 0.28943975482668194], "val_accuracy": [0.6396666765213013, 0.7196666598320007, 0.737333357334137, 0.7639999985694885, 0.7756666541099548, 0.7876666784286499, 0.8100000023841858, 0.8166666626930237, 0.8193333148956299, 0.8256666660308838, 0.8303333520889282, 0.840666651725769, 0.8456666469573975, 0.8543333411216736, 0.8566666841506958, 0.8566666841506958, 0.8516666889190674, 0.8553333282470703, 0.8556666374206543, 0.8666666746139526, 0.8659999966621399, 0.8646666407585144, 0.8656666874885559, 0.8659999966621399, 0.8679999709129333, 0.8643333315849304, 0.8713333606719971, 0.874666690826416, 0.8733333349227905, 0.8703333139419556, 0.8693333268165588, 0.878333330154419, 0.878333330154419, 0.8799999952316284, 0.8773333430290222, 0.8726666569709778, 0.8740000128746033, 0.8799999952316284, 0.875333309173584]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 3, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 1, 2, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 39, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8414285778999329, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 4, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0356966593104615, 1.1109512188667319, 0.8014437122084225, 0.713662900748018, 0.6538364996826329, 0.5948102792114582, 0.5639612815871672, 0.5257444995788929, 0.4961822930304696, 0.4871354343837294, 0.46018111603434186, 0.4443611049963861, 0.4311967158692309, 0.4102835059362773, 0.3968174288994317, 0.3811575438147759, 0.3747916173083104, 0.36136743812875316, 0.354749987220972, 0.3398943011629394, 0.3324672328860548, 0.32312168029195143, 0.3134643917133496, 0.31295395938633075, 0.2994131905614361, 0.29488642245487784, 0.2803334110936689, 0.2871483288751601, 0.2772747909844811, 0.2692448702415597, 0.2663060544960849, 0.26155579160382764, 0.2503419066535137, 0.2391634062296679, 0.23598342033708572, 0.2338952620259964, 0.22529851273932336, 0.2202144239706496, 0.22837706158197693, 0.21083801664562588, 0.211516896544462], "accuracy": [0.32162198424339294, 0.6135252714157104, 0.7008321285247803, 0.7290979027748108, 0.7565711140632629, 0.7761194109916687, 0.785101056098938, 0.8005547523498535, 0.8148196935653687, 0.8201030492782593, 0.8337075710296631, 0.837537944316864, 0.8405758738517761, 0.8519350290298462, 0.8543124794960022, 0.8552370667457581, 0.8627657890319824, 0.8671245574951172, 0.8689737319946289, 0.8729361891746521, 0.8749174475669861, 0.8784837126731873, 0.8809932470321655, 0.887201189994812, 0.8873332738876343, 0.8919561505317688, 0.894069492816925, 0.8934090733528137, 0.8968431949615479, 0.8981640338897705, 0.9012019634246826, 0.8992207050323486, 0.9029190540313721, 0.9109761118888855, 0.9072777628898621, 0.9093911051750183, 0.9138818979263306, 0.9126931428909302, 0.9103156924247742, 0.9191652536392212, 0.9210143685340881], "val_loss": [0.9468603474753243, 0.6545204094478062, 0.5813228062220982, 0.5332449844905308, 0.48989088194710867, 0.45343591485704693, 0.4323782239641462, 0.40619163853781565, 0.40405579124178204, 0.3847347412790571, 0.3769724369049072, 0.35898819140025545, 0.3501234310013907, 0.34263489076069426, 0.32906728982925415, 0.3296723791531154, 0.3275580746786935, 0.3270925453730992, 0.3163427710533142, 0.31686156136648996, 0.3088591439383371, 0.30929344041006906, 0.30709400347300936, 0.29765299388340544, 0.3016755240304129, 0.3047711764063154, 0.2949680004801069, 0.29639555726732525, 0.29167035647800993, 0.2987322722162519, 0.29183413301195416, 0.29184458936963764, 0.28646871873310636, 0.2876378042357309, 0.28536558151245117, 0.28674761738095966, 0.29344816718782696, 0.29794090134756906, 0.28921531779425486, 0.2928521292550223, 0.29801619052886963], "val_accuracy": [0.6396666765213013, 0.7196666598320007, 0.7379999756813049, 0.7636666893959045, 0.7743333578109741, 0.7876666784286499, 0.8103333115577698, 0.8183333277702332, 0.8143333196640015, 0.8293333053588867, 0.8336666822433472, 0.8420000076293945, 0.8476666808128357, 0.8523333072662354, 0.8569999933242798, 0.8550000190734863, 0.8543333411216736, 0.8579999804496765, 0.859000027179718, 0.8679999709129333, 0.8656666874885559, 0.8640000224113464, 0.8643333315849304, 0.8696666955947876, 0.8636666536331177, 0.8603333234786987, 0.8706666827201843, 0.874666690826416, 0.8730000257492065, 0.8700000047683716, 0.874666690826416, 0.875333309173584, 0.8826666474342346, 0.8823333382606506, 0.8809999823570251, 0.8830000162124634, 0.8756666779518127, 0.8793333172798157, 0.8786666393280029, 0.878333330154419, 0.8816666603088379]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 6, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8408571481704712, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0356967200094194, 1.1109352550958802, 0.8014129627461068, 0.7138098186001786, 0.6532682303219676, 0.5962917989412901, 0.5649564451608267, 0.5252922533202747, 0.49622072419785174, 0.4849734899980706, 0.4574164187415338, 0.44714481613938645, 0.4307773332703839, 0.40991319574857543, 0.3969692795693268, 0.3842780064354011, 0.3756229025127865, 0.35506237219621034, 0.3546123873792257, 0.33862678839105104, 0.33522624053723304, 0.3231022802712092, 0.3139771391387786, 0.3160073024454118, 0.30161741140527715, 0.2926105877836981, 0.27623486972724315, 0.2841179062642001, 0.2756240247672402, 0.2656736358706946, 0.26317601762648035, 0.2628181914135513, 0.24825651366020066, 0.23737671590476475, 0.23006531373384748, 0.2306712058950582, 0.21826691009727184, 0.2111875276681439], "accuracy": [0.32162198424339294, 0.6136573553085327, 0.7005679607391357, 0.7302865982055664, 0.7563069462776184, 0.77677983045578, 0.7833839654922485, 0.8013472557067871, 0.8161405324935913, 0.8239334225654602, 0.8342359066009521, 0.8325188159942627, 0.8409721255302429, 0.8545766472816467, 0.854708731174469, 0.8533879518508911, 0.8627657890319824, 0.8710870146751404, 0.8685774803161621, 0.8735966086387634, 0.8722757697105408, 0.8774270415306091, 0.8799365758895874, 0.8885219693183899, 0.885219931602478, 0.8926165699958801, 0.8951261639595032, 0.8943336606025696, 0.8938053250312805, 0.9021265506744385, 0.89988112449646, 0.8997490406036377, 0.9037115573883057, 0.9097873568534851, 0.9137498140335083, 0.9074098467826843, 0.91559898853302, 0.9173160791397095], "val_loss": [0.9468610286712646, 0.6542116914476667, 0.5809988805225917, 0.5334265913282122, 0.4894554785319737, 0.4536006280354091, 0.4317718744277954, 0.4078890766416277, 0.4015477980886187, 0.3870724695069449, 0.37656584807804655, 0.3596304825374058, 0.35008630582264494, 0.3428977472441537, 0.32836319719042095, 0.3258662819862366, 0.3253427743911743, 0.3268632548195975, 0.31320364134652273, 0.3127384441239493, 0.305766156741551, 0.3060976692608425, 0.30451646872929167, 0.3082123228481838, 0.2976201857839312, 0.3080527441842215, 0.29378571680613924, 0.29767102003097534, 0.290916383266449, 0.30112255471093313, 0.29284145150865826, 0.2981118474687849, 0.28602324213300434, 0.29162146363939556, 0.2833284820829119, 0.28862946374075754, 0.2955025945390974, 0.2911575606891087], "val_accuracy": [0.6396666765213013, 0.7203333377838135, 0.7363333106040955, 0.765333354473114, 0.7766666412353516, 0.7870000004768372, 0.8106666803359985, 0.8180000185966492, 0.8193333148956299, 0.8240000009536743, 0.8346666693687439, 0.8386666774749756, 0.8476666808128357, 0.8553333282470703, 0.8600000143051147, 0.8569999933242798, 0.8576666712760925, 0.859000027179718, 0.8576666712760925, 0.8636666536331177, 0.8653333187103271, 0.8683333396911621, 0.8653333187103271, 0.8666666746139526, 0.8656666874885559, 0.8619999885559082, 0.8709999918937683, 0.8730000257492065, 0.874666690826416, 0.8703333139419556, 0.8700000047683716, 0.8769999742507935, 0.8843333125114441, 0.8769999742507935, 0.8809999823570251, 0.8823333382606506, 0.8813333511352539, 0.8766666650772095]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.834857165813446, "mapping_values": [1, 20, 20, 11, 9, 4, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0356970820617777, 1.111300403699269, 0.8019602316135366, 0.7135631034025002, 0.6535494058690507, 0.5953523827471423, 0.5635029126892095, 0.5253291767562432, 0.49729845870550454, 0.4853614799382113, 0.45961830748574545, 0.44972317067387396, 0.433146494042053, 0.41636210306445604, 0.3975079912102344, 0.3845508770424031, 0.375390387800911, 0.36365216543740286, 0.3560008607709318, 0.34229165704935893, 0.33750082952959537, 0.32966979560661847, 0.31441727537268643, 0.31402807455525156, 0.3035025401138091, 0.29602989306807, 0.27583130966592, 0.28537302348025173, 0.28081657939724963, 0.26520805681039944, 0.2596675168686948, 0.25630917056967883, 0.2501648793705797, 0.24156541334694687, 0.23484758259424712, 0.23971087676564606, 0.22874972693058226, 0.216498581636237, 0.2228645946623359, 0.20096481681704567], "accuracy": [0.32162198424339294, 0.6139215230941772, 0.6991150379180908, 0.7284374833106995, 0.7572315335273743, 0.7766477465629578, 0.785101056098938, 0.8006868362426758, 0.8138951063156128, 0.8212917447090149, 0.8335754871368408, 0.8323867321014404, 0.8432175517082214, 0.8488970994949341, 0.8545766472816467, 0.8506141901016235, 0.863029956817627, 0.8660678863525391, 0.870030403137207, 0.8712190985679626, 0.8768987059593201, 0.8755778670310974, 0.878879964351654, 0.885219931602478, 0.8844274282455444, 0.8870691061019897, 0.8943336606025696, 0.8943336606025696, 0.8906353116035461, 0.9026548862457275, 0.9029190540313721, 0.9012019634246826, 0.9009377956390381, 0.9083344340324402, 0.9093911051750183, 0.9056927561759949, 0.9113723635673523, 0.9167877435684204, 0.9153348207473755, 0.9223352074623108], "val_loss": [0.9468481540679932, 0.6548891237803868, 0.5821264982223511, 0.5326223714011056, 0.4899164778845651, 0.4533205372946603, 0.43303913729531424, 0.40947859627859934, 0.40694488797869, 0.3855982082230704, 0.38073315790721346, 0.364675121647971, 0.3575035503932408, 0.3435009462492807, 0.33087061984198435, 0.3345974768911089, 0.33250012568065096, 0.32699023825781687, 0.3142539773668562, 0.31707716839654104, 0.3108518804822649, 0.3100018160683768, 0.3021802817072187, 0.31433945894241333, 0.297613867691585, 0.30254673957824707, 0.29362681933811735, 0.2969332848276411, 0.28621270826884676, 0.2965532967022487, 0.29281956808907644, 0.2993170533861433, 0.2844403386116028, 0.29260248797280447, 0.2829235536711557, 0.2940787247249058, 0.290959826537541, 0.2991927947316851, 0.2894262671470642, 0.30800810030528475], "val_accuracy": [0.6399999856948853, 0.7200000286102295, 0.7363333106040955, 0.765333354473114, 0.7743333578109741, 0.7889999747276306, 0.8113333582878113, 0.8149999976158142, 0.8149999976158142, 0.8309999704360962, 0.8293333053588867, 0.8356666564941406, 0.843999981880188, 0.8553333282470703, 0.8576666712760925, 0.8550000190734863, 0.8526666760444641, 0.8546666502952576, 0.8640000224113464, 0.8643333315849304, 0.8650000095367432, 0.8659999966621399, 0.8709999918937683, 0.8640000224113464, 0.871999979019165, 0.8690000176429749, 0.8743333220481873, 0.8756666779518127, 0.878333330154419, 0.8730000257492065, 0.871999979019165, 0.875333309173584, 0.8816666603088379, 0.8803333044052124, 0.8826666474342346, 0.8773333430290222, 0.8813333511352539, 0.8736666440963745, 0.8756666779518127, 0.8769999742507935]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 48, 17, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.7705714106559753, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2158710125525234, 1.6571928241454126, 1.2191703595883339, 1.0314741375786107, 0.9331440244447191, 0.8705568383115079, 0.8169458738612209, 0.7774996834660345, 0.7418179317724278, 0.7545317162249964, 0.7220986463043905, 0.7033943695131467, 0.6799076088210768, 0.6729435856316178, 0.6727318121867015, 0.6523655854857373, 0.6507443740950158], "accuracy": [0.24620261788368225, 0.4834235906600952, 0.5691454410552979, 0.6390172839164734, 0.6535464525222778, 0.6782459616661072, 0.6931713223457336, 0.709021270275116, 0.728701651096344, 0.717870831489563, 0.7321357727050781, 0.7366266250610352, 0.748778223991394, 0.7508915662765503, 0.7466648817062378, 0.755118191242218, 0.752212405204773], "val_loss": [1.673194510596139, 0.9661991596221924, 0.8107518468584333, 0.6891669205256871, 0.6405794109616961, 0.6149313620158604, 0.5882147891180856, 0.5910425526755196, 0.5875009298324585, 0.5317523309162685, 0.5201987709317889, 0.5072317293712071, 0.5285078287124634, 0.516045161655971, 0.5186137471880231, 0.49544683524540495, 0.5290904896599906], "val_accuracy": [0.5376666784286499, 0.653333306312561, 0.6823333501815796, 0.7076666951179504, 0.7326666712760925, 0.7383333444595337, 0.7369999885559082, 0.7446666955947876, 0.7366666793823242, 0.7703333497047424, 0.7716666460037231, 0.7803333401679993, 0.7693333625793457, 0.7703333497047424, 0.7680000066757202, 0.7566666603088379, 0.7446666955947876]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 1, 2, 5, 2, 2, 2, 5, 3, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 1, 0, 0, 0, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 51, 17, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.7680000066757202, "mapping_values": [1, 20, 20, 11, 9, 4, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.pow(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, grad)))), tf.math.multiply(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.222889851648353, 1.719685751465034, 1.278582110349544, 1.0762962081161205, 0.9684760106427086, 0.8806789916630167, 0.8626117556165348, 0.7992888057882193, 0.7653175876943931, 0.7809699238755873, 0.740726164193154, 0.7261620225010137, 0.6917641014077204, 0.6904765362705553, 0.7015482049025502, 0.6664393274161511, 0.67179524958362], "accuracy": [0.23959846794605255, 0.4690265357494354, 0.5482763051986694, 0.6267336010932922, 0.6420552134513855, 0.6767930388450623, 0.6806234121322632, 0.7058512568473816, 0.7205125093460083, 0.7066437602043152, 0.7246070504188538, 0.7292299270629883, 0.7405890822410583, 0.7420420050621033, 0.7346453666687012, 0.7500990629196167, 0.7456082701683044], "val_loss": [1.7078922135489327, 1.0204872744424003, 0.8519411087036133, 0.7308884518487113, 0.6385699510574341, 0.6558617864336286, 0.6187911544527326, 0.6080202715737479, 0.6274209192820958, 0.5427948236465454, 0.534558892250061, 0.519838809967041, 0.5496442488261631, 0.5294289418629238, 0.5326229333877563, 0.5156623295375279, 0.5338023219789777], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6693333387374878, 0.6916666626930237, 0.7393333315849304, 0.7173333168029785, 0.7223333120346069, 0.7409999966621399, 0.7160000205039978, 0.762333333492279, 0.7646666765213013, 0.7829999923706055, 0.7563333511352539, 0.7570000290870667, 0.7576666474342346, 0.7490000128746033, 0.7463333606719971]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 1, 2, 5, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 2, 0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.7382857203483582, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.035452517976913, 1.2265398544862742, 0.9304948086043264, 0.8563489654769263, 0.7386776860741859, 0.6931756834753311, 0.6465444471212253, 0.6150645608238147, 0.5792565566831183, 0.550968600176014, 0.5424345879191972, 0.5493429193737925, 0.506123783558178, 0.5183677976204814, 0.5277852066173183, 0.5339900400770528, 0.521009921082857, 0.502094559689334], "accuracy": [0.31158366799354553, 0.5848633050918579, 0.6586976647377014, 0.6960771083831787, 0.7181349992752075, 0.7403249144554138, 0.7623828053474426, 0.7607977986335754, 0.7858935594558716, 0.7906485199928284, 0.7942147850990295, 0.7947431206703186, 0.8061022162437439, 0.8020076751708984, 0.8035926818847656, 0.8017435073852539, 0.8005547523498535, 0.8152159452438354], "val_loss": [0.8979520797729492, 0.6866122654506138, 0.6543985945837838, 0.5296540260314941, 0.5160400526864188, 0.47763672896793913, 0.45868810585566927, 0.4537743500300816, 0.43297656944819857, 0.4137155669076102, 0.4221968395369394, 0.39898739542279926, 0.3887121421950204, 0.410315888268607, 0.42166604314531597, 0.42617503234318327, 0.43861218861171175, 0.4507196119853428], "val_accuracy": [0.5849999785423279, 0.6966666579246521, 0.7286666631698608, 0.7580000162124634, 0.7590000033378601, 0.7879999876022339, 0.7906666398048401, 0.7946666479110718, 0.8113333582878113, 0.812333345413208, 0.8186666369438171, 0.824999988079071, 0.8383333086967468, 0.8346666693687439, 0.8306666612625122, 0.8220000267028809, 0.8209999799728394, 0.8140000104904175]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 5, 4, 1, 2, 5, 2, 2, 1, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 1, 0, 0, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 76, 17, 30, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.5391428470611572, "mapping_values": [1, 20, 20, 11, 9, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.square(tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, alpha), grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.035444555391552, 1.2261888482047583, 0.9314993752889692, 0.8561319083018688, 0.7384819241641393, 0.6936526782618789, 0.6422226973308028, 0.6112773353082629, 0.5769259619627803, 0.5508801904431329, 0.5549255735476444, 0.5340642595272244, 0.5337352078226437, 0.5418253059337451, 0.5083515539916909, 0.522436742336365, 0.5230215778361537, 0.5110430175035291, 0.5039206404003249, 0.5034130518588533, 0.4805329550904463, 0.5438090039124626, 0.5417733256449364, 0.5430877742797565], "accuracy": [0.3117157518863678, 0.5840708017349243, 0.6588297486305237, 0.6954167485237122, 0.7193237543106079, 0.7388719916343689, 0.7680623531341553, 0.7598732113838196, 0.7844406366348267, 0.7877426743507385, 0.7917051911354065, 0.7998943328857422, 0.8050455451011658, 0.7954035401344299, 0.8059701323509216, 0.7994980812072754, 0.8033285140991211, 0.8067626357078552, 0.8201030492782593, 0.8206313848495483, 0.8161405324935913, 0.800818920135498, 0.8030643463134766, 0.7938185334205627], "val_loss": [0.898014886038644, 0.6862524747848511, 0.6540048633302961, 0.5299269982746669, 0.5149690423692975, 0.48225317682538715, 0.4594402142933437, 0.446729166167123, 0.4405935491834368, 0.42714691162109375, 0.41165511097226826, 0.4117956416947501, 0.4232385584286281, 0.39385186774390085, 0.41360420840127127, 0.4047870380537851, 0.4205368842397417, 0.43015467269080027, 0.4264801825795855, 0.44669772897447857, 0.43730404547282625, 0.458485552242824, 0.5072603055409023, 0.4915778466633388], "val_accuracy": [0.5849999785423279, 0.6956666707992554, 0.7256666421890259, 0.7553333044052124, 0.7586666941642761, 0.7850000262260437, 0.7889999747276306, 0.7940000295639038, 0.8013333082199097, 0.8133333325386047, 0.8259999752044678, 0.8186666369438171, 0.815666675567627, 0.8303333520889282, 0.8286666870117188, 0.8220000267028809, 0.828000009059906, 0.831333339214325, 0.8376666903495789, 0.8296666741371155, 0.831333339214325, 0.8286666870117188, 0.8009999990463257, 0.8159999847412109]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [9, 5, 6, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [1, 3, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 9, 7, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [3595090710537.1104, 4488247442205977.0, 2.8055805703944797e+17, 4.86222468098357e+18, 4.363205338027385e+19, 2.597242349464951e+20, 1.1325426104099241e+21, 4.2004826716529623e+21, 1.2647600338536474e+22, 3.512037914614619e+22, 8.615792771307295e+22, 2.0343974584799812e+23, 4.4333983061953756e+23, 9.353466775277648e+23, 1.9267404981810216e+24, 3.726416842504869e+24], "accuracy": [0.09470347315073013, 0.10487385839223862, 0.09879804402589798, 0.09906221181154251, 0.10170386731624603, 0.10038304328918457, 0.10474177449941635, 0.1014397069811821, 0.10355303436517715, 0.09602430462837219, 0.10289261490106583, 0.10632677376270294, 0.10249637067317963, 0.10051512718200684, 0.10117553919553757, 0.09708096832036972], "val_loss": [56443248649362.29, 2.2280566209062036e+16, 7.830955655582936e+17, 9.961705090022638e+18, 7.24253762793725e+19, 3.6335474058767965e+20, 1.442909571355984e+21, 4.895281064662629e+21, 1.4978334457915622e+22, 3.957309389690753e+22, 9.357841286574454e+22, 2.1279792866822043e+23, 4.742335289208276e+23, 9.280448651213379e+23, 1.9098437071765373e+24, 3.643529655360433e+24], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10133333504199982, 0.0989999994635582, 0.09833333641290665, 0.10300000011920929, 0.0963333323597908, 0.10599999874830246, 0.09533333033323288, 0.09666666388511658, 0.10499999672174454, 0.09700000286102295, 0.09566666930913925]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 1, 2, 9, 2, 2, 6, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 36, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, alpha), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))))), tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [313.5467546659769, 1.706691065895371e+27, 4.144261636155833, 8.431342052635562, 14.28553718614257, 20.841686906563908], "accuracy": [0.04213446006178856, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [4764659126.857142, 2.6180337497166226, 5.409117153712681, 10.034073148454938, 15.478185381208148, 21.31212397984096], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 1, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [1, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)))), alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 8, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.sqrt(grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3026948262041964, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 1, 8, 2, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 12, 9, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.4709513216065284, 14.43010305763157, 40.61924985049974, 84.40691853791432, 150.7977675091652, 247.22510923285606], "accuracy": [0.09166556596755981, 0.10342095047235489, 0.09919429570436478, 0.09945846349000931, 0.10170386731624603, 0.10130762308835983], "val_loss": [5.022316523960659, 16.82879420689174, 38.94046129499163, 73.97979082380023, 125.08245849609375, 195.65036010742188], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 1, 4, 9, 2, 2, 2, 5, 6, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 1, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [29, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3026948262041964, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 5, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 1, 2], [33, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.pow(alpha, tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [52029.692111231096, 974393.3584731211, 4572843.20743627, 12496846.776911901, 26753171.84942544, 49578810.35583146], "accuracy": [0.09470347315073013, 0.10500594228506088, 0.09906221181154251, 0.09893012791872025, 0.10302469879388809, 0.10117553919553757], "val_loss": [193792.2142857143, 1535492.357142857, 5166409.571428572, 12227870.57142857, 23861208.0, 41207785.14285714], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], [1, 5, 6, 1, 2, 5, 2, 2, 2, 8, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 7, 6, 0, 3, 1, 8, 0, 1, 6, 8, 4, 2, 5, 3, 4, 0, 7, 8, 7, 4, 5, 2, 6, 0, 2, 2, 3, 3, 5, 1, 9, 4, 1, 0, 1, 3, 9, 1, 9], [2, 2, 1, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2, 1, 2, 0, 3, 3, 3, 1], [64, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.07257142663002014, "mapping_values": [1, 103, 103, 64, 39, 10, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 67, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.pow(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.sqrt(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))))))))))))), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), grad), tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(grad)), grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))), grad)))), grad)))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad))))))), grad), alpha)))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.304506564546554, 2.3025094998306397, 2.3012483270176807, 2.2998730632465563, 2.3003539142198, 2.299272210039656, 2.2992150342034594, 2.300397344253413, 2.2989284310752156, 2.299949704002569, 2.2989271085464784, 2.300774511770093, 2.3000340328523907, 2.2999494085537364, 2.2995614011006476, 2.3005684330604805], "accuracy": [0.08281600475311279, 0.09140139818191528, 0.09509972482919693, 0.09259014576673508, 0.0944393053650856, 0.09298639744520187, 0.09721305221319199, 0.09879804402589798, 0.10276053100824356, 0.09668471664190292, 0.10091137140989304, 0.10302469879388809, 0.10038304328918457, 0.09668471664190292, 0.09945846349000931, 0.09787346422672272], "val_loss": [1.97070278440203, 1.9702179772513253, 1.969764164515904, 1.9694722039358956, 1.9692984989711217, 1.9693045616149902, 1.9693961824689592, 1.96946838923863, 1.9695008141653878, 1.9694304466247559, 1.9694347381591797, 1.9695023809160506, 1.9696351460048132, 1.969811167035784, 1.9700519016810827, 1.970350674220494], "val_accuracy": [0.041333332657814026, 0.045666664838790894, 0.05400000140070915, 0.057999998331069946, 0.06300000101327896, 0.06666667014360428, 0.07000000029802322, 0.07400000095367432, 0.08166666328907013, 0.0846666693687439, 0.09033333510160446, 0.09000000357627869, 0.08833333104848862, 0.08733333647251129, 0.08266666531562805, 0.08100000023841858]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 2, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [2, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 1, 2], [12, 32, 85]], "fitness": -0.07028571516275406, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [2.534487170849368, 2.3086850943897286, 3.0133844270304353, 3.476704709234806, 2.3055784786382074, 2.3034627078278915, 2.303184937901737, 2.3029826286052906, 2.3030010251604636], "accuracy": [0.20618148148059845, 0.09945846349000931, 0.19284109771251678, 0.10051512718200684, 0.09879804402589798, 0.09866596013307571, 0.09536388516426086, 0.09509972482919693, 0.09734513610601425], "val_loss": [1.9875026430402483, 1.9737057004656111, 7.394845962524414, 1.9773191043308802, 1.9745325360979353, 1.97384854725429, 1.9737371035984583, 1.973691395350865, 1.9736777714320592], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 2, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [2, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3046222279777524, 2.303175268045994, 2.302518134166882, 2.301601939748669, 2.302760546343784, 2.3016946283644533], "accuracy": [0.08321225643157959, 0.09166556596755981, 0.09021265059709549, 0.09166556596755981, 0.09087307006120682, 0.08691058307886124], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]